2023-06-04 21:03:38.529 936:link-prediction        DEBUG  main message
2023-06-04 21:03:38.529 942:link-prediction        WARNING device: cuda, n_gpu: 1
2023-06-04 21:03:39.637 957:link-prediction        INFO   Load Dataset
2023-06-04 21:05:03.700 249:link-prediction        INFO   Load Span file and Graph data, data path: ../datasets/java250/graphs/unixcoder/unixcoder_train_ddg_cleaned.pt
2023-06-04 21:05:06.331 301:link-prediction        INFO   Labels Counter({1: 33191, 0: 33189})
2023-06-04 21:05:07.453 249:link-prediction        INFO   Load Span file and Graph data, data path: ../datasets/java250/graphs/unixcoder/unixcoder_valid_ddg_cleaned.pt
2023-06-04 21:05:08.541 301:link-prediction        INFO   Labels Counter({1: 11126, 0: 11125})
2023-06-04 21:05:09.653 249:link-prediction        INFO   Load Span file and Graph data, data path: ../datasets/java250/graphs/unixcoder/unixcoder_test_ddg_cleaned.pt
2023-06-04 21:05:11.027 301:link-prediction        INFO   Labels Counter({0: 10933, 1: 10933})
2023-06-04 21:05:11.028 306:link-prediction        INFO   *** Example ***
2023-06-04 21:05:11.028 307:link-prediction        INFO   idx: s721980198_main
2023-06-04 21:05:11.028 308:link-prediction        INFO   label: 1
2023-06-04 21:05:11.029 309:link-prediction        INFO   input_tokens_1: ['public', '_static', '_void', '_main', '(', 'String', '[]', '_args', ')', '_throws', '_Exception']
2023-06-04 21:05:11.029 317:link-prediction        INFO   input_ids_1: 1 12
2023-06-04 21:05:11.029 324:link-prediction        INFO   span_arry_1: [1, 11] [1, 11], mask 1 0
2023-06-04 21:05:11.029 334:link-prediction        INFO   input_tokens_reverse_1: <encoder-only> </s> public Ġstatic Ġvoid Ġmain ( String [] Ġargs )
2023-06-04 21:05:11.029 344:link-prediction        INFO   input_tokens_2: ['out', '_=', '_new', '_PrintWriter', '(', 'new', '_Output', 'StreamWriter', '(', 'System', '.', 'out', '))']
2023-06-04 21:05:11.029 352:link-prediction        INFO   input_ids_2: 27 40
2023-06-04 21:05:11.029 359:link-prediction        INFO   span_arry_2: [27, 39] [27, 39], mask 1 0
2023-06-04 21:05:11.030 369:link-prediction        INFO   input_tokens_reverse_2: )); ĠPrintWriter Ġout Ġ= Ġnew ĠPrintWriter ( new ĠOutput StreamWriter ( System .
2023-06-04 21:05:11.030 306:link-prediction        INFO   *** Example ***
2023-06-04 21:05:11.030 307:link-prediction        INFO   idx: s398466888_main
2023-06-04 21:05:11.030 308:link-prediction        INFO   label: 0
2023-06-04 21:05:11.030 309:link-prediction        INFO   input_tokens_1: ['sc', '.', 'close', '()']
2023-06-04 21:05:11.030 317:link-prediction        INFO   input_ids_1: 98 102
2023-06-04 21:05:11.030 324:link-prediction        INFO   span_arry_1: [98, 101] [98, 101], mask 1 0
2023-06-04 21:05:11.030 334:link-prediction        INFO   input_tokens_reverse_1: "); Ġ} Ġsc .
2023-06-04 21:05:11.031 344:link-prediction        INFO   input_tokens_2: ['string', '1', '_=', '_str', '.', 'substring', '(', '0', ',', '_str', 'Len', ')']
2023-06-04 21:05:11.031 352:link-prediction        INFO   input_ids_2: 44 56
2023-06-04 21:05:11.031 359:link-prediction        INFO   span_arry_2: [44, 55] [44, 55], mask 1 0
2023-06-04 21:05:11.031 369:link-prediction        INFO   input_tokens_reverse_2: ; ĠString Ġstring 1 Ġ= Ġstr . substring ( 0 , Ġstr
2023-06-04 21:05:11.031 306:link-prediction        INFO   *** Example ***
2023-06-04 21:05:11.031 307:link-prediction        INFO   idx: s352813197_main
2023-06-04 21:05:11.031 308:link-prediction        INFO   label: 1
2023-06-04 21:05:11.032 309:link-prediction        INFO   input_tokens_1: ['Math', '.', 'pow', '((', 'base', '),', '_2', ')', '_==', '_N']
2023-06-04 21:05:11.032 317:link-prediction        INFO   input_ids_1: 73 83
2023-06-04 21:05:11.032 324:link-prediction        INFO   span_arry_1: [73, 82] [73, 82], mask 1 0
2023-06-04 21:05:11.032 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( Math . pow (( base ), Ġ2 )
2023-06-04 21:05:11.033 344:link-prediction        INFO   input_tokens_2: ['void']
2023-06-04 21:05:11.033 352:link-prediction        INFO   input_ids_2: 3 4
2023-06-04 21:05:11.033 359:link-prediction        INFO   span_arry_2: [3, 3] [3, 3], mask 1 0
2023-06-04 21:05:11.033 369:link-prediction        INFO   input_tokens_reverse_2: public
2023-06-04 21:05:11.033 306:link-prediction        INFO   *** Example ***
2023-06-04 21:05:11.033 307:link-prediction        INFO   idx: s898251323_main
2023-06-04 21:05:11.034 308:link-prediction        INFO   label: 1
2023-06-04 21:05:11.034 309:link-prediction        INFO   input_tokens_1: ['new', '_int', '[', 'N', ']']
2023-06-04 21:05:11.034 317:link-prediction        INFO   input_ids_1: 34 39
2023-06-04 21:05:11.034 324:link-prediction        INFO   span_arry_1: [34, 38] [34, 38], mask 1 0
2023-06-04 21:05:11.035 334:link-prediction        INFO   input_tokens_reverse_1: Ġa Ġ= Ġnew Ġint [
2023-06-04 21:05:11.035 344:link-prediction        INFO   input_tokens_2: ['void']
2023-06-04 21:05:11.035 352:link-prediction        INFO   input_ids_2: 3 4
2023-06-04 21:05:11.035 359:link-prediction        INFO   span_arry_2: [3, 3] [3, 3], mask 1 0
2023-06-04 21:05:11.035 369:link-prediction        INFO   input_tokens_reverse_2: public
2023-06-04 21:05:11.036 306:link-prediction        INFO   *** Example ***
2023-06-04 21:05:11.036 307:link-prediction        INFO   idx: s671895069_main
2023-06-04 21:05:11.036 308:link-prediction        INFO   label: 1
2023-06-04 21:05:11.036 309:link-prediction        INFO   input_tokens_1: ['public', '_static', '_void', '_main', '(', 'String', '[]', '_args', ')']
2023-06-04 21:05:11.037 317:link-prediction        INFO   input_ids_1: 1 10
2023-06-04 21:05:11.037 324:link-prediction        INFO   span_arry_1: [1, 9] [1, 9], mask 1 0
2023-06-04 21:05:11.037 334:link-prediction        INFO   input_tokens_reverse_1: <encoder-only> </s> public Ġstatic Ġvoid Ġmain ( String []
2023-06-04 21:05:11.037 344:link-prediction        INFO   input_tokens_2: ['i', '_=', '_0']
2023-06-04 21:05:11.037 352:link-prediction        INFO   input_ids_2: 41 44
2023-06-04 21:05:11.038 359:link-prediction        INFO   span_arry_2: [41, 43] [41, 43], mask 1 0
2023-06-04 21:05:11.038 369:link-prediction        INFO   input_tokens_reverse_2: Ġ( int Ġi
2023-06-04 21:05:11.038 306:link-prediction        INFO   *** Example ***
2023-06-04 21:05:11.038 307:link-prediction        INFO   idx: s905170057_main
2023-06-04 21:05:11.038 308:link-prediction        INFO   label: 1
2023-06-04 21:05:11.039 309:link-prediction        INFO   input_tokens_1: ['en', 'qu', 'ene', '(', 'process', ')']
2023-06-04 21:05:11.039 317:link-prediction        INFO   input_ids_1: 198 204
2023-06-04 21:05:11.039 324:link-prediction        INFO   span_arry_1: [198, 203] [198, 203], mask 1 0
2023-06-04 21:05:11.039 334:link-prediction        INFO   input_tokens_reverse_1: Time ; Ġen qu ene (
2023-06-04 21:05:11.040 344:link-prediction        INFO   input_tokens_2: ['void']
2023-06-04 21:05:11.040 352:link-prediction        INFO   input_ids_2: 3 4
2023-06-04 21:05:11.040 359:link-prediction        INFO   span_arry_2: [3, 3] [3, 3], mask 1 0
2023-06-04 21:05:11.040 369:link-prediction        INFO   input_tokens_reverse_2: public
2023-06-04 21:05:11.040 306:link-prediction        INFO   *** Example ***
2023-06-04 21:05:11.041 307:link-prediction        INFO   idx: s184535494_pow
2023-06-04 21:05:11.041 308:link-prediction        INFO   label: 0
2023-06-04 21:05:11.041 309:link-prediction        INFO   input_tokens_1: ['return', '_res', ';']
2023-06-04 21:05:11.041 317:link-prediction        INFO   input_ids_1: 57 60
2023-06-04 21:05:11.041 324:link-prediction        INFO   span_arry_1: [57, 59] [57, 59], mask 1 0
2023-06-04 21:05:11.042 334:link-prediction        INFO   input_tokens_reverse_1: Ġ} Ġ} Ġreturn
2023-06-04 21:05:11.042 344:link-prediction        INFO   input_tokens_2: ['long', '_pow', '(', 'long', '_x', ',', '_long', '_n', ')']
2023-06-04 21:05:11.042 352:link-prediction        INFO   input_ids_2: 1 10
2023-06-04 21:05:11.042 359:link-prediction        INFO   span_arry_2: [1, 9] [1, 9], mask 1 0
2023-06-04 21:05:11.043 369:link-prediction        INFO   input_tokens_reverse_2: <encoder-only> </s> long Ġpow ( long Ġx , Ġlong
2023-06-04 21:05:11.043 306:link-prediction        INFO   *** Example ***
2023-06-04 21:05:11.043 307:link-prediction        INFO   idx: s115618733_main
2023-06-04 21:05:11.043 308:link-prediction        INFO   label: 1
2023-06-04 21:05:11.044 309:link-prediction        INFO   input_tokens_1: ['public', '_static', '_void', '_main', '(', 'String', '[]', '_args', ')', '_throws', '_IOException']
2023-06-04 21:05:11.044 317:link-prediction        INFO   input_ids_1: 1 12
2023-06-04 21:05:11.044 324:link-prediction        INFO   span_arry_1: [1, 11] [1, 11], mask 1 0
2023-06-04 21:05:11.044 334:link-prediction        INFO   input_tokens_reverse_1: <encoder-only> </s> public Ġstatic Ġvoid Ġmain ( String [] Ġargs )
2023-06-04 21:05:11.044 344:link-prediction        INFO   input_tokens_2: ['x', '_=', '_sc', '.', 'nextInt', '()']
2023-06-04 21:05:11.045 352:link-prediction        INFO   input_ids_2: 34 40
2023-06-04 21:05:11.045 359:link-prediction        INFO   span_arry_2: [34, 39] [34, 39], mask 1 0
2023-06-04 21:05:11.045 369:link-prediction        INFO   input_tokens_reverse_2: (); Ġint Ġx Ġ= Ġsc .
2023-06-04 21:05:11.045 306:link-prediction        INFO   *** Example ***
2023-06-04 21:05:11.045 307:link-prediction        INFO   idx: s516689216_readNums
2023-06-04 21:05:11.046 308:link-prediction        INFO   label: 1
2023-06-04 21:05:11.046 309:link-prediction        INFO   input_tokens_1: ['read', 'F', 'ld', 's', '()']
2023-06-04 21:05:11.046 317:link-prediction        INFO   input_ids_1: 12 17
2023-06-04 21:05:11.046 324:link-prediction        INFO   span_arry_1: [12, 16] [12, 16], mask 1 0
2023-06-04 21:05:11.047 334:link-prediction        INFO   input_tokens_reverse_1: s Ġ= Ġread F ld
2023-06-04 21:05:11.047 344:link-prediction        INFO   input_tokens_2: ['int', '[]']
2023-06-04 21:05:11.047 352:link-prediction        INFO   input_ids_2: 1 3
2023-06-04 21:05:11.047 359:link-prediction        INFO   span_arry_2: [1, 2] [1, 2], mask 1 0
2023-06-04 21:05:11.047 369:link-prediction        INFO   input_tokens_reverse_2: <encoder-only> </s>
2023-06-04 21:05:11.048 997:link-prediction        INFO   Finishing loading Dataset
2023-06-04 21:05:11.072 1006:link-prediction        INFO   Probimg Model Parameters 3843
2023-06-04 21:05:11.073 1007:link-prediction        INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/java250/graphs', dataset='java250', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=2, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ddg', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../link_prediction/java250_res/random/saved_unixcodermodels/1/ddg_10', posratio=0.5, seed=435, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-04 21:05:12.891 472:link-prediction        INFO   ***** Running training *****
2023-06-04 21:05:12.891 473:link-prediction        INFO     Num examples = 66380
2023-06-04 21:05:12.892 474:link-prediction        INFO     Num Epochs = 2
2023-06-04 21:05:12.892 475:link-prediction        INFO     Instantaneous batch size per GPU = 64
2023-06-04 21:05:12.892 479:link-prediction        INFO     Total train batch size = 64
2023-06-04 21:05:12.892 483:link-prediction        INFO     Gradient Accumulation steps = 1
2023-06-04 21:05:12.892 486:link-prediction        INFO     Total optimization steps = 2076
2023-06-04 21:05:23.938 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:05:23.939 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:05:23.939 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:05:52.613 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:05:52.613 650:link-prediction        INFO     eval_acc = 0.7722
2023-06-04 21:05:52.614 650:link-prediction        INFO     eval_f1 = 0.7183
2023-06-04 21:05:52.614 650:link-prediction        INFO     eval_mcc = 0.5894
2023-06-04 21:05:52.614 650:link-prediction        INFO     eval_precision = 0.9413
2023-06-04 21:05:52.614 650:link-prediction        INFO     eval_recall = 0.5807
2023-06-04 21:05:52.614 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:05:52.614 543:link-prediction        INFO     ********************
2023-06-04 21:05:52.614 544:link-prediction        INFO     Best f1:0.7183
2023-06-04 21:05:52.615 545:link-prediction        INFO     ********************
2023-06-04 21:05:52.619 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/1/ddg_10/checkpoint-best-f1/model.bin
2023-06-04 21:05:52.620 565:link-prediction        INFO     ********************
2023-06-04 21:05:52.620 566:link-prediction        INFO     Best MCC:0.5894
2023-06-04 21:05:52.620 567:link-prediction        INFO     ********************
2023-06-04 21:05:52.623 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/1/ddg_10/checkpoint-best-mcc/model.bin
2023-06-04 21:06:01.106 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:06:01.106 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:06:01.106 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:06:29.675 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:06:29.676 650:link-prediction        INFO     eval_acc = 0.7814
2023-06-04 21:06:29.676 650:link-prediction        INFO     eval_f1 = 0.73
2023-06-04 21:06:29.676 650:link-prediction        INFO     eval_mcc = 0.6087
2023-06-04 21:06:29.676 650:link-prediction        INFO     eval_precision = 0.9546
2023-06-04 21:06:29.676 650:link-prediction        INFO     eval_recall = 0.591
2023-06-04 21:06:29.676 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:06:29.676 543:link-prediction        INFO     ********************
2023-06-04 21:06:29.676 544:link-prediction        INFO     Best f1:0.73
2023-06-04 21:06:29.677 545:link-prediction        INFO     ********************
2023-06-04 21:06:29.680 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/1/ddg_10/checkpoint-best-f1/model.bin
2023-06-04 21:06:29.680 565:link-prediction        INFO     ********************
2023-06-04 21:06:29.680 566:link-prediction        INFO     Best MCC:0.6087
2023-06-04 21:06:29.680 567:link-prediction        INFO     ********************
2023-06-04 21:06:29.682 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/1/ddg_10/checkpoint-best-mcc/model.bin
2023-06-04 21:06:39.086 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:06:39.086 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:06:39.086 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:07:08.237 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:07:08.237 650:link-prediction        INFO     eval_acc = 0.7924
2023-06-04 21:07:08.238 650:link-prediction        INFO     eval_f1 = 0.7833
2023-06-04 21:07:08.238 650:link-prediction        INFO     eval_mcc = 0.5868
2023-06-04 21:07:08.238 650:link-prediction        INFO     eval_precision = 0.8191
2023-06-04 21:07:08.238 650:link-prediction        INFO     eval_recall = 0.7505
2023-06-04 21:07:08.238 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:07:08.238 543:link-prediction        INFO     ********************
2023-06-04 21:07:08.239 544:link-prediction        INFO     Best f1:0.7833
2023-06-04 21:07:08.239 545:link-prediction        INFO     ********************
2023-06-04 21:07:08.242 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/1/ddg_10/checkpoint-best-f1/model.bin
2023-06-04 21:07:16.056 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:07:16.057 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:07:16.057 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:07:44.799 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:07:44.800 650:link-prediction        INFO     eval_acc = 0.8012
2023-06-04 21:07:44.800 650:link-prediction        INFO     eval_f1 = 0.7667
2023-06-04 21:07:44.800 650:link-prediction        INFO     eval_mcc = 0.6306
2023-06-04 21:07:44.800 650:link-prediction        INFO     eval_precision = 0.9276
2023-06-04 21:07:44.801 650:link-prediction        INFO     eval_recall = 0.6533
2023-06-04 21:07:44.801 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:07:44.801 565:link-prediction        INFO     ********************
2023-06-04 21:07:44.801 566:link-prediction        INFO     Best MCC:0.6306
2023-06-04 21:07:44.801 567:link-prediction        INFO     ********************
2023-06-04 21:07:44.831 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/1/ddg_10/checkpoint-best-mcc/model.bin
2023-06-04 21:07:53.887 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:07:53.888 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:07:53.888 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:08:23.087 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:08:23.088 650:link-prediction        INFO     eval_acc = 0.7943
2023-06-04 21:08:23.088 650:link-prediction        INFO     eval_f1 = 0.7502
2023-06-04 21:08:23.088 650:link-prediction        INFO     eval_mcc = 0.6292
2023-06-04 21:08:23.088 650:link-prediction        INFO     eval_precision = 0.9552
2023-06-04 21:08:23.089 650:link-prediction        INFO     eval_recall = 0.6176
2023-06-04 21:08:23.089 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:08:32.796 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:08:32.796 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:08:32.796 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:08:57.465 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:08:57.465 650:link-prediction        INFO     eval_acc = 0.8015
2023-06-04 21:08:57.466 650:link-prediction        INFO     eval_f1 = 0.8036
2023-06-04 21:08:57.466 650:link-prediction        INFO     eval_mcc = 0.6031
2023-06-04 21:08:57.466 650:link-prediction        INFO     eval_precision = 0.7951
2023-06-04 21:08:57.466 650:link-prediction        INFO     eval_recall = 0.8123
2023-06-04 21:08:57.466 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:08:57.466 543:link-prediction        INFO     ********************
2023-06-04 21:08:57.466 544:link-prediction        INFO     Best f1:0.8036
2023-06-04 21:08:57.466 545:link-prediction        INFO     ********************
2023-06-04 21:08:57.470 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/1/ddg_10/checkpoint-best-f1/model.bin
2023-06-04 21:09:03.864 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:09:03.865 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:09:03.865 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:09:29.223 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:09:29.224 650:link-prediction        INFO     eval_acc = 0.8066
2023-06-04 21:09:29.224 650:link-prediction        INFO     eval_f1 = 0.7755
2023-06-04 21:09:29.224 650:link-prediction        INFO     eval_mcc = 0.6382
2023-06-04 21:09:29.224 650:link-prediction        INFO     eval_precision = 0.9241
2023-06-04 21:09:29.224 650:link-prediction        INFO     eval_recall = 0.668
2023-06-04 21:09:29.224 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:09:29.224 565:link-prediction        INFO     ********************
2023-06-04 21:09:29.224 566:link-prediction        INFO     Best MCC:0.6382
2023-06-04 21:09:29.224 567:link-prediction        INFO     ********************
2023-06-04 21:09:29.227 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/1/ddg_10/checkpoint-best-mcc/model.bin
2023-06-04 21:09:36.111 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:09:36.111 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:09:36.112 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:10:02.531 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:10:02.531 650:link-prediction        INFO     eval_acc = 0.7916
2023-06-04 21:10:02.532 650:link-prediction        INFO     eval_f1 = 0.8076
2023-06-04 21:10:02.532 650:link-prediction        INFO     eval_mcc = 0.5915
2023-06-04 21:10:02.532 650:link-prediction        INFO     eval_precision = 0.75
2023-06-04 21:10:02.532 650:link-prediction        INFO     eval_recall = 0.8749
2023-06-04 21:10:02.532 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:10:02.532 543:link-prediction        INFO     ********************
2023-06-04 21:10:02.532 544:link-prediction        INFO     Best f1:0.8076
2023-06-04 21:10:02.533 545:link-prediction        INFO     ********************
2023-06-04 21:10:02.537 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/1/ddg_10/checkpoint-best-f1/model.bin
2023-06-04 21:10:10.456 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:10:10.456 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:10:10.456 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:10:42.158 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:10:42.158 650:link-prediction        INFO     eval_acc = 0.7884
2023-06-04 21:10:42.158 650:link-prediction        INFO     eval_f1 = 0.807
2023-06-04 21:10:42.159 650:link-prediction        INFO     eval_mcc = 0.5879
2023-06-04 21:10:42.159 650:link-prediction        INFO     eval_precision = 0.7418
2023-06-04 21:10:42.159 650:link-prediction        INFO     eval_recall = 0.8849
2023-06-04 21:10:42.159 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:10:50.390 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:10:50.390 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:10:50.390 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:11:18.712 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:11:18.712 650:link-prediction        INFO     eval_acc = 0.809
2023-06-04 21:11:18.713 650:link-prediction        INFO     eval_f1 = 0.8004
2023-06-04 21:11:18.713 650:link-prediction        INFO     eval_mcc = 0.6202
2023-06-04 21:11:18.713 650:link-prediction        INFO     eval_precision = 0.8379
2023-06-04 21:11:18.713 650:link-prediction        INFO     eval_recall = 0.7661
2023-06-04 21:11:18.713 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:11:26.871 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:11:26.871 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:11:26.872 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:11:54.522 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:11:54.523 650:link-prediction        INFO     eval_acc = 0.7846
2023-06-04 21:11:54.523 650:link-prediction        INFO     eval_f1 = 0.8065
2023-06-04 21:11:54.523 650:link-prediction        INFO     eval_mcc = 0.5843
2023-06-04 21:11:54.523 650:link-prediction        INFO     eval_precision = 0.7323
2023-06-04 21:11:54.523 650:link-prediction        INFO     eval_recall = 0.8974
2023-06-04 21:11:54.523 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:12:02.156 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:12:02.156 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:12:02.156 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:12:29.431 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:12:29.431 650:link-prediction        INFO     eval_acc = 0.8121
2023-06-04 21:12:29.432 650:link-prediction        INFO     eval_f1 = 0.8084
2023-06-04 21:12:29.432 650:link-prediction        INFO     eval_mcc = 0.6246
2023-06-04 21:12:29.432 650:link-prediction        INFO     eval_precision = 0.8245
2023-06-04 21:12:29.432 650:link-prediction        INFO     eval_recall = 0.7929
2023-06-04 21:12:29.432 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:12:29.432 543:link-prediction        INFO     ********************
2023-06-04 21:12:29.432 544:link-prediction        INFO     Best f1:0.8084
2023-06-04 21:12:29.433 545:link-prediction        INFO     ********************
2023-06-04 21:12:29.475 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/1/ddg_10/checkpoint-best-f1/model.bin
2023-06-04 21:12:37.754 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:12:37.755 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:12:37.755 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:13:06.080 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:13:06.080 650:link-prediction        INFO     eval_acc = 0.8116
2023-06-04 21:13:06.080 650:link-prediction        INFO     eval_f1 = 0.8052
2023-06-04 21:13:06.080 650:link-prediction        INFO     eval_mcc = 0.6245
2023-06-04 21:13:06.081 650:link-prediction        INFO     eval_precision = 0.8334
2023-06-04 21:13:06.081 650:link-prediction        INFO     eval_recall = 0.7789
2023-06-04 21:13:06.081 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:13:14.239 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:13:14.239 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:13:14.240 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:13:41.000 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:13:41.000 650:link-prediction        INFO     eval_acc = 0.8
2023-06-04 21:13:41.000 650:link-prediction        INFO     eval_f1 = 0.812
2023-06-04 21:13:41.001 650:link-prediction        INFO     eval_mcc = 0.6049
2023-06-04 21:13:41.001 650:link-prediction        INFO     eval_precision = 0.766
2023-06-04 21:13:41.001 650:link-prediction        INFO     eval_recall = 0.8637
2023-06-04 21:13:41.001 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:13:41.001 543:link-prediction        INFO     ********************
2023-06-04 21:13:41.001 544:link-prediction        INFO     Best f1:0.812
2023-06-04 21:13:41.001 545:link-prediction        INFO     ********************
2023-06-04 21:13:41.005 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/1/ddg_10/checkpoint-best-f1/model.bin
2023-06-04 21:13:48.591 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:13:48.591 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:13:48.591 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:14:16.660 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:14:16.661 650:link-prediction        INFO     eval_acc = 0.8146
2023-06-04 21:14:16.661 650:link-prediction        INFO     eval_f1 = 0.7997
2023-06-04 21:14:16.661 650:link-prediction        INFO     eval_mcc = 0.6362
2023-06-04 21:14:16.661 650:link-prediction        INFO     eval_precision = 0.8697
2023-06-04 21:14:16.661 650:link-prediction        INFO     eval_recall = 0.7401
2023-06-04 21:14:16.662 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:14:25.569 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:14:25.569 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:14:25.570 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:14:55.128 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:14:55.129 650:link-prediction        INFO     eval_acc = 0.8112
2023-06-04 21:14:55.129 650:link-prediction        INFO     eval_f1 = 0.7839
2023-06-04 21:14:55.129 650:link-prediction        INFO     eval_mcc = 0.6432
2023-06-04 21:14:55.129 650:link-prediction        INFO     eval_precision = 0.9163
2023-06-04 21:14:55.129 650:link-prediction        INFO     eval_recall = 0.6849
2023-06-04 21:14:55.129 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:14:55.130 565:link-prediction        INFO     ********************
2023-06-04 21:14:55.130 566:link-prediction        INFO     Best MCC:0.6432
2023-06-04 21:14:55.130 567:link-prediction        INFO     ********************
2023-06-04 21:14:55.134 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/1/ddg_10/checkpoint-best-mcc/model.bin
2023-06-04 21:15:03.405 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:15:03.405 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:15:03.405 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:15:32.193 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:15:32.194 650:link-prediction        INFO     eval_acc = 0.81
2023-06-04 21:15:32.194 650:link-prediction        INFO     eval_f1 = 0.7913
2023-06-04 21:15:32.194 650:link-prediction        INFO     eval_mcc = 0.6303
2023-06-04 21:15:32.194 650:link-prediction        INFO     eval_precision = 0.8778
2023-06-04 21:15:32.195 650:link-prediction        INFO     eval_recall = 0.7204
2023-06-04 21:15:32.195 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:15:40.558 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:15:40.559 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:15:40.559 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:16:10.982 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:16:10.982 650:link-prediction        INFO     eval_acc = 0.8111
2023-06-04 21:16:10.983 650:link-prediction        INFO     eval_f1 = 0.7909
2023-06-04 21:16:10.983 650:link-prediction        INFO     eval_mcc = 0.6342
2023-06-04 21:16:10.983 650:link-prediction        INFO     eval_precision = 0.8858
2023-06-04 21:16:10.983 650:link-prediction        INFO     eval_recall = 0.7144
2023-06-04 21:16:10.983 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:16:19.531 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:16:19.531 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:16:19.531 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:16:48.028 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:16:48.028 650:link-prediction        INFO     eval_acc = 0.8134
2023-06-04 21:16:48.028 650:link-prediction        INFO     eval_f1 = 0.8018
2023-06-04 21:16:48.029 650:link-prediction        INFO     eval_mcc = 0.6311
2023-06-04 21:16:48.029 650:link-prediction        INFO     eval_precision = 0.8549
2023-06-04 21:16:48.029 650:link-prediction        INFO     eval_recall = 0.7548
2023-06-04 21:16:48.029 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:16:55.568 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-04 21:16:55.568 602:link-prediction        INFO     Num examples = 22251
2023-06-04 21:16:55.569 603:link-prediction        INFO     Batch size = 32
2023-06-04 21:17:23.824 648:link-prediction        INFO   ***** Eval results *****
2023-06-04 21:17:23.824 650:link-prediction        INFO     eval_acc = 0.8121
2023-06-04 21:17:23.824 650:link-prediction        INFO     eval_f1 = 0.7956
2023-06-04 21:17:23.824 650:link-prediction        INFO     eval_mcc = 0.6325
2023-06-04 21:17:23.825 650:link-prediction        INFO     eval_precision = 0.8724
2023-06-04 21:17:23.825 650:link-prediction        INFO     eval_recall = 0.7312
2023-06-04 21:17:23.825 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-04 21:17:25.501 671:link-prediction        INFO   ***** Running Test *****
2023-06-04 21:17:25.502 672:link-prediction        INFO     Num examples = 21866
2023-06-04 21:17:25.502 673:link-prediction        INFO     Batch size = 32
2023-06-04 21:17:58.271 714:link-prediction        INFO   ***** Test results *****
2023-06-04 21:17:58.272 716:link-prediction        INFO     eval_acc = 0.8107
2023-06-04 21:17:58.272 716:link-prediction        INFO     eval_f1 = 0.7844
2023-06-04 21:17:58.272 716:link-prediction        INFO     eval_mcc = 0.6408
2023-06-04 21:17:58.272 716:link-prediction        INFO     eval_precision = 0.9112
2023-06-04 21:17:58.273 716:link-prediction        INFO     eval_recall = 0.6886
2023-06-04 21:17:58.273 716:link-prediction        INFO     eval_threshold = 0.5
