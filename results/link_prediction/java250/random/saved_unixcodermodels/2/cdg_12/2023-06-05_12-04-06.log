2023-06-05 12:04:06.866 936:link-prediction        DEBUG  main message
2023-06-05 12:04:06.866 942:link-prediction        WARNING device: cuda, n_gpu: 1
2023-06-05 12:04:07.609 957:link-prediction        INFO   Load Dataset
2023-06-05 12:04:53.138 249:link-prediction        INFO   Load Span file and Graph data, data path: ../datasets/java250/graphs/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 12:04:53.500 301:link-prediction        INFO   Labels Counter({1: 4848, 0: 4848})
2023-06-05 12:04:54.492 249:link-prediction        INFO   Load Span file and Graph data, data path: ../datasets/java250/graphs/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 12:04:54.708 301:link-prediction        INFO   Labels Counter({0: 1517, 1: 1517})
2023-06-05 12:04:55.702 249:link-prediction        INFO   Load Span file and Graph data, data path: ../datasets/java250/graphs/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 12:04:55.766 301:link-prediction        INFO   Labels Counter({0: 1407, 1: 1407})
2023-06-05 12:04:55.766 306:link-prediction        INFO   *** Example ***
2023-06-05 12:04:55.767 307:link-prediction        INFO   idx: s991606671_main
2023-06-05 12:04:55.767 308:link-prediction        INFO   label: 1
2023-06-05 12:04:55.767 309:link-prediction        INFO   input_tokens_1: ['i', '_<', '_N']
2023-06-05 12:04:55.767 317:link-prediction        INFO   input_ids_1: 147 150
2023-06-05 12:04:55.767 324:link-prediction        INFO   span_arry_1: [147, 149] [147, 149], mask 1 0
2023-06-05 12:04:55.767 334:link-prediction        INFO   input_tokens_reverse_1: Ġ0 ; Ġi
2023-06-05 12:04:55.768 344:link-prediction        INFO   input_tokens_2: ['A', '[', 'i', ']']
2023-06-05 12:04:55.768 352:link-prediction        INFO   input_ids_2: 164 168
2023-06-05 12:04:55.768 359:link-prediction        INFO   span_arry_2: [164, 167] [164, 167], mask 1 0
2023-06-05 12:04:55.768 369:link-prediction        INFO   input_tokens_reverse_2: valueOf ( A [
2023-06-05 12:04:55.768 306:link-prediction        INFO   *** Example ***
2023-06-05 12:04:55.768 307:link-prediction        INFO   idx: s056825035_main
2023-06-05 12:04:55.768 308:link-prediction        INFO   label: 1
2023-06-05 12:04:55.768 309:link-prediction        INFO   input_tokens_1: ['previous', '_!=', '_list', '[', 'i', '].', 'charAt', '(', '0', ')']
2023-06-05 12:04:55.769 317:link-prediction        INFO   input_ids_1: 165 175
2023-06-05 12:04:55.769 324:link-prediction        INFO   span_arry_1: [165, 174] [165, 174], mask 1 0
2023-06-05 12:04:55.769 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( previous Ġ!= Ġlist [ i ]. charAt (
2023-06-05 12:04:55.769 344:link-prediction        INFO   input_tokens_2: ['previous', '_=', '_list', '[', 'i', '].', 'charAt', '(', 'list', '[', 'i', '].', 'length', '()', '_-', '_1', ')']
2023-06-05 12:04:55.769 352:link-prediction        INFO   input_ids_2: 184 201
2023-06-05 12:04:55.769 359:link-prediction        INFO   span_arry_2: [184, 200] [184, 200], mask 1 0
2023-06-05 12:04:55.769 369:link-prediction        INFO   input_tokens_reverse_2: ; Ġ} Ġprevious Ġ= Ġlist [ i ]. charAt ( list [ i ]. length () Ġ-
2023-06-05 12:04:55.770 306:link-prediction        INFO   *** Example ***
2023-06-05 12:04:55.770 307:link-prediction        INFO   idx: s279088077_nextLong
2023-06-05 12:04:55.770 308:link-prediction        INFO   label: 1
2023-06-05 12:04:55.770 309:link-prediction        INFO   input_tokens_1: ['c', '_==', "_'-'"]
2023-06-05 12:04:55.770 317:link-prediction        INFO   input_ids_1: 43 46
2023-06-05 12:04:55.770 324:link-prediction        INFO   span_arry_1: [43, 45] [43, 45], mask 1 0
2023-06-05 12:04:55.770 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( c
2023-06-05 12:04:55.770 344:link-prediction        INFO   input_tokens_2: ['c', '_=', '_read', 'Byte', '()']
2023-06-05 12:04:55.771 352:link-prediction        INFO   input_ids_2: 51 56
2023-06-05 12:04:55.771 359:link-prediction        INFO   span_arry_2: [51, 55] [51, 55], mask 1 0
2023-06-05 12:04:55.771 369:link-prediction        INFO   input_tokens_reverse_2: Ġtrue ; Ġc Ġ= Ġread
2023-06-05 12:04:55.771 306:link-prediction        INFO   *** Example ***
2023-06-05 12:04:55.771 307:link-prediction        INFO   idx: s809030941_next
2023-06-05 12:04:55.771 308:link-prediction        INFO   label: 0
2023-06-05 12:04:55.771 309:link-prediction        INFO   input_tokens_1: ['return', '_builder', '.', 'toString', '();']
2023-06-05 12:04:55.771 317:link-prediction        INFO   input_ids_1: 43 48
2023-06-05 12:04:55.772 324:link-prediction        INFO   span_arry_1: [43, 47] [43, 47], mask 1 0
2023-06-05 12:04:55.772 334:link-prediction        INFO   input_tokens_reverse_1: (); Ġ} Ġreturn Ġbuilder .
2023-06-05 12:04:55.772 344:link-prediction        INFO   input_tokens_2: ['read', '()']
2023-06-05 12:04:55.772 352:link-prediction        INFO   input_ids_2: 20 22
2023-06-05 12:04:55.772 359:link-prediction        INFO   span_arry_2: [20, 21] [20, 21], mask 1 0
2023-06-05 12:04:55.772 369:link-prediction        INFO   input_tokens_reverse_2: ĠcodePoint Ġ=
2023-06-05 12:04:55.772 306:link-prediction        INFO   *** Example ***
2023-06-05 12:04:55.772 307:link-prediction        INFO   idx: s809030941_next
2023-06-05 12:04:55.772 308:link-prediction        INFO   label: 0
2023-06-05 12:04:55.773 309:link-prediction        INFO   input_tokens_1: ['new', '_StringBuilder', '()']
2023-06-05 12:04:55.773 317:link-prediction        INFO   input_ids_1: 14 17
2023-06-05 12:04:55.773 324:link-prediction        INFO   span_arry_1: [14, 16] [14, 16], mask 1 0
2023-06-05 12:04:55.773 334:link-prediction        INFO   input_tokens_reverse_1: Ġbuilder Ġ= Ġnew
2023-06-05 12:04:55.773 344:link-prediction        INFO   input_tokens_2: ['read', '()']
2023-06-05 12:04:55.773 352:link-prediction        INFO   input_ids_2: 20 22
2023-06-05 12:04:55.773 359:link-prediction        INFO   span_arry_2: [20, 21] [20, 21], mask 1 0
2023-06-05 12:04:55.774 369:link-prediction        INFO   input_tokens_reverse_2: ĠcodePoint Ġ=
2023-06-05 12:04:55.774 306:link-prediction        INFO   *** Example ***
2023-06-05 12:04:55.774 307:link-prediction        INFO   idx: s460837934_main
2023-06-05 12:04:55.774 308:link-prediction        INFO   label: 1
2023-06-05 12:04:55.774 309:link-prediction        INFO   input_tokens_1: ['S', '.', 'equals', '("', 'AAA', '")', '_||', '_S', '.', 'equals', '("', 'BBB', '")']
2023-06-05 12:04:55.774 317:link-prediction        INFO   input_ids_1: 32 45
2023-06-05 12:04:55.774 324:link-prediction        INFO   span_arry_1: [32, 44] [32, 44], mask 1 0
2023-06-05 12:04:55.774 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( S . equals (" AAA ") Ġ|| ĠS . equals ("
2023-06-05 12:04:55.775 344:link-prediction        INFO   input_tokens_2: ['System', '.', 'out', '.', 'println', '("', 'No', '")']
2023-06-05 12:04:55.775 352:link-prediction        INFO   input_ids_2: 46 54
2023-06-05 12:04:55.775 359:link-prediction        INFO   span_arry_2: [46, 53] [46, 53], mask 1 0
2023-06-05 12:04:55.775 369:link-prediction        INFO   input_tokens_reverse_2: ")) Ġ{ ĠSystem . out . println ("
2023-06-05 12:04:55.775 306:link-prediction        INFO   *** Example ***
2023-06-05 12:04:55.775 307:link-prediction        INFO   idx: s621434572_main
2023-06-05 12:04:55.775 308:link-prediction        INFO   label: 0
2023-06-05 12:04:55.776 309:link-prediction        INFO   input_tokens_1: ['(', 'a', '[', '0', ']', '_%', '_j', '_==', '_0', ')', '_&&', '_(', 'a', '[', '1', ']', '_%', '_j', '_==', '_0', ')']
2023-06-05 12:04:55.776 317:link-prediction        INFO   input_ids_1: 87 108
2023-06-05 12:04:55.776 324:link-prediction        INFO   span_arry_1: [87, 107] [87, 107], mask 1 0
2023-06-05 12:04:55.776 334:link-prediction        INFO   input_tokens_reverse_1: Ġ{ Ġif Ġ(( a [ 0 ] Ġ% Ġj Ġ== Ġ0 ) Ġ&& Ġ( a [ 1 ] Ġ% Ġj Ġ==
2023-06-05 12:04:55.776 344:link-prediction        INFO   input_tokens_2: ['b', '_=', '_false']
2023-06-05 12:04:55.776 352:link-prediction        INFO   input_ids_2: 171 174
2023-06-05 12:04:55.776 359:link-prediction        INFO   span_arry_2: [171, 173] [171, 173], mask 1 0
2023-06-05 12:04:55.776 369:link-prediction        INFO   input_tokens_reverse_2: Ġk ; Ġb
2023-06-05 12:04:55.777 306:link-prediction        INFO   *** Example ***
2023-06-05 12:04:55.777 307:link-prediction        INFO   idx: s466773133_getFrame
2023-06-05 12:04:55.777 308:link-prediction        INFO   label: 1
2023-06-05 12:04:55.777 309:link-prediction        INFO   input_tokens_1: ['i', '_==', '_0', '_||', '_i', '_==', '_(', 'height', '_-', '_1', ')']
2023-06-05 12:04:55.777 317:link-prediction        INFO   input_ids_1: 53 64
2023-06-05 12:04:55.777 324:link-prediction        INFO   span_arry_1: [53, 63] [53, 63], mask 1 0
2023-06-05 12:04:55.777 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( i Ġ== Ġ0 Ġ|| Ġi Ġ== Ġ( height Ġ-
2023-06-05 12:04:55.778 344:link-prediction        INFO   input_tokens_2: ['j', '_==', '_0']
2023-06-05 12:04:55.778 352:link-prediction        INFO   input_ids_2: 65 68
2023-06-05 12:04:55.778 359:link-prediction        INFO   span_arry_2: [65, 67] [65, 67], mask 1 0
2023-06-05 12:04:55.778 369:link-prediction        INFO   input_tokens_reverse_2: ) Ġ|| Ġj
2023-06-05 12:04:55.778 306:link-prediction        INFO   *** Example ***
2023-06-05 12:04:55.778 307:link-prediction        INFO   idx: s368670864_nextLong
2023-06-05 12:04:55.778 308:link-prediction        INFO   label: 0
2023-06-05 12:04:55.778 309:link-prediction        INFO   input_tokens_1: ['b', '_<', "_'", '0', "'", '_||', "_'", '9', "'", '_<', '_b']
2023-06-05 12:04:55.779 317:link-prediction        INFO   input_ids_1: 51 62
2023-06-05 12:04:55.779 324:link-prediction        INFO   span_arry_1: [51, 61] [51, 61], mask 1 0
2023-06-05 12:04:55.779 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( b Ġ< Ġ' 0 ' Ġ|| Ġ' 9 '
2023-06-05 12:04:55.779 344:link-prediction        INFO   input_tokens_2: ['minus', '_?', '_-', 'n', '_:', '_n']
2023-06-05 12:04:55.779 352:link-prediction        INFO   input_ids_2: 117 123
2023-06-05 12:04:55.779 359:link-prediction        INFO   span_arry_2: [117, 122] [117, 122], mask 1 0
2023-06-05 12:04:55.779 369:link-prediction        INFO   input_tokens_reverse_2: Ġ{ Ġreturn Ġminus Ġ? Ġ- n
2023-06-05 12:04:55.779 997:link-prediction        INFO   Finishing loading Dataset
2023-06-05 12:04:55.799 1006:link-prediction        INFO   Probimg Model Parameters 3843
2023-06-05 12:04:55.800 1007:link-prediction        INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/java250/graphs', dataset='java250', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=2, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12', posratio=0.5, seed=955, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 12:04:57.780 472:link-prediction        INFO   ***** Running training *****
2023-06-05 12:04:57.780 473:link-prediction        INFO     Num examples = 9696
2023-06-05 12:04:57.781 474:link-prediction        INFO     Num Epochs = 2
2023-06-05 12:04:57.781 475:link-prediction        INFO     Instantaneous batch size per GPU = 64
2023-06-05 12:04:57.781 479:link-prediction        INFO     Total train batch size = 64
2023-06-05 12:04:57.781 483:link-prediction        INFO     Gradient Accumulation steps = 1
2023-06-05 12:04:57.781 486:link-prediction        INFO     Total optimization steps = 304
2023-06-05 12:05:00.609 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:05:00.609 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:05:00.610 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:05:04.766 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:05:04.766 650:link-prediction        INFO     eval_acc = 0.5989
2023-06-05 12:05:04.766 650:link-prediction        INFO     eval_f1 = 0.5985
2023-06-05 12:05:04.766 650:link-prediction        INFO     eval_mcc = 0.1978
2023-06-05 12:05:04.766 650:link-prediction        INFO     eval_precision = 0.5991
2023-06-05 12:05:04.767 650:link-prediction        INFO     eval_recall = 0.5979
2023-06-05 12:05:04.767 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:05:04.770 543:link-prediction        INFO     ********************
2023-06-05 12:05:04.770 544:link-prediction        INFO     Best f1:0.5985
2023-06-05 12:05:04.770 545:link-prediction        INFO     ********************
2023-06-05 12:05:04.813 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 12:05:04.814 565:link-prediction        INFO     ********************
2023-06-05 12:05:04.814 566:link-prediction        INFO     Best MCC:0.1978
2023-06-05 12:05:04.814 567:link-prediction        INFO     ********************
2023-06-05 12:05:04.839 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 12:05:05.973 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:05:05.974 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:05:05.974 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:05:09.879 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:05:09.879 650:link-prediction        INFO     eval_acc = 0.6322
2023-06-05 12:05:09.880 650:link-prediction        INFO     eval_f1 = 0.713
2023-06-05 12:05:09.880 650:link-prediction        INFO     eval_mcc = 0.3198
2023-06-05 12:05:09.880 650:link-prediction        INFO     eval_precision = 0.5846
2023-06-05 12:05:09.880 650:link-prediction        INFO     eval_recall = 0.9136
2023-06-05 12:05:09.880 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:05:09.884 543:link-prediction        INFO     ********************
2023-06-05 12:05:09.884 544:link-prediction        INFO     Best f1:0.713
2023-06-05 12:05:09.884 545:link-prediction        INFO     ********************
2023-06-05 12:05:09.887 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 12:05:09.888 565:link-prediction        INFO     ********************
2023-06-05 12:05:09.888 566:link-prediction        INFO     Best MCC:0.3198
2023-06-05 12:05:09.888 567:link-prediction        INFO     ********************
2023-06-05 12:05:09.890 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 12:05:11.144 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:05:11.144 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:05:11.144 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:05:14.811 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:05:14.811 650:link-prediction        INFO     eval_acc = 0.6958
2023-06-05 12:05:14.812 650:link-prediction        INFO     eval_f1 = 0.663
2023-06-05 12:05:14.812 650:link-prediction        INFO     eval_mcc = 0.3992
2023-06-05 12:05:14.812 650:link-prediction        INFO     eval_precision = 0.743
2023-06-05 12:05:14.812 650:link-prediction        INFO     eval_recall = 0.5985
2023-06-05 12:05:14.812 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:05:14.816 565:link-prediction        INFO     ********************
2023-06-05 12:05:14.816 566:link-prediction        INFO     Best MCC:0.3992
2023-06-05 12:05:14.816 567:link-prediction        INFO     ********************
2023-06-05 12:05:14.819 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 12:05:16.056 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:05:16.057 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:05:16.057 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:05:20.307 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:05:20.307 650:link-prediction        INFO     eval_acc = 0.7175
2023-06-05 12:05:20.308 650:link-prediction        INFO     eval_f1 = 0.6811
2023-06-05 12:05:20.308 650:link-prediction        INFO     eval_mcc = 0.4469
2023-06-05 12:05:20.308 650:link-prediction        INFO     eval_precision = 0.7821
2023-06-05 12:05:20.308 650:link-prediction        INFO     eval_recall = 0.6032
2023-06-05 12:05:20.308 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:05:20.314 565:link-prediction        INFO     ********************
2023-06-05 12:05:20.314 566:link-prediction        INFO     Best MCC:0.4469
2023-06-05 12:05:20.314 567:link-prediction        INFO     ********************
2023-06-05 12:05:20.316 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 12:05:21.276 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:05:21.276 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:05:21.276 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:05:25.241 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:05:25.242 650:link-prediction        INFO     eval_acc = 0.7449
2023-06-05 12:05:25.242 650:link-prediction        INFO     eval_f1 = 0.7269
2023-06-05 12:05:25.242 650:link-prediction        INFO     eval_mcc = 0.4941
2023-06-05 12:05:25.242 650:link-prediction        INFO     eval_precision = 0.7821
2023-06-05 12:05:25.242 650:link-prediction        INFO     eval_recall = 0.679
2023-06-05 12:05:25.242 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:05:25.246 543:link-prediction        INFO     ********************
2023-06-05 12:05:25.246 544:link-prediction        INFO     Best f1:0.7269
2023-06-05 12:05:25.246 545:link-prediction        INFO     ********************
2023-06-05 12:05:25.249 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 12:05:25.249 565:link-prediction        INFO     ********************
2023-06-05 12:05:25.249 566:link-prediction        INFO     Best MCC:0.4941
2023-06-05 12:05:25.249 567:link-prediction        INFO     ********************
2023-06-05 12:05:25.250 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 12:05:26.223 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:05:26.223 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:05:26.223 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:05:30.124 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:05:30.124 650:link-prediction        INFO     eval_acc = 0.7126
2023-06-05 12:05:30.124 650:link-prediction        INFO     eval_f1 = 0.6578
2023-06-05 12:05:30.124 650:link-prediction        INFO     eval_mcc = 0.4488
2023-06-05 12:05:30.125 650:link-prediction        INFO     eval_precision = 0.8128
2023-06-05 12:05:30.125 650:link-prediction        INFO     eval_recall = 0.5524
2023-06-05 12:05:30.125 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:05:31.778 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:05:31.779 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:05:31.779 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:05:35.957 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:05:35.958 650:link-prediction        INFO     eval_acc = 0.7966
2023-06-05 12:05:35.958 650:link-prediction        INFO     eval_f1 = 0.81
2023-06-05 12:05:35.958 650:link-prediction        INFO     eval_mcc = 0.5992
2023-06-05 12:05:35.958 650:link-prediction        INFO     eval_precision = 0.7601
2023-06-05 12:05:35.959 650:link-prediction        INFO     eval_recall = 0.8668
2023-06-05 12:05:35.959 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:05:35.962 543:link-prediction        INFO     ********************
2023-06-05 12:05:35.963 544:link-prediction        INFO     Best f1:0.81
2023-06-05 12:05:35.963 545:link-prediction        INFO     ********************
2023-06-05 12:05:35.968 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 12:05:35.968 565:link-prediction        INFO     ********************
2023-06-05 12:05:35.968 566:link-prediction        INFO     Best MCC:0.5992
2023-06-05 12:05:35.968 567:link-prediction        INFO     ********************
2023-06-05 12:05:35.971 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 12:05:37.128 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:05:37.128 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:05:37.129 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:05:40.400 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:05:40.400 650:link-prediction        INFO     eval_acc = 0.7891
2023-06-05 12:05:40.400 650:link-prediction        INFO     eval_f1 = 0.777
2023-06-05 12:05:40.400 650:link-prediction        INFO     eval_mcc = 0.5815
2023-06-05 12:05:40.401 650:link-prediction        INFO     eval_precision = 0.8241
2023-06-05 12:05:40.401 650:link-prediction        INFO     eval_recall = 0.735
2023-06-05 12:05:40.401 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:05:41.540 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:05:41.540 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:05:41.541 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:05:45.033 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:05:45.034 650:link-prediction        INFO     eval_acc = 0.8102
2023-06-05 12:05:45.034 650:link-prediction        INFO     eval_f1 = 0.8061
2023-06-05 12:05:45.034 650:link-prediction        INFO     eval_mcc = 0.6209
2023-06-05 12:05:45.034 650:link-prediction        INFO     eval_precision = 0.8238
2023-06-05 12:05:45.034 650:link-prediction        INFO     eval_recall = 0.7891
2023-06-05 12:05:45.034 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:05:45.037 565:link-prediction        INFO     ********************
2023-06-05 12:05:45.038 566:link-prediction        INFO     Best MCC:0.6209
2023-06-05 12:05:45.038 567:link-prediction        INFO     ********************
2023-06-05 12:05:45.040 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 12:05:46.265 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:05:46.266 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:05:46.266 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:05:49.859 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:05:49.860 650:link-prediction        INFO     eval_acc = 0.7746
2023-06-05 12:05:49.860 650:link-prediction        INFO     eval_f1 = 0.747
2023-06-05 12:05:49.860 650:link-prediction        INFO     eval_mcc = 0.5626
2023-06-05 12:05:49.860 650:link-prediction        INFO     eval_precision = 0.8509
2023-06-05 12:05:49.860 650:link-prediction        INFO     eval_recall = 0.6658
2023-06-05 12:05:49.860 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:05:50.986 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:05:50.986 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:05:50.986 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:05:54.323 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:05:54.323 650:link-prediction        INFO     eval_acc = 0.8009
2023-06-05 12:05:54.323 650:link-prediction        INFO     eval_f1 = 0.7875
2023-06-05 12:05:54.324 650:link-prediction        INFO     eval_mcc = 0.6067
2023-06-05 12:05:54.324 650:link-prediction        INFO     eval_precision = 0.8445
2023-06-05 12:05:54.324 650:link-prediction        INFO     eval_recall = 0.7376
2023-06-05 12:05:54.324 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:05:55.768 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:05:55.768 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:05:55.769 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:05:59.910 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:05:59.911 650:link-prediction        INFO     eval_acc = 0.8339
2023-06-05 12:05:59.911 650:link-prediction        INFO     eval_f1 = 0.8329
2023-06-05 12:05:59.911 650:link-prediction        INFO     eval_mcc = 0.6678
2023-06-05 12:05:59.911 650:link-prediction        INFO     eval_precision = 0.8379
2023-06-05 12:05:59.911 650:link-prediction        INFO     eval_recall = 0.8279
2023-06-05 12:05:59.912 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:05:59.916 543:link-prediction        INFO     ********************
2023-06-05 12:05:59.916 544:link-prediction        INFO     Best f1:0.8329
2023-06-05 12:05:59.916 545:link-prediction        INFO     ********************
2023-06-05 12:05:59.920 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 12:05:59.920 565:link-prediction        INFO     ********************
2023-06-05 12:05:59.921 566:link-prediction        INFO     Best MCC:0.6678
2023-06-05 12:05:59.921 567:link-prediction        INFO     ********************
2023-06-05 12:05:59.922 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 12:06:02.450 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:06:02.450 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:06:02.451 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:06:06.283 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:06:06.284 650:link-prediction        INFO     eval_acc = 0.8069
2023-06-05 12:06:06.284 650:link-prediction        INFO     eval_f1 = 0.7945
2023-06-05 12:06:06.284 650:link-prediction        INFO     eval_mcc = 0.6182
2023-06-05 12:06:06.284 650:link-prediction        INFO     eval_precision = 0.8487
2023-06-05 12:06:06.284 650:link-prediction        INFO     eval_recall = 0.7469
2023-06-05 12:06:06.284 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:06:07.491 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:06:07.492 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:06:07.492 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:06:11.144 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:06:11.144 650:link-prediction        INFO     eval_acc = 0.8398
2023-06-05 12:06:11.144 650:link-prediction        INFO     eval_f1 = 0.84
2023-06-05 12:06:11.145 650:link-prediction        INFO     eval_mcc = 0.6796
2023-06-05 12:06:11.145 650:link-prediction        INFO     eval_precision = 0.8389
2023-06-05 12:06:11.145 650:link-prediction        INFO     eval_recall = 0.8411
2023-06-05 12:06:11.145 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:06:11.148 543:link-prediction        INFO     ********************
2023-06-05 12:06:11.149 544:link-prediction        INFO     Best f1:0.84
2023-06-05 12:06:11.149 545:link-prediction        INFO     ********************
2023-06-05 12:06:11.152 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 12:06:11.152 565:link-prediction        INFO     ********************
2023-06-05 12:06:11.152 566:link-prediction        INFO     Best MCC:0.6796
2023-06-05 12:06:11.153 567:link-prediction        INFO     ********************
2023-06-05 12:06:11.155 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 12:06:12.468 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:06:12.469 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:06:12.469 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:06:16.270 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:06:16.270 650:link-prediction        INFO     eval_acc = 0.857
2023-06-05 12:06:16.271 650:link-prediction        INFO     eval_f1 = 0.8642
2023-06-05 12:06:16.271 650:link-prediction        INFO     eval_mcc = 0.718
2023-06-05 12:06:16.271 650:link-prediction        INFO     eval_precision = 0.8225
2023-06-05 12:06:16.271 650:link-prediction        INFO     eval_recall = 0.9103
2023-06-05 12:06:16.271 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:06:16.276 543:link-prediction        INFO     ********************
2023-06-05 12:06:16.276 544:link-prediction        INFO     Best f1:0.8642
2023-06-05 12:06:16.277 545:link-prediction        INFO     ********************
2023-06-05 12:06:16.279 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 12:06:16.279 565:link-prediction        INFO     ********************
2023-06-05 12:06:16.280 566:link-prediction        INFO     Best MCC:0.718
2023-06-05 12:06:16.280 567:link-prediction        INFO     ********************
2023-06-05 12:06:16.282 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 12:06:17.462 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:06:17.462 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:06:17.463 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:06:21.763 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:06:21.763 650:link-prediction        INFO     eval_acc = 0.8616
2023-06-05 12:06:21.764 650:link-prediction        INFO     eval_f1 = 0.8741
2023-06-05 12:06:21.764 650:link-prediction        INFO     eval_mcc = 0.7379
2023-06-05 12:06:21.764 650:link-prediction        INFO     eval_precision = 0.8015
2023-06-05 12:06:21.764 650:link-prediction        INFO     eval_recall = 0.9611
2023-06-05 12:06:21.764 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:06:21.769 543:link-prediction        INFO     ********************
2023-06-05 12:06:21.769 544:link-prediction        INFO     Best f1:0.8741
2023-06-05 12:06:21.769 545:link-prediction        INFO     ********************
2023-06-05 12:06:21.771 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-f1/model.bin
2023-06-05 12:06:21.772 565:link-prediction        INFO     ********************
2023-06-05 12:06:21.772 566:link-prediction        INFO     Best MCC:0.7379
2023-06-05 12:06:21.772 567:link-prediction        INFO     ********************
2023-06-05 12:06:21.774 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/random/saved_unixcodermodels/2/cdg_12/checkpoint-best-mcc/model.bin
2023-06-05 12:06:23.070 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:06:23.071 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:06:23.071 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:06:26.792 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:06:26.793 650:link-prediction        INFO     eval_acc = 0.8566
2023-06-05 12:06:26.793 650:link-prediction        INFO     eval_f1 = 0.8594
2023-06-05 12:06:26.793 650:link-prediction        INFO     eval_mcc = 0.7138
2023-06-05 12:06:26.793 650:link-prediction        INFO     eval_precision = 0.8433
2023-06-05 12:06:26.793 650:link-prediction        INFO     eval_recall = 0.8761
2023-06-05 12:06:26.793 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:06:27.932 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:06:27.932 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:06:27.932 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:06:31.742 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:06:31.742 650:link-prediction        INFO     eval_acc = 0.8507
2023-06-05 12:06:31.742 650:link-prediction        INFO     eval_f1 = 0.852
2023-06-05 12:06:31.742 650:link-prediction        INFO     eval_mcc = 0.7015
2023-06-05 12:06:31.743 650:link-prediction        INFO     eval_precision = 0.8446
2023-06-05 12:06:31.743 650:link-prediction        INFO     eval_recall = 0.8596
2023-06-05 12:06:31.743 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:06:32.700 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:06:32.700 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:06:32.700 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:06:35.933 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:06:35.933 650:link-prediction        INFO     eval_acc = 0.8662
2023-06-05 12:06:35.933 650:link-prediction        INFO     eval_f1 = 0.8705
2023-06-05 12:06:35.933 650:link-prediction        INFO     eval_mcc = 0.734
2023-06-05 12:06:35.933 650:link-prediction        INFO     eval_precision = 0.8431
2023-06-05 12:06:35.934 650:link-prediction        INFO     eval_recall = 0.8998
2023-06-05 12:06:35.934 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:06:36.979 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 12:06:36.980 602:link-prediction        INFO     Num examples = 3034
2023-06-05 12:06:36.980 603:link-prediction        INFO     Batch size = 32
2023-06-05 12:06:40.144 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 12:06:40.144 650:link-prediction        INFO     eval_acc = 0.8586
2023-06-05 12:06:40.144 650:link-prediction        INFO     eval_f1 = 0.8612
2023-06-05 12:06:40.144 650:link-prediction        INFO     eval_mcc = 0.7177
2023-06-05 12:06:40.144 650:link-prediction        INFO     eval_precision = 0.8456
2023-06-05 12:06:40.144 650:link-prediction        INFO     eval_recall = 0.8774
2023-06-05 12:06:40.145 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 12:06:40.429 671:link-prediction        INFO   ***** Running Test *****
2023-06-05 12:06:40.430 672:link-prediction        INFO     Num examples = 2814
2023-06-05 12:06:40.430 673:link-prediction        INFO     Batch size = 32
2023-06-05 12:06:43.600 714:link-prediction        INFO   ***** Test results *****
2023-06-05 12:06:43.601 716:link-prediction        INFO     eval_acc = 0.8497
2023-06-05 12:06:43.601 716:link-prediction        INFO     eval_f1 = 0.8648
2023-06-05 12:06:43.601 716:link-prediction        INFO     eval_mcc = 0.7176
2023-06-05 12:06:43.601 716:link-prediction        INFO     eval_precision = 0.7857
2023-06-05 12:06:43.601 716:link-prediction        INFO     eval_recall = 0.9616
2023-06-05 12:06:43.601 716:link-prediction        INFO     eval_threshold = 0.5
