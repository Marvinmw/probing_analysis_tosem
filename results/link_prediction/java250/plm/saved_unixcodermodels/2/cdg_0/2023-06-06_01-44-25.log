2023-06-06 01:44:25.383 936:link-prediction        DEBUG  main message
2023-06-06 01:44:25.384 942:link-prediction        WARNING device: cuda, n_gpu: 1
2023-06-06 01:44:26.124 957:link-prediction        INFO   Load Dataset
2023-06-06 01:45:09.157 249:link-prediction        INFO   Load Span file and Graph data, data path: ../datasets/java250/graphs/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-06 01:45:09.460 301:link-prediction        INFO   Labels Counter({1: 4848, 0: 4848})
2023-06-06 01:45:10.428 249:link-prediction        INFO   Load Span file and Graph data, data path: ../datasets/java250/graphs/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-06 01:45:10.631 301:link-prediction        INFO   Labels Counter({0: 1517, 1: 1517})
2023-06-06 01:45:11.618 249:link-prediction        INFO   Load Span file and Graph data, data path: ../datasets/java250/graphs/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-06 01:45:11.671 301:link-prediction        INFO   Labels Counter({0: 1407, 1: 1407})
2023-06-06 01:45:11.672 306:link-prediction        INFO   *** Example ***
2023-06-06 01:45:11.672 307:link-prediction        INFO   idx: s991606671_main
2023-06-06 01:45:11.672 308:link-prediction        INFO   label: 1
2023-06-06 01:45:11.672 309:link-prediction        INFO   input_tokens_1: ['i', '_<', '_N']
2023-06-06 01:45:11.672 317:link-prediction        INFO   input_ids_1: 147 150
2023-06-06 01:45:11.672 324:link-prediction        INFO   span_arry_1: [147, 149] [147, 149], mask 1 0
2023-06-06 01:45:11.673 334:link-prediction        INFO   input_tokens_reverse_1: Ġ0 ; Ġi
2023-06-06 01:45:11.673 344:link-prediction        INFO   input_tokens_2: ['A', '[', 'i', ']']
2023-06-06 01:45:11.673 352:link-prediction        INFO   input_ids_2: 164 168
2023-06-06 01:45:11.673 359:link-prediction        INFO   span_arry_2: [164, 167] [164, 167], mask 1 0
2023-06-06 01:45:11.673 369:link-prediction        INFO   input_tokens_reverse_2: valueOf ( A [
2023-06-06 01:45:11.673 306:link-prediction        INFO   *** Example ***
2023-06-06 01:45:11.673 307:link-prediction        INFO   idx: s056825035_main
2023-06-06 01:45:11.674 308:link-prediction        INFO   label: 1
2023-06-06 01:45:11.674 309:link-prediction        INFO   input_tokens_1: ['previous', '_!=', '_list', '[', 'i', '].', 'charAt', '(', '0', ')']
2023-06-06 01:45:11.674 317:link-prediction        INFO   input_ids_1: 165 175
2023-06-06 01:45:11.674 324:link-prediction        INFO   span_arry_1: [165, 174] [165, 174], mask 1 0
2023-06-06 01:45:11.674 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( previous Ġ!= Ġlist [ i ]. charAt (
2023-06-06 01:45:11.675 344:link-prediction        INFO   input_tokens_2: ['previous', '_=', '_list', '[', 'i', '].', 'charAt', '(', 'list', '[', 'i', '].', 'length', '()', '_-', '_1', ')']
2023-06-06 01:45:11.675 352:link-prediction        INFO   input_ids_2: 184 201
2023-06-06 01:45:11.675 359:link-prediction        INFO   span_arry_2: [184, 200] [184, 200], mask 1 0
2023-06-06 01:45:11.675 369:link-prediction        INFO   input_tokens_reverse_2: ; Ġ} Ġprevious Ġ= Ġlist [ i ]. charAt ( list [ i ]. length () Ġ-
2023-06-06 01:45:11.675 306:link-prediction        INFO   *** Example ***
2023-06-06 01:45:11.675 307:link-prediction        INFO   idx: s279088077_nextLong
2023-06-06 01:45:11.675 308:link-prediction        INFO   label: 1
2023-06-06 01:45:11.675 309:link-prediction        INFO   input_tokens_1: ['c', '_==', "_'-'"]
2023-06-06 01:45:11.676 317:link-prediction        INFO   input_ids_1: 43 46
2023-06-06 01:45:11.676 324:link-prediction        INFO   span_arry_1: [43, 45] [43, 45], mask 1 0
2023-06-06 01:45:11.676 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( c
2023-06-06 01:45:11.676 344:link-prediction        INFO   input_tokens_2: ['c', '_=', '_read', 'Byte', '()']
2023-06-06 01:45:11.676 352:link-prediction        INFO   input_ids_2: 51 56
2023-06-06 01:45:11.676 359:link-prediction        INFO   span_arry_2: [51, 55] [51, 55], mask 1 0
2023-06-06 01:45:11.676 369:link-prediction        INFO   input_tokens_reverse_2: Ġtrue ; Ġc Ġ= Ġread
2023-06-06 01:45:11.677 306:link-prediction        INFO   *** Example ***
2023-06-06 01:45:11.677 307:link-prediction        INFO   idx: s809030941_next
2023-06-06 01:45:11.677 308:link-prediction        INFO   label: 0
2023-06-06 01:45:11.677 309:link-prediction        INFO   input_tokens_1: ['return', '_builder', '.', 'toString', '();']
2023-06-06 01:45:11.677 317:link-prediction        INFO   input_ids_1: 43 48
2023-06-06 01:45:11.677 324:link-prediction        INFO   span_arry_1: [43, 47] [43, 47], mask 1 0
2023-06-06 01:45:11.677 334:link-prediction        INFO   input_tokens_reverse_1: (); Ġ} Ġreturn Ġbuilder .
2023-06-06 01:45:11.678 344:link-prediction        INFO   input_tokens_2: ['read', '()']
2023-06-06 01:45:11.678 352:link-prediction        INFO   input_ids_2: 20 22
2023-06-06 01:45:11.678 359:link-prediction        INFO   span_arry_2: [20, 21] [20, 21], mask 1 0
2023-06-06 01:45:11.678 369:link-prediction        INFO   input_tokens_reverse_2: ĠcodePoint Ġ=
2023-06-06 01:45:11.678 306:link-prediction        INFO   *** Example ***
2023-06-06 01:45:11.678 307:link-prediction        INFO   idx: s809030941_next
2023-06-06 01:45:11.678 308:link-prediction        INFO   label: 0
2023-06-06 01:45:11.679 309:link-prediction        INFO   input_tokens_1: ['new', '_StringBuilder', '()']
2023-06-06 01:45:11.679 317:link-prediction        INFO   input_ids_1: 14 17
2023-06-06 01:45:11.679 324:link-prediction        INFO   span_arry_1: [14, 16] [14, 16], mask 1 0
2023-06-06 01:45:11.679 334:link-prediction        INFO   input_tokens_reverse_1: Ġbuilder Ġ= Ġnew
2023-06-06 01:45:11.679 344:link-prediction        INFO   input_tokens_2: ['read', '()']
2023-06-06 01:45:11.679 352:link-prediction        INFO   input_ids_2: 20 22
2023-06-06 01:45:11.679 359:link-prediction        INFO   span_arry_2: [20, 21] [20, 21], mask 1 0
2023-06-06 01:45:11.680 369:link-prediction        INFO   input_tokens_reverse_2: ĠcodePoint Ġ=
2023-06-06 01:45:11.680 306:link-prediction        INFO   *** Example ***
2023-06-06 01:45:11.680 307:link-prediction        INFO   idx: s460837934_main
2023-06-06 01:45:11.680 308:link-prediction        INFO   label: 1
2023-06-06 01:45:11.680 309:link-prediction        INFO   input_tokens_1: ['S', '.', 'equals', '("', 'AAA', '")', '_||', '_S', '.', 'equals', '("', 'BBB', '")']
2023-06-06 01:45:11.680 317:link-prediction        INFO   input_ids_1: 32 45
2023-06-06 01:45:11.680 324:link-prediction        INFO   span_arry_1: [32, 44] [32, 44], mask 1 0
2023-06-06 01:45:11.681 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( S . equals (" AAA ") Ġ|| ĠS . equals ("
2023-06-06 01:45:11.681 344:link-prediction        INFO   input_tokens_2: ['System', '.', 'out', '.', 'println', '("', 'No', '")']
2023-06-06 01:45:11.681 352:link-prediction        INFO   input_ids_2: 46 54
2023-06-06 01:45:11.681 359:link-prediction        INFO   span_arry_2: [46, 53] [46, 53], mask 1 0
2023-06-06 01:45:11.681 369:link-prediction        INFO   input_tokens_reverse_2: ")) Ġ{ ĠSystem . out . println ("
2023-06-06 01:45:11.681 306:link-prediction        INFO   *** Example ***
2023-06-06 01:45:11.681 307:link-prediction        INFO   idx: s621434572_main
2023-06-06 01:45:11.682 308:link-prediction        INFO   label: 0
2023-06-06 01:45:11.682 309:link-prediction        INFO   input_tokens_1: ['(', 'a', '[', '0', ']', '_%', '_j', '_==', '_0', ')', '_&&', '_(', 'a', '[', '1', ']', '_%', '_j', '_==', '_0', ')']
2023-06-06 01:45:11.682 317:link-prediction        INFO   input_ids_1: 87 108
2023-06-06 01:45:11.682 324:link-prediction        INFO   span_arry_1: [87, 107] [87, 107], mask 1 0
2023-06-06 01:45:11.682 334:link-prediction        INFO   input_tokens_reverse_1: Ġ{ Ġif Ġ(( a [ 0 ] Ġ% Ġj Ġ== Ġ0 ) Ġ&& Ġ( a [ 1 ] Ġ% Ġj Ġ==
2023-06-06 01:45:11.682 344:link-prediction        INFO   input_tokens_2: ['b', '_=', '_false']
2023-06-06 01:45:11.683 352:link-prediction        INFO   input_ids_2: 171 174
2023-06-06 01:45:11.683 359:link-prediction        INFO   span_arry_2: [171, 173] [171, 173], mask 1 0
2023-06-06 01:45:11.683 369:link-prediction        INFO   input_tokens_reverse_2: Ġk ; Ġb
2023-06-06 01:45:11.683 306:link-prediction        INFO   *** Example ***
2023-06-06 01:45:11.683 307:link-prediction        INFO   idx: s466773133_getFrame
2023-06-06 01:45:11.683 308:link-prediction        INFO   label: 1
2023-06-06 01:45:11.683 309:link-prediction        INFO   input_tokens_1: ['i', '_==', '_0', '_||', '_i', '_==', '_(', 'height', '_-', '_1', ')']
2023-06-06 01:45:11.684 317:link-prediction        INFO   input_ids_1: 53 64
2023-06-06 01:45:11.684 324:link-prediction        INFO   span_arry_1: [53, 63] [53, 63], mask 1 0
2023-06-06 01:45:11.684 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( i Ġ== Ġ0 Ġ|| Ġi Ġ== Ġ( height Ġ-
2023-06-06 01:45:11.684 344:link-prediction        INFO   input_tokens_2: ['j', '_==', '_0']
2023-06-06 01:45:11.684 352:link-prediction        INFO   input_ids_2: 65 68
2023-06-06 01:45:11.684 359:link-prediction        INFO   span_arry_2: [65, 67] [65, 67], mask 1 0
2023-06-06 01:45:11.684 369:link-prediction        INFO   input_tokens_reverse_2: ) Ġ|| Ġj
2023-06-06 01:45:11.685 306:link-prediction        INFO   *** Example ***
2023-06-06 01:45:11.685 307:link-prediction        INFO   idx: s368670864_nextLong
2023-06-06 01:45:11.685 308:link-prediction        INFO   label: 0
2023-06-06 01:45:11.685 309:link-prediction        INFO   input_tokens_1: ['b', '_<', "_'", '0', "'", '_||', "_'", '9', "'", '_<', '_b']
2023-06-06 01:45:11.685 317:link-prediction        INFO   input_ids_1: 51 62
2023-06-06 01:45:11.685 324:link-prediction        INFO   span_arry_1: [51, 61] [51, 61], mask 1 0
2023-06-06 01:45:11.685 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( b Ġ< Ġ' 0 ' Ġ|| Ġ' 9 '
2023-06-06 01:45:11.686 344:link-prediction        INFO   input_tokens_2: ['minus', '_?', '_-', 'n', '_:', '_n']
2023-06-06 01:45:11.686 352:link-prediction        INFO   input_ids_2: 117 123
2023-06-06 01:45:11.686 359:link-prediction        INFO   span_arry_2: [117, 122] [117, 122], mask 1 0
2023-06-06 01:45:11.686 369:link-prediction        INFO   input_tokens_reverse_2: Ġ{ Ġreturn Ġminus Ġ? Ġ- n
2023-06-06 01:45:11.686 997:link-prediction        INFO   Finishing loading Dataset
2023-06-06 01:45:11.707 1006:link-prediction        INFO   Probimg Model Parameters 3843
2023-06-06 01:45:11.708 1007:link-prediction        INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/java250/graphs', dataset='java250', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=2, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=0, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0', posratio=0.5, seed=955, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-06 01:45:13.145 472:link-prediction        INFO   ***** Running training *****
2023-06-06 01:45:13.145 473:link-prediction        INFO     Num examples = 9696
2023-06-06 01:45:13.146 474:link-prediction        INFO     Num Epochs = 2
2023-06-06 01:45:13.146 475:link-prediction        INFO     Instantaneous batch size per GPU = 64
2023-06-06 01:45:13.146 479:link-prediction        INFO     Total train batch size = 64
2023-06-06 01:45:13.146 483:link-prediction        INFO     Gradient Accumulation steps = 1
2023-06-06 01:45:13.146 486:link-prediction        INFO     Total optimization steps = 304
2023-06-06 01:45:15.200 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:45:15.200 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:45:15.200 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:45:18.580 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:45:18.581 650:link-prediction        INFO     eval_acc = 0.6325
2023-06-06 01:45:18.581 650:link-prediction        INFO     eval_f1 = 0.6172
2023-06-06 01:45:18.581 650:link-prediction        INFO     eval_mcc = 0.2658
2023-06-06 01:45:18.581 650:link-prediction        INFO     eval_precision = 0.644
2023-06-06 01:45:18.581 650:link-prediction        INFO     eval_recall = 0.5926
2023-06-06 01:45:18.581 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:45:18.584 543:link-prediction        INFO     ********************
2023-06-06 01:45:18.584 544:link-prediction        INFO     Best f1:0.6172
2023-06-06 01:45:18.584 545:link-prediction        INFO     ********************
2023-06-06 01:45:18.589 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:45:18.589 565:link-prediction        INFO     ********************
2023-06-06 01:45:18.589 566:link-prediction        INFO     Best MCC:0.2658
2023-06-06 01:45:18.589 567:link-prediction        INFO     ********************
2023-06-06 01:45:18.592 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:45:19.508 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:45:19.509 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:45:19.509 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:45:22.249 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:45:22.249 650:link-prediction        INFO     eval_acc = 0.7601
2023-06-06 01:45:22.250 650:link-prediction        INFO     eval_f1 = 0.7968
2023-06-06 01:45:22.250 650:link-prediction        INFO     eval_mcc = 0.5578
2023-06-06 01:45:22.250 650:link-prediction        INFO     eval_precision = 0.691
2023-06-06 01:45:22.250 650:link-prediction        INFO     eval_recall = 0.9407
2023-06-06 01:45:22.250 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:45:22.253 543:link-prediction        INFO     ********************
2023-06-06 01:45:22.253 544:link-prediction        INFO     Best f1:0.7968
2023-06-06 01:45:22.253 545:link-prediction        INFO     ********************
2023-06-06 01:45:22.256 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:45:22.256 565:link-prediction        INFO     ********************
2023-06-06 01:45:22.256 566:link-prediction        INFO     Best MCC:0.5578
2023-06-06 01:45:22.256 567:link-prediction        INFO     ********************
2023-06-06 01:45:22.258 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:45:23.129 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:45:23.129 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:45:23.129 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:45:25.830 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:45:25.831 650:link-prediction        INFO     eval_acc = 0.8527
2023-06-06 01:45:25.831 650:link-prediction        INFO     eval_f1 = 0.8647
2023-06-06 01:45:25.831 650:link-prediction        INFO     eval_mcc = 0.7167
2023-06-06 01:45:25.831 650:link-prediction        INFO     eval_precision = 0.7996
2023-06-06 01:45:25.831 650:link-prediction        INFO     eval_recall = 0.9413
2023-06-06 01:45:25.831 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:45:25.835 543:link-prediction        INFO     ********************
2023-06-06 01:45:25.835 544:link-prediction        INFO     Best f1:0.8647
2023-06-06 01:45:25.835 545:link-prediction        INFO     ********************
2023-06-06 01:45:25.838 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:45:25.838 565:link-prediction        INFO     ********************
2023-06-06 01:45:25.838 566:link-prediction        INFO     Best MCC:0.7167
2023-06-06 01:45:25.839 567:link-prediction        INFO     ********************
2023-06-06 01:45:25.840 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:45:26.702 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:45:26.702 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:45:26.702 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:45:29.426 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:45:29.427 650:link-prediction        INFO     eval_acc = 0.8708
2023-06-06 01:45:29.427 650:link-prediction        INFO     eval_f1 = 0.8749
2023-06-06 01:45:29.427 650:link-prediction        INFO     eval_mcc = 0.7432
2023-06-06 01:45:29.427 650:link-prediction        INFO     eval_precision = 0.8479
2023-06-06 01:45:29.427 650:link-prediction        INFO     eval_recall = 0.9038
2023-06-06 01:45:29.428 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:45:29.431 543:link-prediction        INFO     ********************
2023-06-06 01:45:29.431 544:link-prediction        INFO     Best f1:0.8749
2023-06-06 01:45:29.432 545:link-prediction        INFO     ********************
2023-06-06 01:45:29.434 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:45:29.435 565:link-prediction        INFO     ********************
2023-06-06 01:45:29.435 566:link-prediction        INFO     Best MCC:0.7432
2023-06-06 01:45:29.435 567:link-prediction        INFO     ********************
2023-06-06 01:45:29.437 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:45:30.266 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:45:30.267 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:45:30.267 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:45:32.874 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:45:32.875 650:link-prediction        INFO     eval_acc = 0.8721
2023-06-06 01:45:32.875 650:link-prediction        INFO     eval_f1 = 0.876
2023-06-06 01:45:32.875 650:link-prediction        INFO     eval_mcc = 0.7457
2023-06-06 01:45:32.875 650:link-prediction        INFO     eval_precision = 0.8504
2023-06-06 01:45:32.875 650:link-prediction        INFO     eval_recall = 0.9031
2023-06-06 01:45:32.875 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:45:32.878 543:link-prediction        INFO     ********************
2023-06-06 01:45:32.879 544:link-prediction        INFO     Best f1:0.876
2023-06-06 01:45:32.879 545:link-prediction        INFO     ********************
2023-06-06 01:45:32.881 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:45:32.881 565:link-prediction        INFO     ********************
2023-06-06 01:45:32.881 566:link-prediction        INFO     Best MCC:0.7457
2023-06-06 01:45:32.882 567:link-prediction        INFO     ********************
2023-06-06 01:45:32.883 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:45:33.724 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:45:33.725 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:45:33.725 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:45:36.375 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:45:36.375 650:link-prediction        INFO     eval_acc = 0.8804
2023-06-06 01:45:36.376 650:link-prediction        INFO     eval_f1 = 0.8865
2023-06-06 01:45:36.376 650:link-prediction        INFO     eval_mcc = 0.7651
2023-06-06 01:45:36.376 650:link-prediction        INFO     eval_precision = 0.8435
2023-06-06 01:45:36.376 650:link-prediction        INFO     eval_recall = 0.9341
2023-06-06 01:45:36.376 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:45:36.379 543:link-prediction        INFO     ********************
2023-06-06 01:45:36.379 544:link-prediction        INFO     Best f1:0.8865
2023-06-06 01:45:36.380 545:link-prediction        INFO     ********************
2023-06-06 01:45:36.382 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:45:36.382 565:link-prediction        INFO     ********************
2023-06-06 01:45:36.383 566:link-prediction        INFO     Best MCC:0.7651
2023-06-06 01:45:36.383 567:link-prediction        INFO     ********************
2023-06-06 01:45:36.384 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:45:37.213 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:45:37.214 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:45:37.214 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:45:39.896 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:45:39.897 650:link-prediction        INFO     eval_acc = 0.8827
2023-06-06 01:45:39.897 650:link-prediction        INFO     eval_f1 = 0.8888
2023-06-06 01:45:39.897 650:link-prediction        INFO     eval_mcc = 0.7701
2023-06-06 01:45:39.897 650:link-prediction        INFO     eval_precision = 0.8445
2023-06-06 01:45:39.897 650:link-prediction        INFO     eval_recall = 0.938
2023-06-06 01:45:39.897 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:45:39.900 543:link-prediction        INFO     ********************
2023-06-06 01:45:39.900 544:link-prediction        INFO     Best f1:0.8888
2023-06-06 01:45:39.901 545:link-prediction        INFO     ********************
2023-06-06 01:45:39.903 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:45:39.903 565:link-prediction        INFO     ********************
2023-06-06 01:45:39.903 566:link-prediction        INFO     Best MCC:0.7701
2023-06-06 01:45:39.904 567:link-prediction        INFO     ********************
2023-06-06 01:45:39.905 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:45:40.789 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:45:40.790 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:45:40.790 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:45:43.459 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:45:43.460 650:link-prediction        INFO     eval_acc = 0.8843
2023-06-06 01:45:43.460 650:link-prediction        INFO     eval_f1 = 0.8907
2023-06-06 01:45:43.460 650:link-prediction        INFO     eval_mcc = 0.7739
2023-06-06 01:45:43.460 650:link-prediction        INFO     eval_precision = 0.8442
2023-06-06 01:45:43.460 650:link-prediction        INFO     eval_recall = 0.9426
2023-06-06 01:45:43.461 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:45:43.464 543:link-prediction        INFO     ********************
2023-06-06 01:45:43.464 544:link-prediction        INFO     Best f1:0.8907
2023-06-06 01:45:43.464 545:link-prediction        INFO     ********************
2023-06-06 01:45:43.466 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:45:43.467 565:link-prediction        INFO     ********************
2023-06-06 01:45:43.467 566:link-prediction        INFO     Best MCC:0.7739
2023-06-06 01:45:43.467 567:link-prediction        INFO     ********************
2023-06-06 01:45:43.469 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:45:44.314 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:45:44.315 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:45:44.315 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:45:46.892 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:45:46.892 650:link-prediction        INFO     eval_acc = 0.8843
2023-06-06 01:45:46.892 650:link-prediction        INFO     eval_f1 = 0.8908
2023-06-06 01:45:46.893 650:link-prediction        INFO     eval_mcc = 0.774
2023-06-06 01:45:46.893 650:link-prediction        INFO     eval_precision = 0.8438
2023-06-06 01:45:46.893 650:link-prediction        INFO     eval_recall = 0.9433
2023-06-06 01:45:46.893 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:45:46.896 543:link-prediction        INFO     ********************
2023-06-06 01:45:46.896 544:link-prediction        INFO     Best f1:0.8908
2023-06-06 01:45:46.896 545:link-prediction        INFO     ********************
2023-06-06 01:45:46.899 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:45:46.899 565:link-prediction        INFO     ********************
2023-06-06 01:45:46.899 566:link-prediction        INFO     Best MCC:0.774
2023-06-06 01:45:46.899 567:link-prediction        INFO     ********************
2023-06-06 01:45:46.901 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:45:47.728 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:45:47.728 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:45:47.728 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:45:50.336 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:45:50.337 650:link-prediction        INFO     eval_acc = 0.8876
2023-06-06 01:45:50.337 650:link-prediction        INFO     eval_f1 = 0.8941
2023-06-06 01:45:50.337 650:link-prediction        INFO     eval_mcc = 0.7812
2023-06-06 01:45:50.337 650:link-prediction        INFO     eval_precision = 0.8451
2023-06-06 01:45:50.337 650:link-prediction        INFO     eval_recall = 0.9492
2023-06-06 01:45:50.337 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:45:50.340 543:link-prediction        INFO     ********************
2023-06-06 01:45:50.341 544:link-prediction        INFO     Best f1:0.8941
2023-06-06 01:45:50.341 545:link-prediction        INFO     ********************
2023-06-06 01:45:50.345 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:45:50.346 565:link-prediction        INFO     ********************
2023-06-06 01:45:50.346 566:link-prediction        INFO     Best MCC:0.7812
2023-06-06 01:45:50.346 567:link-prediction        INFO     ********************
2023-06-06 01:45:50.347 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:45:51.185 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:45:51.185 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:45:51.185 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:45:53.881 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:45:53.881 650:link-prediction        INFO     eval_acc = 0.8912
2023-06-06 01:45:53.881 650:link-prediction        INFO     eval_f1 = 0.8978
2023-06-06 01:45:53.881 650:link-prediction        INFO     eval_mcc = 0.7889
2023-06-06 01:45:53.881 650:link-prediction        INFO     eval_precision = 0.8469
2023-06-06 01:45:53.882 650:link-prediction        INFO     eval_recall = 0.9552
2023-06-06 01:45:53.882 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:45:53.885 543:link-prediction        INFO     ********************
2023-06-06 01:45:53.886 544:link-prediction        INFO     Best f1:0.8978
2023-06-06 01:45:53.886 545:link-prediction        INFO     ********************
2023-06-06 01:45:53.888 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:45:53.888 565:link-prediction        INFO     ********************
2023-06-06 01:45:53.888 566:link-prediction        INFO     Best MCC:0.7889
2023-06-06 01:45:53.888 567:link-prediction        INFO     ********************
2023-06-06 01:45:53.890 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/2/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:45:54.780 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:45:54.780 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:45:54.780 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:45:57.449 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:45:57.450 650:link-prediction        INFO     eval_acc = 0.8899
2023-06-06 01:45:57.450 650:link-prediction        INFO     eval_f1 = 0.8961
2023-06-06 01:45:57.450 650:link-prediction        INFO     eval_mcc = 0.7855
2023-06-06 01:45:57.450 650:link-prediction        INFO     eval_precision = 0.8481
2023-06-06 01:45:57.450 650:link-prediction        INFO     eval_recall = 0.9499
2023-06-06 01:45:57.450 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:45:58.316 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:45:58.316 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:45:58.316 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:46:01.019 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:46:01.019 650:link-prediction        INFO     eval_acc = 0.8906
2023-06-06 01:46:01.020 650:link-prediction        INFO     eval_f1 = 0.8966
2023-06-06 01:46:01.020 650:link-prediction        INFO     eval_mcc = 0.7865
2023-06-06 01:46:01.020 650:link-prediction        INFO     eval_precision = 0.85
2023-06-06 01:46:01.020 650:link-prediction        INFO     eval_recall = 0.9486
2023-06-06 01:46:01.020 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:46:01.844 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:46:01.845 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:46:01.845 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:46:04.441 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:46:04.441 650:link-prediction        INFO     eval_acc = 0.8902
2023-06-06 01:46:04.441 650:link-prediction        INFO     eval_f1 = 0.8968
2023-06-06 01:46:04.442 650:link-prediction        INFO     eval_mcc = 0.7869
2023-06-06 01:46:04.442 650:link-prediction        INFO     eval_precision = 0.8462
2023-06-06 01:46:04.442 650:link-prediction        INFO     eval_recall = 0.9539
2023-06-06 01:46:04.442 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:46:05.314 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:46:05.314 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:46:05.314 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:46:07.987 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:46:07.987 650:link-prediction        INFO     eval_acc = 0.8912
2023-06-06 01:46:07.987 650:link-prediction        INFO     eval_f1 = 0.8977
2023-06-06 01:46:07.987 650:link-prediction        INFO     eval_mcc = 0.7888
2023-06-06 01:46:07.987 650:link-prediction        INFO     eval_precision = 0.8473
2023-06-06 01:46:07.988 650:link-prediction        INFO     eval_recall = 0.9545
2023-06-06 01:46:07.988 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:46:08.865 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:46:08.865 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:46:08.865 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:46:11.598 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:46:11.598 650:link-prediction        INFO     eval_acc = 0.8912
2023-06-06 01:46:11.598 650:link-prediction        INFO     eval_f1 = 0.8977
2023-06-06 01:46:11.598 650:link-prediction        INFO     eval_mcc = 0.7888
2023-06-06 01:46:11.598 650:link-prediction        INFO     eval_precision = 0.8473
2023-06-06 01:46:11.598 650:link-prediction        INFO     eval_recall = 0.9545
2023-06-06 01:46:11.598 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:46:12.432 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:46:12.433 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:46:12.433 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:46:14.998 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:46:14.998 650:link-prediction        INFO     eval_acc = 0.8912
2023-06-06 01:46:14.998 650:link-prediction        INFO     eval_f1 = 0.8977
2023-06-06 01:46:14.998 650:link-prediction        INFO     eval_mcc = 0.7888
2023-06-06 01:46:14.999 650:link-prediction        INFO     eval_precision = 0.8473
2023-06-06 01:46:14.999 650:link-prediction        INFO     eval_recall = 0.9545
2023-06-06 01:46:14.999 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:46:15.844 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:46:15.844 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:46:15.844 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:46:18.455 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:46:18.455 650:link-prediction        INFO     eval_acc = 0.8909
2023-06-06 01:46:18.455 650:link-prediction        INFO     eval_f1 = 0.8974
2023-06-06 01:46:18.455 650:link-prediction        INFO     eval_mcc = 0.7881
2023-06-06 01:46:18.455 650:link-prediction        INFO     eval_precision = 0.8472
2023-06-06 01:46:18.456 650:link-prediction        INFO     eval_recall = 0.9539
2023-06-06 01:46:18.456 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:46:19.295 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:46:19.296 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:46:19.296 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:46:21.967 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:46:21.968 650:link-prediction        INFO     eval_acc = 0.8909
2023-06-06 01:46:21.968 650:link-prediction        INFO     eval_f1 = 0.8974
2023-06-06 01:46:21.968 650:link-prediction        INFO     eval_mcc = 0.7881
2023-06-06 01:46:21.968 650:link-prediction        INFO     eval_precision = 0.8472
2023-06-06 01:46:21.968 650:link-prediction        INFO     eval_recall = 0.9539
2023-06-06 01:46:21.968 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:46:22.823 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-06 01:46:22.823 602:link-prediction        INFO     Num examples = 3034
2023-06-06 01:46:22.823 603:link-prediction        INFO     Batch size = 32
2023-06-06 01:46:25.522 648:link-prediction        INFO   ***** Eval results *****
2023-06-06 01:46:25.522 650:link-prediction        INFO     eval_acc = 0.8909
2023-06-06 01:46:25.522 650:link-prediction        INFO     eval_f1 = 0.8974
2023-06-06 01:46:25.523 650:link-prediction        INFO     eval_mcc = 0.7881
2023-06-06 01:46:25.523 650:link-prediction        INFO     eval_precision = 0.8472
2023-06-06 01:46:25.523 650:link-prediction        INFO     eval_recall = 0.9539
2023-06-06 01:46:25.523 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-06 01:46:25.741 671:link-prediction        INFO   ***** Running Test *****
2023-06-06 01:46:25.741 672:link-prediction        INFO     Num examples = 2814
2023-06-06 01:46:25.741 673:link-prediction        INFO     Batch size = 32
2023-06-06 01:46:28.404 714:link-prediction        INFO   ***** Test results *****
2023-06-06 01:46:28.405 716:link-prediction        INFO     eval_acc = 0.8842
2023-06-06 01:46:28.405 716:link-prediction        INFO     eval_f1 = 0.8927
2023-06-06 01:46:28.405 716:link-prediction        INFO     eval_mcc = 0.7782
2023-06-06 01:46:28.405 716:link-prediction        INFO     eval_precision = 0.8314
2023-06-06 01:46:28.405 716:link-prediction        INFO     eval_recall = 0.9638
2023-06-06 01:46:28.405 716:link-prediction        INFO     eval_threshold = 0.5
