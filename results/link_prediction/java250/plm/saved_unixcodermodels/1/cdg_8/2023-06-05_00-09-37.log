2023-06-05 00:09:37.742 936:link-prediction        DEBUG  main message
2023-06-05 00:09:37.742 942:link-prediction        WARNING device: cuda, n_gpu: 1
2023-06-05 00:09:38.517 957:link-prediction        INFO   Load Dataset
2023-06-05 00:11:10.143 249:link-prediction        INFO   Load Span file and Graph data, data path: ../datasets/java250/graphs/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 00:11:10.527 301:link-prediction        INFO   Labels Counter({1: 4848, 0: 4848})
2023-06-05 00:11:11.630 249:link-prediction        INFO   Load Span file and Graph data, data path: ../datasets/java250/graphs/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 00:11:11.940 301:link-prediction        INFO   Labels Counter({0: 1517, 1: 1517})
2023-06-05 00:11:12.924 249:link-prediction        INFO   Load Span file and Graph data, data path: ../datasets/java250/graphs/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 00:11:12.990 301:link-prediction        INFO   Labels Counter({0: 1407, 1: 1407})
2023-06-05 00:11:12.991 306:link-prediction        INFO   *** Example ***
2023-06-05 00:11:12.991 307:link-prediction        INFO   idx: s991606671_main
2023-06-05 00:11:12.991 308:link-prediction        INFO   label: 1
2023-06-05 00:11:12.991 309:link-prediction        INFO   input_tokens_1: ['i', '_<', '_N']
2023-06-05 00:11:12.992 317:link-prediction        INFO   input_ids_1: 147 150
2023-06-05 00:11:12.992 324:link-prediction        INFO   span_arry_1: [147, 149] [147, 149], mask 1 0
2023-06-05 00:11:12.992 334:link-prediction        INFO   input_tokens_reverse_1: Ġ0 ; Ġi
2023-06-05 00:11:12.992 344:link-prediction        INFO   input_tokens_2: ['A', '[', 'i', ']']
2023-06-05 00:11:12.992 352:link-prediction        INFO   input_ids_2: 164 168
2023-06-05 00:11:12.992 359:link-prediction        INFO   span_arry_2: [164, 167] [164, 167], mask 1 0
2023-06-05 00:11:12.992 369:link-prediction        INFO   input_tokens_reverse_2: valueOf ( A [
2023-06-05 00:11:12.992 306:link-prediction        INFO   *** Example ***
2023-06-05 00:11:12.992 307:link-prediction        INFO   idx: s056825035_main
2023-06-05 00:11:12.993 308:link-prediction        INFO   label: 1
2023-06-05 00:11:12.993 309:link-prediction        INFO   input_tokens_1: ['previous', '_!=', '_list', '[', 'i', '].', 'charAt', '(', '0', ')']
2023-06-05 00:11:12.993 317:link-prediction        INFO   input_ids_1: 165 175
2023-06-05 00:11:12.993 324:link-prediction        INFO   span_arry_1: [165, 174] [165, 174], mask 1 0
2023-06-05 00:11:12.993 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( previous Ġ!= Ġlist [ i ]. charAt (
2023-06-05 00:11:12.993 344:link-prediction        INFO   input_tokens_2: ['previous', '_=', '_list', '[', 'i', '].', 'charAt', '(', 'list', '[', 'i', '].', 'length', '()', '_-', '_1', ')']
2023-06-05 00:11:12.994 352:link-prediction        INFO   input_ids_2: 184 201
2023-06-05 00:11:12.994 359:link-prediction        INFO   span_arry_2: [184, 200] [184, 200], mask 1 0
2023-06-05 00:11:12.994 369:link-prediction        INFO   input_tokens_reverse_2: ; Ġ} Ġprevious Ġ= Ġlist [ i ]. charAt ( list [ i ]. length () Ġ-
2023-06-05 00:11:12.994 306:link-prediction        INFO   *** Example ***
2023-06-05 00:11:12.994 307:link-prediction        INFO   idx: s279088077_nextLong
2023-06-05 00:11:12.994 308:link-prediction        INFO   label: 1
2023-06-05 00:11:12.994 309:link-prediction        INFO   input_tokens_1: ['c', '_==', "_'-'"]
2023-06-05 00:11:12.994 317:link-prediction        INFO   input_ids_1: 43 46
2023-06-05 00:11:12.995 324:link-prediction        INFO   span_arry_1: [43, 45] [43, 45], mask 1 0
2023-06-05 00:11:12.995 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( c
2023-06-05 00:11:12.995 344:link-prediction        INFO   input_tokens_2: ['c', '_=', '_read', 'Byte', '()']
2023-06-05 00:11:12.995 352:link-prediction        INFO   input_ids_2: 51 56
2023-06-05 00:11:12.995 359:link-prediction        INFO   span_arry_2: [51, 55] [51, 55], mask 1 0
2023-06-05 00:11:12.995 369:link-prediction        INFO   input_tokens_reverse_2: Ġtrue ; Ġc Ġ= Ġread
2023-06-05 00:11:12.995 306:link-prediction        INFO   *** Example ***
2023-06-05 00:11:12.995 307:link-prediction        INFO   idx: s809030941_next
2023-06-05 00:11:12.996 308:link-prediction        INFO   label: 0
2023-06-05 00:11:12.996 309:link-prediction        INFO   input_tokens_1: ['return', '_builder', '.', 'toString', '();']
2023-06-05 00:11:12.996 317:link-prediction        INFO   input_ids_1: 43 48
2023-06-05 00:11:12.996 324:link-prediction        INFO   span_arry_1: [43, 47] [43, 47], mask 1 0
2023-06-05 00:11:12.996 334:link-prediction        INFO   input_tokens_reverse_1: (); Ġ} Ġreturn Ġbuilder .
2023-06-05 00:11:12.996 344:link-prediction        INFO   input_tokens_2: ['read', '()']
2023-06-05 00:11:12.996 352:link-prediction        INFO   input_ids_2: 20 22
2023-06-05 00:11:12.996 359:link-prediction        INFO   span_arry_2: [20, 21] [20, 21], mask 1 0
2023-06-05 00:11:12.997 369:link-prediction        INFO   input_tokens_reverse_2: ĠcodePoint Ġ=
2023-06-05 00:11:12.997 306:link-prediction        INFO   *** Example ***
2023-06-05 00:11:12.997 307:link-prediction        INFO   idx: s809030941_next
2023-06-05 00:11:12.997 308:link-prediction        INFO   label: 0
2023-06-05 00:11:12.997 309:link-prediction        INFO   input_tokens_1: ['new', '_StringBuilder', '()']
2023-06-05 00:11:12.997 317:link-prediction        INFO   input_ids_1: 14 17
2023-06-05 00:11:12.997 324:link-prediction        INFO   span_arry_1: [14, 16] [14, 16], mask 1 0
2023-06-05 00:11:12.997 334:link-prediction        INFO   input_tokens_reverse_1: Ġbuilder Ġ= Ġnew
2023-06-05 00:11:12.998 344:link-prediction        INFO   input_tokens_2: ['read', '()']
2023-06-05 00:11:12.998 352:link-prediction        INFO   input_ids_2: 20 22
2023-06-05 00:11:12.998 359:link-prediction        INFO   span_arry_2: [20, 21] [20, 21], mask 1 0
2023-06-05 00:11:12.998 369:link-prediction        INFO   input_tokens_reverse_2: ĠcodePoint Ġ=
2023-06-05 00:11:12.998 306:link-prediction        INFO   *** Example ***
2023-06-05 00:11:12.998 307:link-prediction        INFO   idx: s460837934_main
2023-06-05 00:11:12.998 308:link-prediction        INFO   label: 1
2023-06-05 00:11:12.998 309:link-prediction        INFO   input_tokens_1: ['S', '.', 'equals', '("', 'AAA', '")', '_||', '_S', '.', 'equals', '("', 'BBB', '")']
2023-06-05 00:11:12.999 317:link-prediction        INFO   input_ids_1: 32 45
2023-06-05 00:11:12.999 324:link-prediction        INFO   span_arry_1: [32, 44] [32, 44], mask 1 0
2023-06-05 00:11:12.999 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( S . equals (" AAA ") Ġ|| ĠS . equals ("
2023-06-05 00:11:12.999 344:link-prediction        INFO   input_tokens_2: ['System', '.', 'out', '.', 'println', '("', 'No', '")']
2023-06-05 00:11:12.999 352:link-prediction        INFO   input_ids_2: 46 54
2023-06-05 00:11:12.999 359:link-prediction        INFO   span_arry_2: [46, 53] [46, 53], mask 1 0
2023-06-05 00:11:12.999 369:link-prediction        INFO   input_tokens_reverse_2: ")) Ġ{ ĠSystem . out . println ("
2023-06-05 00:11:12.999 306:link-prediction        INFO   *** Example ***
2023-06-05 00:11:13.000 307:link-prediction        INFO   idx: s621434572_main
2023-06-05 00:11:13.000 308:link-prediction        INFO   label: 0
2023-06-05 00:11:13.000 309:link-prediction        INFO   input_tokens_1: ['(', 'a', '[', '0', ']', '_%', '_j', '_==', '_0', ')', '_&&', '_(', 'a', '[', '1', ']', '_%', '_j', '_==', '_0', ')']
2023-06-05 00:11:13.000 317:link-prediction        INFO   input_ids_1: 87 108
2023-06-05 00:11:13.000 324:link-prediction        INFO   span_arry_1: [87, 107] [87, 107], mask 1 0
2023-06-05 00:11:13.000 334:link-prediction        INFO   input_tokens_reverse_1: Ġ{ Ġif Ġ(( a [ 0 ] Ġ% Ġj Ġ== Ġ0 ) Ġ&& Ġ( a [ 1 ] Ġ% Ġj Ġ==
2023-06-05 00:11:13.000 344:link-prediction        INFO   input_tokens_2: ['b', '_=', '_false']
2023-06-05 00:11:13.001 352:link-prediction        INFO   input_ids_2: 171 174
2023-06-05 00:11:13.001 359:link-prediction        INFO   span_arry_2: [171, 173] [171, 173], mask 1 0
2023-06-05 00:11:13.001 369:link-prediction        INFO   input_tokens_reverse_2: Ġk ; Ġb
2023-06-05 00:11:13.001 306:link-prediction        INFO   *** Example ***
2023-06-05 00:11:13.001 307:link-prediction        INFO   idx: s466773133_getFrame
2023-06-05 00:11:13.001 308:link-prediction        INFO   label: 1
2023-06-05 00:11:13.001 309:link-prediction        INFO   input_tokens_1: ['i', '_==', '_0', '_||', '_i', '_==', '_(', 'height', '_-', '_1', ')']
2023-06-05 00:11:13.001 317:link-prediction        INFO   input_ids_1: 53 64
2023-06-05 00:11:13.002 324:link-prediction        INFO   span_arry_1: [53, 63] [53, 63], mask 1 0
2023-06-05 00:11:13.002 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( i Ġ== Ġ0 Ġ|| Ġi Ġ== Ġ( height Ġ-
2023-06-05 00:11:13.002 344:link-prediction        INFO   input_tokens_2: ['j', '_==', '_0']
2023-06-05 00:11:13.002 352:link-prediction        INFO   input_ids_2: 65 68
2023-06-05 00:11:13.002 359:link-prediction        INFO   span_arry_2: [65, 67] [65, 67], mask 1 0
2023-06-05 00:11:13.002 369:link-prediction        INFO   input_tokens_reverse_2: ) Ġ|| Ġj
2023-06-05 00:11:13.002 306:link-prediction        INFO   *** Example ***
2023-06-05 00:11:13.002 307:link-prediction        INFO   idx: s368670864_nextLong
2023-06-05 00:11:13.003 308:link-prediction        INFO   label: 0
2023-06-05 00:11:13.003 309:link-prediction        INFO   input_tokens_1: ['b', '_<', "_'", '0', "'", '_||', "_'", '9', "'", '_<', '_b']
2023-06-05 00:11:13.003 317:link-prediction        INFO   input_ids_1: 51 62
2023-06-05 00:11:13.003 324:link-prediction        INFO   span_arry_1: [51, 61] [51, 61], mask 1 0
2023-06-05 00:11:13.003 334:link-prediction        INFO   input_tokens_reverse_1: Ġif Ġ( b Ġ< Ġ' 0 ' Ġ|| Ġ' 9 '
2023-06-05 00:11:13.003 344:link-prediction        INFO   input_tokens_2: ['minus', '_?', '_-', 'n', '_:', '_n']
2023-06-05 00:11:13.003 352:link-prediction        INFO   input_ids_2: 117 123
2023-06-05 00:11:13.004 359:link-prediction        INFO   span_arry_2: [117, 122] [117, 122], mask 1 0
2023-06-05 00:11:13.004 369:link-prediction        INFO   input_tokens_reverse_2: Ġ{ Ġreturn Ġminus Ġ? Ġ- n
2023-06-05 00:11:13.004 997:link-prediction        INFO   Finishing loading Dataset
2023-06-05 00:11:13.030 1006:link-prediction        INFO   Probimg Model Parameters 3843
2023-06-05 00:11:13.030 1007:link-prediction        INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/java250/graphs', dataset='java250', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=2, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8', posratio=0.5, seed=435, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 00:11:14.588 472:link-prediction        INFO   ***** Running training *****
2023-06-05 00:11:14.588 473:link-prediction        INFO     Num examples = 9696
2023-06-05 00:11:14.588 474:link-prediction        INFO     Num Epochs = 2
2023-06-05 00:11:14.588 475:link-prediction        INFO     Instantaneous batch size per GPU = 64
2023-06-05 00:11:14.588 479:link-prediction        INFO     Total train batch size = 64
2023-06-05 00:11:14.588 483:link-prediction        INFO     Gradient Accumulation steps = 1
2023-06-05 00:11:14.588 486:link-prediction        INFO     Total optimization steps = 304
2023-06-05 00:11:16.591 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:11:16.592 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:11:16.592 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:11:20.382 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:11:20.382 650:link-prediction        INFO     eval_acc = 0.6061
2023-06-05 00:11:20.382 650:link-prediction        INFO     eval_f1 = 0.7139
2023-06-05 00:11:20.383 650:link-prediction        INFO     eval_mcc = 0.3228
2023-06-05 00:11:20.383 650:link-prediction        INFO     eval_precision = 0.5605
2023-06-05 00:11:20.383 650:link-prediction        INFO     eval_recall = 0.9829
2023-06-05 00:11:20.383 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:11:20.386 543:link-prediction        INFO     ********************
2023-06-05 00:11:20.387 544:link-prediction        INFO     Best f1:0.7139
2023-06-05 00:11:20.387 545:link-prediction        INFO     ********************
2023-06-05 00:11:20.422 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-f1/model.bin
2023-06-05 00:11:20.423 565:link-prediction        INFO     ********************
2023-06-05 00:11:20.423 566:link-prediction        INFO     Best MCC:0.3228
2023-06-05 00:11:20.423 567:link-prediction        INFO     ********************
2023-06-05 00:11:20.448 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-mcc/model.bin
2023-06-05 00:11:21.346 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:11:21.346 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:11:21.347 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:11:24.463 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:11:24.464 650:link-prediction        INFO     eval_acc = 0.6852
2023-06-05 00:11:24.464 650:link-prediction        INFO     eval_f1 = 0.585
2023-06-05 00:11:24.464 650:link-prediction        INFO     eval_mcc = 0.4231
2023-06-05 00:11:24.464 650:link-prediction        INFO     eval_precision = 0.8584
2023-06-05 00:11:24.464 650:link-prediction        INFO     eval_recall = 0.4436
2023-06-05 00:11:24.464 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:11:24.467 565:link-prediction        INFO     ********************
2023-06-05 00:11:24.468 566:link-prediction        INFO     Best MCC:0.4231
2023-06-05 00:11:24.468 567:link-prediction        INFO     ********************
2023-06-05 00:11:24.470 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-mcc/model.bin
2023-06-05 00:11:25.364 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:11:25.364 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:11:25.364 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:11:28.877 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:11:28.878 650:link-prediction        INFO     eval_acc = 0.8385
2023-06-05 00:11:28.878 650:link-prediction        INFO     eval_f1 = 0.836
2023-06-05 00:11:28.878 650:link-prediction        INFO     eval_mcc = 0.6773
2023-06-05 00:11:28.878 650:link-prediction        INFO     eval_precision = 0.8491
2023-06-05 00:11:28.878 650:link-prediction        INFO     eval_recall = 0.8233
2023-06-05 00:11:28.878 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:11:28.882 543:link-prediction        INFO     ********************
2023-06-05 00:11:28.882 544:link-prediction        INFO     Best f1:0.836
2023-06-05 00:11:28.882 545:link-prediction        INFO     ********************
2023-06-05 00:11:28.885 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-f1/model.bin
2023-06-05 00:11:28.885 565:link-prediction        INFO     ********************
2023-06-05 00:11:28.885 566:link-prediction        INFO     Best MCC:0.6773
2023-06-05 00:11:28.886 567:link-prediction        INFO     ********************
2023-06-05 00:11:28.888 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-mcc/model.bin
2023-06-05 00:11:29.886 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:11:29.886 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:11:29.886 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:11:33.263 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:11:33.263 650:link-prediction        INFO     eval_acc = 0.8883
2023-06-05 00:11:33.263 650:link-prediction        INFO     eval_f1 = 0.8949
2023-06-05 00:11:33.263 650:link-prediction        INFO     eval_mcc = 0.7829
2023-06-05 00:11:33.263 650:link-prediction        INFO     eval_precision = 0.8444
2023-06-05 00:11:33.264 650:link-prediction        INFO     eval_recall = 0.9519
2023-06-05 00:11:33.264 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:11:33.267 543:link-prediction        INFO     ********************
2023-06-05 00:11:33.267 544:link-prediction        INFO     Best f1:0.8949
2023-06-05 00:11:33.268 545:link-prediction        INFO     ********************
2023-06-05 00:11:33.269 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-f1/model.bin
2023-06-05 00:11:33.270 565:link-prediction        INFO     ********************
2023-06-05 00:11:33.270 566:link-prediction        INFO     Best MCC:0.7829
2023-06-05 00:11:33.270 567:link-prediction        INFO     ********************
2023-06-05 00:11:33.272 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-mcc/model.bin
2023-06-05 00:11:34.198 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:11:34.198 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:11:34.198 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:11:37.331 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:11:37.332 650:link-prediction        INFO     eval_acc = 0.9034
2023-06-05 00:11:37.332 650:link-prediction        INFO     eval_f1 = 0.9094
2023-06-05 00:11:37.332 650:link-prediction        INFO     eval_mcc = 0.814
2023-06-05 00:11:37.332 650:link-prediction        INFO     eval_precision = 0.8562
2023-06-05 00:11:37.332 650:link-prediction        INFO     eval_recall = 0.9697
2023-06-05 00:11:37.332 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:11:37.335 543:link-prediction        INFO     ********************
2023-06-05 00:11:37.336 544:link-prediction        INFO     Best f1:0.9094
2023-06-05 00:11:37.336 545:link-prediction        INFO     ********************
2023-06-05 00:11:37.338 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-f1/model.bin
2023-06-05 00:11:37.338 565:link-prediction        INFO     ********************
2023-06-05 00:11:37.338 566:link-prediction        INFO     Best MCC:0.814
2023-06-05 00:11:37.338 567:link-prediction        INFO     ********************
2023-06-05 00:11:37.340 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-mcc/model.bin
2023-06-05 00:11:38.219 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:11:38.220 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:11:38.220 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:11:41.025 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:11:41.026 650:link-prediction        INFO     eval_acc = 0.9094
2023-06-05 00:11:41.026 650:link-prediction        INFO     eval_f1 = 0.9137
2023-06-05 00:11:41.026 650:link-prediction        INFO     eval_mcc = 0.8228
2023-06-05 00:11:41.026 650:link-prediction        INFO     eval_precision = 0.8723
2023-06-05 00:11:41.026 650:link-prediction        INFO     eval_recall = 0.9591
2023-06-05 00:11:41.027 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:11:41.030 543:link-prediction        INFO     ********************
2023-06-05 00:11:41.030 544:link-prediction        INFO     Best f1:0.9137
2023-06-05 00:11:41.030 545:link-prediction        INFO     ********************
2023-06-05 00:11:41.033 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-f1/model.bin
2023-06-05 00:11:41.033 565:link-prediction        INFO     ********************
2023-06-05 00:11:41.033 566:link-prediction        INFO     Best MCC:0.8228
2023-06-05 00:11:41.033 567:link-prediction        INFO     ********************
2023-06-05 00:11:41.035 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-mcc/model.bin
2023-06-05 00:11:41.966 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:11:41.966 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:11:41.966 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:11:44.618 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:11:44.618 650:link-prediction        INFO     eval_acc = 0.9064
2023-06-05 00:11:44.618 650:link-prediction        INFO     eval_f1 = 0.9096
2023-06-05 00:11:44.618 650:link-prediction        INFO     eval_mcc = 0.8149
2023-06-05 00:11:44.618 650:link-prediction        INFO     eval_precision = 0.8794
2023-06-05 00:11:44.619 650:link-prediction        INFO     eval_recall = 0.942
2023-06-05 00:11:44.619 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:11:45.479 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:11:45.479 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:11:45.479 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:11:48.563 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:11:48.564 650:link-prediction        INFO     eval_acc = 0.9094
2023-06-05 00:11:48.564 650:link-prediction        INFO     eval_f1 = 0.9122
2023-06-05 00:11:48.564 650:link-prediction        INFO     eval_mcc = 0.8205
2023-06-05 00:11:48.564 650:link-prediction        INFO     eval_precision = 0.8843
2023-06-05 00:11:48.564 650:link-prediction        INFO     eval_recall = 0.942
2023-06-05 00:11:48.564 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:11:49.378 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:11:49.378 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:11:49.379 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:11:52.073 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:11:52.073 650:link-prediction        INFO     eval_acc = 0.9146
2023-06-05 00:11:52.073 650:link-prediction        INFO     eval_f1 = 0.9206
2023-06-05 00:11:52.073 650:link-prediction        INFO     eval_mcc = 0.8387
2023-06-05 00:11:52.073 650:link-prediction        INFO     eval_precision = 0.8607
2023-06-05 00:11:52.073 650:link-prediction        INFO     eval_recall = 0.9895
2023-06-05 00:11:52.073 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:11:52.076 543:link-prediction        INFO     ********************
2023-06-05 00:11:52.076 544:link-prediction        INFO     Best f1:0.9206
2023-06-05 00:11:52.076 545:link-prediction        INFO     ********************
2023-06-05 00:11:52.079 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-f1/model.bin
2023-06-05 00:11:52.079 565:link-prediction        INFO     ********************
2023-06-05 00:11:52.079 566:link-prediction        INFO     Best MCC:0.8387
2023-06-05 00:11:52.079 567:link-prediction        INFO     ********************
2023-06-05 00:11:52.081 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-mcc/model.bin
2023-06-05 00:11:53.015 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:11:53.016 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:11:53.016 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:11:55.767 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:11:55.767 650:link-prediction        INFO     eval_acc = 0.9196
2023-06-05 00:11:55.767 650:link-prediction        INFO     eval_f1 = 0.9233
2023-06-05 00:11:55.767 650:link-prediction        INFO     eval_mcc = 0.8432
2023-06-05 00:11:55.767 650:link-prediction        INFO     eval_precision = 0.8823
2023-06-05 00:11:55.767 650:link-prediction        INFO     eval_recall = 0.9684
2023-06-05 00:11:55.768 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:11:55.770 543:link-prediction        INFO     ********************
2023-06-05 00:11:55.770 544:link-prediction        INFO     Best f1:0.9233
2023-06-05 00:11:55.770 545:link-prediction        INFO     ********************
2023-06-05 00:11:55.782 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-f1/model.bin
2023-06-05 00:11:55.782 565:link-prediction        INFO     ********************
2023-06-05 00:11:55.783 566:link-prediction        INFO     Best MCC:0.8432
2023-06-05 00:11:55.783 567:link-prediction        INFO     ********************
2023-06-05 00:11:55.795 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-mcc/model.bin
2023-06-05 00:11:56.594 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:11:56.595 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:11:56.595 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:11:59.586 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:11:59.586 650:link-prediction        INFO     eval_acc = 0.9216
2023-06-05 00:11:59.587 650:link-prediction        INFO     eval_f1 = 0.926
2023-06-05 00:11:59.587 650:link-prediction        INFO     eval_mcc = 0.8492
2023-06-05 00:11:59.587 650:link-prediction        INFO     eval_precision = 0.8764
2023-06-05 00:11:59.587 650:link-prediction        INFO     eval_recall = 0.9815
2023-06-05 00:11:59.587 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:11:59.590 543:link-prediction        INFO     ********************
2023-06-05 00:11:59.590 544:link-prediction        INFO     Best f1:0.926
2023-06-05 00:11:59.590 545:link-prediction        INFO     ********************
2023-06-05 00:11:59.592 560:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-f1/model.bin
2023-06-05 00:11:59.592 565:link-prediction        INFO     ********************
2023-06-05 00:11:59.592 566:link-prediction        INFO     Best MCC:0.8492
2023-06-05 00:11:59.592 567:link-prediction        INFO     ********************
2023-06-05 00:11:59.595 582:link-prediction        INFO   Saving model checkpoint to ../link_prediction/java250_res/plm/saved_unixcodermodels/1/cdg_8/checkpoint-best-mcc/model.bin
2023-06-05 00:12:00.491 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:12:00.491 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:12:00.491 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:12:03.034 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:12:03.035 650:link-prediction        INFO     eval_acc = 0.9127
2023-06-05 00:12:03.035 650:link-prediction        INFO     eval_f1 = 0.9152
2023-06-05 00:12:03.035 650:link-prediction        INFO     eval_mcc = 0.8268
2023-06-05 00:12:03.035 650:link-prediction        INFO     eval_precision = 0.8893
2023-06-05 00:12:03.035 650:link-prediction        INFO     eval_recall = 0.9426
2023-06-05 00:12:03.035 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:12:03.946 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:12:03.946 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:12:03.946 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:12:06.871 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:12:06.871 650:link-prediction        INFO     eval_acc = 0.9186
2023-06-05 00:12:06.871 650:link-prediction        INFO     eval_f1 = 0.9236
2023-06-05 00:12:06.871 650:link-prediction        INFO     eval_mcc = 0.8443
2023-06-05 00:12:06.871 650:link-prediction        INFO     eval_precision = 0.8705
2023-06-05 00:12:06.872 650:link-prediction        INFO     eval_recall = 0.9835
2023-06-05 00:12:06.872 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:12:07.688 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:12:07.691 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:12:07.692 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:12:10.589 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:12:10.590 650:link-prediction        INFO     eval_acc = 0.9199
2023-06-05 00:12:10.590 650:link-prediction        INFO     eval_f1 = 0.9243
2023-06-05 00:12:10.590 650:link-prediction        INFO     eval_mcc = 0.8455
2023-06-05 00:12:10.591 650:link-prediction        INFO     eval_precision = 0.8765
2023-06-05 00:12:10.591 650:link-prediction        INFO     eval_recall = 0.9776
2023-06-05 00:12:10.591 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:12:11.544 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:12:11.544 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:12:11.544 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:12:14.244 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:12:14.244 650:link-prediction        INFO     eval_acc = 0.9192
2023-06-05 00:12:14.244 650:link-prediction        INFO     eval_f1 = 0.9238
2023-06-05 00:12:14.245 650:link-prediction        INFO     eval_mcc = 0.8447
2023-06-05 00:12:14.245 650:link-prediction        INFO     eval_precision = 0.8741
2023-06-05 00:12:14.245 650:link-prediction        INFO     eval_recall = 0.9796
2023-06-05 00:12:14.245 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:12:15.089 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:12:15.090 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:12:15.090 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:12:18.146 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:12:18.146 650:link-prediction        INFO     eval_acc = 0.9206
2023-06-05 00:12:18.146 650:link-prediction        INFO     eval_f1 = 0.9247
2023-06-05 00:12:18.147 650:link-prediction        INFO     eval_mcc = 0.8462
2023-06-05 00:12:18.147 650:link-prediction        INFO     eval_precision = 0.8793
2023-06-05 00:12:18.147 650:link-prediction        INFO     eval_recall = 0.975
2023-06-05 00:12:18.147 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:12:18.956 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:12:18.957 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:12:18.957 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:12:21.779 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:12:21.779 650:link-prediction        INFO     eval_acc = 0.9166
2023-06-05 00:12:21.779 650:link-prediction        INFO     eval_f1 = 0.9199
2023-06-05 00:12:21.780 650:link-prediction        INFO     eval_mcc = 0.8361
2023-06-05 00:12:21.780 650:link-prediction        INFO     eval_precision = 0.8849
2023-06-05 00:12:21.780 650:link-prediction        INFO     eval_recall = 0.9578
2023-06-05 00:12:21.780 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:12:22.704 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:12:22.705 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:12:22.705 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:12:25.421 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:12:25.421 650:link-prediction        INFO     eval_acc = 0.9212
2023-06-05 00:12:25.421 650:link-prediction        INFO     eval_f1 = 0.9254
2023-06-05 00:12:25.421 650:link-prediction        INFO     eval_mcc = 0.8477
2023-06-05 00:12:25.421 650:link-prediction        INFO     eval_precision = 0.879
2023-06-05 00:12:25.421 650:link-prediction        INFO     eval_recall = 0.9769
2023-06-05 00:12:25.422 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:12:26.226 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:12:26.226 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:12:26.226 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:12:29.187 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:12:29.187 650:link-prediction        INFO     eval_acc = 0.9209
2023-06-05 00:12:29.187 650:link-prediction        INFO     eval_f1 = 0.9247
2023-06-05 00:12:29.187 650:link-prediction        INFO     eval_mcc = 0.8462
2023-06-05 00:12:29.188 650:link-prediction        INFO     eval_precision = 0.8821
2023-06-05 00:12:29.188 650:link-prediction        INFO     eval_recall = 0.9717
2023-06-05 00:12:29.188 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:12:30.010 601:link-prediction        INFO   ***** Running evaluation *****
2023-06-05 00:12:30.010 602:link-prediction        INFO     Num examples = 3034
2023-06-05 00:12:30.010 603:link-prediction        INFO     Batch size = 32
2023-06-05 00:12:32.676 648:link-prediction        INFO   ***** Eval results *****
2023-06-05 00:12:32.676 650:link-prediction        INFO     eval_acc = 0.9186
2023-06-05 00:12:32.676 650:link-prediction        INFO     eval_f1 = 0.9221
2023-06-05 00:12:32.677 650:link-prediction        INFO     eval_mcc = 0.8406
2023-06-05 00:12:32.677 650:link-prediction        INFO     eval_precision = 0.8839
2023-06-05 00:12:32.677 650:link-prediction        INFO     eval_recall = 0.9637
2023-06-05 00:12:32.677 650:link-prediction        INFO     eval_threshold = 0.5
2023-06-05 00:12:32.935 671:link-prediction        INFO   ***** Running Test *****
2023-06-05 00:12:32.935 672:link-prediction        INFO     Num examples = 2814
2023-06-05 00:12:32.935 673:link-prediction        INFO     Batch size = 32
2023-06-05 00:12:35.822 714:link-prediction        INFO   ***** Test results *****
2023-06-05 00:12:35.822 716:link-prediction        INFO     eval_acc = 0.9097
2023-06-05 00:12:35.823 716:link-prediction        INFO     eval_f1 = 0.9154
2023-06-05 00:12:35.823 716:link-prediction        INFO     eval_mcc = 0.8269
2023-06-05 00:12:35.823 716:link-prediction        INFO     eval_precision = 0.8614
2023-06-05 00:12:35.823 716:link-prediction        INFO     eval_recall = 0.9765
2023-06-05 00:12:35.823 716:link-prediction        INFO     eval_threshold = 0.5
