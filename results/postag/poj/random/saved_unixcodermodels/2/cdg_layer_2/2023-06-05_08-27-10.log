2023-06-05 08:27:10.980 917:isIngraph              DEBUG  main message
2023-06-05 08:27:10.980 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 08:27:12.489 938:isIngraph              INFO   Load Dataset
2023-06-05 08:27:41.774 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 08:27:42.968 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 08:27:46.929 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 08:27:46.932 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 08:27:47.806 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 08:27:49.586 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 08:27:49.587 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 08:27:50.619 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 08:27:52.474 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 08:27:52.475 306:isInGraph              INFO   *** Example ***
2023-06-05 08:27:52.475 307:isInGraph              INFO   idx: 42984
2023-06-05 08:27:52.475 308:isInGraph              INFO   label: 1
2023-06-05 08:27:52.475 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 08:27:52.476 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 08:27:52.476 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 08:27:52.476 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 08:27:52.476 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 08:27:52.476 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 08:27:52.476 306:isInGraph              INFO   *** Example ***
2023-06-05 08:27:52.477 307:isInGraph              INFO   idx: 40257
2023-06-05 08:27:52.477 308:isInGraph              INFO   label: 0
2023-06-05 08:27:52.477 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 08:27:52.477 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 08:27:52.477 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 08:27:52.477 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 08:27:52.478 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 08:27:52.478 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 08:27:52.478 306:isInGraph              INFO   *** Example ***
2023-06-05 08:27:52.478 307:isInGraph              INFO   idx: 43203
2023-06-05 08:27:52.478 308:isInGraph              INFO   label: 1
2023-06-05 08:27:52.478 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 08:27:52.478 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 08:27:52.478 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 08:27:52.479 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 08:27:52.479 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 08:27:52.479 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 08:27:52.479 306:isInGraph              INFO   *** Example ***
2023-06-05 08:27:52.479 307:isInGraph              INFO   idx: 48598
2023-06-05 08:27:52.479 308:isInGraph              INFO   label: 1
2023-06-05 08:27:52.480 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 08:27:52.480 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 08:27:52.480 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 08:27:52.480 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 08:27:52.480 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 08:27:52.480 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 08:27:52.480 306:isInGraph              INFO   *** Example ***
2023-06-05 08:27:52.481 307:isInGraph              INFO   idx: 49875
2023-06-05 08:27:52.481 308:isInGraph              INFO   label: 0
2023-06-05 08:27:52.481 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 08:27:52.481 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 08:27:52.481 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 08:27:52.481 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 08:27:52.481 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 08:27:52.481 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 08:27:52.482 306:isInGraph              INFO   *** Example ***
2023-06-05 08:27:52.482 307:isInGraph              INFO   idx: 48859
2023-06-05 08:27:52.482 308:isInGraph              INFO   label: 1
2023-06-05 08:27:52.482 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 08:27:52.482 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 08:27:52.482 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 08:27:52.483 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 08:27:52.483 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 08:27:52.483 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 08:27:52.483 306:isInGraph              INFO   *** Example ***
2023-06-05 08:27:52.483 307:isInGraph              INFO   idx: 46604
2023-06-05 08:27:52.483 308:isInGraph              INFO   label: 1
2023-06-05 08:27:52.484 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 08:27:52.484 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 08:27:52.484 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 08:27:52.484 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 08:27:52.484 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 08:27:52.485 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 08:27:52.485 306:isInGraph              INFO   *** Example ***
2023-06-05 08:27:52.489 307:isInGraph              INFO   idx: 47009
2023-06-05 08:27:52.490 308:isInGraph              INFO   label: 1
2023-06-05 08:27:52.490 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 08:27:52.490 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 08:27:52.490 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 08:27:52.491 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 08:27:52.491 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 08:27:52.491 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 08:27:52.491 306:isInGraph              INFO   *** Example ***
2023-06-05 08:27:52.491 307:isInGraph              INFO   idx: 50281
2023-06-05 08:27:52.491 308:isInGraph              INFO   label: 1
2023-06-05 08:27:52.492 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 08:27:52.492 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 08:27:52.492 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 08:27:52.493 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 08:27:52.493 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 08:27:52.493 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 08:27:52.493 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 08:27:52.517 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 08:27:52.517 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=2, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2', posratio=0.5, seed=644, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 08:27:54.308 451:isIngraph              INFO   ***** Running training *****
2023-06-05 08:27:54.308 452:isIngraph              INFO     Num examples = 87838
2023-06-05 08:27:54.308 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 08:27:54.308 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 08:27:54.308 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 08:27:54.309 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 08:27:54.309 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 08:28:06.018 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 08:28:06.022 581:isIngraph              INFO     Num examples = 29244
2023-06-05 08:28:06.022 582:isIngraph              INFO     Batch size = 32
2023-06-05 08:28:40.103 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 08:28:40.103 629:isIngraph              INFO     eval_acc = 0.7896
2023-06-05 08:28:40.104 629:isIngraph              INFO     eval_f1 = 0.7737
2023-06-05 08:28:40.104 629:isIngraph              INFO     eval_mcc = 0.5848
2023-06-05 08:28:40.104 629:isIngraph              INFO     eval_precision = 0.8364
2023-06-05 08:28:40.104 629:isIngraph              INFO     eval_recall = 0.7198
2023-06-05 08:28:40.104 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 08:28:40.108 522:isIngraph              INFO     ********************
2023-06-05 08:28:40.109 523:isIngraph              INFO     Best f1:0.7737
2023-06-05 08:28:40.109 524:isIngraph              INFO     ********************
2023-06-05 08:28:40.115 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 08:28:40.115 544:isIngraph              INFO     ********************
2023-06-05 08:28:40.115 545:isIngraph              INFO     Best MCC:0.5848
2023-06-05 08:28:40.116 546:isIngraph              INFO     ********************
2023-06-05 08:28:40.118 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 08:28:50.737 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 08:28:50.738 581:isIngraph              INFO     Num examples = 29244
2023-06-05 08:28:50.738 582:isIngraph              INFO     Batch size = 32
2023-06-05 08:29:25.276 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 08:29:25.276 629:isIngraph              INFO     eval_acc = 0.8821
2023-06-05 08:29:25.276 629:isIngraph              INFO     eval_f1 = 0.8833
2023-06-05 08:29:25.277 629:isIngraph              INFO     eval_mcc = 0.7644
2023-06-05 08:29:25.277 629:isIngraph              INFO     eval_precision = 0.8746
2023-06-05 08:29:25.277 629:isIngraph              INFO     eval_recall = 0.8921
2023-06-05 08:29:25.277 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 08:29:25.281 522:isIngraph              INFO     ********************
2023-06-05 08:29:25.281 523:isIngraph              INFO     Best f1:0.8833
2023-06-05 08:29:25.281 524:isIngraph              INFO     ********************
2023-06-05 08:29:25.285 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 08:29:25.285 544:isIngraph              INFO     ********************
2023-06-05 08:29:25.285 545:isIngraph              INFO     Best MCC:0.7644
2023-06-05 08:29:25.285 546:isIngraph              INFO     ********************
2023-06-05 08:29:25.288 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 08:29:35.040 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 08:29:35.041 581:isIngraph              INFO     Num examples = 29244
2023-06-05 08:29:35.041 582:isIngraph              INFO     Batch size = 32
2023-06-05 08:30:09.596 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 08:30:09.597 629:isIngraph              INFO     eval_acc = 0.9179
2023-06-05 08:30:09.597 629:isIngraph              INFO     eval_f1 = 0.9189
2023-06-05 08:30:09.597 629:isIngraph              INFO     eval_mcc = 0.8361
2023-06-05 08:30:09.597 629:isIngraph              INFO     eval_precision = 0.9076
2023-06-05 08:30:09.597 629:isIngraph              INFO     eval_recall = 0.9305
2023-06-05 08:30:09.597 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 08:30:09.602 522:isIngraph              INFO     ********************
2023-06-05 08:30:09.602 523:isIngraph              INFO     Best f1:0.9189
2023-06-05 08:30:09.602 524:isIngraph              INFO     ********************
2023-06-05 08:30:09.605 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 08:30:09.605 544:isIngraph              INFO     ********************
2023-06-05 08:30:09.606 545:isIngraph              INFO     Best MCC:0.8361
2023-06-05 08:30:09.606 546:isIngraph              INFO     ********************
2023-06-05 08:30:09.607 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 08:30:20.025 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 08:30:20.025 581:isIngraph              INFO     Num examples = 29244
2023-06-05 08:30:20.025 582:isIngraph              INFO     Batch size = 32
2023-06-05 08:30:52.200 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 08:30:52.201 629:isIngraph              INFO     eval_acc = 0.9235
2023-06-05 08:30:52.201 629:isIngraph              INFO     eval_f1 = 0.926
2023-06-05 08:30:52.201 629:isIngraph              INFO     eval_mcc = 0.8489
2023-06-05 08:30:52.201 629:isIngraph              INFO     eval_precision = 0.8969
2023-06-05 08:30:52.201 629:isIngraph              INFO     eval_recall = 0.957
2023-06-05 08:30:52.201 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 08:30:52.205 522:isIngraph              INFO     ********************
2023-06-05 08:30:52.206 523:isIngraph              INFO     Best f1:0.926
2023-06-05 08:30:52.206 524:isIngraph              INFO     ********************
2023-06-05 08:30:52.209 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 08:30:52.209 544:isIngraph              INFO     ********************
2023-06-05 08:30:52.210 545:isIngraph              INFO     Best MCC:0.8489
2023-06-05 08:30:52.210 546:isIngraph              INFO     ********************
2023-06-05 08:30:52.212 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 08:31:00.297 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 08:31:00.298 581:isIngraph              INFO     Num examples = 29244
2023-06-05 08:31:00.299 582:isIngraph              INFO     Batch size = 32
2023-06-05 08:31:22.742 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 08:31:22.742 629:isIngraph              INFO     eval_acc = 0.9272
2023-06-05 08:31:22.743 629:isIngraph              INFO     eval_f1 = 0.9272
2023-06-05 08:31:22.743 629:isIngraph              INFO     eval_mcc = 0.8543
2023-06-05 08:31:22.743 629:isIngraph              INFO     eval_precision = 0.9266
2023-06-05 08:31:22.743 629:isIngraph              INFO     eval_recall = 0.9278
2023-06-05 08:31:22.743 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 08:31:22.746 522:isIngraph              INFO     ********************
2023-06-05 08:31:22.746 523:isIngraph              INFO     Best f1:0.9272
2023-06-05 08:31:22.746 524:isIngraph              INFO     ********************
2023-06-05 08:31:22.750 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 08:31:22.750 544:isIngraph              INFO     ********************
2023-06-05 08:31:22.750 545:isIngraph              INFO     Best MCC:0.8543
2023-06-05 08:31:22.750 546:isIngraph              INFO     ********************
2023-06-05 08:31:22.752 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 08:31:29.683 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 08:31:29.683 581:isIngraph              INFO     Num examples = 29244
2023-06-05 08:31:29.683 582:isIngraph              INFO     Batch size = 32
2023-06-05 08:31:57.080 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 08:31:57.081 629:isIngraph              INFO     eval_acc = 0.9298
2023-06-05 08:31:57.081 629:isIngraph              INFO     eval_f1 = 0.9323
2023-06-05 08:31:57.081 629:isIngraph              INFO     eval_mcc = 0.862
2023-06-05 08:31:57.081 629:isIngraph              INFO     eval_precision = 0.8998
2023-06-05 08:31:57.081 629:isIngraph              INFO     eval_recall = 0.9673
2023-06-05 08:31:57.081 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 08:31:57.085 522:isIngraph              INFO     ********************
2023-06-05 08:31:57.085 523:isIngraph              INFO     Best f1:0.9323
2023-06-05 08:31:57.085 524:isIngraph              INFO     ********************
2023-06-05 08:31:57.088 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 08:31:57.089 544:isIngraph              INFO     ********************
2023-06-05 08:31:57.089 545:isIngraph              INFO     Best MCC:0.862
2023-06-05 08:31:57.089 546:isIngraph              INFO     ********************
2023-06-05 08:31:57.091 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 08:32:06.302 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 08:32:06.303 581:isIngraph              INFO     Num examples = 29244
2023-06-05 08:32:06.303 582:isIngraph              INFO     Batch size = 32
2023-06-05 08:32:39.891 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 08:32:39.892 629:isIngraph              INFO     eval_acc = 0.9354
2023-06-05 08:32:39.892 629:isIngraph              INFO     eval_f1 = 0.9372
2023-06-05 08:32:39.892 629:isIngraph              INFO     eval_mcc = 0.8723
2023-06-05 08:32:39.892 629:isIngraph              INFO     eval_precision = 0.9116
2023-06-05 08:32:39.892 629:isIngraph              INFO     eval_recall = 0.9644
2023-06-05 08:32:39.892 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 08:32:39.895 522:isIngraph              INFO     ********************
2023-06-05 08:32:39.896 523:isIngraph              INFO     Best f1:0.9372
2023-06-05 08:32:39.896 524:isIngraph              INFO     ********************
2023-06-05 08:32:39.899 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 08:32:39.900 544:isIngraph              INFO     ********************
2023-06-05 08:32:39.900 545:isIngraph              INFO     Best MCC:0.8723
2023-06-05 08:32:39.900 546:isIngraph              INFO     ********************
2023-06-05 08:32:39.901 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 08:32:48.821 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 08:32:48.821 581:isIngraph              INFO     Num examples = 29244
2023-06-05 08:32:48.822 582:isIngraph              INFO     Batch size = 32
2023-06-05 08:33:21.342 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 08:33:21.342 629:isIngraph              INFO     eval_acc = 0.9356
2023-06-05 08:33:21.342 629:isIngraph              INFO     eval_f1 = 0.9371
2023-06-05 08:33:21.342 629:isIngraph              INFO     eval_mcc = 0.8723
2023-06-05 08:33:21.343 629:isIngraph              INFO     eval_precision = 0.9161
2023-06-05 08:33:21.343 629:isIngraph              INFO     eval_recall = 0.9591
2023-06-05 08:33:21.343 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 08:33:30.315 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 08:33:30.315 581:isIngraph              INFO     Num examples = 29244
2023-06-05 08:33:30.315 582:isIngraph              INFO     Batch size = 32
2023-06-05 08:34:05.596 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 08:34:05.596 629:isIngraph              INFO     eval_acc = 0.9356
2023-06-05 08:34:05.596 629:isIngraph              INFO     eval_f1 = 0.9366
2023-06-05 08:34:05.596 629:isIngraph              INFO     eval_mcc = 0.8717
2023-06-05 08:34:05.596 629:isIngraph              INFO     eval_precision = 0.9222
2023-06-05 08:34:05.596 629:isIngraph              INFO     eval_recall = 0.9515
2023-06-05 08:34:05.597 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 08:34:14.686 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 08:34:14.686 581:isIngraph              INFO     Num examples = 29244
2023-06-05 08:34:14.686 582:isIngraph              INFO     Batch size = 32
2023-06-05 08:34:46.716 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 08:34:46.717 629:isIngraph              INFO     eval_acc = 0.9373
2023-06-05 08:34:46.717 629:isIngraph              INFO     eval_f1 = 0.9386
2023-06-05 08:34:46.717 629:isIngraph              INFO     eval_mcc = 0.8753
2023-06-05 08:34:46.717 629:isIngraph              INFO     eval_precision = 0.9189
2023-06-05 08:34:46.717 629:isIngraph              INFO     eval_recall = 0.9591
2023-06-05 08:34:46.717 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 08:34:46.721 522:isIngraph              INFO     ********************
2023-06-05 08:34:46.722 523:isIngraph              INFO     Best f1:0.9386
2023-06-05 08:34:46.722 524:isIngraph              INFO     ********************
2023-06-05 08:34:46.725 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-f1/model.bin
2023-06-05 08:34:46.725 544:isIngraph              INFO     ********************
2023-06-05 08:34:46.725 545:isIngraph              INFO     Best MCC:0.8753
2023-06-05 08:34:46.725 546:isIngraph              INFO     ********************
2023-06-05 08:34:46.727 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_2/checkpoint-best-mcc/model.bin
2023-06-05 08:34:46.902 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 08:34:46.902 651:isIngraph              INFO     Num examples = 30316
2023-06-05 08:34:46.902 652:isIngraph              INFO     Batch size = 32
2023-06-05 08:35:25.138 693:isIngraph              INFO   ***** Test results *****
2023-06-05 08:35:25.138 695:isIngraph              INFO     eval_acc = 0.9288
2023-06-05 08:35:25.138 695:isIngraph              INFO     eval_f1 = 0.9299
2023-06-05 08:35:25.138 695:isIngraph              INFO     eval_mcc = 0.858
2023-06-05 08:35:25.139 695:isIngraph              INFO     eval_precision = 0.9163
2023-06-05 08:35:25.139 695:isIngraph              INFO     eval_recall = 0.9438
2023-06-05 08:35:25.139 695:isIngraph              INFO     eval_threshold = 0.5
