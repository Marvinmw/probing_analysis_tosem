2023-06-05 07:08:42.118 917:isIngraph              DEBUG  main message
2023-06-05 07:08:42.118 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 07:08:42.891 938:isIngraph              INFO   Load Dataset
2023-06-05 07:09:13.258 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 07:09:14.293 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 07:09:17.821 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 07:09:17.826 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 07:09:18.797 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 07:09:20.417 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 07:09:20.418 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 07:09:21.360 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 07:09:23.230 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 07:09:23.231 306:isInGraph              INFO   *** Example ***
2023-06-05 07:09:23.231 307:isInGraph              INFO   idx: 42984
2023-06-05 07:09:23.231 308:isInGraph              INFO   label: 1
2023-06-05 07:09:23.231 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 07:09:23.232 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 07:09:23.232 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 07:09:23.232 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 07:09:23.232 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 07:09:23.232 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 07:09:23.232 306:isInGraph              INFO   *** Example ***
2023-06-05 07:09:23.233 307:isInGraph              INFO   idx: 40257
2023-06-05 07:09:23.233 308:isInGraph              INFO   label: 0
2023-06-05 07:09:23.233 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 07:09:23.233 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 07:09:23.233 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 07:09:23.233 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 07:09:23.234 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 07:09:23.234 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 07:09:23.234 306:isInGraph              INFO   *** Example ***
2023-06-05 07:09:23.234 307:isInGraph              INFO   idx: 43203
2023-06-05 07:09:23.234 308:isInGraph              INFO   label: 1
2023-06-05 07:09:23.234 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 07:09:23.234 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 07:09:23.235 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 07:09:23.235 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 07:09:23.235 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 07:09:23.235 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 07:09:23.235 306:isInGraph              INFO   *** Example ***
2023-06-05 07:09:23.235 307:isInGraph              INFO   idx: 48598
2023-06-05 07:09:23.235 308:isInGraph              INFO   label: 1
2023-06-05 07:09:23.236 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 07:09:23.236 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 07:09:23.236 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 07:09:23.236 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 07:09:23.236 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 07:09:23.237 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 07:09:23.237 306:isInGraph              INFO   *** Example ***
2023-06-05 07:09:23.237 307:isInGraph              INFO   idx: 49875
2023-06-05 07:09:23.237 308:isInGraph              INFO   label: 0
2023-06-05 07:09:23.237 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 07:09:23.237 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 07:09:23.237 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 07:09:23.238 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 07:09:23.238 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 07:09:23.238 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 07:09:23.238 306:isInGraph              INFO   *** Example ***
2023-06-05 07:09:23.238 307:isInGraph              INFO   idx: 48859
2023-06-05 07:09:23.238 308:isInGraph              INFO   label: 1
2023-06-05 07:09:23.238 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 07:09:23.239 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 07:09:23.239 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 07:09:23.239 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 07:09:23.239 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 07:09:23.239 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 07:09:23.239 306:isInGraph              INFO   *** Example ***
2023-06-05 07:09:23.239 307:isInGraph              INFO   idx: 46604
2023-06-05 07:09:23.240 308:isInGraph              INFO   label: 1
2023-06-05 07:09:23.240 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 07:09:23.240 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 07:09:23.240 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 07:09:23.240 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 07:09:23.240 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 07:09:23.241 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 07:09:23.241 306:isInGraph              INFO   *** Example ***
2023-06-05 07:09:23.241 307:isInGraph              INFO   idx: 47009
2023-06-05 07:09:23.241 308:isInGraph              INFO   label: 1
2023-06-05 07:09:23.241 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 07:09:23.241 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 07:09:23.241 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 07:09:23.242 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 07:09:23.242 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 07:09:23.242 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 07:09:23.242 306:isInGraph              INFO   *** Example ***
2023-06-05 07:09:23.242 307:isInGraph              INFO   idx: 50281
2023-06-05 07:09:23.242 308:isInGraph              INFO   label: 1
2023-06-05 07:09:23.243 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 07:09:23.243 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 07:09:23.243 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 07:09:23.243 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 07:09:23.243 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 07:09:23.244 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 07:09:23.244 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 07:09:23.269 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 07:09:23.269 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4', posratio=0.5, seed=644, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 07:09:24.950 451:isIngraph              INFO   ***** Running training *****
2023-06-05 07:09:24.950 452:isIngraph              INFO     Num examples = 87838
2023-06-05 07:09:24.950 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 07:09:24.950 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 07:09:24.950 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 07:09:24.951 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 07:09:24.951 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 07:09:36.548 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 07:09:36.549 581:isIngraph              INFO     Num examples = 29244
2023-06-05 07:09:36.549 582:isIngraph              INFO     Batch size = 32
2023-06-05 07:10:11.264 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 07:10:11.265 629:isIngraph              INFO     eval_acc = 0.7769
2023-06-05 07:10:11.265 629:isIngraph              INFO     eval_f1 = 0.7628
2023-06-05 07:10:11.265 629:isIngraph              INFO     eval_mcc = 0.5578
2023-06-05 07:10:11.265 629:isIngraph              INFO     eval_precision = 0.8143
2023-06-05 07:10:11.265 629:isIngraph              INFO     eval_recall = 0.7173
2023-06-05 07:10:11.266 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 07:10:11.269 522:isIngraph              INFO     ********************
2023-06-05 07:10:11.269 523:isIngraph              INFO     Best f1:0.7628
2023-06-05 07:10:11.269 524:isIngraph              INFO     ********************
2023-06-05 07:10:11.274 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 07:10:11.274 544:isIngraph              INFO     ********************
2023-06-05 07:10:11.275 545:isIngraph              INFO     Best MCC:0.5578
2023-06-05 07:10:11.275 546:isIngraph              INFO     ********************
2023-06-05 07:10:11.277 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 07:10:21.219 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 07:10:21.221 581:isIngraph              INFO     Num examples = 29244
2023-06-05 07:10:21.221 582:isIngraph              INFO     Batch size = 32
2023-06-05 07:10:55.075 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 07:10:55.076 629:isIngraph              INFO     eval_acc = 0.8696
2023-06-05 07:10:55.076 629:isIngraph              INFO     eval_f1 = 0.8728
2023-06-05 07:10:55.076 629:isIngraph              INFO     eval_mcc = 0.7402
2023-06-05 07:10:55.076 629:isIngraph              INFO     eval_precision = 0.8518
2023-06-05 07:10:55.076 629:isIngraph              INFO     eval_recall = 0.8948
2023-06-05 07:10:55.076 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 07:10:55.081 522:isIngraph              INFO     ********************
2023-06-05 07:10:55.081 523:isIngraph              INFO     Best f1:0.8728
2023-06-05 07:10:55.081 524:isIngraph              INFO     ********************
2023-06-05 07:10:55.085 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 07:10:55.085 544:isIngraph              INFO     ********************
2023-06-05 07:10:55.085 545:isIngraph              INFO     Best MCC:0.7402
2023-06-05 07:10:55.085 546:isIngraph              INFO     ********************
2023-06-05 07:10:55.087 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 07:11:05.428 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 07:11:05.428 581:isIngraph              INFO     Num examples = 29244
2023-06-05 07:11:05.428 582:isIngraph              INFO     Batch size = 32
2023-06-05 07:11:39.802 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 07:11:39.803 629:isIngraph              INFO     eval_acc = 0.9009
2023-06-05 07:11:39.803 629:isIngraph              INFO     eval_f1 = 0.9016
2023-06-05 07:11:39.803 629:isIngraph              INFO     eval_mcc = 0.8019
2023-06-05 07:11:39.803 629:isIngraph              INFO     eval_precision = 0.8956
2023-06-05 07:11:39.804 629:isIngraph              INFO     eval_recall = 0.9076
2023-06-05 07:11:39.804 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 07:11:39.807 522:isIngraph              INFO     ********************
2023-06-05 07:11:39.807 523:isIngraph              INFO     Best f1:0.9016
2023-06-05 07:11:39.807 524:isIngraph              INFO     ********************
2023-06-05 07:11:39.812 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 07:11:39.812 544:isIngraph              INFO     ********************
2023-06-05 07:11:39.812 545:isIngraph              INFO     Best MCC:0.8019
2023-06-05 07:11:39.813 546:isIngraph              INFO     ********************
2023-06-05 07:11:39.814 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 07:11:50.635 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 07:11:50.636 581:isIngraph              INFO     Num examples = 29244
2023-06-05 07:11:50.636 582:isIngraph              INFO     Batch size = 32
2023-06-05 07:12:28.344 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 07:12:28.345 629:isIngraph              INFO     eval_acc = 0.9184
2023-06-05 07:12:28.345 629:isIngraph              INFO     eval_f1 = 0.9206
2023-06-05 07:12:28.345 629:isIngraph              INFO     eval_mcc = 0.8381
2023-06-05 07:12:28.345 629:isIngraph              INFO     eval_precision = 0.8962
2023-06-05 07:12:28.345 629:isIngraph              INFO     eval_recall = 0.9464
2023-06-05 07:12:28.345 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 07:12:28.349 522:isIngraph              INFO     ********************
2023-06-05 07:12:28.349 523:isIngraph              INFO     Best f1:0.9206
2023-06-05 07:12:28.349 524:isIngraph              INFO     ********************
2023-06-05 07:12:28.353 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 07:12:28.353 544:isIngraph              INFO     ********************
2023-06-05 07:12:28.353 545:isIngraph              INFO     Best MCC:0.8381
2023-06-05 07:12:28.353 546:isIngraph              INFO     ********************
2023-06-05 07:12:28.355 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 07:12:38.803 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 07:12:38.804 581:isIngraph              INFO     Num examples = 29244
2023-06-05 07:12:38.804 582:isIngraph              INFO     Batch size = 32
2023-06-05 07:13:13.839 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 07:13:13.839 629:isIngraph              INFO     eval_acc = 0.9229
2023-06-05 07:13:13.840 629:isIngraph              INFO     eval_f1 = 0.9226
2023-06-05 07:13:13.840 629:isIngraph              INFO     eval_mcc = 0.8459
2023-06-05 07:13:13.840 629:isIngraph              INFO     eval_precision = 0.9268
2023-06-05 07:13:13.840 629:isIngraph              INFO     eval_recall = 0.9184
2023-06-05 07:13:13.840 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 07:13:13.843 522:isIngraph              INFO     ********************
2023-06-05 07:13:13.844 523:isIngraph              INFO     Best f1:0.9226
2023-06-05 07:13:13.844 524:isIngraph              INFO     ********************
2023-06-05 07:13:13.847 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 07:13:13.847 544:isIngraph              INFO     ********************
2023-06-05 07:13:13.847 545:isIngraph              INFO     Best MCC:0.8459
2023-06-05 07:13:13.847 546:isIngraph              INFO     ********************
2023-06-05 07:13:13.848 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 07:13:23.652 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 07:13:23.653 581:isIngraph              INFO     Num examples = 29244
2023-06-05 07:13:23.653 582:isIngraph              INFO     Batch size = 32
2023-06-05 07:13:52.482 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 07:13:52.482 629:isIngraph              INFO     eval_acc = 0.9278
2023-06-05 07:13:52.483 629:isIngraph              INFO     eval_f1 = 0.9301
2023-06-05 07:13:52.483 629:isIngraph              INFO     eval_mcc = 0.8575
2023-06-05 07:13:52.483 629:isIngraph              INFO     eval_precision = 0.9008
2023-06-05 07:13:52.483 629:isIngraph              INFO     eval_recall = 0.9613
2023-06-05 07:13:52.483 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 07:13:52.489 522:isIngraph              INFO     ********************
2023-06-05 07:13:52.489 523:isIngraph              INFO     Best f1:0.9301
2023-06-05 07:13:52.489 524:isIngraph              INFO     ********************
2023-06-05 07:13:52.492 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 07:13:52.493 544:isIngraph              INFO     ********************
2023-06-05 07:13:52.493 545:isIngraph              INFO     Best MCC:0.8575
2023-06-05 07:13:52.493 546:isIngraph              INFO     ********************
2023-06-05 07:13:52.495 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 07:14:00.414 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 07:14:00.414 581:isIngraph              INFO     Num examples = 29244
2023-06-05 07:14:00.414 582:isIngraph              INFO     Batch size = 32
2023-06-05 07:14:30.772 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 07:14:30.772 629:isIngraph              INFO     eval_acc = 0.9309
2023-06-05 07:14:30.772 629:isIngraph              INFO     eval_f1 = 0.9331
2023-06-05 07:14:30.772 629:isIngraph              INFO     eval_mcc = 0.8637
2023-06-05 07:14:30.773 629:isIngraph              INFO     eval_precision = 0.9033
2023-06-05 07:14:30.773 629:isIngraph              INFO     eval_recall = 0.965
2023-06-05 07:14:30.773 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 07:14:30.776 522:isIngraph              INFO     ********************
2023-06-05 07:14:30.776 523:isIngraph              INFO     Best f1:0.9331
2023-06-05 07:14:30.776 524:isIngraph              INFO     ********************
2023-06-05 07:14:30.779 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 07:14:30.779 544:isIngraph              INFO     ********************
2023-06-05 07:14:30.779 545:isIngraph              INFO     Best MCC:0.8637
2023-06-05 07:14:30.780 546:isIngraph              INFO     ********************
2023-06-05 07:14:30.781 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 07:14:38.286 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 07:14:38.287 581:isIngraph              INFO     Num examples = 29244
2023-06-05 07:14:38.287 582:isIngraph              INFO     Batch size = 32
2023-06-05 07:15:14.693 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 07:15:14.693 629:isIngraph              INFO     eval_acc = 0.9328
2023-06-05 07:15:14.694 629:isIngraph              INFO     eval_f1 = 0.9343
2023-06-05 07:15:14.694 629:isIngraph              INFO     eval_mcc = 0.8666
2023-06-05 07:15:14.694 629:isIngraph              INFO     eval_precision = 0.9137
2023-06-05 07:15:14.694 629:isIngraph              INFO     eval_recall = 0.9559
2023-06-05 07:15:14.694 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 07:15:14.698 522:isIngraph              INFO     ********************
2023-06-05 07:15:14.698 523:isIngraph              INFO     Best f1:0.9343
2023-06-05 07:15:14.698 524:isIngraph              INFO     ********************
2023-06-05 07:15:14.702 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 07:15:14.702 544:isIngraph              INFO     ********************
2023-06-05 07:15:14.702 545:isIngraph              INFO     Best MCC:0.8666
2023-06-05 07:15:14.702 546:isIngraph              INFO     ********************
2023-06-05 07:15:14.704 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 07:15:26.210 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 07:15:26.211 581:isIngraph              INFO     Num examples = 29244
2023-06-05 07:15:26.211 582:isIngraph              INFO     Batch size = 32
2023-06-05 07:16:03.518 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 07:16:03.519 629:isIngraph              INFO     eval_acc = 0.9347
2023-06-05 07:16:03.519 629:isIngraph              INFO     eval_f1 = 0.9359
2023-06-05 07:16:03.519 629:isIngraph              INFO     eval_mcc = 0.87
2023-06-05 07:16:03.519 629:isIngraph              INFO     eval_precision = 0.918
2023-06-05 07:16:03.520 629:isIngraph              INFO     eval_recall = 0.9545
2023-06-05 07:16:03.520 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 07:16:03.524 522:isIngraph              INFO     ********************
2023-06-05 07:16:03.524 523:isIngraph              INFO     Best f1:0.9359
2023-06-05 07:16:03.525 524:isIngraph              INFO     ********************
2023-06-05 07:16:03.528 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 07:16:03.529 544:isIngraph              INFO     ********************
2023-06-05 07:16:03.529 545:isIngraph              INFO     Best MCC:0.87
2023-06-05 07:16:03.529 546:isIngraph              INFO     ********************
2023-06-05 07:16:03.531 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 07:16:14.072 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 07:16:14.072 581:isIngraph              INFO     Num examples = 29244
2023-06-05 07:16:14.072 582:isIngraph              INFO     Batch size = 32
2023-06-05 07:16:50.768 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 07:16:50.768 629:isIngraph              INFO     eval_acc = 0.9345
2023-06-05 07:16:50.769 629:isIngraph              INFO     eval_f1 = 0.9359
2023-06-05 07:16:50.769 629:isIngraph              INFO     eval_mcc = 0.8699
2023-06-05 07:16:50.769 629:isIngraph              INFO     eval_precision = 0.916
2023-06-05 07:16:50.769 629:isIngraph              INFO     eval_recall = 0.9568
2023-06-05 07:16:50.769 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 07:16:50.773 522:isIngraph              INFO     ********************
2023-06-05 07:16:50.773 523:isIngraph              INFO     Best f1:0.9359
2023-06-05 07:16:50.773 524:isIngraph              INFO     ********************
2023-06-05 07:16:50.776 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/2/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 07:16:50.954 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 07:16:50.954 651:isIngraph              INFO     Num examples = 30316
2023-06-05 07:16:50.955 652:isIngraph              INFO     Batch size = 32
2023-06-05 07:17:26.694 693:isIngraph              INFO   ***** Test results *****
2023-06-05 07:17:26.695 695:isIngraph              INFO     eval_acc = 0.924
2023-06-05 07:17:26.695 695:isIngraph              INFO     eval_f1 = 0.9249
2023-06-05 07:17:26.695 695:isIngraph              INFO     eval_mcc = 0.8483
2023-06-05 07:17:26.695 695:isIngraph              INFO     eval_precision = 0.9136
2023-06-05 07:17:26.695 695:isIngraph              INFO     eval_recall = 0.9366
2023-06-05 07:17:26.695 695:isIngraph              INFO     eval_threshold = 0.5
