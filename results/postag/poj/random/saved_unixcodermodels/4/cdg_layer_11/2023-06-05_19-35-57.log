2023-06-05 19:35:57.352 917:isIngraph              DEBUG  main message
2023-06-05 19:35:57.352 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 19:35:58.176 938:isIngraph              INFO   Load Dataset
2023-06-05 19:36:32.466 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 19:36:33.660 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 19:36:37.360 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 19:36:37.363 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 19:36:38.256 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 19:36:40.101 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 19:36:40.104 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 19:36:40.958 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 19:36:42.758 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 19:36:42.759 306:isInGraph              INFO   *** Example ***
2023-06-05 19:36:42.759 307:isInGraph              INFO   idx: 42984
2023-06-05 19:36:42.759 308:isInGraph              INFO   label: 1
2023-06-05 19:36:42.760 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 19:36:42.760 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 19:36:42.760 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 19:36:42.760 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 19:36:42.760 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 19:36:42.760 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 19:36:42.761 306:isInGraph              INFO   *** Example ***
2023-06-05 19:36:42.761 307:isInGraph              INFO   idx: 40257
2023-06-05 19:36:42.761 308:isInGraph              INFO   label: 0
2023-06-05 19:36:42.761 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 19:36:42.761 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 19:36:42.761 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 19:36:42.761 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 19:36:42.761 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 19:36:42.762 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 19:36:42.762 306:isInGraph              INFO   *** Example ***
2023-06-05 19:36:42.762 307:isInGraph              INFO   idx: 43203
2023-06-05 19:36:42.762 308:isInGraph              INFO   label: 1
2023-06-05 19:36:42.762 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 19:36:42.762 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 19:36:42.762 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 19:36:42.763 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 19:36:42.763 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 19:36:42.763 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 19:36:42.763 306:isInGraph              INFO   *** Example ***
2023-06-05 19:36:42.763 307:isInGraph              INFO   idx: 48598
2023-06-05 19:36:42.763 308:isInGraph              INFO   label: 1
2023-06-05 19:36:42.763 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 19:36:42.764 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 19:36:42.764 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 19:36:42.764 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 19:36:42.764 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 19:36:42.764 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 19:36:42.764 306:isInGraph              INFO   *** Example ***
2023-06-05 19:36:42.764 307:isInGraph              INFO   idx: 49875
2023-06-05 19:36:42.764 308:isInGraph              INFO   label: 0
2023-06-05 19:36:42.765 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 19:36:42.765 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 19:36:42.765 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 19:36:42.765 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 19:36:42.765 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 19:36:42.765 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 19:36:42.765 306:isInGraph              INFO   *** Example ***
2023-06-05 19:36:42.765 307:isInGraph              INFO   idx: 48859
2023-06-05 19:36:42.766 308:isInGraph              INFO   label: 1
2023-06-05 19:36:42.766 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 19:36:42.766 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 19:36:42.766 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 19:36:42.766 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 19:36:42.766 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 19:36:42.766 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 19:36:42.767 306:isInGraph              INFO   *** Example ***
2023-06-05 19:36:42.767 307:isInGraph              INFO   idx: 46604
2023-06-05 19:36:42.767 308:isInGraph              INFO   label: 1
2023-06-05 19:36:42.767 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 19:36:42.767 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 19:36:42.767 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 19:36:42.767 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 19:36:42.768 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 19:36:42.768 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 19:36:42.768 306:isInGraph              INFO   *** Example ***
2023-06-05 19:36:42.768 307:isInGraph              INFO   idx: 47009
2023-06-05 19:36:42.768 308:isInGraph              INFO   label: 1
2023-06-05 19:36:42.768 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 19:36:42.768 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 19:36:42.768 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 19:36:42.769 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 19:36:42.769 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 19:36:42.769 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 19:36:42.769 306:isInGraph              INFO   *** Example ***
2023-06-05 19:36:42.769 307:isInGraph              INFO   idx: 50281
2023-06-05 19:36:42.769 308:isInGraph              INFO   label: 1
2023-06-05 19:36:42.769 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 19:36:42.769 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 19:36:42.770 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 19:36:42.770 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 19:36:42.770 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 19:36:42.770 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 19:36:42.770 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 19:36:42.792 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 19:36:42.793 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=11, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11', posratio=0.5, seed=31, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 19:36:44.630 451:isIngraph              INFO   ***** Running training *****
2023-06-05 19:36:44.630 452:isIngraph              INFO     Num examples = 87838
2023-06-05 19:36:44.630 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 19:36:44.630 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 19:36:44.630 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 19:36:44.631 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 19:36:44.631 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 19:36:53.297 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 19:36:53.298 581:isIngraph              INFO     Num examples = 29244
2023-06-05 19:36:53.298 582:isIngraph              INFO     Batch size = 32
2023-06-05 19:37:19.443 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 19:37:19.443 629:isIngraph              INFO     eval_acc = 0.7582
2023-06-05 19:37:19.443 629:isIngraph              INFO     eval_f1 = 0.7579
2023-06-05 19:37:19.444 629:isIngraph              INFO     eval_mcc = 0.5165
2023-06-05 19:37:19.444 629:isIngraph              INFO     eval_precision = 0.7587
2023-06-05 19:37:19.444 629:isIngraph              INFO     eval_recall = 0.7571
2023-06-05 19:37:19.444 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 19:37:19.448 522:isIngraph              INFO     ********************
2023-06-05 19:37:19.448 523:isIngraph              INFO     Best f1:0.7579
2023-06-05 19:37:19.449 524:isIngraph              INFO     ********************
2023-06-05 19:37:19.455 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-05 19:37:19.455 544:isIngraph              INFO     ********************
2023-06-05 19:37:19.455 545:isIngraph              INFO     Best MCC:0.5165
2023-06-05 19:37:19.455 546:isIngraph              INFO     ********************
2023-06-05 19:37:19.458 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-05 19:37:28.196 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 19:37:28.196 581:isIngraph              INFO     Num examples = 29244
2023-06-05 19:37:28.196 582:isIngraph              INFO     Batch size = 32
2023-06-05 19:37:59.030 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 19:37:59.031 629:isIngraph              INFO     eval_acc = 0.8277
2023-06-05 19:37:59.031 629:isIngraph              INFO     eval_f1 = 0.8302
2023-06-05 19:37:59.031 629:isIngraph              INFO     eval_mcc = 0.6556
2023-06-05 19:37:59.031 629:isIngraph              INFO     eval_precision = 0.8177
2023-06-05 19:37:59.031 629:isIngraph              INFO     eval_recall = 0.8431
2023-06-05 19:37:59.031 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 19:37:59.035 522:isIngraph              INFO     ********************
2023-06-05 19:37:59.035 523:isIngraph              INFO     Best f1:0.8302
2023-06-05 19:37:59.035 524:isIngraph              INFO     ********************
2023-06-05 19:37:59.039 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-05 19:37:59.039 544:isIngraph              INFO     ********************
2023-06-05 19:37:59.039 545:isIngraph              INFO     Best MCC:0.6556
2023-06-05 19:37:59.039 546:isIngraph              INFO     ********************
2023-06-05 19:37:59.041 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-05 19:38:12.620 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 19:38:12.621 581:isIngraph              INFO     Num examples = 29244
2023-06-05 19:38:12.621 582:isIngraph              INFO     Batch size = 32
2023-06-05 19:38:49.286 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 19:38:49.286 629:isIngraph              INFO     eval_acc = 0.8684
2023-06-05 19:38:49.286 629:isIngraph              INFO     eval_f1 = 0.8727
2023-06-05 19:38:49.287 629:isIngraph              INFO     eval_mcc = 0.7385
2023-06-05 19:38:49.287 629:isIngraph              INFO     eval_precision = 0.845
2023-06-05 19:38:49.287 629:isIngraph              INFO     eval_recall = 0.9022
2023-06-05 19:38:49.287 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 19:38:49.292 522:isIngraph              INFO     ********************
2023-06-05 19:38:49.292 523:isIngraph              INFO     Best f1:0.8727
2023-06-05 19:38:49.292 524:isIngraph              INFO     ********************
2023-06-05 19:38:49.295 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-05 19:38:49.296 544:isIngraph              INFO     ********************
2023-06-05 19:38:49.296 545:isIngraph              INFO     Best MCC:0.7385
2023-06-05 19:38:49.296 546:isIngraph              INFO     ********************
2023-06-05 19:38:49.297 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-05 19:39:00.244 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 19:39:00.244 581:isIngraph              INFO     Num examples = 29244
2023-06-05 19:39:00.245 582:isIngraph              INFO     Batch size = 32
2023-06-05 19:39:36.424 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 19:39:36.425 629:isIngraph              INFO     eval_acc = 0.8927
2023-06-05 19:39:36.425 629:isIngraph              INFO     eval_f1 = 0.8923
2023-06-05 19:39:36.425 629:isIngraph              INFO     eval_mcc = 0.7853
2023-06-05 19:39:36.425 629:isIngraph              INFO     eval_precision = 0.8954
2023-06-05 19:39:36.425 629:isIngraph              INFO     eval_recall = 0.8891
2023-06-05 19:39:36.425 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 19:39:36.429 522:isIngraph              INFO     ********************
2023-06-05 19:39:36.429 523:isIngraph              INFO     Best f1:0.8923
2023-06-05 19:39:36.429 524:isIngraph              INFO     ********************
2023-06-05 19:39:36.432 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-05 19:39:36.433 544:isIngraph              INFO     ********************
2023-06-05 19:39:36.433 545:isIngraph              INFO     Best MCC:0.7853
2023-06-05 19:39:36.433 546:isIngraph              INFO     ********************
2023-06-05 19:39:36.435 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-05 19:39:46.312 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 19:39:46.312 581:isIngraph              INFO     Num examples = 29244
2023-06-05 19:39:46.312 582:isIngraph              INFO     Batch size = 32
2023-06-05 19:40:22.418 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 19:40:22.419 629:isIngraph              INFO     eval_acc = 0.9062
2023-06-05 19:40:22.419 629:isIngraph              INFO     eval_f1 = 0.9082
2023-06-05 19:40:22.419 629:isIngraph              INFO     eval_mcc = 0.8132
2023-06-05 19:40:22.420 629:isIngraph              INFO     eval_precision = 0.8887
2023-06-05 19:40:22.420 629:isIngraph              INFO     eval_recall = 0.9286
2023-06-05 19:40:22.420 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 19:40:22.426 522:isIngraph              INFO     ********************
2023-06-05 19:40:22.427 523:isIngraph              INFO     Best f1:0.9082
2023-06-05 19:40:22.427 524:isIngraph              INFO     ********************
2023-06-05 19:40:22.430 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-05 19:40:22.430 544:isIngraph              INFO     ********************
2023-06-05 19:40:22.430 545:isIngraph              INFO     Best MCC:0.8132
2023-06-05 19:40:22.431 546:isIngraph              INFO     ********************
2023-06-05 19:40:22.432 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-05 19:40:33.818 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 19:40:33.818 581:isIngraph              INFO     Num examples = 29244
2023-06-05 19:40:33.818 582:isIngraph              INFO     Batch size = 32
2023-06-05 19:41:10.858 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 19:41:10.858 629:isIngraph              INFO     eval_acc = 0.9093
2023-06-05 19:41:10.858 629:isIngraph              INFO     eval_f1 = 0.9124
2023-06-05 19:41:10.858 629:isIngraph              INFO     eval_mcc = 0.8207
2023-06-05 19:41:10.859 629:isIngraph              INFO     eval_precision = 0.8824
2023-06-05 19:41:10.859 629:isIngraph              INFO     eval_recall = 0.9444
2023-06-05 19:41:10.859 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 19:41:10.863 522:isIngraph              INFO     ********************
2023-06-05 19:41:10.864 523:isIngraph              INFO     Best f1:0.9124
2023-06-05 19:41:10.864 524:isIngraph              INFO     ********************
2023-06-05 19:41:10.867 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-05 19:41:10.867 544:isIngraph              INFO     ********************
2023-06-05 19:41:10.868 545:isIngraph              INFO     Best MCC:0.8207
2023-06-05 19:41:10.868 546:isIngraph              INFO     ********************
2023-06-05 19:41:10.870 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-05 19:41:22.080 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 19:41:22.080 581:isIngraph              INFO     Num examples = 29244
2023-06-05 19:41:22.081 582:isIngraph              INFO     Batch size = 32
2023-06-05 19:41:58.526 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 19:41:58.526 629:isIngraph              INFO     eval_acc = 0.9147
2023-06-05 19:41:58.526 629:isIngraph              INFO     eval_f1 = 0.9166
2023-06-05 19:41:58.527 629:isIngraph              INFO     eval_mcc = 0.8302
2023-06-05 19:41:58.527 629:isIngraph              INFO     eval_precision = 0.8964
2023-06-05 19:41:58.527 629:isIngraph              INFO     eval_recall = 0.9377
2023-06-05 19:41:58.527 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 19:41:58.533 522:isIngraph              INFO     ********************
2023-06-05 19:41:58.534 523:isIngraph              INFO     Best f1:0.9166
2023-06-05 19:41:58.534 524:isIngraph              INFO     ********************
2023-06-05 19:41:58.557 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-05 19:41:58.557 544:isIngraph              INFO     ********************
2023-06-05 19:41:58.557 545:isIngraph              INFO     Best MCC:0.8302
2023-06-05 19:41:58.557 546:isIngraph              INFO     ********************
2023-06-05 19:41:58.569 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-05 19:42:09.474 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 19:42:09.474 581:isIngraph              INFO     Num examples = 29244
2023-06-05 19:42:09.475 582:isIngraph              INFO     Batch size = 32
2023-06-05 19:42:45.693 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 19:42:45.693 629:isIngraph              INFO     eval_acc = 0.9152
2023-06-05 19:42:45.693 629:isIngraph              INFO     eval_f1 = 0.9155
2023-06-05 19:42:45.694 629:isIngraph              INFO     eval_mcc = 0.8304
2023-06-05 19:42:45.694 629:isIngraph              INFO     eval_precision = 0.9115
2023-06-05 19:42:45.694 629:isIngraph              INFO     eval_recall = 0.9196
2023-06-05 19:42:45.694 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 19:42:45.699 544:isIngraph              INFO     ********************
2023-06-05 19:42:45.699 545:isIngraph              INFO     Best MCC:0.8304
2023-06-05 19:42:45.699 546:isIngraph              INFO     ********************
2023-06-05 19:42:45.703 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-05 19:42:56.708 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 19:42:56.709 581:isIngraph              INFO     Num examples = 29244
2023-06-05 19:42:56.709 582:isIngraph              INFO     Batch size = 32
2023-06-05 19:43:33.017 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 19:43:33.017 629:isIngraph              INFO     eval_acc = 0.9185
2023-06-05 19:43:33.017 629:isIngraph              INFO     eval_f1 = 0.92
2023-06-05 19:43:33.018 629:isIngraph              INFO     eval_mcc = 0.8376
2023-06-05 19:43:33.018 629:isIngraph              INFO     eval_precision = 0.9028
2023-06-05 19:43:33.018 629:isIngraph              INFO     eval_recall = 0.9379
2023-06-05 19:43:33.018 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 19:43:33.023 522:isIngraph              INFO     ********************
2023-06-05 19:43:33.023 523:isIngraph              INFO     Best f1:0.92
2023-06-05 19:43:33.024 524:isIngraph              INFO     ********************
2023-06-05 19:43:33.027 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-05 19:43:33.027 544:isIngraph              INFO     ********************
2023-06-05 19:43:33.027 545:isIngraph              INFO     Best MCC:0.8376
2023-06-05 19:43:33.027 546:isIngraph              INFO     ********************
2023-06-05 19:43:33.029 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-05 19:43:43.963 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 19:43:43.964 581:isIngraph              INFO     Num examples = 29244
2023-06-05 19:43:43.964 582:isIngraph              INFO     Batch size = 32
2023-06-05 19:44:20.285 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 19:44:20.285 629:isIngraph              INFO     eval_acc = 0.9194
2023-06-05 19:44:20.286 629:isIngraph              INFO     eval_f1 = 0.9206
2023-06-05 19:44:20.286 629:isIngraph              INFO     eval_mcc = 0.8392
2023-06-05 19:44:20.286 629:isIngraph              INFO     eval_precision = 0.9074
2023-06-05 19:44:20.286 629:isIngraph              INFO     eval_recall = 0.9342
2023-06-05 19:44:20.286 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 19:44:20.290 522:isIngraph              INFO     ********************
2023-06-05 19:44:20.291 523:isIngraph              INFO     Best f1:0.9206
2023-06-05 19:44:20.291 524:isIngraph              INFO     ********************
2023-06-05 19:44:20.294 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-f1/model.bin
2023-06-05 19:44:20.295 544:isIngraph              INFO     ********************
2023-06-05 19:44:20.295 545:isIngraph              INFO     Best MCC:0.8392
2023-06-05 19:44:20.295 546:isIngraph              INFO     ********************
2023-06-05 19:44:20.297 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/4/cdg_layer_11/checkpoint-best-mcc/model.bin
2023-06-05 19:44:20.546 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 19:44:20.547 651:isIngraph              INFO     Num examples = 30316
2023-06-05 19:44:20.547 652:isIngraph              INFO     Batch size = 32
2023-06-05 19:45:00.094 693:isIngraph              INFO   ***** Test results *****
2023-06-05 19:45:00.095 695:isIngraph              INFO     eval_acc = 0.9097
2023-06-05 19:45:00.095 695:isIngraph              INFO     eval_f1 = 0.9105
2023-06-05 19:45:00.095 695:isIngraph              INFO     eval_mcc = 0.8195
2023-06-05 19:45:00.096 695:isIngraph              INFO     eval_precision = 0.9016
2023-06-05 19:45:00.096 695:isIngraph              INFO     eval_recall = 0.9196
2023-06-05 19:45:00.096 695:isIngraph              INFO     eval_threshold = 0.5
