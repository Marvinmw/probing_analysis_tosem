2023-06-04 19:28:03.868 917:isIngraph              DEBUG  main message
2023-06-04 19:28:03.868 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-04 19:28:05.075 938:isIngraph              INFO   Load Dataset
2023-06-04 19:28:49.832 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 19:28:50.867 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-04 19:28:53.895 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-04 19:28:53.898 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 19:28:54.845 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-04 19:28:56.202 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-04 19:28:56.202 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 19:28:57.112 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-04 19:28:58.860 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-04 19:28:58.860 306:isInGraph              INFO   *** Example ***
2023-06-04 19:28:58.861 307:isInGraph              INFO   idx: 42984
2023-06-04 19:28:58.861 308:isInGraph              INFO   label: 1
2023-06-04 19:28:58.861 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-04 19:28:58.861 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-04 19:28:58.862 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-04 19:28:58.862 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-04 19:28:58.862 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-04 19:28:58.862 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-04 19:28:58.862 306:isInGraph              INFO   *** Example ***
2023-06-04 19:28:58.862 307:isInGraph              INFO   idx: 40257
2023-06-04 19:28:58.862 308:isInGraph              INFO   label: 0
2023-06-04 19:28:58.863 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-04 19:28:58.863 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-04 19:28:58.863 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-04 19:28:58.863 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-04 19:28:58.863 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-04 19:28:58.863 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-04 19:28:58.863 306:isInGraph              INFO   *** Example ***
2023-06-04 19:28:58.864 307:isInGraph              INFO   idx: 43203
2023-06-04 19:28:58.864 308:isInGraph              INFO   label: 1
2023-06-04 19:28:58.864 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-04 19:28:58.864 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-04 19:28:58.864 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-04 19:28:58.864 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-04 19:28:58.864 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-04 19:28:58.865 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-04 19:28:58.865 306:isInGraph              INFO   *** Example ***
2023-06-04 19:28:58.865 307:isInGraph              INFO   idx: 48598
2023-06-04 19:28:58.865 308:isInGraph              INFO   label: 1
2023-06-04 19:28:58.865 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-04 19:28:58.865 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-04 19:28:58.866 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-04 19:28:58.866 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-04 19:28:58.866 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-04 19:28:58.866 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-04 19:28:58.866 306:isInGraph              INFO   *** Example ***
2023-06-04 19:28:58.866 307:isInGraph              INFO   idx: 49875
2023-06-04 19:28:58.866 308:isInGraph              INFO   label: 0
2023-06-04 19:28:58.867 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-04 19:28:58.867 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-04 19:28:58.867 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-04 19:28:58.867 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-04 19:28:58.867 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-04 19:28:58.867 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-04 19:28:58.867 306:isInGraph              INFO   *** Example ***
2023-06-04 19:28:58.867 307:isInGraph              INFO   idx: 48859
2023-06-04 19:28:58.868 308:isInGraph              INFO   label: 1
2023-06-04 19:28:58.868 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-04 19:28:58.868 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-04 19:28:58.868 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-04 19:28:58.868 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-04 19:28:58.868 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-04 19:28:58.869 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-04 19:28:58.869 306:isInGraph              INFO   *** Example ***
2023-06-04 19:28:58.869 307:isInGraph              INFO   idx: 46604
2023-06-04 19:28:58.869 308:isInGraph              INFO   label: 1
2023-06-04 19:28:58.869 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-04 19:28:58.869 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-04 19:28:58.869 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-04 19:28:58.869 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-04 19:28:58.870 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-04 19:28:58.870 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-04 19:28:58.870 306:isInGraph              INFO   *** Example ***
2023-06-04 19:28:58.870 307:isInGraph              INFO   idx: 47009
2023-06-04 19:28:58.870 308:isInGraph              INFO   label: 1
2023-06-04 19:28:58.870 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-04 19:28:58.870 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-04 19:28:58.870 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-04 19:28:58.871 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-04 19:28:58.871 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-04 19:28:58.871 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-04 19:28:58.871 306:isInGraph              INFO   *** Example ***
2023-06-04 19:28:58.871 307:isInGraph              INFO   idx: 50281
2023-06-04 19:28:58.871 308:isInGraph              INFO   label: 1
2023-06-04 19:28:58.871 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-04 19:28:58.872 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-04 19:28:58.872 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-04 19:28:58.872 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-04 19:28:58.872 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-04 19:28:58.872 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-04 19:28:58.873 978:isIngraph              INFO   Finishing loading Dataset
2023-06-04 19:28:58.895 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-04 19:28:58.896 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8', posratio=0.5, seed=6, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-04 19:29:00.723 451:isIngraph              INFO   ***** Running training *****
2023-06-04 19:29:00.723 452:isIngraph              INFO     Num examples = 87838
2023-06-04 19:29:00.724 453:isIngraph              INFO     Num Epochs = 1
2023-06-04 19:29:00.724 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-04 19:29:00.724 458:isIngraph              INFO     Total train batch size = 64
2023-06-04 19:29:00.724 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-04 19:29:00.724 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-04 19:29:12.583 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 19:29:12.584 581:isIngraph              INFO     Num examples = 29244
2023-06-04 19:29:12.584 582:isIngraph              INFO     Batch size = 32
2023-06-04 19:29:46.067 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 19:29:46.068 629:isIngraph              INFO     eval_acc = 0.7641
2023-06-04 19:29:46.068 629:isIngraph              INFO     eval_f1 = 0.7453
2023-06-04 19:29:46.068 629:isIngraph              INFO     eval_mcc = 0.534
2023-06-04 19:29:46.068 629:isIngraph              INFO     eval_precision = 0.8095
2023-06-04 19:29:46.068 629:isIngraph              INFO     eval_recall = 0.6905
2023-06-04 19:29:46.068 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 19:29:46.072 522:isIngraph              INFO     ********************
2023-06-04 19:29:46.072 523:isIngraph              INFO     Best f1:0.7453
2023-06-04 19:29:46.073 524:isIngraph              INFO     ********************
2023-06-04 19:29:46.078 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-04 19:29:46.078 544:isIngraph              INFO     ********************
2023-06-04 19:29:46.079 545:isIngraph              INFO     Best MCC:0.534
2023-06-04 19:29:46.079 546:isIngraph              INFO     ********************
2023-06-04 19:29:46.081 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-04 19:29:55.697 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 19:29:55.697 581:isIngraph              INFO     Num examples = 29244
2023-06-04 19:29:55.698 582:isIngraph              INFO     Batch size = 32
2023-06-04 19:30:32.439 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 19:30:32.440 629:isIngraph              INFO     eval_acc = 0.8617
2023-06-04 19:30:32.440 629:isIngraph              INFO     eval_f1 = 0.868
2023-06-04 19:30:32.440 629:isIngraph              INFO     eval_mcc = 0.7268
2023-06-04 19:30:32.440 629:isIngraph              INFO     eval_precision = 0.8301
2023-06-04 19:30:32.440 629:isIngraph              INFO     eval_recall = 0.9096
2023-06-04 19:30:32.440 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 19:30:32.445 522:isIngraph              INFO     ********************
2023-06-04 19:30:32.445 523:isIngraph              INFO     Best f1:0.868
2023-06-04 19:30:32.445 524:isIngraph              INFO     ********************
2023-06-04 19:30:32.449 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-04 19:30:32.449 544:isIngraph              INFO     ********************
2023-06-04 19:30:32.449 545:isIngraph              INFO     Best MCC:0.7268
2023-06-04 19:30:32.449 546:isIngraph              INFO     ********************
2023-06-04 19:30:32.451 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-04 19:30:42.879 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 19:30:42.880 581:isIngraph              INFO     Num examples = 29244
2023-06-04 19:30:42.880 582:isIngraph              INFO     Batch size = 32
2023-06-04 19:31:18.525 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 19:31:18.525 629:isIngraph              INFO     eval_acc = 0.8794
2023-06-04 19:31:18.526 629:isIngraph              INFO     eval_f1 = 0.8823
2023-06-04 19:31:18.526 629:isIngraph              INFO     eval_mcc = 0.7597
2023-06-04 19:31:18.526 629:isIngraph              INFO     eval_precision = 0.8609
2023-06-04 19:31:18.526 629:isIngraph              INFO     eval_recall = 0.9049
2023-06-04 19:31:18.526 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 19:31:18.530 522:isIngraph              INFO     ********************
2023-06-04 19:31:18.531 523:isIngraph              INFO     Best f1:0.8823
2023-06-04 19:31:18.531 524:isIngraph              INFO     ********************
2023-06-04 19:31:18.534 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-04 19:31:18.534 544:isIngraph              INFO     ********************
2023-06-04 19:31:18.535 545:isIngraph              INFO     Best MCC:0.7597
2023-06-04 19:31:18.535 546:isIngraph              INFO     ********************
2023-06-04 19:31:18.536 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-04 19:31:29.516 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 19:31:29.517 581:isIngraph              INFO     Num examples = 29244
2023-06-04 19:31:29.517 582:isIngraph              INFO     Batch size = 32
2023-06-04 19:32:04.421 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 19:32:04.422 629:isIngraph              INFO     eval_acc = 0.905
2023-06-04 19:32:04.422 629:isIngraph              INFO     eval_f1 = 0.9066
2023-06-04 19:32:04.422 629:isIngraph              INFO     eval_mcc = 0.8105
2023-06-04 19:32:04.422 629:isIngraph              INFO     eval_precision = 0.8909
2023-06-04 19:32:04.422 629:isIngraph              INFO     eval_recall = 0.9229
2023-06-04 19:32:04.422 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 19:32:04.426 522:isIngraph              INFO     ********************
2023-06-04 19:32:04.426 523:isIngraph              INFO     Best f1:0.9066
2023-06-04 19:32:04.426 524:isIngraph              INFO     ********************
2023-06-04 19:32:04.429 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-04 19:32:04.430 544:isIngraph              INFO     ********************
2023-06-04 19:32:04.430 545:isIngraph              INFO     Best MCC:0.8105
2023-06-04 19:32:04.430 546:isIngraph              INFO     ********************
2023-06-04 19:32:04.432 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-04 19:32:14.420 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 19:32:14.420 581:isIngraph              INFO     Num examples = 29244
2023-06-04 19:32:14.420 582:isIngraph              INFO     Batch size = 32
2023-06-04 19:32:51.635 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 19:32:51.636 629:isIngraph              INFO     eval_acc = 0.9074
2023-06-04 19:32:51.636 629:isIngraph              INFO     eval_f1 = 0.9124
2023-06-04 19:32:51.636 629:isIngraph              INFO     eval_mcc = 0.8202
2023-06-04 19:32:51.636 629:isIngraph              INFO     eval_precision = 0.8653
2023-06-04 19:32:51.637 629:isIngraph              INFO     eval_recall = 0.9649
2023-06-04 19:32:51.637 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 19:32:51.648 522:isIngraph              INFO     ********************
2023-06-04 19:32:51.649 523:isIngraph              INFO     Best f1:0.9124
2023-06-04 19:32:51.649 524:isIngraph              INFO     ********************
2023-06-04 19:32:51.667 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-04 19:32:51.667 544:isIngraph              INFO     ********************
2023-06-04 19:32:51.667 545:isIngraph              INFO     Best MCC:0.8202
2023-06-04 19:32:51.667 546:isIngraph              INFO     ********************
2023-06-04 19:32:51.669 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-04 19:33:02.478 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 19:33:02.478 581:isIngraph              INFO     Num examples = 29244
2023-06-04 19:33:02.478 582:isIngraph              INFO     Batch size = 32
2023-06-04 19:33:40.250 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 19:33:40.250 629:isIngraph              INFO     eval_acc = 0.9198
2023-06-04 19:33:40.250 629:isIngraph              INFO     eval_f1 = 0.9225
2023-06-04 19:33:40.250 629:isIngraph              INFO     eval_mcc = 0.8417
2023-06-04 19:33:40.250 629:isIngraph              INFO     eval_precision = 0.8929
2023-06-04 19:33:40.251 629:isIngraph              INFO     eval_recall = 0.954
2023-06-04 19:33:40.251 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 19:33:40.253 522:isIngraph              INFO     ********************
2023-06-04 19:33:40.254 523:isIngraph              INFO     Best f1:0.9225
2023-06-04 19:33:40.254 524:isIngraph              INFO     ********************
2023-06-04 19:33:40.257 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-04 19:33:40.257 544:isIngraph              INFO     ********************
2023-06-04 19:33:40.257 545:isIngraph              INFO     Best MCC:0.8417
2023-06-04 19:33:40.257 546:isIngraph              INFO     ********************
2023-06-04 19:33:40.259 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-04 19:33:51.921 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 19:33:51.921 581:isIngraph              INFO     Num examples = 29244
2023-06-04 19:33:51.921 582:isIngraph              INFO     Batch size = 32
2023-06-04 19:34:29.051 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 19:34:29.052 629:isIngraph              INFO     eval_acc = 0.9148
2023-06-04 19:34:29.052 629:isIngraph              INFO     eval_f1 = 0.9194
2023-06-04 19:34:29.052 629:isIngraph              INFO     eval_mcc = 0.8352
2023-06-04 19:34:29.052 629:isIngraph              INFO     eval_precision = 0.8721
2023-06-04 19:34:29.053 629:isIngraph              INFO     eval_recall = 0.9722
2023-06-04 19:34:29.053 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 19:34:39.783 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 19:34:39.783 581:isIngraph              INFO     Num examples = 29244
2023-06-04 19:34:39.783 582:isIngraph              INFO     Batch size = 32
2023-06-04 19:35:20.290 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 19:35:20.290 629:isIngraph              INFO     eval_acc = 0.925
2023-06-04 19:35:20.290 629:isIngraph              INFO     eval_f1 = 0.9256
2023-06-04 19:35:20.291 629:isIngraph              INFO     eval_mcc = 0.8501
2023-06-04 19:35:20.291 629:isIngraph              INFO     eval_precision = 0.918
2023-06-04 19:35:20.291 629:isIngraph              INFO     eval_recall = 0.9333
2023-06-04 19:35:20.291 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 19:35:20.294 522:isIngraph              INFO     ********************
2023-06-04 19:35:20.294 523:isIngraph              INFO     Best f1:0.9256
2023-06-04 19:35:20.294 524:isIngraph              INFO     ********************
2023-06-04 19:35:20.298 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-04 19:35:20.298 544:isIngraph              INFO     ********************
2023-06-04 19:35:20.298 545:isIngraph              INFO     Best MCC:0.8501
2023-06-04 19:35:20.298 546:isIngraph              INFO     ********************
2023-06-04 19:35:20.300 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-04 19:35:30.618 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 19:35:30.619 581:isIngraph              INFO     Num examples = 29244
2023-06-04 19:35:30.619 582:isIngraph              INFO     Batch size = 32
2023-06-04 19:36:09.295 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 19:36:09.295 629:isIngraph              INFO     eval_acc = 0.9258
2023-06-04 19:36:09.295 629:isIngraph              INFO     eval_f1 = 0.9261
2023-06-04 19:36:09.296 629:isIngraph              INFO     eval_mcc = 0.8516
2023-06-04 19:36:09.296 629:isIngraph              INFO     eval_precision = 0.9214
2023-06-04 19:36:09.296 629:isIngraph              INFO     eval_recall = 0.9308
2023-06-04 19:36:09.296 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 19:36:09.300 522:isIngraph              INFO     ********************
2023-06-04 19:36:09.300 523:isIngraph              INFO     Best f1:0.9261
2023-06-04 19:36:09.300 524:isIngraph              INFO     ********************
2023-06-04 19:36:09.303 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-04 19:36:09.303 544:isIngraph              INFO     ********************
2023-06-04 19:36:09.304 545:isIngraph              INFO     Best MCC:0.8516
2023-06-04 19:36:09.304 546:isIngraph              INFO     ********************
2023-06-04 19:36:09.305 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-04 19:36:22.237 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 19:36:22.238 581:isIngraph              INFO     Num examples = 29244
2023-06-04 19:36:22.238 582:isIngraph              INFO     Batch size = 32
2023-06-04 19:36:59.693 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 19:36:59.694 629:isIngraph              INFO     eval_acc = 0.9275
2023-06-04 19:36:59.694 629:isIngraph              INFO     eval_f1 = 0.9287
2023-06-04 19:36:59.694 629:isIngraph              INFO     eval_mcc = 0.8555
2023-06-04 19:36:59.694 629:isIngraph              INFO     eval_precision = 0.914
2023-06-04 19:36:59.695 629:isIngraph              INFO     eval_recall = 0.9439
2023-06-04 19:36:59.695 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 19:36:59.698 522:isIngraph              INFO     ********************
2023-06-04 19:36:59.698 523:isIngraph              INFO     Best f1:0.9287
2023-06-04 19:36:59.698 524:isIngraph              INFO     ********************
2023-06-04 19:36:59.726 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-f1/model.bin
2023-06-04 19:36:59.726 544:isIngraph              INFO     ********************
2023-06-04 19:36:59.726 545:isIngraph              INFO     Best MCC:0.8555
2023-06-04 19:36:59.727 546:isIngraph              INFO     ********************
2023-06-04 19:36:59.729 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/1/cdg_layer_8/checkpoint-best-mcc/model.bin
2023-06-04 19:37:00.129 650:isIngraph              INFO   ***** Running Test *****
2023-06-04 19:37:00.129 651:isIngraph              INFO     Num examples = 30316
2023-06-04 19:37:00.129 652:isIngraph              INFO     Batch size = 32
2023-06-04 19:37:39.490 693:isIngraph              INFO   ***** Test results *****
2023-06-04 19:37:39.491 695:isIngraph              INFO     eval_acc = 0.9162
2023-06-04 19:37:39.491 695:isIngraph              INFO     eval_f1 = 0.9169
2023-06-04 19:37:39.491 695:isIngraph              INFO     eval_mcc = 0.8325
2023-06-04 19:37:39.491 695:isIngraph              INFO     eval_precision = 0.9088
2023-06-04 19:37:39.491 695:isIngraph              INFO     eval_recall = 0.9252
2023-06-04 19:37:39.491 695:isIngraph              INFO     eval_threshold = 0.5
