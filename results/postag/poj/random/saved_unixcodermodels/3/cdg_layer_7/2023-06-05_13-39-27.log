2023-06-05 13:39:27.250 917:isIngraph              DEBUG  main message
2023-06-05 13:39:27.250 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 13:39:27.995 938:isIngraph              INFO   Load Dataset
2023-06-05 13:39:59.319 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 13:40:00.491 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 13:40:04.069 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 13:40:04.072 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 13:40:05.173 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 13:40:06.649 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 13:40:06.650 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 13:40:07.685 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 13:40:09.598 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 13:40:09.598 306:isInGraph              INFO   *** Example ***
2023-06-05 13:40:09.598 307:isInGraph              INFO   idx: 42984
2023-06-05 13:40:09.598 308:isInGraph              INFO   label: 1
2023-06-05 13:40:09.599 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 13:40:09.599 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 13:40:09.599 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 13:40:09.599 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 13:40:09.599 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 13:40:09.600 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 13:40:09.600 306:isInGraph              INFO   *** Example ***
2023-06-05 13:40:09.600 307:isInGraph              INFO   idx: 40257
2023-06-05 13:40:09.600 308:isInGraph              INFO   label: 0
2023-06-05 13:40:09.600 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 13:40:09.600 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 13:40:09.600 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 13:40:09.600 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 13:40:09.601 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 13:40:09.601 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 13:40:09.601 306:isInGraph              INFO   *** Example ***
2023-06-05 13:40:09.601 307:isInGraph              INFO   idx: 43203
2023-06-05 13:40:09.601 308:isInGraph              INFO   label: 1
2023-06-05 13:40:09.601 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 13:40:09.601 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 13:40:09.601 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 13:40:09.602 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 13:40:09.602 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 13:40:09.602 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 13:40:09.602 306:isInGraph              INFO   *** Example ***
2023-06-05 13:40:09.602 307:isInGraph              INFO   idx: 48598
2023-06-05 13:40:09.602 308:isInGraph              INFO   label: 1
2023-06-05 13:40:09.602 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 13:40:09.603 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 13:40:09.603 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 13:40:09.603 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 13:40:09.603 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 13:40:09.603 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 13:40:09.603 306:isInGraph              INFO   *** Example ***
2023-06-05 13:40:09.603 307:isInGraph              INFO   idx: 49875
2023-06-05 13:40:09.604 308:isInGraph              INFO   label: 0
2023-06-05 13:40:09.604 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 13:40:09.604 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 13:40:09.604 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 13:40:09.604 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 13:40:09.604 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 13:40:09.604 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 13:40:09.604 306:isInGraph              INFO   *** Example ***
2023-06-05 13:40:09.605 307:isInGraph              INFO   idx: 48859
2023-06-05 13:40:09.605 308:isInGraph              INFO   label: 1
2023-06-05 13:40:09.605 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 13:40:09.605 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 13:40:09.605 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 13:40:09.605 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 13:40:09.605 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 13:40:09.606 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 13:40:09.606 306:isInGraph              INFO   *** Example ***
2023-06-05 13:40:09.606 307:isInGraph              INFO   idx: 46604
2023-06-05 13:40:09.606 308:isInGraph              INFO   label: 1
2023-06-05 13:40:09.606 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 13:40:09.606 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 13:40:09.606 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 13:40:09.607 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 13:40:09.607 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 13:40:09.607 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 13:40:09.607 306:isInGraph              INFO   *** Example ***
2023-06-05 13:40:09.607 307:isInGraph              INFO   idx: 47009
2023-06-05 13:40:09.607 308:isInGraph              INFO   label: 1
2023-06-05 13:40:09.607 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 13:40:09.607 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 13:40:09.608 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 13:40:09.608 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 13:40:09.608 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 13:40:09.608 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 13:40:09.608 306:isInGraph              INFO   *** Example ***
2023-06-05 13:40:09.608 307:isInGraph              INFO   idx: 50281
2023-06-05 13:40:09.608 308:isInGraph              INFO   label: 1
2023-06-05 13:40:09.609 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 13:40:09.609 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 13:40:09.609 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 13:40:09.609 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 13:40:09.609 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 13:40:09.610 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 13:40:09.610 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 13:40:09.631 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 13:40:09.631 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=7, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7', posratio=0.5, seed=378, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 13:40:11.401 451:isIngraph              INFO   ***** Running training *****
2023-06-05 13:40:11.401 452:isIngraph              INFO     Num examples = 87838
2023-06-05 13:40:11.401 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 13:40:11.402 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 13:40:11.402 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 13:40:11.402 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 13:40:11.402 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 13:40:22.704 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:40:22.705 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:40:22.705 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:40:56.559 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:40:56.560 629:isIngraph              INFO     eval_acc = 0.772
2023-06-05 13:40:56.560 629:isIngraph              INFO     eval_f1 = 0.7604
2023-06-05 13:40:56.560 629:isIngraph              INFO     eval_mcc = 0.5466
2023-06-05 13:40:56.560 629:isIngraph              INFO     eval_precision = 0.801
2023-06-05 13:40:56.560 629:isIngraph              INFO     eval_recall = 0.7238
2023-06-05 13:40:56.560 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:40:56.563 522:isIngraph              INFO     ********************
2023-06-05 13:40:56.563 523:isIngraph              INFO     Best f1:0.7604
2023-06-05 13:40:56.564 524:isIngraph              INFO     ********************
2023-06-05 13:40:56.569 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-f1/model.bin
2023-06-05 13:40:56.569 544:isIngraph              INFO     ********************
2023-06-05 13:40:56.570 545:isIngraph              INFO     Best MCC:0.5466
2023-06-05 13:40:56.570 546:isIngraph              INFO     ********************
2023-06-05 13:40:56.572 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-mcc/model.bin
2023-06-05 13:41:07.245 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:41:07.246 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:41:07.246 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:41:40.462 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:41:40.463 629:isIngraph              INFO     eval_acc = 0.8647
2023-06-05 13:41:40.463 629:isIngraph              INFO     eval_f1 = 0.8625
2023-06-05 13:41:40.463 629:isIngraph              INFO     eval_mcc = 0.7297
2023-06-05 13:41:40.463 629:isIngraph              INFO     eval_precision = 0.8765
2023-06-05 13:41:40.463 629:isIngraph              INFO     eval_recall = 0.849
2023-06-05 13:41:40.463 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:41:40.466 522:isIngraph              INFO     ********************
2023-06-05 13:41:40.466 523:isIngraph              INFO     Best f1:0.8625
2023-06-05 13:41:40.466 524:isIngraph              INFO     ********************
2023-06-05 13:41:40.470 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-f1/model.bin
2023-06-05 13:41:40.470 544:isIngraph              INFO     ********************
2023-06-05 13:41:40.470 545:isIngraph              INFO     Best MCC:0.7297
2023-06-05 13:41:40.470 546:isIngraph              INFO     ********************
2023-06-05 13:41:40.472 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-mcc/model.bin
2023-06-05 13:41:50.272 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:41:50.272 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:41:50.272 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:42:24.890 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:42:24.891 629:isIngraph              INFO     eval_acc = 0.8955
2023-06-05 13:42:24.891 629:isIngraph              INFO     eval_f1 = 0.8952
2023-06-05 13:42:24.891 629:isIngraph              INFO     eval_mcc = 0.7911
2023-06-05 13:42:24.891 629:isIngraph              INFO     eval_precision = 0.8981
2023-06-05 13:42:24.891 629:isIngraph              INFO     eval_recall = 0.8922
2023-06-05 13:42:24.891 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:42:24.895 522:isIngraph              INFO     ********************
2023-06-05 13:42:24.896 523:isIngraph              INFO     Best f1:0.8952
2023-06-05 13:42:24.896 524:isIngraph              INFO     ********************
2023-06-05 13:42:24.899 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-f1/model.bin
2023-06-05 13:42:24.899 544:isIngraph              INFO     ********************
2023-06-05 13:42:24.899 545:isIngraph              INFO     Best MCC:0.7911
2023-06-05 13:42:24.900 546:isIngraph              INFO     ********************
2023-06-05 13:42:24.901 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-mcc/model.bin
2023-06-05 13:42:34.897 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:42:34.898 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:42:34.898 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:43:09.013 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:43:09.013 629:isIngraph              INFO     eval_acc = 0.884
2023-06-05 13:43:09.013 629:isIngraph              INFO     eval_f1 = 0.8765
2023-06-05 13:43:09.013 629:isIngraph              INFO     eval_mcc = 0.7736
2023-06-05 13:43:09.014 629:isIngraph              INFO     eval_precision = 0.9365
2023-06-05 13:43:09.014 629:isIngraph              INFO     eval_recall = 0.8237
2023-06-05 13:43:09.014 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:43:19.036 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:43:19.037 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:43:19.037 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:43:53.674 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:43:53.674 629:isIngraph              INFO     eval_acc = 0.9158
2023-06-05 13:43:53.674 629:isIngraph              INFO     eval_f1 = 0.9195
2023-06-05 13:43:53.675 629:isIngraph              INFO     eval_mcc = 0.8351
2023-06-05 13:43:53.675 629:isIngraph              INFO     eval_precision = 0.8814
2023-06-05 13:43:53.675 629:isIngraph              INFO     eval_recall = 0.9609
2023-06-05 13:43:53.675 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:43:53.679 522:isIngraph              INFO     ********************
2023-06-05 13:43:53.679 523:isIngraph              INFO     Best f1:0.9195
2023-06-05 13:43:53.680 524:isIngraph              INFO     ********************
2023-06-05 13:43:53.683 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-f1/model.bin
2023-06-05 13:43:53.684 544:isIngraph              INFO     ********************
2023-06-05 13:43:53.684 545:isIngraph              INFO     Best MCC:0.8351
2023-06-05 13:43:53.684 546:isIngraph              INFO     ********************
2023-06-05 13:43:53.686 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-mcc/model.bin
2023-06-05 13:44:03.595 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:44:03.596 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:44:03.596 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:44:36.960 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:44:36.961 629:isIngraph              INFO     eval_acc = 0.9222
2023-06-05 13:44:36.961 629:isIngraph              INFO     eval_f1 = 0.9238
2023-06-05 13:44:36.961 629:isIngraph              INFO     eval_mcc = 0.8451
2023-06-05 13:44:36.961 629:isIngraph              INFO     eval_precision = 0.9049
2023-06-05 13:44:36.961 629:isIngraph              INFO     eval_recall = 0.9435
2023-06-05 13:44:36.962 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:44:36.964 522:isIngraph              INFO     ********************
2023-06-05 13:44:36.965 523:isIngraph              INFO     Best f1:0.9238
2023-06-05 13:44:36.965 524:isIngraph              INFO     ********************
2023-06-05 13:44:36.967 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-f1/model.bin
2023-06-05 13:44:36.968 544:isIngraph              INFO     ********************
2023-06-05 13:44:36.968 545:isIngraph              INFO     Best MCC:0.8451
2023-06-05 13:44:36.968 546:isIngraph              INFO     ********************
2023-06-05 13:44:36.970 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-mcc/model.bin
2023-06-05 13:44:47.362 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:44:47.362 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:44:47.362 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:45:21.375 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:45:21.375 629:isIngraph              INFO     eval_acc = 0.9166
2023-06-05 13:45:21.375 629:isIngraph              INFO     eval_f1 = 0.921
2023-06-05 13:45:21.376 629:isIngraph              INFO     eval_mcc = 0.8385
2023-06-05 13:45:21.376 629:isIngraph              INFO     eval_precision = 0.8745
2023-06-05 13:45:21.376 629:isIngraph              INFO     eval_recall = 0.9727
2023-06-05 13:45:21.376 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:45:31.693 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:45:31.693 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:45:31.693 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:46:05.559 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:46:05.560 629:isIngraph              INFO     eval_acc = 0.9271
2023-06-05 13:46:05.560 629:isIngraph              INFO     eval_f1 = 0.9282
2023-06-05 13:46:05.560 629:isIngraph              INFO     eval_mcc = 0.8546
2023-06-05 13:46:05.561 629:isIngraph              INFO     eval_precision = 0.9138
2023-06-05 13:46:05.561 629:isIngraph              INFO     eval_recall = 0.9431
2023-06-05 13:46:05.561 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:46:05.565 522:isIngraph              INFO     ********************
2023-06-05 13:46:05.565 523:isIngraph              INFO     Best f1:0.9282
2023-06-05 13:46:05.566 524:isIngraph              INFO     ********************
2023-06-05 13:46:05.570 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-f1/model.bin
2023-06-05 13:46:05.570 544:isIngraph              INFO     ********************
2023-06-05 13:46:05.570 545:isIngraph              INFO     Best MCC:0.8546
2023-06-05 13:46:05.570 546:isIngraph              INFO     ********************
2023-06-05 13:46:05.572 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-mcc/model.bin
2023-06-05 13:46:15.304 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:46:15.305 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:46:15.305 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:46:49.612 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:46:49.612 629:isIngraph              INFO     eval_acc = 0.928
2023-06-05 13:46:49.613 629:isIngraph              INFO     eval_f1 = 0.9297
2023-06-05 13:46:49.613 629:isIngraph              INFO     eval_mcc = 0.857
2023-06-05 13:46:49.613 629:isIngraph              INFO     eval_precision = 0.9084
2023-06-05 13:46:49.613 629:isIngraph              INFO     eval_recall = 0.952
2023-06-05 13:46:49.613 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:46:49.617 522:isIngraph              INFO     ********************
2023-06-05 13:46:49.618 523:isIngraph              INFO     Best f1:0.9297
2023-06-05 13:46:49.618 524:isIngraph              INFO     ********************
2023-06-05 13:46:49.620 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-f1/model.bin
2023-06-05 13:46:49.621 544:isIngraph              INFO     ********************
2023-06-05 13:46:49.621 545:isIngraph              INFO     Best MCC:0.857
2023-06-05 13:46:49.621 546:isIngraph              INFO     ********************
2023-06-05 13:46:49.623 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-mcc/model.bin
2023-06-05 13:46:59.105 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 13:46:59.105 581:isIngraph              INFO     Num examples = 29244
2023-06-05 13:46:59.106 582:isIngraph              INFO     Batch size = 32
2023-06-05 13:47:35.276 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 13:47:35.276 629:isIngraph              INFO     eval_acc = 0.9282
2023-06-05 13:47:35.276 629:isIngraph              INFO     eval_f1 = 0.9298
2023-06-05 13:47:35.277 629:isIngraph              INFO     eval_mcc = 0.8573
2023-06-05 13:47:35.277 629:isIngraph              INFO     eval_precision = 0.9097
2023-06-05 13:47:35.277 629:isIngraph              INFO     eval_recall = 0.9507
2023-06-05 13:47:35.277 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 13:47:35.283 522:isIngraph              INFO     ********************
2023-06-05 13:47:35.283 523:isIngraph              INFO     Best f1:0.9298
2023-06-05 13:47:35.283 524:isIngraph              INFO     ********************
2023-06-05 13:47:35.287 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-f1/model.bin
2023-06-05 13:47:35.288 544:isIngraph              INFO     ********************
2023-06-05 13:47:35.288 545:isIngraph              INFO     Best MCC:0.8573
2023-06-05 13:47:35.288 546:isIngraph              INFO     ********************
2023-06-05 13:47:35.290 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_7/checkpoint-best-mcc/model.bin
2023-06-05 13:47:35.511 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 13:47:35.511 651:isIngraph              INFO     Num examples = 30316
2023-06-05 13:47:35.511 652:isIngraph              INFO     Batch size = 32
2023-06-05 13:48:13.041 693:isIngraph              INFO   ***** Test results *****
2023-06-05 13:48:13.042 695:isIngraph              INFO     eval_acc = 0.9192
2023-06-05 13:48:13.042 695:isIngraph              INFO     eval_f1 = 0.9205
2023-06-05 13:48:13.042 695:isIngraph              INFO     eval_mcc = 0.8388
2023-06-05 13:48:13.042 695:isIngraph              INFO     eval_precision = 0.9054
2023-06-05 13:48:13.042 695:isIngraph              INFO     eval_recall = 0.9361
2023-06-05 13:48:13.042 695:isIngraph              INFO     eval_threshold = 0.5
