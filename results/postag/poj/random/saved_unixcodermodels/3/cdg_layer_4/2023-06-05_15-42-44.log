2023-06-05 15:42:44.216 917:isIngraph              DEBUG  main message
2023-06-05 15:42:44.217 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 15:42:44.976 938:isIngraph              INFO   Load Dataset
2023-06-05 15:43:20.863 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 15:43:21.932 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 15:43:25.390 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 15:43:25.394 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 15:43:26.297 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 15:43:28.049 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 15:43:28.054 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 15:43:28.957 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 15:43:30.739 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 15:43:30.740 306:isInGraph              INFO   *** Example ***
2023-06-05 15:43:30.740 307:isInGraph              INFO   idx: 42984
2023-06-05 15:43:30.740 308:isInGraph              INFO   label: 1
2023-06-05 15:43:30.740 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 15:43:30.740 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 15:43:30.740 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 15:43:30.741 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 15:43:30.741 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 15:43:30.741 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 15:43:30.741 306:isInGraph              INFO   *** Example ***
2023-06-05 15:43:30.741 307:isInGraph              INFO   idx: 40257
2023-06-05 15:43:30.741 308:isInGraph              INFO   label: 0
2023-06-05 15:43:30.741 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 15:43:30.742 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 15:43:30.742 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 15:43:30.742 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 15:43:30.742 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 15:43:30.742 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 15:43:30.742 306:isInGraph              INFO   *** Example ***
2023-06-05 15:43:30.742 307:isInGraph              INFO   idx: 43203
2023-06-05 15:43:30.742 308:isInGraph              INFO   label: 1
2023-06-05 15:43:30.743 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 15:43:30.743 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 15:43:30.743 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 15:43:30.743 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 15:43:30.743 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 15:43:30.743 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 15:43:30.743 306:isInGraph              INFO   *** Example ***
2023-06-05 15:43:30.744 307:isInGraph              INFO   idx: 48598
2023-06-05 15:43:30.744 308:isInGraph              INFO   label: 1
2023-06-05 15:43:30.744 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 15:43:30.744 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 15:43:30.744 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 15:43:30.744 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 15:43:30.745 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 15:43:30.745 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 15:43:30.745 306:isInGraph              INFO   *** Example ***
2023-06-05 15:43:30.745 307:isInGraph              INFO   idx: 49875
2023-06-05 15:43:30.745 308:isInGraph              INFO   label: 0
2023-06-05 15:43:30.745 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 15:43:30.745 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 15:43:30.745 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 15:43:30.746 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 15:43:30.746 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 15:43:30.746 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 15:43:30.746 306:isInGraph              INFO   *** Example ***
2023-06-05 15:43:30.746 307:isInGraph              INFO   idx: 48859
2023-06-05 15:43:30.746 308:isInGraph              INFO   label: 1
2023-06-05 15:43:30.746 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 15:43:30.746 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 15:43:30.747 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 15:43:30.747 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 15:43:30.747 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 15:43:30.747 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 15:43:30.747 306:isInGraph              INFO   *** Example ***
2023-06-05 15:43:30.747 307:isInGraph              INFO   idx: 46604
2023-06-05 15:43:30.747 308:isInGraph              INFO   label: 1
2023-06-05 15:43:30.747 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 15:43:30.748 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 15:43:30.748 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 15:43:30.748 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 15:43:30.748 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 15:43:30.748 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 15:43:30.748 306:isInGraph              INFO   *** Example ***
2023-06-05 15:43:30.748 307:isInGraph              INFO   idx: 47009
2023-06-05 15:43:30.748 308:isInGraph              INFO   label: 1
2023-06-05 15:43:30.749 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 15:43:30.749 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 15:43:30.749 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 15:43:30.749 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 15:43:30.749 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 15:43:30.749 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 15:43:30.749 306:isInGraph              INFO   *** Example ***
2023-06-05 15:43:30.750 307:isInGraph              INFO   idx: 50281
2023-06-05 15:43:30.750 308:isInGraph              INFO   label: 1
2023-06-05 15:43:30.750 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 15:43:30.750 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 15:43:30.750 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 15:43:30.750 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 15:43:30.751 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 15:43:30.751 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 15:43:30.751 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 15:43:30.772 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 15:43:30.772 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4', posratio=0.5, seed=378, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 15:43:32.406 451:isIngraph              INFO   ***** Running training *****
2023-06-05 15:43:32.406 452:isIngraph              INFO     Num examples = 87838
2023-06-05 15:43:32.406 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 15:43:32.406 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 15:43:32.406 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 15:43:32.406 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 15:43:32.407 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 15:43:43.537 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:43:43.538 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:43:43.538 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:44:21.581 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:44:21.581 629:isIngraph              INFO     eval_acc = 0.785
2023-06-05 15:44:21.582 629:isIngraph              INFO     eval_f1 = 0.7732
2023-06-05 15:44:21.582 629:isIngraph              INFO     eval_mcc = 0.5732
2023-06-05 15:44:21.582 629:isIngraph              INFO     eval_precision = 0.8182
2023-06-05 15:44:21.582 629:isIngraph              INFO     eval_recall = 0.7329
2023-06-05 15:44:21.582 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:44:21.586 522:isIngraph              INFO     ********************
2023-06-05 15:44:21.586 523:isIngraph              INFO     Best f1:0.7732
2023-06-05 15:44:21.586 524:isIngraph              INFO     ********************
2023-06-05 15:44:21.592 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 15:44:21.592 544:isIngraph              INFO     ********************
2023-06-05 15:44:21.592 545:isIngraph              INFO     Best MCC:0.5732
2023-06-05 15:44:21.592 546:isIngraph              INFO     ********************
2023-06-05 15:44:21.595 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 15:44:30.578 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:44:30.578 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:44:30.578 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:45:08.383 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:45:08.383 629:isIngraph              INFO     eval_acc = 0.8735
2023-06-05 15:45:08.384 629:isIngraph              INFO     eval_f1 = 0.8695
2023-06-05 15:45:08.384 629:isIngraph              INFO     eval_mcc = 0.7485
2023-06-05 15:45:08.384 629:isIngraph              INFO     eval_precision = 0.898
2023-06-05 15:45:08.384 629:isIngraph              INFO     eval_recall = 0.8427
2023-06-05 15:45:08.384 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:45:08.388 522:isIngraph              INFO     ********************
2023-06-05 15:45:08.388 523:isIngraph              INFO     Best f1:0.8695
2023-06-05 15:45:08.388 524:isIngraph              INFO     ********************
2023-06-05 15:45:08.391 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 15:45:08.391 544:isIngraph              INFO     ********************
2023-06-05 15:45:08.391 545:isIngraph              INFO     Best MCC:0.7485
2023-06-05 15:45:08.391 546:isIngraph              INFO     ********************
2023-06-05 15:45:08.393 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 15:45:19.783 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:45:19.784 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:45:19.784 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:45:47.753 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:45:47.754 629:isIngraph              INFO     eval_acc = 0.9045
2023-06-05 15:45:47.754 629:isIngraph              INFO     eval_f1 = 0.9076
2023-06-05 15:45:47.754 629:isIngraph              INFO     eval_mcc = 0.8109
2023-06-05 15:45:47.754 629:isIngraph              INFO     eval_precision = 0.8786
2023-06-05 15:45:47.754 629:isIngraph              INFO     eval_recall = 0.9386
2023-06-05 15:45:47.755 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:45:47.758 522:isIngraph              INFO     ********************
2023-06-05 15:45:47.758 523:isIngraph              INFO     Best f1:0.9076
2023-06-05 15:45:47.758 524:isIngraph              INFO     ********************
2023-06-05 15:45:47.762 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 15:45:47.762 544:isIngraph              INFO     ********************
2023-06-05 15:45:47.762 545:isIngraph              INFO     Best MCC:0.8109
2023-06-05 15:45:47.763 546:isIngraph              INFO     ********************
2023-06-05 15:45:47.764 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 15:45:55.104 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:45:55.105 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:45:55.105 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:46:19.647 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:46:19.648 629:isIngraph              INFO     eval_acc = 0.906
2023-06-05 15:46:19.648 629:isIngraph              INFO     eval_f1 = 0.9035
2023-06-05 15:46:19.648 629:isIngraph              INFO     eval_mcc = 0.813
2023-06-05 15:46:19.648 629:isIngraph              INFO     eval_precision = 0.928
2023-06-05 15:46:19.648 629:isIngraph              INFO     eval_recall = 0.8802
2023-06-05 15:46:19.648 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:46:19.657 544:isIngraph              INFO     ********************
2023-06-05 15:46:19.658 545:isIngraph              INFO     Best MCC:0.813
2023-06-05 15:46:19.658 546:isIngraph              INFO     ********************
2023-06-05 15:46:19.662 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 15:46:26.492 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:46:26.493 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:46:26.493 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:46:53.879 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:46:53.880 629:isIngraph              INFO     eval_acc = 0.9239
2023-06-05 15:46:53.880 629:isIngraph              INFO     eval_f1 = 0.9262
2023-06-05 15:46:53.880 629:isIngraph              INFO     eval_mcc = 0.8495
2023-06-05 15:46:53.880 629:isIngraph              INFO     eval_precision = 0.8984
2023-06-05 15:46:53.881 629:isIngraph              INFO     eval_recall = 0.9559
2023-06-05 15:46:53.881 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:46:53.886 522:isIngraph              INFO     ********************
2023-06-05 15:46:53.887 523:isIngraph              INFO     Best f1:0.9262
2023-06-05 15:46:53.887 524:isIngraph              INFO     ********************
2023-06-05 15:46:53.891 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 15:46:53.892 544:isIngraph              INFO     ********************
2023-06-05 15:46:53.892 545:isIngraph              INFO     Best MCC:0.8495
2023-06-05 15:46:53.892 546:isIngraph              INFO     ********************
2023-06-05 15:46:53.894 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 15:47:02.793 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:47:02.793 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:47:02.794 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:47:33.283 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:47:33.283 629:isIngraph              INFO     eval_acc = 0.9284
2023-06-05 15:47:33.283 629:isIngraph              INFO     eval_f1 = 0.9294
2023-06-05 15:47:33.283 629:isIngraph              INFO     eval_mcc = 0.8572
2023-06-05 15:47:33.283 629:isIngraph              INFO     eval_precision = 0.9163
2023-06-05 15:47:33.284 629:isIngraph              INFO     eval_recall = 0.9429
2023-06-05 15:47:33.284 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:47:33.287 522:isIngraph              INFO     ********************
2023-06-05 15:47:33.287 523:isIngraph              INFO     Best f1:0.9294
2023-06-05 15:47:33.287 524:isIngraph              INFO     ********************
2023-06-05 15:47:33.290 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 15:47:33.290 544:isIngraph              INFO     ********************
2023-06-05 15:47:33.291 545:isIngraph              INFO     Best MCC:0.8572
2023-06-05 15:47:33.291 546:isIngraph              INFO     ********************
2023-06-05 15:47:33.292 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 15:47:41.179 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:47:41.179 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:47:41.179 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:48:13.657 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:48:13.658 629:isIngraph              INFO     eval_acc = 0.9266
2023-06-05 15:48:13.658 629:isIngraph              INFO     eval_f1 = 0.9291
2023-06-05 15:48:13.658 629:isIngraph              INFO     eval_mcc = 0.8553
2023-06-05 15:48:13.658 629:isIngraph              INFO     eval_precision = 0.8982
2023-06-05 15:48:13.659 629:isIngraph              INFO     eval_recall = 0.9622
2023-06-05 15:48:13.659 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:48:21.549 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:48:21.549 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:48:21.549 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:48:50.810 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:48:50.810 629:isIngraph              INFO     eval_acc = 0.9309
2023-06-05 15:48:50.810 629:isIngraph              INFO     eval_f1 = 0.9314
2023-06-05 15:48:50.811 629:isIngraph              INFO     eval_mcc = 0.8619
2023-06-05 15:48:50.811 629:isIngraph              INFO     eval_precision = 0.925
2023-06-05 15:48:50.811 629:isIngraph              INFO     eval_recall = 0.9378
2023-06-05 15:48:50.811 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:48:50.815 522:isIngraph              INFO     ********************
2023-06-05 15:48:50.815 523:isIngraph              INFO     Best f1:0.9314
2023-06-05 15:48:50.815 524:isIngraph              INFO     ********************
2023-06-05 15:48:50.819 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 15:48:50.819 544:isIngraph              INFO     ********************
2023-06-05 15:48:50.820 545:isIngraph              INFO     Best MCC:0.8619
2023-06-05 15:48:50.820 546:isIngraph              INFO     ********************
2023-06-05 15:48:50.822 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 15:48:58.837 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:48:58.837 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:48:58.837 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:49:31.423 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:49:31.424 629:isIngraph              INFO     eval_acc = 0.9314
2023-06-05 15:49:31.424 629:isIngraph              INFO     eval_f1 = 0.9332
2023-06-05 15:49:31.424 629:isIngraph              INFO     eval_mcc = 0.8641
2023-06-05 15:49:31.424 629:isIngraph              INFO     eval_precision = 0.9097
2023-06-05 15:49:31.424 629:isIngraph              INFO     eval_recall = 0.9579
2023-06-05 15:49:31.424 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:49:31.428 522:isIngraph              INFO     ********************
2023-06-05 15:49:31.428 523:isIngraph              INFO     Best f1:0.9332
2023-06-05 15:49:31.428 524:isIngraph              INFO     ********************
2023-06-05 15:49:31.431 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 15:49:31.431 544:isIngraph              INFO     ********************
2023-06-05 15:49:31.431 545:isIngraph              INFO     Best MCC:0.8641
2023-06-05 15:49:31.431 546:isIngraph              INFO     ********************
2023-06-05 15:49:31.433 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 15:49:39.554 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:49:39.554 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:49:39.554 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:50:09.695 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:50:09.696 629:isIngraph              INFO     eval_acc = 0.9324
2023-06-05 15:50:09.696 629:isIngraph              INFO     eval_f1 = 0.9337
2023-06-05 15:50:09.696 629:isIngraph              INFO     eval_mcc = 0.8654
2023-06-05 15:50:09.696 629:isIngraph              INFO     eval_precision = 0.9154
2023-06-05 15:50:09.696 629:isIngraph              INFO     eval_recall = 0.9527
2023-06-05 15:50:09.696 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:50:09.700 522:isIngraph              INFO     ********************
2023-06-05 15:50:09.700 523:isIngraph              INFO     Best f1:0.9337
2023-06-05 15:50:09.700 524:isIngraph              INFO     ********************
2023-06-05 15:50:09.709 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-f1/model.bin
2023-06-05 15:50:09.710 544:isIngraph              INFO     ********************
2023-06-05 15:50:09.716 545:isIngraph              INFO     Best MCC:0.8654
2023-06-05 15:50:09.716 546:isIngraph              INFO     ********************
2023-06-05 15:50:09.724 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_4/checkpoint-best-mcc/model.bin
2023-06-05 15:50:10.543 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 15:50:10.543 651:isIngraph              INFO     Num examples = 30316
2023-06-05 15:50:10.543 652:isIngraph              INFO     Batch size = 32
2023-06-05 15:50:43.622 693:isIngraph              INFO   ***** Test results *****
2023-06-05 15:50:43.623 695:isIngraph              INFO     eval_acc = 0.9225
2023-06-05 15:50:43.623 695:isIngraph              INFO     eval_f1 = 0.9235
2023-06-05 15:50:43.623 695:isIngraph              INFO     eval_mcc = 0.8453
2023-06-05 15:50:43.623 695:isIngraph              INFO     eval_precision = 0.9122
2023-06-05 15:50:43.623 695:isIngraph              INFO     eval_recall = 0.9349
2023-06-05 15:50:43.623 695:isIngraph              INFO     eval_threshold = 0.5
