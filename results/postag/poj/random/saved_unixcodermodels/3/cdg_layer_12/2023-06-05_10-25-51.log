2023-06-05 10:25:51.094 917:isIngraph              DEBUG  main message
2023-06-05 10:25:51.095 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 10:25:51.863 938:isIngraph              INFO   Load Dataset
2023-06-05 10:26:23.083 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 10:26:23.962 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 10:26:27.200 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 10:26:27.205 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 10:26:28.136 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 10:26:29.500 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 10:26:29.501 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 10:26:30.362 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 10:26:32.090 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 10:26:32.091 306:isInGraph              INFO   *** Example ***
2023-06-05 10:26:32.091 307:isInGraph              INFO   idx: 42984
2023-06-05 10:26:32.091 308:isInGraph              INFO   label: 1
2023-06-05 10:26:32.091 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 10:26:32.092 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 10:26:32.092 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 10:26:32.092 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 10:26:32.092 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 10:26:32.092 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 10:26:32.092 306:isInGraph              INFO   *** Example ***
2023-06-05 10:26:32.092 307:isInGraph              INFO   idx: 40257
2023-06-05 10:26:32.093 308:isInGraph              INFO   label: 0
2023-06-05 10:26:32.093 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 10:26:32.093 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 10:26:32.093 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 10:26:32.093 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 10:26:32.093 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 10:26:32.093 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 10:26:32.094 306:isInGraph              INFO   *** Example ***
2023-06-05 10:26:32.094 307:isInGraph              INFO   idx: 43203
2023-06-05 10:26:32.094 308:isInGraph              INFO   label: 1
2023-06-05 10:26:32.094 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 10:26:32.094 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 10:26:32.094 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 10:26:32.094 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 10:26:32.095 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 10:26:32.095 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 10:26:32.095 306:isInGraph              INFO   *** Example ***
2023-06-05 10:26:32.095 307:isInGraph              INFO   idx: 48598
2023-06-05 10:26:32.095 308:isInGraph              INFO   label: 1
2023-06-05 10:26:32.095 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 10:26:32.095 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 10:26:32.096 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 10:26:32.096 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 10:26:32.096 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 10:26:32.096 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 10:26:32.096 306:isInGraph              INFO   *** Example ***
2023-06-05 10:26:32.096 307:isInGraph              INFO   idx: 49875
2023-06-05 10:26:32.096 308:isInGraph              INFO   label: 0
2023-06-05 10:26:32.097 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 10:26:32.097 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 10:26:32.097 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 10:26:32.097 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 10:26:32.097 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 10:26:32.097 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 10:26:32.097 306:isInGraph              INFO   *** Example ***
2023-06-05 10:26:32.097 307:isInGraph              INFO   idx: 48859
2023-06-05 10:26:32.097 308:isInGraph              INFO   label: 1
2023-06-05 10:26:32.098 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 10:26:32.098 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 10:26:32.098 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 10:26:32.098 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 10:26:32.098 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 10:26:32.098 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 10:26:32.099 306:isInGraph              INFO   *** Example ***
2023-06-05 10:26:32.099 307:isInGraph              INFO   idx: 46604
2023-06-05 10:26:32.099 308:isInGraph              INFO   label: 1
2023-06-05 10:26:32.099 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 10:26:32.099 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 10:26:32.099 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 10:26:32.099 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 10:26:32.100 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 10:26:32.100 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 10:26:32.100 306:isInGraph              INFO   *** Example ***
2023-06-05 10:26:32.100 307:isInGraph              INFO   idx: 47009
2023-06-05 10:26:32.100 308:isInGraph              INFO   label: 1
2023-06-05 10:26:32.100 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 10:26:32.100 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 10:26:32.100 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 10:26:32.101 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 10:26:32.101 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 10:26:32.101 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 10:26:32.101 306:isInGraph              INFO   *** Example ***
2023-06-05 10:26:32.101 307:isInGraph              INFO   idx: 50281
2023-06-05 10:26:32.101 308:isInGraph              INFO   label: 1
2023-06-05 10:26:32.101 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 10:26:32.102 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 10:26:32.102 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 10:26:32.102 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 10:26:32.102 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 10:26:32.102 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 10:26:32.102 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 10:26:32.123 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 10:26:32.123 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=True, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12', posratio=0.5, seed=378, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 10:26:33.781 451:isIngraph              INFO   ***** Running training *****
2023-06-05 10:26:33.782 452:isIngraph              INFO     Num examples = 87838
2023-06-05 10:26:33.782 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 10:26:33.782 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 10:26:33.782 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 10:26:33.782 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 10:26:33.782 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 10:26:44.929 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 10:26:44.930 581:isIngraph              INFO     Num examples = 29244
2023-06-05 10:26:44.930 582:isIngraph              INFO     Batch size = 32
2023-06-05 10:27:17.394 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 10:27:17.395 629:isIngraph              INFO     eval_acc = 0.7428
2023-06-05 10:27:17.395 629:isIngraph              INFO     eval_f1 = 0.7199
2023-06-05 10:27:17.395 629:isIngraph              INFO     eval_mcc = 0.492
2023-06-05 10:27:17.395 629:isIngraph              INFO     eval_precision = 0.7898
2023-06-05 10:27:17.396 629:isIngraph              INFO     eval_recall = 0.6614
2023-06-05 10:27:17.396 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 10:27:17.400 522:isIngraph              INFO     ********************
2023-06-05 10:27:17.400 523:isIngraph              INFO     Best f1:0.7199
2023-06-05 10:27:17.401 524:isIngraph              INFO     ********************
2023-06-05 10:27:17.435 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-05 10:27:17.435 544:isIngraph              INFO     ********************
2023-06-05 10:27:17.436 545:isIngraph              INFO     Best MCC:0.492
2023-06-05 10:27:17.436 546:isIngraph              INFO     ********************
2023-06-05 10:27:17.460 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-05 10:27:28.159 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 10:27:28.161 581:isIngraph              INFO     Num examples = 29244
2023-06-05 10:27:28.161 582:isIngraph              INFO     Batch size = 32
2023-06-05 10:28:00.389 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 10:28:00.390 629:isIngraph              INFO     eval_acc = 0.8413
2023-06-05 10:28:00.390 629:isIngraph              INFO     eval_f1 = 0.8475
2023-06-05 10:28:00.390 629:isIngraph              INFO     eval_mcc = 0.6848
2023-06-05 10:28:00.390 629:isIngraph              INFO     eval_precision = 0.8154
2023-06-05 10:28:00.391 629:isIngraph              INFO     eval_recall = 0.8822
2023-06-05 10:28:00.391 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 10:28:00.396 522:isIngraph              INFO     ********************
2023-06-05 10:28:00.396 523:isIngraph              INFO     Best f1:0.8475
2023-06-05 10:28:00.396 524:isIngraph              INFO     ********************
2023-06-05 10:28:00.401 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-05 10:28:00.401 544:isIngraph              INFO     ********************
2023-06-05 10:28:00.401 545:isIngraph              INFO     Best MCC:0.6848
2023-06-05 10:28:00.402 546:isIngraph              INFO     ********************
2023-06-05 10:28:00.404 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-05 10:28:11.912 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 10:28:11.912 581:isIngraph              INFO     Num examples = 29244
2023-06-05 10:28:11.912 582:isIngraph              INFO     Batch size = 32
2023-06-05 10:28:45.233 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 10:28:45.233 629:isIngraph              INFO     eval_acc = 0.8733
2023-06-05 10:28:45.233 629:isIngraph              INFO     eval_f1 = 0.8709
2023-06-05 10:28:45.234 629:isIngraph              INFO     eval_mcc = 0.7472
2023-06-05 10:28:45.234 629:isIngraph              INFO     eval_precision = 0.8875
2023-06-05 10:28:45.234 629:isIngraph              INFO     eval_recall = 0.855
2023-06-05 10:28:45.234 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 10:28:45.239 522:isIngraph              INFO     ********************
2023-06-05 10:28:45.239 523:isIngraph              INFO     Best f1:0.8709
2023-06-05 10:28:45.239 524:isIngraph              INFO     ********************
2023-06-05 10:28:45.255 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-05 10:28:45.255 544:isIngraph              INFO     ********************
2023-06-05 10:28:45.255 545:isIngraph              INFO     Best MCC:0.7472
2023-06-05 10:28:45.255 546:isIngraph              INFO     ********************
2023-06-05 10:28:45.257 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-05 10:28:55.731 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 10:28:55.732 581:isIngraph              INFO     Num examples = 29244
2023-06-05 10:28:55.732 582:isIngraph              INFO     Batch size = 32
2023-06-05 10:29:28.651 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 10:29:28.651 629:isIngraph              INFO     eval_acc = 0.8704
2023-06-05 10:29:28.651 629:isIngraph              INFO     eval_f1 = 0.8618
2023-06-05 10:29:28.652 629:isIngraph              INFO     eval_mcc = 0.7466
2023-06-05 10:29:28.652 629:isIngraph              INFO     eval_precision = 0.923
2023-06-05 10:29:28.652 629:isIngraph              INFO     eval_recall = 0.8083
2023-06-05 10:29:28.652 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 10:29:37.782 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 10:29:37.782 581:isIngraph              INFO     Num examples = 29244
2023-06-05 10:29:37.783 582:isIngraph              INFO     Batch size = 32
2023-06-05 10:30:11.308 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 10:30:11.308 629:isIngraph              INFO     eval_acc = 0.8866
2023-06-05 10:30:11.309 629:isIngraph              INFO     eval_f1 = 0.8952
2023-06-05 10:30:11.309 629:isIngraph              INFO     eval_mcc = 0.7838
2023-06-05 10:30:11.309 629:isIngraph              INFO     eval_precision = 0.8323
2023-06-05 10:30:11.309 629:isIngraph              INFO     eval_recall = 0.9684
2023-06-05 10:30:11.309 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 10:30:11.313 522:isIngraph              INFO     ********************
2023-06-05 10:30:11.314 523:isIngraph              INFO     Best f1:0.8952
2023-06-05 10:30:11.314 524:isIngraph              INFO     ********************
2023-06-05 10:30:11.318 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-05 10:30:11.318 544:isIngraph              INFO     ********************
2023-06-05 10:30:11.318 545:isIngraph              INFO     Best MCC:0.7838
2023-06-05 10:30:11.319 546:isIngraph              INFO     ********************
2023-06-05 10:30:11.320 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-05 10:30:21.453 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 10:30:21.453 581:isIngraph              INFO     Num examples = 29244
2023-06-05 10:30:21.454 582:isIngraph              INFO     Batch size = 32
2023-06-05 10:30:49.629 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 10:30:49.630 629:isIngraph              INFO     eval_acc = 0.9039
2023-06-05 10:30:49.630 629:isIngraph              INFO     eval_f1 = 0.9024
2023-06-05 10:30:49.630 629:isIngraph              INFO     eval_mcc = 0.8083
2023-06-05 10:30:49.630 629:isIngraph              INFO     eval_precision = 0.9171
2023-06-05 10:30:49.630 629:isIngraph              INFO     eval_recall = 0.8881
2023-06-05 10:30:49.631 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 10:30:49.634 522:isIngraph              INFO     ********************
2023-06-05 10:30:49.635 523:isIngraph              INFO     Best f1:0.9024
2023-06-05 10:30:49.635 524:isIngraph              INFO     ********************
2023-06-05 10:30:49.638 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-05 10:30:49.638 544:isIngraph              INFO     ********************
2023-06-05 10:30:49.638 545:isIngraph              INFO     Best MCC:0.8083
2023-06-05 10:30:49.638 546:isIngraph              INFO     ********************
2023-06-05 10:30:49.640 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-05 10:30:57.488 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 10:30:57.489 581:isIngraph              INFO     Num examples = 29244
2023-06-05 10:30:57.489 582:isIngraph              INFO     Batch size = 32
2023-06-05 10:31:21.136 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 10:31:21.136 629:isIngraph              INFO     eval_acc = 0.9068
2023-06-05 10:31:21.136 629:isIngraph              INFO     eval_f1 = 0.911
2023-06-05 10:31:21.137 629:isIngraph              INFO     eval_mcc = 0.8173
2023-06-05 10:31:21.137 629:isIngraph              INFO     eval_precision = 0.8711
2023-06-05 10:31:21.137 629:isIngraph              INFO     eval_recall = 0.9547
2023-06-05 10:31:21.137 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 10:31:21.140 522:isIngraph              INFO     ********************
2023-06-05 10:31:21.140 523:isIngraph              INFO     Best f1:0.911
2023-06-05 10:31:21.140 524:isIngraph              INFO     ********************
2023-06-05 10:31:21.144 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-05 10:31:21.144 544:isIngraph              INFO     ********************
2023-06-05 10:31:21.144 545:isIngraph              INFO     Best MCC:0.8173
2023-06-05 10:31:21.144 546:isIngraph              INFO     ********************
2023-06-05 10:31:21.146 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-05 10:31:28.697 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 10:31:28.697 581:isIngraph              INFO     Num examples = 29244
2023-06-05 10:31:28.697 582:isIngraph              INFO     Batch size = 32
2023-06-05 10:31:53.338 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 10:31:53.339 629:isIngraph              INFO     eval_acc = 0.9149
2023-06-05 10:31:53.339 629:isIngraph              INFO     eval_f1 = 0.9162
2023-06-05 10:31:53.339 629:isIngraph              INFO     eval_mcc = 0.8302
2023-06-05 10:31:53.339 629:isIngraph              INFO     eval_precision = 0.9025
2023-06-05 10:31:53.339 629:isIngraph              INFO     eval_recall = 0.9302
2023-06-05 10:31:53.339 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 10:31:53.342 522:isIngraph              INFO     ********************
2023-06-05 10:31:53.342 523:isIngraph              INFO     Best f1:0.9162
2023-06-05 10:31:53.342 524:isIngraph              INFO     ********************
2023-06-05 10:31:53.345 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-05 10:31:53.345 544:isIngraph              INFO     ********************
2023-06-05 10:31:53.345 545:isIngraph              INFO     Best MCC:0.8302
2023-06-05 10:31:53.345 546:isIngraph              INFO     ********************
2023-06-05 10:31:53.347 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-05 10:32:04.213 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 10:32:04.214 581:isIngraph              INFO     Num examples = 29244
2023-06-05 10:32:04.214 582:isIngraph              INFO     Batch size = 32
2023-06-05 10:32:37.406 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 10:32:37.406 629:isIngraph              INFO     eval_acc = 0.917
2023-06-05 10:32:37.406 629:isIngraph              INFO     eval_f1 = 0.9185
2023-06-05 10:32:37.406 629:isIngraph              INFO     eval_mcc = 0.8346
2023-06-05 10:32:37.407 629:isIngraph              INFO     eval_precision = 0.9016
2023-06-05 10:32:37.407 629:isIngraph              INFO     eval_recall = 0.9361
2023-06-05 10:32:37.407 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 10:32:37.410 522:isIngraph              INFO     ********************
2023-06-05 10:32:37.410 523:isIngraph              INFO     Best f1:0.9185
2023-06-05 10:32:37.410 524:isIngraph              INFO     ********************
2023-06-05 10:32:37.414 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-05 10:32:37.414 544:isIngraph              INFO     ********************
2023-06-05 10:32:37.414 545:isIngraph              INFO     Best MCC:0.8346
2023-06-05 10:32:37.415 546:isIngraph              INFO     ********************
2023-06-05 10:32:37.417 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-05 10:32:46.744 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 10:32:46.744 581:isIngraph              INFO     Num examples = 29244
2023-06-05 10:32:46.744 582:isIngraph              INFO     Batch size = 32
2023-06-05 10:33:19.638 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 10:33:19.639 629:isIngraph              INFO     eval_acc = 0.9171
2023-06-05 10:33:19.639 629:isIngraph              INFO     eval_f1 = 0.9188
2023-06-05 10:33:19.639 629:isIngraph              INFO     eval_mcc = 0.835
2023-06-05 10:33:19.639 629:isIngraph              INFO     eval_precision = 0.9009
2023-06-05 10:33:19.639 629:isIngraph              INFO     eval_recall = 0.9373
2023-06-05 10:33:19.639 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 10:33:19.642 522:isIngraph              INFO     ********************
2023-06-05 10:33:19.642 523:isIngraph              INFO     Best f1:0.9188
2023-06-05 10:33:19.642 524:isIngraph              INFO     ********************
2023-06-05 10:33:19.654 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-f1/model.bin
2023-06-05 10:33:19.655 544:isIngraph              INFO     ********************
2023-06-05 10:33:19.655 545:isIngraph              INFO     Best MCC:0.835
2023-06-05 10:33:19.655 546:isIngraph              INFO     ********************
2023-06-05 10:33:19.667 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/random/saved_unixcodermodels/3/cdg_layer_12/checkpoint-best-mcc/model.bin
2023-06-05 10:33:19.911 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 10:33:19.911 651:isIngraph              INFO     Num examples = 30316
2023-06-05 10:33:19.911 652:isIngraph              INFO     Batch size = 32
2023-06-05 10:33:53.409 693:isIngraph              INFO   ***** Test results *****
2023-06-05 10:33:53.410 695:isIngraph              INFO     eval_acc = 0.9083
2023-06-05 10:33:53.410 695:isIngraph              INFO     eval_f1 = 0.9099
2023-06-05 10:33:53.410 695:isIngraph              INFO     eval_mcc = 0.8171
2023-06-05 10:33:53.410 695:isIngraph              INFO     eval_precision = 0.8937
2023-06-05 10:33:53.410 695:isIngraph              INFO     eval_recall = 0.9267
2023-06-05 10:33:53.410 695:isIngraph              INFO     eval_threshold = 0.5
