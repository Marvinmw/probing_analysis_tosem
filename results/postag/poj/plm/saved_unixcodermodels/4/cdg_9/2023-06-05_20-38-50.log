2023-06-05 20:38:50.305 917:isIngraph              DEBUG  main message
2023-06-05 20:38:50.305 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 20:38:51.405 938:isIngraph              INFO   Load Dataset
2023-06-05 20:39:22.178 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 20:39:23.281 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 20:39:27.000 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 20:39:27.005 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 20:39:27.928 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 20:39:29.837 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 20:39:29.838 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 20:39:30.775 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 20:39:33.202 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 20:39:33.202 306:isInGraph              INFO   *** Example ***
2023-06-05 20:39:33.202 307:isInGraph              INFO   idx: 42984
2023-06-05 20:39:33.203 308:isInGraph              INFO   label: 1
2023-06-05 20:39:33.203 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 20:39:33.203 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 20:39:33.203 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 20:39:33.203 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 20:39:33.204 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 20:39:33.204 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 20:39:33.204 306:isInGraph              INFO   *** Example ***
2023-06-05 20:39:33.204 307:isInGraph              INFO   idx: 40257
2023-06-05 20:39:33.204 308:isInGraph              INFO   label: 0
2023-06-05 20:39:33.204 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 20:39:33.204 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 20:39:33.205 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 20:39:33.205 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 20:39:33.205 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 20:39:33.205 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 20:39:33.205 306:isInGraph              INFO   *** Example ***
2023-06-05 20:39:33.205 307:isInGraph              INFO   idx: 43203
2023-06-05 20:39:33.205 308:isInGraph              INFO   label: 1
2023-06-05 20:39:33.206 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 20:39:33.206 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 20:39:33.206 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 20:39:33.206 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 20:39:33.206 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 20:39:33.206 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 20:39:33.206 306:isInGraph              INFO   *** Example ***
2023-06-05 20:39:33.207 307:isInGraph              INFO   idx: 48598
2023-06-05 20:39:33.207 308:isInGraph              INFO   label: 1
2023-06-05 20:39:33.207 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 20:39:33.207 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 20:39:33.207 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 20:39:33.207 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 20:39:33.208 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 20:39:33.208 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 20:39:33.208 306:isInGraph              INFO   *** Example ***
2023-06-05 20:39:33.208 307:isInGraph              INFO   idx: 49875
2023-06-05 20:39:33.208 308:isInGraph              INFO   label: 0
2023-06-05 20:39:33.208 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 20:39:33.208 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 20:39:33.209 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 20:39:33.209 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 20:39:33.209 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 20:39:33.209 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 20:39:33.209 306:isInGraph              INFO   *** Example ***
2023-06-05 20:39:33.209 307:isInGraph              INFO   idx: 48859
2023-06-05 20:39:33.209 308:isInGraph              INFO   label: 1
2023-06-05 20:39:33.210 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 20:39:33.210 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 20:39:33.210 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 20:39:33.210 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 20:39:33.210 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 20:39:33.210 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 20:39:33.210 306:isInGraph              INFO   *** Example ***
2023-06-05 20:39:33.211 307:isInGraph              INFO   idx: 46604
2023-06-05 20:39:33.211 308:isInGraph              INFO   label: 1
2023-06-05 20:39:33.211 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 20:39:33.211 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 20:39:33.211 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 20:39:33.211 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 20:39:33.211 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 20:39:33.212 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 20:39:33.212 306:isInGraph              INFO   *** Example ***
2023-06-05 20:39:33.212 307:isInGraph              INFO   idx: 47009
2023-06-05 20:39:33.212 308:isInGraph              INFO   label: 1
2023-06-05 20:39:33.212 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 20:39:33.212 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 20:39:33.212 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 20:39:33.213 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 20:39:33.213 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 20:39:33.213 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 20:39:33.213 306:isInGraph              INFO   *** Example ***
2023-06-05 20:39:33.213 307:isInGraph              INFO   idx: 50281
2023-06-05 20:39:33.213 308:isInGraph              INFO   label: 1
2023-06-05 20:39:33.214 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 20:39:33.214 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 20:39:33.214 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 20:39:33.214 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 20:39:33.214 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 20:39:33.215 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 20:39:33.215 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 20:39:33.237 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 20:39:33.237 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9', posratio=0.5, seed=31, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 20:39:35.040 451:isIngraph              INFO   ***** Running training *****
2023-06-05 20:39:35.040 452:isIngraph              INFO     Num examples = 87838
2023-06-05 20:39:35.040 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 20:39:35.040 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 20:39:35.041 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 20:39:35.041 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 20:39:35.041 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 20:39:45.827 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:39:45.828 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:39:45.828 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:40:15.776 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:40:15.777 629:isIngraph              INFO     eval_acc = 0.9115
2023-06-05 20:40:15.778 629:isIngraph              INFO     eval_f1 = 0.917
2023-06-05 20:40:15.778 629:isIngraph              INFO     eval_mcc = 0.8303
2023-06-05 20:40:15.778 629:isIngraph              INFO     eval_precision = 0.8636
2023-06-05 20:40:15.778 629:isIngraph              INFO     eval_recall = 0.9774
2023-06-05 20:40:15.778 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:40:15.783 522:isIngraph              INFO     ********************
2023-06-05 20:40:15.783 523:isIngraph              INFO     Best f1:0.917
2023-06-05 20:40:15.783 524:isIngraph              INFO     ********************
2023-06-05 20:40:15.789 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-f1/model.bin
2023-06-05 20:40:15.790 544:isIngraph              INFO     ********************
2023-06-05 20:40:15.790 545:isIngraph              INFO     Best MCC:0.8303
2023-06-05 20:40:15.790 546:isIngraph              INFO     ********************
2023-06-05 20:40:15.792 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-mcc/model.bin
2023-06-05 20:40:24.311 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:40:24.312 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:40:24.313 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:40:53.851 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:40:53.852 629:isIngraph              INFO     eval_acc = 0.919
2023-06-05 20:40:53.852 629:isIngraph              INFO     eval_f1 = 0.9242
2023-06-05 20:40:53.852 629:isIngraph              INFO     eval_mcc = 0.846
2023-06-05 20:40:53.853 629:isIngraph              INFO     eval_precision = 0.8684
2023-06-05 20:40:53.853 629:isIngraph              INFO     eval_recall = 0.9876
2023-06-05 20:40:53.853 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:40:53.857 522:isIngraph              INFO     ********************
2023-06-05 20:40:53.858 523:isIngraph              INFO     Best f1:0.9242
2023-06-05 20:40:53.858 524:isIngraph              INFO     ********************
2023-06-05 20:40:53.862 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-f1/model.bin
2023-06-05 20:40:53.862 544:isIngraph              INFO     ********************
2023-06-05 20:40:53.862 545:isIngraph              INFO     Best MCC:0.846
2023-06-05 20:40:53.862 546:isIngraph              INFO     ********************
2023-06-05 20:40:53.865 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-mcc/model.bin
2023-06-05 20:41:02.642 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:41:02.642 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:41:02.642 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:41:31.536 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:41:31.537 629:isIngraph              INFO     eval_acc = 0.9388
2023-06-05 20:41:31.537 629:isIngraph              INFO     eval_f1 = 0.9411
2023-06-05 20:41:31.537 629:isIngraph              INFO     eval_mcc = 0.8803
2023-06-05 20:41:31.537 629:isIngraph              INFO     eval_precision = 0.907
2023-06-05 20:41:31.538 629:isIngraph              INFO     eval_recall = 0.9778
2023-06-05 20:41:31.538 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:41:31.542 522:isIngraph              INFO     ********************
2023-06-05 20:41:31.542 523:isIngraph              INFO     Best f1:0.9411
2023-06-05 20:41:31.542 524:isIngraph              INFO     ********************
2023-06-05 20:41:31.546 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-f1/model.bin
2023-06-05 20:41:31.546 544:isIngraph              INFO     ********************
2023-06-05 20:41:31.546 545:isIngraph              INFO     Best MCC:0.8803
2023-06-05 20:41:31.546 546:isIngraph              INFO     ********************
2023-06-05 20:41:31.548 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-mcc/model.bin
2023-06-05 20:41:40.172 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:41:40.173 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:41:40.173 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:42:09.383 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:42:09.383 629:isIngraph              INFO     eval_acc = 0.9479
2023-06-05 20:42:09.384 629:isIngraph              INFO     eval_f1 = 0.9492
2023-06-05 20:42:09.384 629:isIngraph              INFO     eval_mcc = 0.897
2023-06-05 20:42:09.384 629:isIngraph              INFO     eval_precision = 0.926
2023-06-05 20:42:09.384 629:isIngraph              INFO     eval_recall = 0.9736
2023-06-05 20:42:09.384 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:42:09.388 522:isIngraph              INFO     ********************
2023-06-05 20:42:09.388 523:isIngraph              INFO     Best f1:0.9492
2023-06-05 20:42:09.388 524:isIngraph              INFO     ********************
2023-06-05 20:42:09.391 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-f1/model.bin
2023-06-05 20:42:09.392 544:isIngraph              INFO     ********************
2023-06-05 20:42:09.392 545:isIngraph              INFO     Best MCC:0.897
2023-06-05 20:42:09.392 546:isIngraph              INFO     ********************
2023-06-05 20:42:09.394 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-mcc/model.bin
2023-06-05 20:42:18.173 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:42:18.174 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:42:18.174 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:42:47.916 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:42:47.916 629:isIngraph              INFO     eval_acc = 0.949
2023-06-05 20:42:47.916 629:isIngraph              INFO     eval_f1 = 0.9496
2023-06-05 20:42:47.916 629:isIngraph              INFO     eval_mcc = 0.8983
2023-06-05 20:42:47.917 629:isIngraph              INFO     eval_precision = 0.9392
2023-06-05 20:42:47.917 629:isIngraph              INFO     eval_recall = 0.9601
2023-06-05 20:42:47.917 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:42:47.922 522:isIngraph              INFO     ********************
2023-06-05 20:42:47.922 523:isIngraph              INFO     Best f1:0.9496
2023-06-05 20:42:47.923 524:isIngraph              INFO     ********************
2023-06-05 20:42:47.926 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-f1/model.bin
2023-06-05 20:42:47.926 544:isIngraph              INFO     ********************
2023-06-05 20:42:47.926 545:isIngraph              INFO     Best MCC:0.8983
2023-06-05 20:42:47.926 546:isIngraph              INFO     ********************
2023-06-05 20:42:47.928 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-mcc/model.bin
2023-06-05 20:42:55.801 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:42:55.802 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:42:55.802 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:43:23.612 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:43:23.613 629:isIngraph              INFO     eval_acc = 0.9522
2023-06-05 20:43:23.613 629:isIngraph              INFO     eval_f1 = 0.9531
2023-06-05 20:43:23.613 629:isIngraph              INFO     eval_mcc = 0.9051
2023-06-05 20:43:23.613 629:isIngraph              INFO     eval_precision = 0.9364
2023-06-05 20:43:23.613 629:isIngraph              INFO     eval_recall = 0.9703
2023-06-05 20:43:23.614 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:43:23.618 522:isIngraph              INFO     ********************
2023-06-05 20:43:23.618 523:isIngraph              INFO     Best f1:0.9531
2023-06-05 20:43:23.618 524:isIngraph              INFO     ********************
2023-06-05 20:43:23.621 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-f1/model.bin
2023-06-05 20:43:23.622 544:isIngraph              INFO     ********************
2023-06-05 20:43:23.622 545:isIngraph              INFO     Best MCC:0.9051
2023-06-05 20:43:23.622 546:isIngraph              INFO     ********************
2023-06-05 20:43:23.624 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-mcc/model.bin
2023-06-05 20:43:31.539 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:43:31.539 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:43:31.539 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:44:01.139 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:44:01.140 629:isIngraph              INFO     eval_acc = 0.9519
2023-06-05 20:44:01.140 629:isIngraph              INFO     eval_f1 = 0.9536
2023-06-05 20:44:01.140 629:isIngraph              INFO     eval_mcc = 0.9061
2023-06-05 20:44:01.140 629:isIngraph              INFO     eval_precision = 0.9219
2023-06-05 20:44:01.141 629:isIngraph              INFO     eval_recall = 0.9874
2023-06-05 20:44:01.141 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:44:01.145 522:isIngraph              INFO     ********************
2023-06-05 20:44:01.145 523:isIngraph              INFO     Best f1:0.9536
2023-06-05 20:44:01.146 524:isIngraph              INFO     ********************
2023-06-05 20:44:01.149 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-f1/model.bin
2023-06-05 20:44:01.149 544:isIngraph              INFO     ********************
2023-06-05 20:44:01.149 545:isIngraph              INFO     Best MCC:0.9061
2023-06-05 20:44:01.150 546:isIngraph              INFO     ********************
2023-06-05 20:44:01.151 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-mcc/model.bin
2023-06-05 20:44:09.013 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:44:09.014 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:44:09.014 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:44:37.606 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:44:37.607 629:isIngraph              INFO     eval_acc = 0.9541
2023-06-05 20:44:37.607 629:isIngraph              INFO     eval_f1 = 0.9553
2023-06-05 20:44:37.607 629:isIngraph              INFO     eval_mcc = 0.9094
2023-06-05 20:44:37.607 629:isIngraph              INFO     eval_precision = 0.9311
2023-06-05 20:44:37.607 629:isIngraph              INFO     eval_recall = 0.9807
2023-06-05 20:44:37.608 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:44:37.611 522:isIngraph              INFO     ********************
2023-06-05 20:44:37.612 523:isIngraph              INFO     Best f1:0.9553
2023-06-05 20:44:37.612 524:isIngraph              INFO     ********************
2023-06-05 20:44:37.615 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-f1/model.bin
2023-06-05 20:44:37.616 544:isIngraph              INFO     ********************
2023-06-05 20:44:37.616 545:isIngraph              INFO     Best MCC:0.9094
2023-06-05 20:44:37.616 546:isIngraph              INFO     ********************
2023-06-05 20:44:37.618 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-mcc/model.bin
2023-06-05 20:44:44.597 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:44:44.597 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:44:44.598 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:45:06.170 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:45:06.170 629:isIngraph              INFO     eval_acc = 0.953
2023-06-05 20:45:06.170 629:isIngraph              INFO     eval_f1 = 0.9546
2023-06-05 20:45:06.170 629:isIngraph              INFO     eval_mcc = 0.9083
2023-06-05 20:45:06.170 629:isIngraph              INFO     eval_precision = 0.9229
2023-06-05 20:45:06.171 629:isIngraph              INFO     eval_recall = 0.9885
2023-06-05 20:45:06.171 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:45:13.063 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 20:45:13.063 581:isIngraph              INFO     Num examples = 29244
2023-06-05 20:45:13.063 582:isIngraph              INFO     Batch size = 32
2023-06-05 20:45:33.582 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 20:45:33.582 629:isIngraph              INFO     eval_acc = 0.9545
2023-06-05 20:45:33.582 629:isIngraph              INFO     eval_f1 = 0.9555
2023-06-05 20:45:33.583 629:isIngraph              INFO     eval_mcc = 0.9099
2023-06-05 20:45:33.583 629:isIngraph              INFO     eval_precision = 0.9337
2023-06-05 20:45:33.583 629:isIngraph              INFO     eval_recall = 0.9784
2023-06-05 20:45:33.583 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 20:45:33.586 522:isIngraph              INFO     ********************
2023-06-05 20:45:33.586 523:isIngraph              INFO     Best f1:0.9555
2023-06-05 20:45:33.586 524:isIngraph              INFO     ********************
2023-06-05 20:45:33.589 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-f1/model.bin
2023-06-05 20:45:33.590 544:isIngraph              INFO     ********************
2023-06-05 20:45:33.590 545:isIngraph              INFO     Best MCC:0.9099
2023-06-05 20:45:33.590 546:isIngraph              INFO     ********************
2023-06-05 20:45:33.591 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_9/checkpoint-best-mcc/model.bin
2023-06-05 20:45:33.737 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 20:45:33.737 651:isIngraph              INFO     Num examples = 30316
2023-06-05 20:45:33.737 652:isIngraph              INFO     Batch size = 32
2023-06-05 20:46:00.099 693:isIngraph              INFO   ***** Test results *****
2023-06-05 20:46:00.099 695:isIngraph              INFO     eval_acc = 0.9488
2023-06-05 20:46:00.099 695:isIngraph              INFO     eval_f1 = 0.9496
2023-06-05 20:46:00.100 695:isIngraph              INFO     eval_mcc = 0.8981
2023-06-05 20:46:00.100 695:isIngraph              INFO     eval_precision = 0.9355
2023-06-05 20:46:00.100 695:isIngraph              INFO     eval_recall = 0.9642
2023-06-05 20:46:00.100 695:isIngraph              INFO     eval_threshold = 0.5
