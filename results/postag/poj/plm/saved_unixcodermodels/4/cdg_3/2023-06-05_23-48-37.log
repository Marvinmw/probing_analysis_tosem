2023-06-05 23:48:37.661 917:isIngraph              DEBUG  main message
2023-06-05 23:48:37.661 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 23:48:38.350 938:isIngraph              INFO   Load Dataset
2023-06-05 23:49:06.133 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 23:49:07.138 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 23:49:10.169 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 23:49:10.172 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 23:49:11.088 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 23:49:12.430 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 23:49:12.431 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 23:49:13.451 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 23:49:15.814 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 23:49:15.814 306:isInGraph              INFO   *** Example ***
2023-06-05 23:49:15.815 307:isInGraph              INFO   idx: 42984
2023-06-05 23:49:15.815 308:isInGraph              INFO   label: 1
2023-06-05 23:49:15.815 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 23:49:15.815 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 23:49:15.815 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 23:49:15.816 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 23:49:15.816 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 23:49:15.816 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 23:49:15.816 306:isInGraph              INFO   *** Example ***
2023-06-05 23:49:15.816 307:isInGraph              INFO   idx: 40257
2023-06-05 23:49:15.816 308:isInGraph              INFO   label: 0
2023-06-05 23:49:15.816 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 23:49:15.817 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 23:49:15.817 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 23:49:15.817 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 23:49:15.817 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 23:49:15.817 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 23:49:15.817 306:isInGraph              INFO   *** Example ***
2023-06-05 23:49:15.817 307:isInGraph              INFO   idx: 43203
2023-06-05 23:49:15.817 308:isInGraph              INFO   label: 1
2023-06-05 23:49:15.818 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 23:49:15.818 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 23:49:15.818 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 23:49:15.818 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 23:49:15.818 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 23:49:15.818 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 23:49:15.819 306:isInGraph              INFO   *** Example ***
2023-06-05 23:49:15.819 307:isInGraph              INFO   idx: 48598
2023-06-05 23:49:15.819 308:isInGraph              INFO   label: 1
2023-06-05 23:49:15.819 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 23:49:15.819 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 23:49:15.819 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 23:49:15.819 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 23:49:15.820 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 23:49:15.820 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 23:49:15.820 306:isInGraph              INFO   *** Example ***
2023-06-05 23:49:15.820 307:isInGraph              INFO   idx: 49875
2023-06-05 23:49:15.820 308:isInGraph              INFO   label: 0
2023-06-05 23:49:15.820 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 23:49:15.820 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 23:49:15.820 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 23:49:15.821 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 23:49:15.821 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 23:49:15.821 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 23:49:15.821 306:isInGraph              INFO   *** Example ***
2023-06-05 23:49:15.821 307:isInGraph              INFO   idx: 48859
2023-06-05 23:49:15.821 308:isInGraph              INFO   label: 1
2023-06-05 23:49:15.821 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 23:49:15.822 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 23:49:15.822 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 23:49:15.822 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 23:49:15.822 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 23:49:15.822 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 23:49:15.822 306:isInGraph              INFO   *** Example ***
2023-06-05 23:49:15.822 307:isInGraph              INFO   idx: 46604
2023-06-05 23:49:15.823 308:isInGraph              INFO   label: 1
2023-06-05 23:49:15.823 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 23:49:15.823 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 23:49:15.823 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 23:49:15.823 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 23:49:15.823 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 23:49:15.823 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 23:49:15.824 306:isInGraph              INFO   *** Example ***
2023-06-05 23:49:15.824 307:isInGraph              INFO   idx: 47009
2023-06-05 23:49:15.824 308:isInGraph              INFO   label: 1
2023-06-05 23:49:15.824 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 23:49:15.824 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 23:49:15.824 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 23:49:15.824 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 23:49:15.825 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 23:49:15.825 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 23:49:15.825 306:isInGraph              INFO   *** Example ***
2023-06-05 23:49:15.825 307:isInGraph              INFO   idx: 50281
2023-06-05 23:49:15.825 308:isInGraph              INFO   label: 1
2023-06-05 23:49:15.825 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 23:49:15.825 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 23:49:15.825 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 23:49:15.826 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 23:49:15.826 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 23:49:15.826 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 23:49:15.826 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 23:49:15.848 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 23:49:15.848 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=3, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3', posratio=0.5, seed=31, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 23:49:17.461 451:isIngraph              INFO   ***** Running training *****
2023-06-05 23:49:17.462 452:isIngraph              INFO     Num examples = 87838
2023-06-05 23:49:17.462 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 23:49:17.462 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 23:49:17.462 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 23:49:17.462 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 23:49:17.462 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 23:49:27.111 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 23:49:27.111 581:isIngraph              INFO     Num examples = 29244
2023-06-05 23:49:27.111 582:isIngraph              INFO     Batch size = 32
2023-06-05 23:49:52.178 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 23:49:52.179 629:isIngraph              INFO     eval_acc = 0.9186
2023-06-05 23:49:52.179 629:isIngraph              INFO     eval_f1 = 0.9226
2023-06-05 23:49:52.180 629:isIngraph              INFO     eval_mcc = 0.8419
2023-06-05 23:49:52.180 629:isIngraph              INFO     eval_precision = 0.8786
2023-06-05 23:49:52.180 629:isIngraph              INFO     eval_recall = 0.9713
2023-06-05 23:49:52.180 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 23:49:52.184 522:isIngraph              INFO     ********************
2023-06-05 23:49:52.184 523:isIngraph              INFO     Best f1:0.9226
2023-06-05 23:49:52.184 524:isIngraph              INFO     ********************
2023-06-05 23:49:52.190 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 23:49:52.190 544:isIngraph              INFO     ********************
2023-06-05 23:49:52.190 545:isIngraph              INFO     Best MCC:0.8419
2023-06-05 23:49:52.190 546:isIngraph              INFO     ********************
2023-06-05 23:49:52.193 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 23:50:00.169 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 23:50:00.169 581:isIngraph              INFO     Num examples = 29244
2023-06-05 23:50:00.169 582:isIngraph              INFO     Batch size = 32
2023-06-05 23:50:24.274 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 23:50:24.275 629:isIngraph              INFO     eval_acc = 0.939
2023-06-05 23:50:24.275 629:isIngraph              INFO     eval_f1 = 0.9407
2023-06-05 23:50:24.275 629:isIngraph              INFO     eval_mcc = 0.8795
2023-06-05 23:50:24.275 629:isIngraph              INFO     eval_precision = 0.9142
2023-06-05 23:50:24.275 629:isIngraph              INFO     eval_recall = 0.9688
2023-06-05 23:50:24.275 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 23:50:24.279 522:isIngraph              INFO     ********************
2023-06-05 23:50:24.279 523:isIngraph              INFO     Best f1:0.9407
2023-06-05 23:50:24.280 524:isIngraph              INFO     ********************
2023-06-05 23:50:24.283 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 23:50:24.283 544:isIngraph              INFO     ********************
2023-06-05 23:50:24.283 545:isIngraph              INFO     Best MCC:0.8795
2023-06-05 23:50:24.283 546:isIngraph              INFO     ********************
2023-06-05 23:50:24.285 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 23:50:31.443 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 23:50:31.443 581:isIngraph              INFO     Num examples = 29244
2023-06-05 23:50:31.444 582:isIngraph              INFO     Batch size = 32
2023-06-05 23:50:55.874 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 23:50:55.875 629:isIngraph              INFO     eval_acc = 0.9486
2023-06-05 23:50:55.875 629:isIngraph              INFO     eval_f1 = 0.9503
2023-06-05 23:50:55.875 629:isIngraph              INFO     eval_mcc = 0.8994
2023-06-05 23:50:55.875 629:isIngraph              INFO     eval_precision = 0.9195
2023-06-05 23:50:55.875 629:isIngraph              INFO     eval_recall = 0.9833
2023-06-05 23:50:55.875 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 23:50:55.880 522:isIngraph              INFO     ********************
2023-06-05 23:50:55.880 523:isIngraph              INFO     Best f1:0.9503
2023-06-05 23:50:55.880 524:isIngraph              INFO     ********************
2023-06-05 23:50:55.884 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 23:50:55.884 544:isIngraph              INFO     ********************
2023-06-05 23:50:55.884 545:isIngraph              INFO     Best MCC:0.8994
2023-06-05 23:50:55.884 546:isIngraph              INFO     ********************
2023-06-05 23:50:55.886 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 23:51:03.236 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 23:51:03.236 581:isIngraph              INFO     Num examples = 29244
2023-06-05 23:51:03.236 582:isIngraph              INFO     Batch size = 32
2023-06-05 23:51:27.415 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 23:51:27.416 629:isIngraph              INFO     eval_acc = 0.9533
2023-06-05 23:51:27.416 629:isIngraph              INFO     eval_f1 = 0.9546
2023-06-05 23:51:27.416 629:isIngraph              INFO     eval_mcc = 0.9081
2023-06-05 23:51:27.416 629:isIngraph              INFO     eval_precision = 0.9283
2023-06-05 23:51:27.416 629:isIngraph              INFO     eval_recall = 0.9824
2023-06-05 23:51:27.417 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 23:51:27.421 522:isIngraph              INFO     ********************
2023-06-05 23:51:27.421 523:isIngraph              INFO     Best f1:0.9546
2023-06-05 23:51:27.421 524:isIngraph              INFO     ********************
2023-06-05 23:51:27.425 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 23:51:27.425 544:isIngraph              INFO     ********************
2023-06-05 23:51:27.425 545:isIngraph              INFO     Best MCC:0.9081
2023-06-05 23:51:27.425 546:isIngraph              INFO     ********************
2023-06-05 23:51:27.427 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 23:51:34.885 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 23:51:34.885 581:isIngraph              INFO     Num examples = 29244
2023-06-05 23:51:34.886 582:isIngraph              INFO     Batch size = 32
2023-06-05 23:52:00.908 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 23:52:00.908 629:isIngraph              INFO     eval_acc = 0.9551
2023-06-05 23:52:00.908 629:isIngraph              INFO     eval_f1 = 0.9562
2023-06-05 23:52:00.908 629:isIngraph              INFO     eval_mcc = 0.9114
2023-06-05 23:52:00.909 629:isIngraph              INFO     eval_precision = 0.9335
2023-06-05 23:52:00.909 629:isIngraph              INFO     eval_recall = 0.9801
2023-06-05 23:52:00.909 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 23:52:00.914 522:isIngraph              INFO     ********************
2023-06-05 23:52:00.914 523:isIngraph              INFO     Best f1:0.9562
2023-06-05 23:52:00.914 524:isIngraph              INFO     ********************
2023-06-05 23:52:00.918 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 23:52:00.918 544:isIngraph              INFO     ********************
2023-06-05 23:52:00.918 545:isIngraph              INFO     Best MCC:0.9114
2023-06-05 23:52:00.919 546:isIngraph              INFO     ********************
2023-06-05 23:52:00.920 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 23:52:08.218 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 23:52:08.218 581:isIngraph              INFO     Num examples = 29244
2023-06-05 23:52:08.218 582:isIngraph              INFO     Batch size = 32
2023-06-05 23:52:33.765 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 23:52:33.765 629:isIngraph              INFO     eval_acc = 0.9559
2023-06-05 23:52:33.765 629:isIngraph              INFO     eval_f1 = 0.9568
2023-06-05 23:52:33.765 629:isIngraph              INFO     eval_mcc = 0.9126
2023-06-05 23:52:33.766 629:isIngraph              INFO     eval_precision = 0.9365
2023-06-05 23:52:33.766 629:isIngraph              INFO     eval_recall = 0.978
2023-06-05 23:52:33.766 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 23:52:33.771 522:isIngraph              INFO     ********************
2023-06-05 23:52:33.771 523:isIngraph              INFO     Best f1:0.9568
2023-06-05 23:52:33.771 524:isIngraph              INFO     ********************
2023-06-05 23:52:33.775 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 23:52:33.775 544:isIngraph              INFO     ********************
2023-06-05 23:52:33.775 545:isIngraph              INFO     Best MCC:0.9126
2023-06-05 23:52:33.776 546:isIngraph              INFO     ********************
2023-06-05 23:52:33.777 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 23:52:42.068 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 23:52:42.068 581:isIngraph              INFO     Num examples = 29244
2023-06-05 23:52:42.068 582:isIngraph              INFO     Batch size = 32
2023-06-05 23:53:07.945 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 23:53:07.945 629:isIngraph              INFO     eval_acc = 0.9573
2023-06-05 23:53:07.945 629:isIngraph              INFO     eval_f1 = 0.9584
2023-06-05 23:53:07.945 629:isIngraph              INFO     eval_mcc = 0.916
2023-06-05 23:53:07.945 629:isIngraph              INFO     eval_precision = 0.9337
2023-06-05 23:53:07.946 629:isIngraph              INFO     eval_recall = 0.9845
2023-06-05 23:53:07.946 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 23:53:07.950 522:isIngraph              INFO     ********************
2023-06-05 23:53:07.950 523:isIngraph              INFO     Best f1:0.9584
2023-06-05 23:53:07.950 524:isIngraph              INFO     ********************
2023-06-05 23:53:07.954 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 23:53:07.954 544:isIngraph              INFO     ********************
2023-06-05 23:53:07.954 545:isIngraph              INFO     Best MCC:0.916
2023-06-05 23:53:07.954 546:isIngraph              INFO     ********************
2023-06-05 23:53:07.956 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 23:53:16.080 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 23:53:16.080 581:isIngraph              INFO     Num examples = 29244
2023-06-05 23:53:16.080 582:isIngraph              INFO     Batch size = 32
2023-06-05 23:53:40.565 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 23:53:40.566 629:isIngraph              INFO     eval_acc = 0.9569
2023-06-05 23:53:40.566 629:isIngraph              INFO     eval_f1 = 0.9581
2023-06-05 23:53:40.566 629:isIngraph              INFO     eval_mcc = 0.9154
2023-06-05 23:53:40.566 629:isIngraph              INFO     eval_precision = 0.9311
2023-06-05 23:53:40.566 629:isIngraph              INFO     eval_recall = 0.9867
2023-06-05 23:53:40.566 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 23:53:48.604 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 23:53:48.605 581:isIngraph              INFO     Num examples = 29244
2023-06-05 23:53:48.605 582:isIngraph              INFO     Batch size = 32
2023-06-05 23:54:13.323 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 23:54:13.323 629:isIngraph              INFO     eval_acc = 0.9575
2023-06-05 23:54:13.323 629:isIngraph              INFO     eval_f1 = 0.9588
2023-06-05 23:54:13.323 629:isIngraph              INFO     eval_mcc = 0.9167
2023-06-05 23:54:13.324 629:isIngraph              INFO     eval_precision = 0.9316
2023-06-05 23:54:13.324 629:isIngraph              INFO     eval_recall = 0.9875
2023-06-05 23:54:13.324 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 23:54:13.327 522:isIngraph              INFO     ********************
2023-06-05 23:54:13.328 523:isIngraph              INFO     Best f1:0.9588
2023-06-05 23:54:13.328 524:isIngraph              INFO     ********************
2023-06-05 23:54:13.332 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 23:54:13.332 544:isIngraph              INFO     ********************
2023-06-05 23:54:13.332 545:isIngraph              INFO     Best MCC:0.9167
2023-06-05 23:54:13.332 546:isIngraph              INFO     ********************
2023-06-05 23:54:13.334 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 23:54:20.764 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 23:54:20.765 581:isIngraph              INFO     Num examples = 29244
2023-06-05 23:54:20.765 582:isIngraph              INFO     Batch size = 32
2023-06-05 23:54:47.671 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 23:54:47.671 629:isIngraph              INFO     eval_acc = 0.9577
2023-06-05 23:54:47.671 629:isIngraph              INFO     eval_f1 = 0.9588
2023-06-05 23:54:47.671 629:isIngraph              INFO     eval_mcc = 0.9168
2023-06-05 23:54:47.671 629:isIngraph              INFO     eval_precision = 0.933
2023-06-05 23:54:47.672 629:isIngraph              INFO     eval_recall = 0.9861
2023-06-05 23:54:47.672 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 23:54:47.675 522:isIngraph              INFO     ********************
2023-06-05 23:54:47.676 523:isIngraph              INFO     Best f1:0.9588
2023-06-05 23:54:47.676 524:isIngraph              INFO     ********************
2023-06-05 23:54:47.679 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-f1/model.bin
2023-06-05 23:54:47.679 544:isIngraph              INFO     ********************
2023-06-05 23:54:47.679 545:isIngraph              INFO     Best MCC:0.9168
2023-06-05 23:54:47.680 546:isIngraph              INFO     ********************
2023-06-05 23:54:47.682 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_3/checkpoint-best-mcc/model.bin
2023-06-05 23:54:47.898 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 23:54:47.898 651:isIngraph              INFO     Num examples = 30316
2023-06-05 23:54:47.898 652:isIngraph              INFO     Batch size = 32
2023-06-05 23:55:15.703 693:isIngraph              INFO   ***** Test results *****
2023-06-05 23:55:15.704 695:isIngraph              INFO     eval_acc = 0.953
2023-06-05 23:55:15.704 695:isIngraph              INFO     eval_f1 = 0.954
2023-06-05 23:55:15.704 695:isIngraph              INFO     eval_mcc = 0.9068
2023-06-05 23:55:15.704 695:isIngraph              INFO     eval_precision = 0.9339
2023-06-05 23:55:15.705 695:isIngraph              INFO     eval_recall = 0.9749
2023-06-05 23:55:15.705 695:isIngraph              INFO     eval_threshold = 0.5
