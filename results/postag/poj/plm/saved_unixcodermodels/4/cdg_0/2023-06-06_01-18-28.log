2023-06-06 01:18:28.691 917:isIngraph              DEBUG  main message
2023-06-06 01:18:28.692 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-06 01:18:29.438 938:isIngraph              INFO   Load Dataset
2023-06-06 01:18:57.938 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-06 01:18:58.911 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-06 01:19:01.878 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-06 01:19:01.881 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-06 01:19:02.760 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-06 01:19:04.082 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-06 01:19:04.083 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-06 01:19:04.960 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-06 01:19:06.676 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-06 01:19:06.677 306:isInGraph              INFO   *** Example ***
2023-06-06 01:19:06.677 307:isInGraph              INFO   idx: 42984
2023-06-06 01:19:06.677 308:isInGraph              INFO   label: 1
2023-06-06 01:19:06.678 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-06 01:19:06.678 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-06 01:19:06.678 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-06 01:19:06.678 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-06 01:19:06.678 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-06 01:19:06.679 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-06 01:19:06.679 306:isInGraph              INFO   *** Example ***
2023-06-06 01:19:06.679 307:isInGraph              INFO   idx: 40257
2023-06-06 01:19:06.679 308:isInGraph              INFO   label: 0
2023-06-06 01:19:06.679 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-06 01:19:06.679 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-06 01:19:06.679 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-06 01:19:06.680 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-06 01:19:06.680 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-06 01:19:06.680 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-06 01:19:06.680 306:isInGraph              INFO   *** Example ***
2023-06-06 01:19:06.680 307:isInGraph              INFO   idx: 43203
2023-06-06 01:19:06.680 308:isInGraph              INFO   label: 1
2023-06-06 01:19:06.680 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-06 01:19:06.680 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-06 01:19:06.681 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-06 01:19:06.681 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-06 01:19:06.681 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-06 01:19:06.681 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-06 01:19:06.681 306:isInGraph              INFO   *** Example ***
2023-06-06 01:19:06.681 307:isInGraph              INFO   idx: 48598
2023-06-06 01:19:06.681 308:isInGraph              INFO   label: 1
2023-06-06 01:19:06.682 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-06 01:19:06.682 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-06 01:19:06.682 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-06 01:19:06.682 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-06 01:19:06.682 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-06 01:19:06.682 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-06 01:19:06.682 306:isInGraph              INFO   *** Example ***
2023-06-06 01:19:06.683 307:isInGraph              INFO   idx: 49875
2023-06-06 01:19:06.683 308:isInGraph              INFO   label: 0
2023-06-06 01:19:06.683 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-06 01:19:06.683 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-06 01:19:06.683 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-06 01:19:06.683 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-06 01:19:06.683 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-06 01:19:06.684 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-06 01:19:06.684 306:isInGraph              INFO   *** Example ***
2023-06-06 01:19:06.684 307:isInGraph              INFO   idx: 48859
2023-06-06 01:19:06.684 308:isInGraph              INFO   label: 1
2023-06-06 01:19:06.684 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-06 01:19:06.684 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-06 01:19:06.684 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-06 01:19:06.685 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-06 01:19:06.685 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-06 01:19:06.685 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-06 01:19:06.685 306:isInGraph              INFO   *** Example ***
2023-06-06 01:19:06.685 307:isInGraph              INFO   idx: 46604
2023-06-06 01:19:06.685 308:isInGraph              INFO   label: 1
2023-06-06 01:19:06.685 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-06 01:19:06.685 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-06 01:19:06.686 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-06 01:19:06.686 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-06 01:19:06.686 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-06 01:19:06.686 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-06 01:19:06.686 306:isInGraph              INFO   *** Example ***
2023-06-06 01:19:06.686 307:isInGraph              INFO   idx: 47009
2023-06-06 01:19:06.686 308:isInGraph              INFO   label: 1
2023-06-06 01:19:06.687 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-06 01:19:06.687 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-06 01:19:06.687 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-06 01:19:06.687 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-06 01:19:06.687 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-06 01:19:06.687 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-06 01:19:06.687 306:isInGraph              INFO   *** Example ***
2023-06-06 01:19:06.688 307:isInGraph              INFO   idx: 50281
2023-06-06 01:19:06.688 308:isInGraph              INFO   label: 1
2023-06-06 01:19:06.688 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-06 01:19:06.688 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-06 01:19:06.688 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-06 01:19:06.689 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-06 01:19:06.689 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-06 01:19:06.689 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-06 01:19:06.689 978:isIngraph              INFO   Finishing loading Dataset
2023-06-06 01:19:06.713 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-06 01:19:06.713 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=0, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0', posratio=0.5, seed=31, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-06 01:19:08.327 451:isIngraph              INFO   ***** Running training *****
2023-06-06 01:19:08.328 452:isIngraph              INFO     Num examples = 87838
2023-06-06 01:19:08.328 453:isIngraph              INFO     Num Epochs = 1
2023-06-06 01:19:08.328 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-06 01:19:08.328 458:isIngraph              INFO     Total train batch size = 64
2023-06-06 01:19:08.328 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-06 01:19:08.329 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-06 01:19:17.559 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:19:17.559 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:19:17.560 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:19:43.554 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:19:43.555 629:isIngraph              INFO     eval_acc = 0.9038
2023-06-06 01:19:43.555 629:isIngraph              INFO     eval_f1 = 0.9102
2023-06-06 01:19:43.556 629:isIngraph              INFO     eval_mcc = 0.8161
2023-06-06 01:19:43.556 629:isIngraph              INFO     eval_precision = 0.853
2023-06-06 01:19:43.556 629:isIngraph              INFO     eval_recall = 0.9758
2023-06-06 01:19:43.556 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:19:43.559 522:isIngraph              INFO     ********************
2023-06-06 01:19:43.559 523:isIngraph              INFO     Best f1:0.9102
2023-06-06 01:19:43.560 524:isIngraph              INFO     ********************
2023-06-06 01:19:43.565 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:19:43.566 544:isIngraph              INFO     ********************
2023-06-06 01:19:43.566 545:isIngraph              INFO     Best MCC:0.8161
2023-06-06 01:19:43.566 546:isIngraph              INFO     ********************
2023-06-06 01:19:43.568 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:19:51.265 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:19:51.265 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:19:51.266 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:20:17.990 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:20:17.991 629:isIngraph              INFO     eval_acc = 0.9255
2023-06-06 01:20:17.991 629:isIngraph              INFO     eval_f1 = 0.9278
2023-06-06 01:20:17.991 629:isIngraph              INFO     eval_mcc = 0.8528
2023-06-06 01:20:17.991 629:isIngraph              INFO     eval_precision = 0.9001
2023-06-06 01:20:17.991 629:isIngraph              INFO     eval_recall = 0.9573
2023-06-06 01:20:17.991 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:20:17.995 522:isIngraph              INFO     ********************
2023-06-06 01:20:17.995 523:isIngraph              INFO     Best f1:0.9278
2023-06-06 01:20:17.995 524:isIngraph              INFO     ********************
2023-06-06 01:20:17.998 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:20:17.998 544:isIngraph              INFO     ********************
2023-06-06 01:20:17.999 545:isIngraph              INFO     Best MCC:0.8528
2023-06-06 01:20:17.999 546:isIngraph              INFO     ********************
2023-06-06 01:20:18.001 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:20:25.965 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:20:25.965 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:20:25.966 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:20:52.273 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:20:52.274 629:isIngraph              INFO     eval_acc = 0.9419
2023-06-06 01:20:52.274 629:isIngraph              INFO     eval_f1 = 0.9443
2023-06-06 01:20:52.274 629:isIngraph              INFO     eval_mcc = 0.8871
2023-06-06 01:20:52.274 629:isIngraph              INFO     eval_precision = 0.9064
2023-06-06 01:20:52.274 629:isIngraph              INFO     eval_recall = 0.9854
2023-06-06 01:20:52.274 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:20:52.280 522:isIngraph              INFO     ********************
2023-06-06 01:20:52.281 523:isIngraph              INFO     Best f1:0.9443
2023-06-06 01:20:52.281 524:isIngraph              INFO     ********************
2023-06-06 01:20:52.285 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:20:52.285 544:isIngraph              INFO     ********************
2023-06-06 01:20:52.285 545:isIngraph              INFO     Best MCC:0.8871
2023-06-06 01:20:52.285 546:isIngraph              INFO     ********************
2023-06-06 01:20:52.288 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:21:00.185 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:21:00.186 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:21:00.186 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:21:25.936 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:21:25.937 629:isIngraph              INFO     eval_acc = 0.9467
2023-06-06 01:21:25.937 629:isIngraph              INFO     eval_f1 = 0.9484
2023-06-06 01:21:25.937 629:isIngraph              INFO     eval_mcc = 0.8955
2023-06-06 01:21:25.937 629:isIngraph              INFO     eval_precision = 0.9181
2023-06-06 01:21:25.937 629:isIngraph              INFO     eval_recall = 0.9808
2023-06-06 01:21:25.937 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:21:25.941 522:isIngraph              INFO     ********************
2023-06-06 01:21:25.941 523:isIngraph              INFO     Best f1:0.9484
2023-06-06 01:21:25.942 524:isIngraph              INFO     ********************
2023-06-06 01:21:25.945 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:21:25.945 544:isIngraph              INFO     ********************
2023-06-06 01:21:25.945 545:isIngraph              INFO     Best MCC:0.8955
2023-06-06 01:21:25.945 546:isIngraph              INFO     ********************
2023-06-06 01:21:25.947 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:21:33.884 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:21:33.885 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:21:33.885 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:21:59.416 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:21:59.417 629:isIngraph              INFO     eval_acc = 0.9489
2023-06-06 01:21:59.417 629:isIngraph              INFO     eval_f1 = 0.9506
2023-06-06 01:21:59.417 629:isIngraph              INFO     eval_mcc = 0.9
2023-06-06 01:21:59.417 629:isIngraph              INFO     eval_precision = 0.9196
2023-06-06 01:21:59.417 629:isIngraph              INFO     eval_recall = 0.9839
2023-06-06 01:21:59.417 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:21:59.420 522:isIngraph              INFO     ********************
2023-06-06 01:21:59.420 523:isIngraph              INFO     Best f1:0.9506
2023-06-06 01:21:59.421 524:isIngraph              INFO     ********************
2023-06-06 01:21:59.424 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:21:59.424 544:isIngraph              INFO     ********************
2023-06-06 01:21:59.424 545:isIngraph              INFO     Best MCC:0.9
2023-06-06 01:21:59.424 546:isIngraph              INFO     ********************
2023-06-06 01:21:59.426 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:22:07.405 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:22:07.405 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:22:07.406 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:22:33.350 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:22:33.351 629:isIngraph              INFO     eval_acc = 0.9505
2023-06-06 01:22:33.351 629:isIngraph              INFO     eval_f1 = 0.952
2023-06-06 01:22:33.351 629:isIngraph              INFO     eval_mcc = 0.9028
2023-06-06 01:22:33.351 629:isIngraph              INFO     eval_precision = 0.923
2023-06-06 01:22:33.351 629:isIngraph              INFO     eval_recall = 0.9829
2023-06-06 01:22:33.351 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:22:33.355 522:isIngraph              INFO     ********************
2023-06-06 01:22:33.356 523:isIngraph              INFO     Best f1:0.952
2023-06-06 01:22:33.356 524:isIngraph              INFO     ********************
2023-06-06 01:22:33.359 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:22:33.359 544:isIngraph              INFO     ********************
2023-06-06 01:22:33.360 545:isIngraph              INFO     Best MCC:0.9028
2023-06-06 01:22:33.360 546:isIngraph              INFO     ********************
2023-06-06 01:22:33.362 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:22:41.091 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:22:41.092 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:22:41.092 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:23:06.511 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:23:06.512 629:isIngraph              INFO     eval_acc = 0.9502
2023-06-06 01:23:06.512 629:isIngraph              INFO     eval_f1 = 0.9517
2023-06-06 01:23:06.512 629:isIngraph              INFO     eval_mcc = 0.9021
2023-06-06 01:23:06.512 629:isIngraph              INFO     eval_precision = 0.9246
2023-06-06 01:23:06.512 629:isIngraph              INFO     eval_recall = 0.9804
2023-06-06 01:23:06.513 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:23:14.129 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:23:14.129 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:23:14.129 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:23:40.747 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:23:40.748 629:isIngraph              INFO     eval_acc = 0.9497
2023-06-06 01:23:40.748 629:isIngraph              INFO     eval_f1 = 0.9514
2023-06-06 01:23:40.748 629:isIngraph              INFO     eval_mcc = 0.9015
2023-06-06 01:23:40.748 629:isIngraph              INFO     eval_precision = 0.9212
2023-06-06 01:23:40.748 629:isIngraph              INFO     eval_recall = 0.9836
2023-06-06 01:23:40.749 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:23:48.570 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:23:48.570 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:23:48.571 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:24:13.831 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:24:13.831 629:isIngraph              INFO     eval_acc = 0.951
2023-06-06 01:24:13.831 629:isIngraph              INFO     eval_f1 = 0.9526
2023-06-06 01:24:13.832 629:isIngraph              INFO     eval_mcc = 0.904
2023-06-06 01:24:13.832 629:isIngraph              INFO     eval_precision = 0.9222
2023-06-06 01:24:13.832 629:isIngraph              INFO     eval_recall = 0.985
2023-06-06 01:24:13.832 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:24:13.835 522:isIngraph              INFO     ********************
2023-06-06 01:24:13.836 523:isIngraph              INFO     Best f1:0.9526
2023-06-06 01:24:13.836 524:isIngraph              INFO     ********************
2023-06-06 01:24:13.840 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-f1/model.bin
2023-06-06 01:24:13.840 544:isIngraph              INFO     ********************
2023-06-06 01:24:13.840 545:isIngraph              INFO     Best MCC:0.904
2023-06-06 01:24:13.840 546:isIngraph              INFO     ********************
2023-06-06 01:24:13.842 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_0/checkpoint-best-mcc/model.bin
2023-06-06 01:24:21.394 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-06 01:24:21.394 581:isIngraph              INFO     Num examples = 29244
2023-06-06 01:24:21.394 582:isIngraph              INFO     Batch size = 32
2023-06-06 01:24:47.534 627:isIngraph              INFO   ***** Eval results *****
2023-06-06 01:24:47.534 629:isIngraph              INFO     eval_acc = 0.9508
2023-06-06 01:24:47.534 629:isIngraph              INFO     eval_f1 = 0.9524
2023-06-06 01:24:47.535 629:isIngraph              INFO     eval_mcc = 0.9037
2023-06-06 01:24:47.535 629:isIngraph              INFO     eval_precision = 0.9215
2023-06-06 01:24:47.535 629:isIngraph              INFO     eval_recall = 0.9855
2023-06-06 01:24:47.535 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-06 01:24:47.714 650:isIngraph              INFO   ***** Running Test *****
2023-06-06 01:24:47.714 651:isIngraph              INFO     Num examples = 30316
2023-06-06 01:24:47.714 652:isIngraph              INFO     Batch size = 32
2023-06-06 01:25:13.097 693:isIngraph              INFO   ***** Test results *****
2023-06-06 01:25:13.097 695:isIngraph              INFO     eval_acc = 0.9466
2023-06-06 01:25:13.097 695:isIngraph              INFO     eval_f1 = 0.9483
2023-06-06 01:25:13.098 695:isIngraph              INFO     eval_mcc = 0.8953
2023-06-06 01:25:13.098 695:isIngraph              INFO     eval_precision = 0.9186
2023-06-06 01:25:13.098 695:isIngraph              INFO     eval_recall = 0.9801
2023-06-06 01:25:13.098 695:isIngraph              INFO     eval_threshold = 0.5
