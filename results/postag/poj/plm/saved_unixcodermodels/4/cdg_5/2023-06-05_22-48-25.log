2023-06-05 22:48:25.856 917:isIngraph              DEBUG  main message
2023-06-05 22:48:25.856 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 22:48:26.583 938:isIngraph              INFO   Load Dataset
2023-06-05 22:48:54.470 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 22:48:55.384 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 22:48:58.314 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 22:48:58.316 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 22:48:59.200 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 22:49:00.558 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 22:49:00.559 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 22:49:01.437 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 22:49:03.204 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 22:49:03.205 306:isInGraph              INFO   *** Example ***
2023-06-05 22:49:03.205 307:isInGraph              INFO   idx: 42984
2023-06-05 22:49:03.205 308:isInGraph              INFO   label: 1
2023-06-05 22:49:03.206 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 22:49:03.206 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 22:49:03.206 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 22:49:03.206 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 22:49:03.206 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 22:49:03.206 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 22:49:03.207 306:isInGraph              INFO   *** Example ***
2023-06-05 22:49:03.207 307:isInGraph              INFO   idx: 40257
2023-06-05 22:49:03.207 308:isInGraph              INFO   label: 0
2023-06-05 22:49:03.207 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 22:49:03.207 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 22:49:03.207 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 22:49:03.207 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 22:49:03.208 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 22:49:03.208 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 22:49:03.208 306:isInGraph              INFO   *** Example ***
2023-06-05 22:49:03.208 307:isInGraph              INFO   idx: 43203
2023-06-05 22:49:03.208 308:isInGraph              INFO   label: 1
2023-06-05 22:49:03.208 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 22:49:03.208 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 22:49:03.208 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 22:49:03.209 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 22:49:03.209 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 22:49:03.209 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 22:49:03.209 306:isInGraph              INFO   *** Example ***
2023-06-05 22:49:03.209 307:isInGraph              INFO   idx: 48598
2023-06-05 22:49:03.209 308:isInGraph              INFO   label: 1
2023-06-05 22:49:03.210 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 22:49:03.210 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 22:49:03.210 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 22:49:03.210 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 22:49:03.210 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 22:49:03.210 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 22:49:03.210 306:isInGraph              INFO   *** Example ***
2023-06-05 22:49:03.210 307:isInGraph              INFO   idx: 49875
2023-06-05 22:49:03.211 308:isInGraph              INFO   label: 0
2023-06-05 22:49:03.211 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 22:49:03.211 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 22:49:03.211 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 22:49:03.211 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 22:49:03.211 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 22:49:03.211 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 22:49:03.211 306:isInGraph              INFO   *** Example ***
2023-06-05 22:49:03.212 307:isInGraph              INFO   idx: 48859
2023-06-05 22:49:03.212 308:isInGraph              INFO   label: 1
2023-06-05 22:49:03.212 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 22:49:03.212 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 22:49:03.212 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 22:49:03.212 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 22:49:03.212 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 22:49:03.213 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 22:49:03.213 306:isInGraph              INFO   *** Example ***
2023-06-05 22:49:03.213 307:isInGraph              INFO   idx: 46604
2023-06-05 22:49:03.213 308:isInGraph              INFO   label: 1
2023-06-05 22:49:03.213 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 22:49:03.213 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 22:49:03.213 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 22:49:03.213 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 22:49:03.214 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 22:49:03.214 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 22:49:03.214 306:isInGraph              INFO   *** Example ***
2023-06-05 22:49:03.214 307:isInGraph              INFO   idx: 47009
2023-06-05 22:49:03.214 308:isInGraph              INFO   label: 1
2023-06-05 22:49:03.214 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 22:49:03.214 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 22:49:03.215 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 22:49:03.215 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 22:49:03.215 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 22:49:03.215 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 22:49:03.215 306:isInGraph              INFO   *** Example ***
2023-06-05 22:49:03.215 307:isInGraph              INFO   idx: 50281
2023-06-05 22:49:03.215 308:isInGraph              INFO   label: 1
2023-06-05 22:49:03.216 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 22:49:03.216 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 22:49:03.216 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 22:49:03.216 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 22:49:03.216 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 22:49:03.217 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 22:49:03.217 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 22:49:03.240 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 22:49:03.240 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=5, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5', posratio=0.5, seed=31, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 22:49:04.770 451:isIngraph              INFO   ***** Running training *****
2023-06-05 22:49:04.771 452:isIngraph              INFO     Num examples = 87838
2023-06-05 22:49:04.771 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 22:49:04.771 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 22:49:04.771 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 22:49:04.771 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 22:49:04.771 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 22:49:14.480 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 22:49:14.481 581:isIngraph              INFO     Num examples = 29244
2023-06-05 22:49:14.481 582:isIngraph              INFO     Batch size = 32
2023-06-05 22:49:42.121 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 22:49:42.122 629:isIngraph              INFO     eval_acc = 0.9204
2023-06-05 22:49:42.122 629:isIngraph              INFO     eval_f1 = 0.9239
2023-06-05 22:49:42.122 629:isIngraph              INFO     eval_mcc = 0.8444
2023-06-05 22:49:42.122 629:isIngraph              INFO     eval_precision = 0.8843
2023-06-05 22:49:42.122 629:isIngraph              INFO     eval_recall = 0.9672
2023-06-05 22:49:42.122 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 22:49:42.126 522:isIngraph              INFO     ********************
2023-06-05 22:49:42.126 523:isIngraph              INFO     Best f1:0.9239
2023-06-05 22:49:42.127 524:isIngraph              INFO     ********************
2023-06-05 22:49:42.132 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 22:49:42.133 544:isIngraph              INFO     ********************
2023-06-05 22:49:42.133 545:isIngraph              INFO     Best MCC:0.8444
2023-06-05 22:49:42.133 546:isIngraph              INFO     ********************
2023-06-05 22:49:42.135 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 22:49:50.357 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 22:49:50.357 581:isIngraph              INFO     Num examples = 29244
2023-06-05 22:49:50.357 582:isIngraph              INFO     Batch size = 32
2023-06-05 22:50:17.292 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 22:50:17.292 629:isIngraph              INFO     eval_acc = 0.9442
2023-06-05 22:50:17.293 629:isIngraph              INFO     eval_f1 = 0.9457
2023-06-05 22:50:17.293 629:isIngraph              INFO     eval_mcc = 0.8898
2023-06-05 22:50:17.293 629:isIngraph              INFO     eval_precision = 0.9197
2023-06-05 22:50:17.293 629:isIngraph              INFO     eval_recall = 0.9733
2023-06-05 22:50:17.293 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 22:50:17.296 522:isIngraph              INFO     ********************
2023-06-05 22:50:17.297 523:isIngraph              INFO     Best f1:0.9457
2023-06-05 22:50:17.297 524:isIngraph              INFO     ********************
2023-06-05 22:50:17.300 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 22:50:17.300 544:isIngraph              INFO     ********************
2023-06-05 22:50:17.300 545:isIngraph              INFO     Best MCC:0.8898
2023-06-05 22:50:17.301 546:isIngraph              INFO     ********************
2023-06-05 22:50:17.303 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 22:50:25.514 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 22:50:25.514 581:isIngraph              INFO     Num examples = 29244
2023-06-05 22:50:25.515 582:isIngraph              INFO     Batch size = 32
2023-06-05 22:50:52.162 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 22:50:52.162 629:isIngraph              INFO     eval_acc = 0.9531
2023-06-05 22:50:52.162 629:isIngraph              INFO     eval_f1 = 0.9545
2023-06-05 22:50:52.162 629:isIngraph              INFO     eval_mcc = 0.908
2023-06-05 22:50:52.163 629:isIngraph              INFO     eval_precision = 0.926
2023-06-05 22:50:52.163 629:isIngraph              INFO     eval_recall = 0.9848
2023-06-05 22:50:52.163 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 22:50:52.166 522:isIngraph              INFO     ********************
2023-06-05 22:50:52.167 523:isIngraph              INFO     Best f1:0.9545
2023-06-05 22:50:52.167 524:isIngraph              INFO     ********************
2023-06-05 22:50:52.171 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 22:50:52.171 544:isIngraph              INFO     ********************
2023-06-05 22:50:52.171 545:isIngraph              INFO     Best MCC:0.908
2023-06-05 22:50:52.171 546:isIngraph              INFO     ********************
2023-06-05 22:50:52.174 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 22:51:00.322 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 22:51:00.322 581:isIngraph              INFO     Num examples = 29244
2023-06-05 22:51:00.322 582:isIngraph              INFO     Batch size = 32
2023-06-05 22:51:26.579 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 22:51:26.580 629:isIngraph              INFO     eval_acc = 0.9567
2023-06-05 22:51:26.580 629:isIngraph              INFO     eval_f1 = 0.9577
2023-06-05 22:51:26.580 629:isIngraph              INFO     eval_mcc = 0.9144
2023-06-05 22:51:26.580 629:isIngraph              INFO     eval_precision = 0.9354
2023-06-05 22:51:26.580 629:isIngraph              INFO     eval_recall = 0.9811
2023-06-05 22:51:26.580 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 22:51:26.584 522:isIngraph              INFO     ********************
2023-06-05 22:51:26.584 523:isIngraph              INFO     Best f1:0.9577
2023-06-05 22:51:26.584 524:isIngraph              INFO     ********************
2023-06-05 22:51:26.588 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 22:51:26.588 544:isIngraph              INFO     ********************
2023-06-05 22:51:26.588 545:isIngraph              INFO     Best MCC:0.9144
2023-06-05 22:51:26.588 546:isIngraph              INFO     ********************
2023-06-05 22:51:26.590 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 22:51:34.354 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 22:51:34.354 581:isIngraph              INFO     Num examples = 29244
2023-06-05 22:51:34.354 582:isIngraph              INFO     Batch size = 32
2023-06-05 22:52:00.416 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 22:52:00.416 629:isIngraph              INFO     eval_acc = 0.9583
2023-06-05 22:52:00.416 629:isIngraph              INFO     eval_f1 = 0.9591
2023-06-05 22:52:00.416 629:isIngraph              INFO     eval_mcc = 0.9173
2023-06-05 22:52:00.417 629:isIngraph              INFO     eval_precision = 0.9405
2023-06-05 22:52:00.417 629:isIngraph              INFO     eval_recall = 0.9784
2023-06-05 22:52:00.417 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 22:52:00.421 522:isIngraph              INFO     ********************
2023-06-05 22:52:00.421 523:isIngraph              INFO     Best f1:0.9591
2023-06-05 22:52:00.421 524:isIngraph              INFO     ********************
2023-06-05 22:52:00.424 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 22:52:00.424 544:isIngraph              INFO     ********************
2023-06-05 22:52:00.425 545:isIngraph              INFO     Best MCC:0.9173
2023-06-05 22:52:00.425 546:isIngraph              INFO     ********************
2023-06-05 22:52:00.426 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 22:52:08.641 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 22:52:08.641 581:isIngraph              INFO     Num examples = 29244
2023-06-05 22:52:08.642 582:isIngraph              INFO     Batch size = 32
2023-06-05 22:52:35.934 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 22:52:35.935 629:isIngraph              INFO     eval_acc = 0.9601
2023-06-05 22:52:35.935 629:isIngraph              INFO     eval_f1 = 0.9609
2023-06-05 22:52:35.935 629:isIngraph              INFO     eval_mcc = 0.9209
2023-06-05 22:52:35.935 629:isIngraph              INFO     eval_precision = 0.9423
2023-06-05 22:52:35.935 629:isIngraph              INFO     eval_recall = 0.9802
2023-06-05 22:52:35.936 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 22:52:35.939 522:isIngraph              INFO     ********************
2023-06-05 22:52:35.940 523:isIngraph              INFO     Best f1:0.9609
2023-06-05 22:52:35.940 524:isIngraph              INFO     ********************
2023-06-05 22:52:35.943 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 22:52:35.943 544:isIngraph              INFO     ********************
2023-06-05 22:52:35.943 545:isIngraph              INFO     Best MCC:0.9209
2023-06-05 22:52:35.943 546:isIngraph              INFO     ********************
2023-06-05 22:52:35.945 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 22:52:44.063 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 22:52:44.064 581:isIngraph              INFO     Num examples = 29244
2023-06-05 22:52:44.064 582:isIngraph              INFO     Batch size = 32
2023-06-05 22:53:10.870 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 22:53:10.870 629:isIngraph              INFO     eval_acc = 0.9603
2023-06-05 22:53:10.870 629:isIngraph              INFO     eval_f1 = 0.9613
2023-06-05 22:53:10.871 629:isIngraph              INFO     eval_mcc = 0.9219
2023-06-05 22:53:10.871 629:isIngraph              INFO     eval_precision = 0.9373
2023-06-05 22:53:10.871 629:isIngraph              INFO     eval_recall = 0.9865
2023-06-05 22:53:10.871 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 22:53:10.875 522:isIngraph              INFO     ********************
2023-06-05 22:53:10.875 523:isIngraph              INFO     Best f1:0.9613
2023-06-05 22:53:10.875 524:isIngraph              INFO     ********************
2023-06-05 22:53:10.879 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 22:53:10.879 544:isIngraph              INFO     ********************
2023-06-05 22:53:10.879 545:isIngraph              INFO     Best MCC:0.9219
2023-06-05 22:53:10.879 546:isIngraph              INFO     ********************
2023-06-05 22:53:10.881 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 22:53:18.924 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 22:53:18.924 581:isIngraph              INFO     Num examples = 29244
2023-06-05 22:53:18.924 582:isIngraph              INFO     Batch size = 32
2023-06-05 22:53:46.030 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 22:53:46.031 629:isIngraph              INFO     eval_acc = 0.96
2023-06-05 22:53:46.031 629:isIngraph              INFO     eval_f1 = 0.9611
2023-06-05 22:53:46.031 629:isIngraph              INFO     eval_mcc = 0.9214
2023-06-05 22:53:46.031 629:isIngraph              INFO     eval_precision = 0.9363
2023-06-05 22:53:46.031 629:isIngraph              INFO     eval_recall = 0.9872
2023-06-05 22:53:46.031 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 22:53:54.040 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 22:53:54.041 581:isIngraph              INFO     Num examples = 29244
2023-06-05 22:53:54.041 582:isIngraph              INFO     Batch size = 32
2023-06-05 22:54:21.338 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 22:54:21.339 629:isIngraph              INFO     eval_acc = 0.961
2023-06-05 22:54:21.339 629:isIngraph              INFO     eval_f1 = 0.962
2023-06-05 22:54:21.339 629:isIngraph              INFO     eval_mcc = 0.9232
2023-06-05 22:54:21.340 629:isIngraph              INFO     eval_precision = 0.9379
2023-06-05 22:54:21.340 629:isIngraph              INFO     eval_recall = 0.9873
2023-06-05 22:54:21.340 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 22:54:21.346 522:isIngraph              INFO     ********************
2023-06-05 22:54:21.346 523:isIngraph              INFO     Best f1:0.962
2023-06-05 22:54:21.347 524:isIngraph              INFO     ********************
2023-06-05 22:54:21.351 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 22:54:21.351 544:isIngraph              INFO     ********************
2023-06-05 22:54:21.352 545:isIngraph              INFO     Best MCC:0.9232
2023-06-05 22:54:21.352 546:isIngraph              INFO     ********************
2023-06-05 22:54:21.354 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 22:54:29.389 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 22:54:29.390 581:isIngraph              INFO     Num examples = 29244
2023-06-05 22:54:29.390 582:isIngraph              INFO     Batch size = 32
2023-06-05 22:54:56.445 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 22:54:56.446 629:isIngraph              INFO     eval_acc = 0.9614
2023-06-05 22:54:56.446 629:isIngraph              INFO     eval_f1 = 0.9623
2023-06-05 22:54:56.446 629:isIngraph              INFO     eval_mcc = 0.9239
2023-06-05 22:54:56.446 629:isIngraph              INFO     eval_precision = 0.9388
2023-06-05 22:54:56.446 629:isIngraph              INFO     eval_recall = 0.987
2023-06-05 22:54:56.447 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 22:54:56.450 522:isIngraph              INFO     ********************
2023-06-05 22:54:56.451 523:isIngraph              INFO     Best f1:0.9623
2023-06-05 22:54:56.451 524:isIngraph              INFO     ********************
2023-06-05 22:54:56.453 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 22:54:56.454 544:isIngraph              INFO     ********************
2023-06-05 22:54:56.454 545:isIngraph              INFO     Best MCC:0.9239
2023-06-05 22:54:56.454 546:isIngraph              INFO     ********************
2023-06-05 22:54:56.455 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/4/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 22:54:56.628 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 22:54:56.628 651:isIngraph              INFO     Num examples = 30316
2023-06-05 22:54:56.628 652:isIngraph              INFO     Batch size = 32
2023-06-05 22:55:25.471 693:isIngraph              INFO   ***** Test results *****
2023-06-05 22:55:25.472 695:isIngraph              INFO     eval_acc = 0.954
2023-06-05 22:55:25.472 695:isIngraph              INFO     eval_f1 = 0.9548
2023-06-05 22:55:25.472 695:isIngraph              INFO     eval_mcc = 0.9086
2023-06-05 22:55:25.472 695:isIngraph              INFO     eval_precision = 0.9391
2023-06-05 22:55:25.472 695:isIngraph              INFO     eval_recall = 0.971
2023-06-05 22:55:25.472 695:isIngraph              INFO     eval_threshold = 0.5
