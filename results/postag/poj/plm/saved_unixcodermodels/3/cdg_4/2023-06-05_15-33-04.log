2023-06-05 15:33:04.947 917:isIngraph              DEBUG  main message
2023-06-05 15:33:04.947 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 15:33:05.695 938:isIngraph              INFO   Load Dataset
2023-06-05 15:33:42.316 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 15:33:43.335 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 15:33:46.944 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 15:33:46.947 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 15:33:47.832 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 15:33:49.237 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 15:33:49.238 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 15:33:50.152 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 15:33:52.013 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 15:33:52.014 306:isInGraph              INFO   *** Example ***
2023-06-05 15:33:52.014 307:isInGraph              INFO   idx: 42984
2023-06-05 15:33:52.014 308:isInGraph              INFO   label: 1
2023-06-05 15:33:52.015 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 15:33:52.015 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 15:33:52.015 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 15:33:52.015 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 15:33:52.015 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 15:33:52.015 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 15:33:52.015 306:isInGraph              INFO   *** Example ***
2023-06-05 15:33:52.016 307:isInGraph              INFO   idx: 40257
2023-06-05 15:33:52.016 308:isInGraph              INFO   label: 0
2023-06-05 15:33:52.016 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 15:33:52.016 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 15:33:52.016 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 15:33:52.016 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 15:33:52.016 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 15:33:52.017 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 15:33:52.017 306:isInGraph              INFO   *** Example ***
2023-06-05 15:33:52.017 307:isInGraph              INFO   idx: 43203
2023-06-05 15:33:52.017 308:isInGraph              INFO   label: 1
2023-06-05 15:33:52.017 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 15:33:52.017 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 15:33:52.017 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 15:33:52.018 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 15:33:52.018 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 15:33:52.018 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 15:33:52.018 306:isInGraph              INFO   *** Example ***
2023-06-05 15:33:52.018 307:isInGraph              INFO   idx: 48598
2023-06-05 15:33:52.018 308:isInGraph              INFO   label: 1
2023-06-05 15:33:52.018 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 15:33:52.019 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 15:33:52.019 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 15:33:52.019 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 15:33:52.019 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 15:33:52.019 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 15:33:52.019 306:isInGraph              INFO   *** Example ***
2023-06-05 15:33:52.019 307:isInGraph              INFO   idx: 49875
2023-06-05 15:33:52.020 308:isInGraph              INFO   label: 0
2023-06-05 15:33:52.020 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 15:33:52.020 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 15:33:52.020 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 15:33:52.020 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 15:33:52.020 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 15:33:52.020 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 15:33:52.020 306:isInGraph              INFO   *** Example ***
2023-06-05 15:33:52.021 307:isInGraph              INFO   idx: 48859
2023-06-05 15:33:52.021 308:isInGraph              INFO   label: 1
2023-06-05 15:33:52.021 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 15:33:52.025 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 15:33:52.026 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 15:33:52.026 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 15:33:52.026 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 15:33:52.026 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 15:33:52.027 306:isInGraph              INFO   *** Example ***
2023-06-05 15:33:52.027 307:isInGraph              INFO   idx: 46604
2023-06-05 15:33:52.027 308:isInGraph              INFO   label: 1
2023-06-05 15:33:52.027 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 15:33:52.028 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 15:33:52.028 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 15:33:52.028 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 15:33:52.029 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 15:33:52.029 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 15:33:52.029 306:isInGraph              INFO   *** Example ***
2023-06-05 15:33:52.029 307:isInGraph              INFO   idx: 47009
2023-06-05 15:33:52.029 308:isInGraph              INFO   label: 1
2023-06-05 15:33:52.030 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 15:33:52.030 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 15:33:52.030 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 15:33:52.030 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 15:33:52.031 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 15:33:52.031 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 15:33:52.031 306:isInGraph              INFO   *** Example ***
2023-06-05 15:33:52.031 307:isInGraph              INFO   idx: 50281
2023-06-05 15:33:52.031 308:isInGraph              INFO   label: 1
2023-06-05 15:33:52.032 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 15:33:52.032 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 15:33:52.032 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 15:33:52.033 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 15:33:52.033 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 15:33:52.033 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 15:33:52.033 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 15:33:52.055 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 15:33:52.055 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4', posratio=0.5, seed=378, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 15:33:53.779 451:isIngraph              INFO   ***** Running training *****
2023-06-05 15:33:53.779 452:isIngraph              INFO     Num examples = 87838
2023-06-05 15:33:53.779 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 15:33:53.779 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 15:33:53.780 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 15:33:53.780 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 15:33:53.780 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 15:34:04.217 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:34:04.218 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:34:04.218 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:34:38.110 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:34:38.111 629:isIngraph              INFO     eval_acc = 0.9227
2023-06-05 15:34:38.111 629:isIngraph              INFO     eval_f1 = 0.9252
2023-06-05 15:34:38.111 629:isIngraph              INFO     eval_mcc = 0.8474
2023-06-05 15:34:38.111 629:isIngraph              INFO     eval_precision = 0.896
2023-06-05 15:34:38.112 629:isIngraph              INFO     eval_recall = 0.9564
2023-06-05 15:34:38.112 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:34:38.116 522:isIngraph              INFO     ********************
2023-06-05 15:34:38.116 523:isIngraph              INFO     Best f1:0.9252
2023-06-05 15:34:38.117 524:isIngraph              INFO     ********************
2023-06-05 15:34:38.122 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-f1/model.bin
2023-06-05 15:34:38.123 544:isIngraph              INFO     ********************
2023-06-05 15:34:38.123 545:isIngraph              INFO     Best MCC:0.8474
2023-06-05 15:34:38.123 546:isIngraph              INFO     ********************
2023-06-05 15:34:38.125 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-mcc/model.bin
2023-06-05 15:34:48.186 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:34:48.187 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:34:48.187 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:35:23.858 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:35:23.859 629:isIngraph              INFO     eval_acc = 0.9453
2023-06-05 15:35:23.859 629:isIngraph              INFO     eval_f1 = 0.946
2023-06-05 15:35:23.859 629:isIngraph              INFO     eval_mcc = 0.8909
2023-06-05 15:35:23.859 629:isIngraph              INFO     eval_precision = 0.9335
2023-06-05 15:35:23.859 629:isIngraph              INFO     eval_recall = 0.9588
2023-06-05 15:35:23.860 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:35:23.866 522:isIngraph              INFO     ********************
2023-06-05 15:35:23.866 523:isIngraph              INFO     Best f1:0.946
2023-06-05 15:35:23.867 524:isIngraph              INFO     ********************
2023-06-05 15:35:23.870 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-f1/model.bin
2023-06-05 15:35:23.870 544:isIngraph              INFO     ********************
2023-06-05 15:35:23.870 545:isIngraph              INFO     Best MCC:0.8909
2023-06-05 15:35:23.870 546:isIngraph              INFO     ********************
2023-06-05 15:35:23.872 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-mcc/model.bin
2023-06-05 15:35:36.647 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:35:36.647 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:35:36.647 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:36:14.195 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:36:14.196 629:isIngraph              INFO     eval_acc = 0.954
2023-06-05 15:36:14.196 629:isIngraph              INFO     eval_f1 = 0.9554
2023-06-05 15:36:14.196 629:isIngraph              INFO     eval_mcc = 0.9099
2023-06-05 15:36:14.196 629:isIngraph              INFO     eval_precision = 0.9273
2023-06-05 15:36:14.196 629:isIngraph              INFO     eval_recall = 0.9854
2023-06-05 15:36:14.196 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:36:14.200 522:isIngraph              INFO     ********************
2023-06-05 15:36:14.201 523:isIngraph              INFO     Best f1:0.9554
2023-06-05 15:36:14.201 524:isIngraph              INFO     ********************
2023-06-05 15:36:14.204 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-f1/model.bin
2023-06-05 15:36:14.205 544:isIngraph              INFO     ********************
2023-06-05 15:36:14.205 545:isIngraph              INFO     Best MCC:0.9099
2023-06-05 15:36:14.205 546:isIngraph              INFO     ********************
2023-06-05 15:36:14.207 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-mcc/model.bin
2023-06-05 15:36:24.550 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:36:24.550 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:36:24.550 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:36:59.716 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:36:59.716 629:isIngraph              INFO     eval_acc = 0.9568
2023-06-05 15:36:59.717 629:isIngraph              INFO     eval_f1 = 0.9577
2023-06-05 15:36:59.717 629:isIngraph              INFO     eval_mcc = 0.9145
2023-06-05 15:36:59.717 629:isIngraph              INFO     eval_precision = 0.9374
2023-06-05 15:36:59.717 629:isIngraph              INFO     eval_recall = 0.9789
2023-06-05 15:36:59.717 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:36:59.721 522:isIngraph              INFO     ********************
2023-06-05 15:36:59.721 523:isIngraph              INFO     Best f1:0.9577
2023-06-05 15:36:59.721 524:isIngraph              INFO     ********************
2023-06-05 15:36:59.724 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-f1/model.bin
2023-06-05 15:36:59.725 544:isIngraph              INFO     ********************
2023-06-05 15:36:59.725 545:isIngraph              INFO     Best MCC:0.9145
2023-06-05 15:36:59.725 546:isIngraph              INFO     ********************
2023-06-05 15:36:59.726 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-mcc/model.bin
2023-06-05 15:37:10.748 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:37:10.748 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:37:10.749 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:37:49.191 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:37:49.192 629:isIngraph              INFO     eval_acc = 0.9579
2023-06-05 15:37:49.192 629:isIngraph              INFO     eval_f1 = 0.9591
2023-06-05 15:37:49.192 629:isIngraph              INFO     eval_mcc = 0.9175
2023-06-05 15:37:49.192 629:isIngraph              INFO     eval_precision = 0.9317
2023-06-05 15:37:49.192 629:isIngraph              INFO     eval_recall = 0.9882
2023-06-05 15:37:49.192 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:37:49.196 522:isIngraph              INFO     ********************
2023-06-05 15:37:49.197 523:isIngraph              INFO     Best f1:0.9591
2023-06-05 15:37:49.197 524:isIngraph              INFO     ********************
2023-06-05 15:37:49.221 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-f1/model.bin
2023-06-05 15:37:49.221 544:isIngraph              INFO     ********************
2023-06-05 15:37:49.222 545:isIngraph              INFO     Best MCC:0.9175
2023-06-05 15:37:49.222 546:isIngraph              INFO     ********************
2023-06-05 15:37:49.226 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-mcc/model.bin
2023-06-05 15:38:00.365 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:38:00.366 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:38:00.366 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:38:39.667 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:38:39.667 629:isIngraph              INFO     eval_acc = 0.9585
2023-06-05 15:38:39.668 629:isIngraph              INFO     eval_f1 = 0.9598
2023-06-05 15:38:39.668 629:isIngraph              INFO     eval_mcc = 0.9189
2023-06-05 15:38:39.668 629:isIngraph              INFO     eval_precision = 0.9311
2023-06-05 15:38:39.668 629:isIngraph              INFO     eval_recall = 0.9904
2023-06-05 15:38:39.668 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:38:39.672 522:isIngraph              INFO     ********************
2023-06-05 15:38:39.672 523:isIngraph              INFO     Best f1:0.9598
2023-06-05 15:38:39.672 524:isIngraph              INFO     ********************
2023-06-05 15:38:39.703 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-f1/model.bin
2023-06-05 15:38:39.703 544:isIngraph              INFO     ********************
2023-06-05 15:38:39.703 545:isIngraph              INFO     Best MCC:0.9189
2023-06-05 15:38:39.703 546:isIngraph              INFO     ********************
2023-06-05 15:38:39.720 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-mcc/model.bin
2023-06-05 15:38:50.442 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:38:50.443 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:38:50.443 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:39:27.560 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:39:27.560 629:isIngraph              INFO     eval_acc = 0.9597
2023-06-05 15:39:27.561 629:isIngraph              INFO     eval_f1 = 0.9607
2023-06-05 15:39:27.561 629:isIngraph              INFO     eval_mcc = 0.9206
2023-06-05 15:39:27.561 629:isIngraph              INFO     eval_precision = 0.9374
2023-06-05 15:39:27.561 629:isIngraph              INFO     eval_recall = 0.9851
2023-06-05 15:39:27.561 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:39:27.565 522:isIngraph              INFO     ********************
2023-06-05 15:39:27.565 523:isIngraph              INFO     Best f1:0.9607
2023-06-05 15:39:27.565 524:isIngraph              INFO     ********************
2023-06-05 15:39:27.569 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-f1/model.bin
2023-06-05 15:39:27.569 544:isIngraph              INFO     ********************
2023-06-05 15:39:27.569 545:isIngraph              INFO     Best MCC:0.9206
2023-06-05 15:39:27.569 546:isIngraph              INFO     ********************
2023-06-05 15:39:27.571 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-mcc/model.bin
2023-06-05 15:39:39.476 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:39:39.476 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:39:39.476 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:40:16.438 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:40:16.439 629:isIngraph              INFO     eval_acc = 0.9605
2023-06-05 15:40:16.439 629:isIngraph              INFO     eval_f1 = 0.9614
2023-06-05 15:40:16.439 629:isIngraph              INFO     eval_mcc = 0.922
2023-06-05 15:40:16.439 629:isIngraph              INFO     eval_precision = 0.9397
2023-06-05 15:40:16.439 629:isIngraph              INFO     eval_recall = 0.9841
2023-06-05 15:40:16.440 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:40:16.443 522:isIngraph              INFO     ********************
2023-06-05 15:40:16.443 523:isIngraph              INFO     Best f1:0.9614
2023-06-05 15:40:16.443 524:isIngraph              INFO     ********************
2023-06-05 15:40:16.472 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-f1/model.bin
2023-06-05 15:40:16.472 544:isIngraph              INFO     ********************
2023-06-05 15:40:16.472 545:isIngraph              INFO     Best MCC:0.922
2023-06-05 15:40:16.473 546:isIngraph              INFO     ********************
2023-06-05 15:40:16.489 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_4/checkpoint-best-mcc/model.bin
2023-06-05 15:40:26.906 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:40:26.906 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:40:26.906 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:41:03.409 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:41:03.409 629:isIngraph              INFO     eval_acc = 0.9598
2023-06-05 15:41:03.409 629:isIngraph              INFO     eval_f1 = 0.9608
2023-06-05 15:41:03.410 629:isIngraph              INFO     eval_mcc = 0.9207
2023-06-05 15:41:03.410 629:isIngraph              INFO     eval_precision = 0.9385
2023-06-05 15:41:03.410 629:isIngraph              INFO     eval_recall = 0.9841
2023-06-05 15:41:03.410 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:41:13.756 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 15:41:13.757 581:isIngraph              INFO     Num examples = 29244
2023-06-05 15:41:13.757 582:isIngraph              INFO     Batch size = 32
2023-06-05 15:41:54.143 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 15:41:54.144 629:isIngraph              INFO     eval_acc = 0.9603
2023-06-05 15:41:54.144 629:isIngraph              INFO     eval_f1 = 0.9613
2023-06-05 15:41:54.144 629:isIngraph              INFO     eval_mcc = 0.9217
2023-06-05 15:41:54.144 629:isIngraph              INFO     eval_precision = 0.9391
2023-06-05 15:41:54.144 629:isIngraph              INFO     eval_recall = 0.9845
2023-06-05 15:41:54.144 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 15:41:54.414 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 15:41:54.414 651:isIngraph              INFO     Num examples = 30316
2023-06-05 15:41:54.414 652:isIngraph              INFO     Batch size = 32
2023-06-05 15:42:35.355 693:isIngraph              INFO   ***** Test results *****
2023-06-05 15:42:35.356 695:isIngraph              INFO     eval_acc = 0.9519
2023-06-05 15:42:35.356 695:isIngraph              INFO     eval_f1 = 0.9526
2023-06-05 15:42:35.356 695:isIngraph              INFO     eval_mcc = 0.9042
2023-06-05 15:42:35.356 695:isIngraph              INFO     eval_precision = 0.939
2023-06-05 15:42:35.356 695:isIngraph              INFO     eval_recall = 0.9666
2023-06-05 15:42:35.356 695:isIngraph              INFO     eval_threshold = 0.5
