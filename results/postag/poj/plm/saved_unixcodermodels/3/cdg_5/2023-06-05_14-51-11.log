2023-06-05 14:51:11.037 917:isIngraph              DEBUG  main message
2023-06-05 14:51:11.038 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-05 14:51:11.772 938:isIngraph              INFO   Load Dataset
2023-06-05 14:51:43.812 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 14:51:45.045 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_cdg_cleaned.pt
2023-06-05 14:51:49.127 301:isInGraph              INFO   Labels Counter({0: 43929, 1: 43909})
2023-06-05 14:51:49.132 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 14:51:50.184 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_cdg_cleaned.pt
2023-06-05 14:51:51.830 301:isInGraph              INFO   Labels Counter({0: 14626, 1: 14618})
2023-06-05 14:51:51.831 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-05 14:51:52.751 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_cdg_cleaned.pt
2023-06-05 14:51:54.682 301:isInGraph              INFO   Labels Counter({0: 15161, 1: 15155})
2023-06-05 14:51:54.683 306:isInGraph              INFO   *** Example ***
2023-06-05 14:51:54.683 307:isInGraph              INFO   idx: 42984
2023-06-05 14:51:54.684 308:isInGraph              INFO   label: 1
2023-06-05 14:51:54.684 309:isInGraph              INFO   input_tokens_1: ['3', '_*', '_j']
2023-06-05 14:51:54.684 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 14:51:54.684 324:isInGraph              INFO   input_tokens_reverse_1: ĠĠĠĠĠ Ġif Ġ(
2023-06-05 14:51:54.685 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_save', '[', 'j', ']', '_+', '_3', '_*', '_j']
2023-06-05 14:51:54.685 342:isInGraph              INFO   input_ids_2: 138 148
2023-06-05 14:51:54.685 349:isInGraph              INFO   input_tokens_reverse_2: Ġj Ġ< Ġm ; Ġj ++) Ġ{ Ċ ĠĠĠĠĠ Ġscanf
2023-06-05 14:51:54.685 306:isInGraph              INFO   *** Example ***
2023-06-05 14:51:54.685 307:isInGraph              INFO   idx: 40257
2023-06-05 14:51:54.686 308:isInGraph              INFO   label: 0
2023-06-05 14:51:54.686 309:isInGraph              INFO   input_tokens_1: ['i']
2023-06-05 14:51:54.686 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-05 14:51:54.686 324:isInGraph              INFO   input_tokens_reverse_1: Ġint
2023-06-05 14:51:54.686 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-05 14:51:54.686 342:isInGraph              INFO   input_ids_2: 115 116
2023-06-05 14:51:54.686 349:isInGraph              INFO   input_tokens_reverse_2: ()
2023-06-05 14:51:54.687 306:isInGraph              INFO   *** Example ***
2023-06-05 14:51:54.687 307:isInGraph              INFO   idx: 43203
2023-06-05 14:51:54.687 308:isInGraph              INFO   label: 1
2023-06-05 14:51:54.687 309:isInGraph              INFO   input_tokens_1: ['e', '[', 'i', ']']
2023-06-05 14:51:54.687 317:isInGraph              INFO   input_ids_1: 86 90
2023-06-05 14:51:54.687 324:isInGraph              INFO   input_tokens_reverse_1: ], Ġ& c [
2023-06-05 14:51:54.688 334:isInGraph              INFO   input_tokens_2: ['a', '[', 'i', ']', '_+', '_b', '[', 'i', ']']
2023-06-05 14:51:54.688 342:isInGraph              INFO   input_ids_2: 138 147
2023-06-05 14:51:54.688 349:isInGraph              INFO   input_tokens_reverse_2: ]) Ġ+ Ġ( f [ i ] Ġ- Ġc
2023-06-05 14:51:54.688 306:isInGraph              INFO   *** Example ***
2023-06-05 14:51:54.688 307:isInGraph              INFO   idx: 48598
2023-06-05 14:51:54.688 308:isInGraph              INFO   label: 1
2023-06-05 14:51:54.689 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '_%', 's', '",', '_a', ')']
2023-06-05 14:51:54.689 317:isInGraph              INFO   input_ids_1: 113 120
2023-06-05 14:51:54.689 324:isInGraph              INFO   input_tokens_reverse_1: Ġ{ Ċ ĠĠĠĠĠ Ġprintf ("\ n %
2023-06-05 14:51:54.689 334:isInGraph              INFO   input_tokens_2: ['k', '_=', '_strlen', '(', 'a', ')']
2023-06-05 14:51:54.689 342:isInGraph              INFO   input_ids_2: 98 104
2023-06-05 14:51:54.689 349:isInGraph              INFO   input_tokens_reverse_2: Ġ+ Ġ1 Ġ+ Ġstrlen ( a
2023-06-05 14:51:54.689 306:isInGraph              INFO   *** Example ***
2023-06-05 14:51:54.690 307:isInGraph              INFO   idx: 49875
2023-06-05 14:51:54.690 308:isInGraph              INFO   label: 0
2023-06-05 14:51:54.690 309:isInGraph              INFO   input_tokens_1: ['a']
2023-06-05 14:51:54.690 317:isInGraph              INFO   input_ids_1: 43 44
2023-06-05 14:51:54.690 324:isInGraph              INFO   input_tokens_reverse_1: Ġgets
2023-06-05 14:51:54.690 334:isInGraph              INFO   input_tokens_2: ['0']
2023-06-05 14:51:54.690 342:isInGraph              INFO   input_ids_2: 47 48
2023-06-05 14:51:54.691 349:isInGraph              INFO   input_tokens_reverse_2: Ċ
2023-06-05 14:51:54.691 306:isInGraph              INFO   *** Example ***
2023-06-05 14:51:54.691 307:isInGraph              INFO   idx: 48859
2023-06-05 14:51:54.691 308:isInGraph              INFO   label: 1
2023-06-05 14:51:54.691 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 's', '_",', '_s', '[', 'i', '])']
2023-06-05 14:51:54.691 317:isInGraph              INFO   input_ids_1: 117 125
2023-06-05 14:51:54.691 324:isInGraph              INFO   input_tokens_reverse_1: Ġstrlen ( s [ i Ġ+ Ġ1 ]);
2023-06-05 14:51:54.692 334:isInGraph              INFO   input_tokens_2: ['strlen', '(', 's', '[', 'i', '_+', '_1', '])']
2023-06-05 14:51:54.692 342:isInGraph              INFO   input_ids_2: 95 103
2023-06-05 14:51:54.692 349:isInGraph              INFO   input_tokens_reverse_2: s [ i Ġ+ Ġ1 ]) Ġ+ Ġ1
2023-06-05 14:51:54.692 306:isInGraph              INFO   *** Example ***
2023-06-05 14:51:54.692 307:isInGraph              INFO   idx: 46604
2023-06-05 14:51:54.692 308:isInGraph              INFO   label: 1
2023-06-05 14:51:54.692 309:isInGraph              INFO   input_tokens_1: ['d', '_<', '_b']
2023-06-05 14:51:54.692 317:isInGraph              INFO   input_ids_1: 188 191
2023-06-05 14:51:54.693 324:isInGraph              INFO   input_tokens_reverse_1: Ċ ĠĠĠĠĠ Ġy
2023-06-05 14:51:54.693 334:isInGraph              INFO   input_tokens_2: ['m', '_!=', '_b', '_-', '_k']
2023-06-05 14:51:54.693 342:isInGraph              INFO   input_ids_2: 133 138
2023-06-05 14:51:54.693 349:isInGraph              INFO   input_tokens_reverse_2: Ġ<= Ġb Ġ- Ġk ;
2023-06-05 14:51:54.693 306:isInGraph              INFO   *** Example ***
2023-06-05 14:51:54.693 307:isInGraph              INFO   idx: 47009
2023-06-05 14:51:54.693 308:isInGraph              INFO   label: 1
2023-06-05 14:51:54.694 309:isInGraph              INFO   input_tokens_1: ['printf', '("', '>\\', 'n', '")']
2023-06-05 14:51:54.694 317:isInGraph              INFO   input_ids_1: 154 159
2023-06-05 14:51:54.694 324:isInGraph              INFO   input_tokens_reverse_1: i ] Ġ== Ġ'\ 0
2023-06-05 14:51:54.694 334:isInGraph              INFO   input_tokens_2: ['str', '1', '[', 'i', ']', '_+', '_32']
2023-06-05 14:51:54.694 342:isInGraph              INFO   input_ids_2: 72 79
2023-06-05 14:51:54.694 349:isInGraph              INFO   input_tokens_reverse_2: 1 [ i ] Ġ<= Ġ' Z
2023-06-05 14:51:54.694 306:isInGraph              INFO   *** Example ***
2023-06-05 14:51:54.695 307:isInGraph              INFO   idx: 50281
2023-06-05 14:51:54.695 308:isInGraph              INFO   label: 1
2023-06-05 14:51:54.695 309:isInGraph              INFO   input_tokens_1: ['a', '_>', '_c', '_&&', '_A', '_<', '_C']
2023-06-05 14:51:54.695 317:isInGraph              INFO   input_ids_1: 121 128
2023-06-05 14:51:54.695 324:isInGraph              INFO   input_tokens_reverse_1: a Ġ> Ġb Ġ&& ĠA Ġ< ĠB
2023-06-05 14:51:54.696 334:isInGraph              INFO   input_tokens_2: ['(((', 'a', '_>', '_b', '_&&', '_A', '_<', '_B', ')', '_||', '_(', 'a', '_<', '_b', '_&&', '_A', '_>', '_B', '))', '_+', '_((', 'a', '_>', '_c', '_&&', '_A', '_<', '_C', ')', '_||', '_(', 'a', '_<', '_c', '_&&', '_A', '_>', '_C', '))', '_+', '_((', 'b', '_>', '_c', '_&&', '_B', '_<', '_C', ')', '_||', '_(', 'b', '_<', '_c', '_&&', '_B', '_>', '_C', ')))', '_==', '_3']
2023-06-05 14:51:54.696 342:isInGraph              INFO   input_ids_2: 100 161
2023-06-05 14:51:54.696 349:isInGraph              INFO   input_tokens_reverse_2: Ġc ); Ċ ĠĠĠĠĠĠĠ ĠC Ġ= Ġ( c Ġ> Ġb ) Ġ+ Ġ( b Ġ> Ġa ); Ċ ĠĠĠĠĠĠĠ Ġif Ġ(((( a Ġ> Ġb Ġ&& ĠA Ġ< ĠB ) Ġ|| Ġ( a Ġ< Ġb Ġ&& ĠA Ġ> ĠB )) Ġ+ Ġ(( a Ġ> Ġc Ġ&& ĠA Ġ< ĠC ) Ġ|| Ġ( a Ġ< Ġc Ġ&& ĠA Ġ> ĠC )) Ġ+ Ġ((
2023-06-05 14:51:54.696 978:isIngraph              INFO   Finishing loading Dataset
2023-06-05 14:51:54.719 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-05 14:51:54.720 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='cdg', layer=5, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5', posratio=0.5, seed=378, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-05 14:51:56.337 451:isIngraph              INFO   ***** Running training *****
2023-06-05 14:51:56.338 452:isIngraph              INFO     Num examples = 87838
2023-06-05 14:51:56.338 453:isIngraph              INFO     Num Epochs = 1
2023-06-05 14:51:56.338 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-05 14:51:56.338 458:isIngraph              INFO     Total train batch size = 64
2023-06-05 14:51:56.338 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-05 14:51:56.338 465:isIngraph              INFO     Total optimization steps = 1373
2023-06-05 14:52:08.992 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 14:52:08.993 581:isIngraph              INFO     Num examples = 29244
2023-06-05 14:52:08.993 582:isIngraph              INFO     Batch size = 32
2023-06-05 14:52:43.255 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 14:52:43.255 629:isIngraph              INFO     eval_acc = 0.9232
2023-06-05 14:52:43.255 629:isIngraph              INFO     eval_f1 = 0.926
2023-06-05 14:52:43.256 629:isIngraph              INFO     eval_mcc = 0.8488
2023-06-05 14:52:43.256 629:isIngraph              INFO     eval_precision = 0.894
2023-06-05 14:52:43.256 629:isIngraph              INFO     eval_recall = 0.9603
2023-06-05 14:52:43.256 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 14:52:43.261 522:isIngraph              INFO     ********************
2023-06-05 14:52:43.262 523:isIngraph              INFO     Best f1:0.926
2023-06-05 14:52:43.262 524:isIngraph              INFO     ********************
2023-06-05 14:52:43.269 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 14:52:43.270 544:isIngraph              INFO     ********************
2023-06-05 14:52:43.270 545:isIngraph              INFO     Best MCC:0.8488
2023-06-05 14:52:43.270 546:isIngraph              INFO     ********************
2023-06-05 14:52:43.273 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 14:52:52.713 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 14:52:52.714 581:isIngraph              INFO     Num examples = 29244
2023-06-05 14:52:52.714 582:isIngraph              INFO     Batch size = 32
2023-06-05 14:53:25.807 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 14:53:25.808 629:isIngraph              INFO     eval_acc = 0.9452
2023-06-05 14:53:25.808 629:isIngraph              INFO     eval_f1 = 0.946
2023-06-05 14:53:25.808 629:isIngraph              INFO     eval_mcc = 0.8908
2023-06-05 14:53:25.808 629:isIngraph              INFO     eval_precision = 0.9314
2023-06-05 14:53:25.808 629:isIngraph              INFO     eval_recall = 0.9611
2023-06-05 14:53:25.809 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 14:53:25.812 522:isIngraph              INFO     ********************
2023-06-05 14:53:25.813 523:isIngraph              INFO     Best f1:0.946
2023-06-05 14:53:25.813 524:isIngraph              INFO     ********************
2023-06-05 14:53:25.817 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 14:53:25.817 544:isIngraph              INFO     ********************
2023-06-05 14:53:25.817 545:isIngraph              INFO     Best MCC:0.8908
2023-06-05 14:53:25.817 546:isIngraph              INFO     ********************
2023-06-05 14:53:25.820 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 14:53:36.171 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 14:53:36.172 581:isIngraph              INFO     Num examples = 29244
2023-06-05 14:53:36.172 582:isIngraph              INFO     Batch size = 32
2023-06-05 14:54:09.247 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 14:54:09.248 629:isIngraph              INFO     eval_acc = 0.9548
2023-06-05 14:54:09.248 629:isIngraph              INFO     eval_f1 = 0.9561
2023-06-05 14:54:09.248 629:isIngraph              INFO     eval_mcc = 0.9112
2023-06-05 14:54:09.248 629:isIngraph              INFO     eval_precision = 0.9287
2023-06-05 14:54:09.248 629:isIngraph              INFO     eval_recall = 0.9852
2023-06-05 14:54:09.248 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 14:54:09.253 522:isIngraph              INFO     ********************
2023-06-05 14:54:09.253 523:isIngraph              INFO     Best f1:0.9561
2023-06-05 14:54:09.253 524:isIngraph              INFO     ********************
2023-06-05 14:54:09.257 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 14:54:09.257 544:isIngraph              INFO     ********************
2023-06-05 14:54:09.257 545:isIngraph              INFO     Best MCC:0.9112
2023-06-05 14:54:09.257 546:isIngraph              INFO     ********************
2023-06-05 14:54:09.259 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 14:54:19.770 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 14:54:19.770 581:isIngraph              INFO     Num examples = 29244
2023-06-05 14:54:19.771 582:isIngraph              INFO     Batch size = 32
2023-06-05 14:54:51.922 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 14:54:51.923 629:isIngraph              INFO     eval_acc = 0.9578
2023-06-05 14:54:51.923 629:isIngraph              INFO     eval_f1 = 0.959
2023-06-05 14:54:51.923 629:isIngraph              INFO     eval_mcc = 0.9171
2023-06-05 14:54:51.923 629:isIngraph              INFO     eval_precision = 0.9338
2023-06-05 14:54:51.923 629:isIngraph              INFO     eval_recall = 0.9855
2023-06-05 14:54:51.923 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 14:54:51.929 522:isIngraph              INFO     ********************
2023-06-05 14:54:51.929 523:isIngraph              INFO     Best f1:0.959
2023-06-05 14:54:51.929 524:isIngraph              INFO     ********************
2023-06-05 14:54:51.933 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 14:54:51.933 544:isIngraph              INFO     ********************
2023-06-05 14:54:51.933 545:isIngraph              INFO     Best MCC:0.9171
2023-06-05 14:54:51.933 546:isIngraph              INFO     ********************
2023-06-05 14:54:51.935 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 14:55:02.361 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 14:55:02.362 581:isIngraph              INFO     Num examples = 29244
2023-06-05 14:55:02.362 582:isIngraph              INFO     Batch size = 32
2023-06-05 14:55:35.558 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 14:55:35.559 629:isIngraph              INFO     eval_acc = 0.9578
2023-06-05 14:55:35.559 629:isIngraph              INFO     eval_f1 = 0.9591
2023-06-05 14:55:35.559 629:isIngraph              INFO     eval_mcc = 0.9174
2023-06-05 14:55:35.559 629:isIngraph              INFO     eval_precision = 0.931
2023-06-05 14:55:35.559 629:isIngraph              INFO     eval_recall = 0.9889
2023-06-05 14:55:35.559 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 14:55:35.563 522:isIngraph              INFO     ********************
2023-06-05 14:55:35.563 523:isIngraph              INFO     Best f1:0.9591
2023-06-05 14:55:35.563 524:isIngraph              INFO     ********************
2023-06-05 14:55:35.581 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 14:55:35.581 544:isIngraph              INFO     ********************
2023-06-05 14:55:35.581 545:isIngraph              INFO     Best MCC:0.9174
2023-06-05 14:55:35.581 546:isIngraph              INFO     ********************
2023-06-05 14:55:35.584 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 14:55:46.293 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 14:55:46.293 581:isIngraph              INFO     Num examples = 29244
2023-06-05 14:55:46.293 582:isIngraph              INFO     Batch size = 32
2023-06-05 14:56:19.042 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 14:56:19.042 629:isIngraph              INFO     eval_acc = 0.9592
2023-06-05 14:56:19.043 629:isIngraph              INFO     eval_f1 = 0.9604
2023-06-05 14:56:19.043 629:isIngraph              INFO     eval_mcc = 0.9201
2023-06-05 14:56:19.043 629:isIngraph              INFO     eval_precision = 0.9334
2023-06-05 14:56:19.043 629:isIngraph              INFO     eval_recall = 0.9891
2023-06-05 14:56:19.043 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 14:56:19.047 522:isIngraph              INFO     ********************
2023-06-05 14:56:19.047 523:isIngraph              INFO     Best f1:0.9604
2023-06-05 14:56:19.047 524:isIngraph              INFO     ********************
2023-06-05 14:56:19.096 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 14:56:19.097 544:isIngraph              INFO     ********************
2023-06-05 14:56:19.097 545:isIngraph              INFO     Best MCC:0.9201
2023-06-05 14:56:19.097 546:isIngraph              INFO     ********************
2023-06-05 14:56:19.116 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 14:56:31.129 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 14:56:31.130 581:isIngraph              INFO     Num examples = 29244
2023-06-05 14:56:31.130 582:isIngraph              INFO     Batch size = 32
2023-06-05 14:57:04.010 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 14:57:04.011 629:isIngraph              INFO     eval_acc = 0.9604
2023-06-05 14:57:04.011 629:isIngraph              INFO     eval_f1 = 0.9614
2023-06-05 14:57:04.011 629:isIngraph              INFO     eval_mcc = 0.922
2023-06-05 14:57:04.012 629:isIngraph              INFO     eval_precision = 0.9373
2023-06-05 14:57:04.012 629:isIngraph              INFO     eval_recall = 0.9867
2023-06-05 14:57:04.012 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 14:57:04.017 522:isIngraph              INFO     ********************
2023-06-05 14:57:04.018 523:isIngraph              INFO     Best f1:0.9614
2023-06-05 14:57:04.018 524:isIngraph              INFO     ********************
2023-06-05 14:57:04.022 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 14:57:04.022 544:isIngraph              INFO     ********************
2023-06-05 14:57:04.022 545:isIngraph              INFO     Best MCC:0.922
2023-06-05 14:57:04.022 546:isIngraph              INFO     ********************
2023-06-05 14:57:04.024 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 14:57:11.898 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 14:57:11.899 581:isIngraph              INFO     Num examples = 29244
2023-06-05 14:57:11.899 582:isIngraph              INFO     Batch size = 32
2023-06-05 14:57:36.247 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 14:57:36.248 629:isIngraph              INFO     eval_acc = 0.9612
2023-06-05 14:57:36.248 629:isIngraph              INFO     eval_f1 = 0.9621
2023-06-05 14:57:36.248 629:isIngraph              INFO     eval_mcc = 0.9235
2023-06-05 14:57:36.248 629:isIngraph              INFO     eval_precision = 0.9398
2023-06-05 14:57:36.249 629:isIngraph              INFO     eval_recall = 0.9855
2023-06-05 14:57:36.249 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 14:57:36.253 522:isIngraph              INFO     ********************
2023-06-05 14:57:36.253 523:isIngraph              INFO     Best f1:0.9621
2023-06-05 14:57:36.253 524:isIngraph              INFO     ********************
2023-06-05 14:57:36.257 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 14:57:36.257 544:isIngraph              INFO     ********************
2023-06-05 14:57:36.257 545:isIngraph              INFO     Best MCC:0.9235
2023-06-05 14:57:36.257 546:isIngraph              INFO     ********************
2023-06-05 14:57:36.259 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 14:57:43.653 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 14:57:43.654 581:isIngraph              INFO     Num examples = 29244
2023-06-05 14:57:43.654 582:isIngraph              INFO     Batch size = 32
2023-06-05 14:58:07.613 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 14:58:07.613 629:isIngraph              INFO     eval_acc = 0.9609
2023-06-05 14:58:07.613 629:isIngraph              INFO     eval_f1 = 0.9619
2023-06-05 14:58:07.613 629:isIngraph              INFO     eval_mcc = 0.9231
2023-06-05 14:58:07.613 629:isIngraph              INFO     eval_precision = 0.939
2023-06-05 14:58:07.614 629:isIngraph              INFO     eval_recall = 0.9859
2023-06-05 14:58:07.614 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 14:58:16.725 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-05 14:58:16.725 581:isIngraph              INFO     Num examples = 29244
2023-06-05 14:58:16.725 582:isIngraph              INFO     Batch size = 32
2023-06-05 14:58:50.266 627:isIngraph              INFO   ***** Eval results *****
2023-06-05 14:58:50.267 629:isIngraph              INFO     eval_acc = 0.9613
2023-06-05 14:58:50.268 629:isIngraph              INFO     eval_f1 = 0.9621
2023-06-05 14:58:50.268 629:isIngraph              INFO     eval_mcc = 0.9235
2023-06-05 14:58:50.268 629:isIngraph              INFO     eval_precision = 0.9405
2023-06-05 14:58:50.268 629:isIngraph              INFO     eval_recall = 0.9848
2023-06-05 14:58:50.268 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-05 14:58:50.272 522:isIngraph              INFO     ********************
2023-06-05 14:58:50.272 523:isIngraph              INFO     Best f1:0.9621
2023-06-05 14:58:50.273 524:isIngraph              INFO     ********************
2023-06-05 14:58:50.278 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-f1/model.bin
2023-06-05 14:58:50.278 544:isIngraph              INFO     ********************
2023-06-05 14:58:50.278 545:isIngraph              INFO     Best MCC:0.9235
2023-06-05 14:58:50.278 546:isIngraph              INFO     ********************
2023-06-05 14:58:50.280 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/3/cdg_5/checkpoint-best-mcc/model.bin
2023-06-05 14:58:50.537 650:isIngraph              INFO   ***** Running Test *****
2023-06-05 14:58:50.537 651:isIngraph              INFO     Num examples = 30316
2023-06-05 14:58:50.537 652:isIngraph              INFO     Batch size = 32
2023-06-05 14:59:25.590 693:isIngraph              INFO   ***** Test results *****
2023-06-05 14:59:25.591 695:isIngraph              INFO     eval_acc = 0.9532
2023-06-05 14:59:25.591 695:isIngraph              INFO     eval_f1 = 0.9538
2023-06-05 14:59:25.591 695:isIngraph              INFO     eval_mcc = 0.9067
2023-06-05 14:59:25.591 695:isIngraph              INFO     eval_precision = 0.9406
2023-06-05 14:59:25.592 695:isIngraph              INFO     eval_recall = 0.9673
2023-06-05 14:59:25.592 695:isIngraph              INFO     eval_threshold = 0.5
