2023-06-04 16:58:11.816 917:isIngraph              DEBUG  main message
2023-06-04 16:58:11.816 923:isIngraph              WARNING device: cuda, n_gpu: 1
2023-06-04 16:58:12.511 938:isIngraph              INFO   Load Dataset
2023-06-04 16:58:45.185 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 16:58:46.127 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_train_ddg_cleaned.pt
2023-06-04 16:58:46.127 251:isInGraph              INFO   Preprocessing Span file and Graph data
2023-06-04 16:58:51.242 258:isInGraph              INFO   ../datasets/poj-104/isINGraphs/exp1/train_ddg_cleaned.pt
2023-06-04 16:59:00.754 271:isInGraph              INFO   save preprocessed data
2023-06-04 16:59:09.196 301:isInGraph              INFO   Labels Counter({1: 54318, 0: 54318})
2023-06-04 16:59:09.583 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 16:59:10.419 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_valid_ddg_cleaned.pt
2023-06-04 16:59:12.584 301:isInGraph              INFO   Labels Counter({0: 18321, 1: 18321})
2023-06-04 16:59:12.585 217:isInGraph              INFO   ../datasets/poj-104/poj-104/test/sample_1000_formated_source_code_clang.json
2023-06-04 16:59:13.446 247:isInGraph              INFO   Load Span file and Graph data, data path: ../datasets/poj-104/isINGraphs/exp1/unixcoder/unixcoder_test_ddg_cleaned.pt
2023-06-04 16:59:14.049 301:isInGraph              INFO   Labels Counter({1: 18187, 0: 18187})
2023-06-04 16:59:14.049 306:isInGraph              INFO   *** Example ***
2023-06-04 16:59:14.049 307:isInGraph              INFO   idx: 44400
2023-06-04 16:59:14.049 308:isInGraph              INFO   label: 1
2023-06-04 16:59:14.050 309:isInGraph              INFO   input_tokens_1: ['int', '_main', '()']
2023-06-04 16:59:14.050 317:isInGraph              INFO   input_ids_1: 1 4
2023-06-04 16:59:14.050 324:isInGraph              INFO   input_tokens_reverse_1: <encoder-only> </s> int
2023-06-04 16:59:14.050 334:isInGraph              INFO   input_tokens_2: ['flag', '_=', '_0']
2023-06-04 16:59:14.050 342:isInGraph              INFO   input_ids_2: 29 32
2023-06-04 16:59:14.050 349:isInGraph              INFO   input_tokens_reverse_2: Ġi , Ġj
2023-06-04 16:59:14.051 306:isInGraph              INFO   *** Example ***
2023-06-04 16:59:14.051 307:isInGraph              INFO   idx: 48866
2023-06-04 16:59:14.051 308:isInGraph              INFO   label: 0
2023-06-04 16:59:14.051 309:isInGraph              INFO   input_tokens_1: ['word', 'len']
2023-06-04 16:59:14.051 317:isInGraph              INFO   input_ids_1: 18 20
2023-06-04 16:59:14.051 324:isInGraph              INFO   input_tokens_reverse_1: \ 0
2023-06-04 16:59:14.051 334:isInGraph              INFO   input_tokens_2: ['sum']
2023-06-04 16:59:14.051 342:isInGraph              INFO   input_ids_2: 136 137
2023-06-04 16:59:14.051 349:isInGraph              INFO   input_tokens_reverse_2: ĠĠĠ
2023-06-04 16:59:14.052 306:isInGraph              INFO   *** Example ***
2023-06-04 16:59:14.052 307:isInGraph              INFO   idx: 47202
2023-06-04 16:59:14.052 308:isInGraph              INFO   label: 0
2023-06-04 16:59:14.052 309:isInGraph              INFO   input_tokens_1: ['b']
2023-06-04 16:59:14.052 317:isInGraph              INFO   input_ids_1: 119 120
2023-06-04 16:59:14.052 324:isInGraph              INFO   input_tokens_reverse_1: Ġ((
2023-06-04 16:59:14.052 334:isInGraph              INFO   input_tokens_2: ['i']
2023-06-04 16:59:14.052 342:isInGraph              INFO   input_ids_2: 138 139
2023-06-04 16:59:14.053 349:isInGraph              INFO   input_tokens_reverse_2: Ġ(
2023-06-04 16:59:14.053 306:isInGraph              INFO   *** Example ***
2023-06-04 16:59:14.053 307:isInGraph              INFO   idx: 41834
2023-06-04 16:59:14.053 308:isInGraph              INFO   label: 0
2023-06-04 16:59:14.053 309:isInGraph              INFO   input_tokens_1: ['if', '_(', 'i', '_==', '_0', ')']
2023-06-04 16:59:14.053 317:isInGraph              INFO   input_ids_1: 62 68
2023-06-04 16:59:14.053 324:isInGraph              INFO   input_tokens_reverse_1: Ġ} Ċ Ġ Ġfor Ġ( i
2023-06-04 16:59:14.054 334:isInGraph              INFO   input_tokens_2: ['c', '_=', '_0']
2023-06-04 16:59:14.054 342:isInGraph              INFO   input_ids_2: 98 101
2023-06-04 16:59:14.054 349:isInGraph              INFO   input_tokens_reverse_2: Ġ= Ġ0 ;
2023-06-04 16:59:14.054 306:isInGraph              INFO   *** Example ***
2023-06-04 16:59:14.054 307:isInGraph              INFO   idx: 42975
2023-06-04 16:59:14.054 308:isInGraph              INFO   label: 1
2023-06-04 16:59:14.054 309:isInGraph              INFO   input_tokens_1: ['printf', '("%', 'd', '\\', 'n', '",', '_sum', ')']
2023-06-04 16:59:14.054 317:isInGraph              INFO   input_ids_1: 107 115
2023-06-04 16:59:14.055 324:isInGraph              INFO   input_tokens_reverse_1: ; Ċ ĠĠĠĠĠ Ġ} Ġelse Ġif Ġ( a
2023-06-04 16:59:14.055 334:isInGraph              INFO   input_tokens_2: ['i', '++']
2023-06-04 16:59:14.055 342:isInGraph              INFO   input_ids_2: 30 32
2023-06-04 16:59:14.055 349:isInGraph              INFO   input_tokens_reverse_2: Ġfor Ġ(
2023-06-04 16:59:14.055 306:isInGraph              INFO   *** Example ***
2023-06-04 16:59:14.055 307:isInGraph              INFO   idx: 49044
2023-06-04 16:59:14.055 308:isInGraph              INFO   label: 1
2023-06-04 16:59:14.055 309:isInGraph              INFO   input_tokens_1: ['cout', '_<<', '_"', '36', '-', '60', ':', '_"']
2023-06-04 16:59:14.056 317:isInGraph              INFO   input_ids_1: 209 217
2023-06-04 16:59:14.056 324:isInGraph              INFO   input_tokens_reverse_1: Ġcout Ġ<< Ġ" 1 - 18 : Ġ"
2023-06-04 16:59:14.056 334:isInGraph              INFO   input_tokens_2: ['set', 'precision', '(', '2', ')']
2023-06-04 16:59:14.056 342:isInGraph              INFO   input_ids_2: 174 179
2023-06-04 16:59:14.056 349:isInGraph              INFO   input_tokens_reverse_2: Ġ/ Ġn ; Ċ Ġ
2023-06-04 16:59:14.056 306:isInGraph              INFO   *** Example ***
2023-06-04 16:59:14.056 307:isInGraph              INFO   idx: 40591
2023-06-04 16:59:14.056 308:isInGraph              INFO   label: 1
2023-06-04 16:59:14.057 309:isInGraph              INFO   input_tokens_1: ['sc', '[', 'i', ']', '_=', '_e']
2023-06-04 16:59:14.057 317:isInGraph              INFO   input_ids_1: 186 192
2023-06-04 16:59:14.057 324:isInGraph              INFO   input_tokens_reverse_1: Ġ( sc [ i ] Ġ<
2023-06-04 16:59:14.057 334:isInGraph              INFO   input_tokens_2: ['i', '_=', '_0']
2023-06-04 16:59:14.057 342:isInGraph              INFO   input_ids_2: 45 48
2023-06-04 16:59:14.057 349:isInGraph              INFO   input_tokens_reverse_2: ", Ġ& n
2023-06-04 16:59:14.057 306:isInGraph              INFO   *** Example ***
2023-06-04 16:59:14.057 307:isInGraph              INFO   idx: 49875
2023-06-04 16:59:14.058 308:isInGraph              INFO   label: 0
2023-06-04 16:59:14.058 309:isInGraph              INFO   input_tokens_1: ['gets', '(', 'p', ')']
2023-06-04 16:59:14.058 317:isInGraph              INFO   input_ids_1: 35 39
2023-06-04 16:59:14.058 324:isInGraph              INFO   input_tokens_reverse_1: , Ġcount , Ġ*
2023-06-04 16:59:14.058 334:isInGraph              INFO   input_tokens_2: ['26']
2023-06-04 16:59:14.058 342:isInGraph              INFO   input_ids_2: 106 107
2023-06-04 16:59:14.058 349:isInGraph              INFO   input_tokens_reverse_2: Ġif
2023-06-04 16:59:14.058 306:isInGraph              INFO   *** Example ***
2023-06-04 16:59:14.059 307:isInGraph              INFO   idx: 40351
2023-06-04 16:59:14.059 308:isInGraph              INFO   label: 1
2023-06-04 16:59:14.059 309:isInGraph              INFO   input_tokens_1: ['j', '++']
2023-06-04 16:59:14.059 317:isInGraph              INFO   input_ids_1: 195 197
2023-06-04 16:59:14.059 324:isInGraph              INFO   input_tokens_reverse_1: ][ i
2023-06-04 16:59:14.059 334:isInGraph              INFO   input_tokens_2: ['i', '_<', '_5']
2023-06-04 16:59:14.059 342:isInGraph              INFO   input_ids_2: 117 120
2023-06-04 16:59:14.059 349:isInGraph              INFO   input_tokens_reverse_2: Ġm Ġ>= Ġ0
2023-06-04 16:59:14.060 978:isIngraph              INFO   Finishing loading Dataset
2023-06-04 16:59:14.085 987:isIngraph              INFO   Probimg Model Parameters 3843
2023-06-04 16:59:14.085 988:isIngraph              INFO   Training/evaluation parameters Namespace(adam_epsilon=1e-08, class_num=2, config_name='microsoft/unixcoder-base', data_folder='../datasets/poj-104/isINGraphs/exp1', dataset='poj-104', debug=False, device=device(type='cuda'), do_crossing='cleaned', do_eval=False, do_random=False, do_test=True, do_train=True, epochs=1, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ddg', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='unixcoder', model_name_or_path='microsoft/unixcoder-base', n_gpu=1, output_dir='../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12', posratio=0.5, seed=6, token_config='microsoft/unixcoder-base', train_batch_size=64, warmup_steps=0, weight_decay=0.0)
2023-06-04 16:59:15.607 451:isIngraph              INFO   ***** Running training *****
2023-06-04 16:59:15.608 452:isIngraph              INFO     Num examples = 108636
2023-06-04 16:59:15.608 453:isIngraph              INFO     Num Epochs = 1
2023-06-04 16:59:15.608 454:isIngraph              INFO     Instantaneous batch size per GPU = 64
2023-06-04 16:59:15.608 458:isIngraph              INFO     Total train batch size = 64
2023-06-04 16:59:15.608 462:isIngraph              INFO     Gradient Accumulation steps = 1
2023-06-04 16:59:15.608 465:isIngraph              INFO     Total optimization steps = 1698
2023-06-04 16:59:27.345 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 16:59:27.345 581:isIngraph              INFO     Num examples = 36642
2023-06-04 16:59:27.346 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:00:01.585 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:00:01.585 629:isIngraph              INFO     eval_acc = 0.8735
2023-06-04 17:00:01.585 629:isIngraph              INFO     eval_f1 = 0.8804
2023-06-04 17:00:01.585 629:isIngraph              INFO     eval_mcc = 0.752
2023-06-04 17:00:01.585 629:isIngraph              INFO     eval_precision = 0.8353
2023-06-04 17:00:01.586 629:isIngraph              INFO     eval_recall = 0.9306
2023-06-04 17:00:01.586 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:00:01.586 522:isIngraph              INFO     ********************
2023-06-04 17:00:01.586 523:isIngraph              INFO     Best f1:0.8804
2023-06-04 17:00:01.586 524:isIngraph              INFO     ********************
2023-06-04 17:00:01.591 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-04 17:00:01.591 544:isIngraph              INFO     ********************
2023-06-04 17:00:01.592 545:isIngraph              INFO     Best MCC:0.752
2023-06-04 17:00:01.592 546:isIngraph              INFO     ********************
2023-06-04 17:00:01.595 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-04 17:00:11.805 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:00:11.808 581:isIngraph              INFO     Num examples = 36642
2023-06-04 17:00:11.808 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:00:44.529 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:00:44.530 629:isIngraph              INFO     eval_acc = 0.895
2023-06-04 17:00:44.530 629:isIngraph              INFO     eval_f1 = 0.9003
2023-06-04 17:00:44.530 629:isIngraph              INFO     eval_mcc = 0.7945
2023-06-04 17:00:44.530 629:isIngraph              INFO     eval_precision = 0.857
2023-06-04 17:00:44.531 629:isIngraph              INFO     eval_recall = 0.9483
2023-06-04 17:00:44.531 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:00:44.531 522:isIngraph              INFO     ********************
2023-06-04 17:00:44.531 523:isIngraph              INFO     Best f1:0.9003
2023-06-04 17:00:44.531 524:isIngraph              INFO     ********************
2023-06-04 17:00:44.534 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-04 17:00:44.534 544:isIngraph              INFO     ********************
2023-06-04 17:00:44.534 545:isIngraph              INFO     Best MCC:0.7945
2023-06-04 17:00:44.534 546:isIngraph              INFO     ********************
2023-06-04 17:00:44.536 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-04 17:00:54.122 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:00:54.122 581:isIngraph              INFO     Num examples = 36642
2023-06-04 17:00:54.122 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:01:26.403 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:01:26.403 629:isIngraph              INFO     eval_acc = 0.9
2023-06-04 17:01:26.404 629:isIngraph              INFO     eval_f1 = 0.901
2023-06-04 17:01:26.404 629:isIngraph              INFO     eval_mcc = 0.8002
2023-06-04 17:01:26.404 629:isIngraph              INFO     eval_precision = 0.8921
2023-06-04 17:01:26.404 629:isIngraph              INFO     eval_recall = 0.9101
2023-06-04 17:01:26.404 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:01:26.404 522:isIngraph              INFO     ********************
2023-06-04 17:01:26.404 523:isIngraph              INFO     Best f1:0.901
2023-06-04 17:01:26.404 524:isIngraph              INFO     ********************
2023-06-04 17:01:26.408 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-04 17:01:26.408 544:isIngraph              INFO     ********************
2023-06-04 17:01:26.408 545:isIngraph              INFO     Best MCC:0.8002
2023-06-04 17:01:26.409 546:isIngraph              INFO     ********************
2023-06-04 17:01:26.410 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-04 17:01:35.608 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:01:35.608 581:isIngraph              INFO     Num examples = 36642
2023-06-04 17:01:35.608 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:02:07.761 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:02:07.761 629:isIngraph              INFO     eval_acc = 0.9016
2023-06-04 17:02:07.761 629:isIngraph              INFO     eval_f1 = 0.9
2023-06-04 17:02:07.761 629:isIngraph              INFO     eval_mcc = 0.8037
2023-06-04 17:02:07.761 629:isIngraph              INFO     eval_precision = 0.9154
2023-06-04 17:02:07.761 629:isIngraph              INFO     eval_recall = 0.8851
2023-06-04 17:02:07.762 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:02:07.762 544:isIngraph              INFO     ********************
2023-06-04 17:02:07.762 545:isIngraph              INFO     Best MCC:0.8037
2023-06-04 17:02:07.762 546:isIngraph              INFO     ********************
2023-06-04 17:02:07.765 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-04 17:02:17.113 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:02:17.114 581:isIngraph              INFO     Num examples = 36642
2023-06-04 17:02:17.114 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:02:48.691 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:02:48.691 629:isIngraph              INFO     eval_acc = 0.9067
2023-06-04 17:02:48.691 629:isIngraph              INFO     eval_f1 = 0.9061
2023-06-04 17:02:48.691 629:isIngraph              INFO     eval_mcc = 0.8136
2023-06-04 17:02:48.692 629:isIngraph              INFO     eval_precision = 0.9129
2023-06-04 17:02:48.692 629:isIngraph              INFO     eval_recall = 0.8994
2023-06-04 17:02:48.692 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:02:48.692 522:isIngraph              INFO     ********************
2023-06-04 17:02:48.692 523:isIngraph              INFO     Best f1:0.9061
2023-06-04 17:02:48.692 524:isIngraph              INFO     ********************
2023-06-04 17:02:48.696 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-04 17:02:48.696 544:isIngraph              INFO     ********************
2023-06-04 17:02:48.696 545:isIngraph              INFO     Best MCC:0.8136
2023-06-04 17:02:48.696 546:isIngraph              INFO     ********************
2023-06-04 17:02:48.698 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-04 17:02:57.968 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:02:57.969 581:isIngraph              INFO     Num examples = 36642
2023-06-04 17:02:57.969 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:03:29.915 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:03:29.915 629:isIngraph              INFO     eval_acc = 0.9224
2023-06-04 17:03:29.916 629:isIngraph              INFO     eval_f1 = 0.9268
2023-06-04 17:03:29.916 629:isIngraph              INFO     eval_mcc = 0.851
2023-06-04 17:03:29.916 629:isIngraph              INFO     eval_precision = 0.8769
2023-06-04 17:03:29.916 629:isIngraph              INFO     eval_recall = 0.9827
2023-06-04 17:03:29.916 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:03:29.916 522:isIngraph              INFO     ********************
2023-06-04 17:03:29.916 523:isIngraph              INFO     Best f1:0.9268
2023-06-04 17:03:29.916 524:isIngraph              INFO     ********************
2023-06-04 17:03:29.919 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-04 17:03:29.919 544:isIngraph              INFO     ********************
2023-06-04 17:03:29.919 545:isIngraph              INFO     Best MCC:0.851
2023-06-04 17:03:29.920 546:isIngraph              INFO     ********************
2023-06-04 17:03:29.921 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-04 17:03:39.191 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:03:39.191 581:isIngraph              INFO     Num examples = 36642
2023-06-04 17:03:39.191 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:04:11.071 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:04:11.071 629:isIngraph              INFO     eval_acc = 0.9265
2023-06-04 17:04:11.071 629:isIngraph              INFO     eval_f1 = 0.93
2023-06-04 17:04:11.071 629:isIngraph              INFO     eval_mcc = 0.8574
2023-06-04 17:04:11.071 629:isIngraph              INFO     eval_precision = 0.8872
2023-06-04 17:04:11.072 629:isIngraph              INFO     eval_recall = 0.9771
2023-06-04 17:04:11.072 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:04:11.072 522:isIngraph              INFO     ********************
2023-06-04 17:04:11.072 523:isIngraph              INFO     Best f1:0.93
2023-06-04 17:04:11.072 524:isIngraph              INFO     ********************
2023-06-04 17:04:11.110 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-04 17:04:11.111 544:isIngraph              INFO     ********************
2023-06-04 17:04:11.111 545:isIngraph              INFO     Best MCC:0.8574
2023-06-04 17:04:11.111 546:isIngraph              INFO     ********************
2023-06-04 17:04:11.133 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-04 17:04:20.310 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:04:20.310 581:isIngraph              INFO     Num examples = 36642
2023-06-04 17:04:20.311 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:04:53.103 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:04:53.103 629:isIngraph              INFO     eval_acc = 0.9336
2023-06-04 17:04:53.103 629:isIngraph              INFO     eval_f1 = 0.9362
2023-06-04 17:04:53.104 629:isIngraph              INFO     eval_mcc = 0.8702
2023-06-04 17:04:53.104 629:isIngraph              INFO     eval_precision = 0.9001
2023-06-04 17:04:53.104 629:isIngraph              INFO     eval_recall = 0.9754
2023-06-04 17:04:53.104 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:04:53.104 522:isIngraph              INFO     ********************
2023-06-04 17:04:53.104 523:isIngraph              INFO     Best f1:0.9362
2023-06-04 17:04:53.104 524:isIngraph              INFO     ********************
2023-06-04 17:04:53.122 539:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-f1/model.bin
2023-06-04 17:04:53.122 544:isIngraph              INFO     ********************
2023-06-04 17:04:53.122 545:isIngraph              INFO     Best MCC:0.8702
2023-06-04 17:04:53.122 546:isIngraph              INFO     ********************
2023-06-04 17:04:53.133 561:isIngraph              INFO   Saving model checkpoint to ../isInGraph/poj/plm/saved_unixcodermodels/1/ddg_12/checkpoint-best-mcc/model.bin
2023-06-04 17:05:02.318 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:05:02.319 581:isIngraph              INFO     Num examples = 36642
2023-06-04 17:05:02.319 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:05:34.217 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:05:34.218 629:isIngraph              INFO     eval_acc = 0.9345
2023-06-04 17:05:34.218 629:isIngraph              INFO     eval_f1 = 0.936
2023-06-04 17:05:34.218 629:isIngraph              INFO     eval_mcc = 0.8699
2023-06-04 17:05:34.218 629:isIngraph              INFO     eval_precision = 0.9156
2023-06-04 17:05:34.218 629:isIngraph              INFO     eval_recall = 0.9572
2023-06-04 17:05:34.218 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:05:43.489 580:isIngraph              INFO   ***** Running evaluation *****
2023-06-04 17:05:43.490 581:isIngraph              INFO     Num examples = 36642
2023-06-04 17:05:43.490 582:isIngraph              INFO     Batch size = 32
2023-06-04 17:06:14.795 627:isIngraph              INFO   ***** Eval results *****
2023-06-04 17:06:14.796 629:isIngraph              INFO     eval_acc = 0.9344
2023-06-04 17:06:14.796 629:isIngraph              INFO     eval_f1 = 0.9358
2023-06-04 17:06:14.796 629:isIngraph              INFO     eval_mcc = 0.8696
2023-06-04 17:06:14.796 629:isIngraph              INFO     eval_precision = 0.9157
2023-06-04 17:06:14.796 629:isIngraph              INFO     eval_recall = 0.9568
2023-06-04 17:06:14.796 629:isIngraph              INFO     eval_threshold = 0.5
2023-06-04 17:06:15.308 650:isIngraph              INFO   ***** Running Test *****
2023-06-04 17:06:15.308 651:isIngraph              INFO     Num examples = 36374
2023-06-04 17:06:15.308 652:isIngraph              INFO     Batch size = 32
2023-06-04 17:06:48.245 693:isIngraph              INFO   ***** Test results *****
2023-06-04 17:06:48.245 695:isIngraph              INFO     eval_acc = 0.9377
2023-06-04 17:06:48.245 695:isIngraph              INFO     eval_f1 = 0.9404
2023-06-04 17:06:48.246 695:isIngraph              INFO     eval_mcc = 0.8789
2023-06-04 17:06:48.246 695:isIngraph              INFO     eval_precision = 0.9018
2023-06-04 17:06:48.246 695:isIngraph              INFO     eval_recall = 0.9824
2023-06-04 17:06:48.246 695:isIngraph              INFO     eval_threshold = 0.5
