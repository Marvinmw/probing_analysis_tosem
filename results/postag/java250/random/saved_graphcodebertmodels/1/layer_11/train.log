[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=11, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.60719:   0%|          | 0/28 [00:01<?, ?it/s]epoch 0 loss 5.60719:   4%|▎         | 1/28 [00:01<00:33,  1.25s/it]epoch 0 loss 5.63836:   4%|▎         | 1/28 [00:01<00:33,  1.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.94it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.006[0m
[32m  eval_f1 = 0.0005[0m
[32m  eval_mcc = -0.0022[0m
[32m  eval_precision = 0.0009[0m
[32m  eval_recall = 0.0028[0m
[32m  ********************[0m
[32m  Best f1:0.0005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.63836:   7%|▋         | 2/28 [00:06<01:35,  3.69s/it]epoch 0 loss 5.61776:   7%|▋         | 2/28 [00:07<01:35,  3.69s/it]epoch 0 loss 5.61776:  11%|█         | 3/28 [00:07<00:54,  2.19s/it]epoch 0 loss 5.60678:  11%|█         | 3/28 [00:07<00:54,  2.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.70it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.70it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.70it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.94it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0135[0m
[32m  eval_f1 = 0.001[0m
[32m  eval_mcc = 0.0008[0m
[32m  eval_precision = 0.0037[0m
[32m  eval_recall = 0.0044[0m
[32m  ********************[0m
[32m  Best f1:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.60678:  14%|█▍        | 4/28 [00:13<01:31,  3.80s/it]epoch 0 loss 5.58265:  14%|█▍        | 4/28 [00:13<01:31,  3.80s/it]epoch 0 loss 5.58265:  18%|█▊        | 5/28 [00:13<00:59,  2.60s/it]epoch 0 loss 5.55201:  18%|█▊        | 5/28 [00:14<00:59,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.54it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.53it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.52it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.53it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.53it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.53it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.53it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.55it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.54it/s][A100%|██████████| 10/10 [00:03<00:00,  2.75it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0319[0m
[32m  eval_f1 = 0.0026[0m
[32m  eval_mcc = 0.0123[0m
[32m  eval_precision = 0.0041[0m
[32m  eval_recall = 0.0069[0m
[32m  ********************[0m
[32m  Best f1:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.55201:  21%|██▏       | 6/28 [00:21<01:32,  4.20s/it]epoch 0 loss 5.50976:  21%|██▏       | 6/28 [00:21<01:32,  4.20s/it]epoch 0 loss 5.50976:  25%|██▌       | 7/28 [00:21<01:02,  2.98s/it]epoch 0 loss 5.45925:  25%|██▌       | 7/28 [00:22<01:02,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.54it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.54it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.54it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.54it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.54it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.55it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.60it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.63it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.64it/s][A100%|██████████| 10/10 [00:03<00:00,  2.82it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0509[0m
[32m  eval_f1 = 0.004[0m
[32m  eval_mcc = 0.0296[0m
[32m  eval_precision = 0.0079[0m
[32m  eval_recall = 0.0106[0m
[32m  ********************[0m
[32m  Best f1:0.004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.45925:  29%|██▊       | 8/28 [00:28<01:22,  4.15s/it]epoch 0 loss 5.40572:  29%|██▊       | 8/28 [00:28<01:22,  4.15s/it]epoch 0 loss 5.40572:  32%|███▏      | 9/28 [00:28<00:56,  2.99s/it]epoch 0 loss 5.34558:  32%|███▏      | 9/28 [00:29<00:56,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.53it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.53it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.53it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.53it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.52it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.53it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.52it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.53it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.53it/s][A100%|██████████| 10/10 [00:03<00:00,  2.74it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0716[0m
[32m  eval_f1 = 0.0067[0m
[32m  eval_mcc = 0.0491[0m
[32m  eval_precision = 0.0091[0m
[32m  eval_recall = 0.0144[0m
[32m  ********************[0m
[32m  Best f1:0.0067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0491[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.34558:  36%|███▌      | 10/28 [00:35<01:16,  4.27s/it]epoch 0 loss 5.28356:  36%|███▌      | 10/28 [00:36<01:16,  4.27s/it]epoch 0 loss 5.28356:  39%|███▉      | 11/28 [00:36<00:52,  3.11s/it]epoch 0 loss 5.21506:  39%|███▉      | 11/28 [00:36<00:52,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.53it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.53it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.53it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.53it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.53it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.53it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.52it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.52it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.52it/s][A100%|██████████| 10/10 [00:03<00:00,  2.74it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0885[0m
[32m  eval_f1 = 0.009[0m
[32m  eval_mcc = 0.0551[0m
[32m  eval_precision = 0.0094[0m
[32m  eval_recall = 0.0174[0m
[32m  ********************[0m
[32m  Best f1:0.009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.21506:  43%|████▎     | 12/28 [00:43<01:10,  4.41s/it]epoch 0 loss 5.14756:  43%|████▎     | 12/28 [00:44<01:10,  4.41s/it]epoch 0 loss 5.14756:  46%|████▋     | 13/28 [00:44<00:48,  3.21s/it]epoch 0 loss 5.07677:  46%|████▋     | 13/28 [00:44<00:48,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.55it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.64it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.66it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.68it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.69it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.70it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.70it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.70it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.70it/s][A100%|██████████| 10/10 [00:03<00:00,  2.92it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1032[0m
[32m  eval_f1 = 0.0085[0m
[32m  eval_mcc = 0.0489[0m
[32m  eval_precision = 0.01[0m
[32m  eval_recall = 0.0166[0m

epoch 0 loss 5.07677:  50%|█████     | 14/28 [00:48<00:47,  3.42s/it]epoch 0 loss 5.00163:  50%|█████     | 14/28 [00:48<00:47,  3.42s/it]epoch 0 loss 5.00163:  54%|█████▎    | 15/28 [00:48<00:32,  2.51s/it]epoch 0 loss 4.92451:  54%|█████▎    | 15/28 [00:48<00:32,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1066[0m
[32m  eval_f1 = 0.0068[0m
[32m  eval_mcc = 0.0359[0m
[32m  eval_precision = 0.0132[0m
[32m  eval_recall = 0.0127[0m

epoch 0 loss 4.92451:  57%|█████▋    | 16/28 [00:52<00:34,  2.90s/it]epoch 0 loss 4.84997:  57%|█████▋    | 16/28 [00:52<00:34,  2.90s/it]epoch 0 loss 4.84997:  61%|██████    | 17/28 [00:52<00:23,  2.15s/it]epoch 0 loss 4.77895:  61%|██████    | 17/28 [00:53<00:23,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1123[0m
[32m  eval_f1 = 0.0056[0m
[32m  eval_mcc = 0.039[0m
[32m  eval_precision = 0.018[0m
[32m  eval_recall = 0.012[0m

epoch 0 loss 4.77895:  64%|██████▍   | 18/28 [00:56<00:26,  2.65s/it]epoch 0 loss 4.71041:  64%|██████▍   | 18/28 [00:56<00:26,  2.65s/it]epoch 0 loss 4.71041:  68%|██████▊   | 19/28 [00:56<00:17,  1.98s/it]epoch 0 loss 4.64934:  68%|██████▊   | 19/28 [00:57<00:17,  1.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1373[0m
[32m  eval_f1 = 0.0087[0m
[32m  eval_mcc = 0.0676[0m
[32m  eval_precision = 0.0303[0m
[32m  eval_recall = 0.0149[0m
[32m  ********************[0m
[32m  Best MCC:0.0676[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.64934:  71%|███████▏  | 20/28 [01:07<00:36,  4.55s/it]epoch 0 loss 4.58891:  71%|███████▏  | 20/28 [01:07<00:36,  4.55s/it]epoch 0 loss 4.58891:  75%|███████▌  | 21/28 [01:07<00:23,  3.31s/it]epoch 0 loss 4.52438:  75%|███████▌  | 21/28 [01:08<00:23,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2031[0m
[32m  eval_f1 = 0.0164[0m
[32m  eval_mcc = 0.1399[0m
[32m  eval_precision = 0.0335[0m
[32m  eval_recall = 0.0219[0m
[32m  ********************[0m
[32m  Best f1:0.0164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.52438:  79%|███████▊  | 22/28 [01:34<01:02, 10.41s/it]epoch 0 loss 4.46799:  79%|███████▊  | 22/28 [01:35<01:02, 10.41s/it]epoch 0 loss 4.46799:  82%|████████▏ | 23/28 [01:35<00:37,  7.41s/it]epoch 0 loss 4.41304:  82%|████████▏ | 23/28 [01:35<00:37,  7.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.275[0m
[32m  eval_f1 = 0.0235[0m
[32m  eval_mcc = 0.216[0m
[32m  eval_precision = 0.0392[0m
[32m  eval_recall = 0.0303[0m
[32m  ********************[0m
[32m  Best f1:0.0235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.41304:  86%|████████▌ | 24/28 [01:50<00:39,  9.83s/it]epoch 0 loss 4.35975:  86%|████████▌ | 24/28 [01:51<00:39,  9.83s/it]epoch 0 loss 4.35975:  89%|████████▉ | 25/28 [01:51<00:21,  7.01s/it]epoch 0 loss 4.30094:  89%|████████▉ | 25/28 [01:51<00:21,  7.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2572[0m
[32m  eval_f1 = 0.0295[0m
[32m  eval_mcc = 0.2247[0m
[32m  eval_precision = 0.0888[0m
[32m  eval_recall = 0.0316[0m
[32m  ********************[0m
[32m  Best f1:0.0295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.30094:  93%|█████████▎| 26/28 [02:10<00:21, 10.71s/it]epoch 0 loss 4.24697:  93%|█████████▎| 26/28 [02:10<00:21, 10.71s/it]epoch 0 loss 4.24697:  96%|█████████▋| 27/28 [02:10<00:07,  7.63s/it]epoch 0 loss 4.19996:  96%|█████████▋| 27/28 [02:11<00:07,  7.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2744[0m
[32m  eval_f1 = 0.0649[0m
[32m  eval_mcc = 0.2706[0m
[32m  eval_precision = 0.1393[0m
[32m  eval_recall = 0.058[0m
[32m  ********************[0m
[32m  Best f1:0.0649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2706[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.19996: 100%|██████████| 28/28 [02:31<00:00, 11.43s/it]epoch 0 loss 4.19996: 100%|██████████| 28/28 [02:31<00:00,  5.40s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.76018:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.76018:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.67406:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.349[0m
[32m  eval_f1 = 0.104[0m
[32m  eval_mcc = 0.3515[0m
[32m  eval_precision = 0.1702[0m
[32m  eval_recall = 0.0895[0m
[32m  ********************[0m
[32m  Best f1:0.104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.67406:   7%|▋         | 2/28 [00:17<04:22, 10.09s/it]epoch 1 loss 2.61756:   7%|▋         | 2/28 [00:17<04:22, 10.09s/it]epoch 1 loss 2.61756:  11%|█         | 3/28 [00:17<02:21,  5.68s/it]epoch 1 loss 2.60323:  11%|█         | 3/28 [00:18<02:21,  5.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4479[0m
[32m  eval_f1 = 0.1313[0m
[32m  eval_mcc = 0.4324[0m
[32m  eval_precision = 0.1801[0m
[32m  eval_recall = 0.1222[0m
[32m  ********************[0m
[32m  Best f1:0.1313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.60323:  14%|█▍        | 4/28 [00:52<06:50, 17.11s/it]epoch 1 loss 2.59164:  14%|█▍        | 4/28 [00:52<06:50, 17.11s/it]epoch 1 loss 2.59164:  18%|█▊        | 5/28 [00:52<04:15, 11.09s/it]epoch 1 loss 2.56392:  18%|█▊        | 5/28 [00:53<04:15, 11.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5226[0m
[32m  eval_f1 = 0.1502[0m
[32m  eval_mcc = 0.4947[0m
[32m  eval_precision = 0.2035[0m
[32m  eval_recall = 0.1442[0m
[32m  ********************[0m
[32m  Best f1:0.1502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4947[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.56392:  21%|██▏       | 6/28 [01:16<05:41, 15.54s/it]epoch 1 loss 2.53502:  21%|██▏       | 6/28 [01:17<05:41, 15.54s/it]epoch 1 loss 2.53502:  25%|██▌       | 7/28 [01:17<03:42, 10.60s/it]epoch 1 loss 2.51286:  25%|██▌       | 7/28 [01:17<03:42, 10.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5418[0m
[32m  eval_f1 = 0.1579[0m
[32m  eval_mcc = 0.5144[0m
[32m  eval_precision = 0.2043[0m
[32m  eval_recall = 0.1491[0m
[32m  ********************[0m
[32m  Best f1:0.1579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.51286:  29%|██▊       | 8/28 [01:38<04:40, 14.04s/it]epoch 1 loss 2.50832:  29%|██▊       | 8/28 [01:39<04:40, 14.04s/it]epoch 1 loss 2.50832:  32%|███▏      | 9/28 [01:39<03:05,  9.78s/it]epoch 1 loss 2.48535:  32%|███▏      | 9/28 [01:39<03:05,  9.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5522[0m
[32m  eval_f1 = 0.1628[0m
[32m  eval_mcc = 0.5267[0m
[32m  eval_precision = 0.2078[0m
[32m  eval_recall = 0.1524[0m
[32m  ********************[0m
[32m  Best f1:0.1628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.48535:  36%|███▌      | 10/28 [02:04<04:22, 14.57s/it]epoch 1 loss 2.46126:  36%|███▌      | 10/28 [02:04<04:22, 14.57s/it]epoch 1 loss 2.46126:  39%|███▉      | 11/28 [02:04<02:54, 10.24s/it]epoch 1 loss 2.42993:  39%|███▉      | 11/28 [02:05<02:54, 10.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5605[0m
[32m  eval_f1 = 0.1654[0m
[32m  eval_mcc = 0.5358[0m
[32m  eval_precision = 0.2082[0m
[32m  eval_recall = 0.1564[0m
[32m  ********************[0m
[32m  Best f1:0.1654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42993:  43%|████▎     | 12/28 [02:26<03:39, 13.74s/it]epoch 1 loss 2.40252:  43%|████▎     | 12/28 [02:27<03:39, 13.74s/it]epoch 1 loss 2.40252:  46%|████▋     | 13/28 [02:27<02:25,  9.70s/it]epoch 1 loss 2.38519:  46%|████▋     | 13/28 [02:27<02:25,  9.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5659[0m
[32m  eval_f1 = 0.1741[0m
[32m  eval_mcc = 0.5402[0m
[32m  eval_precision = 0.2158[0m
[32m  eval_recall = 0.1662[0m
[32m  ********************[0m
[32m  Best f1:0.1741[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.38519:  50%|█████     | 14/28 [02:47<03:00, 12.87s/it]epoch 1 loss 2.36105:  50%|█████     | 14/28 [02:47<03:00, 12.87s/it]epoch 1 loss 2.36105:  54%|█████▎    | 15/28 [02:47<01:58,  9.12s/it]epoch 1 loss 2.34282:  54%|█████▎    | 15/28 [02:48<01:58,  9.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5667[0m
[32m  eval_f1 = 0.1743[0m
[32m  eval_mcc = 0.541[0m
[32m  eval_precision = 0.211[0m
[32m  eval_recall = 0.1685[0m
[32m  ********************[0m
[32m  Best f1:0.1743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.541[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.34282:  57%|█████▋    | 16/28 [03:09<02:36, 13.02s/it]epoch 1 loss 2.31676:  57%|█████▋    | 16/28 [03:10<02:36, 13.02s/it]epoch 1 loss 2.31676:  61%|██████    | 17/28 [03:10<01:41,  9.23s/it]epoch 1 loss 2.29732:  61%|██████    | 17/28 [03:10<01:41,  9.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5734[0m
[32m  eval_f1 = 0.1789[0m
[32m  eval_mcc = 0.5495[0m
[32m  eval_precision = 0.2232[0m
[32m  eval_recall = 0.1731[0m
[32m  ********************[0m
[32m  Best f1:0.1789[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29732:  64%|██████▍   | 18/28 [03:35<02:20, 14.03s/it]epoch 1 loss 2.27185:  64%|██████▍   | 18/28 [03:35<02:20, 14.03s/it]epoch 1 loss 2.27185:  68%|██████▊   | 19/28 [03:35<01:29,  9.94s/it]epoch 1 loss 2.27025:  68%|██████▊   | 19/28 [03:36<01:29,  9.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.79it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.79it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5797[0m
[32m  eval_f1 = 0.1832[0m
[32m  eval_mcc = 0.5581[0m
[32m  eval_precision = 0.2164[0m
[32m  eval_recall = 0.1767[0m
[32m  ********************[0m
[32m  Best f1:0.1832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27025:  71%|███████▏  | 20/28 [04:11<02:21, 17.74s/it]epoch 1 loss 2.25247:  71%|███████▏  | 20/28 [04:12<02:21, 17.74s/it]epoch 1 loss 2.25247:  75%|███████▌  | 21/28 [04:12<01:27, 12.54s/it]epoch 1 loss 2.23531:  75%|███████▌  | 21/28 [04:12<01:27, 12.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5851[0m
[32m  eval_f1 = 0.1847[0m
[32m  eval_mcc = 0.5628[0m
[32m  eval_precision = 0.2247[0m
[32m  eval_recall = 0.1783[0m
[32m  ********************[0m
[32m  Best f1:0.1847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23531:  79%|███████▊  | 22/28 [04:33<01:31, 15.20s/it]epoch 1 loss 2.21531:  79%|███████▊  | 22/28 [04:33<01:31, 15.20s/it]epoch 1 loss 2.21531:  82%|████████▏ | 23/28 [04:33<00:53, 10.77s/it]epoch 1 loss 2.20018:  82%|████████▏ | 23/28 [04:34<00:53, 10.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.62it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5882[0m
[32m  eval_f1 = 0.1865[0m
[32m  eval_mcc = 0.564[0m
[32m  eval_precision = 0.2379[0m
[32m  eval_recall = 0.1799[0m
[32m  ********************[0m
[32m  Best f1:0.1865[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.564[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20018:  86%|████████▌ | 24/28 [04:56<00:57, 14.38s/it]epoch 1 loss 2.18192:  86%|████████▌ | 24/28 [04:57<00:57, 14.38s/it]epoch 1 loss 2.18192:  89%|████████▉ | 25/28 [04:57<00:30, 10.19s/it]epoch 1 loss 2.16608:  89%|████████▉ | 25/28 [04:57<00:30, 10.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5882[0m
[32m  eval_f1 = 0.1881[0m
[32m  eval_mcc = 0.5631[0m
[32m  eval_precision = 0.2452[0m
[32m  eval_recall = 0.1809[0m
[32m  ********************[0m
[32m  Best f1:0.1881[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.16608:  93%|█████████▎| 26/28 [05:08<00:21, 10.65s/it]epoch 1 loss 2.15252:  93%|█████████▎| 26/28 [05:09<00:21, 10.65s/it]epoch 1 loss 2.15252:  96%|█████████▋| 27/28 [05:09<00:07,  7.58s/it]epoch 1 loss 2.13834:  96%|█████████▋| 27/28 [05:09<00:07,  7.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5921[0m
[32m  eval_f1 = 0.1977[0m
[32m  eval_mcc = 0.5671[0m
[32m  eval_precision = 0.2529[0m
[32m  eval_recall = 0.1885[0m
[32m  ********************[0m
[32m  Best f1:0.1977[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5671[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13834: 100%|██████████| 28/28 [05:32<00:00, 12.25s/it]epoch 1 loss 2.13834: 100%|██████████| 28/28 [05:32<00:00, 11.88s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.546:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.546:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 2 loss 1.68113:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5948[0m
[32m  eval_f1 = 0.2062[0m
[32m  eval_mcc = 0.5703[0m
[32m  eval_precision = 0.2585[0m
[32m  eval_recall = 0.1982[0m
[32m  ********************[0m
[32m  Best f1:0.2062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5703[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.68113:   7%|▋         | 2/28 [00:24<06:06, 14.11s/it]epoch 2 loss 1.67718:   7%|▋         | 2/28 [00:24<06:06, 14.11s/it]epoch 2 loss 1.67718:  11%|█         | 3/28 [00:24<03:16,  7.86s/it]epoch 2 loss 1.66776:  11%|█         | 3/28 [00:24<03:16,  7.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6009[0m
[32m  eval_f1 = 0.2133[0m
[32m  eval_mcc = 0.5773[0m
[32m  eval_precision = 0.2763[0m
[32m  eval_recall = 0.2048[0m
[32m  ********************[0m
[32m  Best f1:0.2133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.66776:  14%|█▍        | 4/28 [00:49<05:50, 14.60s/it]epoch 2 loss 1.65992:  14%|█▍        | 4/28 [00:49<05:50, 14.60s/it]epoch 2 loss 1.65992:  18%|█▊        | 5/28 [00:49<03:38,  9.48s/it]epoch 2 loss 1.68349:  18%|█▊        | 5/28 [00:50<03:38,  9.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6039[0m
[32m  eval_f1 = 0.2212[0m
[32m  eval_mcc = 0.582[0m
[32m  eval_precision = 0.2876[0m
[32m  eval_recall = 0.2104[0m
[32m  ********************[0m
[32m  Best f1:0.2212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.68349:  21%|██▏       | 6/28 [01:14<05:19, 14.51s/it]epoch 2 loss 1.72622:  21%|██▏       | 6/28 [01:14<05:19, 14.51s/it]epoch 2 loss 1.72622:  25%|██▌       | 7/28 [01:14<03:27,  9.90s/it]epoch 2 loss 1.71972:  25%|██▌       | 7/28 [01:14<03:27,  9.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.52it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6054[0m
[32m  eval_f1 = 0.2262[0m
[32m  eval_mcc = 0.585[0m
[32m  eval_precision = 0.2993[0m
[32m  eval_recall = 0.2151[0m
[32m  ********************[0m
[32m  Best f1:0.2262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.71972:  29%|██▊       | 8/28 [01:41<05:07, 15.40s/it]epoch 2 loss 1.72227:  29%|██▊       | 8/28 [01:42<05:07, 15.40s/it]epoch 2 loss 1.72227:  32%|███▏      | 9/28 [01:42<03:23, 10.71s/it]epoch 2 loss 1.7095:  32%|███▏      | 9/28 [01:42<03:23, 10.71s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.79it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6059[0m
[32m  eval_f1 = 0.2297[0m
[32m  eval_mcc = 0.5856[0m
[32m  eval_precision = 0.3175[0m
[32m  eval_recall = 0.2173[0m
[32m  ********************[0m
[32m  Best f1:0.2297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5856[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.7095:  36%|███▌      | 10/28 [02:15<05:20, 17.79s/it]epoch 2 loss 1.68694:  36%|███▌      | 10/28 [02:16<05:20, 17.79s/it]epoch 2 loss 1.68694:  39%|███▉      | 11/28 [02:16<03:32, 12.47s/it]epoch 2 loss 1.68637:  39%|███▉      | 11/28 [02:16<03:32, 12.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6085[0m
[32m  eval_f1 = 0.2357[0m
[32m  eval_mcc = 0.5866[0m
[32m  eval_precision = 0.3285[0m
[32m  eval_recall = 0.2218[0m
[32m  ********************[0m
[32m  Best f1:0.2357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5866[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.68637:  43%|████▎     | 12/28 [02:41<04:22, 16.39s/it]epoch 2 loss 1.67436:  43%|████▎     | 12/28 [02:41<04:22, 16.39s/it]epoch 2 loss 1.67436:  46%|████▋     | 13/28 [02:41<02:53, 11.55s/it]epoch 2 loss 1.66507:  46%|████▋     | 13/28 [02:42<02:53, 11.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.79it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.79it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.79it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6082[0m
[32m  eval_f1 = 0.2408[0m
[32m  eval_mcc = 0.5852[0m
[32m  eval_precision = 0.3253[0m
[32m  eval_recall = 0.2256[0m
[32m  ********************[0m
[32m  Best f1:0.2408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.66507:  50%|█████     | 14/28 [02:55<02:49, 12.12s/it]epoch 2 loss 1.67292:  50%|█████     | 14/28 [02:55<02:49, 12.12s/it]epoch 2 loss 1.67292:  54%|█████▎    | 15/28 [02:55<01:51,  8.60s/it]epoch 2 loss 1.66037:  54%|█████▎    | 15/28 [02:56<01:51,  8.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6096[0m
[32m  eval_f1 = 0.2436[0m
[32m  eval_mcc = 0.5862[0m
[32m  eval_precision = 0.3211[0m
[32m  eval_recall = 0.2285[0m
[32m  ********************[0m
[32m  Best f1:0.2436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.66037:  57%|█████▋    | 16/28 [03:07<01:53,  9.43s/it]epoch 2 loss 1.65282:  57%|█████▋    | 16/28 [03:07<01:53,  9.43s/it]epoch 2 loss 1.65282:  61%|██████    | 17/28 [03:07<01:13,  6.72s/it]epoch 2 loss 1.64151:  61%|██████    | 17/28 [03:07<01:13,  6.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.612[0m
[32m  eval_f1 = 0.2453[0m
[32m  eval_mcc = 0.5892[0m
[32m  eval_precision = 0.3195[0m
[32m  eval_recall = 0.2297[0m
[32m  ********************[0m
[32m  Best f1:0.2453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64151:  64%|██████▍   | 18/28 [03:17<01:15,  7.56s/it]epoch 2 loss 1.64199:  64%|██████▍   | 18/28 [03:17<01:15,  7.56s/it]epoch 2 loss 1.64199:  68%|██████▊   | 19/28 [03:17<00:48,  5.41s/it]epoch 2 loss 1.6385:  68%|██████▊   | 19/28 [03:17<00:48,  5.41s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6142[0m
[32m  eval_f1 = 0.2475[0m
[32m  eval_mcc = 0.5921[0m
[32m  eval_precision = 0.3252[0m
[32m  eval_recall = 0.2318[0m
[32m  ********************[0m
[32m  Best f1:0.2475[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.6385:  71%|███████▏  | 20/28 [03:28<00:56,  7.07s/it]epoch 2 loss 1.63191:  71%|███████▏  | 20/28 [03:28<00:56,  7.07s/it]epoch 2 loss 1.63191:  75%|███████▌  | 21/28 [03:28<00:35,  5.07s/it]epoch 2 loss 1.63367:  75%|███████▌  | 21/28 [03:29<00:35,  5.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6136[0m
[32m  eval_f1 = 0.2469[0m
[32m  eval_mcc = 0.5922[0m
[32m  eval_precision = 0.3349[0m
[32m  eval_recall = 0.2322[0m
[32m  ********************[0m
[32m  Best MCC:0.5922[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63367:  79%|███████▊  | 22/28 [03:36<00:35,  5.97s/it]epoch 2 loss 1.63097:  79%|███████▊  | 22/28 [03:37<00:35,  5.97s/it]epoch 2 loss 1.63097:  82%|████████▏ | 23/28 [03:37<00:21,  4.31s/it]epoch 2 loss 1.62453:  82%|████████▏ | 23/28 [03:37<00:21,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6144[0m
[32m  eval_f1 = 0.2511[0m
[32m  eval_mcc = 0.5934[0m
[32m  eval_precision = 0.335[0m
[32m  eval_recall = 0.2363[0m
[32m  ********************[0m
[32m  Best f1:0.2511[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62453:  86%|████████▌ | 24/28 [03:48<00:25,  6.48s/it]epoch 2 loss 1.62134:  86%|████████▌ | 24/28 [03:49<00:25,  6.48s/it]epoch 2 loss 1.62134:  89%|████████▉ | 25/28 [03:49<00:13,  4.67s/it]epoch 2 loss 1.61575:  89%|████████▉ | 25/28 [03:49<00:13,  4.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6167[0m
[32m  eval_f1 = 0.2535[0m
[32m  eval_mcc = 0.5956[0m
[32m  eval_precision = 0.3555[0m
[32m  eval_recall = 0.2375[0m
[32m  ********************[0m
[32m  Best f1:0.2535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5956[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61575:  93%|█████████▎| 26/28 [04:00<00:13,  6.69s/it]epoch 2 loss 1.61682:  93%|█████████▎| 26/28 [04:01<00:13,  6.69s/it]epoch 2 loss 1.61682:  96%|█████████▋| 27/28 [04:01<00:04,  4.81s/it]epoch 2 loss 1.61922:  96%|█████████▋| 27/28 [04:01<00:04,  4.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6199[0m
[32m  eval_f1 = 0.2589[0m
[32m  eval_mcc = 0.5983[0m
[32m  eval_precision = 0.3654[0m
[32m  eval_recall = 0.2417[0m
[32m  ********************[0m
[32m  Best f1:0.2589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61922: 100%|██████████| 28/28 [04:12<00:00,  6.80s/it]epoch 2 loss 1.61922: 100%|██████████| 28/28 [04:12<00:00,  9.02s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.42263:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.42263:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 3 loss 1.48611:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6218[0m
[32m  eval_f1 = 0.2644[0m
[32m  eval_mcc = 0.5996[0m
[32m  eval_precision = 0.3762[0m
[32m  eval_recall = 0.2466[0m
[32m  ********************[0m
[32m  Best f1:0.2644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48611:   7%|▋         | 2/28 [00:09<02:16,  5.24s/it]epoch 3 loss 1.52142:   7%|▋         | 2/28 [00:09<02:16,  5.24s/it]epoch 3 loss 1.52142:  11%|█         | 3/28 [00:09<01:16,  3.04s/it]epoch 3 loss 1.50264:  11%|█         | 3/28 [00:09<01:16,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6235[0m
[32m  eval_f1 = 0.2674[0m
[32m  eval_mcc = 0.6011[0m
[32m  eval_precision = 0.3891[0m
[32m  eval_recall = 0.2499[0m
[32m  ********************[0m
[32m  Best f1:0.2674[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50264:  14%|█▍        | 4/28 [00:18<02:09,  5.38s/it]epoch 3 loss 1.46938:  14%|█▍        | 4/28 [00:18<02:09,  5.38s/it]epoch 3 loss 1.46938:  18%|█▊        | 5/28 [00:18<01:22,  3.60s/it]epoch 3 loss 1.4834:  18%|█▊        | 5/28 [00:19<01:22,  3.60s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6249[0m
[32m  eval_f1 = 0.2702[0m
[32m  eval_mcc = 0.6026[0m
[32m  eval_precision = 0.3786[0m
[32m  eval_recall = 0.2512[0m
[32m  ********************[0m
[32m  Best f1:0.2702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4834:  21%|██▏       | 6/28 [00:31<02:26,  6.68s/it]epoch 3 loss 1.49089:  21%|██▏       | 6/28 [00:31<02:26,  6.68s/it]epoch 3 loss 1.49089:  25%|██▌       | 7/28 [00:31<01:37,  4.64s/it]epoch 3 loss 1.50957:  25%|██▌       | 7/28 [00:32<01:37,  4.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6268[0m
[32m  eval_f1 = 0.2725[0m
[32m  eval_mcc = 0.6049[0m
[32m  eval_precision = 0.3785[0m
[32m  eval_recall = 0.2524[0m
[32m  ********************[0m
[32m  Best f1:0.2725[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50957:  29%|██▊       | 8/28 [00:44<02:26,  7.30s/it]epoch 3 loss 1.51439:  29%|██▊       | 8/28 [00:45<02:26,  7.30s/it]epoch 3 loss 1.51439:  32%|███▏      | 9/28 [00:45<01:37,  5.15s/it]epoch 3 loss 1.51221:  32%|███▏      | 9/28 [00:45<01:37,  5.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6277[0m
[32m  eval_f1 = 0.2747[0m
[32m  eval_mcc = 0.6063[0m
[32m  eval_precision = 0.378[0m
[32m  eval_recall = 0.2537[0m
[32m  ********************[0m
[32m  Best f1:0.2747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.51221:  36%|███▌      | 10/28 [00:57<02:10,  7.24s/it]epoch 3 loss 1.50458:  36%|███▌      | 10/28 [00:57<02:10,  7.24s/it]epoch 3 loss 1.50458:  39%|███▉      | 11/28 [00:57<01:27,  5.16s/it]epoch 3 loss 1.50142:  39%|███▉      | 11/28 [00:58<01:27,  5.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6281[0m
[32m  eval_f1 = 0.2747[0m
[32m  eval_mcc = 0.6074[0m
[32m  eval_precision = 0.379[0m
[32m  eval_recall = 0.2531[0m
[32m  ********************[0m
[32m  Best f1:0.2747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50142:  43%|████▎     | 12/28 [01:09<01:56,  7.31s/it]epoch 3 loss 1.50686:  43%|████▎     | 12/28 [01:10<01:56,  7.31s/it]epoch 3 loss 1.50686:  46%|████▋     | 13/28 [01:10<01:18,  5.22s/it]epoch 3 loss 1.50305:  46%|████▋     | 13/28 [01:10<01:18,  5.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6291[0m
[32m  eval_f1 = 0.2815[0m
[32m  eval_mcc = 0.6088[0m
[32m  eval_precision = 0.3888[0m
[32m  eval_recall = 0.2585[0m
[32m  ********************[0m
[32m  Best f1:0.2815[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50305:  50%|█████     | 14/28 [01:22<01:42,  7.33s/it]epoch 3 loss 1.50122:  50%|█████     | 14/28 [01:23<01:42,  7.33s/it]epoch 3 loss 1.50122:  54%|█████▎    | 15/28 [01:23<01:08,  5.25s/it]epoch 3 loss 1.50382:  54%|█████▎    | 15/28 [01:23<01:08,  5.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6296[0m
[32m  eval_f1 = 0.2832[0m
[32m  eval_mcc = 0.6092[0m
[32m  eval_precision = 0.3974[0m
[32m  eval_recall = 0.2603[0m
[32m  ********************[0m
[32m  Best f1:0.2832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50382:  57%|█████▋    | 16/28 [01:33<01:22,  6.85s/it]epoch 3 loss 1.5088:  57%|█████▋    | 16/28 [01:33<01:22,  6.85s/it] epoch 3 loss 1.5088:  61%|██████    | 17/28 [01:33<00:54,  4.91s/it]epoch 3 loss 1.51649:  61%|██████    | 17/28 [01:34<00:54,  4.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6313[0m
[32m  eval_f1 = 0.2864[0m
[32m  eval_mcc = 0.6107[0m
[32m  eval_precision = 0.4026[0m
[32m  eval_recall = 0.2633[0m
[32m  ********************[0m
[32m  Best f1:0.2864[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.51649:  64%|██████▍   | 18/28 [01:42<00:58,  5.87s/it]epoch 3 loss 1.50615:  64%|██████▍   | 18/28 [01:42<00:58,  5.87s/it]epoch 3 loss 1.50615:  68%|██████▊   | 19/28 [01:42<00:38,  4.23s/it]epoch 3 loss 1.50729:  68%|██████▊   | 19/28 [01:42<00:38,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6335[0m
[32m  eval_f1 = 0.288[0m
[32m  eval_mcc = 0.6128[0m
[32m  eval_precision = 0.4031[0m
[32m  eval_recall = 0.265[0m
[32m  ********************[0m
[32m  Best f1:0.288[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50729:  71%|███████▏  | 20/28 [01:50<00:43,  5.50s/it]epoch 3 loss 1.4994:  71%|███████▏  | 20/28 [01:51<00:43,  5.50s/it] epoch 3 loss 1.4994:  75%|███████▌  | 21/28 [01:51<00:27,  3.97s/it]epoch 3 loss 1.49746:  75%|███████▌  | 21/28 [01:51<00:27,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6356[0m
[32m  eval_f1 = 0.2911[0m
[32m  eval_mcc = 0.6149[0m
[32m  eval_precision = 0.4024[0m
[32m  eval_recall = 0.268[0m
[32m  ********************[0m
[32m  Best f1:0.2911[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.49746:  79%|███████▊  | 22/28 [02:00<00:33,  5.56s/it]epoch 3 loss 1.4989:  79%|███████▊  | 22/28 [02:01<00:33,  5.56s/it] epoch 3 loss 1.4989:  82%|████████▏ | 23/28 [02:01<00:20,  4.02s/it]epoch 3 loss 1.50059:  82%|████████▏ | 23/28 [02:01<00:20,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6362[0m
[32m  eval_f1 = 0.2917[0m
[32m  eval_mcc = 0.6157[0m
[32m  eval_precision = 0.4104[0m
[32m  eval_recall = 0.2686[0m
[32m  ********************[0m
[32m  Best f1:0.2917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50059:  86%|████████▌ | 24/28 [02:13<00:26,  6.66s/it]epoch 3 loss 1.50016:  86%|████████▌ | 24/28 [02:14<00:26,  6.66s/it]epoch 3 loss 1.50016:  89%|████████▉ | 25/28 [02:14<00:14,  4.79s/it]epoch 3 loss 1.49868:  89%|████████▉ | 25/28 [02:14<00:14,  4.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6371[0m
[32m  eval_f1 = 0.2921[0m
[32m  eval_mcc = 0.6169[0m
[32m  eval_precision = 0.4035[0m
[32m  eval_recall = 0.2689[0m
[32m  ********************[0m
[32m  Best f1:0.2921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.49868:  93%|█████████▎| 26/28 [02:28<00:15,  7.62s/it]epoch 3 loss 1.49157:  93%|█████████▎| 26/28 [02:28<00:15,  7.62s/it]epoch 3 loss 1.49157:  96%|█████████▋| 27/28 [02:28<00:05,  5.47s/it]epoch 3 loss 1.4836:  96%|█████████▋| 27/28 [02:29<00:05,  5.47s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6375[0m
[32m  eval_f1 = 0.2939[0m
[32m  eval_mcc = 0.6174[0m
[32m  eval_precision = 0.4058[0m
[32m  eval_recall = 0.27[0m
[32m  ********************[0m
[32m  Best f1:0.2939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6174[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4836: 100%|██████████| 28/28 [02:47<00:00,  9.36s/it]epoch 3 loss 1.4836: 100%|██████████| 28/28 [02:47<00:00,  5.98s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.4034:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.4034:   4%|▎         | 1/28 [00:00<00:13,  1.99it/s]epoch 4 loss 1.45738:   4%|▎         | 1/28 [00:00<00:13,  1.99it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.43it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.43it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.43it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.43it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.43it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.43it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.2948[0m
[32m  eval_mcc = 0.6172[0m
[32m  eval_precision = 0.4091[0m
[32m  eval_recall = 0.2703[0m
[32m  ********************[0m
[32m  Best f1:0.2948[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.45738:   7%|▋         | 2/28 [00:08<02:15,  5.20s/it]epoch 4 loss 1.47742:   7%|▋         | 2/28 [00:09<02:15,  5.20s/it]epoch 4 loss 1.47742:  11%|█         | 3/28 [00:09<01:16,  3.05s/it]epoch 4 loss 1.50089:  11%|█         | 3/28 [00:09<01:16,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.43it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.43it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.43it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.43it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.43it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6371[0m
[32m  eval_f1 = 0.2953[0m
[32m  eval_mcc = 0.6172[0m
[32m  eval_precision = 0.419[0m
[32m  eval_recall = 0.2704[0m
[32m  ********************[0m
[32m  Best f1:0.2953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.50089:  14%|█▍        | 4/28 [00:17<02:04,  5.20s/it]epoch 4 loss 1.45713:  14%|█▍        | 4/28 [00:18<02:04,  5.20s/it]epoch 4 loss 1.45713:  18%|█▊        | 5/28 [00:18<01:20,  3.51s/it]epoch 4 loss 1.43467:  18%|█▊        | 5/28 [00:18<01:20,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6368[0m
[32m  eval_f1 = 0.2961[0m
[32m  eval_mcc = 0.6169[0m
[32m  eval_precision = 0.4218[0m
[32m  eval_recall = 0.2705[0m
[32m  ********************[0m
[32m  Best f1:0.2961[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.43467:  21%|██▏       | 6/28 [00:26<01:52,  5.12s/it]epoch 4 loss 1.44312:  21%|██▏       | 6/28 [00:27<01:52,  5.12s/it]epoch 4 loss 1.44312:  25%|██▌       | 7/28 [00:27<01:15,  3.61s/it]epoch 4 loss 1.4499:  25%|██▌       | 7/28 [00:27<01:15,  3.61s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.43it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.43it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.43it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.43it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.43it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6366[0m
[32m  eval_f1 = 0.2959[0m
[32m  eval_mcc = 0.6166[0m
[32m  eval_precision = 0.4114[0m
[32m  eval_recall = 0.2704[0m

epoch 4 loss 1.4499:  29%|██▊       | 8/28 [00:31<01:16,  3.84s/it]epoch 4 loss 1.44101:  29%|██▊       | 8/28 [00:32<01:16,  3.84s/it]epoch 4 loss 1.44101:  32%|███▏      | 9/28 [00:32<00:52,  2.78s/it]epoch 4 loss 1.43771:  32%|███▏      | 9/28 [00:32<00:52,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.43it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.43it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.43it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.43it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.43it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6366[0m
[32m  eval_f1 = 0.2958[0m
[32m  eval_mcc = 0.6163[0m
[32m  eval_precision = 0.4115[0m
[32m  eval_recall = 0.2704[0m

epoch 4 loss 1.43771:  36%|███▌      | 10/28 [00:36<00:58,  3.26s/it]epoch 4 loss 1.43169:  36%|███▌      | 10/28 [00:36<00:58,  3.26s/it]epoch 4 loss 1.43169:  39%|███▉      | 11/28 [00:36<00:40,  2.40s/it]epoch 4 loss 1.44341:  39%|███▉      | 11/28 [00:37<00:40,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6367[0m
[32m  eval_f1 = 0.2968[0m
[32m  eval_mcc = 0.6163[0m
[32m  eval_precision = 0.4122[0m
[32m  eval_recall = 0.2714[0m
[32m  ********************[0m
[32m  Best f1:0.2968[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.44341:  43%|████▎     | 12/28 [00:44<01:05,  4.07s/it]epoch 4 loss 1.44627:  43%|████▎     | 12/28 [00:45<01:05,  4.07s/it]epoch 4 loss 1.44627:  46%|████▋     | 13/28 [00:45<00:44,  2.99s/it]epoch 4 loss 1.4442:  46%|████▋     | 13/28 [00:45<00:44,  2.99s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.2969[0m
[32m  eval_mcc = 0.6168[0m
[32m  eval_precision = 0.4114[0m
[32m  eval_recall = 0.2717[0m
[32m  ********************[0m
[32m  Best f1:0.2969[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.4442:  50%|█████     | 14/28 [00:53<01:02,  4.45s/it]epoch 4 loss 1.44902:  50%|█████     | 14/28 [00:53<01:02,  4.45s/it]epoch 4 loss 1.44902:  54%|█████▎    | 15/28 [00:53<00:42,  3.26s/it]epoch 4 loss 1.45053:  54%|█████▎    | 15/28 [00:53<00:42,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.43it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6376[0m
[32m  eval_f1 = 0.2975[0m
[32m  eval_mcc = 0.6171[0m
[32m  eval_precision = 0.4113[0m
[32m  eval_recall = 0.2725[0m
[32m  ********************[0m
[32m  Best f1:0.2975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.45053:  57%|█████▋    | 16/28 [01:01<00:54,  4.58s/it]epoch 4 loss 1.44585:  57%|█████▋    | 16/28 [01:01<00:54,  4.58s/it]epoch 4 loss 1.44585:  61%|██████    | 17/28 [01:01<00:36,  3.35s/it]epoch 4 loss 1.44835:  61%|██████    | 17/28 [01:02<00:36,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.46it/s][A
 50%|█████     | 5/10 [00:02<00:01,  2.56it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.62it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.66it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.69it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.84it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6383[0m
[32m  eval_f1 = 0.2975[0m
[32m  eval_mcc = 0.6178[0m
[32m  eval_precision = 0.4182[0m
[32m  eval_recall = 0.2727[0m
[32m  ********************[0m
[32m  Best MCC:0.6178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.44835:  64%|██████▍   | 18/28 [01:06<00:39,  3.90s/it]epoch 4 loss 1.44744:  64%|██████▍   | 18/28 [01:07<00:39,  3.90s/it]epoch 4 loss 1.44744:  68%|██████▊   | 19/28 [01:07<00:25,  2.85s/it]epoch 4 loss 1.44852:  68%|██████▊   | 19/28 [01:07<00:25,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.639[0m
[32m  eval_f1 = 0.2985[0m
[32m  eval_mcc = 0.6185[0m
[32m  eval_precision = 0.4266[0m
[32m  eval_recall = 0.2735[0m
[32m  ********************[0m
[32m  Best f1:0.2985[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.44852:  71%|███████▏  | 20/28 [01:14<00:34,  4.26s/it]epoch 4 loss 1.4479:  71%|███████▏  | 20/28 [01:15<00:34,  4.26s/it] epoch 4 loss 1.4479:  75%|███████▌  | 21/28 [01:15<00:21,  3.11s/it]epoch 4 loss 1.45148:  75%|███████▌  | 21/28 [01:15<00:21,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6393[0m
[32m  eval_f1 = 0.2986[0m
[32m  eval_mcc = 0.6188[0m
[32m  eval_precision = 0.4262[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best f1:0.2986[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45148:  79%|███████▊  | 22/28 [01:23<00:27,  4.51s/it]epoch 4 loss 1.45319:  79%|███████▊  | 22/28 [01:23<00:27,  4.51s/it]epoch 4 loss 1.45319:  82%|████████▏ | 23/28 [01:23<00:16,  3.29s/it]epoch 4 loss 1.44848:  82%|████████▏ | 23/28 [01:23<00:16,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6397[0m
[32m  eval_f1 = 0.2992[0m
[32m  eval_mcc = 0.6191[0m
[32m  eval_precision = 0.4255[0m
[32m  eval_recall = 0.2744[0m
[32m  ********************[0m
[32m  Best f1:0.2992[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.44848:  86%|████████▌ | 24/28 [01:31<00:18,  4.69s/it]epoch 4 loss 1.44459:  86%|████████▌ | 24/28 [01:31<00:18,  4.69s/it]epoch 4 loss 1.44459:  89%|████████▉ | 25/28 [01:31<00:10,  3.41s/it]epoch 4 loss 1.4391:  89%|████████▉ | 25/28 [01:32<00:10,  3.41s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6396[0m
[32m  eval_f1 = 0.2987[0m
[32m  eval_mcc = 0.619[0m
[32m  eval_precision = 0.4256[0m
[32m  eval_recall = 0.2741[0m

epoch 4 loss 1.4391:  93%|█████████▎| 26/28 [01:35<00:07,  3.53s/it]epoch 4 loss 1.44484:  93%|█████████▎| 26/28 [01:36<00:07,  3.53s/it]epoch 4 loss 1.44484:  96%|█████████▋| 27/28 [01:36<00:02,  2.59s/it]epoch 4 loss 1.44279:  96%|█████████▋| 27/28 [01:36<00:02,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6396[0m
[32m  eval_f1 = 0.2988[0m
[32m  eval_mcc = 0.619[0m
[32m  eval_precision = 0.4256[0m
[32m  eval_recall = 0.2742[0m

epoch 4 loss 1.44279: 100%|██████████| 28/28 [01:39<00:00,  2.90s/it]epoch 4 loss 1.44279: 100%|██████████| 28/28 [01:39<00:00,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.74it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.72it/s] 70%|███████   | 7/10 [00:02<00:01,  2.72it/s] 80%|████████  | 8/10 [00:02<00:00,  2.72it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6397[0m
[32m  eval_f1 = 0.2992[0m
[32m  eval_mcc = 0.6191[0m
[32m  eval_precision = 0.4255[0m
[32m  eval_recall = 0.2744[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.74it/s] 20%|██        | 2/10 [00:00<00:02,  2.71it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.72it/s] 70%|███████   | 7/10 [00:02<00:01,  2.72it/s] 80%|████████  | 8/10 [00:02<00:00,  2.72it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s]100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6222[0m
[32m  eval_f1 = 0.2416[0m
[32m  eval_mcc = 0.602[0m
[32m  eval_precision = 0.3179[0m
[32m  eval_recall = 0.2244[0m

