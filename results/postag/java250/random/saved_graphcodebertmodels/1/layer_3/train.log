[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=3, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.6077:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.6077:   4%|▎         | 1/28 [00:00<00:21,  1.27it/s]epoch 0 loss 5.6182:   4%|▎         | 1/28 [00:01<00:21,  1.27it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0025[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = -0.0012[0m
[32m  eval_precision = 0.0039[0m
[32m  eval_recall = 0.0068[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.6182:   7%|▋         | 2/28 [00:05<01:22,  3.18s/it]epoch 0 loss 5.60464:   7%|▋         | 2/28 [00:06<01:22,  3.18s/it]epoch 0 loss 5.60464:  11%|█         | 3/28 [00:06<00:47,  1.91s/it]epoch 0 loss 5.59317:  11%|█         | 3/28 [00:06<00:47,  1.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0049[0m
[32m  eval_f1 = 0.0014[0m
[32m  eval_mcc = -0.0019[0m
[32m  eval_precision = 0.0071[0m
[32m  eval_recall = 0.0073[0m
[32m  ********************[0m
[32m  Best f1:0.0014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.59317:  14%|█▍        | 4/28 [00:14<01:51,  4.63s/it]epoch 0 loss 5.57307:  14%|█▍        | 4/28 [00:15<01:51,  4.63s/it]epoch 0 loss 5.57307:  18%|█▊        | 5/28 [00:15<01:11,  3.11s/it]epoch 0 loss 5.54704:  18%|█▊        | 5/28 [00:15<01:11,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0164[0m
[32m  eval_f1 = 0.0029[0m
[32m  eval_mcc = -0.0018[0m
[32m  eval_precision = 0.0069[0m
[32m  eval_recall = 0.0085[0m
[32m  ********************[0m
[32m  Best f1:0.0029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.54704:  21%|██▏       | 6/28 [00:21<01:34,  4.31s/it]epoch 0 loss 5.50704:  21%|██▏       | 6/28 [00:22<01:34,  4.31s/it]epoch 0 loss 5.50704:  25%|██▌       | 7/28 [00:22<01:03,  3.04s/it]epoch 0 loss 5.46427:  25%|██▌       | 7/28 [00:22<01:03,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.048[0m
[32m  eval_f1 = 0.0075[0m
[32m  eval_mcc = 0.0067[0m
[32m  eval_precision = 0.0107[0m
[32m  eval_recall = 0.0141[0m
[32m  ********************[0m
[32m  Best f1:0.0075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.46427:  29%|██▊       | 8/28 [00:29<01:25,  4.28s/it]epoch 0 loss 5.41582:  29%|██▊       | 8/28 [00:29<01:25,  4.28s/it]epoch 0 loss 5.41582:  32%|███▏      | 9/28 [00:29<00:58,  3.07s/it]epoch 0 loss 5.36191:  32%|███▏      | 9/28 [00:30<00:58,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.074[0m
[32m  eval_f1 = 0.0114[0m
[32m  eval_mcc = 0.0181[0m
[32m  eval_precision = 0.0164[0m
[32m  eval_recall = 0.0149[0m
[32m  ********************[0m
[32m  Best f1:0.0114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.36191:  36%|███▌      | 10/28 [00:40<01:37,  5.42s/it]epoch 0 loss 5.30615:  36%|███▌      | 10/28 [00:40<01:37,  5.42s/it]epoch 0 loss 5.30615:  39%|███▉      | 11/28 [00:40<01:06,  3.90s/it]epoch 0 loss 5.23863:  39%|███▉      | 11/28 [00:41<01:06,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0932[0m
[32m  eval_f1 = 0.0158[0m
[32m  eval_mcc = 0.0333[0m
[32m  eval_precision = 0.0209[0m
[32m  eval_recall = 0.0197[0m
[32m  ********************[0m
[32m  Best f1:0.0158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.23863:  43%|████▎     | 12/28 [00:54<01:52,  7.02s/it]epoch 0 loss 5.17211:  43%|████▎     | 12/28 [00:55<01:52,  7.02s/it]epoch 0 loss 5.17211:  46%|████▋     | 13/28 [00:55<01:15,  5.02s/it]epoch 0 loss 5.09948:  46%|████▋     | 13/28 [00:55<01:15,  5.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1199[0m
[32m  eval_f1 = 0.0197[0m
[32m  eval_mcc = 0.0586[0m
[32m  eval_precision = 0.0269[0m
[32m  eval_recall = 0.023[0m
[32m  ********************[0m
[32m  Best f1:0.0197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.09948:  50%|█████     | 14/28 [01:09<01:48,  7.72s/it]epoch 0 loss 5.02532:  50%|█████     | 14/28 [01:09<01:48,  7.72s/it]epoch 0 loss 5.02532:  54%|█████▎    | 15/28 [01:09<01:11,  5.52s/it]epoch 0 loss 4.94682:  54%|█████▎    | 15/28 [01:10<01:11,  5.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1513[0m
[32m  eval_f1 = 0.0247[0m
[32m  eval_mcc = 0.0907[0m
[32m  eval_precision = 0.0415[0m
[32m  eval_recall = 0.027[0m
[32m  ********************[0m
[32m  Best f1:0.0247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94682:  57%|█████▋    | 16/28 [01:18<01:17,  6.46s/it]epoch 0 loss 4.86887:  57%|█████▋    | 16/28 [01:18<01:17,  6.46s/it]epoch 0 loss 4.86887:  61%|██████    | 17/28 [01:18<00:51,  4.65s/it]epoch 0 loss 4.79349:  61%|██████    | 17/28 [01:19<00:51,  4.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2016[0m
[32m  eval_f1 = 0.03[0m
[32m  eval_mcc = 0.1445[0m
[32m  eval_precision = 0.0652[0m
[32m  eval_recall = 0.0321[0m
[32m  ********************[0m
[32m  Best f1:0.03[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1445[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.79349:  64%|██████▍   | 18/28 [01:27<00:57,  5.76s/it]epoch 0 loss 4.71783:  64%|██████▍   | 18/28 [01:27<00:57,  5.76s/it]epoch 0 loss 4.71783:  68%|██████▊   | 19/28 [01:27<00:37,  4.16s/it]epoch 0 loss 4.64878:  68%|██████▊   | 19/28 [01:28<00:37,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2622[0m
[32m  eval_f1 = 0.037[0m
[32m  eval_mcc = 0.2095[0m
[32m  eval_precision = 0.0919[0m
[32m  eval_recall = 0.0385[0m
[32m  ********************[0m
[32m  Best f1:0.037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2095[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.64878:  71%|███████▏  | 20/28 [01:37<00:46,  5.83s/it]epoch 0 loss 4.57824:  71%|███████▏  | 20/28 [01:37<00:46,  5.83s/it]epoch 0 loss 4.57824:  75%|███████▌  | 21/28 [01:37<00:29,  4.21s/it]epoch 0 loss 4.50441:  75%|███████▌  | 21/28 [01:38<00:29,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3265[0m
[32m  eval_f1 = 0.064[0m
[32m  eval_mcc = 0.2771[0m
[32m  eval_precision = 0.1128[0m
[32m  eval_recall = 0.0605[0m
[32m  ********************[0m
[32m  Best f1:0.064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2771[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.50441:  79%|███████▊  | 22/28 [01:50<00:40,  6.71s/it]epoch 0 loss 4.43751:  79%|███████▊  | 22/28 [01:50<00:40,  6.71s/it]epoch 0 loss 4.43751:  82%|████████▏ | 23/28 [01:50<00:24,  4.82s/it]epoch 0 loss 4.3716:  82%|████████▏ | 23/28 [01:51<00:24,  4.82s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.387[0m
[32m  eval_f1 = 0.0776[0m
[32m  eval_mcc = 0.3426[0m
[32m  eval_precision = 0.1267[0m
[32m  eval_recall = 0.0731[0m
[32m  ********************[0m
[32m  Best f1:0.0776[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3426[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.3716:  86%|████████▌ | 24/28 [02:03<00:29,  7.31s/it]epoch 0 loss 4.30727:  86%|████████▌ | 24/28 [02:04<00:29,  7.31s/it]epoch 0 loss 4.30727:  89%|████████▉ | 25/28 [02:04<00:15,  5.24s/it]epoch 0 loss 4.23703:  89%|████████▉ | 25/28 [02:04<00:15,  5.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4552[0m
[32m  eval_f1 = 0.1169[0m
[32m  eval_mcc = 0.421[0m
[32m  eval_precision = 0.1689[0m
[32m  eval_recall = 0.1053[0m
[32m  ********************[0m
[32m  Best f1:0.1169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.23703:  93%|█████████▎| 26/28 [02:17<00:15,  7.53s/it]epoch 0 loss 4.17185:  93%|█████████▎| 26/28 [02:17<00:15,  7.53s/it]epoch 0 loss 4.17185:  96%|█████████▋| 27/28 [02:17<00:05,  5.40s/it]epoch 0 loss 4.11343:  96%|█████████▋| 27/28 [02:17<00:05,  5.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4808[0m
[32m  eval_f1 = 0.1279[0m
[32m  eval_mcc = 0.4506[0m
[32m  eval_precision = 0.1683[0m
[32m  eval_recall = 0.1183[0m
[32m  ********************[0m
[32m  Best f1:0.1279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4506[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.11343: 100%|██████████| 28/28 [02:29<00:00,  7.50s/it]epoch 0 loss 4.11343: 100%|██████████| 28/28 [02:29<00:00,  5.36s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.34185:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.34185:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.23854:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5157[0m
[32m  eval_f1 = 0.1423[0m
[32m  eval_mcc = 0.4881[0m
[32m  eval_precision = 0.1754[0m
[32m  eval_recall = 0.1374[0m
[32m  ********************[0m
[32m  Best f1:0.1423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4881[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23854:   7%|▋         | 2/28 [00:10<02:44,  6.34s/it]epoch 1 loss 2.17445:   7%|▋         | 2/28 [00:11<02:44,  6.34s/it]epoch 1 loss 2.17445:  11%|█         | 3/28 [00:11<01:30,  3.64s/it]epoch 1 loss 2.15205:  11%|█         | 3/28 [00:11<01:30,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5406[0m
[32m  eval_f1 = 0.1535[0m
[32m  eval_mcc = 0.5137[0m
[32m  eval_precision = 0.2063[0m
[32m  eval_recall = 0.1502[0m
[32m  ********************[0m
[32m  Best f1:0.1535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15205:  14%|█▍        | 4/28 [00:21<02:31,  6.33s/it]epoch 1 loss 2.13658:  14%|█▍        | 4/28 [00:22<02:31,  6.33s/it]epoch 1 loss 2.13658:  18%|█▊        | 5/28 [00:22<01:36,  4.20s/it]epoch 1 loss 2.11022:  18%|█▊        | 5/28 [00:22<01:36,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5614[0m
[32m  eval_f1 = 0.1762[0m
[32m  eval_mcc = 0.5352[0m
[32m  eval_precision = 0.2267[0m
[32m  eval_recall = 0.1712[0m
[32m  ********************[0m
[32m  Best f1:0.1762[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11022:  21%|██▏       | 6/28 [00:30<01:59,  5.45s/it]epoch 1 loss 2.08324:  21%|██▏       | 6/28 [00:30<01:59,  5.45s/it]epoch 1 loss 2.08324:  25%|██▌       | 7/28 [00:30<01:19,  3.81s/it]epoch 1 loss 2.06446:  25%|██▌       | 7/28 [00:30<01:19,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5722[0m
[32m  eval_f1 = 0.1829[0m
[32m  eval_mcc = 0.5464[0m
[32m  eval_precision = 0.2272[0m
[32m  eval_recall = 0.1775[0m
[32m  ********************[0m
[32m  Best f1:0.1829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5464[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.06446:  29%|██▊       | 8/28 [00:38<01:43,  5.18s/it]epoch 1 loss 2.05988:  29%|██▊       | 8/28 [00:39<01:43,  5.18s/it]epoch 1 loss 2.05988:  32%|███▏      | 9/28 [00:39<01:10,  3.69s/it]epoch 1 loss 2.03974:  32%|███▏      | 9/28 [00:39<01:10,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5815[0m
[32m  eval_f1 = 0.1885[0m
[32m  eval_mcc = 0.5569[0m
[32m  eval_precision = 0.2474[0m
[32m  eval_recall = 0.1806[0m
[32m  ********************[0m
[32m  Best f1:0.1885[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5569[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03974:  36%|███▌      | 10/28 [00:45<01:23,  4.61s/it]epoch 1 loss 2.01823:  36%|███▌      | 10/28 [00:46<01:23,  4.61s/it]epoch 1 loss 2.01823:  39%|███▉      | 11/28 [00:46<00:56,  3.33s/it]epoch 1 loss 1.99076:  39%|███▉      | 11/28 [00:46<00:56,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5875[0m
[32m  eval_f1 = 0.1965[0m
[32m  eval_mcc = 0.5643[0m
[32m  eval_precision = 0.2884[0m
[32m  eval_recall = 0.1852[0m
[32m  ********************[0m
[32m  Best f1:0.1965[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99076:  43%|████▎     | 12/28 [00:55<01:20,  5.04s/it]epoch 1 loss 1.96615:  43%|████▎     | 12/28 [00:55<01:20,  5.04s/it]epoch 1 loss 1.96615:  46%|████▋     | 13/28 [00:55<00:54,  3.65s/it]epoch 1 loss 1.95216:  46%|████▋     | 13/28 [00:55<00:54,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.50it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.47it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.45it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.44it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.43it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.43it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.43it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.64it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5925[0m
[32m  eval_f1 = 0.2158[0m
[32m  eval_mcc = 0.5705[0m
[32m  eval_precision = 0.3016[0m
[32m  eval_recall = 0.2016[0m
[32m  ********************[0m
[32m  Best f1:0.2158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95216:  50%|█████     | 14/28 [01:05<01:19,  5.69s/it]epoch 1 loss 1.93271:  50%|█████     | 14/28 [01:06<01:19,  5.69s/it]epoch 1 loss 1.93271:  54%|█████▎    | 15/28 [01:06<00:53,  4.12s/it]epoch 1 loss 1.91976:  54%|█████▎    | 15/28 [01:06<00:53,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5968[0m
[32m  eval_f1 = 0.2252[0m
[32m  eval_mcc = 0.576[0m
[32m  eval_precision = 0.3113[0m
[32m  eval_recall = 0.211[0m
[32m  ********************[0m
[32m  Best f1:0.2252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91976:  57%|█████▋    | 16/28 [01:18<01:17,  6.47s/it]epoch 1 loss 1.89833:  57%|█████▋    | 16/28 [01:18<01:17,  6.47s/it]epoch 1 loss 1.89833:  61%|██████    | 17/28 [01:18<00:51,  4.67s/it]epoch 1 loss 1.87927:  61%|██████    | 17/28 [01:19<00:51,  4.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6049[0m
[32m  eval_f1 = 0.2409[0m
[32m  eval_mcc = 0.5857[0m
[32m  eval_precision = 0.3541[0m
[32m  eval_recall = 0.2236[0m
[32m  ********************[0m
[32m  Best f1:0.2409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5857[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87927:  64%|██████▍   | 18/28 [01:30<01:07,  6.79s/it]epoch 1 loss 1.85848:  64%|██████▍   | 18/28 [01:31<01:07,  6.79s/it]epoch 1 loss 1.85848:  68%|██████▊   | 19/28 [01:31<00:44,  4.90s/it]epoch 1 loss 1.85955:  68%|██████▊   | 19/28 [01:31<00:44,  4.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.43it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6109[0m
[32m  eval_f1 = 0.2573[0m
[32m  eval_mcc = 0.5923[0m
[32m  eval_precision = 0.3712[0m
[32m  eval_recall = 0.2388[0m
[32m  ********************[0m
[32m  Best f1:0.2573[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.85955:  71%|███████▏  | 20/28 [01:38<00:45,  5.72s/it]epoch 1 loss 1.8465:  71%|███████▏  | 20/28 [01:39<00:45,  5.72s/it] epoch 1 loss 1.8465:  75%|███████▌  | 21/28 [01:39<00:29,  4.15s/it]epoch 1 loss 1.83419:  75%|███████▌  | 21/28 [01:39<00:29,  4.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.618[0m
[32m  eval_f1 = 0.2642[0m
[32m  eval_mcc = 0.5981[0m
[32m  eval_precision = 0.3642[0m
[32m  eval_recall = 0.2463[0m
[32m  ********************[0m
[32m  Best f1:0.2642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5981[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83419:  79%|███████▊  | 22/28 [01:45<00:29,  4.94s/it]epoch 1 loss 1.81739:  79%|███████▊  | 22/28 [01:46<00:29,  4.94s/it]epoch 1 loss 1.81739:  82%|████████▏ | 23/28 [01:46<00:17,  3.59s/it]epoch 1 loss 1.80495:  82%|████████▏ | 23/28 [01:46<00:17,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6222[0m
[32m  eval_f1 = 0.2702[0m
[32m  eval_mcc = 0.6007[0m
[32m  eval_precision = 0.362[0m
[32m  eval_recall = 0.2526[0m
[32m  ********************[0m
[32m  Best f1:0.2702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80495:  86%|████████▌ | 24/28 [01:55<00:20,  5.13s/it]epoch 1 loss 1.78978:  86%|████████▌ | 24/28 [01:55<00:20,  5.13s/it]epoch 1 loss 1.78978:  89%|████████▉ | 25/28 [01:55<00:11,  3.72s/it]epoch 1 loss 1.77778:  89%|████████▉ | 25/28 [01:55<00:11,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.625[0m
[32m  eval_f1 = 0.2737[0m
[32m  eval_mcc = 0.6029[0m
[32m  eval_precision = 0.3578[0m
[32m  eval_recall = 0.2564[0m
[32m  ********************[0m
[32m  Best f1:0.2737[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77778:  93%|█████████▎| 26/28 [02:02<00:09,  4.57s/it]epoch 1 loss 1.76607:  93%|█████████▎| 26/28 [02:02<00:09,  4.57s/it]epoch 1 loss 1.76607:  96%|█████████▋| 27/28 [02:02<00:03,  3.33s/it]epoch 1 loss 1.75478:  96%|█████████▋| 27/28 [02:02<00:03,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6272[0m
[32m  eval_f1 = 0.2813[0m
[32m  eval_mcc = 0.6051[0m
[32m  eval_precision = 0.3732[0m
[32m  eval_recall = 0.2629[0m
[32m  ********************[0m
[32m  Best f1:0.2813[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6051[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75478: 100%|██████████| 28/28 [02:12<00:00,  5.27s/it]epoch 1 loss 1.75478: 100%|██████████| 28/28 [02:12<00:00,  4.73s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.27:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.27:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.39008:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6305[0m
[32m  eval_f1 = 0.2865[0m
[32m  eval_mcc = 0.6088[0m
[32m  eval_precision = 0.3824[0m
[32m  eval_recall = 0.2668[0m
[32m  ********************[0m
[32m  Best f1:0.2865[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39008:   7%|▋         | 2/28 [00:07<01:48,  4.16s/it]epoch 2 loss 1.38922:   7%|▋         | 2/28 [00:07<01:48,  4.16s/it]epoch 2 loss 1.38922:  11%|█         | 3/28 [00:07<01:01,  2.45s/it]epoch 2 loss 1.38162:  11%|█         | 3/28 [00:08<01:01,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6344[0m
[32m  eval_f1 = 0.296[0m
[32m  eval_mcc = 0.6132[0m
[32m  eval_precision = 0.4008[0m
[32m  eval_recall = 0.2736[0m
[32m  ********************[0m
[32m  Best f1:0.296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38162:  14%|█▍        | 4/28 [00:21<02:43,  6.80s/it]epoch 2 loss 1.37728:  14%|█▍        | 4/28 [00:21<02:43,  6.80s/it]epoch 2 loss 1.37728:  18%|█▊        | 5/28 [00:21<01:43,  4.50s/it]epoch 2 loss 1.3954:  18%|█▊        | 5/28 [00:21<01:43,  4.50s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6379[0m
[32m  eval_f1 = 0.2993[0m
[32m  eval_mcc = 0.6178[0m
[32m  eval_precision = 0.4048[0m
[32m  eval_recall = 0.2758[0m
[32m  ********************[0m
[32m  Best f1:0.2993[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3954:  21%|██▏       | 6/28 [00:33<02:36,  7.13s/it]epoch 2 loss 1.43882:  21%|██▏       | 6/28 [00:34<02:36,  7.13s/it]epoch 2 loss 1.43882:  25%|██▌       | 7/28 [00:34<01:43,  4.94s/it]epoch 2 loss 1.43396:  25%|██▌       | 7/28 [00:34<01:43,  4.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6395[0m
[32m  eval_f1 = 0.3076[0m
[32m  eval_mcc = 0.6205[0m
[32m  eval_precision = 0.4092[0m
[32m  eval_recall = 0.2837[0m
[32m  ********************[0m
[32m  Best f1:0.3076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43396:  29%|██▊       | 8/28 [00:46<02:23,  7.20s/it]epoch 2 loss 1.4358:  29%|██▊       | 8/28 [00:46<02:23,  7.20s/it] epoch 2 loss 1.4358:  32%|███▏      | 9/28 [00:46<01:36,  5.08s/it]epoch 2 loss 1.42504:  32%|███▏      | 9/28 [00:47<01:36,  5.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6406[0m
[32m  eval_f1 = 0.3144[0m
[32m  eval_mcc = 0.6222[0m
[32m  eval_precision = 0.4149[0m
[32m  eval_recall = 0.2922[0m
[32m  ********************[0m
[32m  Best f1:0.3144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42504:  36%|███▌      | 10/28 [00:58<02:07,  7.07s/it]epoch 2 loss 1.40449:  36%|███▌      | 10/28 [00:58<02:07,  7.07s/it]epoch 2 loss 1.40449:  39%|███▉      | 11/28 [00:58<01:25,  5.04s/it]epoch 2 loss 1.40442:  39%|███▉      | 11/28 [00:58<01:25,  5.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6431[0m
[32m  eval_f1 = 0.3176[0m
[32m  eval_mcc = 0.6242[0m
[32m  eval_precision = 0.4132[0m
[32m  eval_recall = 0.2954[0m
[32m  ********************[0m
[32m  Best f1:0.3176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40442:  43%|████▎     | 12/28 [01:10<01:55,  7.24s/it]epoch 2 loss 1.39524:  43%|████▎     | 12/28 [01:11<01:55,  7.24s/it]epoch 2 loss 1.39524:  46%|████▋     | 13/28 [01:11<01:17,  5.17s/it]epoch 2 loss 1.3869:  46%|████▋     | 13/28 [01:11<01:17,  5.17s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6439[0m
[32m  eval_f1 = 0.3181[0m
[32m  eval_mcc = 0.6244[0m
[32m  eval_precision = 0.408[0m
[32m  eval_recall = 0.2976[0m
[32m  ********************[0m
[32m  Best f1:0.3181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3869:  50%|█████     | 14/28 [01:23<01:40,  7.16s/it]epoch 2 loss 1.39614:  50%|█████     | 14/28 [01:23<01:40,  7.16s/it]epoch 2 loss 1.39614:  54%|█████▎    | 15/28 [01:23<01:06,  5.13s/it]epoch 2 loss 1.38436:  54%|█████▎    | 15/28 [01:23<01:06,  5.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6477[0m
[32m  eval_f1 = 0.3195[0m
[32m  eval_mcc = 0.6279[0m
[32m  eval_precision = 0.4126[0m
[32m  eval_recall = 0.3[0m
[32m  ********************[0m
[32m  Best f1:0.3195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38436:  57%|█████▋    | 16/28 [01:31<01:13,  6.15s/it]epoch 2 loss 1.37718:  57%|█████▋    | 16/28 [01:32<01:13,  6.15s/it]epoch 2 loss 1.37718:  61%|██████    | 17/28 [01:32<00:48,  4.42s/it]epoch 2 loss 1.36813:  61%|██████    | 17/28 [01:32<00:48,  4.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6508[0m
[32m  eval_f1 = 0.3265[0m
[32m  eval_mcc = 0.6311[0m
[32m  eval_precision = 0.4405[0m
[32m  eval_recall = 0.3048[0m
[32m  ********************[0m
[32m  Best f1:0.3265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6311[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36813:  64%|██████▍   | 18/28 [01:43<01:03,  6.38s/it]epoch 2 loss 1.36936:  64%|██████▍   | 18/28 [01:43<01:03,  6.38s/it]epoch 2 loss 1.36936:  68%|██████▊   | 19/28 [01:43<00:41,  4.59s/it]epoch 2 loss 1.36733:  68%|██████▊   | 19/28 [01:44<00:41,  4.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6513[0m
[32m  eval_f1 = 0.335[0m
[32m  eval_mcc = 0.6316[0m
[32m  eval_precision = 0.4492[0m
[32m  eval_recall = 0.3095[0m
[32m  ********************[0m
[32m  Best f1:0.335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36733:  71%|███████▏  | 20/28 [01:54<00:52,  6.56s/it]epoch 2 loss 1.361:  71%|███████▏  | 20/28 [01:55<00:52,  6.56s/it]  epoch 2 loss 1.361:  75%|███████▌  | 21/28 [01:55<00:33,  4.72s/it]epoch 2 loss 1.36431:  75%|███████▌  | 21/28 [01:55<00:33,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6513[0m
[32m  eval_f1 = 0.3397[0m
[32m  eval_mcc = 0.6319[0m
[32m  eval_precision = 0.45[0m
[32m  eval_recall = 0.3137[0m
[32m  ********************[0m
[32m  Best f1:0.3397[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36431:  79%|███████▊  | 22/28 [02:02<00:32,  5.35s/it]epoch 2 loss 1.36168:  79%|███████▊  | 22/28 [02:02<00:32,  5.35s/it]epoch 2 loss 1.36168:  82%|████████▏ | 23/28 [02:02<00:19,  3.87s/it]epoch 2 loss 1.35567:  82%|████████▏ | 23/28 [02:02<00:19,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6518[0m
[32m  eval_f1 = 0.343[0m
[32m  eval_mcc = 0.6327[0m
[32m  eval_precision = 0.4622[0m
[32m  eval_recall = 0.3163[0m
[32m  ********************[0m
[32m  Best f1:0.343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35567:  86%|████████▌ | 24/28 [02:09<00:18,  4.69s/it]epoch 2 loss 1.35336:  86%|████████▌ | 24/28 [02:09<00:18,  4.69s/it]epoch 2 loss 1.35336:  89%|████████▉ | 25/28 [02:09<00:10,  3.41s/it]epoch 2 loss 1.34855:  89%|████████▉ | 25/28 [02:09<00:10,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3456[0m
[32m  eval_mcc = 0.6336[0m
[32m  eval_precision = 0.4633[0m
[32m  eval_recall = 0.3181[0m
[32m  ********************[0m
[32m  Best f1:0.3456[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34855:  93%|█████████▎| 26/28 [02:16<00:08,  4.38s/it]epoch 2 loss 1.35048:  93%|█████████▎| 26/28 [02:16<00:08,  4.38s/it]epoch 2 loss 1.35048:  96%|█████████▋| 27/28 [02:16<00:03,  3.19s/it]epoch 2 loss 1.35362:  96%|█████████▋| 27/28 [02:16<00:03,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6549[0m
[32m  eval_f1 = 0.349[0m
[32m  eval_mcc = 0.6359[0m
[32m  eval_precision = 0.4646[0m
[32m  eval_recall = 0.3212[0m
[32m  ********************[0m
[32m  Best f1:0.349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35362: 100%|██████████| 28/28 [02:23<00:00,  4.20s/it]epoch 2 loss 1.35362: 100%|██████████| 28/28 [02:23<00:00,  5.11s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.18563:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.18563:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 3 loss 1.25:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]   [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6576[0m
[32m  eval_f1 = 0.3495[0m
[32m  eval_mcc = 0.6384[0m
[32m  eval_precision = 0.4593[0m
[32m  eval_recall = 0.3237[0m
[32m  ********************[0m
[32m  Best f1:0.3495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25:   7%|▋         | 2/28 [00:09<02:21,  5.43s/it]epoch 3 loss 1.28028:   7%|▋         | 2/28 [00:09<02:21,  5.43s/it]epoch 3 loss 1.28028:  11%|█         | 3/28 [00:09<01:18,  3.14s/it]epoch 3 loss 1.2607:  11%|█         | 3/28 [00:10<01:18,  3.14s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6597[0m
[32m  eval_f1 = 0.3522[0m
[32m  eval_mcc = 0.6403[0m
[32m  eval_precision = 0.4569[0m
[32m  eval_recall = 0.3284[0m
[32m  ********************[0m
[32m  Best f1:0.3522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2607:  14%|█▍        | 4/28 [00:21<02:41,  6.72s/it]epoch 3 loss 1.23319:  14%|█▍        | 4/28 [00:22<02:41,  6.72s/it]epoch 3 loss 1.23319:  18%|█▊        | 5/28 [00:22<01:42,  4.45s/it]epoch 3 loss 1.24414:  18%|█▊        | 5/28 [00:22<01:42,  4.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6603[0m
[32m  eval_f1 = 0.3523[0m
[32m  eval_mcc = 0.6409[0m
[32m  eval_precision = 0.4545[0m
[32m  eval_recall = 0.3286[0m
[32m  ********************[0m
[32m  Best f1:0.3523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24414:  21%|██▏       | 6/28 [00:35<02:39,  7.24s/it]epoch 3 loss 1.25188:  21%|██▏       | 6/28 [00:35<02:39,  7.24s/it]epoch 3 loss 1.25188:  25%|██▌       | 7/28 [00:35<01:45,  5.01s/it]epoch 3 loss 1.26684:  25%|██▌       | 7/28 [00:35<01:45,  5.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.663[0m
[32m  eval_f1 = 0.3551[0m
[32m  eval_mcc = 0.6439[0m
[32m  eval_precision = 0.4572[0m
[32m  eval_recall = 0.331[0m
[32m  ********************[0m
[32m  Best f1:0.3551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26684:  29%|██▊       | 8/28 [00:48<02:29,  7.47s/it]epoch 3 loss 1.27076:  29%|██▊       | 8/28 [00:48<02:29,  7.47s/it]epoch 3 loss 1.27076:  32%|███▏      | 9/28 [00:48<01:40,  5.27s/it]epoch 3 loss 1.26865:  32%|███▏      | 9/28 [00:49<01:40,  5.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6641[0m
[32m  eval_f1 = 0.3572[0m
[32m  eval_mcc = 0.6451[0m
[32m  eval_precision = 0.4578[0m
[32m  eval_recall = 0.332[0m
[32m  ********************[0m
[32m  Best f1:0.3572[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26865:  36%|███▌      | 10/28 [01:00<02:08,  7.17s/it]epoch 3 loss 1.26048:  36%|███▌      | 10/28 [01:00<02:08,  7.17s/it]epoch 3 loss 1.26048:  39%|███▉      | 11/28 [01:00<01:26,  5.10s/it]epoch 3 loss 1.25929:  39%|███▉      | 11/28 [01:00<01:26,  5.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6643[0m
[32m  eval_f1 = 0.3571[0m
[32m  eval_mcc = 0.6455[0m
[32m  eval_precision = 0.4581[0m
[32m  eval_recall = 0.3312[0m
[32m  ********************[0m
[32m  Best MCC:0.6455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25929:  43%|████▎     | 12/28 [01:07<01:33,  5.82s/it]epoch 3 loss 1.2639:  43%|████▎     | 12/28 [01:08<01:33,  5.82s/it] epoch 3 loss 1.2639:  46%|████▋     | 13/28 [01:08<01:02,  4.18s/it]epoch 3 loss 1.25939:  46%|████▋     | 13/28 [01:08<01:02,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6652[0m
[32m  eval_f1 = 0.3591[0m
[32m  eval_mcc = 0.6466[0m
[32m  eval_precision = 0.4595[0m
[32m  eval_recall = 0.3329[0m
[32m  ********************[0m
[32m  Best f1:0.3591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25939:  50%|█████     | 14/28 [01:19<01:28,  6.33s/it]epoch 3 loss 1.25907:  50%|█████     | 14/28 [01:20<01:28,  6.33s/it]epoch 3 loss 1.25907:  54%|█████▎    | 15/28 [01:20<00:59,  4.55s/it]epoch 3 loss 1.26078:  54%|█████▎    | 15/28 [01:20<00:59,  4.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.665[0m
[32m  eval_f1 = 0.3622[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.4633[0m
[32m  eval_recall = 0.3347[0m
[32m  ********************[0m
[32m  Best f1:0.3622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.26078:  57%|█████▋    | 16/28 [01:27<01:03,  5.31s/it]epoch 3 loss 1.26506:  57%|█████▋    | 16/28 [01:27<01:03,  5.31s/it]epoch 3 loss 1.26506:  61%|██████    | 17/28 [01:27<00:42,  3.84s/it]epoch 3 loss 1.27107:  61%|██████    | 17/28 [01:27<00:42,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6658[0m
[32m  eval_f1 = 0.3624[0m
[32m  eval_mcc = 0.6473[0m
[32m  eval_precision = 0.4627[0m
[32m  eval_recall = 0.3353[0m
[32m  ********************[0m
[32m  Best f1:0.3624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27107:  64%|██████▍   | 18/28 [01:37<00:58,  5.81s/it]epoch 3 loss 1.26134:  64%|██████▍   | 18/28 [01:38<00:58,  5.81s/it]epoch 3 loss 1.26134:  68%|██████▊   | 19/28 [01:38<00:37,  4.20s/it]epoch 3 loss 1.26288:  68%|██████▊   | 19/28 [01:38<00:37,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6665[0m
[32m  eval_f1 = 0.3625[0m
[32m  eval_mcc = 0.6481[0m
[32m  eval_precision = 0.4624[0m
[32m  eval_recall = 0.3359[0m
[32m  ********************[0m
[32m  Best f1:0.3625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26288:  71%|███████▏  | 20/28 [01:49<00:49,  6.13s/it]epoch 3 loss 1.25597:  71%|███████▏  | 20/28 [01:49<00:49,  6.13s/it]epoch 3 loss 1.25597:  75%|███████▌  | 21/28 [01:49<00:30,  4.41s/it]epoch 3 loss 1.25514:  75%|███████▌  | 21/28 [01:49<00:30,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6679[0m
[32m  eval_f1 = 0.3624[0m
[32m  eval_mcc = 0.6495[0m
[32m  eval_precision = 0.459[0m
[32m  eval_recall = 0.3366[0m
[32m  ********************[0m
[32m  Best MCC:0.6495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25514:  79%|███████▊  | 22/28 [01:56<00:30,  5.16s/it]epoch 3 loss 1.25749:  79%|███████▊  | 22/28 [01:56<00:30,  5.16s/it]epoch 3 loss 1.25749:  82%|████████▏ | 23/28 [01:56<00:18,  3.74s/it]epoch 3 loss 1.25989:  82%|████████▏ | 23/28 [01:57<00:18,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6691[0m
[32m  eval_f1 = 0.365[0m
[32m  eval_mcc = 0.651[0m
[32m  eval_precision = 0.4625[0m
[32m  eval_recall = 0.3385[0m
[32m  ********************[0m
[32m  Best f1:0.365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25989:  86%|████████▌ | 24/28 [02:07<00:22,  5.74s/it]epoch 3 loss 1.25896:  86%|████████▌ | 24/28 [02:07<00:22,  5.74s/it]epoch 3 loss 1.25896:  89%|████████▉ | 25/28 [02:07<00:12,  4.14s/it]epoch 3 loss 1.25791:  89%|████████▉ | 25/28 [02:08<00:12,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6695[0m
[32m  eval_f1 = 0.365[0m
[32m  eval_mcc = 0.6516[0m
[32m  eval_precision = 0.4627[0m
[32m  eval_recall = 0.3387[0m
[32m  ********************[0m
[32m  Best f1:0.365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25791:  93%|█████████▎| 26/28 [02:18<00:12,  6.02s/it]epoch 3 loss 1.25189:  93%|█████████▎| 26/28 [02:18<00:12,  6.02s/it]epoch 3 loss 1.25189:  96%|█████████▋| 27/28 [02:18<00:04,  4.34s/it]epoch 3 loss 1.24519:  96%|█████████▋| 27/28 [02:18<00:04,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6701[0m
[32m  eval_f1 = 0.3658[0m
[32m  eval_mcc = 0.6522[0m
[32m  eval_precision = 0.464[0m
[32m  eval_recall = 0.339[0m
[32m  ********************[0m
[32m  Best f1:0.3658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24519: 100%|██████████| 28/28 [02:27<00:00,  5.62s/it]epoch 3 loss 1.24519: 100%|██████████| 28/28 [02:27<00:00,  5.25s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.15848:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.15848:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s]epoch 4 loss 1.22515:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6703[0m
[32m  eval_f1 = 0.3661[0m
[32m  eval_mcc = 0.6526[0m
[32m  eval_precision = 0.4657[0m
[32m  eval_recall = 0.339[0m
[32m  ********************[0m
[32m  Best f1:0.3661[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6526[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22515:   7%|▋         | 2/28 [00:10<02:44,  6.34s/it]epoch 4 loss 1.23684:   7%|▋         | 2/28 [00:11<02:44,  6.34s/it]epoch 4 loss 1.23684:  11%|█         | 3/28 [00:11<01:31,  3.64s/it]epoch 4 loss 1.25986:  11%|█         | 3/28 [00:11<01:31,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.671[0m
[32m  eval_f1 = 0.3666[0m
[32m  eval_mcc = 0.6533[0m
[32m  eval_precision = 0.4659[0m
[32m  eval_recall = 0.3395[0m
[32m  ********************[0m
[32m  Best f1:0.3666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25986:  14%|█▍        | 4/28 [00:21<02:32,  6.35s/it]epoch 4 loss 1.22463:  14%|█▍        | 4/28 [00:22<02:32,  6.35s/it]epoch 4 loss 1.22463:  18%|█▊        | 5/28 [00:22<01:36,  4.22s/it]epoch 4 loss 1.20737:  18%|█▊        | 5/28 [00:22<01:36,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6708[0m
[32m  eval_f1 = 0.3664[0m
[32m  eval_mcc = 0.653[0m
[32m  eval_precision = 0.466[0m
[32m  eval_recall = 0.339[0m

epoch 4 loss 1.20737:  21%|██▏       | 6/28 [00:26<01:29,  4.06s/it]epoch 4 loss 1.21408:  21%|██▏       | 6/28 [00:26<01:29,  4.06s/it]epoch 4 loss 1.21408:  25%|██▌       | 7/28 [00:26<01:00,  2.87s/it]epoch 4 loss 1.21956:  25%|██▌       | 7/28 [00:26<01:00,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.671[0m
[32m  eval_f1 = 0.3674[0m
[32m  eval_mcc = 0.6531[0m
[32m  eval_precision = 0.4679[0m
[32m  eval_recall = 0.3396[0m
[32m  ********************[0m
[32m  Best f1:0.3674[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.21956:  29%|██▊       | 8/28 [00:32<01:17,  3.85s/it]epoch 4 loss 1.2111:  29%|██▊       | 8/28 [00:32<01:17,  3.85s/it] epoch 4 loss 1.2111:  32%|███▏      | 9/28 [00:32<00:52,  2.78s/it]epoch 4 loss 1.20698:  32%|███▏      | 9/28 [00:33<00:52,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6706[0m
[32m  eval_f1 = 0.3663[0m
[32m  eval_mcc = 0.6526[0m
[32m  eval_precision = 0.4669[0m
[32m  eval_recall = 0.3389[0m

epoch 4 loss 1.20698:  36%|███▌      | 10/28 [00:36<00:55,  3.09s/it]epoch 4 loss 1.20217:  36%|███▌      | 10/28 [00:37<00:55,  3.09s/it]epoch 4 loss 1.20217:  39%|███▉      | 11/28 [00:37<00:38,  2.27s/it]epoch 4 loss 1.21263:  39%|███▉      | 11/28 [00:37<00:38,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6705[0m
[32m  eval_f1 = 0.3655[0m
[32m  eval_mcc = 0.6524[0m
[32m  eval_precision = 0.4659[0m
[32m  eval_recall = 0.3386[0m

epoch 4 loss 1.21263:  43%|████▎     | 12/28 [00:40<00:43,  2.72s/it]epoch 4 loss 1.21391:  43%|████▎     | 12/28 [00:41<00:43,  2.72s/it]epoch 4 loss 1.21391:  46%|████▋     | 13/28 [00:41<00:30,  2.02s/it]epoch 4 loss 1.2124:  46%|████▋     | 13/28 [00:41<00:30,  2.02s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6704[0m
[32m  eval_f1 = 0.3655[0m
[32m  eval_mcc = 0.6521[0m
[32m  eval_precision = 0.466[0m
[32m  eval_recall = 0.3386[0m

epoch 4 loss 1.2124:  50%|█████     | 14/28 [00:44<00:35,  2.55s/it]epoch 4 loss 1.2166:  50%|█████     | 14/28 [00:45<00:35,  2.55s/it]epoch 4 loss 1.2166:  54%|█████▎    | 15/28 [00:45<00:24,  1.90s/it]epoch 4 loss 1.21792:  54%|█████▎    | 15/28 [00:45<00:24,  1.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6707[0m
[32m  eval_f1 = 0.367[0m
[32m  eval_mcc = 0.6524[0m
[32m  eval_precision = 0.4655[0m
[32m  eval_recall = 0.3398[0m

epoch 4 loss 1.21792:  57%|█████▋    | 16/28 [00:49<00:29,  2.47s/it]epoch 4 loss 1.21311:  57%|█████▋    | 16/28 [00:49<00:29,  2.47s/it]epoch 4 loss 1.21311:  61%|██████    | 17/28 [00:49<00:20,  1.85s/it]epoch 4 loss 1.21608:  61%|██████    | 17/28 [00:49<00:20,  1.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6708[0m
[32m  eval_f1 = 0.367[0m
[32m  eval_mcc = 0.6525[0m
[32m  eval_precision = 0.4638[0m
[32m  eval_recall = 0.3402[0m

epoch 4 loss 1.21608:  64%|██████▍   | 18/28 [00:53<00:24,  2.43s/it]epoch 4 loss 1.21564:  64%|██████▍   | 18/28 [00:53<00:24,  2.43s/it]epoch 4 loss 1.21564:  68%|██████▊   | 19/28 [00:53<00:16,  1.82s/it]epoch 4 loss 1.21677:  68%|██████▊   | 19/28 [00:54<00:16,  1.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6711[0m
[32m  eval_f1 = 0.3675[0m
[32m  eval_mcc = 0.6527[0m
[32m  eval_precision = 0.4638[0m
[32m  eval_recall = 0.3407[0m
[32m  ********************[0m
[32m  Best f1:0.3675[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.21677:  71%|███████▏  | 20/28 [00:58<00:21,  2.71s/it]epoch 4 loss 1.21669:  71%|███████▏  | 20/28 [00:58<00:21,  2.71s/it]epoch 4 loss 1.21669:  75%|███████▌  | 21/28 [00:58<00:14,  2.02s/it]epoch 4 loss 1.21962:  75%|███████▌  | 21/28 [00:59<00:14,  2.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6714[0m
[32m  eval_f1 = 0.3677[0m
[32m  eval_mcc = 0.653[0m
[32m  eval_precision = 0.4638[0m
[32m  eval_recall = 0.341[0m
[32m  ********************[0m
[32m  Best f1:0.3677[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.21962:  79%|███████▊  | 22/28 [01:03<00:17,  2.85s/it]epoch 4 loss 1.22156:  79%|███████▊  | 22/28 [01:04<00:17,  2.85s/it]epoch 4 loss 1.22156:  82%|████████▏ | 23/28 [01:04<00:10,  2.11s/it]epoch 4 loss 1.21712:  82%|████████▏ | 23/28 [01:04<00:10,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6717[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.6533[0m
[32m  eval_precision = 0.4641[0m
[32m  eval_recall = 0.3411[0m
[32m  ********************[0m
[32m  Best f1:0.3679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21712:  86%|████████▌ | 24/28 [01:10<00:13,  3.45s/it]epoch 4 loss 1.214:  86%|████████▌ | 24/28 [01:11<00:13,  3.45s/it]  epoch 4 loss 1.214:  89%|████████▉ | 25/28 [01:11<00:07,  2.55s/it]epoch 4 loss 1.20876:  89%|████████▉ | 25/28 [01:11<00:07,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6718[0m
[32m  eval_f1 = 0.3686[0m
[32m  eval_mcc = 0.6534[0m
[32m  eval_precision = 0.464[0m
[32m  eval_recall = 0.3417[0m
[32m  ********************[0m
[32m  Best f1:0.3686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6534[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20876:  93%|█████████▎| 26/28 [01:17<00:07,  3.78s/it]epoch 4 loss 1.21363:  93%|█████████▎| 26/28 [01:18<00:07,  3.78s/it]epoch 4 loss 1.21363:  96%|█████████▋| 27/28 [01:18<00:02,  2.77s/it]epoch 4 loss 1.21307:  96%|█████████▋| 27/28 [01:18<00:02,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6719[0m
[32m  eval_f1 = 0.3686[0m
[32m  eval_mcc = 0.6535[0m
[32m  eval_precision = 0.464[0m
[32m  eval_recall = 0.3417[0m
[32m  ********************[0m
[32m  Best f1:0.3686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21307: 100%|██████████| 28/28 [01:24<00:00,  3.86s/it]epoch 4 loss 1.21307: 100%|██████████| 28/28 [01:24<00:00,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.65it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6719[0m
[32m  eval_f1 = 0.3686[0m
[32m  eval_mcc = 0.6535[0m
[32m  eval_precision = 0.464[0m
[32m  eval_recall = 0.3417[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.71it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6513[0m
[32m  eval_f1 = 0.2913[0m
[32m  eval_mcc = 0.6329[0m
[32m  eval_precision = 0.3757[0m
[32m  eval_recall = 0.2757[0m

