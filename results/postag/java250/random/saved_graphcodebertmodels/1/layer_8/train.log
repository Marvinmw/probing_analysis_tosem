[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.64451:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.64451:   4%|▎         | 1/28 [00:00<00:21,  1.23it/s]epoch 0 loss 5.67949:   4%|▎         | 1/28 [00:01<00:21,  1.23it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0059[0m
[32m  eval_f1 = 0.0008[0m
[32m  eval_mcc = 0.0038[0m
[32m  eval_precision = 0.0032[0m
[32m  eval_recall = 0.0008[0m
[32m  ********************[0m
[32m  Best f1:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.67949:   7%|▋         | 2/28 [00:06<01:33,  3.60s/it]epoch 0 loss 5.6522:   7%|▋         | 2/28 [00:06<01:33,  3.60s/it] epoch 0 loss 5.6522:  11%|█         | 3/28 [00:06<00:53,  2.14s/it]epoch 0 loss 5.64464:  11%|█         | 3/28 [00:07<00:53,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0167[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = 0.0116[0m
[32m  eval_precision = 0.0046[0m
[32m  eval_recall = 0.0015[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.64464:  14%|█▍        | 4/28 [00:15<01:50,  4.62s/it]epoch 0 loss 5.62332:  14%|█▍        | 4/28 [00:15<01:50,  4.62s/it]epoch 0 loss 5.62332:  18%|█▊        | 5/28 [00:15<01:11,  3.11s/it]epoch 0 loss 5.59212:  18%|█▊        | 5/28 [00:16<01:11,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0409[0m
[32m  eval_f1 = 0.0029[0m
[32m  eval_mcc = 0.022[0m
[32m  eval_precision = 0.0041[0m
[32m  eval_recall = 0.0038[0m
[32m  ********************[0m
[32m  Best f1:0.0029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.59212:  21%|██▏       | 6/28 [00:23<01:47,  4.89s/it]epoch 0 loss 5.55444:  21%|██▏       | 6/28 [00:24<01:47,  4.89s/it]epoch 0 loss 5.55444:  25%|██▌       | 7/28 [00:24<01:12,  3.43s/it]epoch 0 loss 5.5024:  25%|██▌       | 7/28 [00:24<01:12,  3.43s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0755[0m
[32m  eval_f1 = 0.0047[0m
[32m  eval_mcc = 0.0293[0m
[32m  eval_precision = 0.0057[0m
[32m  eval_recall = 0.0084[0m
[32m  ********************[0m
[32m  Best f1:0.0047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.5024:  29%|██▊       | 8/28 [00:36<02:02,  6.14s/it]epoch 0 loss 5.44929:  29%|██▊       | 8/28 [00:36<02:02,  6.14s/it]epoch 0 loss 5.44929:  32%|███▏      | 9/28 [00:36<01:22,  4.35s/it]epoch 0 loss 5.38978:  32%|███▏      | 9/28 [00:37<01:22,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0891[0m
[32m  eval_f1 = 0.0059[0m
[32m  eval_mcc = 0.0306[0m
[32m  eval_precision = 0.0062[0m
[32m  eval_recall = 0.0115[0m
[32m  ********************[0m
[32m  Best f1:0.0059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.38978:  36%|███▌      | 10/28 [00:48<02:00,  6.68s/it]epoch 0 loss 5.32748:  36%|███▌      | 10/28 [00:49<02:00,  6.68s/it]epoch 0 loss 5.32748:  39%|███▉      | 11/28 [00:49<01:21,  4.77s/it]epoch 0 loss 5.26001:  39%|███▉      | 11/28 [00:49<01:21,  4.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0963[0m
[32m  eval_f1 = 0.0067[0m
[32m  eval_mcc = 0.0348[0m
[32m  eval_precision = 0.008[0m
[32m  eval_recall = 0.0128[0m
[32m  ********************[0m
[32m  Best f1:0.0067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.26001:  43%|████▎     | 12/28 [01:01<01:52,  7.02s/it]epoch 0 loss 5.19172:  43%|████▎     | 12/28 [01:01<01:52,  7.02s/it]epoch 0 loss 5.19172:  46%|████▋     | 13/28 [01:01<01:15,  5.02s/it]epoch 0 loss 5.12058:  46%|████▋     | 13/28 [01:02<01:15,  5.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.104[0m
[32m  eval_f1 = 0.0073[0m
[32m  eval_mcc = 0.039[0m
[32m  eval_precision = 0.0078[0m
[32m  eval_recall = 0.0135[0m
[32m  ********************[0m
[32m  Best f1:0.0073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.12058:  50%|█████     | 14/28 [01:09<01:23,  5.96s/it]epoch 0 loss 5.04406:  50%|█████     | 14/28 [01:10<01:23,  5.96s/it]epoch 0 loss 5.04406:  54%|█████▎    | 15/28 [01:10<00:55,  4.29s/it]epoch 0 loss 4.96694:  54%|█████▎    | 15/28 [01:10<00:55,  4.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1116[0m
[32m  eval_f1 = 0.008[0m
[32m  eval_mcc = 0.0441[0m
[32m  eval_precision = 0.0114[0m
[32m  eval_recall = 0.0139[0m
[32m  ********************[0m
[32m  Best f1:0.008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.96694:  57%|█████▋    | 16/28 [01:17<01:03,  5.33s/it]epoch 0 loss 4.89158:  57%|█████▋    | 16/28 [01:18<01:03,  5.33s/it]epoch 0 loss 4.89158:  61%|██████    | 17/28 [01:18<00:42,  3.86s/it]epoch 0 loss 4.81903:  61%|██████    | 17/28 [01:18<00:42,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1193[0m
[32m  eval_f1 = 0.0085[0m
[32m  eval_mcc = 0.0512[0m
[32m  eval_precision = 0.0222[0m
[32m  eval_recall = 0.0144[0m
[32m  ********************[0m
[32m  Best f1:0.0085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.81903:  64%|██████▍   | 18/28 [01:29<01:01,  6.14s/it]epoch 0 loss 4.74945:  64%|██████▍   | 18/28 [01:30<01:01,  6.14s/it]epoch 0 loss 4.74945:  68%|██████▊   | 19/28 [01:30<00:39,  4.42s/it]epoch 0 loss 4.68641:  68%|██████▊   | 19/28 [01:30<00:39,  4.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.69it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.65it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.61it/s][A100%|██████████| 10/10 [00:03<00:00,  2.91it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1423[0m
[32m  eval_f1 = 0.0128[0m
[32m  eval_mcc = 0.079[0m
[32m  eval_precision = 0.0438[0m
[32m  eval_recall = 0.0175[0m
[32m  ********************[0m
[32m  Best f1:0.0128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.68641:  71%|███████▏  | 20/28 [01:40<00:48,  6.05s/it]epoch 0 loss 4.62318:  71%|███████▏  | 20/28 [01:40<00:48,  6.05s/it]epoch 0 loss 4.62318:  75%|███████▌  | 21/28 [01:40<00:30,  4.38s/it]epoch 0 loss 4.55461:  75%|███████▌  | 21/28 [01:41<00:30,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2194[0m
[32m  eval_f1 = 0.0244[0m
[32m  eval_mcc = 0.1637[0m
[32m  eval_precision = 0.0366[0m
[32m  eval_recall = 0.0271[0m
[32m  ********************[0m
[32m  Best f1:0.0244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.55461:  79%|███████▊  | 22/28 [01:52<00:39,  6.63s/it]epoch 0 loss 4.49426:  79%|███████▊  | 22/28 [01:52<00:39,  6.63s/it]epoch 0 loss 4.49426:  82%|████████▏ | 23/28 [01:52<00:23,  4.78s/it]epoch 0 loss 4.43486:  82%|████████▏ | 23/28 [01:53<00:23,  4.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3113[0m
[32m  eval_f1 = 0.0389[0m
[32m  eval_mcc = 0.2577[0m
[32m  eval_precision = 0.0714[0m
[32m  eval_recall = 0.0435[0m
[32m  ********************[0m
[32m  Best f1:0.0389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.43486:  86%|████████▌ | 24/28 [02:04<00:27,  6.94s/it]epoch 0 loss 4.37734:  86%|████████▌ | 24/28 [02:05<00:27,  6.94s/it]epoch 0 loss 4.37734:  89%|████████▉ | 25/28 [02:05<00:15,  5.00s/it]epoch 0 loss 4.314:  89%|████████▉ | 25/28 [02:05<00:15,  5.00s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.307[0m
[32m  eval_f1 = 0.0578[0m
[32m  eval_mcc = 0.2657[0m
[32m  eval_precision = 0.1185[0m
[32m  eval_recall = 0.0561[0m
[32m  ********************[0m
[32m  Best f1:0.0578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.314:  93%|█████████▎| 26/28 [02:17<00:13,  6.99s/it]epoch 0 loss 4.2555:  93%|█████████▎| 26/28 [02:17<00:13,  6.99s/it]epoch 0 loss 4.2555:  96%|█████████▋| 27/28 [02:17<00:05,  5.04s/it]epoch 0 loss 4.20463:  96%|█████████▋| 27/28 [02:17<00:05,  5.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3224[0m
[32m  eval_f1 = 0.082[0m
[32m  eval_mcc = 0.302[0m
[32m  eval_precision = 0.1618[0m
[32m  eval_recall = 0.0714[0m
[32m  ********************[0m
[32m  Best f1:0.082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.20463: 100%|██████████| 28/28 [02:26<00:00,  6.16s/it]epoch 0 loss 4.20463: 100%|██████████| 28/28 [02:26<00:00,  5.22s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.65623:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.65623:   4%|▎         | 1/28 [00:00<00:13,  2.04it/s]epoch 1 loss 2.56065:   4%|▎         | 1/28 [00:00<00:13,  2.04it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.51it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.58it/s][A100%|██████████| 10/10 [00:03<00:00,  2.71it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3896[0m
[32m  eval_f1 = 0.1146[0m
[32m  eval_mcc = 0.3782[0m
[32m  eval_precision = 0.1612[0m
[32m  eval_recall = 0.1019[0m
[32m  ********************[0m
[32m  Best f1:0.1146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3782[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.56065:   7%|▋         | 2/28 [00:06<01:43,  3.98s/it]epoch 1 loss 2.49748:   7%|▋         | 2/28 [00:07<01:43,  3.98s/it]epoch 1 loss 2.49748:  11%|█         | 3/28 [00:07<00:58,  2.35s/it]epoch 1 loss 2.4757:  11%|█         | 3/28 [00:07<00:58,  2.35s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4812[0m
[32m  eval_f1 = 0.1394[0m
[32m  eval_mcc = 0.4608[0m
[32m  eval_precision = 0.1775[0m
[32m  eval_recall = 0.1317[0m
[32m  ********************[0m
[32m  Best f1:0.1394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.4757:  14%|█▍        | 4/28 [00:18<02:23,  5.97s/it]epoch 1 loss 2.45866:  14%|█▍        | 4/28 [00:19<02:23,  5.97s/it]epoch 1 loss 2.45866:  18%|█▊        | 5/28 [00:19<01:31,  3.97s/it]epoch 1 loss 2.42709:  18%|█▊        | 5/28 [00:19<01:31,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5276[0m
[32m  eval_f1 = 0.1502[0m
[32m  eval_mcc = 0.4991[0m
[32m  eval_precision = 0.2104[0m
[32m  eval_recall = 0.1459[0m
[32m  ********************[0m
[32m  Best f1:0.1502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42709:  21%|██▏       | 6/28 [00:27<01:59,  5.42s/it]epoch 1 loss 2.39618:  21%|██▏       | 6/28 [00:27<01:59,  5.42s/it]epoch 1 loss 2.39618:  25%|██▌       | 7/28 [00:27<01:19,  3.79s/it]epoch 1 loss 2.37256:  25%|██▌       | 7/28 [00:28<01:19,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5465[0m
[32m  eval_f1 = 0.1663[0m
[32m  eval_mcc = 0.5198[0m
[32m  eval_precision = 0.2152[0m
[32m  eval_recall = 0.1581[0m
[32m  ********************[0m
[32m  Best f1:0.1663[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.37256:  29%|██▊       | 8/28 [00:38<01:59,  5.97s/it]epoch 1 loss 2.36562:  29%|██▊       | 8/28 [00:38<01:59,  5.97s/it]epoch 1 loss 2.36562:  32%|███▏      | 9/28 [00:38<01:20,  4.24s/it]epoch 1 loss 2.34045:  32%|███▏      | 9/28 [00:39<01:20,  4.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.56[0m
[32m  eval_f1 = 0.1726[0m
[32m  eval_mcc = 0.5366[0m
[32m  eval_precision = 0.2194[0m
[32m  eval_recall = 0.1637[0m
[32m  ********************[0m
[32m  Best f1:0.1726[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.34045:  36%|███▌      | 10/28 [00:50<01:58,  6.58s/it]epoch 1 loss 2.31577:  36%|███▌      | 10/28 [00:51<01:58,  6.58s/it]epoch 1 loss 2.31577:  39%|███▉      | 11/28 [00:51<01:19,  4.70s/it]epoch 1 loss 2.28436:  39%|███▉      | 11/28 [00:51<01:19,  4.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5684[0m
[32m  eval_f1 = 0.1759[0m
[32m  eval_mcc = 0.5456[0m
[32m  eval_precision = 0.2224[0m
[32m  eval_recall = 0.1672[0m
[32m  ********************[0m
[32m  Best f1:0.1759[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5456[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.28436:  43%|████▎     | 12/28 [01:03<01:53,  7.07s/it]epoch 1 loss 2.2564:  43%|████▎     | 12/28 [01:04<01:53,  7.07s/it] epoch 1 loss 2.2564:  46%|████▋     | 13/28 [01:04<01:15,  5.06s/it]epoch 1 loss 2.23842:  46%|████▋     | 13/28 [01:04<01:15,  5.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5758[0m
[32m  eval_f1 = 0.1808[0m
[32m  eval_mcc = 0.5515[0m
[32m  eval_precision = 0.2401[0m
[32m  eval_recall = 0.1726[0m
[32m  ********************[0m
[32m  Best f1:0.1808[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23842:  50%|█████     | 14/28 [01:16<01:41,  7.27s/it]epoch 1 loss 2.21481:  50%|█████     | 14/28 [01:16<01:41,  7.27s/it]epoch 1 loss 2.21481:  54%|█████▎    | 15/28 [01:16<01:07,  5.20s/it]epoch 1 loss 2.19699:  54%|█████▎    | 15/28 [01:17<01:07,  5.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5809[0m
[32m  eval_f1 = 0.1836[0m
[32m  eval_mcc = 0.5562[0m
[32m  eval_precision = 0.2374[0m
[32m  eval_recall = 0.1763[0m
[32m  ********************[0m
[32m  Best f1:0.1836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5562[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.19699:  57%|█████▋    | 16/28 [01:29<01:27,  7.29s/it]epoch 1 loss 2.17135:  57%|█████▋    | 16/28 [01:29<01:27,  7.29s/it]epoch 1 loss 2.17135:  61%|██████    | 17/28 [01:29<00:57,  5.23s/it]epoch 1 loss 2.15179:  61%|██████    | 17/28 [01:29<00:57,  5.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5842[0m
[32m  eval_f1 = 0.1866[0m
[32m  eval_mcc = 0.5606[0m
[32m  eval_precision = 0.2365[0m
[32m  eval_recall = 0.1788[0m
[32m  ********************[0m
[32m  Best f1:0.1866[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15179:  64%|██████▍   | 18/28 [01:41<01:12,  7.27s/it]epoch 1 loss 2.12718:  64%|██████▍   | 18/28 [01:42<01:12,  7.27s/it]epoch 1 loss 2.12718:  68%|██████▊   | 19/28 [01:42<00:46,  5.22s/it]epoch 1 loss 2.12595:  68%|██████▊   | 19/28 [01:42<00:46,  5.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5882[0m
[32m  eval_f1 = 0.1907[0m
[32m  eval_mcc = 0.5669[0m
[32m  eval_precision = 0.2632[0m
[32m  eval_recall = 0.1818[0m
[32m  ********************[0m
[32m  Best f1:0.1907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12595:  71%|███████▏  | 20/28 [01:51<00:50,  6.35s/it]epoch 1 loss 2.10902:  71%|███████▏  | 20/28 [01:51<00:50,  6.35s/it]epoch 1 loss 2.10902:  75%|███████▌  | 21/28 [01:51<00:32,  4.57s/it]epoch 1 loss 2.09303:  75%|███████▌  | 21/28 [01:51<00:32,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5915[0m
[32m  eval_f1 = 0.1923[0m
[32m  eval_mcc = 0.5696[0m
[32m  eval_precision = 0.2598[0m
[32m  eval_recall = 0.1838[0m
[32m  ********************[0m
[32m  Best f1:0.1923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5696[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09303:  79%|███████▊  | 22/28 [01:59<00:33,  5.64s/it]epoch 1 loss 2.07348:  79%|███████▊  | 22/28 [01:59<00:33,  5.64s/it]epoch 1 loss 2.07348:  82%|████████▏ | 23/28 [01:59<00:20,  4.08s/it]epoch 1 loss 2.05902:  82%|████████▏ | 23/28 [02:00<00:20,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5935[0m
[32m  eval_f1 = 0.196[0m
[32m  eval_mcc = 0.5699[0m
[32m  eval_precision = 0.257[0m
[32m  eval_recall = 0.1876[0m
[32m  ********************[0m
[32m  Best f1:0.196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5699[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05902:  86%|████████▌ | 24/28 [02:08<00:21,  5.37s/it]epoch 1 loss 2.04147:  86%|████████▌ | 24/28 [02:08<00:21,  5.37s/it]epoch 1 loss 2.04147:  89%|████████▉ | 25/28 [02:08<00:11,  3.89s/it]epoch 1 loss 2.02672:  89%|████████▉ | 25/28 [02:09<00:11,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5952[0m
[32m  eval_f1 = 0.2016[0m
[32m  eval_mcc = 0.5709[0m
[32m  eval_precision = 0.2802[0m
[32m  eval_recall = 0.1916[0m
[32m  ********************[0m
[32m  Best f1:0.2016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5709[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02672:  93%|█████████▎| 26/28 [02:17<00:10,  5.31s/it]epoch 1 loss 2.01313:  93%|█████████▎| 26/28 [02:17<00:10,  5.31s/it]epoch 1 loss 2.01313:  96%|█████████▋| 27/28 [02:17<00:03,  3.84s/it]epoch 1 loss 1.99969:  96%|█████████▋| 27/28 [02:18<00:03,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5996[0m
[32m  eval_f1 = 0.2239[0m
[32m  eval_mcc = 0.5753[0m
[32m  eval_precision = 0.3082[0m
[32m  eval_recall = 0.2126[0m
[32m  ********************[0m
[32m  Best f1:0.2239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5753[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99969: 100%|██████████| 28/28 [02:30<00:00,  6.38s/it]epoch 1 loss 1.99969: 100%|██████████| 28/28 [02:30<00:00,  5.36s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.42714:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.42714:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 2 loss 1.55911:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.604[0m
[32m  eval_f1 = 0.2267[0m
[32m  eval_mcc = 0.5801[0m
[32m  eval_precision = 0.3257[0m
[32m  eval_recall = 0.2159[0m
[32m  ********************[0m
[32m  Best f1:0.2267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55911:   7%|▋         | 2/28 [00:13<03:19,  7.66s/it]epoch 2 loss 1.55829:   7%|▋         | 2/28 [00:13<03:19,  7.66s/it]epoch 2 loss 1.55829:  11%|█         | 3/28 [00:13<01:48,  4.35s/it]epoch 2 loss 1.54999:  11%|█         | 3/28 [00:13<01:48,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6103[0m
[32m  eval_f1 = 0.2337[0m
[32m  eval_mcc = 0.5873[0m
[32m  eval_precision = 0.3409[0m
[32m  eval_recall = 0.2215[0m
[32m  ********************[0m
[32m  Best f1:0.2337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54999:  14%|█▍        | 4/28 [00:22<02:29,  6.21s/it]epoch 2 loss 1.54495:  14%|█▍        | 4/28 [00:23<02:29,  6.21s/it]epoch 2 loss 1.54495:  18%|█▊        | 5/28 [00:23<01:34,  4.12s/it]epoch 2 loss 1.56646:  18%|█▊        | 5/28 [00:23<01:34,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6145[0m
[32m  eval_f1 = 0.2435[0m
[32m  eval_mcc = 0.5929[0m
[32m  eval_precision = 0.3476[0m
[32m  eval_recall = 0.2286[0m
[32m  ********************[0m
[32m  Best f1:0.2435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56646:  21%|██▏       | 6/28 [00:33<02:16,  6.18s/it]epoch 2 loss 1.6106:  21%|██▏       | 6/28 [00:33<02:16,  6.18s/it] epoch 2 loss 1.6106:  25%|██▌       | 7/28 [00:33<01:30,  4.30s/it]epoch 2 loss 1.60524:  25%|██▌       | 7/28 [00:34<01:30,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6155[0m
[32m  eval_f1 = 0.2497[0m
[32m  eval_mcc = 0.5953[0m
[32m  eval_precision = 0.3704[0m
[32m  eval_recall = 0.2327[0m
[32m  ********************[0m
[32m  Best f1:0.2497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60524:  29%|██▊       | 8/28 [00:45<02:17,  6.85s/it]epoch 2 loss 1.60801:  29%|██▊       | 8/28 [00:46<02:17,  6.85s/it]epoch 2 loss 1.60801:  32%|███▏      | 9/28 [00:46<01:32,  4.84s/it]epoch 2 loss 1.59591:  32%|███▏      | 9/28 [00:46<01:32,  4.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6177[0m
[32m  eval_f1 = 0.2569[0m
[32m  eval_mcc = 0.5978[0m
[32m  eval_precision = 0.3749[0m
[32m  eval_recall = 0.2381[0m
[32m  ********************[0m
[32m  Best f1:0.2569[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59591:  36%|███▌      | 10/28 [00:59<02:10,  7.26s/it]epoch 2 loss 1.57314:  36%|███▌      | 10/28 [00:59<02:10,  7.26s/it]epoch 2 loss 1.57314:  39%|███▉      | 11/28 [00:59<01:27,  5.17s/it]epoch 2 loss 1.57322:  39%|███▉      | 11/28 [00:59<01:27,  5.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6211[0m
[32m  eval_f1 = 0.2659[0m
[32m  eval_mcc = 0.6002[0m
[32m  eval_precision = 0.3841[0m
[32m  eval_recall = 0.2467[0m
[32m  ********************[0m
[32m  Best f1:0.2659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57322:  43%|████▎     | 12/28 [01:12<01:58,  7.41s/it]epoch 2 loss 1.56178:  43%|████▎     | 12/28 [01:12<01:58,  7.41s/it]epoch 2 loss 1.56178:  46%|████▋     | 13/28 [01:12<01:19,  5.30s/it]epoch 2 loss 1.55209:  46%|████▋     | 13/28 [01:12<01:19,  5.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6222[0m
[32m  eval_f1 = 0.2706[0m
[32m  eval_mcc = 0.6004[0m
[32m  eval_precision = 0.3752[0m
[32m  eval_recall = 0.2518[0m
[32m  ********************[0m
[32m  Best f1:0.2706[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55209:  50%|█████     | 14/28 [01:24<01:43,  7.38s/it]epoch 2 loss 1.56096:  50%|█████     | 14/28 [01:25<01:43,  7.38s/it]epoch 2 loss 1.56096:  54%|█████▎    | 15/28 [01:25<01:08,  5.28s/it]epoch 2 loss 1.54828:  54%|█████▎    | 15/28 [01:25<01:08,  5.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6232[0m
[32m  eval_f1 = 0.2723[0m
[32m  eval_mcc = 0.601[0m
[32m  eval_precision = 0.3741[0m
[32m  eval_recall = 0.2539[0m
[32m  ********************[0m
[32m  Best f1:0.2723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54828:  57%|█████▋    | 16/28 [01:35<01:20,  6.69s/it]epoch 2 loss 1.54124:  57%|█████▋    | 16/28 [01:35<01:20,  6.69s/it]epoch 2 loss 1.54124:  61%|██████    | 17/28 [01:35<00:52,  4.80s/it]epoch 2 loss 1.53063:  61%|██████    | 17/28 [01:35<00:52,  4.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6254[0m
[32m  eval_f1 = 0.2745[0m
[32m  eval_mcc = 0.6036[0m
[32m  eval_precision = 0.3749[0m
[32m  eval_recall = 0.2556[0m
[32m  ********************[0m
[32m  Best f1:0.2745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53063:  64%|██████▍   | 18/28 [01:44<01:01,  6.13s/it]epoch 2 loss 1.53108:  64%|██████▍   | 18/28 [01:45<01:01,  6.13s/it]epoch 2 loss 1.53108:  68%|██████▊   | 19/28 [01:45<00:39,  4.41s/it]epoch 2 loss 1.52789:  68%|██████▊   | 19/28 [01:45<00:39,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6263[0m
[32m  eval_f1 = 0.2749[0m
[32m  eval_mcc = 0.605[0m
[32m  eval_precision = 0.3746[0m
[32m  eval_recall = 0.2565[0m
[32m  ********************[0m
[32m  Best f1:0.2749[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52789:  71%|███████▏  | 20/28 [01:51<00:39,  4.88s/it]epoch 2 loss 1.52132:  71%|███████▏  | 20/28 [01:51<00:39,  4.88s/it]epoch 2 loss 1.52132:  75%|███████▌  | 21/28 [01:51<00:24,  3.54s/it]epoch 2 loss 1.52366:  75%|███████▌  | 21/28 [01:51<00:24,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6265[0m
[32m  eval_f1 = 0.2752[0m
[32m  eval_mcc = 0.6056[0m
[32m  eval_precision = 0.3781[0m
[32m  eval_recall = 0.2567[0m
[32m  ********************[0m
[32m  Best f1:0.2752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52366:  79%|███████▊  | 22/28 [02:02<00:34,  5.70s/it]epoch 2 loss 1.52105:  79%|███████▊  | 22/28 [02:02<00:34,  5.70s/it]epoch 2 loss 1.52105:  82%|████████▏ | 23/28 [02:02<00:20,  4.14s/it]epoch 2 loss 1.515:  82%|████████▏ | 23/28 [02:03<00:20,  4.14s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.43it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6262[0m
[32m  eval_f1 = 0.2756[0m
[32m  eval_mcc = 0.6056[0m
[32m  eval_precision = 0.386[0m
[32m  eval_recall = 0.2564[0m
[32m  ********************[0m
[32m  Best f1:0.2756[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.515:  86%|████████▌ | 24/28 [02:14<00:25,  6.34s/it]epoch 2 loss 1.51199:  86%|████████▌ | 24/28 [02:14<00:25,  6.34s/it]epoch 2 loss 1.51199:  89%|████████▉ | 25/28 [02:14<00:13,  4.58s/it]epoch 2 loss 1.50687:  89%|████████▉ | 25/28 [02:15<00:13,  4.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6291[0m
[32m  eval_f1 = 0.2786[0m
[32m  eval_mcc = 0.6087[0m
[32m  eval_precision = 0.3951[0m
[32m  eval_recall = 0.2583[0m
[32m  ********************[0m
[32m  Best f1:0.2786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50687:  93%|█████████▎| 26/28 [02:25<00:13,  6.51s/it]epoch 2 loss 1.50813:  93%|█████████▎| 26/28 [02:26<00:13,  6.51s/it]epoch 2 loss 1.50813:  96%|█████████▋| 27/28 [02:26<00:04,  4.70s/it]epoch 2 loss 1.51105:  96%|█████████▋| 27/28 [02:26<00:04,  4.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6332[0m
[32m  eval_f1 = 0.2847[0m
[32m  eval_mcc = 0.6124[0m
[32m  eval_precision = 0.4026[0m
[32m  eval_recall = 0.2632[0m
[32m  ********************[0m
[32m  Best f1:0.2847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6124[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51105: 100%|██████████| 28/28 [02:34<00:00,  5.89s/it]epoch 2 loss 1.51105: 100%|██████████| 28/28 [02:34<00:00,  5.53s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.32138:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.32138:   4%|▎         | 1/28 [00:00<00:12,  2.11it/s]epoch 3 loss 1.38478:   4%|▎         | 1/28 [00:00<00:12,  2.11it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.43it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6353[0m
[32m  eval_f1 = 0.2886[0m
[32m  eval_mcc = 0.6141[0m
[32m  eval_precision = 0.3986[0m
[32m  eval_recall = 0.2671[0m
[32m  ********************[0m
[32m  Best f1:0.2886[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38478:   7%|▋         | 2/28 [00:07<01:56,  4.46s/it]epoch 3 loss 1.41977:   7%|▋         | 2/28 [00:08<01:56,  4.46s/it]epoch 3 loss 1.41977:  11%|█         | 3/28 [00:08<01:06,  2.65s/it]epoch 3 loss 1.40187:  11%|█         | 3/28 [00:08<01:06,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.43it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6379[0m
[32m  eval_f1 = 0.2941[0m
[32m  eval_mcc = 0.6165[0m
[32m  eval_precision = 0.4047[0m
[32m  eval_recall = 0.2726[0m
[32m  ********************[0m
[32m  Best f1:0.2941[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40187:  14%|█▍        | 4/28 [00:17<02:03,  5.14s/it]epoch 3 loss 1.37167:  14%|█▍        | 4/28 [00:17<02:03,  5.14s/it]epoch 3 loss 1.37167:  18%|█▊        | 5/28 [00:17<01:19,  3.44s/it]epoch 3 loss 1.38504:  18%|█▊        | 5/28 [00:17<01:19,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.2937[0m
[32m  eval_mcc = 0.6176[0m
[32m  eval_precision = 0.3896[0m
[32m  eval_recall = 0.2725[0m
[32m  ********************[0m
[32m  Best MCC:0.6176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38504:  21%|██▏       | 6/28 [00:22<01:29,  4.06s/it]epoch 3 loss 1.39216:  21%|██▏       | 6/28 [00:23<01:29,  4.06s/it]epoch 3 loss 1.39216:  25%|██▌       | 7/28 [00:23<01:00,  2.86s/it]epoch 3 loss 1.41043:  25%|██▌       | 7/28 [00:23<01:00,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6402[0m
[32m  eval_f1 = 0.2956[0m
[32m  eval_mcc = 0.6193[0m
[32m  eval_precision = 0.4021[0m
[32m  eval_recall = 0.2731[0m
[32m  ********************[0m
[32m  Best f1:0.2956[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41043:  29%|██▊       | 8/28 [00:30<01:26,  4.33s/it]epoch 3 loss 1.41473:  29%|██▊       | 8/28 [00:31<01:26,  4.33s/it]epoch 3 loss 1.41473:  32%|███▏      | 9/28 [00:31<00:59,  3.11s/it]epoch 3 loss 1.413:  32%|███▏      | 9/28 [00:31<00:59,  3.11s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6421[0m
[32m  eval_f1 = 0.2995[0m
[32m  eval_mcc = 0.6216[0m
[32m  eval_precision = 0.4105[0m
[32m  eval_recall = 0.2759[0m
[32m  ********************[0m
[32m  Best f1:0.2995[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.413:  36%|███▌      | 10/28 [00:43<01:49,  6.11s/it]epoch 3 loss 1.40472:  36%|███▌      | 10/28 [00:44<01:49,  6.11s/it]epoch 3 loss 1.40472:  39%|███▉      | 11/28 [00:44<01:14,  4.37s/it]epoch 3 loss 1.40206:  39%|███▉      | 11/28 [00:44<01:14,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6438[0m
[32m  eval_f1 = 0.3025[0m
[32m  eval_mcc = 0.6237[0m
[32m  eval_precision = 0.4194[0m
[32m  eval_recall = 0.2783[0m
[32m  ********************[0m
[32m  Best f1:0.3025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40206:  43%|████▎     | 12/28 [00:56<01:48,  6.81s/it]epoch 3 loss 1.40748:  43%|████▎     | 12/28 [00:57<01:48,  6.81s/it]epoch 3 loss 1.40748:  46%|████▋     | 13/28 [00:57<01:13,  4.88s/it]epoch 3 loss 1.40321:  46%|████▋     | 13/28 [00:57<01:13,  4.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6439[0m
[32m  eval_f1 = 0.3029[0m
[32m  eval_mcc = 0.6241[0m
[32m  eval_precision = 0.415[0m
[32m  eval_recall = 0.2786[0m
[32m  ********************[0m
[32m  Best f1:0.3029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40321:  50%|█████     | 14/28 [01:11<01:48,  7.74s/it]epoch 3 loss 1.4017:  50%|█████     | 14/28 [01:12<01:48,  7.74s/it] epoch 3 loss 1.4017:  54%|█████▎    | 15/28 [01:12<01:11,  5.53s/it]epoch 3 loss 1.40427:  54%|█████▎    | 15/28 [01:12<01:11,  5.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6441[0m
[32m  eval_f1 = 0.3054[0m
[32m  eval_mcc = 0.6243[0m
[32m  eval_precision = 0.4275[0m
[32m  eval_recall = 0.281[0m
[32m  ********************[0m
[32m  Best f1:0.3054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40427:  57%|█████▋    | 16/28 [01:23<01:26,  7.25s/it]epoch 3 loss 1.40894:  57%|█████▋    | 16/28 [01:23<01:26,  7.25s/it]epoch 3 loss 1.40894:  61%|██████    | 17/28 [01:23<00:57,  5.20s/it]epoch 3 loss 1.41603:  61%|██████    | 17/28 [01:24<00:57,  5.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6443[0m
[32m  eval_f1 = 0.3098[0m
[32m  eval_mcc = 0.6244[0m
[32m  eval_precision = 0.4278[0m
[32m  eval_recall = 0.2847[0m
[32m  ********************[0m
[32m  Best f1:0.3098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41603:  64%|██████▍   | 18/28 [01:37<01:17,  7.70s/it]epoch 3 loss 1.40592:  64%|██████▍   | 18/28 [01:37<01:17,  7.70s/it]epoch 3 loss 1.40592:  68%|██████▊   | 19/28 [01:37<00:49,  5.52s/it]epoch 3 loss 1.40737:  68%|██████▊   | 19/28 [01:38<00:49,  5.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6465[0m
[32m  eval_f1 = 0.3113[0m
[32m  eval_mcc = 0.6265[0m
[32m  eval_precision = 0.4293[0m
[32m  eval_recall = 0.287[0m
[32m  ********************[0m
[32m  Best f1:0.3113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40737:  71%|███████▏  | 20/28 [01:51<01:03,  7.89s/it]epoch 3 loss 1.39972:  71%|███████▏  | 20/28 [01:51<01:03,  7.89s/it]epoch 3 loss 1.39972:  75%|███████▌  | 21/28 [01:51<00:39,  5.65s/it]epoch 3 loss 1.39815:  75%|███████▌  | 21/28 [01:51<00:39,  5.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6484[0m
[32m  eval_f1 = 0.3191[0m
[32m  eval_mcc = 0.6285[0m
[32m  eval_precision = 0.4401[0m
[32m  eval_recall = 0.2935[0m
[32m  ********************[0m
[32m  Best f1:0.3191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39815:  79%|███████▊  | 22/28 [02:00<00:39,  6.56s/it]epoch 3 loss 1.39985:  79%|███████▊  | 22/28 [02:00<00:39,  6.56s/it]epoch 3 loss 1.39985:  82%|████████▏ | 23/28 [02:00<00:23,  4.72s/it]epoch 3 loss 1.4017:  82%|████████▏ | 23/28 [02:00<00:23,  4.72s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6506[0m
[32m  eval_f1 = 0.3205[0m
[32m  eval_mcc = 0.631[0m
[32m  eval_precision = 0.4429[0m
[32m  eval_recall = 0.2948[0m
[32m  ********************[0m
[32m  Best f1:0.3205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4017:  86%|████████▌ | 24/28 [02:09<00:23,  5.86s/it]epoch 3 loss 1.40103:  86%|████████▌ | 24/28 [02:09<00:23,  5.86s/it]epoch 3 loss 1.40103:  89%|████████▉ | 25/28 [02:09<00:12,  4.23s/it]epoch 3 loss 1.39987:  89%|████████▉ | 25/28 [02:09<00:12,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6511[0m
[32m  eval_f1 = 0.3217[0m
[32m  eval_mcc = 0.6317[0m
[32m  eval_precision = 0.4433[0m
[32m  eval_recall = 0.2955[0m
[32m  ********************[0m
[32m  Best f1:0.3217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39987:  93%|█████████▎| 26/28 [02:21<00:12,  6.48s/it]epoch 3 loss 1.39337:  93%|█████████▎| 26/28 [02:21<00:12,  6.48s/it]epoch 3 loss 1.39337:  96%|█████████▋| 27/28 [02:21<00:04,  4.66s/it]epoch 3 loss 1.38596:  96%|█████████▋| 27/28 [02:21<00:04,  4.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6518[0m
[32m  eval_f1 = 0.322[0m
[32m  eval_mcc = 0.6324[0m
[32m  eval_precision = 0.4446[0m
[32m  eval_recall = 0.2955[0m
[32m  ********************[0m
[32m  Best f1:0.322[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38596: 100%|██████████| 28/28 [02:33<00:00,  6.89s/it]epoch 3 loss 1.38596: 100%|██████████| 28/28 [02:33<00:00,  5.49s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.30631:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.30631:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s]epoch 4 loss 1.36059:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6517[0m
[32m  eval_f1 = 0.322[0m
[32m  eval_mcc = 0.6325[0m
[32m  eval_precision = 0.4488[0m
[32m  eval_recall = 0.295[0m
[32m  ********************[0m
[32m  Best f1:0.322[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36059:   7%|▋         | 2/28 [00:11<02:54,  6.72s/it]epoch 4 loss 1.37619:   7%|▋         | 2/28 [00:11<02:54,  6.72s/it]epoch 4 loss 1.37619:  11%|█         | 3/28 [00:11<01:36,  3.84s/it]epoch 4 loss 1.40226:  11%|█         | 3/28 [00:12<01:36,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6519[0m
[32m  eval_f1 = 0.3209[0m
[32m  eval_mcc = 0.6327[0m
[32m  eval_precision = 0.4508[0m
[32m  eval_recall = 0.2941[0m
[32m  ********************[0m
[32m  Best MCC:0.6327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40226:  14%|█▍        | 4/28 [00:17<01:51,  4.65s/it]epoch 4 loss 1.36209:  14%|█▍        | 4/28 [00:18<01:51,  4.65s/it]epoch 4 loss 1.36209:  18%|█▊        | 5/28 [00:18<01:11,  3.12s/it]epoch 4 loss 1.34076:  18%|█▊        | 5/28 [00:18<01:11,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6518[0m
[32m  eval_f1 = 0.3197[0m
[32m  eval_mcc = 0.6326[0m
[32m  eval_precision = 0.4402[0m
[32m  eval_recall = 0.2932[0m

epoch 4 loss 1.34076:  21%|██▏       | 6/28 [00:22<01:13,  3.36s/it]epoch 4 loss 1.34805:  21%|██▏       | 6/28 [00:22<01:13,  3.36s/it]epoch 4 loss 1.34805:  25%|██▌       | 7/28 [00:22<00:50,  2.39s/it]epoch 4 loss 1.35552:  25%|██▌       | 7/28 [00:22<00:50,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6515[0m
[32m  eval_f1 = 0.3235[0m
[32m  eval_mcc = 0.6322[0m
[32m  eval_precision = 0.4492[0m
[32m  eval_recall = 0.2956[0m
[32m  ********************[0m
[32m  Best f1:0.3235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.35552:  29%|██▊       | 8/28 [00:28<01:10,  3.55s/it]epoch 4 loss 1.34662:  29%|██▊       | 8/28 [00:28<01:10,  3.55s/it]epoch 4 loss 1.34662:  32%|███▏      | 9/28 [00:28<00:48,  2.58s/it]epoch 4 loss 1.34245:  32%|███▏      | 9/28 [00:29<00:48,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6507[0m
[32m  eval_f1 = 0.3248[0m
[32m  eval_mcc = 0.6312[0m
[32m  eval_precision = 0.4479[0m
[32m  eval_recall = 0.2969[0m
[32m  ********************[0m
[32m  Best f1:0.3248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.34245:  36%|███▌      | 10/28 [00:34<01:05,  3.63s/it]epoch 4 loss 1.33719:  36%|███▌      | 10/28 [00:35<01:05,  3.63s/it]epoch 4 loss 1.33719:  39%|███▉      | 11/28 [00:35<00:45,  2.65s/it]epoch 4 loss 1.34883:  39%|███▉      | 11/28 [00:35<00:45,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6502[0m
[32m  eval_f1 = 0.3242[0m
[32m  eval_mcc = 0.6305[0m
[32m  eval_precision = 0.4464[0m
[32m  eval_recall = 0.2964[0m

epoch 4 loss 1.34883:  43%|████▎     | 12/28 [00:39<00:48,  3.01s/it]epoch 4 loss 1.35138:  43%|████▎     | 12/28 [00:39<00:48,  3.01s/it]epoch 4 loss 1.35138:  46%|████▋     | 13/28 [00:39<00:33,  2.22s/it]epoch 4 loss 1.34974:  46%|████▋     | 13/28 [00:40<00:33,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6506[0m
[32m  eval_f1 = 0.3257[0m
[32m  eval_mcc = 0.6309[0m
[32m  eval_precision = 0.4463[0m
[32m  eval_recall = 0.2974[0m
[32m  ********************[0m
[32m  Best f1:0.3257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.34974:  50%|█████     | 14/28 [00:46<00:50,  3.61s/it]epoch 4 loss 1.35431:  50%|█████     | 14/28 [00:46<00:50,  3.61s/it]epoch 4 loss 1.35431:  54%|█████▎    | 15/28 [00:46<00:34,  2.65s/it]epoch 4 loss 1.35555:  54%|█████▎    | 15/28 [00:47<00:34,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3277[0m
[32m  eval_mcc = 0.6317[0m
[32m  eval_precision = 0.4464[0m
[32m  eval_recall = 0.2991[0m
[32m  ********************[0m
[32m  Best f1:0.3277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.35555:  57%|█████▋    | 16/28 [00:54<00:51,  4.30s/it]epoch 4 loss 1.35068:  57%|█████▋    | 16/28 [00:55<00:51,  4.30s/it]epoch 4 loss 1.35068:  61%|██████    | 17/28 [00:55<00:34,  3.13s/it]epoch 4 loss 1.3533:  61%|██████    | 17/28 [00:55<00:34,  3.13s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6519[0m
[32m  eval_f1 = 0.3289[0m
[32m  eval_mcc = 0.6321[0m
[32m  eval_precision = 0.4473[0m
[32m  eval_recall = 0.3004[0m
[32m  ********************[0m
[32m  Best f1:0.3289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.3533:  64%|██████▍   | 18/28 [01:03<00:44,  4.49s/it]epoch 4 loss 1.35253:  64%|██████▍   | 18/28 [01:03<00:44,  4.49s/it]epoch 4 loss 1.35253:  68%|██████▊   | 19/28 [01:03<00:29,  3.27s/it]epoch 4 loss 1.35354:  68%|██████▊   | 19/28 [01:03<00:29,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3302[0m
[32m  eval_mcc = 0.6327[0m
[32m  eval_precision = 0.4472[0m
[32m  eval_recall = 0.3021[0m
[32m  ********************[0m
[32m  Best f1:0.3302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35354:  71%|███████▏  | 20/28 [01:12<00:40,  5.02s/it]epoch 4 loss 1.35301:  71%|███████▏  | 20/28 [01:12<00:40,  5.02s/it]epoch 4 loss 1.35301:  75%|███████▌  | 21/28 [01:12<00:25,  3.64s/it]epoch 4 loss 1.35603:  75%|███████▌  | 21/28 [01:13<00:25,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3309[0m
[32m  eval_mcc = 0.633[0m
[32m  eval_precision = 0.448[0m
[32m  eval_recall = 0.3027[0m
[32m  ********************[0m
[32m  Best f1:0.3309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35603:  79%|███████▊  | 22/28 [01:23<00:33,  5.65s/it]epoch 4 loss 1.35769:  79%|███████▊  | 22/28 [01:23<00:33,  5.65s/it]epoch 4 loss 1.35769:  82%|████████▏ | 23/28 [01:23<00:20,  4.08s/it]epoch 4 loss 1.35322:  82%|████████▏ | 23/28 [01:24<00:20,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.67it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.64it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.62it/s][A100%|██████████| 10/10 [00:03<00:00,  2.91it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6531[0m
[32m  eval_f1 = 0.3337[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4495[0m
[32m  eval_recall = 0.3065[0m
[32m  ********************[0m
[32m  Best f1:0.3337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35322:  86%|████████▌ | 24/28 [01:33<00:23,  5.82s/it]epoch 4 loss 1.34977:  86%|████████▌ | 24/28 [01:34<00:23,  5.82s/it]epoch 4 loss 1.34977:  89%|████████▉ | 25/28 [01:34<00:12,  4.22s/it]epoch 4 loss 1.34426:  89%|████████▉ | 25/28 [01:34<00:12,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6531[0m
[32m  eval_f1 = 0.3337[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4498[0m
[32m  eval_recall = 0.3065[0m
[32m  ********************[0m
[32m  Best f1:0.3337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34426:  93%|█████████▎| 26/28 [01:46<00:13,  6.54s/it]epoch 4 loss 1.34968:  93%|█████████▎| 26/28 [01:46<00:13,  6.54s/it]epoch 4 loss 1.34968:  96%|█████████▋| 27/28 [01:46<00:04,  4.72s/it]epoch 4 loss 1.34858:  96%|█████████▋| 27/28 [01:46<00:04,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6532[0m
[32m  eval_f1 = 0.3339[0m
[32m  eval_mcc = 0.6334[0m
[32m  eval_precision = 0.4502[0m
[32m  eval_recall = 0.3067[0m
[32m  ********************[0m
[32m  Best f1:0.3339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34858: 100%|██████████| 28/28 [01:58<00:00,  6.77s/it]epoch 4 loss 1.34858: 100%|██████████| 28/28 [01:58<00:00,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.38it/s] 20%|██        | 2/10 [00:00<00:03,  2.41it/s] 30%|███       | 3/10 [00:01<00:02,  2.41it/s] 40%|████      | 4/10 [00:01<00:02,  2.40it/s] 50%|█████     | 5/10 [00:02<00:02,  2.41it/s] 60%|██████    | 6/10 [00:02<00:01,  2.41it/s] 70%|███████   | 7/10 [00:02<00:01,  2.42it/s] 80%|████████  | 8/10 [00:03<00:00,  2.42it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s]100%|██████████| 10/10 [00:03<00:00,  3.15it/s]100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6532[0m
[32m  eval_f1 = 0.3339[0m
[32m  eval_mcc = 0.6334[0m
[32m  eval_precision = 0.4502[0m
[32m  eval_recall = 0.3067[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.43it/s] 20%|██        | 2/10 [00:00<00:03,  2.40it/s] 30%|███       | 3/10 [00:01<00:02,  2.41it/s] 40%|████      | 4/10 [00:01<00:02,  2.41it/s] 50%|█████     | 5/10 [00:02<00:02,  2.41it/s] 60%|██████    | 6/10 [00:02<00:01,  2.41it/s] 70%|███████   | 7/10 [00:02<00:01,  2.41it/s] 80%|████████  | 8/10 [00:03<00:00,  2.41it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s]100%|██████████| 10/10 [00:03<00:00,  3.08it/s]100%|██████████| 10/10 [00:03<00:00,  2.59it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6333[0m
[32m  eval_f1 = 0.2636[0m
[32m  eval_mcc = 0.6136[0m
[32m  eval_precision = 0.3699[0m
[32m  eval_recall = 0.2467[0m

