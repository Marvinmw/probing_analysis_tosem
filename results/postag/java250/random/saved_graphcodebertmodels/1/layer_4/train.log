[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.62017:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.62017:   4%|▎         | 1/28 [00:00<00:23,  1.16it/s]epoch 0 loss 5.6317:   4%|▎         | 1/28 [00:01<00:23,  1.16it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.44it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0033[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = -0.0034[0m
[32m  eval_precision = 0.0036[0m
[32m  eval_recall = 0.007[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.6317:   7%|▋         | 2/28 [00:06<01:33,  3.59s/it]epoch 0 loss 5.61706:   7%|▋         | 2/28 [00:06<01:33,  3.59s/it]epoch 0 loss 5.61706:  11%|█         | 3/28 [00:06<00:53,  2.16s/it]epoch 0 loss 5.60635:  11%|█         | 3/28 [00:07<00:53,  2.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A100%|██████████| 10/10 [00:03<00:00,  2.63it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0077[0m
[32m  eval_f1 = 0.0013[0m
[32m  eval_mcc = -0.0056[0m
[32m  eval_precision = 0.004[0m
[32m  eval_recall = 0.0065[0m
[32m  ********************[0m
[32m  Best f1:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.60635:  14%|█▍        | 4/28 [00:15<01:53,  4.74s/it]epoch 0 loss 5.58445:  14%|█▍        | 4/28 [00:15<01:53,  4.74s/it]epoch 0 loss 5.58445:  18%|█▊        | 5/28 [00:15<01:13,  3.19s/it]epoch 0 loss 5.55895:  18%|█▊        | 5/28 [00:16<01:13,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0263[0m
[32m  eval_f1 = 0.0026[0m
[32m  eval_mcc = -0.003[0m
[32m  eval_precision = 0.0073[0m
[32m  eval_recall = 0.0079[0m
[32m  ********************[0m
[32m  Best f1:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.55895:  21%|██▏       | 6/28 [00:21<01:24,  3.86s/it]epoch 0 loss 5.51838:  21%|██▏       | 6/28 [00:21<01:24,  3.86s/it]epoch 0 loss 5.51838:  25%|██▌       | 7/28 [00:21<00:57,  2.73s/it]epoch 0 loss 5.47544:  25%|██▌       | 7/28 [00:21<00:57,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0618[0m
[32m  eval_f1 = 0.0039[0m
[32m  eval_mcc = 0.0085[0m
[32m  eval_precision = 0.0092[0m
[32m  eval_recall = 0.0084[0m
[32m  ********************[0m
[32m  Best f1:0.0039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.47544:  29%|██▊       | 8/28 [00:27<01:17,  3.90s/it]epoch 0 loss 5.42484:  29%|██▊       | 8/28 [00:28<01:17,  3.90s/it]epoch 0 loss 5.42484:  32%|███▏      | 9/28 [00:28<00:53,  2.81s/it]epoch 0 loss 5.36941:  32%|███▏      | 9/28 [00:28<00:53,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0769[0m
[32m  eval_f1 = 0.0047[0m
[32m  eval_mcc = 0.0137[0m
[32m  eval_precision = 0.0171[0m
[32m  eval_recall = 0.0087[0m
[32m  ********************[0m
[32m  Best f1:0.0047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.36941:  36%|███▌      | 10/28 [00:34<01:07,  3.76s/it]epoch 0 loss 5.31146:  36%|███▌      | 10/28 [00:34<01:07,  3.76s/it]epoch 0 loss 5.31146:  39%|███▉      | 11/28 [00:34<00:46,  2.74s/it]epoch 0 loss 5.24293:  39%|███▉      | 11/28 [00:35<00:46,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0883[0m
[32m  eval_f1 = 0.0063[0m
[32m  eval_mcc = 0.0234[0m
[32m  eval_precision = 0.0211[0m
[32m  eval_recall = 0.0112[0m
[32m  ********************[0m
[32m  Best f1:0.0063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.24293:  43%|████▎     | 12/28 [00:40<00:59,  3.70s/it]epoch 0 loss 5.1753:  43%|████▎     | 12/28 [00:40<00:59,  3.70s/it] epoch 0 loss 5.1753:  46%|████▋     | 13/28 [00:40<00:40,  2.71s/it]epoch 0 loss 5.10116:  46%|████▋     | 13/28 [00:41<00:40,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1009[0m
[32m  eval_f1 = 0.0077[0m
[32m  eval_mcc = 0.0353[0m
[32m  eval_precision = 0.025[0m
[32m  eval_recall = 0.0125[0m
[32m  ********************[0m
[32m  Best f1:0.0077[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.10116:  50%|█████     | 14/28 [00:46<00:51,  3.67s/it]epoch 0 loss 5.0264:  50%|█████     | 14/28 [00:47<00:51,  3.67s/it] epoch 0 loss 5.0264:  54%|█████▎    | 15/28 [00:47<00:35,  2.70s/it]epoch 0 loss 4.94754:  54%|█████▎    | 15/28 [00:47<00:35,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1228[0m
[32m  eval_f1 = 0.0095[0m
[32m  eval_mcc = 0.0579[0m
[32m  eval_precision = 0.034[0m
[32m  eval_recall = 0.0146[0m
[32m  ********************[0m
[32m  Best f1:0.0095[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94754:  57%|█████▋    | 16/28 [00:57<01:00,  5.00s/it]epoch 0 loss 4.86985:  57%|█████▋    | 16/28 [00:58<01:00,  5.00s/it]epoch 0 loss 4.86985:  61%|██████    | 17/28 [00:58<00:39,  3.63s/it]epoch 0 loss 4.79507:  61%|██████    | 17/28 [00:58<00:39,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1567[0m
[32m  eval_f1 = 0.0118[0m
[32m  eval_mcc = 0.0945[0m
[32m  eval_precision = 0.0321[0m
[32m  eval_recall = 0.0175[0m
[32m  ********************[0m
[32m  Best f1:0.0118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.79507:  64%|██████▍   | 18/28 [01:10<01:03,  6.39s/it]epoch 0 loss 4.72034:  64%|██████▍   | 18/28 [01:11<01:03,  6.39s/it]epoch 0 loss 4.72034:  68%|██████▊   | 19/28 [01:11<00:41,  4.60s/it]epoch 0 loss 4.65272:  68%|██████▊   | 19/28 [01:11<00:41,  4.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2188[0m
[32m  eval_f1 = 0.0174[0m
[32m  eval_mcc = 0.1605[0m
[32m  eval_precision = 0.0626[0m
[32m  eval_recall = 0.0236[0m
[32m  ********************[0m
[32m  Best f1:0.0174[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.65272:  71%|███████▏  | 20/28 [01:24<00:57,  7.14s/it]epoch 0 loss 4.58394:  71%|███████▏  | 20/28 [01:24<00:57,  7.14s/it]epoch 0 loss 4.58394:  75%|███████▌  | 21/28 [01:24<00:35,  5.13s/it]epoch 0 loss 4.512:  75%|███████▌  | 21/28 [01:25<00:35,  5.13s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2947[0m
[32m  eval_f1 = 0.0341[0m
[32m  eval_mcc = 0.239[0m
[32m  eval_precision = 0.1073[0m
[32m  eval_recall = 0.0368[0m
[32m  ********************[0m
[32m  Best f1:0.0341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.512:  79%|███████▊  | 22/28 [01:37<00:44,  7.44s/it]epoch 0 loss 4.4472:  79%|███████▊  | 22/28 [01:38<00:44,  7.44s/it]epoch 0 loss 4.4472:  82%|████████▏ | 23/28 [01:38<00:26,  5.34s/it]epoch 0 loss 4.38353:  82%|████████▏ | 23/28 [01:38<00:26,  5.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3661[0m
[32m  eval_f1 = 0.0734[0m
[32m  eval_mcc = 0.3206[0m
[32m  eval_precision = 0.1197[0m
[32m  eval_recall = 0.07[0m
[32m  ********************[0m
[32m  Best f1:0.0734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.38353:  86%|████████▌ | 24/28 [01:50<00:30,  7.58s/it]epoch 0 loss 4.32149:  86%|████████▌ | 24/28 [01:51<00:30,  7.58s/it]epoch 0 loss 4.32149:  89%|████████▉ | 25/28 [01:51<00:16,  5.43s/it]epoch 0 loss 4.25356:  89%|████████▉ | 25/28 [01:51<00:16,  5.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4169[0m
[32m  eval_f1 = 0.0991[0m
[32m  eval_mcc = 0.3819[0m
[32m  eval_precision = 0.1663[0m
[32m  eval_recall = 0.0895[0m
[32m  ********************[0m
[32m  Best f1:0.0991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.25356:  93%|█████████▎| 26/28 [02:02<00:14,  7.16s/it]epoch 0 loss 4.19057:  93%|█████████▎| 26/28 [02:02<00:14,  7.16s/it]epoch 0 loss 4.19057:  96%|█████████▋| 27/28 [02:02<00:05,  5.14s/it]epoch 0 loss 4.13442:  96%|█████████▋| 27/28 [02:03<00:05,  5.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4613[0m
[32m  eval_f1 = 0.1223[0m
[32m  eval_mcc = 0.4328[0m
[32m  eval_precision = 0.1715[0m
[32m  eval_recall = 0.1104[0m
[32m  ********************[0m
[32m  Best f1:0.1223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.13442: 100%|██████████| 28/28 [02:10<00:00,  5.98s/it]epoch 0 loss 4.13442: 100%|██████████| 28/28 [02:10<00:00,  4.68s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.41967:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.41967:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 1 loss 2.31787:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5075[0m
[32m  eval_f1 = 0.1398[0m
[32m  eval_mcc = 0.4799[0m
[32m  eval_precision = 0.1717[0m
[32m  eval_recall = 0.1338[0m
[32m  ********************[0m
[32m  Best f1:0.1398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4799[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.31787:   7%|▋         | 2/28 [00:08<02:12,  5.10s/it]epoch 1 loss 2.25017:   7%|▋         | 2/28 [00:09<02:12,  5.10s/it]epoch 1 loss 2.25017:  11%|█         | 3/28 [00:09<01:14,  2.97s/it]epoch 1 loss 2.22702:  11%|█         | 3/28 [00:09<01:14,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5375[0m
[32m  eval_f1 = 0.1518[0m
[32m  eval_mcc = 0.5098[0m
[32m  eval_precision = 0.2[0m
[32m  eval_recall = 0.1485[0m
[32m  ********************[0m
[32m  Best f1:0.1518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.22702:  14%|█▍        | 4/28 [00:18<02:08,  5.34s/it]epoch 1 loss 2.21078:  14%|█▍        | 4/28 [00:18<02:08,  5.34s/it]epoch 1 loss 2.21078:  18%|█▊        | 5/28 [00:18<01:21,  3.57s/it]epoch 1 loss 2.18362:  18%|█▊        | 5/28 [00:19<01:21,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5568[0m
[32m  eval_f1 = 0.1747[0m
[32m  eval_mcc = 0.5297[0m
[32m  eval_precision = 0.2106[0m
[32m  eval_recall = 0.1688[0m
[32m  ********************[0m
[32m  Best f1:0.1747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.18362:  21%|██▏       | 6/28 [00:31<02:26,  6.66s/it]epoch 1 loss 2.15549:  21%|██▏       | 6/28 [00:31<02:26,  6.66s/it]epoch 1 loss 2.15549:  25%|██▌       | 7/28 [00:31<01:37,  4.62s/it]epoch 1 loss 2.13486:  25%|██▌       | 7/28 [00:32<01:37,  4.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5667[0m
[32m  eval_f1 = 0.1796[0m
[32m  eval_mcc = 0.5403[0m
[32m  eval_precision = 0.2174[0m
[32m  eval_recall = 0.1741[0m
[32m  ********************[0m
[32m  Best f1:0.1796[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13486:  29%|██▊       | 8/28 [00:43<02:20,  7.04s/it]epoch 1 loss 2.12955:  29%|██▊       | 8/28 [00:44<02:20,  7.04s/it]epoch 1 loss 2.12955:  32%|███▏      | 9/28 [00:44<01:34,  4.97s/it]epoch 1 loss 2.10845:  32%|███▏      | 9/28 [00:44<01:34,  4.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5767[0m
[32m  eval_f1 = 0.1833[0m
[32m  eval_mcc = 0.552[0m
[32m  eval_precision = 0.2298[0m
[32m  eval_recall = 0.1767[0m
[32m  ********************[0m
[32m  Best f1:0.1833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.10845:  36%|███▌      | 10/28 [00:53<01:50,  6.12s/it]epoch 1 loss 2.08599:  36%|███▌      | 10/28 [00:53<01:50,  6.12s/it]epoch 1 loss 2.08599:  39%|███▉      | 11/28 [00:53<01:14,  4.38s/it]epoch 1 loss 2.05708:  39%|███▉      | 11/28 [00:53<01:14,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5822[0m
[32m  eval_f1 = 0.1875[0m
[32m  eval_mcc = 0.5595[0m
[32m  eval_precision = 0.2456[0m
[32m  eval_recall = 0.1787[0m
[32m  ********************[0m
[32m  Best f1:0.1875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05708:  43%|████▎     | 12/28 [01:01<01:29,  5.60s/it]epoch 1 loss 2.03169:  43%|████▎     | 12/28 [01:02<01:29,  5.60s/it]epoch 1 loss 2.03169:  46%|████▋     | 13/28 [01:02<01:00,  4.03s/it]epoch 1 loss 2.01645:  46%|████▋     | 13/28 [01:02<01:00,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5865[0m
[32m  eval_f1 = 0.1957[0m
[32m  eval_mcc = 0.5651[0m
[32m  eval_precision = 0.2795[0m
[32m  eval_recall = 0.1854[0m
[32m  ********************[0m
[32m  Best f1:0.1957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01645:  50%|█████     | 14/28 [01:11<01:20,  5.72s/it]epoch 1 loss 1.9957:  50%|█████     | 14/28 [01:12<01:20,  5.72s/it] epoch 1 loss 1.9957:  54%|█████▎    | 15/28 [01:12<00:53,  4.13s/it]epoch 1 loss 1.98172:  54%|█████▎    | 15/28 [01:12<00:53,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5908[0m
[32m  eval_f1 = 0.2158[0m
[32m  eval_mcc = 0.5704[0m
[32m  eval_precision = 0.3106[0m
[32m  eval_recall = 0.2027[0m
[32m  ********************[0m
[32m  Best f1:0.2158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98172:  57%|█████▋    | 16/28 [01:24<01:17,  6.48s/it]epoch 1 loss 1.95929:  57%|█████▋    | 16/28 [01:24<01:17,  6.48s/it]epoch 1 loss 1.95929:  61%|██████    | 17/28 [01:24<00:51,  4.66s/it]epoch 1 loss 1.93995:  61%|██████    | 17/28 [01:25<00:51,  4.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5958[0m
[32m  eval_f1 = 0.2283[0m
[32m  eval_mcc = 0.5764[0m
[32m  eval_precision = 0.3299[0m
[32m  eval_recall = 0.2132[0m
[32m  ********************[0m
[32m  Best f1:0.2283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5764[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93995:  64%|██████▍   | 18/28 [01:36<01:09,  6.91s/it]epoch 1 loss 1.91785:  64%|██████▍   | 18/28 [01:37<01:09,  6.91s/it]epoch 1 loss 1.91785:  68%|██████▊   | 19/28 [01:37<00:44,  4.96s/it]epoch 1 loss 1.91859:  68%|██████▊   | 19/28 [01:37<00:44,  4.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.49it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.65it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6031[0m
[32m  eval_f1 = 0.2361[0m
[32m  eval_mcc = 0.5844[0m
[32m  eval_precision = 0.3307[0m
[32m  eval_recall = 0.2195[0m
[32m  ********************[0m
[32m  Best f1:0.2361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5844[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91859:  71%|███████▏  | 20/28 [01:56<01:13,  9.15s/it]epoch 1 loss 1.90442:  71%|███████▏  | 20/28 [01:56<01:13,  9.15s/it]epoch 1 loss 1.90442:  75%|███████▌  | 21/28 [01:56<00:45,  6.55s/it]epoch 1 loss 1.89105:  75%|███████▌  | 21/28 [01:57<00:45,  6.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.43it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.43it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.43it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.43it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.43it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.43it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.609[0m
[32m  eval_f1 = 0.2447[0m
[32m  eval_mcc = 0.5887[0m
[32m  eval_precision = 0.3392[0m
[32m  eval_recall = 0.2271[0m
[32m  ********************[0m
[32m  Best f1:0.2447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5887[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89105:  79%|███████▊  | 22/28 [02:08<00:48,  8.14s/it]epoch 1 loss 1.87362:  79%|███████▊  | 22/28 [02:09<00:48,  8.14s/it]epoch 1 loss 1.87362:  82%|████████▏ | 23/28 [02:09<00:29,  5.85s/it]epoch 1 loss 1.86045:  82%|████████▏ | 23/28 [02:09<00:29,  5.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.43it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.43it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.43it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.611[0m
[32m  eval_f1 = 0.2594[0m
[32m  eval_mcc = 0.5886[0m
[32m  eval_precision = 0.3617[0m
[32m  eval_recall = 0.241[0m
[32m  ********************[0m
[32m  Best f1:0.2594[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 1 loss 1.86045:  86%|████████▌ | 24/28 [02:17<00:26,  6.52s/it]epoch 1 loss 1.84461:  86%|████████▌ | 24/28 [02:17<00:26,  6.52s/it]epoch 1 loss 1.84461:  89%|████████▉ | 25/28 [02:17<00:14,  4.71s/it]epoch 1 loss 1.83164:  89%|████████▉ | 25/28 [02:18<00:14,  4.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.43it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6134[0m
[32m  eval_f1 = 0.267[0m
[32m  eval_mcc = 0.5904[0m
[32m  eval_precision = 0.3691[0m
[32m  eval_recall = 0.2477[0m
[32m  ********************[0m
[32m  Best f1:0.267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5904[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83164:  93%|█████████▎| 26/28 [02:27<00:12,  6.41s/it]epoch 1 loss 1.81963:  93%|█████████▎| 26/28 [02:28<00:12,  6.41s/it]epoch 1 loss 1.81963:  96%|█████████▋| 27/28 [02:28<00:04,  4.64s/it]epoch 1 loss 1.80823:  96%|█████████▋| 27/28 [02:28<00:04,  4.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.44it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6158[0m
[32m  eval_f1 = 0.2697[0m
[32m  eval_mcc = 0.5929[0m
[32m  eval_precision = 0.3614[0m
[32m  eval_recall = 0.2514[0m
[32m  ********************[0m
[32m  Best f1:0.2697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80823: 100%|██████████| 28/28 [02:39<00:00,  6.50s/it]epoch 1 loss 1.80823: 100%|██████████| 28/28 [02:39<00:00,  5.69s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.30094:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.30094:   4%|▎         | 1/28 [00:00<00:13,  2.06it/s]epoch 2 loss 1.42142:   4%|▎         | 1/28 [00:00<00:13,  2.06it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6214[0m
[32m  eval_f1 = 0.2741[0m
[32m  eval_mcc = 0.5991[0m
[32m  eval_precision = 0.3648[0m
[32m  eval_recall = 0.2553[0m
[32m  ********************[0m
[32m  Best f1:0.2741[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42142:   7%|▋         | 2/28 [00:09<02:18,  5.33s/it]epoch 2 loss 1.42162:   7%|▋         | 2/28 [00:09<02:18,  5.33s/it]epoch 2 loss 1.42162:  11%|█         | 3/28 [00:09<01:18,  3.12s/it]epoch 2 loss 1.41441:  11%|█         | 3/28 [00:10<01:18,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6253[0m
[32m  eval_f1 = 0.278[0m
[32m  eval_mcc = 0.6037[0m
[32m  eval_precision = 0.3655[0m
[32m  eval_recall = 0.2592[0m
[32m  ********************[0m
[32m  Best f1:0.278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41441:  14%|█▍        | 4/28 [00:20<02:32,  6.34s/it]epoch 2 loss 1.41094:  14%|█▍        | 4/28 [00:21<02:32,  6.34s/it]epoch 2 loss 1.41094:  18%|█▊        | 5/28 [00:21<01:36,  4.21s/it]epoch 2 loss 1.43075:  18%|█▊        | 5/28 [00:21<01:36,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6293[0m
[32m  eval_f1 = 0.2795[0m
[32m  eval_mcc = 0.6091[0m
[32m  eval_precision = 0.3726[0m
[32m  eval_recall = 0.2602[0m
[32m  ********************[0m
[32m  Best f1:0.2795[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43075:  21%|██▏       | 6/28 [00:29<02:02,  5.55s/it]epoch 2 loss 1.47432:  21%|██▏       | 6/28 [00:29<02:02,  5.55s/it]epoch 2 loss 1.47432:  25%|██▌       | 7/28 [00:29<01:21,  3.87s/it]epoch 2 loss 1.46988:  25%|██▌       | 7/28 [00:30<01:21,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6314[0m
[32m  eval_f1 = 0.2958[0m
[32m  eval_mcc = 0.6125[0m
[32m  eval_precision = 0.3936[0m
[32m  eval_recall = 0.273[0m
[32m  ********************[0m
[32m  Best f1:0.2958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46988:  29%|██▊       | 8/28 [00:38<01:45,  5.29s/it]epoch 2 loss 1.4718:  29%|██▊       | 8/28 [00:38<01:45,  5.29s/it] epoch 2 loss 1.4718:  32%|███▏      | 9/28 [00:38<01:11,  3.77s/it]epoch 2 loss 1.46089:  32%|███▏      | 9/28 [00:39<01:11,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6338[0m
[32m  eval_f1 = 0.2982[0m
[32m  eval_mcc = 0.6153[0m
[32m  eval_precision = 0.3944[0m
[32m  eval_recall = 0.2757[0m
[32m  ********************[0m
[32m  Best f1:0.2982[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46089:  36%|███▌      | 10/28 [00:47<01:35,  5.30s/it]epoch 2 loss 1.43957:  36%|███▌      | 10/28 [00:47<01:35,  5.30s/it]epoch 2 loss 1.43957:  39%|███▉      | 11/28 [00:47<01:04,  3.81s/it]epoch 2 loss 1.43975:  39%|███▉      | 11/28 [00:48<01:04,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.3067[0m
[32m  eval_mcc = 0.6181[0m
[32m  eval_precision = 0.4122[0m
[32m  eval_recall = 0.2831[0m
[32m  ********************[0m
[32m  Best f1:0.3067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43975:  43%|████▎     | 12/28 [01:00<01:45,  6.58s/it]epoch 2 loss 1.43016:  43%|████▎     | 12/28 [01:01<01:45,  6.58s/it]epoch 2 loss 1.43016:  46%|████▋     | 13/28 [01:01<01:10,  4.72s/it]epoch 2 loss 1.42161:  46%|████▋     | 13/28 [01:01<01:10,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.3097[0m
[32m  eval_mcc = 0.6191[0m
[32m  eval_precision = 0.4092[0m
[32m  eval_recall = 0.2882[0m
[32m  ********************[0m
[32m  Best f1:0.3097[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42161:  50%|█████     | 14/28 [01:14<01:41,  7.25s/it]epoch 2 loss 1.43052:  50%|█████     | 14/28 [01:14<01:41,  7.25s/it]epoch 2 loss 1.43052:  54%|█████▎    | 15/28 [01:14<01:07,  5.19s/it]epoch 2 loss 1.41864:  54%|█████▎    | 15/28 [01:15<01:07,  5.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6418[0m
[32m  eval_f1 = 0.3131[0m
[32m  eval_mcc = 0.6213[0m
[32m  eval_precision = 0.4127[0m
[32m  eval_recall = 0.2914[0m
[32m  ********************[0m
[32m  Best f1:0.3131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41864:  57%|█████▋    | 16/28 [01:22<01:12,  6.06s/it]epoch 2 loss 1.41154:  57%|█████▋    | 16/28 [01:23<01:12,  6.06s/it]epoch 2 loss 1.41154:  61%|██████    | 17/28 [01:23<00:48,  4.36s/it]epoch 2 loss 1.40193:  61%|██████    | 17/28 [01:23<00:48,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.645[0m
[32m  eval_f1 = 0.3155[0m
[32m  eval_mcc = 0.6249[0m
[32m  eval_precision = 0.4149[0m
[32m  eval_recall = 0.293[0m
[32m  ********************[0m
[32m  Best f1:0.3155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6249[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40193:  64%|██████▍   | 18/28 [01:31<00:54,  5.42s/it]epoch 2 loss 1.40308:  64%|██████▍   | 18/28 [01:31<00:54,  5.42s/it]epoch 2 loss 1.40308:  68%|██████▊   | 19/28 [01:31<00:35,  3.92s/it]epoch 2 loss 1.4009:  68%|██████▊   | 19/28 [01:31<00:35,  3.92s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6452[0m
[32m  eval_f1 = 0.3186[0m
[32m  eval_mcc = 0.6253[0m
[32m  eval_precision = 0.4185[0m
[32m  eval_recall = 0.2957[0m
[32m  ********************[0m
[32m  Best f1:0.3186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4009:  71%|███████▏  | 20/28 [01:39<00:41,  5.13s/it]epoch 2 loss 1.39456:  71%|███████▏  | 20/28 [01:39<00:41,  5.13s/it]epoch 2 loss 1.39456:  75%|███████▌  | 21/28 [01:39<00:26,  3.72s/it]epoch 2 loss 1.39784:  75%|███████▌  | 21/28 [01:40<00:26,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6452[0m
[32m  eval_f1 = 0.3221[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4286[0m
[32m  eval_recall = 0.2989[0m
[32m  ********************[0m
[32m  Best f1:0.3221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39784:  79%|███████▊  | 22/28 [01:47<00:29,  4.89s/it]epoch 2 loss 1.39541:  79%|███████▊  | 22/28 [01:47<00:29,  4.89s/it]epoch 2 loss 1.39541:  82%|████████▏ | 23/28 [01:47<00:17,  3.55s/it]epoch 2 loss 1.3895:  82%|████████▏ | 23/28 [01:48<00:17,  3.55s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6448[0m
[32m  eval_f1 = 0.3202[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4281[0m
[32m  eval_recall = 0.2962[0m

epoch 2 loss 1.3895:  86%|████████▌ | 24/28 [01:51<00:14,  3.62s/it]epoch 2 loss 1.38711:  86%|████████▌ | 24/28 [01:52<00:14,  3.62s/it]epoch 2 loss 1.38711:  89%|████████▉ | 25/28 [01:52<00:07,  2.66s/it]epoch 2 loss 1.38219:  89%|████████▉ | 25/28 [01:52<00:07,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6461[0m
[32m  eval_f1 = 0.3222[0m
[32m  eval_mcc = 0.6271[0m
[32m  eval_precision = 0.4468[0m
[32m  eval_recall = 0.296[0m
[32m  ********************[0m
[32m  Best f1:0.3222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38219:  93%|█████████▎| 26/28 [02:04<00:10,  5.49s/it]epoch 2 loss 1.38408:  93%|█████████▎| 26/28 [02:04<00:10,  5.49s/it]epoch 2 loss 1.38408:  96%|█████████▋| 27/28 [02:04<00:03,  3.97s/it]epoch 2 loss 1.38702:  96%|█████████▋| 27/28 [02:04<00:03,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6493[0m
[32m  eval_f1 = 0.3234[0m
[32m  eval_mcc = 0.6301[0m
[32m  eval_precision = 0.4374[0m
[32m  eval_recall = 0.2978[0m
[32m  ********************[0m
[32m  Best f1:0.3234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38702: 100%|██████████| 28/28 [02:17<00:00,  6.50s/it]epoch 2 loss 1.38702: 100%|██████████| 28/28 [02:17<00:00,  4.90s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.20666:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.20666:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 3 loss 1.27451:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6521[0m
[32m  eval_f1 = 0.3289[0m
[32m  eval_mcc = 0.6325[0m
[32m  eval_precision = 0.4456[0m
[32m  eval_recall = 0.3043[0m
[32m  ********************[0m
[32m  Best f1:0.3289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27451:   7%|▋         | 2/28 [00:08<02:11,  5.05s/it]epoch 3 loss 1.3073:   7%|▋         | 2/28 [00:09<02:11,  5.05s/it] epoch 3 loss 1.3073:  11%|█         | 3/28 [00:09<01:13,  2.94s/it]epoch 3 loss 1.28922:  11%|█         | 3/28 [00:09<01:13,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3387[0m
[32m  eval_mcc = 0.6328[0m
[32m  eval_precision = 0.461[0m
[32m  eval_recall = 0.3127[0m
[32m  ********************[0m
[32m  Best f1:0.3387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28922:  14%|█▍        | 4/28 [00:20<02:30,  6.28s/it]epoch 3 loss 1.26157:  14%|█▍        | 4/28 [00:20<02:30,  6.28s/it]epoch 3 loss 1.26157:  18%|█▊        | 5/28 [00:20<01:35,  4.17s/it]epoch 3 loss 1.27257:  18%|█▊        | 5/28 [00:21<01:35,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6548[0m
[32m  eval_f1 = 0.3417[0m
[32m  eval_mcc = 0.6349[0m
[32m  eval_precision = 0.4627[0m
[32m  eval_recall = 0.3148[0m
[32m  ********************[0m
[32m  Best f1:0.3417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27257:  21%|██▏       | 6/28 [00:37<03:07,  8.51s/it]epoch 3 loss 1.28036:  21%|██▏       | 6/28 [00:38<03:07,  8.51s/it]epoch 3 loss 1.28036:  25%|██▌       | 7/28 [00:38<02:03,  5.87s/it]epoch 3 loss 1.29679:  25%|██▌       | 7/28 [00:38<02:03,  5.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6572[0m
[32m  eval_f1 = 0.3451[0m
[32m  eval_mcc = 0.6376[0m
[32m  eval_precision = 0.4627[0m
[32m  eval_recall = 0.3171[0m
[32m  ********************[0m
[32m  Best f1:0.3451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29679:  29%|██▊       | 8/28 [00:54<03:01,  9.09s/it]epoch 3 loss 1.30009:  29%|██▊       | 8/28 [00:54<03:01,  9.09s/it]epoch 3 loss 1.30009:  32%|███▏      | 9/28 [00:54<02:01,  6.38s/it]epoch 3 loss 1.29821:  32%|███▏      | 9/28 [00:55<02:01,  6.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6587[0m
[32m  eval_f1 = 0.3463[0m
[32m  eval_mcc = 0.6395[0m
[32m  eval_precision = 0.4607[0m
[32m  eval_recall = 0.318[0m
[32m  ********************[0m
[32m  Best f1:0.3463[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29821:  36%|███▌      | 10/28 [01:05<02:18,  7.71s/it]epoch 3 loss 1.29037:  36%|███▌      | 10/28 [01:05<02:18,  7.71s/it]epoch 3 loss 1.29037:  39%|███▉      | 11/28 [01:05<01:33,  5.49s/it]epoch 3 loss 1.28894:  39%|███▉      | 11/28 [01:06<01:33,  5.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6591[0m
[32m  eval_f1 = 0.3484[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.4629[0m
[32m  eval_recall = 0.3191[0m
[32m  ********************[0m
[32m  Best f1:0.3484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.64[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28894:  43%|████▎     | 12/28 [01:17<01:56,  7.30s/it]epoch 3 loss 1.29346:  43%|████▎     | 12/28 [01:17<01:56,  7.30s/it]epoch 3 loss 1.29346:  46%|████▋     | 13/28 [01:17<01:18,  5.22s/it]epoch 3 loss 1.28895:  46%|████▋     | 13/28 [01:18<01:18,  5.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.67it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.64it/s][A100%|██████████| 10/10 [00:03<00:00,  2.93it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6583[0m
[32m  eval_f1 = 0.3476[0m
[32m  eval_mcc = 0.6394[0m
[32m  eval_precision = 0.4616[0m
[32m  eval_recall = 0.3186[0m

epoch 3 loss 1.28895:  50%|█████     | 14/28 [01:21<01:07,  4.81s/it]epoch 3 loss 1.28849:  50%|█████     | 14/28 [01:22<01:07,  4.81s/it]epoch 3 loss 1.28849:  54%|█████▎    | 15/28 [01:22<00:45,  3.49s/it]epoch 3 loss 1.2904:  54%|█████▎    | 15/28 [01:22<00:45,  3.49s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.659[0m
[32m  eval_f1 = 0.3499[0m
[32m  eval_mcc = 0.6403[0m
[32m  eval_precision = 0.4636[0m
[32m  eval_recall = 0.3212[0m
[32m  ********************[0m
[32m  Best f1:0.3499[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2904:  57%|█████▋    | 16/28 [01:33<01:11,  5.99s/it]epoch 3 loss 1.29471:  57%|█████▋    | 16/28 [01:34<01:11,  5.99s/it]epoch 3 loss 1.29471:  61%|██████    | 17/28 [01:34<00:47,  4.34s/it]epoch 3 loss 1.30122:  61%|██████    | 17/28 [01:34<00:47,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6595[0m
[32m  eval_f1 = 0.3529[0m
[32m  eval_mcc = 0.6408[0m
[32m  eval_precision = 0.4726[0m
[32m  eval_recall = 0.3237[0m
[32m  ********************[0m
[32m  Best f1:0.3529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30122:  64%|██████▍   | 18/28 [01:46<01:05,  6.60s/it]epoch 3 loss 1.29162:  64%|██████▍   | 18/28 [01:46<01:05,  6.60s/it]epoch 3 loss 1.29162:  68%|██████▊   | 19/28 [01:46<00:42,  4.76s/it]epoch 3 loss 1.29329:  68%|██████▊   | 19/28 [01:47<00:42,  4.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6611[0m
[32m  eval_f1 = 0.3553[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.4737[0m
[32m  eval_recall = 0.3264[0m
[32m  ********************[0m
[32m  Best f1:0.3553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29329:  71%|███████▏  | 20/28 [01:55<00:49,  6.13s/it]epoch 3 loss 1.28623:  71%|███████▏  | 20/28 [01:56<00:49,  6.13s/it]epoch 3 loss 1.28623:  75%|███████▌  | 21/28 [01:56<00:31,  4.43s/it]epoch 3 loss 1.28515:  75%|███████▌  | 21/28 [01:56<00:31,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.43it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6621[0m
[32m  eval_f1 = 0.3571[0m
[32m  eval_mcc = 0.6434[0m
[32m  eval_precision = 0.4742[0m
[32m  eval_recall = 0.3286[0m
[32m  ********************[0m
[32m  Best f1:0.3571[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6434[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28515:  79%|███████▊  | 22/28 [02:08<00:39,  6.57s/it]epoch 3 loss 1.28747:  79%|███████▊  | 22/28 [02:08<00:39,  6.57s/it]epoch 3 loss 1.28747:  82%|████████▏ | 23/28 [02:08<00:23,  4.75s/it]epoch 3 loss 1.28992:  82%|████████▏ | 23/28 [02:08<00:23,  4.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6637[0m
[32m  eval_f1 = 0.3594[0m
[32m  eval_mcc = 0.6453[0m
[32m  eval_precision = 0.4719[0m
[32m  eval_recall = 0.3309[0m
[32m  ********************[0m
[32m  Best f1:0.3594[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28992:  86%|████████▌ | 24/28 [02:17<00:24,  6.08s/it]epoch 3 loss 1.28915:  86%|████████▌ | 24/28 [02:18<00:24,  6.08s/it]epoch 3 loss 1.28915:  89%|████████▉ | 25/28 [02:18<00:13,  4.38s/it]epoch 3 loss 1.28814:  89%|████████▉ | 25/28 [02:18<00:13,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6642[0m
[32m  eval_f1 = 0.3596[0m
[32m  eval_mcc = 0.646[0m
[32m  eval_precision = 0.4715[0m
[32m  eval_recall = 0.3314[0m
[32m  ********************[0m
[32m  Best f1:0.3596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28814:  93%|█████████▎| 26/28 [02:30<00:13,  6.91s/it]epoch 3 loss 1.28182:  93%|█████████▎| 26/28 [02:31<00:13,  6.91s/it]epoch 3 loss 1.28182:  96%|█████████▋| 27/28 [02:31<00:04,  4.96s/it]epoch 3 loss 1.27493:  96%|█████████▋| 27/28 [02:31<00:04,  4.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6642[0m
[32m  eval_f1 = 0.3589[0m
[32m  eval_mcc = 0.646[0m
[32m  eval_precision = 0.4693[0m
[32m  eval_recall = 0.3309[0m

epoch 3 loss 1.27493: 100%|██████████| 28/28 [02:34<00:00,  4.55s/it]epoch 3 loss 1.27493: 100%|██████████| 28/28 [02:34<00:00,  5.53s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.19151:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.19151:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s]epoch 4 loss 1.25576:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6641[0m
[32m  eval_f1 = 0.3597[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.4718[0m
[32m  eval_recall = 0.3314[0m
[32m  ********************[0m
[32m  Best f1:0.3597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.25576:   7%|▋         | 2/28 [00:06<01:35,  3.69s/it]epoch 4 loss 1.26592:   7%|▋         | 2/28 [00:06<01:35,  3.69s/it]epoch 4 loss 1.26592:  11%|█         | 3/28 [00:06<00:55,  2.20s/it]epoch 4 loss 1.28993:  11%|█         | 3/28 [00:07<00:55,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6647[0m
[32m  eval_f1 = 0.3592[0m
[32m  eval_mcc = 0.6466[0m
[32m  eval_precision = 0.4701[0m
[32m  eval_recall = 0.331[0m
[32m  ********************[0m
[32m  Best MCC:0.6466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28993:  14%|█▍        | 4/28 [00:12<01:26,  3.61s/it]epoch 4 loss 1.25467:  14%|█▍        | 4/28 [00:13<01:26,  3.61s/it]epoch 4 loss 1.25467:  18%|█▊        | 5/28 [00:13<00:56,  2.46s/it]epoch 4 loss 1.23621:  18%|█▊        | 5/28 [00:13<00:56,  2.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.665[0m
[32m  eval_f1 = 0.3595[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.4705[0m
[32m  eval_recall = 0.3309[0m
[32m  ********************[0m
[32m  Best MCC:0.6468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23621:  21%|██▏       | 6/28 [00:19<01:21,  3.70s/it]epoch 4 loss 1.24258:  21%|██▏       | 6/28 [00:19<01:21,  3.70s/it]epoch 4 loss 1.24258:  25%|██▌       | 7/28 [00:19<00:55,  2.64s/it]epoch 4 loss 1.24879:  25%|██▌       | 7/28 [00:19<00:55,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.3605[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.4707[0m
[32m  eval_recall = 0.332[0m
[32m  ********************[0m
[32m  Best f1:0.3605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24879:  29%|██▊       | 8/28 [00:25<01:14,  3.73s/it]epoch 4 loss 1.24053:  29%|██▊       | 8/28 [00:26<01:14,  3.73s/it]epoch 4 loss 1.24053:  32%|███▏      | 9/28 [00:26<00:51,  2.70s/it]epoch 4 loss 1.23622:  32%|███▏      | 9/28 [00:26<00:51,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6653[0m
[32m  eval_f1 = 0.3606[0m
[32m  eval_mcc = 0.6469[0m
[32m  eval_precision = 0.4707[0m
[32m  eval_recall = 0.3321[0m
[32m  ********************[0m
[32m  Best f1:0.3606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23622:  36%|███▌      | 10/28 [00:36<01:29,  5.00s/it]epoch 4 loss 1.23141:  36%|███▌      | 10/28 [00:36<01:29,  5.00s/it]epoch 4 loss 1.23141:  39%|███▉      | 11/28 [00:36<01:01,  3.60s/it]epoch 4 loss 1.24193:  39%|███▉      | 11/28 [00:37<01:01,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6647[0m
[32m  eval_f1 = 0.3605[0m
[32m  eval_mcc = 0.6461[0m
[32m  eval_precision = 0.4706[0m
[32m  eval_recall = 0.3318[0m

epoch 4 loss 1.24193:  43%|████▎     | 12/28 [00:40<00:58,  3.66s/it]epoch 4 loss 1.24372:  43%|████▎     | 12/28 [00:40<00:58,  3.66s/it]epoch 4 loss 1.24372:  46%|████▋     | 13/28 [00:40<00:40,  2.67s/it]epoch 4 loss 1.24194:  46%|████▋     | 13/28 [00:41<00:40,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6647[0m
[32m  eval_f1 = 0.3612[0m
[32m  eval_mcc = 0.6461[0m
[32m  eval_precision = 0.4708[0m
[32m  eval_recall = 0.3325[0m
[32m  ********************[0m
[32m  Best f1:0.3612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24194:  50%|█████     | 14/28 [00:48<00:59,  4.24s/it]epoch 4 loss 1.24631:  50%|█████     | 14/28 [00:49<00:59,  4.24s/it]epoch 4 loss 1.24631:  54%|█████▎    | 15/28 [00:49<00:40,  3.09s/it]epoch 4 loss 1.2477:  54%|█████▎    | 15/28 [00:49<00:40,  3.09s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6649[0m
[32m  eval_f1 = 0.3611[0m
[32m  eval_mcc = 0.6462[0m
[32m  eval_precision = 0.4683[0m
[32m  eval_recall = 0.3323[0m

epoch 4 loss 1.2477:  57%|█████▋    | 16/28 [00:52<00:39,  3.31s/it]epoch 4 loss 1.24306:  57%|█████▋    | 16/28 [00:53<00:39,  3.31s/it]epoch 4 loss 1.24306:  61%|██████    | 17/28 [00:53<00:26,  2.43s/it]epoch 4 loss 1.24609:  61%|██████    | 17/28 [00:53<00:26,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6652[0m
[32m  eval_f1 = 0.3613[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.4688[0m
[32m  eval_recall = 0.3326[0m
[32m  ********************[0m
[32m  Best f1:0.3613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24609:  64%|██████▍   | 18/28 [00:59<00:34,  3.49s/it]epoch 4 loss 1.24578:  64%|██████▍   | 18/28 [00:59<00:34,  3.49s/it]epoch 4 loss 1.24578:  68%|██████▊   | 19/28 [00:59<00:23,  2.57s/it]epoch 4 loss 1.24687:  68%|██████▊   | 19/28 [01:00<00:23,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6656[0m
[32m  eval_f1 = 0.3628[0m
[32m  eval_mcc = 0.6469[0m
[32m  eval_precision = 0.4692[0m
[32m  eval_recall = 0.3343[0m
[32m  ********************[0m
[32m  Best f1:0.3628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24687:  71%|███████▏  | 20/28 [01:08<00:34,  4.30s/it]epoch 4 loss 1.24656:  71%|███████▏  | 20/28 [01:08<00:34,  4.30s/it]epoch 4 loss 1.24656:  75%|███████▌  | 21/28 [01:08<00:21,  3.13s/it]epoch 4 loss 1.24949:  75%|███████▌  | 21/28 [01:08<00:21,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6659[0m
[32m  eval_f1 = 0.3637[0m
[32m  eval_mcc = 0.6472[0m
[32m  eval_precision = 0.4692[0m
[32m  eval_recall = 0.3355[0m
[32m  ********************[0m
[32m  Best f1:0.3637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24949:  79%|███████▊  | 22/28 [01:16<00:28,  4.69s/it]epoch 4 loss 1.25128:  79%|███████▊  | 22/28 [01:17<00:28,  4.69s/it]epoch 4 loss 1.25128:  82%|████████▏ | 23/28 [01:17<00:17,  3.41s/it]epoch 4 loss 1.24684:  82%|████████▏ | 23/28 [01:17<00:17,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.666[0m
[32m  eval_f1 = 0.3636[0m
[32m  eval_mcc = 0.6472[0m
[32m  eval_precision = 0.4692[0m
[32m  eval_recall = 0.3355[0m
[32m  ********************[0m
[32m  Best MCC:0.6472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24684:  86%|████████▌ | 24/28 [01:24<00:18,  4.72s/it]epoch 4 loss 1.24355:  86%|████████▌ | 24/28 [01:25<00:18,  4.72s/it]epoch 4 loss 1.24355:  89%|████████▉ | 25/28 [01:25<00:10,  3.43s/it]epoch 4 loss 1.23809:  89%|████████▉ | 25/28 [01:25<00:10,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6662[0m
[32m  eval_f1 = 0.3635[0m
[32m  eval_mcc = 0.6475[0m
[32m  eval_precision = 0.469[0m
[32m  eval_recall = 0.3354[0m
[32m  ********************[0m
[32m  Best MCC:0.6475[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23809:  93%|█████████▎| 26/28 [01:33<00:09,  4.82s/it]epoch 4 loss 1.2429:  93%|█████████▎| 26/28 [01:33<00:09,  4.82s/it] epoch 4 loss 1.2429:  96%|█████████▋| 27/28 [01:33<00:03,  3.50s/it]epoch 4 loss 1.24211:  96%|█████████▋| 27/28 [01:34<00:03,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6663[0m
[32m  eval_f1 = 0.3635[0m
[32m  eval_mcc = 0.6476[0m
[32m  eval_precision = 0.4691[0m
[32m  eval_recall = 0.3355[0m
[32m  ********************[0m
[32m  Best MCC:0.6476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24211: 100%|██████████| 28/28 [01:41<00:00,  4.86s/it]epoch 4 loss 1.24211: 100%|██████████| 28/28 [01:41<00:00,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.71it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6659[0m
[32m  eval_f1 = 0.3637[0m
[32m  eval_mcc = 0.6472[0m
[32m  eval_precision = 0.4692[0m
[32m  eval_recall = 0.3355[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.78it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6465[0m
[32m  eval_f1 = 0.2901[0m
[32m  eval_mcc = 0.6279[0m
[32m  eval_precision = 0.3841[0m
[32m  eval_recall = 0.2728[0m

