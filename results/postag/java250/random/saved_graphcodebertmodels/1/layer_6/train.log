[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=6, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.61745:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.61745:   4%|▎         | 1/28 [00:00<00:21,  1.24it/s]epoch 0 loss 5.63751:   4%|▎         | 1/28 [00:01<00:21,  1.24it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0022[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = 0.0004[0m
[32m  eval_precision = 0.0042[0m
[32m  eval_recall = 0.0061[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.63751:   7%|▋         | 2/28 [00:06<01:34,  3.64s/it]epoch 0 loss 5.61752:   7%|▋         | 2/28 [00:06<01:34,  3.64s/it]epoch 0 loss 5.61752:  11%|█         | 3/28 [00:06<00:54,  2.17s/it]epoch 0 loss 5.60827:  11%|█         | 3/28 [00:07<00:54,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0053[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = 0.0015[0m
[32m  eval_precision = 0.005[0m
[32m  eval_recall = 0.0063[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.60827:  14%|█▍        | 4/28 [00:15<01:48,  4.53s/it]epoch 0 loss 5.58903:  14%|█▍        | 4/28 [00:15<01:48,  4.53s/it]epoch 0 loss 5.58903:  18%|█▊        | 5/28 [00:15<01:10,  3.05s/it]epoch 0 loss 5.55756:  18%|█▊        | 5/28 [00:15<01:10,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.021[0m
[32m  eval_f1 = 0.0021[0m
[32m  eval_mcc = 0.007[0m
[32m  eval_precision = 0.0053[0m
[32m  eval_recall = 0.0074[0m
[32m  ********************[0m
[32m  Best f1:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.55756:  21%|██▏       | 6/28 [00:23<01:46,  4.84s/it]epoch 0 loss 5.51841:  21%|██▏       | 6/28 [00:24<01:46,  4.84s/it]epoch 0 loss 5.51841:  25%|██▌       | 7/28 [00:24<01:11,  3.40s/it]epoch 0 loss 5.4705:  25%|██▌       | 7/28 [00:24<01:11,  3.40s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0548[0m
[32m  eval_f1 = 0.0036[0m
[32m  eval_mcc = 0.0134[0m
[32m  eval_precision = 0.0052[0m
[32m  eval_recall = 0.0058[0m
[32m  ********************[0m
[32m  Best f1:0.0036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0134[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.4705:  29%|██▊       | 8/28 [00:34<01:51,  5.56s/it]epoch 0 loss 5.41899:  29%|██▊       | 8/28 [00:34<01:51,  5.56s/it]epoch 0 loss 5.41899:  32%|███▏      | 9/28 [00:34<01:15,  3.96s/it]epoch 0 loss 5.3607:  32%|███▏      | 9/28 [00:35<01:15,  3.96s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0807[0m
[32m  eval_f1 = 0.0055[0m
[32m  eval_mcc = 0.023[0m
[32m  eval_precision = 0.0091[0m
[32m  eval_recall = 0.0098[0m
[32m  ********************[0m
[32m  Best f1:0.0055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.3607:  36%|███▌      | 10/28 [00:45<01:49,  6.06s/it]epoch 0 loss 5.30063:  36%|███▌      | 10/28 [00:45<01:49,  6.06s/it]epoch 0 loss 5.30063:  39%|███▉      | 11/28 [00:45<01:13,  4.34s/it]epoch 0 loss 5.23189:  39%|███▉      | 11/28 [00:46<01:13,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0927[0m
[32m  eval_f1 = 0.0075[0m
[32m  eval_mcc = 0.0312[0m
[32m  eval_precision = 0.0133[0m
[32m  eval_recall = 0.0123[0m
[32m  ********************[0m
[32m  Best f1:0.0075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.23189:  43%|████▎     | 12/28 [00:58<01:50,  6.91s/it]epoch 0 loss 5.16275:  43%|████▎     | 12/28 [00:59<01:50,  6.91s/it]epoch 0 loss 5.16275:  46%|████▋     | 13/28 [00:59<01:14,  4.94s/it]epoch 0 loss 5.09012:  46%|████▋     | 13/28 [00:59<01:14,  4.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1019[0m
[32m  eval_f1 = 0.0088[0m
[32m  eval_mcc = 0.0377[0m
[32m  eval_precision = 0.0188[0m
[32m  eval_recall = 0.0136[0m
[32m  ********************[0m
[32m  Best f1:0.0088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.09012:  50%|█████     | 14/28 [01:10<01:34,  6.78s/it]epoch 0 loss 5.01304:  50%|█████     | 14/28 [01:10<01:34,  6.78s/it]epoch 0 loss 5.01304:  54%|█████▎    | 15/28 [01:10<01:03,  4.87s/it]epoch 0 loss 4.93419:  54%|█████▎    | 15/28 [01:11<01:03,  4.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1134[0m
[32m  eval_f1 = 0.0104[0m
[32m  eval_mcc = 0.0475[0m
[32m  eval_precision = 0.0254[0m
[32m  eval_recall = 0.0146[0m
[32m  ********************[0m
[32m  Best f1:0.0104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0475[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93419:  57%|█████▋    | 16/28 [01:20<01:14,  6.23s/it]epoch 0 loss 4.85692:  57%|█████▋    | 16/28 [01:20<01:14,  6.23s/it]epoch 0 loss 4.85692:  61%|██████    | 17/28 [01:20<00:49,  4.50s/it]epoch 0 loss 4.78232:  61%|██████    | 17/28 [01:21<00:49,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.135[0m
[32m  eval_f1 = 0.013[0m
[32m  eval_mcc = 0.0698[0m
[32m  eval_precision = 0.036[0m
[32m  eval_recall = 0.0165[0m
[32m  ********************[0m
[32m  Best f1:0.013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.78232:  64%|██████▍   | 18/28 [01:26<00:50,  5.08s/it]epoch 0 loss 4.70963:  64%|██████▍   | 18/28 [01:27<00:50,  5.08s/it]epoch 0 loss 4.70963:  68%|██████▊   | 19/28 [01:27<00:33,  3.68s/it]epoch 0 loss 4.64416:  68%|██████▊   | 19/28 [01:27<00:33,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.54it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.63it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.69it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.64it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.67it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.58it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.53it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.28it/s][A100%|██████████| 10/10 [00:03<00:00,  2.80it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1827[0m
[32m  eval_f1 = 0.0192[0m
[32m  eval_mcc = 0.1202[0m
[32m  eval_precision = 0.0415[0m
[32m  eval_recall = 0.0219[0m
[32m  ********************[0m
[32m  Best f1:0.0192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.64416:  71%|███████▏  | 20/28 [01:38<00:48,  6.03s/it]epoch 0 loss 4.57847:  71%|███████▏  | 20/28 [01:39<00:48,  6.03s/it]epoch 0 loss 4.57847:  75%|███████▌  | 21/28 [01:39<00:30,  4.37s/it]epoch 0 loss 4.50846:  75%|███████▌  | 21/28 [01:39<00:30,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2662[0m
[32m  eval_f1 = 0.0323[0m
[32m  eval_mcc = 0.2089[0m
[32m  eval_precision = 0.0629[0m
[32m  eval_recall = 0.0349[0m
[32m  ********************[0m
[32m  Best f1:0.0323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.50846:  79%|███████▊  | 22/28 [01:50<00:38,  6.46s/it]epoch 0 loss 4.44687:  79%|███████▊  | 22/28 [01:51<00:38,  6.46s/it]epoch 0 loss 4.44687:  82%|████████▏ | 23/28 [01:51<00:23,  4.67s/it]epoch 0 loss 4.38585:  82%|████████▏ | 23/28 [01:51<00:23,  4.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3342[0m
[32m  eval_f1 = 0.0461[0m
[32m  eval_mcc = 0.284[0m
[32m  eval_precision = 0.0867[0m
[32m  eval_recall = 0.0492[0m
[32m  ********************[0m
[32m  Best f1:0.0461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.38585:  86%|████████▌ | 24/28 [02:00<00:23,  5.91s/it]epoch 0 loss 4.32687:  86%|████████▌ | 24/28 [02:00<00:23,  5.91s/it]epoch 0 loss 4.32687:  89%|████████▉ | 25/28 [02:00<00:12,  4.29s/it]epoch 0 loss 4.26179:  89%|████████▉ | 25/28 [02:00<00:12,  4.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.43it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3808[0m
[32m  eval_f1 = 0.0842[0m
[32m  eval_mcc = 0.3455[0m
[32m  eval_precision = 0.1404[0m
[32m  eval_recall = 0.0779[0m
[32m  ********************[0m
[32m  Best f1:0.0842[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.26179:  93%|█████████▎| 26/28 [02:12<00:13,  6.54s/it]epoch 0 loss 4.20181:  93%|█████████▎| 26/28 [02:12<00:13,  6.54s/it]epoch 0 loss 4.20181:  96%|█████████▋| 27/28 [02:12<00:04,  4.70s/it]epoch 0 loss 4.14841:  96%|█████████▋| 27/28 [02:12<00:04,  4.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4132[0m
[32m  eval_f1 = 0.1107[0m
[32m  eval_mcc = 0.3925[0m
[32m  eval_precision = 0.1619[0m
[32m  eval_recall = 0.0981[0m
[32m  ********************[0m
[32m  Best f1:0.1107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.14841: 100%|██████████| 28/28 [02:19<00:00,  5.20s/it]epoch 0 loss 4.14841: 100%|██████████| 28/28 [02:19<00:00,  4.97s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.52701:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.52701:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 1 loss 2.42874:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4649[0m
[32m  eval_f1 = 0.1294[0m
[32m  eval_mcc = 0.4431[0m
[32m  eval_precision = 0.17[0m
[32m  eval_recall = 0.1205[0m
[32m  ********************[0m
[32m  Best f1:0.1294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4431[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42874:   7%|▋         | 2/28 [00:08<02:08,  4.94s/it]epoch 1 loss 2.36121:   7%|▋         | 2/28 [00:08<02:08,  4.94s/it]epoch 1 loss 2.36121:  11%|█         | 3/28 [00:08<01:11,  2.88s/it]epoch 1 loss 2.33875:  11%|█         | 3/28 [00:09<01:11,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5169[0m
[32m  eval_f1 = 0.1472[0m
[32m  eval_mcc = 0.4893[0m
[32m  eval_precision = 0.1977[0m
[32m  eval_recall = 0.1435[0m
[32m  ********************[0m
[32m  Best f1:0.1472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4893[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.33875:  14%|█▍        | 4/28 [00:14<01:37,  4.08s/it]epoch 1 loss 2.32293:  14%|█▍        | 4/28 [00:15<01:37,  4.08s/it]epoch 1 loss 2.32293:  18%|█▊        | 5/28 [00:15<01:03,  2.76s/it]epoch 1 loss 2.29566:  18%|█▊        | 5/28 [00:15<01:03,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5449[0m
[32m  eval_f1 = 0.1691[0m
[32m  eval_mcc = 0.517[0m
[32m  eval_precision = 0.2174[0m
[32m  eval_recall = 0.1631[0m
[32m  ********************[0m
[32m  Best f1:0.1691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.517[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29566:  21%|██▏       | 6/28 [00:22<01:32,  4.18s/it]epoch 1 loss 2.26719:  21%|██▏       | 6/28 [00:22<01:32,  4.18s/it]epoch 1 loss 2.26719:  25%|██▌       | 7/28 [00:22<01:02,  2.96s/it]epoch 1 loss 2.24548:  25%|██▌       | 7/28 [00:23<01:02,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5655[0m
[32m  eval_f1 = 0.1781[0m
[32m  eval_mcc = 0.5398[0m
[32m  eval_precision = 0.2166[0m
[32m  eval_recall = 0.1716[0m
[32m  ********************[0m
[32m  Best f1:0.1781[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.24548:  29%|██▊       | 8/28 [00:35<02:00,  6.02s/it]epoch 1 loss 2.23911:  29%|██▊       | 8/28 [00:35<02:00,  6.02s/it]epoch 1 loss 2.23911:  32%|███▏      | 9/28 [00:35<01:21,  4.27s/it]epoch 1 loss 2.21635:  32%|███▏      | 9/28 [00:36<01:21,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5737[0m
[32m  eval_f1 = 0.1804[0m
[32m  eval_mcc = 0.55[0m
[32m  eval_precision = 0.2219[0m
[32m  eval_recall = 0.1727[0m
[32m  ********************[0m
[32m  Best f1:0.1804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.55[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.21635:  36%|███▌      | 10/28 [00:48<02:05,  6.95s/it]epoch 1 loss 2.1931:  36%|███▌      | 10/28 [00:49<02:05,  6.95s/it] epoch 1 loss 2.1931:  39%|███▉      | 11/28 [00:49<01:24,  4.96s/it]epoch 1 loss 2.16325:  39%|███▉      | 11/28 [00:49<01:24,  4.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5762[0m
[32m  eval_f1 = 0.1809[0m
[32m  eval_mcc = 0.5534[0m
[32m  eval_precision = 0.2278[0m
[32m  eval_recall = 0.1727[0m
[32m  ********************[0m
[32m  Best f1:0.1809[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5534[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16325:  43%|████▎     | 12/28 [01:01<01:56,  7.31s/it]epoch 1 loss 2.13703:  43%|████▎     | 12/28 [01:02<01:56,  7.31s/it]epoch 1 loss 2.13703:  46%|████▋     | 13/28 [01:02<01:18,  5.22s/it]epoch 1 loss 2.12123:  46%|████▋     | 13/28 [01:02<01:18,  5.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5813[0m
[32m  eval_f1 = 0.1872[0m
[32m  eval_mcc = 0.5581[0m
[32m  eval_precision = 0.2468[0m
[32m  eval_recall = 0.1778[0m
[32m  ********************[0m
[32m  Best f1:0.1872[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12123:  50%|█████     | 14/28 [01:14<01:43,  7.41s/it]epoch 1 loss 2.09908:  50%|█████     | 14/28 [01:15<01:43,  7.41s/it]epoch 1 loss 2.09908:  54%|█████▎    | 15/28 [01:15<01:09,  5.31s/it]epoch 1 loss 2.08391:  54%|█████▎    | 15/28 [01:15<01:09,  5.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5865[0m
[32m  eval_f1 = 0.1929[0m
[32m  eval_mcc = 0.5634[0m
[32m  eval_precision = 0.2618[0m
[32m  eval_recall = 0.1834[0m
[32m  ********************[0m
[32m  Best f1:0.1929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5634[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08391:  57%|█████▋    | 16/28 [01:26<01:26,  7.24s/it]epoch 1 loss 2.06008:  57%|█████▋    | 16/28 [01:27<01:26,  7.24s/it]epoch 1 loss 2.06008:  61%|██████    | 17/28 [01:27<00:57,  5.19s/it]epoch 1 loss 2.04106:  61%|██████    | 17/28 [01:27<00:57,  5.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5906[0m
[32m  eval_f1 = 0.1977[0m
[32m  eval_mcc = 0.5687[0m
[32m  eval_precision = 0.2714[0m
[32m  eval_recall = 0.1871[0m
[32m  ********************[0m
[32m  Best f1:0.1977[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5687[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04106:  64%|██████▍   | 18/28 [01:37<01:08,  6.82s/it]epoch 1 loss 2.018:  64%|██████▍   | 18/28 [01:38<01:08,  6.82s/it]  epoch 1 loss 2.018:  68%|██████▊   | 19/28 [01:38<00:44,  4.90s/it]epoch 1 loss 2.01781:  68%|██████▊   | 19/28 [01:38<00:44,  4.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5942[0m
[32m  eval_f1 = 0.2052[0m
[32m  eval_mcc = 0.5739[0m
[32m  eval_precision = 0.2899[0m
[32m  eval_recall = 0.1935[0m
[32m  ********************[0m
[32m  Best f1:0.2052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01781:  71%|███████▏  | 20/28 [01:46<00:47,  5.96s/it]epoch 1 loss 2.00263:  71%|███████▏  | 20/28 [01:47<00:47,  5.96s/it]epoch 1 loss 2.00263:  75%|███████▌  | 21/28 [01:47<00:30,  4.30s/it]epoch 1 loss 1.98848:  75%|███████▌  | 21/28 [01:47<00:30,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5983[0m
[32m  eval_f1 = 0.2179[0m
[32m  eval_mcc = 0.5769[0m
[32m  eval_precision = 0.3087[0m
[32m  eval_recall = 0.2052[0m
[32m  ********************[0m
[32m  Best f1:0.2179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5769[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98848:  79%|███████▊  | 22/28 [01:55<00:33,  5.65s/it]epoch 1 loss 1.97027:  79%|███████▊  | 22/28 [01:56<00:33,  5.65s/it]epoch 1 loss 1.97027:  82%|████████▏ | 23/28 [01:56<00:20,  4.08s/it]epoch 1 loss 1.9566:  82%|████████▏ | 23/28 [01:56<00:20,  4.08s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6017[0m
[32m  eval_f1 = 0.233[0m
[32m  eval_mcc = 0.5786[0m
[32m  eval_precision = 0.3236[0m
[32m  eval_recall = 0.2186[0m
[32m  ********************[0m
[32m  Best f1:0.233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9566:  86%|████████▌ | 24/28 [02:07<00:24,  6.19s/it]epoch 1 loss 1.94006:  86%|████████▌ | 24/28 [02:07<00:24,  6.19s/it]epoch 1 loss 1.94006:  89%|████████▉ | 25/28 [02:07<00:13,  4.47s/it]epoch 1 loss 1.92656:  89%|████████▉ | 25/28 [02:08<00:13,  4.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6026[0m
[32m  eval_f1 = 0.2372[0m
[32m  eval_mcc = 0.5788[0m
[32m  eval_precision = 0.331[0m
[32m  eval_recall = 0.2221[0m
[32m  ********************[0m
[32m  Best f1:0.2372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92656:  93%|█████████▎| 26/28 [02:20<00:13,  6.80s/it]epoch 1 loss 1.91399:  93%|█████████▎| 26/28 [02:20<00:13,  6.80s/it]epoch 1 loss 1.91399:  96%|█████████▋| 27/28 [02:20<00:04,  4.88s/it]epoch 1 loss 1.9017:  96%|█████████▋| 27/28 [02:20<00:04,  4.88s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6056[0m
[32m  eval_f1 = 0.2452[0m
[32m  eval_mcc = 0.5819[0m
[32m  eval_precision = 0.3485[0m
[32m  eval_recall = 0.2285[0m
[32m  ********************[0m
[32m  Best f1:0.2452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9017: 100%|██████████| 28/28 [02:32<00:00,  7.13s/it]epoch 1 loss 1.9017: 100%|██████████| 28/28 [02:32<00:00,  5.46s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.36572:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.36572:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 2 loss 1.48998:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6089[0m
[32m  eval_f1 = 0.2504[0m
[32m  eval_mcc = 0.5857[0m
[32m  eval_precision = 0.3511[0m
[32m  eval_recall = 0.2334[0m
[32m  ********************[0m
[32m  Best f1:0.2504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5857[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48998:   7%|▋         | 2/28 [00:08<02:12,  5.08s/it]epoch 2 loss 1.48883:   7%|▋         | 2/28 [00:09<02:12,  5.08s/it]epoch 2 loss 1.48883:  11%|█         | 3/28 [00:09<01:13,  2.95s/it]epoch 2 loss 1.48178:  11%|█         | 3/28 [00:09<01:13,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6179[0m
[32m  eval_f1 = 0.26[0m
[32m  eval_mcc = 0.5957[0m
[32m  eval_precision = 0.3527[0m
[32m  eval_recall = 0.2426[0m
[32m  ********************[0m
[32m  Best f1:0.26[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48178:  14%|█▍        | 4/28 [00:17<02:02,  5.08s/it]epoch 2 loss 1.47841:  14%|█▍        | 4/28 [00:17<02:02,  5.08s/it]epoch 2 loss 1.47841:  18%|█▊        | 5/28 [00:17<01:18,  3.41s/it]epoch 2 loss 1.49894:  18%|█▊        | 5/28 [00:18<01:18,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6238[0m
[32m  eval_f1 = 0.2649[0m
[32m  eval_mcc = 0.6029[0m
[32m  eval_precision = 0.358[0m
[32m  eval_recall = 0.2476[0m
[32m  ********************[0m
[32m  Best f1:0.2649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49894:  21%|██▏       | 6/28 [00:29<02:18,  6.32s/it]epoch 2 loss 1.54274:  21%|██▏       | 6/28 [00:30<02:18,  6.32s/it]epoch 2 loss 1.54274:  25%|██▌       | 7/28 [00:30<01:32,  4.39s/it]epoch 2 loss 1.53896:  25%|██▌       | 7/28 [00:30<01:32,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6249[0m
[32m  eval_f1 = 0.2725[0m
[32m  eval_mcc = 0.6053[0m
[32m  eval_precision = 0.3715[0m
[32m  eval_recall = 0.2529[0m
[32m  ********************[0m
[32m  Best f1:0.2725[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53896:  29%|██▊       | 8/28 [00:42<02:17,  6.88s/it]epoch 2 loss 1.54235:  29%|██▊       | 8/28 [00:43<02:17,  6.88s/it]epoch 2 loss 1.54235:  32%|███▏      | 9/28 [00:43<01:32,  4.87s/it]epoch 2 loss 1.53173:  32%|███▏      | 9/28 [00:43<01:32,  4.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6266[0m
[32m  eval_f1 = 0.2795[0m
[32m  eval_mcc = 0.6073[0m
[32m  eval_precision = 0.3866[0m
[32m  eval_recall = 0.2586[0m
[32m  ********************[0m
[32m  Best f1:0.2795[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53173:  36%|███▌      | 10/28 [00:54<02:04,  6.91s/it]epoch 2 loss 1.50999:  36%|███▌      | 10/28 [00:54<02:04,  6.91s/it]epoch 2 loss 1.50999:  39%|███▉      | 11/28 [00:54<01:23,  4.93s/it]epoch 2 loss 1.50994:  39%|███▉      | 11/28 [00:55<01:23,  4.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6312[0m
[32m  eval_f1 = 0.2856[0m
[32m  eval_mcc = 0.611[0m
[32m  eval_precision = 0.3873[0m
[32m  eval_recall = 0.2661[0m
[32m  ********************[0m
[32m  Best f1:0.2856[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50994:  43%|████▎     | 12/28 [01:03<01:37,  6.07s/it]epoch 2 loss 1.49983:  43%|████▎     | 12/28 [01:04<01:37,  6.07s/it]epoch 2 loss 1.49983:  46%|████▋     | 13/28 [01:04<01:05,  4.36s/it]epoch 2 loss 1.49104:  46%|████▋     | 13/28 [01:04<01:05,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6321[0m
[32m  eval_f1 = 0.2923[0m
[32m  eval_mcc = 0.6111[0m
[32m  eval_precision = 0.3993[0m
[32m  eval_recall = 0.273[0m
[32m  ********************[0m
[32m  Best f1:0.2923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49104:  50%|█████     | 14/28 [01:12<01:19,  5.70s/it]epoch 2 loss 1.49983:  50%|█████     | 14/28 [01:13<01:19,  5.70s/it]epoch 2 loss 1.49983:  54%|█████▎    | 15/28 [01:13<00:53,  4.11s/it]epoch 2 loss 1.48719:  54%|█████▎    | 15/28 [01:13<00:53,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.59it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.59it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.56it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.56it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.51it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.48it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.46it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.45it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.19it/s][A100%|██████████| 10/10 [00:03<00:00,  2.70it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6335[0m
[32m  eval_f1 = 0.2963[0m
[32m  eval_mcc = 0.6122[0m
[32m  eval_precision = 0.3987[0m
[32m  eval_recall = 0.2778[0m
[32m  ********************[0m
[32m  Best f1:0.2963[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48719:  57%|█████▋    | 16/28 [01:25<01:18,  6.55s/it]epoch 2 loss 1.48019:  57%|█████▋    | 16/28 [01:26<01:18,  6.55s/it]epoch 2 loss 1.48019:  61%|██████    | 17/28 [01:26<00:52,  4.74s/it]epoch 2 loss 1.46994:  61%|██████    | 17/28 [01:26<00:52,  4.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6355[0m
[32m  eval_f1 = 0.3048[0m
[32m  eval_mcc = 0.6145[0m
[32m  eval_precision = 0.4088[0m
[32m  eval_recall = 0.2842[0m
[32m  ********************[0m
[32m  Best f1:0.3048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46994:  64%|██████▍   | 18/28 [01:34<00:58,  5.88s/it]epoch 2 loss 1.47032:  64%|██████▍   | 18/28 [01:35<00:58,  5.88s/it]epoch 2 loss 1.47032:  68%|██████▊   | 19/28 [01:35<00:38,  4.26s/it]epoch 2 loss 1.46769:  68%|██████▊   | 19/28 [01:35<00:38,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6358[0m
[32m  eval_f1 = 0.3043[0m
[32m  eval_mcc = 0.6152[0m
[32m  eval_precision = 0.4109[0m
[32m  eval_recall = 0.2827[0m
[32m  ********************[0m
[32m  Best MCC:0.6152[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46769:  71%|███████▏  | 20/28 [01:42<00:42,  5.29s/it]epoch 2 loss 1.46088:  71%|███████▏  | 20/28 [01:43<00:42,  5.29s/it]epoch 2 loss 1.46088:  75%|███████▌  | 21/28 [01:43<00:26,  3.85s/it]epoch 2 loss 1.46344:  75%|███████▌  | 21/28 [01:43<00:26,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.635[0m
[32m  eval_f1 = 0.3035[0m
[32m  eval_mcc = 0.6148[0m
[32m  eval_precision = 0.4121[0m
[32m  eval_recall = 0.2816[0m

epoch 2 loss 1.46344:  79%|███████▊  | 22/28 [01:47<00:24,  4.00s/it]epoch 2 loss 1.4608:  79%|███████▊  | 22/28 [01:48<00:24,  4.00s/it] epoch 2 loss 1.4608:  82%|████████▏ | 23/28 [01:48<00:14,  2.94s/it]epoch 2 loss 1.45462:  82%|████████▏ | 23/28 [01:48<00:14,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6345[0m
[32m  eval_f1 = 0.3054[0m
[32m  eval_mcc = 0.6146[0m
[32m  eval_precision = 0.4165[0m
[32m  eval_recall = 0.2819[0m
[32m  ********************[0m
[32m  Best f1:0.3054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.45462:  86%|████████▌ | 24/28 [01:54<00:15,  3.99s/it]epoch 2 loss 1.45177:  86%|████████▌ | 24/28 [01:54<00:15,  3.99s/it]epoch 2 loss 1.45177:  89%|████████▉ | 25/28 [01:54<00:08,  2.94s/it]epoch 2 loss 1.4468:  89%|████████▉ | 25/28 [01:55<00:08,  2.94s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6387[0m
[32m  eval_f1 = 0.3087[0m
[32m  eval_mcc = 0.6191[0m
[32m  eval_precision = 0.4195[0m
[32m  eval_recall = 0.2841[0m
[32m  ********************[0m
[32m  Best f1:0.3087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4468:  93%|█████████▎| 26/28 [02:06<00:10,  5.48s/it]epoch 2 loss 1.4484:  93%|█████████▎| 26/28 [02:06<00:10,  5.48s/it]epoch 2 loss 1.4484:  96%|█████████▋| 27/28 [02:06<00:03,  3.99s/it]epoch 2 loss 1.45129:  96%|█████████▋| 27/28 [02:07<00:03,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.3145[0m
[32m  eval_mcc = 0.6229[0m
[32m  eval_precision = 0.4222[0m
[32m  eval_recall = 0.2895[0m
[32m  ********************[0m
[32m  Best f1:0.3145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45129: 100%|██████████| 28/28 [02:16<00:00,  5.67s/it]epoch 2 loss 1.45129: 100%|██████████| 28/28 [02:16<00:00,  4.87s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.26378:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.26378:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s]epoch 3 loss 1.33147:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6455[0m
[32m  eval_f1 = 0.3157[0m
[32m  eval_mcc = 0.6251[0m
[32m  eval_precision = 0.4194[0m
[32m  eval_recall = 0.2914[0m
[32m  ********************[0m
[32m  Best f1:0.3157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6251[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33147:   7%|▋         | 2/28 [00:12<03:02,  7.03s/it]epoch 3 loss 1.36217:   7%|▋         | 2/28 [00:12<03:02,  7.03s/it]epoch 3 loss 1.36217:  11%|█         | 3/28 [00:12<01:40,  4.02s/it]epoch 3 loss 1.34602:  11%|█         | 3/28 [00:12<01:40,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6465[0m
[32m  eval_f1 = 0.3188[0m
[32m  eval_mcc = 0.6259[0m
[32m  eval_precision = 0.4266[0m
[32m  eval_recall = 0.2957[0m
[32m  ********************[0m
[32m  Best f1:0.3188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34602:  14%|█▍        | 4/28 [00:20<02:15,  5.64s/it]epoch 3 loss 1.31624:  14%|█▍        | 4/28 [00:21<02:15,  5.64s/it]epoch 3 loss 1.31624:  18%|█▊        | 5/28 [00:21<01:26,  3.76s/it]epoch 3 loss 1.32862:  18%|█▊        | 5/28 [00:21<01:26,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6471[0m
[32m  eval_f1 = 0.3178[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.4166[0m
[32m  eval_recall = 0.2951[0m
[32m  ********************[0m
[32m  Best MCC:0.6266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32862:  21%|██▏       | 6/28 [00:27<01:39,  4.51s/it]epoch 3 loss 1.33643:  21%|██▏       | 6/28 [00:27<01:39,  4.51s/it]epoch 3 loss 1.33643:  25%|██▌       | 7/28 [00:27<01:06,  3.18s/it]epoch 3 loss 1.35388:  25%|██▌       | 7/28 [00:27<01:06,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6496[0m
[32m  eval_f1 = 0.3218[0m
[32m  eval_mcc = 0.6294[0m
[32m  eval_precision = 0.4356[0m
[32m  eval_recall = 0.298[0m
[32m  ********************[0m
[32m  Best f1:0.3218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35388:  29%|██▊       | 8/28 [00:35<01:37,  4.85s/it]epoch 3 loss 1.3579:  29%|██▊       | 8/28 [00:36<01:37,  4.85s/it] epoch 3 loss 1.3579:  32%|███▏      | 9/28 [00:36<01:05,  3.47s/it]epoch 3 loss 1.35673:  32%|███▏      | 9/28 [00:36<01:05,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6511[0m
[32m  eval_f1 = 0.3242[0m
[32m  eval_mcc = 0.6313[0m
[32m  eval_precision = 0.4365[0m
[32m  eval_recall = 0.2992[0m
[32m  ********************[0m
[32m  Best f1:0.3242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35673:  36%|███▌      | 10/28 [00:43<01:20,  4.48s/it]epoch 3 loss 1.34873:  36%|███▌      | 10/28 [00:43<01:20,  4.48s/it]epoch 3 loss 1.34873:  39%|███▉      | 11/28 [00:43<00:55,  3.24s/it]epoch 3 loss 1.3462:  39%|███▉      | 11/28 [00:43<00:55,  3.24s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3268[0m
[32m  eval_mcc = 0.6319[0m
[32m  eval_precision = 0.4385[0m
[32m  eval_recall = 0.3004[0m
[32m  ********************[0m
[32m  Best f1:0.3268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3462:  43%|████▎     | 12/28 [00:56<01:37,  6.10s/it]epoch 3 loss 1.35115:  43%|████▎     | 12/28 [00:56<01:37,  6.10s/it]epoch 3 loss 1.35115:  46%|████▋     | 13/28 [00:56<01:05,  4.39s/it]epoch 3 loss 1.34694:  46%|████▋     | 13/28 [00:56<01:05,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6513[0m
[32m  eval_f1 = 0.33[0m
[32m  eval_mcc = 0.632[0m
[32m  eval_precision = 0.4466[0m
[32m  eval_recall = 0.3024[0m
[32m  ********************[0m
[32m  Best f1:0.33[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34694:  50%|█████     | 14/28 [01:10<01:39,  7.12s/it]epoch 3 loss 1.34626:  50%|█████     | 14/28 [01:10<01:39,  7.12s/it]epoch 3 loss 1.34626:  54%|█████▎    | 15/28 [01:10<01:06,  5.11s/it]epoch 3 loss 1.34825:  54%|█████▎    | 15/28 [01:10<01:06,  5.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6501[0m
[32m  eval_f1 = 0.3296[0m
[32m  eval_mcc = 0.6308[0m
[32m  eval_precision = 0.4456[0m
[32m  eval_recall = 0.3032[0m

epoch 3 loss 1.34825:  57%|█████▋    | 16/28 [01:14<00:56,  4.71s/it]epoch 3 loss 1.35264:  57%|█████▋    | 16/28 [01:14<00:56,  4.71s/it]epoch 3 loss 1.35264:  61%|██████    | 17/28 [01:14<00:37,  3.42s/it]epoch 3 loss 1.35945:  61%|██████    | 17/28 [01:15<00:37,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6503[0m
[32m  eval_f1 = 0.3309[0m
[32m  eval_mcc = 0.6309[0m
[32m  eval_precision = 0.4477[0m
[32m  eval_recall = 0.3049[0m
[32m  ********************[0m
[32m  Best f1:0.3309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.35945:  64%|██████▍   | 18/28 [01:20<00:41,  4.16s/it]epoch 3 loss 1.34979:  64%|██████▍   | 18/28 [01:20<00:41,  4.16s/it]epoch 3 loss 1.34979:  68%|██████▊   | 19/28 [01:20<00:27,  3.03s/it]epoch 3 loss 1.35157:  68%|██████▊   | 19/28 [01:21<00:27,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6521[0m
[32m  eval_f1 = 0.3317[0m
[32m  eval_mcc = 0.6326[0m
[32m  eval_precision = 0.4474[0m
[32m  eval_recall = 0.3061[0m
[32m  ********************[0m
[32m  Best f1:0.3317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35157:  71%|███████▏  | 20/28 [01:28<00:34,  4.30s/it]epoch 3 loss 1.3442:  71%|███████▏  | 20/28 [01:28<00:34,  4.30s/it] epoch 3 loss 1.3442:  75%|███████▌  | 21/28 [01:28<00:21,  3.13s/it]epoch 3 loss 1.34316:  75%|███████▌  | 21/28 [01:29<00:21,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6541[0m
[32m  eval_f1 = 0.334[0m
[32m  eval_mcc = 0.6348[0m
[32m  eval_precision = 0.4508[0m
[32m  eval_recall = 0.3088[0m
[32m  ********************[0m
[32m  Best f1:0.334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34316:  79%|███████▊  | 22/28 [01:36<00:26,  4.46s/it]epoch 3 loss 1.34526:  79%|███████▊  | 22/28 [01:36<00:26,  4.46s/it]epoch 3 loss 1.34526:  82%|████████▏ | 23/28 [01:36<00:16,  3.25s/it]epoch 3 loss 1.3475:  82%|████████▏ | 23/28 [01:37<00:16,  3.25s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6561[0m
[32m  eval_f1 = 0.3356[0m
[32m  eval_mcc = 0.637[0m
[32m  eval_precision = 0.4516[0m
[32m  eval_recall = 0.3104[0m
[32m  ********************[0m
[32m  Best f1:0.3356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3475:  86%|████████▌ | 24/28 [01:45<00:19,  4.91s/it]epoch 3 loss 1.34691:  86%|████████▌ | 24/28 [01:45<00:19,  4.91s/it]epoch 3 loss 1.34691:  89%|████████▉ | 25/28 [01:45<00:10,  3.56s/it]epoch 3 loss 1.34565:  89%|████████▉ | 25/28 [01:46<00:10,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6576[0m
[32m  eval_f1 = 0.3373[0m
[32m  eval_mcc = 0.6387[0m
[32m  eval_precision = 0.4519[0m
[32m  eval_recall = 0.3116[0m
[32m  ********************[0m
[32m  Best f1:0.3373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34565:  93%|█████████▎| 26/28 [01:57<00:12,  6.02s/it]epoch 3 loss 1.33916:  93%|█████████▎| 26/28 [01:58<00:12,  6.02s/it]epoch 3 loss 1.33916:  96%|█████████▋| 27/28 [01:58<00:04,  4.35s/it]epoch 3 loss 1.33221:  96%|█████████▋| 27/28 [01:58<00:04,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6583[0m
[32m  eval_f1 = 0.3389[0m
[32m  eval_mcc = 0.6394[0m
[32m  eval_precision = 0.4574[0m
[32m  eval_recall = 0.3123[0m
[32m  ********************[0m
[32m  Best f1:0.3389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33221: 100%|██████████| 28/28 [02:10<00:00,  6.82s/it]epoch 3 loss 1.33221: 100%|██████████| 28/28 [02:10<00:00,  4.66s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.2534:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.2534:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 4 loss 1.30739:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6582[0m
[32m  eval_f1 = 0.3386[0m
[32m  eval_mcc = 0.6395[0m
[32m  eval_precision = 0.458[0m
[32m  eval_recall = 0.3116[0m
[32m  ********************[0m
[32m  Best MCC:0.6395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.30739:   7%|▋         | 2/28 [00:06<01:41,  3.89s/it]epoch 4 loss 1.32156:   7%|▋         | 2/28 [00:07<01:41,  3.89s/it]epoch 4 loss 1.32156:  11%|█         | 3/28 [00:07<00:57,  2.32s/it]epoch 4 loss 1.34741:  11%|█         | 3/28 [00:07<00:57,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3384[0m
[32m  eval_mcc = 0.6393[0m
[32m  eval_precision = 0.4568[0m
[32m  eval_recall = 0.3109[0m

epoch 4 loss 1.34741:  14%|█▍        | 4/28 [00:11<01:09,  2.91s/it]epoch 4 loss 1.30908:  14%|█▍        | 4/28 [00:11<01:09,  2.91s/it]epoch 4 loss 1.30908:  18%|█▊        | 5/28 [00:11<00:46,  2.01s/it]epoch 4 loss 1.28963:  18%|█▊        | 5/28 [00:11<00:46,  2.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6574[0m
[32m  eval_f1 = 0.338[0m
[32m  eval_mcc = 0.6386[0m
[32m  eval_precision = 0.4566[0m
[32m  eval_recall = 0.3104[0m

epoch 4 loss 1.28963:  21%|██▏       | 6/28 [00:15<00:57,  2.62s/it]epoch 4 loss 1.29641:  21%|██▏       | 6/28 [00:15<00:57,  2.62s/it]epoch 4 loss 1.29641:  25%|██▌       | 7/28 [00:15<00:39,  1.89s/it]epoch 4 loss 1.30325:  25%|██▌       | 7/28 [00:16<00:39,  1.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3379[0m
[32m  eval_mcc = 0.6381[0m
[32m  eval_precision = 0.4562[0m
[32m  eval_recall = 0.3102[0m

epoch 4 loss 1.30325:  29%|██▊       | 8/28 [00:19<00:50,  2.50s/it]epoch 4 loss 1.2949:  29%|██▊       | 8/28 [00:19<00:50,  2.50s/it] epoch 4 loss 1.2949:  32%|███▏      | 9/28 [00:19<00:35,  1.85s/it]epoch 4 loss 1.29084:  32%|███▏      | 9/28 [00:20<00:35,  1.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6559[0m
[32m  eval_f1 = 0.3385[0m
[32m  eval_mcc = 0.6368[0m
[32m  eval_precision = 0.4542[0m
[32m  eval_recall = 0.311[0m

epoch 4 loss 1.29084:  36%|███▌      | 10/28 [00:23<00:44,  2.45s/it]epoch 4 loss 1.28644:  36%|███▌      | 10/28 [00:24<00:44,  2.45s/it]epoch 4 loss 1.28644:  39%|███▉      | 11/28 [00:24<00:30,  1.82s/it]epoch 4 loss 1.29728:  39%|███▉      | 11/28 [00:24<00:30,  1.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6562[0m
[32m  eval_f1 = 0.3398[0m
[32m  eval_mcc = 0.6369[0m
[32m  eval_precision = 0.4539[0m
[32m  eval_recall = 0.3123[0m
[32m  ********************[0m
[32m  Best f1:0.3398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.29728:  43%|████▎     | 12/28 [00:29<00:45,  2.84s/it]epoch 4 loss 1.29979:  43%|████▎     | 12/28 [00:29<00:45,  2.84s/it]epoch 4 loss 1.29979:  46%|████▋     | 13/28 [00:29<00:31,  2.12s/it]epoch 4 loss 1.29805:  46%|████▋     | 13/28 [00:30<00:31,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.57it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.47it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.44it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.43it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3396[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4546[0m
[32m  eval_recall = 0.312[0m

epoch 4 loss 1.29805:  50%|█████     | 14/28 [00:33<00:38,  2.78s/it]epoch 4 loss 1.30255:  50%|█████     | 14/28 [00:34<00:38,  2.78s/it]epoch 4 loss 1.30255:  54%|█████▎    | 15/28 [00:34<00:27,  2.08s/it]epoch 4 loss 1.30401:  54%|█████▎    | 15/28 [00:34<00:27,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.37it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.40it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.40it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.40it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3407[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4544[0m
[32m  eval_recall = 0.3132[0m
[32m  ********************[0m
[32m  Best f1:0.3407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.30401:  57%|█████▋    | 16/28 [00:42<00:45,  3.77s/it]epoch 4 loss 1.29924:  57%|█████▋    | 16/28 [00:42<00:45,  3.77s/it]epoch 4 loss 1.29924:  61%|██████    | 17/28 [00:42<00:30,  2.78s/it]epoch 4 loss 1.30209:  61%|██████    | 17/28 [00:43<00:30,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3399[0m
[32m  eval_mcc = 0.6371[0m
[32m  eval_precision = 0.4537[0m
[32m  eval_recall = 0.3127[0m

epoch 4 loss 1.30209:  64%|██████▍   | 18/28 [00:46<00:32,  3.26s/it]epoch 4 loss 1.30134:  64%|██████▍   | 18/28 [00:47<00:32,  3.26s/it]epoch 4 loss 1.30134:  68%|██████▊   | 19/28 [00:47<00:21,  2.42s/it]epoch 4 loss 1.3024:  68%|██████▊   | 19/28 [00:47<00:21,  2.42s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.40it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.40it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3417[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4532[0m
[32m  eval_recall = 0.3145[0m
[32m  ********************[0m
[32m  Best f1:0.3417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.3024:  71%|███████▏  | 20/28 [00:55<00:32,  4.05s/it]epoch 4 loss 1.30204:  71%|███████▏  | 20/28 [00:55<00:32,  4.05s/it]epoch 4 loss 1.30204:  75%|███████▌  | 21/28 [00:55<00:20,  2.98s/it]epoch 4 loss 1.30503:  75%|███████▌  | 21/28 [00:56<00:20,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.40it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.40it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6572[0m
[32m  eval_f1 = 0.3431[0m
[32m  eval_mcc = 0.6378[0m
[32m  eval_precision = 0.4532[0m
[32m  eval_recall = 0.3158[0m
[32m  ********************[0m
[32m  Best f1:0.3431[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.30503:  79%|███████▊  | 22/28 [01:02<00:24,  4.11s/it]epoch 4 loss 1.30682:  79%|███████▊  | 22/28 [01:02<00:24,  4.11s/it]epoch 4 loss 1.30682:  82%|████████▏ | 23/28 [01:02<00:15,  3.02s/it]epoch 4 loss 1.30241:  82%|████████▏ | 23/28 [01:03<00:15,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.40it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.40it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6578[0m
[32m  eval_f1 = 0.3437[0m
[32m  eval_mcc = 0.6384[0m
[32m  eval_precision = 0.4535[0m
[32m  eval_recall = 0.3164[0m
[32m  ********************[0m
[32m  Best f1:0.3437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.30241:  86%|████████▌ | 24/28 [01:09<00:15,  3.97s/it]epoch 4 loss 1.29886:  86%|████████▌ | 24/28 [01:09<00:15,  3.97s/it]epoch 4 loss 1.29886:  89%|████████▉ | 25/28 [01:09<00:08,  2.93s/it]epoch 4 loss 1.29333:  89%|████████▉ | 25/28 [01:10<00:08,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.40it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.40it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.40it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6581[0m
[32m  eval_f1 = 0.3437[0m
[32m  eval_mcc = 0.6388[0m
[32m  eval_precision = 0.4537[0m
[32m  eval_recall = 0.3165[0m
[32m  ********************[0m
[32m  Best f1:0.3437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.29333:  93%|█████████▎| 26/28 [01:15<00:07,  3.90s/it]epoch 4 loss 1.29855:  93%|█████████▎| 26/28 [01:16<00:07,  3.90s/it]epoch 4 loss 1.29855:  96%|█████████▋| 27/28 [01:16<00:02,  2.87s/it]epoch 4 loss 1.29746:  96%|█████████▋| 27/28 [01:16<00:02,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.39it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.40it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.40it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.40it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.40it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.40it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.40it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3437[0m
[32m  eval_mcc = 0.6387[0m
[32m  eval_precision = 0.4536[0m
[32m  eval_recall = 0.3165[0m

epoch 4 loss 1.29746: 100%|██████████| 28/28 [01:20<00:00,  3.26s/it]epoch 4 loss 1.29746: 100%|██████████| 28/28 [01:20<00:00,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.42it/s] 20%|██        | 2/10 [00:00<00:03,  2.38it/s] 30%|███       | 3/10 [00:01<00:02,  2.39it/s] 40%|████      | 4/10 [00:01<00:02,  2.40it/s] 50%|█████     | 5/10 [00:02<00:02,  2.40it/s] 60%|██████    | 6/10 [00:02<00:01,  2.40it/s] 70%|███████   | 7/10 [00:02<00:01,  2.40it/s] 80%|████████  | 8/10 [00:03<00:00,  2.40it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.40it/s]100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6581[0m
[32m  eval_f1 = 0.3437[0m
[32m  eval_mcc = 0.6388[0m
[32m  eval_precision = 0.4537[0m
[32m  eval_recall = 0.3165[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.2694[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.3685[0m
[32m  eval_recall = 0.2534[0m

