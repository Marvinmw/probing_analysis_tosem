[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=0, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.61859:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.61859:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.62732:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0064[0m
[32m  eval_f1 = 0.0018[0m
[32m  eval_mcc = -0.0005[0m
[32m  eval_precision = 0.0066[0m
[32m  eval_recall = 0.0025[0m
[32m  ********************[0m
[32m  Best f1:0.0018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.62732:   7%|▋         | 2/28 [00:05<01:21,  3.12s/it]epoch 0 loss 5.61521:   7%|▋         | 2/28 [00:05<01:21,  3.12s/it]epoch 0 loss 5.61521:  11%|█         | 3/28 [00:05<00:46,  1.88s/it]epoch 0 loss 5.60005:  11%|█         | 3/28 [00:06<00:46,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0091[0m
[32m  eval_f1 = 0.0018[0m
[32m  eval_mcc = -0.0019[0m
[32m  eval_precision = 0.0046[0m
[32m  eval_recall = 0.0018[0m

epoch 0 loss 5.60005:  14%|█▍        | 4/28 [00:09<01:03,  2.63s/it]epoch 0 loss 5.58362:  14%|█▍        | 4/28 [00:10<01:03,  2.63s/it]epoch 0 loss 5.58362:  18%|█▊        | 5/28 [00:10<00:42,  1.83s/it]epoch 0 loss 5.55728:  18%|█▊        | 5/28 [00:10<00:42,  1.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0194[0m
[32m  eval_f1 = 0.0024[0m
[32m  eval_mcc = -0.0016[0m
[32m  eval_precision = 0.0055[0m
[32m  eval_recall = 0.0025[0m
[32m  ********************[0m
[32m  Best f1:0.0024[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.55728:  21%|██▏       | 6/28 [00:14<01:02,  2.85s/it]epoch 0 loss 5.51894:  21%|██▏       | 6/28 [00:15<01:02,  2.85s/it]epoch 0 loss 5.51894:  25%|██▌       | 7/28 [00:15<00:43,  2.05s/it]epoch 0 loss 5.47596:  25%|██▌       | 7/28 [00:15<00:43,  2.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.035[0m
[32m  eval_f1 = 0.0037[0m
[32m  eval_mcc = -0.0058[0m
[32m  eval_precision = 0.0123[0m
[32m  eval_recall = 0.0039[0m
[32m  ********************[0m
[32m  Best f1:0.0037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.47596:  29%|██▊       | 8/28 [00:20<00:58,  2.91s/it]epoch 0 loss 5.42745:  29%|██▊       | 8/28 [00:20<00:58,  2.91s/it]epoch 0 loss 5.42745:  32%|███▏      | 9/28 [00:20<00:40,  2.12s/it]epoch 0 loss 5.37329:  32%|███▏      | 9/28 [00:20<00:40,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0677[0m
[32m  eval_f1 = 0.0102[0m
[32m  eval_mcc = 0.0116[0m
[32m  eval_precision = 0.0197[0m
[32m  eval_recall = 0.0122[0m
[32m  ********************[0m
[32m  Best f1:0.0102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.37329:  36%|███▌      | 10/28 [00:25<00:56,  3.15s/it]epoch 0 loss 5.3172:  36%|███▌      | 10/28 [00:26<00:56,  3.15s/it] epoch 0 loss 5.3172:  39%|███▉      | 11/28 [00:26<00:39,  2.30s/it]epoch 0 loss 5.24979:  39%|███▉      | 11/28 [00:26<00:39,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0958[0m
[32m  eval_f1 = 0.0167[0m
[32m  eval_mcc = 0.0343[0m
[32m  eval_precision = 0.0296[0m
[32m  eval_recall = 0.0201[0m
[32m  ********************[0m
[32m  Best f1:0.0167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.24979:  43%|████▎     | 12/28 [00:32<00:53,  3.36s/it]epoch 0 loss 5.18363:  43%|████▎     | 12/28 [00:32<00:53,  3.36s/it]epoch 0 loss 5.18363:  46%|████▋     | 13/28 [00:32<00:37,  2.47s/it]epoch 0 loss 5.11196:  46%|████▋     | 13/28 [00:32<00:37,  2.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1257[0m
[32m  eval_f1 = 0.028[0m
[32m  eval_mcc = 0.0645[0m
[32m  eval_precision = 0.0336[0m
[32m  eval_recall = 0.0298[0m
[32m  ********************[0m
[32m  Best f1:0.028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.11196:  50%|█████     | 14/28 [00:39<00:52,  3.72s/it]epoch 0 loss 5.0363:  50%|█████     | 14/28 [00:39<00:52,  3.72s/it] epoch 0 loss 5.0363:  54%|█████▎    | 15/28 [00:39<00:35,  2.73s/it]epoch 0 loss 4.95577:  54%|█████▎    | 15/28 [00:39<00:35,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1742[0m
[32m  eval_f1 = 0.0373[0m
[32m  eval_mcc = 0.1171[0m
[32m  eval_precision = 0.0629[0m
[32m  eval_recall = 0.0367[0m
[32m  ********************[0m
[32m  Best f1:0.0373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.95577:  57%|█████▋    | 16/28 [00:45<00:45,  3.82s/it]epoch 0 loss 4.87533:  57%|█████▋    | 16/28 [00:46<00:45,  3.82s/it]epoch 0 loss 4.87533:  61%|██████    | 17/28 [00:46<00:30,  2.80s/it]epoch 0 loss 4.79662:  61%|██████    | 17/28 [00:46<00:30,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.246[0m
[32m  eval_f1 = 0.0537[0m
[32m  eval_mcc = 0.1953[0m
[32m  eval_precision = 0.0862[0m
[32m  eval_recall = 0.0502[0m
[32m  ********************[0m
[32m  Best f1:0.0537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.79662:  64%|██████▍   | 18/28 [00:52<00:39,  3.91s/it]epoch 0 loss 4.71749:  64%|██████▍   | 18/28 [00:53<00:39,  3.91s/it]epoch 0 loss 4.71749:  68%|██████▊   | 19/28 [00:53<00:25,  2.87s/it]epoch 0 loss 4.64451:  68%|██████▊   | 19/28 [00:53<00:25,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3101[0m
[32m  eval_f1 = 0.0691[0m
[32m  eval_mcc = 0.2641[0m
[32m  eval_precision = 0.1114[0m
[32m  eval_recall = 0.0632[0m
[32m  ********************[0m
[32m  Best f1:0.0691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2641[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.64451:  71%|███████▏  | 20/28 [00:59<00:29,  3.74s/it]epoch 0 loss 4.56964:  71%|███████▏  | 20/28 [00:59<00:29,  3.74s/it]epoch 0 loss 4.56964:  75%|███████▌  | 21/28 [00:59<00:19,  2.74s/it]epoch 0 loss 4.49025:  75%|███████▌  | 21/28 [00:59<00:19,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3984[0m
[32m  eval_f1 = 0.0985[0m
[32m  eval_mcc = 0.3576[0m
[32m  eval_precision = 0.1403[0m
[32m  eval_recall = 0.0895[0m
[32m  ********************[0m
[32m  Best f1:0.0985[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.49025:  79%|███████▊  | 22/28 [01:05<00:21,  3.63s/it]epoch 0 loss 4.4178:  79%|███████▊  | 22/28 [01:05<00:21,  3.63s/it] epoch 0 loss 4.4178:  82%|████████▏ | 23/28 [01:05<00:13,  2.67s/it]epoch 0 loss 4.34618:  82%|████████▏ | 23/28 [01:06<00:13,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4495[0m
[32m  eval_f1 = 0.1073[0m
[32m  eval_mcc = 0.4119[0m
[32m  eval_precision = 0.1526[0m
[32m  eval_recall = 0.1[0m
[32m  ********************[0m
[32m  Best f1:0.1073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.34618:  86%|████████▌ | 24/28 [01:12<00:15,  3.84s/it]epoch 0 loss 4.27577:  86%|████████▌ | 24/28 [01:12<00:15,  3.84s/it]epoch 0 loss 4.27577:  89%|████████▉ | 25/28 [01:12<00:08,  2.82s/it]epoch 0 loss 4.1996:  89%|████████▉ | 25/28 [01:13<00:08,  2.82s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4849[0m
[32m  eval_f1 = 0.1294[0m
[32m  eval_mcc = 0.4508[0m
[32m  eval_precision = 0.1802[0m
[32m  eval_recall = 0.1186[0m
[32m  ********************[0m
[32m  Best f1:0.1294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.1996:  93%|█████████▎| 26/28 [01:20<00:08,  4.22s/it]epoch 0 loss 4.12829:  93%|█████████▎| 26/28 [01:20<00:08,  4.22s/it]epoch 0 loss 4.12829:  96%|█████████▋| 27/28 [01:20<00:03,  3.08s/it]epoch 0 loss 4.06461:  96%|█████████▋| 27/28 [01:20<00:03,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5012[0m
[32m  eval_f1 = 0.1373[0m
[32m  eval_mcc = 0.4697[0m
[32m  eval_precision = 0.1749[0m
[32m  eval_recall = 0.1306[0m
[32m  ********************[0m
[32m  Best f1:0.1373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.06461: 100%|██████████| 28/28 [01:26<00:00,  4.07s/it]epoch 0 loss 4.06461: 100%|██████████| 28/28 [01:26<00:00,  3.10s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.14226:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.14226:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s]epoch 1 loss 2.03763:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5297[0m
[32m  eval_f1 = 0.15[0m
[32m  eval_mcc = 0.5009[0m
[32m  eval_precision = 0.2[0m
[32m  eval_recall = 0.1453[0m
[32m  ********************[0m
[32m  Best f1:0.15[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03763:   7%|▋         | 2/28 [00:06<01:44,  4.02s/it]epoch 1 loss 1.98143:   7%|▋         | 2/28 [00:07<01:44,  4.02s/it]epoch 1 loss 1.98143:  11%|█         | 3/28 [00:07<00:59,  2.38s/it]epoch 1 loss 1.96171:  11%|█         | 3/28 [00:07<00:59,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5529[0m
[32m  eval_f1 = 0.1694[0m
[32m  eval_mcc = 0.5259[0m
[32m  eval_precision = 0.2182[0m
[32m  eval_recall = 0.1628[0m
[32m  ********************[0m
[32m  Best f1:0.1694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96171:  14%|█▍        | 4/28 [00:13<01:34,  3.93s/it]epoch 1 loss 1.95027:  14%|█▍        | 4/28 [00:14<01:34,  3.93s/it]epoch 1 loss 1.95027:  18%|█▊        | 5/28 [00:14<01:01,  2.67s/it]epoch 1 loss 1.92784:  18%|█▊        | 5/28 [00:14<01:01,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5742[0m
[32m  eval_f1 = 0.1866[0m
[32m  eval_mcc = 0.55[0m
[32m  eval_precision = 0.2433[0m
[32m  eval_recall = 0.1789[0m
[32m  ********************[0m
[32m  Best f1:0.1866[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.55[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92784:  21%|██▏       | 6/28 [00:20<01:27,  3.99s/it]epoch 1 loss 1.90496:  21%|██▏       | 6/28 [00:21<01:27,  3.99s/it]epoch 1 loss 1.90496:  25%|██▌       | 7/28 [00:21<00:59,  2.83s/it]epoch 1 loss 1.89002:  25%|██▌       | 7/28 [00:21<00:59,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5816[0m
[32m  eval_f1 = 0.1934[0m
[32m  eval_mcc = 0.5584[0m
[32m  eval_precision = 0.2634[0m
[32m  eval_recall = 0.1837[0m
[32m  ********************[0m
[32m  Best f1:0.1934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89002:  29%|██▊       | 8/28 [00:26<01:15,  3.78s/it]epoch 1 loss 1.88884:  29%|██▊       | 8/28 [00:27<01:15,  3.78s/it]epoch 1 loss 1.88884:  32%|███▏      | 9/28 [00:27<00:51,  2.73s/it]epoch 1 loss 1.87102:  32%|███▏      | 9/28 [00:27<00:51,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5922[0m
[32m  eval_f1 = 0.2079[0m
[32m  eval_mcc = 0.5698[0m
[32m  eval_precision = 0.2802[0m
[32m  eval_recall = 0.1932[0m
[32m  ********************[0m
[32m  Best f1:0.2079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87102:  36%|███▌      | 10/28 [00:36<01:26,  4.81s/it]epoch 1 loss 1.85198:  36%|███▌      | 10/28 [00:37<01:26,  4.81s/it]epoch 1 loss 1.85198:  39%|███▉      | 11/28 [00:37<00:58,  3.46s/it]epoch 1 loss 1.82677:  39%|███▉      | 11/28 [00:37<00:58,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5987[0m
[32m  eval_f1 = 0.2238[0m
[32m  eval_mcc = 0.5763[0m
[32m  eval_precision = 0.3263[0m
[32m  eval_recall = 0.2068[0m
[32m  ********************[0m
[32m  Best f1:0.2238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5763[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.82677:  43%|████▎     | 12/28 [00:49<01:38,  6.16s/it]epoch 1 loss 1.80473:  43%|████▎     | 12/28 [00:49<01:38,  6.16s/it]epoch 1 loss 1.80473:  46%|████▋     | 13/28 [00:49<01:06,  4.42s/it]epoch 1 loss 1.79294:  46%|████▋     | 13/28 [00:50<01:06,  4.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.604[0m
[32m  eval_f1 = 0.2521[0m
[32m  eval_mcc = 0.5815[0m
[32m  eval_precision = 0.345[0m
[32m  eval_recall = 0.2347[0m
[32m  ********************[0m
[32m  Best f1:0.2521[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5815[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.79294:  50%|█████     | 14/28 [00:59<01:22,  5.88s/it]epoch 1 loss 1.77532:  50%|█████     | 14/28 [00:59<01:22,  5.88s/it]epoch 1 loss 1.77532:  54%|█████▎    | 15/28 [00:59<00:55,  4.23s/it]epoch 1 loss 1.7639:  54%|█████▎    | 15/28 [01:00<00:55,  4.23s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6133[0m
[32m  eval_f1 = 0.2597[0m
[32m  eval_mcc = 0.5915[0m
[32m  eval_precision = 0.356[0m
[32m  eval_recall = 0.2422[0m
[32m  ********************[0m
[32m  Best f1:0.2597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5915[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7639:  57%|█████▋    | 16/28 [01:10<01:15,  6.32s/it]epoch 1 loss 1.74443:  57%|█████▋    | 16/28 [01:11<01:15,  6.32s/it]epoch 1 loss 1.74443:  61%|██████    | 17/28 [01:11<00:50,  4.55s/it]epoch 1 loss 1.72603:  61%|██████    | 17/28 [01:11<00:50,  4.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6195[0m
[32m  eval_f1 = 0.2685[0m
[32m  eval_mcc = 0.5986[0m
[32m  eval_precision = 0.3695[0m
[32m  eval_recall = 0.2493[0m
[32m  ********************[0m
[32m  Best f1:0.2685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5986[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72603:  64%|██████▍   | 18/28 [01:23<01:09,  6.96s/it]epoch 1 loss 1.70787:  64%|██████▍   | 18/28 [01:24<01:09,  6.96s/it]epoch 1 loss 1.70787:  68%|██████▊   | 19/28 [01:24<00:44,  5.00s/it]epoch 1 loss 1.70963:  68%|██████▊   | 19/28 [01:24<00:44,  5.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6269[0m
[32m  eval_f1 = 0.2756[0m
[32m  eval_mcc = 0.6073[0m
[32m  eval_precision = 0.3673[0m
[32m  eval_recall = 0.2569[0m
[32m  ********************[0m
[32m  Best f1:0.2756[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.70963:  71%|███████▏  | 20/28 [01:33<00:50,  6.32s/it]epoch 1 loss 1.69775:  71%|███████▏  | 20/28 [01:34<00:50,  6.32s/it]epoch 1 loss 1.69775:  75%|███████▌  | 21/28 [01:34<00:31,  4.55s/it]epoch 1 loss 1.68721:  75%|███████▌  | 21/28 [01:34<00:31,  4.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6339[0m
[32m  eval_f1 = 0.2801[0m
[32m  eval_mcc = 0.6142[0m
[32m  eval_precision = 0.3679[0m
[32m  eval_recall = 0.2626[0m
[32m  ********************[0m
[32m  Best f1:0.2801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.68721:  79%|███████▊  | 22/28 [01:47<00:42,  7.12s/it]epoch 1 loss 1.67187:  79%|███████▊  | 22/28 [01:47<00:42,  7.12s/it]epoch 1 loss 1.67187:  82%|████████▏ | 23/28 [01:47<00:25,  5.11s/it]epoch 1 loss 1.66089:  82%|████████▏ | 23/28 [01:47<00:25,  5.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6363[0m
[32m  eval_f1 = 0.2869[0m
[32m  eval_mcc = 0.6157[0m
[32m  eval_precision = 0.3825[0m
[32m  eval_recall = 0.2691[0m
[32m  ********************[0m
[32m  Best f1:0.2869[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.66089:  86%|████████▌ | 24/28 [01:56<00:24,  6.23s/it]epoch 1 loss 1.64707:  86%|████████▌ | 24/28 [01:56<00:24,  6.23s/it]epoch 1 loss 1.64707:  89%|████████▉ | 25/28 [01:56<00:13,  4.49s/it]epoch 1 loss 1.63664:  89%|████████▉ | 25/28 [01:57<00:13,  4.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6377[0m
[32m  eval_f1 = 0.2966[0m
[32m  eval_mcc = 0.6165[0m
[32m  eval_precision = 0.389[0m
[32m  eval_recall = 0.278[0m
[32m  ********************[0m
[32m  Best f1:0.2966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.63664:  93%|█████████▎| 26/28 [02:08<00:13,  6.68s/it]epoch 1 loss 1.62613:  93%|█████████▎| 26/28 [02:09<00:13,  6.68s/it]epoch 1 loss 1.62613:  96%|█████████▋| 27/28 [02:09<00:04,  4.80s/it]epoch 1 loss 1.61635:  96%|█████████▋| 27/28 [02:09<00:04,  4.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6405[0m
[32m  eval_f1 = 0.3091[0m
[32m  eval_mcc = 0.6194[0m
[32m  eval_precision = 0.4083[0m
[32m  eval_recall = 0.2877[0m
[32m  ********************[0m
[32m  Best f1:0.3091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.61635: 100%|██████████| 28/28 [02:18<00:00,  6.05s/it]epoch 1 loss 1.61635: 100%|██████████| 28/28 [02:18<00:00,  4.93s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.17356:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.17356:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 2 loss 1.2875:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6437[0m
[32m  eval_f1 = 0.3151[0m
[32m  eval_mcc = 0.6229[0m
[32m  eval_precision = 0.4206[0m
[32m  eval_recall = 0.2927[0m
[32m  ********************[0m
[32m  Best f1:0.3151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2875:   7%|▋         | 2/28 [00:10<02:43,  6.28s/it]epoch 2 loss 1.2837:   7%|▋         | 2/28 [00:11<02:43,  6.28s/it]epoch 2 loss 1.2837:  11%|█         | 3/28 [00:11<01:29,  3.60s/it]epoch 2 loss 1.28076:  11%|█         | 3/28 [00:11<01:29,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6478[0m
[32m  eval_f1 = 0.3306[0m
[32m  eval_mcc = 0.6273[0m
[32m  eval_precision = 0.4399[0m
[32m  eval_recall = 0.3057[0m
[32m  ********************[0m
[32m  Best f1:0.3306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28076:  14%|█▍        | 4/28 [00:21<02:26,  6.09s/it]epoch 2 loss 1.27726:  14%|█▍        | 4/28 [00:21<02:26,  6.09s/it]epoch 2 loss 1.27726:  18%|█▊        | 5/28 [00:21<01:32,  4.04s/it]epoch 2 loss 1.29474:  18%|█▊        | 5/28 [00:21<01:32,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6535[0m
[32m  eval_f1 = 0.3312[0m
[32m  eval_mcc = 0.6337[0m
[32m  eval_precision = 0.4397[0m
[32m  eval_recall = 0.3075[0m
[32m  ********************[0m
[32m  Best f1:0.3312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29474:  21%|██▏       | 6/28 [00:30<02:05,  5.69s/it]epoch 2 loss 1.33632:  21%|██▏       | 6/28 [00:30<02:05,  5.69s/it]epoch 2 loss 1.33632:  25%|██▌       | 7/28 [00:30<01:23,  3.96s/it]epoch 2 loss 1.33137:  25%|██▌       | 7/28 [00:31<01:23,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3332[0m
[32m  eval_mcc = 0.6361[0m
[32m  eval_precision = 0.4422[0m
[32m  eval_recall = 0.31[0m
[32m  ********************[0m
[32m  Best f1:0.3332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33137:  29%|██▊       | 8/28 [00:39<01:49,  5.47s/it]epoch 2 loss 1.33305:  29%|██▊       | 8/28 [00:39<01:49,  5.47s/it]epoch 2 loss 1.33305:  32%|███▏      | 9/28 [00:39<01:14,  3.90s/it]epoch 2 loss 1.32244:  32%|███▏      | 9/28 [00:40<01:14,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6571[0m
[32m  eval_f1 = 0.3377[0m
[32m  eval_mcc = 0.6386[0m
[32m  eval_precision = 0.4466[0m
[32m  eval_recall = 0.314[0m
[32m  ********************[0m
[32m  Best f1:0.3377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32244:  36%|███▌      | 10/28 [00:49<01:41,  5.64s/it]epoch 2 loss 1.30225:  36%|███▌      | 10/28 [00:49<01:41,  5.64s/it]epoch 2 loss 1.30225:  39%|███▉      | 11/28 [00:49<01:08,  4.04s/it]epoch 2 loss 1.30171:  39%|███▉      | 11/28 [00:50<01:08,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.61it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.3403[0m
[32m  eval_mcc = 0.6402[0m
[32m  eval_precision = 0.4475[0m
[32m  eval_recall = 0.3168[0m
[32m  ********************[0m
[32m  Best f1:0.3403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30171:  43%|████▎     | 12/28 [01:01<01:41,  6.32s/it]epoch 2 loss 1.29319:  43%|████▎     | 12/28 [01:01<01:41,  6.32s/it]epoch 2 loss 1.29319:  46%|████▋     | 13/28 [01:01<01:07,  4.53s/it]epoch 2 loss 1.28476:  46%|████▋     | 13/28 [01:02<01:07,  4.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6599[0m
[32m  eval_f1 = 0.3509[0m
[32m  eval_mcc = 0.6412[0m
[32m  eval_precision = 0.4564[0m
[32m  eval_recall = 0.3258[0m
[32m  ********************[0m
[32m  Best f1:0.3509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6412[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28476:  50%|█████     | 14/28 [01:10<01:21,  5.85s/it]epoch 2 loss 1.29398:  50%|█████     | 14/28 [01:11<01:21,  5.85s/it]epoch 2 loss 1.29398:  54%|█████▎    | 15/28 [01:11<00:54,  4.21s/it]epoch 2 loss 1.28304:  54%|█████▎    | 15/28 [01:11<00:54,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6626[0m
[32m  eval_f1 = 0.355[0m
[32m  eval_mcc = 0.6438[0m
[32m  eval_precision = 0.4568[0m
[32m  eval_recall = 0.3294[0m
[32m  ********************[0m
[32m  Best f1:0.355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28304:  57%|█████▋    | 16/28 [01:23<01:18,  6.57s/it]epoch 2 loss 1.2764:  57%|█████▋    | 16/28 [01:23<01:18,  6.57s/it] epoch 2 loss 1.2764:  61%|██████    | 17/28 [01:23<00:51,  4.72s/it]epoch 2 loss 1.26829:  61%|██████    | 17/28 [01:24<00:51,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6646[0m
[32m  eval_f1 = 0.3565[0m
[32m  eval_mcc = 0.6458[0m
[32m  eval_precision = 0.4563[0m
[32m  eval_recall = 0.3301[0m
[32m  ********************[0m
[32m  Best f1:0.3565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26829:  64%|██████▍   | 18/28 [01:33<01:02,  6.21s/it]epoch 2 loss 1.2698:  64%|██████▍   | 18/28 [01:33<01:02,  6.21s/it] epoch 2 loss 1.2698:  68%|██████▊   | 19/28 [01:33<00:40,  4.47s/it]epoch 2 loss 1.26822:  68%|██████▊   | 19/28 [01:34<00:40,  4.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.361[0m
[32m  eval_mcc = 0.6466[0m
[32m  eval_precision = 0.4629[0m
[32m  eval_recall = 0.3334[0m
[32m  ********************[0m
[32m  Best f1:0.361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26822:  71%|███████▏  | 20/28 [01:45<00:53,  6.71s/it]epoch 2 loss 1.26193:  71%|███████▏  | 20/28 [01:46<00:53,  6.71s/it]epoch 2 loss 1.26193:  75%|███████▌  | 21/28 [01:46<00:33,  4.82s/it]epoch 2 loss 1.2653:  75%|███████▌  | 21/28 [01:46<00:33,  4.82s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6656[0m
[32m  eval_f1 = 0.3645[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.4639[0m
[32m  eval_recall = 0.3362[0m
[32m  ********************[0m
[32m  Best f1:0.3645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2653:  79%|███████▊  | 22/28 [01:55<00:37,  6.17s/it]epoch 2 loss 1.26246:  79%|███████▊  | 22/28 [01:55<00:37,  6.17s/it]epoch 2 loss 1.26246:  82%|████████▏ | 23/28 [01:55<00:22,  4.45s/it]epoch 2 loss 1.25742:  82%|████████▏ | 23/28 [01:56<00:22,  4.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.666[0m
[32m  eval_f1 = 0.3685[0m
[32m  eval_mcc = 0.6473[0m
[32m  eval_precision = 0.4616[0m
[32m  eval_recall = 0.3399[0m
[32m  ********************[0m
[32m  Best f1:0.3685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25742:  86%|████████▌ | 24/28 [02:06<00:25,  6.41s/it]epoch 2 loss 1.25543:  86%|████████▌ | 24/28 [02:07<00:25,  6.41s/it]epoch 2 loss 1.25543:  89%|████████▉ | 25/28 [02:07<00:13,  4.61s/it]epoch 2 loss 1.25106:  89%|████████▉ | 25/28 [02:07<00:13,  4.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.666[0m
[32m  eval_f1 = 0.3685[0m
[32m  eval_mcc = 0.6474[0m
[32m  eval_precision = 0.4598[0m
[32m  eval_recall = 0.3401[0m
[32m  ********************[0m
[32m  Best MCC:0.6474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25106:  93%|█████████▎| 26/28 [02:15<00:11,  5.64s/it]epoch 2 loss 1.25339:  93%|█████████▎| 26/28 [02:15<00:11,  5.64s/it]epoch 2 loss 1.25339:  96%|█████████▋| 27/28 [02:15<00:04,  4.08s/it]epoch 2 loss 1.25622:  96%|█████████▋| 27/28 [02:15<00:04,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6672[0m
[32m  eval_f1 = 0.3715[0m
[32m  eval_mcc = 0.6485[0m
[32m  eval_precision = 0.4606[0m
[32m  eval_recall = 0.3429[0m
[32m  ********************[0m
[32m  Best f1:0.3715[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25622: 100%|██████████| 28/28 [02:24<00:00,  5.62s/it]epoch 2 loss 1.25622: 100%|██████████| 28/28 [02:24<00:00,  5.18s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.10174:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.10174:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 3 loss 1.16297:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6692[0m
[32m  eval_f1 = 0.3705[0m
[32m  eval_mcc = 0.6505[0m
[32m  eval_precision = 0.4544[0m
[32m  eval_recall = 0.3442[0m
[32m  ********************[0m
[32m  Best MCC:0.6505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16297:   7%|▋         | 2/28 [00:05<01:25,  3.27s/it]epoch 3 loss 1.19118:   7%|▋         | 2/28 [00:06<01:25,  3.27s/it]epoch 3 loss 1.19118:  11%|█         | 3/28 [00:06<00:49,  1.96s/it]epoch 3 loss 1.17352:  11%|█         | 3/28 [00:06<00:49,  1.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6715[0m
[32m  eval_f1 = 0.3725[0m
[32m  eval_mcc = 0.6527[0m
[32m  eval_precision = 0.4544[0m
[32m  eval_recall = 0.3464[0m
[32m  ********************[0m
[32m  Best f1:0.3725[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6527[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17352:  14%|█▍        | 4/28 [00:18<02:25,  6.07s/it]epoch 3 loss 1.14644:  14%|█▍        | 4/28 [00:18<02:25,  6.07s/it]epoch 3 loss 1.14644:  18%|█▊        | 5/28 [00:18<01:32,  4.03s/it]epoch 3 loss 1.15661:  18%|█▊        | 5/28 [00:19<01:32,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6736[0m
[32m  eval_f1 = 0.3756[0m
[32m  eval_mcc = 0.655[0m
[32m  eval_precision = 0.4575[0m
[32m  eval_recall = 0.3501[0m
[32m  ********************[0m
[32m  Best f1:0.3756[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15661:  21%|██▏       | 6/28 [00:25<01:51,  5.06s/it]epoch 3 loss 1.16266:  21%|██▏       | 6/28 [00:26<01:51,  5.06s/it]epoch 3 loss 1.16266:  25%|██▌       | 7/28 [00:26<01:14,  3.54s/it]epoch 3 loss 1.17594:  25%|██▌       | 7/28 [00:26<01:14,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6753[0m
[32m  eval_f1 = 0.3783[0m
[32m  eval_mcc = 0.6568[0m
[32m  eval_precision = 0.4598[0m
[32m  eval_recall = 0.3526[0m
[32m  ********************[0m
[32m  Best f1:0.3783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17594:  29%|██▊       | 8/28 [00:32<01:29,  4.48s/it]epoch 3 loss 1.17956:  29%|██▊       | 8/28 [00:33<01:29,  4.48s/it]epoch 3 loss 1.17956:  32%|███▏      | 9/28 [00:33<01:01,  3.22s/it]epoch 3 loss 1.17857:  32%|███▏      | 9/28 [00:33<01:01,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6768[0m
[32m  eval_f1 = 0.3804[0m
[32m  eval_mcc = 0.6585[0m
[32m  eval_precision = 0.4598[0m
[32m  eval_recall = 0.3547[0m
[32m  ********************[0m
[32m  Best f1:0.3804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17857:  36%|███▌      | 10/28 [00:39<01:14,  4.13s/it]epoch 3 loss 1.17052:  36%|███▌      | 10/28 [00:39<01:14,  4.13s/it]epoch 3 loss 1.17052:  39%|███▉      | 11/28 [00:39<00:50,  3.00s/it]epoch 3 loss 1.17056:  39%|███▉      | 11/28 [00:40<00:50,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6763[0m
[32m  eval_f1 = 0.3804[0m
[32m  eval_mcc = 0.6581[0m
[32m  eval_precision = 0.4604[0m
[32m  eval_recall = 0.3544[0m
[32m  ********************[0m
[32m  Best f1:0.3804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.17056:  43%|████▎     | 12/28 [00:44<00:56,  3.55s/it]epoch 3 loss 1.17496:  43%|████▎     | 12/28 [00:45<00:56,  3.55s/it]epoch 3 loss 1.17496:  46%|████▋     | 13/28 [00:45<00:38,  2.60s/it]epoch 3 loss 1.17068:  46%|████▋     | 13/28 [00:45<00:38,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6768[0m
[32m  eval_f1 = 0.3801[0m
[32m  eval_mcc = 0.6587[0m
[32m  eval_precision = 0.4591[0m
[32m  eval_recall = 0.3541[0m
[32m  ********************[0m
[32m  Best MCC:0.6587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17068:  50%|█████     | 14/28 [00:50<00:46,  3.31s/it]epoch 3 loss 1.17048:  50%|█████     | 14/28 [00:50<00:46,  3.31s/it]epoch 3 loss 1.17048:  54%|█████▎    | 15/28 [00:50<00:31,  2.43s/it]epoch 3 loss 1.1719:  54%|█████▎    | 15/28 [00:50<00:31,  2.43s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6759[0m
[32m  eval_f1 = 0.3789[0m
[32m  eval_mcc = 0.6578[0m
[32m  eval_precision = 0.4655[0m
[32m  eval_recall = 0.3531[0m

epoch 3 loss 1.1719:  57%|█████▋    | 16/28 [00:54<00:34,  2.84s/it]epoch 3 loss 1.17596:  57%|█████▋    | 16/28 [00:54<00:34,  2.84s/it]epoch 3 loss 1.17596:  61%|██████    | 17/28 [00:54<00:23,  2.10s/it]epoch 3 loss 1.18202:  61%|██████    | 17/28 [00:55<00:23,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6762[0m
[32m  eval_f1 = 0.3799[0m
[32m  eval_mcc = 0.6581[0m
[32m  eval_precision = 0.4678[0m
[32m  eval_recall = 0.3538[0m

epoch 3 loss 1.18202:  64%|██████▍   | 18/28 [00:58<00:26,  2.61s/it]epoch 3 loss 1.17319:  64%|██████▍   | 18/28 [00:58<00:26,  2.61s/it]epoch 3 loss 1.17319:  68%|██████▊   | 19/28 [00:58<00:17,  1.94s/it]epoch 3 loss 1.175:  68%|██████▊   | 19/28 [00:59<00:17,  1.94s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.678[0m
[32m  eval_f1 = 0.3809[0m
[32m  eval_mcc = 0.6601[0m
[32m  eval_precision = 0.4676[0m
[32m  eval_recall = 0.3553[0m
[32m  ********************[0m
[32m  Best f1:0.3809[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.175:  71%|███████▏  | 20/28 [01:04<00:24,  3.06s/it]epoch 3 loss 1.16793:  71%|███████▏  | 20/28 [01:04<00:24,  3.06s/it]epoch 3 loss 1.16793:  75%|███████▌  | 21/28 [01:04<00:15,  2.27s/it]epoch 3 loss 1.16731:  75%|███████▌  | 21/28 [01:05<00:15,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6791[0m
[32m  eval_f1 = 0.3811[0m
[32m  eval_mcc = 0.6612[0m
[32m  eval_precision = 0.4683[0m
[32m  eval_recall = 0.3558[0m
[32m  ********************[0m
[32m  Best f1:0.3811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16731:  79%|███████▊  | 22/28 [01:10<00:19,  3.26s/it]epoch 3 loss 1.1696:  79%|███████▊  | 22/28 [01:10<00:19,  3.26s/it] epoch 3 loss 1.1696:  82%|████████▏ | 23/28 [01:10<00:12,  2.41s/it]epoch 3 loss 1.17224:  82%|████████▏ | 23/28 [01:11<00:12,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6805[0m
[32m  eval_f1 = 0.3822[0m
[32m  eval_mcc = 0.6627[0m
[32m  eval_precision = 0.4686[0m
[32m  eval_recall = 0.357[0m
[32m  ********************[0m
[32m  Best f1:0.3822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17224:  86%|████████▌ | 24/28 [01:17<00:14,  3.64s/it]epoch 3 loss 1.17118:  86%|████████▌ | 24/28 [01:17<00:14,  3.64s/it]epoch 3 loss 1.17118:  89%|████████▉ | 25/28 [01:17<00:08,  2.67s/it]epoch 3 loss 1.16994:  89%|████████▉ | 25/28 [01:18<00:08,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6816[0m
[32m  eval_f1 = 0.3824[0m
[32m  eval_mcc = 0.664[0m
[32m  eval_precision = 0.4681[0m
[32m  eval_recall = 0.3573[0m
[32m  ********************[0m
[32m  Best f1:0.3824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.664[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16994:  93%|█████████▎| 26/28 [01:24<00:07,  3.83s/it]epoch 3 loss 1.16414:  93%|█████████▎| 26/28 [01:24<00:07,  3.83s/it]epoch 3 loss 1.16414:  96%|█████████▋| 27/28 [01:24<00:02,  2.81s/it]epoch 3 loss 1.15819:  96%|█████████▋| 27/28 [01:24<00:02,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6814[0m
[32m  eval_f1 = 0.3821[0m
[32m  eval_mcc = 0.6638[0m
[32m  eval_precision = 0.4673[0m
[32m  eval_recall = 0.3571[0m

epoch 3 loss 1.15819: 100%|██████████| 28/28 [01:28<00:00,  3.04s/it]epoch 3 loss 1.15819: 100%|██████████| 28/28 [01:28<00:00,  3.16s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.08461:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.08461:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s]epoch 4 loss 1.15027:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6817[0m
[32m  eval_f1 = 0.3822[0m
[32m  eval_mcc = 0.6642[0m
[32m  eval_precision = 0.468[0m
[32m  eval_recall = 0.357[0m
[32m  ********************[0m
[32m  Best MCC:0.6642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15027:   7%|▋         | 2/28 [00:05<01:21,  3.12s/it]epoch 4 loss 1.15538:   7%|▋         | 2/28 [00:05<01:21,  3.12s/it]epoch 4 loss 1.15538:  11%|█         | 3/28 [00:05<00:47,  1.88s/it]epoch 4 loss 1.17761:  11%|█         | 3/28 [00:06<00:47,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6818[0m
[32m  eval_f1 = 0.3821[0m
[32m  eval_mcc = 0.6643[0m
[32m  eval_precision = 0.4698[0m
[32m  eval_recall = 0.3562[0m
[32m  ********************[0m
[32m  Best MCC:0.6643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17761:  14%|█▍        | 4/28 [00:10<01:15,  3.13s/it]epoch 4 loss 1.14627:  14%|█▍        | 4/28 [00:11<01:15,  3.13s/it]epoch 4 loss 1.14627:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it]epoch 4 loss 1.12949:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.682[0m
[32m  eval_f1 = 0.382[0m
[32m  eval_mcc = 0.6644[0m
[32m  eval_precision = 0.4703[0m
[32m  eval_recall = 0.3555[0m
[32m  ********************[0m
[32m  Best MCC:0.6644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12949:  21%|██▏       | 6/28 [00:16<01:08,  3.13s/it]epoch 4 loss 1.13484:  21%|██▏       | 6/28 [00:16<01:08,  3.13s/it]epoch 4 loss 1.13484:  25%|██▌       | 7/28 [00:16<00:47,  2.24s/it]epoch 4 loss 1.14004:  25%|██▌       | 7/28 [00:17<00:47,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6821[0m
[32m  eval_f1 = 0.3825[0m
[32m  eval_mcc = 0.6646[0m
[32m  eval_precision = 0.4711[0m
[32m  eval_recall = 0.3557[0m
[32m  ********************[0m
[32m  Best f1:0.3825[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14004:  29%|██▊       | 8/28 [00:22<01:09,  3.47s/it]epoch 4 loss 1.13165:  29%|██▊       | 8/28 [00:23<01:09,  3.47s/it]epoch 4 loss 1.13165:  32%|███▏      | 9/28 [00:23<00:47,  2.52s/it]epoch 4 loss 1.12623:  32%|███▏      | 9/28 [00:23<00:47,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6807[0m
[32m  eval_f1 = 0.3817[0m
[32m  eval_mcc = 0.663[0m
[32m  eval_precision = 0.4695[0m
[32m  eval_recall = 0.3552[0m

epoch 4 loss 1.12623:  36%|███▌      | 10/28 [00:27<00:52,  2.91s/it]epoch 4 loss 1.1211:  36%|███▌      | 10/28 [00:27<00:52,  2.91s/it] epoch 4 loss 1.1211:  39%|███▉      | 11/28 [00:27<00:36,  2.14s/it]epoch 4 loss 1.13155:  39%|███▉      | 11/28 [00:27<00:36,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6813[0m
[32m  eval_f1 = 0.3824[0m
[32m  eval_mcc = 0.6636[0m
[32m  eval_precision = 0.4707[0m
[32m  eval_recall = 0.3554[0m

epoch 4 loss 1.13155:  43%|████▎     | 12/28 [00:31<00:42,  2.65s/it]epoch 4 loss 1.13219:  43%|████▎     | 12/28 [00:31<00:42,  2.65s/it]epoch 4 loss 1.13219:  46%|████▋     | 13/28 [00:31<00:29,  1.96s/it]epoch 4 loss 1.13121:  46%|████▋     | 13/28 [00:32<00:29,  1.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6813[0m
[32m  eval_f1 = 0.3823[0m
[32m  eval_mcc = 0.6636[0m
[32m  eval_precision = 0.4704[0m
[32m  eval_recall = 0.3555[0m

epoch 4 loss 1.13121:  50%|█████     | 14/28 [00:35<00:35,  2.52s/it]epoch 4 loss 1.13489:  50%|█████     | 14/28 [00:35<00:35,  2.52s/it]epoch 4 loss 1.13489:  54%|█████▎    | 15/28 [00:35<00:24,  1.88s/it]epoch 4 loss 1.13521:  54%|█████▎    | 15/28 [00:36<00:24,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.682[0m
[32m  eval_f1 = 0.3834[0m
[32m  eval_mcc = 0.6642[0m
[32m  eval_precision = 0.4707[0m
[32m  eval_recall = 0.3572[0m
[32m  ********************[0m
[32m  Best f1:0.3834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.13521:  57%|█████▋    | 16/28 [00:40<00:33,  2.83s/it]epoch 4 loss 1.13081:  57%|█████▋    | 16/28 [00:41<00:33,  2.83s/it]epoch 4 loss 1.13081:  61%|██████    | 17/28 [00:41<00:23,  2.10s/it]epoch 4 loss 1.13325:  61%|██████    | 17/28 [00:41<00:23,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6824[0m
[32m  eval_f1 = 0.3839[0m
[32m  eval_mcc = 0.6646[0m
[32m  eval_precision = 0.4707[0m
[32m  eval_recall = 0.3576[0m
[32m  ********************[0m
[32m  Best f1:0.3839[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.13325:  64%|██████▍   | 18/28 [00:47<00:34,  3.43s/it]epoch 4 loss 1.13308:  64%|██████▍   | 18/28 [00:48<00:34,  3.43s/it]epoch 4 loss 1.13308:  68%|██████▊   | 19/28 [00:48<00:22,  2.53s/it]epoch 4 loss 1.13408:  68%|██████▊   | 19/28 [00:48<00:22,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6827[0m
[32m  eval_f1 = 0.384[0m
[32m  eval_mcc = 0.6648[0m
[32m  eval_precision = 0.4709[0m
[32m  eval_recall = 0.3577[0m
[32m  ********************[0m
[32m  Best f1:0.384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.13408:  71%|███████▏  | 20/28 [00:55<00:30,  3.81s/it]epoch 4 loss 1.1341:  71%|███████▏  | 20/28 [00:55<00:30,  3.81s/it] epoch 4 loss 1.1341:  75%|███████▌  | 21/28 [00:55<00:19,  2.79s/it]epoch 4 loss 1.13673:  75%|███████▌  | 21/28 [00:55<00:19,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6827[0m
[32m  eval_f1 = 0.384[0m
[32m  eval_mcc = 0.6648[0m
[32m  eval_precision = 0.4706[0m
[32m  eval_recall = 0.3578[0m

epoch 4 loss 1.13673:  79%|███████▊  | 22/28 [00:59<00:18,  3.09s/it]epoch 4 loss 1.13838:  79%|███████▊  | 22/28 [00:59<00:18,  3.09s/it]epoch 4 loss 1.13838:  82%|████████▏ | 23/28 [00:59<00:11,  2.29s/it]epoch 4 loss 1.13396:  82%|████████▏ | 23/28 [01:00<00:11,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6832[0m
[32m  eval_f1 = 0.384[0m
[32m  eval_mcc = 0.6654[0m
[32m  eval_precision = 0.4705[0m
[32m  eval_recall = 0.358[0m
[32m  ********************[0m
[32m  Best f1:0.384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.13396:  86%|████████▌ | 24/28 [01:06<00:14,  3.56s/it]epoch 4 loss 1.13112:  86%|████████▌ | 24/28 [01:06<00:14,  3.56s/it]epoch 4 loss 1.13112:  89%|████████▉ | 25/28 [01:06<00:07,  2.62s/it]epoch 4 loss 1.12619:  89%|████████▉ | 25/28 [01:06<00:07,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6833[0m
[32m  eval_f1 = 0.3839[0m
[32m  eval_mcc = 0.6655[0m
[32m  eval_precision = 0.4703[0m
[32m  eval_recall = 0.3579[0m
[32m  ********************[0m
[32m  Best MCC:0.6655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12619:  93%|█████████▎| 26/28 [01:11<00:06,  3.34s/it]epoch 4 loss 1.13026:  93%|█████████▎| 26/28 [01:12<00:06,  3.34s/it]epoch 4 loss 1.13026:  96%|█████████▋| 27/28 [01:12<00:02,  2.46s/it]epoch 4 loss 1.12915:  96%|█████████▋| 27/28 [01:12<00:02,  2.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6833[0m
[32m  eval_f1 = 0.3839[0m
[32m  eval_mcc = 0.6655[0m
[32m  eval_precision = 0.4703[0m
[32m  eval_recall = 0.3579[0m

epoch 4 loss 1.12915: 100%|██████████| 28/28 [01:15<00:00,  2.81s/it]epoch 4 loss 1.12915: 100%|██████████| 28/28 [01:15<00:00,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6832[0m
[32m  eval_f1 = 0.384[0m
[32m  eval_mcc = 0.6654[0m
[32m  eval_precision = 0.4705[0m
[32m  eval_recall = 0.358[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.662[0m
[32m  eval_f1 = 0.305[0m
[32m  eval_mcc = 0.644[0m
[32m  eval_precision = 0.3842[0m
[32m  eval_recall = 0.2874[0m

