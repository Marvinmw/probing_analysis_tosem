[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.66023:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.66023:   4%|▎         | 1/28 [00:00<00:20,  1.29it/s]epoch 0 loss 5.69142:   4%|▎         | 1/28 [00:01<00:20,  1.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0023[0m
[32m  eval_f1 = 0.0004[0m
[32m  eval_mcc = -0.0008[0m
[32m  eval_precision = 0.0011[0m
[32m  eval_recall = 0.0011[0m
[32m  ********************[0m
[32m  Best f1:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.69142:   7%|▋         | 2/28 [00:05<01:21,  3.15s/it]epoch 0 loss 5.66887:   7%|▋         | 2/28 [00:05<01:21,  3.15s/it]epoch 0 loss 5.66887:  11%|█         | 3/28 [00:05<00:47,  1.89s/it]epoch 0 loss 5.65778:  11%|█         | 3/28 [00:06<00:47,  1.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0074[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = 0.0012[0m
[32m  eval_precision = 0.002[0m
[32m  eval_recall = 0.0019[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.65778:  14%|█▍        | 4/28 [00:14<01:52,  4.69s/it]epoch 0 loss 5.63407:  14%|█▍        | 4/28 [00:15<01:52,  4.69s/it]epoch 0 loss 5.63407:  18%|█▊        | 5/28 [00:15<01:12,  3.15s/it]epoch 0 loss 5.60146:  18%|█▊        | 5/28 [00:15<01:12,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0374[0m
[32m  eval_f1 = 0.0029[0m
[32m  eval_mcc = 0.0201[0m
[32m  eval_precision = 0.0063[0m
[32m  eval_recall = 0.0053[0m
[32m  ********************[0m
[32m  Best f1:0.0029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.60146:  21%|██▏       | 6/28 [00:26<02:08,  5.82s/it]epoch 0 loss 5.56012:  21%|██▏       | 6/28 [00:26<02:08,  5.82s/it]epoch 0 loss 5.56012:  25%|██▌       | 7/28 [00:26<01:25,  4.06s/it]epoch 0 loss 5.50805:  25%|██▌       | 7/28 [00:27<01:25,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0652[0m
[32m  eval_f1 = 0.0044[0m
[32m  eval_mcc = 0.035[0m
[32m  eval_precision = 0.0074[0m
[32m  eval_recall = 0.0104[0m
[32m  ********************[0m
[32m  Best f1:0.0044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.50805:  29%|██▊       | 8/28 [00:34<01:47,  5.37s/it]epoch 0 loss 5.45423:  29%|██▊       | 8/28 [00:35<01:47,  5.37s/it]epoch 0 loss 5.45423:  32%|███▏      | 9/28 [00:35<01:12,  3.82s/it]epoch 0 loss 5.39324:  32%|███▏      | 9/28 [00:35<01:12,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0779[0m
[32m  eval_f1 = 0.0057[0m
[32m  eval_mcc = 0.0413[0m
[32m  eval_precision = 0.0104[0m
[32m  eval_recall = 0.0135[0m
[32m  ********************[0m
[32m  Best f1:0.0057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.39324:  36%|███▌      | 10/28 [00:43<01:31,  5.10s/it]epoch 0 loss 5.33003:  36%|███▌      | 10/28 [00:43<01:31,  5.10s/it]epoch 0 loss 5.33003:  39%|███▉      | 11/28 [00:43<01:02,  3.67s/it]epoch 0 loss 5.26086:  39%|███▉      | 11/28 [00:44<01:02,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0859[0m
[32m  eval_f1 = 0.0064[0m
[32m  eval_mcc = 0.043[0m
[32m  eval_precision = 0.0114[0m
[32m  eval_recall = 0.0148[0m
[32m  ********************[0m
[32m  Best f1:0.0064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.26086:  43%|████▎     | 12/28 [00:51<01:16,  4.78s/it]epoch 0 loss 5.19162:  43%|████▎     | 12/28 [00:51<01:16,  4.78s/it]epoch 0 loss 5.19162:  46%|████▋     | 13/28 [00:51<00:51,  3.46s/it]epoch 0 loss 5.11898:  46%|████▋     | 13/28 [00:51<00:51,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0961[0m
[32m  eval_f1 = 0.0071[0m
[32m  eval_mcc = 0.0419[0m
[32m  eval_precision = 0.0198[0m
[32m  eval_recall = 0.0151[0m
[32m  ********************[0m
[32m  Best f1:0.0071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.11898:  50%|█████     | 14/28 [00:56<00:54,  3.91s/it]epoch 0 loss 5.04258:  50%|█████     | 14/28 [00:56<00:54,  3.91s/it]epoch 0 loss 5.04258:  54%|█████▎    | 15/28 [00:56<00:37,  2.86s/it]epoch 0 loss 4.96419:  54%|█████▎    | 15/28 [00:57<00:37,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1027[0m
[32m  eval_f1 = 0.0075[0m
[32m  eval_mcc = 0.0386[0m
[32m  eval_precision = 0.0129[0m
[32m  eval_recall = 0.0136[0m
[32m  ********************[0m
[32m  Best f1:0.0075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.96419:  57%|█████▋    | 16/28 [01:02<00:45,  3.83s/it]epoch 0 loss 4.88828:  57%|█████▋    | 16/28 [01:03<00:45,  3.83s/it]epoch 0 loss 4.88828:  61%|██████    | 17/28 [01:03<00:30,  2.82s/it]epoch 0 loss 4.81604:  61%|██████    | 17/28 [01:03<00:30,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.48it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.64it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.61it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.53it/s][A
 50%|█████     | 5/10 [00:01<00:02,  2.49it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.47it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.45it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.44it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.43it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.17it/s][A100%|██████████| 10/10 [00:03<00:00,  2.68it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.108[0m
[32m  eval_f1 = 0.0076[0m
[32m  eval_mcc = 0.0393[0m
[32m  eval_precision = 0.0211[0m
[32m  eval_recall = 0.0127[0m
[32m  ********************[0m
[32m  Best f1:0.0076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.81604:  64%|██████▍   | 18/28 [01:09<00:39,  3.93s/it]epoch 0 loss 4.74649:  64%|██████▍   | 18/28 [01:10<00:39,  3.93s/it]epoch 0 loss 4.74649:  68%|██████▊   | 19/28 [01:10<00:26,  2.90s/it]epoch 0 loss 4.68422:  68%|██████▊   | 19/28 [01:10<00:26,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1343[0m
[32m  eval_f1 = 0.0106[0m
[32m  eval_mcc = 0.0669[0m
[32m  eval_precision = 0.0269[0m
[32m  eval_recall = 0.0154[0m
[32m  ********************[0m
[32m  Best f1:0.0106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.68422:  71%|███████▏  | 20/28 [01:23<00:47,  5.90s/it]epoch 0 loss 4.62232:  71%|███████▏  | 20/28 [01:23<00:47,  5.90s/it]epoch 0 loss 4.62232:  75%|███████▌  | 21/28 [01:23<00:29,  4.28s/it]epoch 0 loss 4.55593:  75%|███████▌  | 21/28 [01:24<00:29,  4.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.193[0m
[32m  eval_f1 = 0.017[0m
[32m  eval_mcc = 0.1287[0m
[32m  eval_precision = 0.0355[0m
[32m  eval_recall = 0.0214[0m
[32m  ********************[0m
[32m  Best f1:0.017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.55593:  79%|███████▊  | 22/28 [01:30<00:30,  5.10s/it]epoch 0 loss 4.49794:  79%|███████▊  | 22/28 [01:31<00:30,  5.10s/it]epoch 0 loss 4.49794:  82%|████████▏ | 23/28 [01:31<00:18,  3.72s/it]epoch 0 loss 4.44138:  82%|████████▏ | 23/28 [01:31<00:18,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2571[0m
[32m  eval_f1 = 0.0219[0m
[32m  eval_mcc = 0.1961[0m
[32m  eval_precision = 0.0401[0m
[32m  eval_recall = 0.0276[0m
[32m  ********************[0m
[32m  Best f1:0.0219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1961[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.44138:  86%|████████▌ | 24/28 [01:44<00:26,  6.55s/it]epoch 0 loss 4.38689:  86%|████████▌ | 24/28 [01:45<00:26,  6.55s/it]epoch 0 loss 4.38689:  89%|████████▉ | 25/28 [01:45<00:14,  4.73s/it]epoch 0 loss 4.32684:  89%|████████▉ | 25/28 [01:45<00:14,  4.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2638[0m
[32m  eval_f1 = 0.0378[0m
[32m  eval_mcc = 0.2233[0m
[32m  eval_precision = 0.0901[0m
[32m  eval_recall = 0.0388[0m
[32m  ********************[0m
[32m  Best f1:0.0378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.32684:  93%|█████████▎| 26/28 [01:57<00:13,  6.98s/it]epoch 0 loss 4.27129:  93%|█████████▎| 26/28 [01:57<00:13,  6.98s/it]epoch 0 loss 4.27129:  96%|█████████▋| 27/28 [01:57<00:05,  5.01s/it]epoch 0 loss 4.22284:  96%|█████████▋| 27/28 [01:57<00:05,  5.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2776[0m
[32m  eval_f1 = 0.0675[0m
[32m  eval_mcc = 0.2681[0m
[32m  eval_precision = 0.1452[0m
[32m  eval_recall = 0.0591[0m
[32m  ********************[0m
[32m  Best f1:0.0675[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2681[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.22284: 100%|██████████| 28/28 [02:11<00:00,  7.52s/it]epoch 0 loss 4.22284: 100%|██████████| 28/28 [02:11<00:00,  4.68s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.74346:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.74346:   4%|▎         | 1/28 [00:00<00:11,  2.30it/s]epoch 1 loss 2.65044:   4%|▎         | 1/28 [00:00<00:11,  2.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3576[0m
[32m  eval_f1 = 0.1056[0m
[32m  eval_mcc = 0.3566[0m
[32m  eval_precision = 0.168[0m
[32m  eval_recall = 0.0899[0m
[32m  ********************[0m
[32m  Best f1:0.1056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.65044:   7%|▋         | 2/28 [00:13<03:28,  8.03s/it]epoch 1 loss 2.59309:   7%|▋         | 2/28 [00:14<03:28,  8.03s/it]epoch 1 loss 2.59309:  11%|█         | 3/28 [00:14<01:53,  4.56s/it]epoch 1 loss 2.57592:  11%|█         | 3/28 [00:14<01:53,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4634[0m
[32m  eval_f1 = 0.1355[0m
[32m  eval_mcc = 0.447[0m
[32m  eval_precision = 0.1796[0m
[32m  eval_recall = 0.1262[0m
[32m  ********************[0m
[32m  Best f1:0.1355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.57592:  14%|█▍        | 4/28 [00:27<03:08,  7.84s/it]epoch 1 loss 2.56172:  14%|█▍        | 4/28 [00:27<03:08,  7.84s/it]epoch 1 loss 2.56172:  18%|█▊        | 5/28 [00:27<01:58,  5.17s/it]epoch 1 loss 2.5335:  18%|█▊        | 5/28 [00:27<01:58,  5.17s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5237[0m
[32m  eval_f1 = 0.1521[0m
[32m  eval_mcc = 0.4954[0m
[32m  eval_precision = 0.2103[0m
[32m  eval_recall = 0.146[0m
[32m  ********************[0m
[32m  Best f1:0.1521[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4954[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.5335:  21%|██▏       | 6/28 [00:36<02:20,  6.39s/it]epoch 1 loss 2.50392:  21%|██▏       | 6/28 [00:36<02:20,  6.39s/it]epoch 1 loss 2.50392:  25%|██▌       | 7/28 [00:36<01:33,  4.44s/it]epoch 1 loss 2.48146:  25%|██▌       | 7/28 [00:37<01:33,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5446[0m
[32m  eval_f1 = 0.1591[0m
[32m  eval_mcc = 0.5167[0m
[32m  eval_precision = 0.2028[0m
[32m  eval_recall = 0.1512[0m
[32m  ********************[0m
[32m  Best f1:0.1591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.48146:  29%|██▊       | 8/28 [00:45<01:56,  5.83s/it]epoch 1 loss 2.47565:  29%|██▊       | 8/28 [00:45<01:56,  5.83s/it]epoch 1 loss 2.47565:  32%|███▏      | 9/28 [00:45<01:18,  4.14s/it]epoch 1 loss 2.45163:  32%|███▏      | 9/28 [00:46<01:18,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5545[0m
[32m  eval_f1 = 0.164[0m
[32m  eval_mcc = 0.5294[0m
[32m  eval_precision = 0.2075[0m
[32m  eval_recall = 0.1551[0m
[32m  ********************[0m
[32m  Best f1:0.164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.45163:  36%|███▌      | 10/28 [00:58<02:01,  6.75s/it]epoch 1 loss 2.42729:  36%|███▌      | 10/28 [00:58<02:01,  6.75s/it]epoch 1 loss 2.42729:  39%|███▉      | 11/28 [00:58<01:21,  4.81s/it]epoch 1 loss 2.39508:  39%|███▉      | 11/28 [00:59<01:21,  4.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5624[0m
[32m  eval_f1 = 0.1725[0m
[32m  eval_mcc = 0.5395[0m
[32m  eval_precision = 0.2176[0m
[32m  eval_recall = 0.1625[0m
[32m  ********************[0m
[32m  Best f1:0.1725[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.39508:  43%|████▎     | 12/28 [01:11<01:56,  7.27s/it]epoch 1 loss 2.36725:  43%|████▎     | 12/28 [01:12<01:56,  7.27s/it]epoch 1 loss 2.36725:  46%|████▋     | 13/28 [01:12<01:17,  5.20s/it]epoch 1 loss 2.34948:  46%|████▋     | 13/28 [01:12<01:17,  5.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5675[0m
[32m  eval_f1 = 0.1743[0m
[32m  eval_mcc = 0.5435[0m
[32m  eval_precision = 0.2169[0m
[32m  eval_recall = 0.1656[0m
[32m  ********************[0m
[32m  Best f1:0.1743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.34948:  50%|█████     | 14/28 [01:20<01:27,  6.24s/it]epoch 1 loss 2.32494:  50%|█████     | 14/28 [01:21<01:27,  6.24s/it]epoch 1 loss 2.32494:  54%|█████▎    | 15/28 [01:21<00:58,  4.49s/it]epoch 1 loss 2.30678:  54%|█████▎    | 15/28 [01:21<00:58,  4.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5691[0m
[32m  eval_f1 = 0.1765[0m
[32m  eval_mcc = 0.5444[0m
[32m  eval_precision = 0.2278[0m
[32m  eval_recall = 0.1687[0m
[32m  ********************[0m
[32m  Best f1:0.1765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.30678:  57%|█████▋    | 16/28 [01:31<01:15,  6.30s/it]epoch 1 loss 2.28031:  57%|█████▋    | 16/28 [01:32<01:15,  6.30s/it]epoch 1 loss 2.28031:  61%|██████    | 17/28 [01:32<00:49,  4.54s/it]epoch 1 loss 2.26047:  61%|██████    | 17/28 [01:32<00:49,  4.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5774[0m
[32m  eval_f1 = 0.1819[0m
[32m  eval_mcc = 0.5544[0m
[32m  eval_precision = 0.2313[0m
[32m  eval_recall = 0.1742[0m
[32m  ********************[0m
[32m  Best f1:0.1819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26047:  64%|██████▍   | 18/28 [01:43<01:03,  6.39s/it]epoch 1 loss 2.23486:  64%|██████▍   | 18/28 [01:43<01:03,  6.39s/it]epoch 1 loss 2.23486:  68%|██████▊   | 19/28 [01:43<00:41,  4.60s/it]epoch 1 loss 2.23296:  68%|██████▊   | 19/28 [01:43<00:41,  4.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5822[0m
[32m  eval_f1 = 0.1848[0m
[32m  eval_mcc = 0.561[0m
[32m  eval_precision = 0.2442[0m
[32m  eval_recall = 0.177[0m
[32m  ********************[0m
[32m  Best f1:0.1848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23296:  71%|███████▏  | 20/28 [01:56<00:57,  7.13s/it]epoch 1 loss 2.21498:  71%|███████▏  | 20/28 [01:56<00:57,  7.13s/it]epoch 1 loss 2.21498:  75%|███████▌  | 21/28 [01:56<00:35,  5.12s/it]epoch 1 loss 2.19793:  75%|███████▌  | 21/28 [01:57<00:35,  5.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5869[0m
[32m  eval_f1 = 0.1863[0m
[32m  eval_mcc = 0.5649[0m
[32m  eval_precision = 0.2482[0m
[32m  eval_recall = 0.1787[0m
[32m  ********************[0m
[32m  Best f1:0.1863[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.19793:  79%|███████▊  | 22/28 [02:05<00:37,  6.30s/it]epoch 1 loss 2.17783:  79%|███████▊  | 22/28 [02:06<00:37,  6.30s/it]epoch 1 loss 2.17783:  82%|████████▏ | 23/28 [02:06<00:22,  4.54s/it]epoch 1 loss 2.16275:  82%|████████▏ | 23/28 [02:06<00:22,  4.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5901[0m
[32m  eval_f1 = 0.1878[0m
[32m  eval_mcc = 0.5664[0m
[32m  eval_precision = 0.2474[0m
[32m  eval_recall = 0.1804[0m
[32m  ********************[0m
[32m  Best f1:0.1878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5664[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16275:  86%|████████▌ | 24/28 [02:16<00:24,  6.15s/it]epoch 1 loss 2.14458:  86%|████████▌ | 24/28 [02:16<00:24,  6.15s/it]epoch 1 loss 2.14458:  89%|████████▉ | 25/28 [02:16<00:13,  4.43s/it]epoch 1 loss 2.12899:  89%|████████▉ | 25/28 [02:17<00:13,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5911[0m
[32m  eval_f1 = 0.1889[0m
[32m  eval_mcc = 0.5667[0m
[32m  eval_precision = 0.2554[0m
[32m  eval_recall = 0.1812[0m
[32m  ********************[0m
[32m  Best f1:0.1889[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12899:  93%|█████████▎| 26/28 [02:29<00:13,  6.92s/it]epoch 1 loss 2.11501:  93%|█████████▎| 26/28 [02:29<00:13,  6.92s/it]epoch 1 loss 2.11501:  96%|█████████▋| 27/28 [02:29<00:04,  4.97s/it]epoch 1 loss 2.10089:  96%|█████████▋| 27/28 [02:30<00:04,  4.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5945[0m
[32m  eval_f1 = 0.1945[0m
[32m  eval_mcc = 0.57[0m
[32m  eval_precision = 0.2611[0m
[32m  eval_recall = 0.1858[0m
[32m  ********************[0m
[32m  Best f1:0.1945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.57[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.10089: 100%|██████████| 28/28 [02:42<00:00,  7.37s/it]epoch 1 loss 2.10089: 100%|██████████| 28/28 [02:42<00:00,  5.82s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.50699:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.50699:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 2 loss 1.64086:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5976[0m
[32m  eval_f1 = 0.1979[0m
[32m  eval_mcc = 0.5737[0m
[32m  eval_precision = 0.2629[0m
[32m  eval_recall = 0.1894[0m
[32m  ********************[0m
[32m  Best f1:0.1979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5737[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64086:   7%|▋         | 2/28 [00:13<03:21,  7.74s/it]epoch 2 loss 1.6375:   7%|▋         | 2/28 [00:13<03:21,  7.74s/it] epoch 2 loss 1.6375:  11%|█         | 3/28 [00:13<01:50,  4.40s/it]epoch 2 loss 1.62968:  11%|█         | 3/28 [00:14<01:50,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6031[0m
[32m  eval_f1 = 0.2045[0m
[32m  eval_mcc = 0.5802[0m
[32m  eval_precision = 0.267[0m
[32m  eval_recall = 0.1953[0m
[32m  ********************[0m
[32m  Best f1:0.2045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62968:  14%|█▍        | 4/28 [00:26<03:00,  7.51s/it]epoch 2 loss 1.62348:  14%|█▍        | 4/28 [00:26<03:00,  7.51s/it]epoch 2 loss 1.62348:  18%|█▊        | 5/28 [00:26<01:54,  4.96s/it]epoch 2 loss 1.64714:  18%|█▊        | 5/28 [00:26<01:54,  4.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.606[0m
[32m  eval_f1 = 0.2266[0m
[32m  eval_mcc = 0.5846[0m
[32m  eval_precision = 0.2977[0m
[32m  eval_recall = 0.2153[0m
[32m  ********************[0m
[32m  Best f1:0.2266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5846[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64714:  21%|██▏       | 6/28 [00:38<02:43,  7.44s/it]epoch 2 loss 1.69005:  21%|██▏       | 6/28 [00:39<02:43,  7.44s/it]epoch 2 loss 1.69005:  25%|██▌       | 7/28 [00:39<01:48,  5.15s/it]epoch 2 loss 1.68391:  25%|██▌       | 7/28 [00:39<01:48,  5.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6063[0m
[32m  eval_f1 = 0.233[0m
[32m  eval_mcc = 0.5865[0m
[32m  eval_precision = 0.3146[0m
[32m  eval_recall = 0.2198[0m
[32m  ********************[0m
[32m  Best f1:0.233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5865[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.68391:  29%|██▊       | 8/28 [00:48<02:10,  6.54s/it]epoch 2 loss 1.68686:  29%|██▊       | 8/28 [00:49<02:10,  6.54s/it]epoch 2 loss 1.68686:  32%|███▏      | 9/28 [00:49<01:27,  4.63s/it]epoch 2 loss 1.67497:  32%|███▏      | 9/28 [00:49<01:27,  4.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6076[0m
[32m  eval_f1 = 0.239[0m
[32m  eval_mcc = 0.588[0m
[32m  eval_precision = 0.3343[0m
[32m  eval_recall = 0.2241[0m
[32m  ********************[0m
[32m  Best f1:0.239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.67497:  36%|███▌      | 10/28 [00:56<01:41,  5.62s/it]epoch 2 loss 1.65238:  36%|███▌      | 10/28 [00:57<01:41,  5.62s/it]epoch 2 loss 1.65238:  39%|███▉      | 11/28 [00:57<01:08,  4.03s/it]epoch 2 loss 1.65232:  39%|███▉      | 11/28 [00:57<01:08,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6105[0m
[32m  eval_f1 = 0.2444[0m
[32m  eval_mcc = 0.5892[0m
[32m  eval_precision = 0.3402[0m
[32m  eval_recall = 0.2283[0m
[32m  ********************[0m
[32m  Best f1:0.2444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.65232:  43%|████▎     | 12/28 [01:04<01:20,  5.02s/it]epoch 2 loss 1.6405:  43%|████▎     | 12/28 [01:05<01:20,  5.02s/it] epoch 2 loss 1.6405:  46%|████▋     | 13/28 [01:05<00:54,  3.63s/it]epoch 2 loss 1.63095:  46%|████▋     | 13/28 [01:05<00:54,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6105[0m
[32m  eval_f1 = 0.2489[0m
[32m  eval_mcc = 0.588[0m
[32m  eval_precision = 0.3403[0m
[32m  eval_recall = 0.2321[0m
[32m  ********************[0m
[32m  Best f1:0.2489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.63095:  50%|█████     | 14/28 [01:12<01:04,  4.64s/it]epoch 2 loss 1.63898:  50%|█████     | 14/28 [01:12<01:04,  4.64s/it]epoch 2 loss 1.63898:  54%|█████▎    | 15/28 [01:12<00:43,  3.37s/it]epoch 2 loss 1.62626:  54%|█████▎    | 15/28 [01:12<00:43,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6127[0m
[32m  eval_f1 = 0.2498[0m
[32m  eval_mcc = 0.59[0m
[32m  eval_precision = 0.3376[0m
[32m  eval_recall = 0.2336[0m
[32m  ********************[0m
[32m  Best f1:0.2498[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.59[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62626:  57%|█████▋    | 16/28 [01:21<01:00,  5.04s/it]epoch 2 loss 1.61858:  57%|█████▋    | 16/28 [01:21<01:00,  5.04s/it]epoch 2 loss 1.61858:  61%|██████    | 17/28 [01:21<00:40,  3.67s/it]epoch 2 loss 1.60739:  61%|██████    | 17/28 [01:22<00:40,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.43it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.43it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6159[0m
[32m  eval_f1 = 0.2528[0m
[32m  eval_mcc = 0.5937[0m
[32m  eval_precision = 0.3403[0m
[32m  eval_recall = 0.2359[0m
[32m  ********************[0m
[32m  Best f1:0.2528[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60739:  64%|██████▍   | 18/28 [01:33<01:00,  6.01s/it]epoch 2 loss 1.60767:  64%|██████▍   | 18/28 [01:33<01:00,  6.01s/it]epoch 2 loss 1.60767:  68%|██████▊   | 19/28 [01:33<00:39,  4.35s/it]epoch 2 loss 1.60422:  68%|██████▊   | 19/28 [01:34<00:39,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6174[0m
[32m  eval_f1 = 0.2529[0m
[32m  eval_mcc = 0.5961[0m
[32m  eval_precision = 0.3493[0m
[32m  eval_recall = 0.2365[0m
[32m  ********************[0m
[32m  Best f1:0.2529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5961[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60422:  71%|███████▏  | 20/28 [01:40<00:39,  5.00s/it]epoch 2 loss 1.59751:  71%|███████▏  | 20/28 [01:40<00:39,  5.00s/it]epoch 2 loss 1.59751:  75%|███████▌  | 21/28 [01:40<00:25,  3.65s/it]epoch 2 loss 1.59918:  75%|███████▌  | 21/28 [01:41<00:25,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6174[0m
[32m  eval_f1 = 0.2547[0m
[32m  eval_mcc = 0.5967[0m
[32m  eval_precision = 0.3474[0m
[32m  eval_recall = 0.2384[0m
[32m  ********************[0m
[32m  Best f1:0.2547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5967[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59918:  79%|███████▊  | 22/28 [01:52<00:36,  6.13s/it]epoch 2 loss 1.59647:  79%|███████▊  | 22/28 [01:53<00:36,  6.13s/it]epoch 2 loss 1.59647:  82%|████████▏ | 23/28 [01:53<00:22,  4.43s/it]epoch 2 loss 1.5901:  82%|████████▏ | 23/28 [01:53<00:22,  4.43s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6163[0m
[32m  eval_f1 = 0.2537[0m
[32m  eval_mcc = 0.596[0m
[32m  eval_precision = 0.347[0m
[32m  eval_recall = 0.2379[0m

epoch 2 loss 1.5901:  86%|████████▌ | 24/28 [01:57<00:17,  4.40s/it]epoch 2 loss 1.58688:  86%|████████▌ | 24/28 [01:57<00:17,  4.40s/it]epoch 2 loss 1.58688:  89%|████████▉ | 25/28 [01:57<00:09,  3.22s/it]epoch 2 loss 1.58125:  89%|████████▉ | 25/28 [01:58<00:09,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6194[0m
[32m  eval_f1 = 0.2581[0m
[32m  eval_mcc = 0.599[0m
[32m  eval_precision = 0.3502[0m
[32m  eval_recall = 0.2408[0m
[32m  ********************[0m
[32m  Best f1:0.2581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58125:  93%|█████████▎| 26/28 [02:10<00:12,  6.09s/it]epoch 2 loss 1.5823:  93%|█████████▎| 26/28 [02:11<00:12,  6.09s/it] epoch 2 loss 1.5823:  96%|█████████▋| 27/28 [02:11<00:04,  4.41s/it]epoch 2 loss 1.58473:  96%|█████████▋| 27/28 [02:11<00:04,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6229[0m
[32m  eval_f1 = 0.262[0m
[32m  eval_mcc = 0.6017[0m
[32m  eval_precision = 0.3767[0m
[32m  eval_recall = 0.2442[0m
[32m  ********************[0m
[32m  Best f1:0.262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58473: 100%|██████████| 28/28 [02:18<00:00,  5.18s/it]epoch 2 loss 1.58473: 100%|██████████| 28/28 [02:18<00:00,  4.94s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.3845:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.3845:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 3 loss 1.45176:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6251[0m
[32m  eval_f1 = 0.2649[0m
[32m  eval_mcc = 0.6033[0m
[32m  eval_precision = 0.3702[0m
[32m  eval_recall = 0.2474[0m
[32m  ********************[0m
[32m  Best f1:0.2649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45176:   7%|▋         | 2/28 [00:16<04:05,  9.45s/it]epoch 3 loss 1.48628:   7%|▋         | 2/28 [00:16<04:05,  9.45s/it]epoch 3 loss 1.48628:  11%|█         | 3/28 [00:16<02:13,  5.33s/it]epoch 3 loss 1.46911:  11%|█         | 3/28 [00:17<02:13,  5.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.628[0m
[32m  eval_f1 = 0.273[0m
[32m  eval_mcc = 0.606[0m
[32m  eval_precision = 0.3766[0m
[32m  eval_recall = 0.2542[0m
[32m  ********************[0m
[32m  Best f1:0.273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46911:  14%|█▍        | 4/28 [00:26<02:49,  7.07s/it]epoch 3 loss 1.43715:  14%|█▍        | 4/28 [00:26<02:49,  7.07s/it]epoch 3 loss 1.43715:  18%|█▊        | 5/28 [00:26<01:47,  4.68s/it]epoch 3 loss 1.45103:  18%|█▊        | 5/28 [00:27<01:47,  4.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6288[0m
[32m  eval_f1 = 0.2782[0m
[32m  eval_mcc = 0.607[0m
[32m  eval_precision = 0.385[0m
[32m  eval_recall = 0.2572[0m
[32m  ********************[0m
[32m  Best f1:0.2782[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45103:  21%|██▏       | 6/28 [00:38<02:36,  7.11s/it]epoch 3 loss 1.45844:  21%|██▏       | 6/28 [00:39<02:36,  7.11s/it]epoch 3 loss 1.45844:  25%|██▌       | 7/28 [00:39<01:43,  4.92s/it]epoch 3 loss 1.47722:  25%|██▌       | 7/28 [00:39<01:43,  4.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6304[0m
[32m  eval_f1 = 0.2869[0m
[32m  eval_mcc = 0.609[0m
[32m  eval_precision = 0.3985[0m
[32m  eval_recall = 0.2636[0m
[32m  ********************[0m
[32m  Best f1:0.2869[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47722:  29%|██▊       | 8/28 [00:52<02:32,  7.60s/it]epoch 3 loss 1.48193:  29%|██▊       | 8/28 [00:52<02:32,  7.60s/it]epoch 3 loss 1.48193:  32%|███▏      | 9/28 [00:52<01:41,  5.36s/it]epoch 3 loss 1.47983:  32%|███▏      | 9/28 [00:53<01:41,  5.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6322[0m
[32m  eval_f1 = 0.2902[0m
[32m  eval_mcc = 0.6114[0m
[32m  eval_precision = 0.3965[0m
[32m  eval_recall = 0.2657[0m
[32m  ********************[0m
[32m  Best f1:0.2902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47983:  36%|███▌      | 10/28 [01:04<02:11,  7.28s/it]epoch 3 loss 1.47183:  36%|███▌      | 10/28 [01:04<02:11,  7.28s/it]epoch 3 loss 1.47183:  39%|███▉      | 11/28 [01:04<01:28,  5.18s/it]epoch 3 loss 1.46842:  39%|███▉      | 11/28 [01:05<01:28,  5.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.633[0m
[32m  eval_f1 = 0.2891[0m
[32m  eval_mcc = 0.6129[0m
[32m  eval_precision = 0.3867[0m
[32m  eval_recall = 0.2654[0m
[32m  ********************[0m
[32m  Best MCC:0.6129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46842:  43%|████▎     | 12/28 [01:10<01:27,  5.48s/it]epoch 3 loss 1.47404:  43%|████▎     | 12/28 [01:11<01:27,  5.48s/it]epoch 3 loss 1.47404:  46%|████▋     | 13/28 [01:11<00:59,  3.95s/it]epoch 3 loss 1.4699:  46%|████▋     | 13/28 [01:11<00:59,  3.95s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6343[0m
[32m  eval_f1 = 0.2922[0m
[32m  eval_mcc = 0.6148[0m
[32m  eval_precision = 0.3964[0m
[32m  eval_recall = 0.2674[0m
[32m  ********************[0m
[32m  Best f1:0.2922[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4699:  50%|█████     | 14/28 [01:22<01:23,  5.96s/it]epoch 3 loss 1.46826:  50%|█████     | 14/28 [01:22<01:23,  5.96s/it]epoch 3 loss 1.46826:  54%|█████▎    | 15/28 [01:22<00:55,  4.29s/it]epoch 3 loss 1.47107:  54%|█████▎    | 15/28 [01:22<00:55,  4.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6344[0m
[32m  eval_f1 = 0.2923[0m
[32m  eval_mcc = 0.6148[0m
[32m  eval_precision = 0.3933[0m
[32m  eval_recall = 0.2683[0m
[32m  ********************[0m
[32m  Best f1:0.2923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47107:  57%|█████▋    | 16/28 [01:35<01:21,  6.83s/it]epoch 3 loss 1.47599:  57%|█████▋    | 16/28 [01:35<01:21,  6.83s/it]epoch 3 loss 1.47599:  61%|██████    | 17/28 [01:35<00:53,  4.91s/it]epoch 3 loss 1.48372:  61%|██████    | 17/28 [01:35<00:53,  4.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6344[0m
[32m  eval_f1 = 0.2925[0m
[32m  eval_mcc = 0.6144[0m
[32m  eval_precision = 0.3915[0m
[32m  eval_recall = 0.269[0m
[32m  ********************[0m
[32m  Best f1:0.2925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.48372:  64%|██████▍   | 18/28 [01:43<00:59,  5.94s/it]epoch 3 loss 1.47331:  64%|██████▍   | 18/28 [01:44<00:59,  5.94s/it]epoch 3 loss 1.47331:  68%|██████▊   | 19/28 [01:44<00:38,  4.28s/it]epoch 3 loss 1.47434:  68%|██████▊   | 19/28 [01:44<00:38,  4.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6365[0m
[32m  eval_f1 = 0.2942[0m
[32m  eval_mcc = 0.6163[0m
[32m  eval_precision = 0.3976[0m
[32m  eval_recall = 0.2714[0m
[32m  ********************[0m
[32m  Best f1:0.2942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6163[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47434:  71%|███████▏  | 20/28 [01:57<00:55,  6.98s/it]epoch 3 loss 1.46679:  71%|███████▏  | 20/28 [01:58<00:55,  6.98s/it]epoch 3 loss 1.46679:  75%|███████▌  | 21/28 [01:58<00:35,  5.01s/it]epoch 3 loss 1.46505:  75%|███████▌  | 21/28 [01:58<00:35,  5.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.2948[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.3958[0m
[32m  eval_recall = 0.2728[0m
[32m  ********************[0m
[32m  Best f1:0.2948[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46505:  79%|███████▊  | 22/28 [02:10<00:44,  7.38s/it]epoch 3 loss 1.4665:  79%|███████▊  | 22/28 [02:11<00:44,  7.38s/it] epoch 3 loss 1.4665:  82%|████████▏ | 23/28 [02:11<00:26,  5.29s/it]epoch 3 loss 1.46826:  82%|████████▏ | 23/28 [02:11<00:26,  5.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6403[0m
[32m  eval_f1 = 0.2961[0m
[32m  eval_mcc = 0.6205[0m
[32m  eval_precision = 0.4011[0m
[32m  eval_recall = 0.2736[0m
[32m  ********************[0m
[32m  Best f1:0.2961[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46826:  86%|████████▌ | 24/28 [02:22<00:28,  7.05s/it]epoch 3 loss 1.46792:  86%|████████▌ | 24/28 [02:22<00:28,  7.05s/it]epoch 3 loss 1.46792:  89%|████████▉ | 25/28 [02:22<00:15,  5.06s/it]epoch 3 loss 1.46647:  89%|████████▉ | 25/28 [02:23<00:15,  5.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6407[0m
[32m  eval_f1 = 0.2963[0m
[32m  eval_mcc = 0.6211[0m
[32m  eval_precision = 0.3932[0m
[32m  eval_recall = 0.2737[0m
[32m  ********************[0m
[32m  Best f1:0.2963[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46647:  93%|█████████▎| 26/28 [02:33<00:13,  6.60s/it]epoch 3 loss 1.45958:  93%|█████████▎| 26/28 [02:33<00:13,  6.60s/it]epoch 3 loss 1.45958:  96%|█████████▋| 27/28 [02:33<00:04,  4.75s/it]epoch 3 loss 1.45164:  96%|█████████▋| 27/28 [02:33<00:04,  4.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6408[0m
[32m  eval_f1 = 0.2981[0m
[32m  eval_mcc = 0.6213[0m
[32m  eval_precision = 0.4024[0m
[32m  eval_recall = 0.2746[0m
[32m  ********************[0m
[32m  Best f1:0.2981[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45164: 100%|██████████| 28/28 [02:41<00:00,  5.72s/it]epoch 3 loss 1.45164: 100%|██████████| 28/28 [02:41<00:00,  5.77s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.37335:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.37335:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s]epoch 4 loss 1.42597:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6405[0m
[32m  eval_f1 = 0.2983[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.3951[0m
[32m  eval_recall = 0.2739[0m
[32m  ********************[0m
[32m  Best f1:0.2983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.42597:   7%|▋         | 2/28 [00:06<01:35,  3.69s/it]epoch 4 loss 1.44383:   7%|▋         | 2/28 [00:06<01:35,  3.69s/it]epoch 4 loss 1.44383:  11%|█         | 3/28 [00:06<00:54,  2.20s/it]epoch 4 loss 1.46729:  11%|█         | 3/28 [00:07<00:54,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6405[0m
[32m  eval_f1 = 0.2991[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.3968[0m
[32m  eval_recall = 0.2744[0m
[32m  ********************[0m
[32m  Best f1:0.2991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.46729:  14%|█▍        | 4/28 [00:12<01:29,  3.73s/it]epoch 4 loss 1.42517:  14%|█▍        | 4/28 [00:13<01:29,  3.73s/it]epoch 4 loss 1.42517:  18%|█▊        | 5/28 [00:13<00:58,  2.54s/it]epoch 4 loss 1.40391:  18%|█▊        | 5/28 [00:13<00:58,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.64[0m
[32m  eval_f1 = 0.2991[0m
[32m  eval_mcc = 0.6207[0m
[32m  eval_precision = 0.3976[0m
[32m  eval_recall = 0.2742[0m

epoch 4 loss 1.40391:  21%|██▏       | 6/28 [00:17<01:05,  2.98s/it]epoch 4 loss 1.41181:  21%|██▏       | 6/28 [00:17<01:05,  2.98s/it]epoch 4 loss 1.41181:  25%|██▌       | 7/28 [00:17<00:44,  2.14s/it]epoch 4 loss 1.41871:  25%|██▌       | 7/28 [00:17<00:44,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6402[0m
[32m  eval_f1 = 0.3[0m
[32m  eval_mcc = 0.6208[0m
[32m  eval_precision = 0.4059[0m
[32m  eval_recall = 0.2747[0m
[32m  ********************[0m
[32m  Best f1:0.3[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.41871:  29%|██▊       | 8/28 [00:23<01:08,  3.40s/it]epoch 4 loss 1.41018:  29%|██▊       | 8/28 [00:24<01:08,  3.40s/it]epoch 4 loss 1.41018:  32%|███▏      | 9/28 [00:24<00:47,  2.48s/it]epoch 4 loss 1.4062:  32%|███▏      | 9/28 [00:24<00:47,  2.48s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6395[0m
[32m  eval_f1 = 0.3003[0m
[32m  eval_mcc = 0.6199[0m
[32m  eval_precision = 0.4066[0m
[32m  eval_recall = 0.2751[0m
[32m  ********************[0m
[32m  Best f1:0.3003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.4062:  36%|███▌      | 10/28 [00:30<01:05,  3.67s/it]epoch 4 loss 1.40059:  36%|███▌      | 10/28 [00:30<01:05,  3.67s/it]epoch 4 loss 1.40059:  39%|███▉      | 11/28 [00:30<00:45,  2.67s/it]epoch 4 loss 1.41187:  39%|███▉      | 11/28 [00:31<00:45,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6397[0m
[32m  eval_f1 = 0.3012[0m
[32m  eval_mcc = 0.6199[0m
[32m  eval_precision = 0.4154[0m
[32m  eval_recall = 0.2759[0m
[32m  ********************[0m
[32m  Best f1:0.3012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.41187:  43%|████▎     | 12/28 [00:36<00:55,  3.47s/it]epoch 4 loss 1.415:  43%|████▎     | 12/28 [00:36<00:55,  3.47s/it]  epoch 4 loss 1.415:  46%|████▋     | 13/28 [00:36<00:38,  2.54s/it]epoch 4 loss 1.41296:  46%|████▋     | 13/28 [00:36<00:38,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6397[0m
[32m  eval_f1 = 0.3011[0m
[32m  eval_mcc = 0.6198[0m
[32m  eval_precision = 0.415[0m
[32m  eval_recall = 0.2758[0m

epoch 4 loss 1.41296:  50%|█████     | 14/28 [00:40<00:40,  2.92s/it]epoch 4 loss 1.41761:  50%|█████     | 14/28 [00:40<00:40,  2.92s/it]epoch 4 loss 1.41761:  54%|█████▎    | 15/28 [00:40<00:28,  2.16s/it]epoch 4 loss 1.41901:  54%|█████▎    | 15/28 [00:41<00:28,  2.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.64[0m
[32m  eval_f1 = 0.3016[0m
[32m  eval_mcc = 0.6199[0m
[32m  eval_precision = 0.4149[0m
[32m  eval_recall = 0.2765[0m
[32m  ********************[0m
[32m  Best f1:0.3016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.41901:  57%|█████▋    | 16/28 [00:45<00:36,  3.07s/it]epoch 4 loss 1.4144:  57%|█████▋    | 16/28 [00:46<00:36,  3.07s/it] epoch 4 loss 1.4144:  61%|██████    | 17/28 [00:46<00:24,  2.27s/it]epoch 4 loss 1.41712:  61%|██████    | 17/28 [00:46<00:24,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.70it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.66it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.63it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.58it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.57it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.53it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.27it/s][A100%|██████████| 10/10 [00:03<00:00,  2.81it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6406[0m
[32m  eval_f1 = 0.3019[0m
[32m  eval_mcc = 0.6204[0m
[32m  eval_precision = 0.4139[0m
[32m  eval_recall = 0.2769[0m
[32m  ********************[0m
[32m  Best f1:0.3019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.41712:  64%|██████▍   | 18/28 [00:54<00:40,  4.01s/it]epoch 4 loss 1.41611:  64%|██████▍   | 18/28 [00:54<00:40,  4.01s/it]epoch 4 loss 1.41611:  68%|██████▊   | 19/28 [00:54<00:26,  2.95s/it]epoch 4 loss 1.41704:  68%|██████▊   | 19/28 [00:55<00:26,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6411[0m
[32m  eval_f1 = 0.3018[0m
[32m  eval_mcc = 0.621[0m
[32m  eval_precision = 0.4126[0m
[32m  eval_recall = 0.2772[0m

epoch 4 loss 1.41704:  71%|███████▏  | 20/28 [00:59<00:26,  3.37s/it]epoch 4 loss 1.41622:  71%|███████▏  | 20/28 [00:59<00:26,  3.37s/it]epoch 4 loss 1.41622:  75%|███████▌  | 21/28 [00:59<00:17,  2.49s/it]epoch 4 loss 1.4196:  75%|███████▌  | 21/28 [01:00<00:17,  2.49s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6414[0m
[32m  eval_f1 = 0.3017[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.4121[0m
[32m  eval_recall = 0.2774[0m

epoch 4 loss 1.4196:  79%|███████▊  | 22/28 [01:04<00:18,  3.05s/it]epoch 4 loss 1.42134:  79%|███████▊  | 22/28 [01:04<00:18,  3.05s/it]epoch 4 loss 1.42134:  82%|████████▏ | 23/28 [01:04<00:11,  2.28s/it]epoch 4 loss 1.41674:  82%|████████▏ | 23/28 [01:04<00:11,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.39it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.40it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.40it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.40it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.40it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.40it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6413[0m
[32m  eval_f1 = 0.3014[0m
[32m  eval_mcc = 0.621[0m
[32m  eval_precision = 0.4115[0m
[32m  eval_recall = 0.2773[0m

epoch 4 loss 1.41674:  86%|████████▌ | 24/28 [01:08<00:11,  2.90s/it]epoch 4 loss 1.41299:  86%|████████▌ | 24/28 [01:09<00:11,  2.90s/it]epoch 4 loss 1.41299:  89%|████████▉ | 25/28 [01:09<00:06,  2.17s/it]epoch 4 loss 1.40762:  89%|████████▉ | 25/28 [01:09<00:06,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6414[0m
[32m  eval_f1 = 0.3016[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.4121[0m
[32m  eval_recall = 0.2775[0m

epoch 4 loss 1.40762:  93%|█████████▎| 26/28 [01:13<00:05,  2.83s/it]epoch 4 loss 1.4132:  93%|█████████▎| 26/28 [01:14<00:05,  2.83s/it] epoch 4 loss 1.4132:  96%|█████████▋| 27/28 [01:14<00:02,  2.12s/it]epoch 4 loss 1.41142:  96%|█████████▋| 27/28 [01:14<00:02,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.40it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.40it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.40it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.40it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6414[0m
[32m  eval_f1 = 0.3017[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.4209[0m
[32m  eval_recall = 0.2776[0m

epoch 4 loss 1.41142: 100%|██████████| 28/28 [01:18<00:00,  2.73s/it]epoch 4 loss 1.41142: 100%|██████████| 28/28 [01:18<00:00,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.41it/s] 20%|██        | 2/10 [00:00<00:03,  2.41it/s] 30%|███       | 3/10 [00:01<00:02,  2.40it/s] 40%|████      | 4/10 [00:01<00:02,  2.40it/s] 50%|█████     | 5/10 [00:02<00:02,  2.40it/s] 60%|██████    | 6/10 [00:02<00:01,  2.41it/s] 70%|███████   | 7/10 [00:02<00:01,  2.41it/s] 80%|████████  | 8/10 [00:03<00:00,  2.39it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.39it/s]100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6406[0m
[32m  eval_f1 = 0.3019[0m
[32m  eval_mcc = 0.6204[0m
[32m  eval_precision = 0.4139[0m
[32m  eval_recall = 0.2769[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:04,  2.20it/s] 20%|██        | 2/10 [00:00<00:03,  2.32it/s] 30%|███       | 3/10 [00:01<00:02,  2.36it/s] 40%|████      | 4/10 [00:01<00:02,  2.38it/s] 50%|█████     | 5/10 [00:02<00:02,  2.39it/s] 60%|██████    | 6/10 [00:02<00:01,  2.39it/s] 70%|███████   | 7/10 [00:02<00:01,  2.40it/s] 80%|████████  | 8/10 [00:03<00:00,  2.40it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.39it/s]100%|██████████| 10/10 [00:03<00:00,  3.06it/s]100%|██████████| 10/10 [00:03<00:00,  2.56it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6237[0m
[32m  eval_f1 = 0.2418[0m
[32m  eval_mcc = 0.6045[0m
[32m  eval_precision = 0.3101[0m
[32m  eval_recall = 0.2254[0m

