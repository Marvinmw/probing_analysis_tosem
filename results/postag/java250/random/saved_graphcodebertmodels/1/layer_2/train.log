[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=2, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.66932:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.66932:   4%|▎         | 1/28 [00:00<00:21,  1.28it/s]epoch 0 loss 5.6696:   4%|▎         | 1/28 [00:01<00:21,  1.28it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0017[0m
[32m  eval_f1 = 0.0005[0m
[32m  eval_mcc = -0.0005[0m
[32m  eval_precision = 0.0054[0m
[32m  eval_recall = 0.0023[0m
[32m  ********************[0m
[32m  Best f1:0.0005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.6696:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 0 loss 5.65856:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 0 loss 5.65856:  11%|█         | 3/28 [00:05<00:47,  1.88s/it]epoch 0 loss 5.64532:  11%|█         | 3/28 [00:06<00:47,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.004[0m
[32m  eval_f1 = 0.0008[0m
[32m  eval_mcc = -0.0003[0m
[32m  eval_precision = 0.0047[0m
[32m  eval_recall = 0.0026[0m
[32m  ********************[0m
[32m  Best f1:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.64532:  14%|█▍        | 4/28 [00:11<01:15,  3.14s/it]epoch 0 loss 5.62571:  14%|█▍        | 4/28 [00:11<01:15,  3.14s/it]epoch 0 loss 5.62571:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it]epoch 0 loss 5.60011:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0086[0m
[32m  eval_f1 = 0.002[0m
[32m  eval_mcc = -0.0029[0m
[32m  eval_precision = 0.0112[0m
[32m  eval_recall = 0.0038[0m
[32m  ********************[0m
[32m  Best f1:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.60011:  21%|██▏       | 6/28 [00:16<01:09,  3.14s/it]epoch 0 loss 5.5598:  21%|██▏       | 6/28 [00:16<01:09,  3.14s/it] epoch 0 loss 5.5598:  25%|██▌       | 7/28 [00:16<00:47,  2.24s/it]epoch 0 loss 5.51904:  25%|██▌       | 7/28 [00:17<00:47,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0241[0m
[32m  eval_f1 = 0.0036[0m
[32m  eval_mcc = -0.0039[0m
[32m  eval_precision = 0.0074[0m
[32m  eval_recall = 0.0053[0m
[32m  ********************[0m
[32m  Best f1:0.0036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.51904:  29%|██▊       | 8/28 [00:21<01:02,  3.14s/it]epoch 0 loss 5.47023:  29%|██▊       | 8/28 [00:22<01:02,  3.14s/it]epoch 0 loss 5.47023:  32%|███▏      | 9/28 [00:22<00:43,  2.28s/it]epoch 0 loss 5.41627:  32%|███▏      | 9/28 [00:22<00:43,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0551[0m
[32m  eval_f1 = 0.0114[0m
[32m  eval_mcc = 0.011[0m
[32m  eval_precision = 0.0145[0m
[32m  eval_recall = 0.0129[0m
[32m  ********************[0m
[32m  Best f1:0.0114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.41627:  36%|███▌      | 10/28 [00:28<01:00,  3.35s/it]epoch 0 loss 5.35945:  36%|███▌      | 10/28 [00:28<01:00,  3.35s/it]epoch 0 loss 5.35945:  39%|███▉      | 11/28 [00:28<00:41,  2.45s/it]epoch 0 loss 5.29174:  39%|███▉      | 11/28 [00:28<00:41,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0891[0m
[32m  eval_f1 = 0.02[0m
[32m  eval_mcc = 0.0383[0m
[32m  eval_precision = 0.0275[0m
[32m  eval_recall = 0.0238[0m
[32m  ********************[0m
[32m  Best f1:0.02[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.29174:  43%|████▎     | 12/28 [00:35<01:01,  3.86s/it]epoch 0 loss 5.22515:  43%|████▎     | 12/28 [00:35<01:01,  3.86s/it]epoch 0 loss 5.22515:  46%|████▋     | 13/28 [00:35<00:42,  2.82s/it]epoch 0 loss 5.15149:  46%|████▋     | 13/28 [00:36<00:42,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1214[0m
[32m  eval_f1 = 0.025[0m
[32m  eval_mcc = 0.0669[0m
[32m  eval_precision = 0.0416[0m
[32m  eval_recall = 0.0276[0m
[32m  ********************[0m
[32m  Best f1:0.025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15149:  50%|█████     | 14/28 [00:42<00:55,  3.94s/it]epoch 0 loss 5.07747:  50%|█████     | 14/28 [00:42<00:55,  3.94s/it]epoch 0 loss 5.07747:  54%|█████▎    | 15/28 [00:42<00:37,  2.88s/it]epoch 0 loss 4.99771:  54%|█████▎    | 15/28 [00:43<00:37,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1692[0m
[32m  eval_f1 = 0.0333[0m
[32m  eval_mcc = 0.113[0m
[32m  eval_precision = 0.0684[0m
[32m  eval_recall = 0.0337[0m
[32m  ********************[0m
[32m  Best f1:0.0333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.99771:  57%|█████▋    | 16/28 [00:51<00:56,  4.73s/it]epoch 0 loss 4.91825:  57%|█████▋    | 16/28 [00:52<00:56,  4.73s/it]epoch 0 loss 4.91825:  61%|██████    | 17/28 [00:52<00:37,  3.44s/it]epoch 0 loss 4.84122:  61%|██████    | 17/28 [00:52<00:37,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2406[0m
[32m  eval_f1 = 0.0465[0m
[32m  eval_mcc = 0.1865[0m
[32m  eval_precision = 0.084[0m
[32m  eval_recall = 0.0457[0m
[32m  ********************[0m
[32m  Best f1:0.0465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1865[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.84122:  64%|██████▍   | 18/28 [00:58<00:43,  4.38s/it]epoch 0 loss 4.76357:  64%|██████▍   | 18/28 [00:59<00:43,  4.38s/it]epoch 0 loss 4.76357:  68%|██████▊   | 19/28 [00:59<00:28,  3.19s/it]epoch 0 loss 4.6924:  68%|██████▊   | 19/28 [00:59<00:28,  3.19s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3008[0m
[32m  eval_f1 = 0.0549[0m
[32m  eval_mcc = 0.25[0m
[32m  eval_precision = 0.0946[0m
[32m  eval_recall = 0.0534[0m
[32m  ********************[0m
[32m  Best f1:0.0549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.25[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.6924:  71%|███████▏  | 20/28 [01:07<00:37,  4.69s/it]epoch 0 loss 4.61904:  71%|███████▏  | 20/28 [01:07<00:37,  4.69s/it]epoch 0 loss 4.61904:  75%|███████▌  | 21/28 [01:07<00:23,  3.40s/it]epoch 0 loss 4.54288:  75%|███████▌  | 21/28 [01:08<00:23,  3.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3546[0m
[32m  eval_f1 = 0.0743[0m
[32m  eval_mcc = 0.3074[0m
[32m  eval_precision = 0.128[0m
[32m  eval_recall = 0.0695[0m
[32m  ********************[0m
[32m  Best f1:0.0743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.54288:  79%|███████▊  | 22/28 [01:13<00:25,  4.17s/it]epoch 0 loss 4.47342:  79%|███████▊  | 22/28 [01:14<00:25,  4.17s/it]epoch 0 loss 4.47342:  82%|████████▏ | 23/28 [01:14<00:15,  3.05s/it]epoch 0 loss 4.40515:  82%|████████▏ | 23/28 [01:14<00:15,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4063[0m
[32m  eval_f1 = 0.0928[0m
[32m  eval_mcc = 0.3642[0m
[32m  eval_precision = 0.1385[0m
[32m  eval_recall = 0.0854[0m
[32m  ********************[0m
[32m  Best f1:0.0928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.40515:  86%|████████▌ | 24/28 [01:23<00:19,  4.99s/it]epoch 0 loss 4.33818:  86%|████████▌ | 24/28 [01:24<00:19,  4.99s/it]epoch 0 loss 4.33818:  89%|████████▉ | 25/28 [01:24<00:10,  3.62s/it]epoch 0 loss 4.26554:  89%|████████▉ | 25/28 [01:24<00:10,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4572[0m
[32m  eval_f1 = 0.117[0m
[32m  eval_mcc = 0.4216[0m
[32m  eval_precision = 0.1691[0m
[32m  eval_recall = 0.1059[0m
[32m  ********************[0m
[32m  Best f1:0.117[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.26554:  93%|█████████▎| 26/28 [01:33<00:10,  5.20s/it]epoch 0 loss 4.19817:  93%|█████████▎| 26/28 [01:33<00:10,  5.20s/it]epoch 0 loss 4.19817:  96%|█████████▋| 27/28 [01:33<00:03,  3.77s/it]epoch 0 loss 4.13771:  96%|█████████▋| 27/28 [01:33<00:03,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.53it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.67it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.486[0m
[32m  eval_f1 = 0.1306[0m
[32m  eval_mcc = 0.4545[0m
[32m  eval_precision = 0.1718[0m
[32m  eval_recall = 0.1198[0m
[32m  ********************[0m
[32m  Best f1:0.1306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.13771: 100%|██████████| 28/28 [01:45<00:00,  6.12s/it]epoch 0 loss 4.13771: 100%|██████████| 28/28 [01:45<00:00,  3.76s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.3014:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.3014:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.20087:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.52[0m
[32m  eval_f1 = 0.1431[0m
[32m  eval_mcc = 0.4916[0m
[32m  eval_precision = 0.1761[0m
[32m  eval_recall = 0.1383[0m
[32m  ********************[0m
[32m  Best f1:0.1431[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20087:   7%|▋         | 2/28 [00:09<02:18,  5.34s/it]epoch 1 loss 2.13824:   7%|▋         | 2/28 [00:09<02:18,  5.34s/it]epoch 1 loss 2.13824:  11%|█         | 3/28 [00:09<01:17,  3.10s/it]epoch 1 loss 2.11545:  11%|█         | 3/28 [00:10<01:17,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5372[0m
[32m  eval_f1 = 0.1499[0m
[32m  eval_mcc = 0.5101[0m
[32m  eval_precision = 0.1946[0m
[32m  eval_recall = 0.1473[0m
[32m  ********************[0m
[32m  Best f1:0.1499[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11545:  14%|█▍        | 4/28 [00:19<02:17,  5.74s/it]epoch 1 loss 2.10183:  14%|█▍        | 4/28 [00:19<02:17,  5.74s/it]epoch 1 loss 2.10183:  18%|█▊        | 5/28 [00:19<01:27,  3.82s/it]epoch 1 loss 2.07554:  18%|█▊        | 5/28 [00:20<01:27,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.563[0m
[32m  eval_f1 = 0.1715[0m
[32m  eval_mcc = 0.5376[0m
[32m  eval_precision = 0.2239[0m
[32m  eval_recall = 0.1652[0m
[32m  ********************[0m
[32m  Best f1:0.1715[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07554:  21%|██▏       | 6/28 [00:28<02:01,  5.52s/it]epoch 1 loss 2.04967:  21%|██▏       | 6/28 [00:29<02:01,  5.52s/it]epoch 1 loss 2.04967:  25%|██▌       | 7/28 [00:29<01:20,  3.85s/it]epoch 1 loss 2.03142:  25%|██▌       | 7/28 [00:29<01:20,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.572[0m
[32m  eval_f1 = 0.1841[0m
[32m  eval_mcc = 0.547[0m
[32m  eval_precision = 0.2268[0m
[32m  eval_recall = 0.178[0m
[32m  ********************[0m
[32m  Best f1:0.1841[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03142:  29%|██▊       | 8/28 [00:38<01:49,  5.48s/it]epoch 1 loss 2.0281:  29%|██▊       | 8/28 [00:38<01:49,  5.48s/it] epoch 1 loss 2.0281:  32%|███▏      | 9/28 [00:38<01:14,  3.90s/it]epoch 1 loss 2.00859:  32%|███▏      | 9/28 [00:38<01:14,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5824[0m
[32m  eval_f1 = 0.1898[0m
[32m  eval_mcc = 0.5583[0m
[32m  eval_precision = 0.2645[0m
[32m  eval_recall = 0.1821[0m
[32m  ********************[0m
[32m  Best f1:0.1898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00859:  36%|███▌      | 10/28 [00:46<01:32,  5.14s/it]epoch 1 loss 1.98776:  36%|███▌      | 10/28 [00:46<01:32,  5.14s/it]epoch 1 loss 1.98776:  39%|███▉      | 11/28 [00:46<01:02,  3.70s/it]epoch 1 loss 1.96073:  39%|███▉      | 11/28 [00:47<01:02,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5912[0m
[32m  eval_f1 = 0.2019[0m
[32m  eval_mcc = 0.5685[0m
[32m  eval_precision = 0.3011[0m
[32m  eval_recall = 0.1892[0m
[32m  ********************[0m
[32m  Best f1:0.2019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96073:  43%|████▎     | 12/28 [00:55<01:24,  5.29s/it]epoch 1 loss 1.93621:  43%|████▎     | 12/28 [00:56<01:24,  5.29s/it]epoch 1 loss 1.93621:  46%|████▋     | 13/28 [00:56<00:57,  3.81s/it]epoch 1 loss 1.92269:  46%|████▋     | 13/28 [00:56<00:57,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5967[0m
[32m  eval_f1 = 0.2166[0m
[32m  eval_mcc = 0.5746[0m
[32m  eval_precision = 0.3155[0m
[32m  eval_recall = 0.2[0m
[32m  ********************[0m
[32m  Best f1:0.2166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92269:  50%|█████     | 14/28 [01:04<01:11,  5.14s/it]epoch 1 loss 1.90351:  50%|█████     | 14/28 [01:04<01:11,  5.14s/it]epoch 1 loss 1.90351:  54%|█████▎    | 15/28 [01:04<00:48,  3.72s/it]epoch 1 loss 1.89042:  54%|█████▎    | 15/28 [01:05<00:48,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6024[0m
[32m  eval_f1 = 0.2404[0m
[32m  eval_mcc = 0.5813[0m
[32m  eval_precision = 0.3542[0m
[32m  eval_recall = 0.2226[0m
[32m  ********************[0m
[32m  Best f1:0.2404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5813[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89042:  57%|█████▋    | 16/28 [01:13<01:04,  5.34s/it]epoch 1 loss 1.86941:  57%|█████▋    | 16/28 [01:14<01:04,  5.34s/it]epoch 1 loss 1.86941:  61%|██████    | 17/28 [01:14<00:42,  3.86s/it]epoch 1 loss 1.85056:  61%|██████    | 17/28 [01:14<00:42,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6112[0m
[32m  eval_f1 = 0.2484[0m
[32m  eval_mcc = 0.5916[0m
[32m  eval_precision = 0.3586[0m
[32m  eval_recall = 0.2293[0m
[32m  ********************[0m
[32m  Best f1:0.2484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.85056:  64%|██████▍   | 18/28 [01:23<00:54,  5.50s/it]epoch 1 loss 1.83023:  64%|██████▍   | 18/28 [01:24<00:54,  5.50s/it]epoch 1 loss 1.83023:  68%|██████▊   | 19/28 [01:24<00:35,  3.97s/it]epoch 1 loss 1.83099:  68%|██████▊   | 19/28 [01:24<00:35,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6144[0m
[32m  eval_f1 = 0.262[0m
[32m  eval_mcc = 0.5956[0m
[32m  eval_precision = 0.3656[0m
[32m  eval_recall = 0.2417[0m
[32m  ********************[0m
[32m  Best f1:0.262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5956[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83099:  71%|███████▏  | 20/28 [01:34<00:47,  5.89s/it]epoch 1 loss 1.81771:  71%|███████▏  | 20/28 [01:34<00:47,  5.89s/it]epoch 1 loss 1.81771:  75%|███████▌  | 21/28 [01:34<00:29,  4.25s/it]epoch 1 loss 1.8057:  75%|███████▌  | 21/28 [01:35<00:29,  4.25s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.621[0m
[32m  eval_f1 = 0.2672[0m
[32m  eval_mcc = 0.6015[0m
[32m  eval_precision = 0.3604[0m
[32m  eval_recall = 0.2477[0m
[32m  ********************[0m
[32m  Best f1:0.2672[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8057:  79%|███████▊  | 22/28 [01:46<00:39,  6.61s/it]epoch 1 loss 1.78905:  79%|███████▊  | 22/28 [01:47<00:39,  6.61s/it]epoch 1 loss 1.78905:  82%|████████▏ | 23/28 [01:47<00:23,  4.75s/it]epoch 1 loss 1.77675:  82%|████████▏ | 23/28 [01:47<00:23,  4.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6267[0m
[32m  eval_f1 = 0.2745[0m
[32m  eval_mcc = 0.6056[0m
[32m  eval_precision = 0.3552[0m
[32m  eval_recall = 0.2563[0m
[32m  ********************[0m
[32m  Best f1:0.2745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77675:  86%|████████▌ | 24/28 [01:56<00:24,  6.11s/it]epoch 1 loss 1.76157:  86%|████████▌ | 24/28 [01:57<00:24,  6.11s/it]epoch 1 loss 1.76157:  89%|████████▉ | 25/28 [01:57<00:13,  4.40s/it]epoch 1 loss 1.74985:  89%|████████▉ | 25/28 [01:57<00:13,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6298[0m
[32m  eval_f1 = 0.283[0m
[32m  eval_mcc = 0.6082[0m
[32m  eval_precision = 0.3755[0m
[32m  eval_recall = 0.2637[0m
[32m  ********************[0m
[32m  Best f1:0.283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74985:  93%|█████████▎| 26/28 [02:07<00:12,  6.33s/it]epoch 1 loss 1.73813:  93%|█████████▎| 26/28 [02:08<00:12,  6.33s/it]epoch 1 loss 1.73813:  96%|█████████▋| 27/28 [02:08<00:04,  4.56s/it]epoch 1 loss 1.72692:  96%|█████████▋| 27/28 [02:08<00:04,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.80it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6332[0m
[32m  eval_f1 = 0.2879[0m
[32m  eval_mcc = 0.6116[0m
[32m  eval_precision = 0.3855[0m
[32m  eval_recall = 0.2687[0m
[32m  ********************[0m
[32m  Best f1:0.2879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72692: 100%|██████████| 28/28 [02:17<00:00,  5.95s/it]epoch 1 loss 1.72692: 100%|██████████| 28/28 [02:17<00:00,  4.91s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.24773:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.24773:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 2 loss 1.36473:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6353[0m
[32m  eval_f1 = 0.2903[0m
[32m  eval_mcc = 0.614[0m
[32m  eval_precision = 0.3822[0m
[32m  eval_recall = 0.2711[0m
[32m  ********************[0m
[32m  Best f1:0.2903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36473:   7%|▋         | 2/28 [00:10<02:34,  5.95s/it]epoch 2 loss 1.36348:   7%|▋         | 2/28 [00:10<02:34,  5.95s/it]epoch 2 loss 1.36348:  11%|█         | 3/28 [00:10<01:25,  3.42s/it]epoch 2 loss 1.35833:  11%|█         | 3/28 [00:11<01:25,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.638[0m
[32m  eval_f1 = 0.3012[0m
[32m  eval_mcc = 0.617[0m
[32m  eval_precision = 0.3985[0m
[32m  eval_recall = 0.2785[0m
[32m  ********************[0m
[32m  Best f1:0.3012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35833:  14%|█▍        | 4/28 [00:20<02:25,  6.08s/it]epoch 2 loss 1.35447:  14%|█▍        | 4/28 [00:21<02:25,  6.08s/it]epoch 2 loss 1.35447:  18%|█▊        | 5/28 [00:21<01:32,  4.04s/it]epoch 2 loss 1.3722:  18%|█▊        | 5/28 [00:21<01:32,  4.04s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6429[0m
[32m  eval_f1 = 0.3041[0m
[32m  eval_mcc = 0.6226[0m
[32m  eval_precision = 0.4056[0m
[32m  eval_recall = 0.2801[0m
[32m  ********************[0m
[32m  Best f1:0.3041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3722:  21%|██▏       | 6/28 [00:29<02:03,  5.60s/it]epoch 2 loss 1.41474:  21%|██▏       | 6/28 [00:30<02:03,  5.60s/it]epoch 2 loss 1.41474:  25%|██▌       | 7/28 [00:30<01:22,  3.91s/it]epoch 2 loss 1.40958:  25%|██▌       | 7/28 [00:30<01:22,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6443[0m
[32m  eval_f1 = 0.3092[0m
[32m  eval_mcc = 0.625[0m
[32m  eval_precision = 0.4077[0m
[32m  eval_recall = 0.2843[0m
[32m  ********************[0m
[32m  Best f1:0.3092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40958:  29%|██▊       | 8/28 [00:37<01:39,  4.96s/it]epoch 2 loss 1.41146:  29%|██▊       | 8/28 [00:37<01:39,  4.96s/it]epoch 2 loss 1.41146:  32%|███▏      | 9/28 [00:37<01:07,  3.54s/it]epoch 2 loss 1.40071:  32%|███▏      | 9/28 [00:38<01:07,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6453[0m
[32m  eval_f1 = 0.317[0m
[32m  eval_mcc = 0.6268[0m
[32m  eval_precision = 0.4105[0m
[32m  eval_recall = 0.292[0m
[32m  ********************[0m
[32m  Best f1:0.317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40071:  36%|███▌      | 10/28 [00:46<01:33,  5.19s/it]epoch 2 loss 1.3802:  36%|███▌      | 10/28 [00:47<01:33,  5.19s/it] epoch 2 loss 1.3802:  39%|███▉      | 11/28 [00:47<01:03,  3.73s/it]epoch 2 loss 1.37987:  39%|███▉      | 11/28 [00:47<01:03,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6493[0m
[32m  eval_f1 = 0.3196[0m
[32m  eval_mcc = 0.6307[0m
[32m  eval_precision = 0.4087[0m
[32m  eval_recall = 0.2962[0m
[32m  ********************[0m
[32m  Best f1:0.3196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6307[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37987:  43%|████▎     | 12/28 [00:55<01:22,  5.16s/it]epoch 2 loss 1.37108:  43%|████▎     | 12/28 [00:56<01:22,  5.16s/it]epoch 2 loss 1.37108:  46%|████▋     | 13/28 [00:56<00:55,  3.73s/it]epoch 2 loss 1.36236:  46%|████▋     | 13/28 [00:56<00:55,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6522[0m
[32m  eval_f1 = 0.322[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.408[0m
[32m  eval_recall = 0.3001[0m
[32m  ********************[0m
[32m  Best f1:0.322[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36236:  50%|█████     | 14/28 [01:04<01:12,  5.19s/it]epoch 2 loss 1.37154:  50%|█████     | 14/28 [01:05<01:12,  5.19s/it]epoch 2 loss 1.37154:  54%|█████▎    | 15/28 [01:05<00:48,  3.75s/it]epoch 2 loss 1.35985:  54%|█████▎    | 15/28 [01:05<00:48,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6541[0m
[32m  eval_f1 = 0.3251[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4166[0m
[32m  eval_recall = 0.3033[0m
[32m  ********************[0m
[32m  Best f1:0.3251[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35985:  57%|█████▋    | 16/28 [01:12<00:58,  4.90s/it]epoch 2 loss 1.35287:  57%|█████▋    | 16/28 [01:13<00:58,  4.90s/it]epoch 2 loss 1.35287:  61%|██████    | 17/28 [01:13<00:39,  3.56s/it]epoch 2 loss 1.34408:  61%|██████    | 17/28 [01:13<00:39,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6555[0m
[32m  eval_f1 = 0.332[0m
[32m  eval_mcc = 0.636[0m
[32m  eval_precision = 0.444[0m
[32m  eval_recall = 0.3077[0m
[32m  ********************[0m
[32m  Best f1:0.332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.636[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34408:  64%|██████▍   | 18/28 [01:21<00:51,  5.11s/it]epoch 2 loss 1.34571:  64%|██████▍   | 18/28 [01:22<00:51,  5.11s/it]epoch 2 loss 1.34571:  68%|██████▊   | 19/28 [01:22<00:33,  3.70s/it]epoch 2 loss 1.34379:  68%|██████▊   | 19/28 [01:22<00:33,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6563[0m
[32m  eval_f1 = 0.3392[0m
[32m  eval_mcc = 0.6369[0m
[32m  eval_precision = 0.4538[0m
[32m  eval_recall = 0.3127[0m
[32m  ********************[0m
[32m  Best f1:0.3392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34379:  71%|███████▏  | 20/28 [01:29<00:39,  4.88s/it]epoch 2 loss 1.33725:  71%|███████▏  | 20/28 [01:30<00:39,  4.88s/it]epoch 2 loss 1.33725:  75%|███████▌  | 21/28 [01:30<00:24,  3.54s/it]epoch 2 loss 1.34071:  75%|███████▌  | 21/28 [01:30<00:24,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3415[0m
[32m  eval_mcc = 0.6376[0m
[32m  eval_precision = 0.4538[0m
[32m  eval_recall = 0.3146[0m
[32m  ********************[0m
[32m  Best f1:0.3415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34071:  79%|███████▊  | 22/28 [01:38<00:30,  5.08s/it]epoch 2 loss 1.33805:  79%|███████▊  | 22/28 [01:39<00:30,  5.08s/it]epoch 2 loss 1.33805:  82%|████████▏ | 23/28 [01:39<00:18,  3.68s/it]epoch 2 loss 1.33221:  82%|████████▏ | 23/28 [01:39<00:18,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6571[0m
[32m  eval_f1 = 0.3422[0m
[32m  eval_mcc = 0.638[0m
[32m  eval_precision = 0.451[0m
[32m  eval_recall = 0.3155[0m
[32m  ********************[0m
[32m  Best f1:0.3422[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33221:  86%|████████▌ | 24/28 [01:46<00:19,  4.87s/it]epoch 2 loss 1.33003:  86%|████████▌ | 24/28 [01:47<00:19,  4.87s/it]epoch 2 loss 1.33003:  89%|████████▉ | 25/28 [01:47<00:10,  3.53s/it]epoch 2 loss 1.32532:  89%|████████▉ | 25/28 [01:47<00:10,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6579[0m
[32m  eval_f1 = 0.3423[0m
[32m  eval_mcc = 0.639[0m
[32m  eval_precision = 0.4505[0m
[32m  eval_recall = 0.3154[0m
[32m  ********************[0m
[32m  Best f1:0.3423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32532:  93%|█████████▎| 26/28 [01:56<00:10,  5.08s/it]epoch 2 loss 1.32738:  93%|█████████▎| 26/28 [01:56<00:10,  5.08s/it]epoch 2 loss 1.32738:  96%|█████████▋| 27/28 [01:56<00:03,  3.68s/it]epoch 2 loss 1.33023:  96%|█████████▋| 27/28 [01:56<00:03,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6603[0m
[32m  eval_f1 = 0.3513[0m
[32m  eval_mcc = 0.6414[0m
[32m  eval_precision = 0.458[0m
[32m  eval_recall = 0.3224[0m
[32m  ********************[0m
[32m  Best f1:0.3513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6414[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33023: 100%|██████████| 28/28 [02:02<00:00,  4.44s/it]epoch 2 loss 1.33023: 100%|██████████| 28/28 [02:02<00:00,  4.38s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.16156:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.16156:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s]epoch 3 loss 1.22498:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6625[0m
[32m  eval_f1 = 0.3551[0m
[32m  eval_mcc = 0.6435[0m
[32m  eval_precision = 0.4532[0m
[32m  eval_recall = 0.3278[0m
[32m  ********************[0m
[32m  Best f1:0.3551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22498:   7%|▋         | 2/28 [00:07<01:45,  4.05s/it]epoch 3 loss 1.25631:   7%|▋         | 2/28 [00:07<01:45,  4.05s/it]epoch 3 loss 1.25631:  11%|█         | 3/28 [00:07<00:59,  2.39s/it]epoch 3 loss 1.23757:  11%|█         | 3/28 [00:07<00:59,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6635[0m
[32m  eval_f1 = 0.3582[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4506[0m
[32m  eval_recall = 0.3323[0m
[32m  ********************[0m
[32m  Best f1:0.3582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23757:  14%|█▍        | 4/28 [00:14<01:36,  4.04s/it]epoch 3 loss 1.21039:  14%|█▍        | 4/28 [00:14<01:36,  4.04s/it]epoch 3 loss 1.21039:  18%|█▊        | 5/28 [00:14<01:03,  2.74s/it]epoch 3 loss 1.22181:  18%|█▊        | 5/28 [00:14<01:03,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6636[0m
[32m  eval_f1 = 0.3586[0m
[32m  eval_mcc = 0.6444[0m
[32m  eval_precision = 0.4572[0m
[32m  eval_recall = 0.3318[0m
[32m  ********************[0m
[32m  Best f1:0.3586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22181:  21%|██▏       | 6/28 [00:20<01:28,  4.01s/it]epoch 3 loss 1.22916:  21%|██▏       | 6/28 [00:21<01:28,  4.01s/it]epoch 3 loss 1.22916:  25%|██▌       | 7/28 [00:21<00:59,  2.84s/it]epoch 3 loss 1.24334:  25%|██▌       | 7/28 [00:21<00:59,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6659[0m
[32m  eval_f1 = 0.3602[0m
[32m  eval_mcc = 0.647[0m
[32m  eval_precision = 0.4574[0m
[32m  eval_recall = 0.333[0m
[32m  ********************[0m
[32m  Best f1:0.3602[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24334:  29%|██▊       | 8/28 [00:27<01:20,  4.02s/it]epoch 3 loss 1.24703:  29%|██▊       | 8/28 [00:28<01:20,  4.02s/it]epoch 3 loss 1.24703:  32%|███▏      | 9/28 [00:28<00:54,  2.89s/it]epoch 3 loss 1.24527:  32%|███▏      | 9/28 [00:28<00:54,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.668[0m
[32m  eval_f1 = 0.3607[0m
[32m  eval_mcc = 0.6492[0m
[32m  eval_precision = 0.4563[0m
[32m  eval_recall = 0.3339[0m
[32m  ********************[0m
[32m  Best f1:0.3607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6492[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24527:  36%|███▌      | 10/28 [00:37<01:27,  4.87s/it]epoch 3 loss 1.23684:  36%|███▌      | 10/28 [00:38<01:27,  4.87s/it]epoch 3 loss 1.23684:  39%|███▉      | 11/28 [00:38<00:59,  3.51s/it]epoch 3 loss 1.23579:  39%|███▉      | 11/28 [00:38<00:59,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6672[0m
[32m  eval_f1 = 0.3602[0m
[32m  eval_mcc = 0.6486[0m
[32m  eval_precision = 0.4569[0m
[32m  eval_recall = 0.3331[0m

epoch 3 loss 1.23579:  43%|████▎     | 12/28 [00:41<00:57,  3.60s/it]epoch 3 loss 1.24056:  43%|████▎     | 12/28 [00:42<00:57,  3.60s/it]epoch 3 loss 1.24056:  46%|████▋     | 13/28 [00:42<00:39,  2.63s/it]epoch 3 loss 1.23599:  46%|████▋     | 13/28 [00:42<00:39,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6682[0m
[32m  eval_f1 = 0.3612[0m
[32m  eval_mcc = 0.6497[0m
[32m  eval_precision = 0.4576[0m
[32m  eval_recall = 0.3341[0m
[32m  ********************[0m
[32m  Best f1:0.3612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23599:  50%|█████     | 14/28 [00:52<01:08,  4.91s/it]epoch 3 loss 1.23544:  50%|█████     | 14/28 [00:52<01:08,  4.91s/it]epoch 3 loss 1.23544:  54%|█████▎    | 15/28 [00:52<00:46,  3.56s/it]epoch 3 loss 1.23685:  54%|█████▎    | 15/28 [00:53<00:46,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6676[0m
[32m  eval_f1 = 0.3627[0m
[32m  eval_mcc = 0.6491[0m
[32m  eval_precision = 0.4621[0m
[32m  eval_recall = 0.3345[0m
[32m  ********************[0m
[32m  Best f1:0.3627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.23685:  57%|█████▋    | 16/28 [00:58<00:51,  4.30s/it]epoch 3 loss 1.24138:  57%|█████▋    | 16/28 [00:59<00:51,  4.30s/it]epoch 3 loss 1.24138:  61%|██████    | 17/28 [00:59<00:34,  3.14s/it]epoch 3 loss 1.24753:  61%|██████    | 17/28 [00:59<00:34,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6682[0m
[32m  eval_f1 = 0.3635[0m
[32m  eval_mcc = 0.6497[0m
[32m  eval_precision = 0.4637[0m
[32m  eval_recall = 0.3358[0m
[32m  ********************[0m
[32m  Best f1:0.3635[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24753:  64%|██████▍   | 18/28 [01:11<00:57,  5.76s/it]epoch 3 loss 1.23822:  64%|██████▍   | 18/28 [01:11<00:57,  5.76s/it]epoch 3 loss 1.23822:  68%|██████▊   | 19/28 [01:11<00:37,  4.16s/it]epoch 3 loss 1.24005:  68%|██████▊   | 19/28 [01:11<00:37,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6694[0m
[32m  eval_f1 = 0.3642[0m
[32m  eval_mcc = 0.651[0m
[32m  eval_precision = 0.4628[0m
[32m  eval_recall = 0.3368[0m
[32m  ********************[0m
[32m  Best f1:0.3642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24005:  71%|███████▏  | 20/28 [01:19<00:41,  5.22s/it]epoch 3 loss 1.23323:  71%|███████▏  | 20/28 [01:19<00:41,  5.22s/it]epoch 3 loss 1.23323:  75%|███████▌  | 21/28 [01:19<00:26,  3.78s/it]epoch 3 loss 1.23251:  75%|███████▌  | 21/28 [01:20<00:26,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6704[0m
[32m  eval_f1 = 0.3649[0m
[32m  eval_mcc = 0.6522[0m
[32m  eval_precision = 0.4625[0m
[32m  eval_recall = 0.3378[0m
[32m  ********************[0m
[32m  Best f1:0.3649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23251:  79%|███████▊  | 22/28 [01:28<00:31,  5.31s/it]epoch 3 loss 1.23484:  79%|███████▊  | 22/28 [01:29<00:31,  5.31s/it]epoch 3 loss 1.23484:  82%|████████▏ | 23/28 [01:29<00:19,  3.85s/it]epoch 3 loss 1.23753:  82%|████████▏ | 23/28 [01:29<00:19,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6711[0m
[32m  eval_f1 = 0.3652[0m
[32m  eval_mcc = 0.6529[0m
[32m  eval_precision = 0.4633[0m
[32m  eval_recall = 0.3382[0m
[32m  ********************[0m
[32m  Best f1:0.3652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23753:  86%|████████▌ | 24/28 [01:37<00:20,  5.20s/it]epoch 3 loss 1.23656:  86%|████████▌ | 24/28 [01:37<00:20,  5.20s/it]epoch 3 loss 1.23656:  89%|████████▉ | 25/28 [01:37<00:11,  3.76s/it]epoch 3 loss 1.23539:  89%|████████▉ | 25/28 [01:38<00:11,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.672[0m
[32m  eval_f1 = 0.3659[0m
[32m  eval_mcc = 0.6541[0m
[32m  eval_precision = 0.4636[0m
[32m  eval_recall = 0.3389[0m
[32m  ********************[0m
[32m  Best f1:0.3659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6541[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23539:  93%|█████████▎| 26/28 [01:46<00:10,  5.20s/it]epoch 3 loss 1.22937:  93%|█████████▎| 26/28 [01:46<00:10,  5.20s/it]epoch 3 loss 1.22937:  96%|█████████▋| 27/28 [01:46<00:03,  3.77s/it]epoch 3 loss 1.223:  96%|█████████▋| 27/28 [01:46<00:03,  3.77s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6722[0m
[32m  eval_f1 = 0.3666[0m
[32m  eval_mcc = 0.6543[0m
[32m  eval_precision = 0.4628[0m
[32m  eval_recall = 0.3397[0m
[32m  ********************[0m
[32m  Best f1:0.3666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6543[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.223: 100%|██████████| 28/28 [01:55<00:00,  5.38s/it]epoch 3 loss 1.223: 100%|██████████| 28/28 [01:55<00:00,  4.14s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.14007:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.14007:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 4 loss 1.20755:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6728[0m
[32m  eval_f1 = 0.3673[0m
[32m  eval_mcc = 0.655[0m
[32m  eval_precision = 0.4645[0m
[32m  eval_recall = 0.34[0m
[32m  ********************[0m
[32m  Best f1:0.3673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20755:   7%|▋         | 2/28 [00:10<02:33,  5.89s/it]epoch 4 loss 1.21913:   7%|▋         | 2/28 [00:10<02:33,  5.89s/it]epoch 4 loss 1.21913:  11%|█         | 3/28 [00:10<01:24,  3.39s/it]epoch 4 loss 1.24133:  11%|█         | 3/28 [00:10<01:24,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3674[0m
[32m  eval_mcc = 0.6554[0m
[32m  eval_precision = 0.4632[0m
[32m  eval_recall = 0.3404[0m
[32m  ********************[0m
[32m  Best f1:0.3674[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24133:  14%|█▍        | 4/28 [00:16<01:49,  4.58s/it]epoch 4 loss 1.20602:  14%|█▍        | 4/28 [00:17<01:49,  4.58s/it]epoch 4 loss 1.20602:  18%|█▊        | 5/28 [00:17<01:10,  3.08s/it]epoch 4 loss 1.18883:  18%|█▊        | 5/28 [00:17<01:10,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6735[0m
[32m  eval_f1 = 0.3678[0m
[32m  eval_mcc = 0.6557[0m
[32m  eval_precision = 0.4674[0m
[32m  eval_recall = 0.3403[0m
[32m  ********************[0m
[32m  Best f1:0.3678[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6557[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18883:  21%|██▏       | 6/28 [00:23<01:33,  4.26s/it]epoch 4 loss 1.19466:  21%|██▏       | 6/28 [00:24<01:33,  4.26s/it]epoch 4 loss 1.19466:  25%|██▌       | 7/28 [00:24<01:03,  3.01s/it]epoch 4 loss 1.20006:  25%|██▌       | 7/28 [00:24<01:03,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.6553[0m
[32m  eval_precision = 0.4675[0m
[32m  eval_recall = 0.3403[0m
[32m  ********************[0m
[32m  Best f1:0.3679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.20006:  29%|██▊       | 8/28 [00:29<01:13,  3.69s/it]epoch 4 loss 1.19166:  29%|██▊       | 8/28 [00:29<01:13,  3.69s/it]epoch 4 loss 1.19166:  32%|███▏      | 9/28 [00:29<00:50,  2.66s/it]epoch 4 loss 1.18745:  32%|███▏      | 9/28 [00:30<00:50,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3678[0m
[32m  eval_mcc = 0.6551[0m
[32m  eval_precision = 0.4662[0m
[32m  eval_recall = 0.3401[0m

epoch 4 loss 1.18745:  36%|███▌      | 10/28 [00:33<00:54,  3.01s/it]epoch 4 loss 1.18244:  36%|███▌      | 10/28 [00:34<00:54,  3.01s/it]epoch 4 loss 1.18244:  39%|███▉      | 11/28 [00:34<00:37,  2.21s/it]epoch 4 loss 1.19344:  39%|███▉      | 11/28 [00:34<00:37,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.6552[0m
[32m  eval_precision = 0.466[0m
[32m  eval_recall = 0.3403[0m
[32m  ********************[0m
[32m  Best f1:0.3679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.19344:  43%|████▎     | 12/28 [00:39<00:49,  3.07s/it]epoch 4 loss 1.19474:  43%|████▎     | 12/28 [00:39<00:49,  3.07s/it]epoch 4 loss 1.19474:  46%|████▋     | 13/28 [00:39<00:33,  2.26s/it]epoch 4 loss 1.19312:  46%|████▋     | 13/28 [00:39<00:33,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.6552[0m
[32m  eval_precision = 0.4647[0m
[32m  eval_recall = 0.3403[0m
[32m  ********************[0m
[32m  Best f1:0.3679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.19312:  50%|█████     | 14/28 [00:44<00:43,  3.10s/it]epoch 4 loss 1.19709:  50%|█████     | 14/28 [00:44<00:43,  3.10s/it]epoch 4 loss 1.19709:  54%|█████▎    | 15/28 [00:44<00:29,  2.29s/it]epoch 4 loss 1.1982:  54%|█████▎    | 15/28 [00:45<00:29,  2.29s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6735[0m
[32m  eval_f1 = 0.3688[0m
[32m  eval_mcc = 0.6552[0m
[32m  eval_precision = 0.4646[0m
[32m  eval_recall = 0.3413[0m
[32m  ********************[0m
[32m  Best f1:0.3688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.1982:  57%|█████▋    | 16/28 [00:49<00:36,  3.07s/it]epoch 4 loss 1.19321:  57%|█████▋    | 16/28 [00:50<00:36,  3.07s/it]epoch 4 loss 1.19321:  61%|██████    | 17/28 [00:50<00:24,  2.27s/it]epoch 4 loss 1.19604:  61%|██████    | 17/28 [00:50<00:24,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6736[0m
[32m  eval_f1 = 0.3691[0m
[32m  eval_mcc = 0.6554[0m
[32m  eval_precision = 0.4643[0m
[32m  eval_recall = 0.3416[0m
[32m  ********************[0m
[32m  Best f1:0.3691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.19604:  64%|██████▍   | 18/28 [00:55<00:31,  3.11s/it]epoch 4 loss 1.19563:  64%|██████▍   | 18/28 [00:55<00:31,  3.11s/it]epoch 4 loss 1.19563:  68%|██████▊   | 19/28 [00:55<00:20,  2.30s/it]epoch 4 loss 1.19664:  68%|██████▊   | 19/28 [00:56<00:20,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6738[0m
[32m  eval_f1 = 0.3691[0m
[32m  eval_mcc = 0.6555[0m
[32m  eval_precision = 0.4657[0m
[32m  eval_recall = 0.3418[0m
[32m  ********************[0m
[32m  Best f1:0.3691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.19664:  71%|███████▏  | 20/28 [01:00<00:24,  3.12s/it]epoch 4 loss 1.19646:  71%|███████▏  | 20/28 [01:01<00:24,  3.12s/it]epoch 4 loss 1.19646:  75%|███████▌  | 21/28 [01:01<00:16,  2.31s/it]epoch 4 loss 1.1993:  75%|███████▌  | 21/28 [01:01<00:16,  2.31s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6743[0m
[32m  eval_f1 = 0.3696[0m
[32m  eval_mcc = 0.656[0m
[32m  eval_precision = 0.4655[0m
[32m  eval_recall = 0.3425[0m
[32m  ********************[0m
[32m  Best f1:0.3696[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1993:  79%|███████▊  | 22/28 [01:07<00:21,  3.58s/it]epoch 4 loss 1.20108:  79%|███████▊  | 22/28 [01:08<00:21,  3.58s/it]epoch 4 loss 1.20108:  82%|████████▏ | 23/28 [01:08<00:13,  2.64s/it]epoch 4 loss 1.19674:  82%|████████▏ | 23/28 [01:08<00:13,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6743[0m
[32m  eval_f1 = 0.3696[0m
[32m  eval_mcc = 0.6559[0m
[32m  eval_precision = 0.4655[0m
[32m  eval_recall = 0.3425[0m

epoch 4 loss 1.19674:  86%|████████▌ | 24/28 [01:11<00:11,  2.98s/it]epoch 4 loss 1.19394:  86%|████████▌ | 24/28 [01:12<00:11,  2.98s/it]epoch 4 loss 1.19394:  89%|████████▉ | 25/28 [01:12<00:06,  2.21s/it]epoch 4 loss 1.18852:  89%|████████▉ | 25/28 [01:12<00:06,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6744[0m
[32m  eval_f1 = 0.3697[0m
[32m  eval_mcc = 0.6561[0m
[32m  eval_precision = 0.4656[0m
[32m  eval_recall = 0.3426[0m
[32m  ********************[0m
[32m  Best f1:0.3697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18852:  93%|█████████▎| 26/28 [01:20<00:08,  4.07s/it]epoch 4 loss 1.19302:  93%|█████████▎| 26/28 [01:21<00:08,  4.07s/it]epoch 4 loss 1.19302:  96%|█████████▋| 27/28 [01:21<00:02,  2.97s/it]epoch 4 loss 1.19231:  96%|█████████▋| 27/28 [01:21<00:02,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6745[0m
[32m  eval_f1 = 0.3697[0m
[32m  eval_mcc = 0.6562[0m
[32m  eval_precision = 0.4657[0m
[32m  eval_recall = 0.3426[0m
[32m  ********************[0m
[32m  Best f1:0.3697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6562[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19231: 100%|██████████| 28/28 [01:30<00:00,  4.85s/it]epoch 4 loss 1.19231: 100%|██████████| 28/28 [01:30<00:00,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.65it/s] 20%|██        | 2/10 [00:00<00:02,  2.71it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6745[0m
[32m  eval_f1 = 0.3697[0m
[32m  eval_mcc = 0.6562[0m
[32m  eval_precision = 0.4657[0m
[32m  eval_recall = 0.3426[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6529[0m
[32m  eval_f1 = 0.2939[0m
[32m  eval_mcc = 0.6344[0m
[32m  eval_precision = 0.3737[0m
[32m  eval_recall = 0.2776[0m

