[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=7, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.59987:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.59987:   4%|▎         | 1/28 [00:00<00:21,  1.24it/s]epoch 0 loss 5.62898:   4%|▎         | 1/28 [00:01<00:21,  1.24it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0046[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = 0.0012[0m
[32m  eval_precision = 0.0022[0m
[32m  eval_recall = 0.0057[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.62898:   7%|▋         | 2/28 [00:06<01:33,  3.59s/it]epoch 0 loss 5.60468:   7%|▋         | 2/28 [00:06<01:33,  3.59s/it]epoch 0 loss 5.60468:  11%|█         | 3/28 [00:06<00:53,  2.14s/it]epoch 0 loss 5.59458:  11%|█         | 3/28 [00:07<00:53,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0171[0m
[32m  eval_f1 = 0.0021[0m
[32m  eval_mcc = 0.0081[0m
[32m  eval_precision = 0.0028[0m
[32m  eval_recall = 0.0069[0m
[32m  ********************[0m
[32m  Best f1:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.59458:  14%|█▍        | 4/28 [00:15<01:54,  4.75s/it]epoch 0 loss 5.57527:  14%|█▍        | 4/28 [00:15<01:54,  4.75s/it]epoch 0 loss 5.57527:  18%|█▊        | 5/28 [00:15<01:13,  3.20s/it]epoch 0 loss 5.54542:  18%|█▊        | 5/28 [00:16<01:13,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0435[0m
[32m  eval_f1 = 0.0031[0m
[32m  eval_mcc = 0.0156[0m
[32m  eval_precision = 0.0038[0m
[32m  eval_recall = 0.0048[0m
[32m  ********************[0m
[32m  Best f1:0.0031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0156[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.54542:  21%|██▏       | 6/28 [00:27<02:13,  6.08s/it]epoch 0 loss 5.5063:  21%|██▏       | 6/28 [00:28<02:13,  6.08s/it] epoch 0 loss 5.5063:  25%|██▌       | 7/28 [00:28<01:28,  4.23s/it]epoch 0 loss 5.45764:  25%|██▌       | 7/28 [00:28<01:28,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0772[0m
[32m  eval_f1 = 0.0042[0m
[32m  eval_mcc = 0.0255[0m
[32m  eval_precision = 0.0056[0m
[32m  eval_recall = 0.0085[0m
[32m  ********************[0m
[32m  Best f1:0.0042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.45764:  29%|██▊       | 8/28 [00:40<02:17,  6.88s/it]epoch 0 loss 5.40454:  29%|██▊       | 8/28 [00:41<02:17,  6.88s/it]epoch 0 loss 5.40454:  32%|███▏      | 9/28 [00:41<01:32,  4.86s/it]epoch 0 loss 5.34542:  32%|███▏      | 9/28 [00:41<01:32,  4.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0877[0m
[32m  eval_f1 = 0.0055[0m
[32m  eval_mcc = 0.0287[0m
[32m  eval_precision = 0.0078[0m
[32m  eval_recall = 0.0115[0m
[32m  ********************[0m
[32m  Best f1:0.0055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.34542:  36%|███▌      | 10/28 [00:46<01:33,  5.17s/it]epoch 0 loss 5.28377:  36%|███▌      | 10/28 [00:47<01:33,  5.17s/it]epoch 0 loss 5.28377:  39%|███▉      | 11/28 [00:47<01:03,  3.72s/it]epoch 0 loss 5.21491:  39%|███▉      | 11/28 [00:47<01:03,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0947[0m
[32m  eval_f1 = 0.0063[0m
[32m  eval_mcc = 0.0312[0m
[32m  eval_precision = 0.0091[0m
[32m  eval_recall = 0.0126[0m
[32m  ********************[0m
[32m  Best f1:0.0063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.21491:  43%|████▎     | 12/28 [00:53<01:09,  4.37s/it]epoch 0 loss 5.14643:  43%|████▎     | 12/28 [00:53<01:09,  4.37s/it]epoch 0 loss 5.14643:  46%|████▋     | 13/28 [00:53<00:47,  3.18s/it]epoch 0 loss 5.07499:  46%|████▋     | 13/28 [00:54<00:47,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1018[0m
[32m  eval_f1 = 0.0068[0m
[32m  eval_mcc = 0.0334[0m
[32m  eval_precision = 0.009[0m
[32m  eval_recall = 0.0128[0m
[32m  ********************[0m
[32m  Best f1:0.0068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.07499:  50%|█████     | 14/28 [01:00<01:00,  4.29s/it]epoch 0 loss 4.99817:  50%|█████     | 14/28 [01:00<01:00,  4.29s/it]epoch 0 loss 4.99817:  54%|█████▎    | 15/28 [01:00<00:40,  3.12s/it]epoch 0 loss 4.92037:  54%|█████▎    | 15/28 [01:01<00:40,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1089[0m
[32m  eval_f1 = 0.0071[0m
[32m  eval_mcc = 0.037[0m
[32m  eval_precision = 0.014[0m
[32m  eval_recall = 0.0128[0m
[32m  ********************[0m
[32m  Best f1:0.0071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.92037:  57%|█████▋    | 16/28 [01:13<01:11,  5.98s/it]epoch 0 loss 4.84499:  57%|█████▋    | 16/28 [01:13<01:11,  5.98s/it]epoch 0 loss 4.84499:  61%|██████    | 17/28 [01:13<00:47,  4.31s/it]epoch 0 loss 4.77212:  61%|██████    | 17/28 [01:14<00:47,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1195[0m
[32m  eval_f1 = 0.0082[0m
[32m  eval_mcc = 0.0482[0m
[32m  eval_precision = 0.0291[0m
[32m  eval_recall = 0.0135[0m
[32m  ********************[0m
[32m  Best f1:0.0082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0482[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.77212:  64%|██████▍   | 18/28 [01:27<01:09,  6.95s/it]epoch 0 loss 4.7012:  64%|██████▍   | 18/28 [01:27<01:09,  6.95s/it] epoch 0 loss 4.7012:  68%|██████▊   | 19/28 [01:27<00:44,  4.99s/it]epoch 0 loss 4.63818:  68%|██████▊   | 19/28 [01:27<00:44,  4.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1525[0m
[32m  eval_f1 = 0.0134[0m
[32m  eval_mcc = 0.0856[0m
[32m  eval_precision = 0.0409[0m
[32m  eval_recall = 0.0173[0m
[32m  ********************[0m
[32m  Best f1:0.0134[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0856[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.63818:  71%|███████▏  | 20/28 [01:40<00:58,  7.34s/it]epoch 0 loss 4.57486:  71%|███████▏  | 20/28 [01:40<00:58,  7.34s/it]epoch 0 loss 4.57486:  75%|███████▌  | 21/28 [01:40<00:36,  5.27s/it]epoch 0 loss 4.50721:  75%|███████▌  | 21/28 [01:41<00:36,  5.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2504[0m
[32m  eval_f1 = 0.0285[0m
[32m  eval_mcc = 0.1902[0m
[32m  eval_precision = 0.0539[0m
[32m  eval_recall = 0.0319[0m
[32m  ********************[0m
[32m  Best f1:0.0285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.50721:  79%|███████▊  | 22/28 [01:53<00:44,  7.48s/it]epoch 0 loss 4.44803:  79%|███████▊  | 22/28 [01:53<00:44,  7.48s/it]epoch 0 loss 4.44803:  82%|████████▏ | 23/28 [01:53<00:26,  5.36s/it]epoch 0 loss 4.38938:  82%|████████▏ | 23/28 [01:54<00:26,  5.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3071[0m
[32m  eval_f1 = 0.0379[0m
[32m  eval_mcc = 0.2537[0m
[32m  eval_precision = 0.059[0m
[32m  eval_recall = 0.0428[0m
[32m  ********************[0m
[32m  Best f1:0.0379[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.38938:  86%|████████▌ | 24/28 [02:04<00:28,  7.07s/it]epoch 0 loss 4.33295:  86%|████████▌ | 24/28 [02:05<00:28,  7.07s/it]epoch 0 loss 4.33295:  89%|████████▉ | 25/28 [02:05<00:15,  5.08s/it]epoch 0 loss 4.27015:  89%|████████▉ | 25/28 [02:05<00:15,  5.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3342[0m
[32m  eval_f1 = 0.0747[0m
[32m  eval_mcc = 0.3033[0m
[32m  eval_precision = 0.139[0m
[32m  eval_recall = 0.0684[0m
[32m  ********************[0m
[32m  Best f1:0.0747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.27015:  93%|█████████▎| 26/28 [02:14<00:12,  6.25s/it]epoch 0 loss 4.21223:  93%|█████████▎| 26/28 [02:14<00:12,  6.25s/it]epoch 0 loss 4.21223:  96%|█████████▋| 27/28 [02:14<00:04,  4.50s/it]epoch 0 loss 4.16145:  96%|█████████▋| 27/28 [02:14<00:04,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3796[0m
[32m  eval_f1 = 0.1058[0m
[32m  eval_mcc = 0.3651[0m
[32m  eval_precision = 0.1622[0m
[32m  eval_recall = 0.0924[0m
[32m  ********************[0m
[32m  Best f1:0.1058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.16145: 100%|██████████| 28/28 [02:20<00:00,  4.89s/it]epoch 0 loss 4.16145: 100%|██████████| 28/28 [02:20<00:00,  5.02s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.6092:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.6092:   4%|▎         | 1/28 [00:00<00:12,  2.10it/s]epoch 1 loss 2.51149:   4%|▎         | 1/28 [00:00<00:12,  2.10it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.53it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.66it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4499[0m
[32m  eval_f1 = 0.1278[0m
[32m  eval_mcc = 0.4327[0m
[32m  eval_precision = 0.1628[0m
[32m  eval_recall = 0.1191[0m
[32m  ********************[0m
[32m  Best f1:0.1278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.51149:   7%|▋         | 2/28 [00:11<02:55,  6.75s/it]epoch 1 loss 2.44404:   7%|▋         | 2/28 [00:12<02:55,  6.75s/it]epoch 1 loss 2.44404:  11%|█         | 3/28 [00:12<01:37,  3.88s/it]epoch 1 loss 2.42127:  11%|█         | 3/28 [00:12<01:37,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5147[0m
[32m  eval_f1 = 0.147[0m
[32m  eval_mcc = 0.4871[0m
[32m  eval_precision = 0.1923[0m
[32m  eval_recall = 0.1415[0m
[32m  ********************[0m
[32m  Best f1:0.147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42127:  14%|█▍        | 4/28 [00:19<02:09,  5.41s/it]epoch 1 loss 2.40431:  14%|█▍        | 4/28 [00:20<02:09,  5.41s/it]epoch 1 loss 2.40431:  18%|█▊        | 5/28 [00:20<01:23,  3.64s/it]epoch 1 loss 2.37641:  18%|█▊        | 5/28 [00:20<01:23,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5413[0m
[32m  eval_f1 = 0.1604[0m
[32m  eval_mcc = 0.5147[0m
[32m  eval_precision = 0.2161[0m
[32m  eval_recall = 0.1556[0m
[32m  ********************[0m
[32m  Best f1:0.1604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.37641:  21%|██▏       | 6/28 [00:31<02:16,  6.21s/it]epoch 1 loss 2.34699:  21%|██▏       | 6/28 [00:32<02:16,  6.21s/it]epoch 1 loss 2.34699:  25%|██▌       | 7/28 [00:32<01:31,  4.34s/it]epoch 1 loss 2.32432:  25%|██▌       | 7/28 [00:32<01:31,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5524[0m
[32m  eval_f1 = 0.1717[0m
[32m  eval_mcc = 0.5276[0m
[32m  eval_precision = 0.2208[0m
[32m  eval_recall = 0.1647[0m
[32m  ********************[0m
[32m  Best f1:0.1717[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32432:  29%|██▊       | 8/28 [00:39<01:49,  5.46s/it]epoch 1 loss 2.31852:  29%|██▊       | 8/28 [00:40<01:49,  5.46s/it]epoch 1 loss 2.31852:  32%|███▏      | 9/28 [00:40<01:14,  3.90s/it]epoch 1 loss 2.29435:  32%|███▏      | 9/28 [00:40<01:14,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5636[0m
[32m  eval_f1 = 0.1752[0m
[32m  eval_mcc = 0.5395[0m
[32m  eval_precision = 0.2228[0m
[32m  eval_recall = 0.1671[0m
[32m  ********************[0m
[32m  Best f1:0.1752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29435:  36%|███▌      | 10/28 [00:52<01:53,  6.30s/it]epoch 1 loss 2.27028:  36%|███▌      | 10/28 [00:52<01:53,  6.30s/it]epoch 1 loss 2.27028:  39%|███▉      | 11/28 [00:52<01:16,  4.50s/it]epoch 1 loss 2.23907:  39%|███▉      | 11/28 [00:52<01:16,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5704[0m
[32m  eval_f1 = 0.1782[0m
[32m  eval_mcc = 0.5461[0m
[32m  eval_precision = 0.2325[0m
[32m  eval_recall = 0.1697[0m
[32m  ********************[0m
[32m  Best f1:0.1782[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23907:  43%|████▎     | 12/28 [01:01<01:34,  5.88s/it]epoch 1 loss 2.2121:  43%|████▎     | 12/28 [01:01<01:34,  5.88s/it] epoch 1 loss 2.2121:  46%|████▋     | 13/28 [01:01<01:03,  4.22s/it]epoch 1 loss 2.1948:  46%|████▋     | 13/28 [01:02<01:03,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5737[0m
[32m  eval_f1 = 0.1814[0m
[32m  eval_mcc = 0.5485[0m
[32m  eval_precision = 0.2381[0m
[32m  eval_recall = 0.1732[0m
[32m  ********************[0m
[32m  Best f1:0.1814[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1948:  50%|█████     | 14/28 [01:14<01:34,  6.75s/it]epoch 1 loss 2.17183:  50%|█████     | 14/28 [01:14<01:34,  6.75s/it]epoch 1 loss 2.17183:  54%|█████▎    | 15/28 [01:14<01:02,  4.85s/it]epoch 1 loss 2.15523:  54%|█████▎    | 15/28 [01:15<01:02,  4.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5838[0m
[32m  eval_f1 = 0.1879[0m
[32m  eval_mcc = 0.5595[0m
[32m  eval_precision = 0.2356[0m
[32m  eval_recall = 0.18[0m
[32m  ********************[0m
[32m  Best f1:0.1879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15523:  57%|█████▋    | 16/28 [01:27<01:26,  7.22s/it]epoch 1 loss 2.13044:  57%|█████▋    | 16/28 [01:28<01:26,  7.22s/it]epoch 1 loss 2.13044:  61%|██████    | 17/28 [01:28<00:56,  5.18s/it]epoch 1 loss 2.11097:  61%|██████    | 17/28 [01:28<00:56,  5.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5889[0m
[32m  eval_f1 = 0.1924[0m
[32m  eval_mcc = 0.5667[0m
[32m  eval_precision = 0.2459[0m
[32m  eval_recall = 0.1833[0m
[32m  ********************[0m
[32m  Best f1:0.1924[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11097:  64%|██████▍   | 18/28 [01:37<01:03,  6.36s/it]epoch 1 loss 2.08691:  64%|██████▍   | 18/28 [01:37<01:03,  6.36s/it]epoch 1 loss 2.08691:  68%|██████▊   | 19/28 [01:37<00:41,  4.58s/it]epoch 1 loss 2.08615:  68%|██████▊   | 19/28 [01:38<00:41,  4.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5916[0m
[32m  eval_f1 = 0.1937[0m
[32m  eval_mcc = 0.5717[0m
[32m  eval_precision = 0.2651[0m
[32m  eval_recall = 0.184[0m
[32m  ********************[0m
[32m  Best f1:0.1937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5717[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08615:  71%|███████▏  | 20/28 [01:47<00:49,  6.19s/it]epoch 1 loss 2.06997:  71%|███████▏  | 20/28 [01:47<00:49,  6.19s/it]epoch 1 loss 2.06997:  75%|███████▌  | 21/28 [01:47<00:31,  4.46s/it]epoch 1 loss 2.05467:  75%|███████▌  | 21/28 [01:48<00:31,  4.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5949[0m
[32m  eval_f1 = 0.1966[0m
[32m  eval_mcc = 0.5736[0m
[32m  eval_precision = 0.2598[0m
[32m  eval_recall = 0.1872[0m
[32m  ********************[0m
[32m  Best f1:0.1966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5736[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05467:  79%|███████▊  | 22/28 [02:00<00:41,  6.88s/it]epoch 1 loss 2.03568:  79%|███████▊  | 22/28 [02:00<00:41,  6.88s/it]epoch 1 loss 2.03568:  82%|████████▏ | 23/28 [02:00<00:24,  4.94s/it]epoch 1 loss 2.02156:  82%|████████▏ | 23/28 [02:01<00:24,  4.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5969[0m
[32m  eval_f1 = 0.2019[0m
[32m  eval_mcc = 0.5735[0m
[32m  eval_precision = 0.273[0m
[32m  eval_recall = 0.1927[0m
[32m  ********************[0m
[32m  Best f1:0.2019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.02156:  86%|████████▌ | 24/28 [02:09<00:23,  5.97s/it]epoch 1 loss 2.00442:  86%|████████▌ | 24/28 [02:09<00:23,  5.97s/it]epoch 1 loss 2.00442:  89%|████████▉ | 25/28 [02:09<00:12,  4.31s/it]epoch 1 loss 1.99029:  89%|████████▉ | 25/28 [02:10<00:12,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5997[0m
[32m  eval_f1 = 0.2202[0m
[32m  eval_mcc = 0.5756[0m
[32m  eval_precision = 0.3033[0m
[32m  eval_recall = 0.2075[0m
[32m  ********************[0m
[32m  Best f1:0.2202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5756[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99029:  93%|█████████▎| 26/28 [02:22<00:13,  6.83s/it]epoch 1 loss 1.97729:  93%|█████████▎| 26/28 [02:22<00:13,  6.83s/it]epoch 1 loss 1.97729:  96%|█████████▋| 27/28 [02:22<00:04,  4.91s/it]epoch 1 loss 1.96442:  96%|█████████▋| 27/28 [02:23<00:04,  4.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6017[0m
[32m  eval_f1 = 0.2328[0m
[32m  eval_mcc = 0.5776[0m
[32m  eval_precision = 0.3315[0m
[32m  eval_recall = 0.2191[0m
[32m  ********************[0m
[32m  Best f1:0.2328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5776[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96442: 100%|██████████| 28/28 [02:35<00:00,  7.11s/it]epoch 1 loss 1.96442: 100%|██████████| 28/28 [02:35<00:00,  5.54s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.40502:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.40502:   4%|▎         | 1/28 [00:00<00:11,  2.27it/s]epoch 2 loss 1.53483:   4%|▎         | 1/28 [00:00<00:11,  2.27it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6044[0m
[32m  eval_f1 = 0.2363[0m
[32m  eval_mcc = 0.5808[0m
[32m  eval_precision = 0.3459[0m
[32m  eval_recall = 0.2227[0m
[32m  ********************[0m
[32m  Best f1:0.2363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5808[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53483:   7%|▋         | 2/28 [00:12<03:10,  7.33s/it]epoch 2 loss 1.53398:   7%|▋         | 2/28 [00:13<03:10,  7.33s/it]epoch 2 loss 1.53398:  11%|█         | 3/28 [00:13<01:44,  4.18s/it]epoch 2 loss 1.52664:  11%|█         | 3/28 [00:13<01:44,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6099[0m
[32m  eval_f1 = 0.2401[0m
[32m  eval_mcc = 0.5872[0m
[32m  eval_precision = 0.3342[0m
[32m  eval_recall = 0.2264[0m
[32m  ********************[0m
[32m  Best f1:0.2401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5872[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52664:  14%|█▍        | 4/28 [00:24<02:45,  6.90s/it]epoch 2 loss 1.52284:  14%|█▍        | 4/28 [00:24<02:45,  6.90s/it]epoch 2 loss 1.52284:  18%|█▊        | 5/28 [00:24<01:44,  4.56s/it]epoch 2 loss 1.54402:  18%|█▊        | 5/28 [00:24<01:44,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6155[0m
[32m  eval_f1 = 0.2466[0m
[32m  eval_mcc = 0.5942[0m
[32m  eval_precision = 0.3495[0m
[32m  eval_recall = 0.2309[0m
[32m  ********************[0m
[32m  Best f1:0.2466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54402:  21%|██▏       | 6/28 [00:32<02:05,  5.71s/it]epoch 2 loss 1.58788:  21%|██▏       | 6/28 [00:32<02:05,  5.71s/it]epoch 2 loss 1.58788:  25%|██▌       | 7/28 [00:32<01:23,  3.98s/it]epoch 2 loss 1.58297:  25%|██▌       | 7/28 [00:33<01:23,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6176[0m
[32m  eval_f1 = 0.257[0m
[32m  eval_mcc = 0.5978[0m
[32m  eval_precision = 0.3637[0m
[32m  eval_recall = 0.2381[0m
[32m  ********************[0m
[32m  Best f1:0.257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58297:  29%|██▊       | 8/28 [00:41<01:46,  5.33s/it]epoch 2 loss 1.58613:  29%|██▊       | 8/28 [00:41<01:46,  5.33s/it]epoch 2 loss 1.58613:  32%|███▏      | 9/28 [00:41<01:12,  3.80s/it]epoch 2 loss 1.57452:  32%|███▏      | 9/28 [00:41<01:12,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6207[0m
[32m  eval_f1 = 0.2685[0m
[32m  eval_mcc = 0.6011[0m
[32m  eval_precision = 0.384[0m
[32m  eval_recall = 0.2477[0m
[32m  ********************[0m
[32m  Best f1:0.2685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57452:  36%|███▌      | 10/28 [00:49<01:33,  5.18s/it]epoch 2 loss 1.55214:  36%|███▌      | 10/28 [00:50<01:33,  5.18s/it]epoch 2 loss 1.55214:  39%|███▉      | 11/28 [00:50<01:03,  3.73s/it]epoch 2 loss 1.55175:  39%|███▉      | 11/28 [00:50<01:03,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6244[0m
[32m  eval_f1 = 0.2775[0m
[32m  eval_mcc = 0.6038[0m
[32m  eval_precision = 0.3886[0m
[32m  eval_recall = 0.2562[0m
[32m  ********************[0m
[32m  Best f1:0.2775[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55175:  43%|████▎     | 12/28 [01:00<01:29,  5.60s/it]epoch 2 loss 1.5407:  43%|████▎     | 12/28 [01:00<01:29,  5.60s/it] epoch 2 loss 1.5407:  46%|████▋     | 13/28 [01:00<01:00,  4.03s/it]epoch 2 loss 1.53156:  46%|████▋     | 13/28 [01:00<01:00,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6254[0m
[32m  eval_f1 = 0.2832[0m
[32m  eval_mcc = 0.6038[0m
[32m  eval_precision = 0.3894[0m
[32m  eval_recall = 0.262[0m
[32m  ********************[0m
[32m  Best f1:0.2832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.53156:  50%|█████     | 14/28 [01:08<01:13,  5.27s/it]epoch 2 loss 1.54013:  50%|█████     | 14/28 [01:09<01:13,  5.27s/it]epoch 2 loss 1.54013:  54%|█████▎    | 15/28 [01:09<00:49,  3.81s/it]epoch 2 loss 1.52733:  54%|█████▎    | 15/28 [01:09<00:49,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6264[0m
[32m  eval_f1 = 0.284[0m
[32m  eval_mcc = 0.6044[0m
[32m  eval_precision = 0.3839[0m
[32m  eval_recall = 0.2653[0m
[32m  ********************[0m
[32m  Best f1:0.284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52733:  57%|█████▋    | 16/28 [01:21<01:18,  6.52s/it]epoch 2 loss 1.51989:  57%|█████▋    | 16/28 [01:22<01:18,  6.52s/it]epoch 2 loss 1.51989:  61%|██████    | 17/28 [01:22<00:51,  4.69s/it]epoch 2 loss 1.50966:  61%|██████    | 17/28 [01:22<00:51,  4.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6277[0m
[32m  eval_f1 = 0.284[0m
[32m  eval_mcc = 0.6061[0m
[32m  eval_precision = 0.3845[0m
[32m  eval_recall = 0.2649[0m
[32m  ********************[0m
[32m  Best MCC:0.6061[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50966:  64%|██████▍   | 18/28 [01:28<00:51,  5.13s/it]epoch 2 loss 1.51001:  64%|██████▍   | 18/28 [01:28<00:51,  5.13s/it]epoch 2 loss 1.51001:  68%|██████▊   | 19/28 [01:28<00:33,  3.72s/it]epoch 2 loss 1.50706:  68%|██████▊   | 19/28 [01:29<00:33,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6289[0m
[32m  eval_f1 = 0.2851[0m
[32m  eval_mcc = 0.6079[0m
[32m  eval_precision = 0.3945[0m
[32m  eval_recall = 0.2645[0m
[32m  ********************[0m
[32m  Best f1:0.2851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50706:  71%|███████▏  | 20/28 [01:37<00:41,  5.15s/it]epoch 2 loss 1.50044:  71%|███████▏  | 20/28 [01:37<00:41,  5.15s/it]epoch 2 loss 1.50044:  75%|███████▌  | 21/28 [01:37<00:26,  3.73s/it]epoch 2 loss 1.50284:  75%|███████▌  | 21/28 [01:38<00:26,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6294[0m
[32m  eval_f1 = 0.2892[0m
[32m  eval_mcc = 0.6089[0m
[32m  eval_precision = 0.4068[0m
[32m  eval_recall = 0.2672[0m
[32m  ********************[0m
[32m  Best f1:0.2892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50284:  79%|███████▊  | 22/28 [01:47<00:33,  5.59s/it]epoch 2 loss 1.50021:  79%|███████▊  | 22/28 [01:48<00:33,  5.59s/it]epoch 2 loss 1.50021:  82%|████████▏ | 23/28 [01:48<00:20,  4.04s/it]epoch 2 loss 1.49418:  82%|████████▏ | 23/28 [01:48<00:20,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6296[0m
[32m  eval_f1 = 0.2924[0m
[32m  eval_mcc = 0.6095[0m
[32m  eval_precision = 0.4145[0m
[32m  eval_recall = 0.2688[0m
[32m  ********************[0m
[32m  Best f1:0.2924[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6095[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49418:  86%|████████▌ | 24/28 [01:57<00:22,  5.51s/it]epoch 2 loss 1.49113:  86%|████████▌ | 24/28 [01:57<00:22,  5.51s/it]epoch 2 loss 1.49113:  89%|████████▉ | 25/28 [01:57<00:12,  4.00s/it]epoch 2 loss 1.48602:  89%|████████▉ | 25/28 [01:58<00:12,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.632[0m
[32m  eval_f1 = 0.2952[0m
[32m  eval_mcc = 0.6119[0m
[32m  eval_precision = 0.4233[0m
[32m  eval_recall = 0.271[0m
[32m  ********************[0m
[32m  Best f1:0.2952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48602:  93%|█████████▎| 26/28 [02:10<00:13,  6.71s/it]epoch 2 loss 1.48749:  93%|█████████▎| 26/28 [02:11<00:13,  6.71s/it]epoch 2 loss 1.48749:  96%|█████████▋| 27/28 [02:11<00:04,  4.85s/it]epoch 2 loss 1.49062:  96%|█████████▋| 27/28 [02:11<00:04,  4.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6365[0m
[32m  eval_f1 = 0.2995[0m
[32m  eval_mcc = 0.6161[0m
[32m  eval_precision = 0.42[0m
[32m  eval_recall = 0.2747[0m
[32m  ********************[0m
[32m  Best f1:0.2995[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49062: 100%|██████████| 28/28 [02:21<00:00,  6.63s/it]epoch 2 loss 1.49062: 100%|██████████| 28/28 [02:21<00:00,  5.07s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.30191:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.30191:   4%|▎         | 1/28 [00:00<00:13,  2.04it/s]epoch 3 loss 1.36785:   4%|▎         | 1/28 [00:00<00:13,  2.04it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6382[0m
[32m  eval_f1 = 0.3029[0m
[32m  eval_mcc = 0.6172[0m
[32m  eval_precision = 0.4135[0m
[32m  eval_recall = 0.2787[0m
[32m  ********************[0m
[32m  Best f1:0.3029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36785:   7%|▋         | 2/28 [00:10<02:43,  6.30s/it]epoch 3 loss 1.40018:   7%|▋         | 2/28 [00:11<02:43,  6.30s/it]epoch 3 loss 1.40018:  11%|█         | 3/28 [00:11<01:31,  3.65s/it]epoch 3 loss 1.3833:  11%|█         | 3/28 [00:11<01:31,  3.65s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6396[0m
[32m  eval_f1 = 0.3047[0m
[32m  eval_mcc = 0.6184[0m
[32m  eval_precision = 0.4161[0m
[32m  eval_recall = 0.281[0m
[32m  ********************[0m
[32m  Best f1:0.3047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3833:  14%|█▍        | 4/28 [00:23<02:48,  7.03s/it]epoch 3 loss 1.35281:  14%|█▍        | 4/28 [00:24<02:48,  7.03s/it]epoch 3 loss 1.35281:  18%|█▊        | 5/28 [00:24<01:47,  4.67s/it]epoch 3 loss 1.36556:  18%|█▊        | 5/28 [00:24<01:47,  4.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6403[0m
[32m  eval_f1 = 0.3074[0m
[32m  eval_mcc = 0.6193[0m
[32m  eval_precision = 0.4231[0m
[32m  eval_recall = 0.2843[0m
[32m  ********************[0m
[32m  Best f1:0.3074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36556:  21%|██▏       | 6/28 [00:36<02:37,  7.16s/it]epoch 3 loss 1.37208:  21%|██▏       | 6/28 [00:36<02:37,  7.16s/it]epoch 3 loss 1.37208:  25%|██▌       | 7/28 [00:36<01:44,  4.96s/it]epoch 3 loss 1.38983:  25%|██▌       | 7/28 [00:36<01:44,  4.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6413[0m
[32m  eval_f1 = 0.3083[0m
[32m  eval_mcc = 0.6206[0m
[32m  eval_precision = 0.4229[0m
[32m  eval_recall = 0.2846[0m
[32m  ********************[0m
[32m  Best f1:0.3083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38983:  29%|██▊       | 8/28 [00:49<02:29,  7.45s/it]epoch 3 loss 1.39378:  29%|██▊       | 8/28 [00:49<02:29,  7.45s/it]epoch 3 loss 1.39378:  32%|███▏      | 9/28 [00:49<01:39,  5.26s/it]epoch 3 loss 1.39235:  32%|███▏      | 9/28 [00:50<01:39,  5.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.3108[0m
[32m  eval_mcc = 0.6224[0m
[32m  eval_precision = 0.4196[0m
[32m  eval_recall = 0.2869[0m
[32m  ********************[0m
[32m  Best f1:0.3108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6224[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39235:  36%|███▌      | 10/28 [00:59<01:59,  6.66s/it]epoch 3 loss 1.38452:  36%|███▌      | 10/28 [00:59<01:59,  6.66s/it]epoch 3 loss 1.38452:  39%|███▉      | 11/28 [00:59<01:20,  4.75s/it]epoch 3 loss 1.38213:  39%|███▉      | 11/28 [01:00<01:20,  4.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6458[0m
[32m  eval_f1 = 0.3114[0m
[32m  eval_mcc = 0.6259[0m
[32m  eval_precision = 0.4229[0m
[32m  eval_recall = 0.2871[0m
[32m  ********************[0m
[32m  Best f1:0.3114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38213:  43%|████▎     | 12/28 [01:09<01:40,  6.31s/it]epoch 3 loss 1.38706:  43%|████▎     | 12/28 [01:10<01:40,  6.31s/it]epoch 3 loss 1.38706:  46%|████▋     | 13/28 [01:10<01:07,  4.52s/it]epoch 3 loss 1.38301:  46%|████▋     | 13/28 [01:10<01:07,  4.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6453[0m
[32m  eval_f1 = 0.3192[0m
[32m  eval_mcc = 0.6257[0m
[32m  eval_precision = 0.4322[0m
[32m  eval_recall = 0.2932[0m
[32m  ********************[0m
[32m  Best f1:0.3192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.38301:  50%|█████     | 14/28 [01:18<01:18,  5.61s/it]epoch 3 loss 1.38169:  50%|█████     | 14/28 [01:18<01:18,  5.61s/it]epoch 3 loss 1.38169:  54%|█████▎    | 15/28 [01:18<00:52,  4.05s/it]epoch 3 loss 1.38378:  54%|█████▎    | 15/28 [01:19<00:52,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6436[0m
[32m  eval_f1 = 0.3178[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.4313[0m
[32m  eval_recall = 0.2923[0m

epoch 3 loss 1.38378:  57%|█████▋    | 16/28 [01:22<00:47,  3.97s/it]epoch 3 loss 1.38822:  57%|█████▋    | 16/28 [01:22<00:47,  3.97s/it]epoch 3 loss 1.38822:  61%|██████    | 17/28 [01:22<00:31,  2.90s/it]epoch 3 loss 1.39545:  61%|██████    | 17/28 [01:23<00:31,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.644[0m
[32m  eval_f1 = 0.317[0m
[32m  eval_mcc = 0.6242[0m
[32m  eval_precision = 0.4303[0m
[32m  eval_recall = 0.2926[0m

epoch 3 loss 1.39545:  64%|██████▍   | 18/28 [01:26<00:31,  3.17s/it]epoch 3 loss 1.38535:  64%|██████▍   | 18/28 [01:27<00:31,  3.17s/it]epoch 3 loss 1.38535:  68%|██████▊   | 19/28 [01:27<00:21,  2.34s/it]epoch 3 loss 1.387:  68%|██████▊   | 19/28 [01:27<00:21,  2.34s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.319[0m
[32m  eval_mcc = 0.6272[0m
[32m  eval_precision = 0.432[0m
[32m  eval_recall = 0.2951[0m
[32m  ********************[0m
[32m  Best MCC:0.6272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.387:  71%|███████▏  | 20/28 [01:35<00:32,  4.09s/it]epoch 3 loss 1.37952:  71%|███████▏  | 20/28 [01:35<00:32,  4.09s/it]epoch 3 loss 1.37952:  75%|███████▌  | 21/28 [01:35<00:20,  2.99s/it]epoch 3 loss 1.37811:  75%|███████▌  | 21/28 [01:36<00:20,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6491[0m
[32m  eval_f1 = 0.3218[0m
[32m  eval_mcc = 0.6293[0m
[32m  eval_precision = 0.4325[0m
[32m  eval_recall = 0.298[0m
[32m  ********************[0m
[32m  Best f1:0.3218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37811:  79%|███████▊  | 22/28 [01:44<00:27,  4.61s/it]epoch 3 loss 1.38001:  79%|███████▊  | 22/28 [01:44<00:27,  4.61s/it]epoch 3 loss 1.38001:  82%|████████▏ | 23/28 [01:44<00:16,  3.35s/it]epoch 3 loss 1.38208:  82%|████████▏ | 23/28 [01:44<00:16,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6505[0m
[32m  eval_f1 = 0.3239[0m
[32m  eval_mcc = 0.631[0m
[32m  eval_precision = 0.4344[0m
[32m  eval_recall = 0.2998[0m
[32m  ********************[0m
[32m  Best f1:0.3239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38208:  86%|████████▌ | 24/28 [01:53<00:19,  4.90s/it]epoch 3 loss 1.38165:  86%|████████▌ | 24/28 [01:53<00:19,  4.90s/it]epoch 3 loss 1.38165:  89%|████████▉ | 25/28 [01:53<00:10,  3.55s/it]epoch 3 loss 1.38051:  89%|████████▉ | 25/28 [01:53<00:10,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6516[0m
[32m  eval_f1 = 0.3258[0m
[32m  eval_mcc = 0.6322[0m
[32m  eval_precision = 0.4352[0m
[32m  eval_recall = 0.3016[0m
[32m  ********************[0m
[32m  Best f1:0.3258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6322[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38051:  93%|█████████▎| 26/28 [02:05<00:11,  5.99s/it]epoch 3 loss 1.37399:  93%|█████████▎| 26/28 [02:05<00:11,  5.99s/it]epoch 3 loss 1.37399:  96%|█████████▋| 27/28 [02:05<00:04,  4.32s/it]epoch 3 loss 1.36667:  96%|█████████▋| 27/28 [02:05<00:04,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6522[0m
[32m  eval_f1 = 0.3257[0m
[32m  eval_mcc = 0.6329[0m
[32m  eval_precision = 0.4364[0m
[32m  eval_recall = 0.3011[0m
[32m  ********************[0m
[32m  Best MCC:0.6329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36667: 100%|██████████| 28/28 [02:13<00:00,  5.41s/it]epoch 3 loss 1.36667: 100%|██████████| 28/28 [02:13<00:00,  4.77s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.28366:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.28366:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s]epoch 4 loss 1.33983:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3278[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4433[0m
[32m  eval_recall = 0.3025[0m
[32m  ********************[0m
[32m  Best f1:0.3278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33983:   7%|▋         | 2/28 [00:13<03:21,  7.75s/it]epoch 4 loss 1.35529:   7%|▋         | 2/28 [00:13<03:21,  7.75s/it]epoch 4 loss 1.35529:  11%|█         | 3/28 [00:13<01:50,  4.41s/it]epoch 4 loss 1.38138:  11%|█         | 3/28 [00:14<01:50,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.652[0m
[32m  eval_f1 = 0.3274[0m
[32m  eval_mcc = 0.6328[0m
[32m  eval_precision = 0.4393[0m
[32m  eval_recall = 0.302[0m

epoch 4 loss 1.38138:  14%|█▍        | 4/28 [00:17<01:39,  4.16s/it]epoch 4 loss 1.34233:  14%|█▍        | 4/28 [00:17<01:39,  4.16s/it]epoch 4 loss 1.34233:  18%|█▊        | 5/28 [00:17<01:04,  2.80s/it]epoch 4 loss 1.322:  18%|█▊        | 5/28 [00:18<01:04,  2.80s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6519[0m
[32m  eval_f1 = 0.3269[0m
[32m  eval_mcc = 0.6327[0m
[32m  eval_precision = 0.4383[0m
[32m  eval_recall = 0.3014[0m

epoch 4 loss 1.322:  21%|██▏       | 6/28 [00:21<01:08,  3.14s/it]epoch 4 loss 1.32927:  21%|██▏       | 6/28 [00:22<01:08,  3.14s/it]epoch 4 loss 1.32927:  25%|██▌       | 7/28 [00:22<00:47,  2.24s/it]epoch 4 loss 1.3365:  25%|██▌       | 7/28 [00:22<00:47,  2.24s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.651[0m
[32m  eval_f1 = 0.3275[0m
[32m  eval_mcc = 0.6316[0m
[32m  eval_precision = 0.4458[0m
[32m  eval_recall = 0.3017[0m

epoch 4 loss 1.3365:  29%|██▊       | 8/28 [00:25<00:54,  2.74s/it]epoch 4 loss 1.32784:  29%|██▊       | 8/28 [00:26<00:54,  2.74s/it]epoch 4 loss 1.32784:  32%|███▏      | 9/28 [00:26<00:38,  2.01s/it]epoch 4 loss 1.32381:  32%|███▏      | 9/28 [00:26<00:38,  2.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6506[0m
[32m  eval_f1 = 0.3292[0m
[32m  eval_mcc = 0.6311[0m
[32m  eval_precision = 0.446[0m
[32m  eval_recall = 0.3031[0m
[32m  ********************[0m
[32m  Best f1:0.3292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.32381:  36%|███▌      | 10/28 [00:34<01:09,  3.83s/it]epoch 4 loss 1.31848:  36%|███▌      | 10/28 [00:34<01:09,  3.83s/it]epoch 4 loss 1.31848:  39%|███▉      | 11/28 [00:34<00:47,  2.79s/it]epoch 4 loss 1.32991:  39%|███▉      | 11/28 [00:35<00:47,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6505[0m
[32m  eval_f1 = 0.3291[0m
[32m  eval_mcc = 0.6308[0m
[32m  eval_precision = 0.4455[0m
[32m  eval_recall = 0.3029[0m

epoch 4 loss 1.32991:  43%|████▎     | 12/28 [00:38<00:49,  3.10s/it]epoch 4 loss 1.33272:  43%|████▎     | 12/28 [00:38<00:49,  3.10s/it]epoch 4 loss 1.33272:  46%|████▋     | 13/28 [00:38<00:34,  2.28s/it]epoch 4 loss 1.33099:  46%|████▋     | 13/28 [00:39<00:34,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.33[0m
[32m  eval_mcc = 0.6312[0m
[32m  eval_precision = 0.4458[0m
[32m  eval_recall = 0.3041[0m
[32m  ********************[0m
[32m  Best f1:0.33[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.33099:  50%|█████     | 14/28 [00:46<00:53,  3.80s/it]epoch 4 loss 1.33576:  50%|█████     | 14/28 [00:46<00:53,  3.80s/it]epoch 4 loss 1.33576:  54%|█████▎    | 15/28 [00:46<00:36,  2.79s/it]epoch 4 loss 1.33731:  54%|█████▎    | 15/28 [00:46<00:36,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6511[0m
[32m  eval_f1 = 0.3301[0m
[32m  eval_mcc = 0.6314[0m
[32m  eval_precision = 0.4458[0m
[32m  eval_recall = 0.3042[0m
[32m  ********************[0m
[32m  Best f1:0.3301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.33731:  57%|█████▋    | 16/28 [00:54<00:50,  4.23s/it]epoch 4 loss 1.3324:  57%|█████▋    | 16/28 [00:54<00:50,  4.23s/it] epoch 4 loss 1.3324:  61%|██████    | 17/28 [00:54<00:33,  3.09s/it]epoch 4 loss 1.33517:  61%|██████    | 17/28 [00:55<00:33,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3305[0m
[32m  eval_mcc = 0.6316[0m
[32m  eval_precision = 0.4458[0m
[32m  eval_recall = 0.3049[0m
[32m  ********************[0m
[32m  Best f1:0.3305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.33517:  64%|██████▍   | 18/28 [01:00<00:39,  3.92s/it]epoch 4 loss 1.33454:  64%|██████▍   | 18/28 [01:00<00:39,  3.92s/it]epoch 4 loss 1.33454:  68%|██████▊   | 19/28 [01:00<00:25,  2.87s/it]epoch 4 loss 1.33543:  68%|██████▊   | 19/28 [01:01<00:25,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6518[0m
[32m  eval_f1 = 0.3306[0m
[32m  eval_mcc = 0.632[0m
[32m  eval_precision = 0.446[0m
[32m  eval_recall = 0.3051[0m
[32m  ********************[0m
[32m  Best f1:0.3306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.33543:  71%|███████▏  | 20/28 [01:06<00:29,  3.72s/it]epoch 4 loss 1.33498:  71%|███████▏  | 20/28 [01:07<00:29,  3.72s/it]epoch 4 loss 1.33498:  75%|███████▌  | 21/28 [01:07<00:19,  2.73s/it]epoch 4 loss 1.33801:  75%|███████▌  | 21/28 [01:07<00:19,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6522[0m
[32m  eval_f1 = 0.3325[0m
[32m  eval_mcc = 0.6325[0m
[32m  eval_precision = 0.4464[0m
[32m  eval_recall = 0.3069[0m
[32m  ********************[0m
[32m  Best f1:0.3325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.33801:  79%|███████▊  | 22/28 [01:12<00:22,  3.68s/it]epoch 4 loss 1.3398:  79%|███████▊  | 22/28 [01:13<00:22,  3.68s/it] epoch 4 loss 1.3398:  82%|████████▏ | 23/28 [01:13<00:13,  2.70s/it]epoch 4 loss 1.33541:  82%|████████▏ | 23/28 [01:13<00:13,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3331[0m
[32m  eval_mcc = 0.6328[0m
[32m  eval_precision = 0.4468[0m
[32m  eval_recall = 0.3076[0m
[32m  ********************[0m
[32m  Best f1:0.3331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.33541:  86%|████████▌ | 24/28 [01:19<00:14,  3.65s/it]epoch 4 loss 1.33194:  86%|████████▌ | 24/28 [01:19<00:14,  3.65s/it]epoch 4 loss 1.33194:  89%|████████▉ | 25/28 [01:19<00:08,  2.68s/it]epoch 4 loss 1.32628:  89%|████████▉ | 25/28 [01:20<00:08,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3334[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.4473[0m
[32m  eval_recall = 0.3079[0m
[32m  ********************[0m
[32m  Best f1:0.3334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.32628:  93%|█████████▎| 26/28 [01:25<00:07,  3.64s/it]epoch 4 loss 1.33176:  93%|█████████▎| 26/28 [01:25<00:07,  3.64s/it]epoch 4 loss 1.33176:  96%|█████████▋| 27/28 [01:25<00:02,  2.68s/it]epoch 4 loss 1.33073:  96%|█████████▋| 27/28 [01:26<00:02,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3334[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4472[0m
[32m  eval_recall = 0.3079[0m
[32m  ********************[0m
[32m  Best f1:0.3334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33073: 100%|██████████| 28/28 [01:33<00:00,  4.26s/it]epoch 4 loss 1.33073: 100%|██████████| 28/28 [01:33<00:00,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.65it/s] 20%|██        | 2/10 [00:00<00:02,  2.71it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3334[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4472[0m
[32m  eval_recall = 0.3079[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6352[0m
[32m  eval_f1 = 0.266[0m
[32m  eval_mcc = 0.6157[0m
[32m  eval_precision = 0.3686[0m
[32m  eval_recall = 0.2493[0m

