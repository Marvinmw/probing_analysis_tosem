[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=5, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.64724:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.64724:   4%|▎         | 1/28 [00:00<00:21,  1.25it/s]epoch 0 loss 5.66251:   4%|▎         | 1/28 [00:01<00:21,  1.25it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0029[0m
[32m  eval_f1 = 0.0004[0m
[32m  eval_mcc = -0.0006[0m
[32m  eval_precision = 0.0013[0m
[32m  eval_recall = 0.0056[0m
[32m  ********************[0m
[32m  Best f1:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.66251:   7%|▋         | 2/28 [00:05<01:24,  3.24s/it]epoch 0 loss 5.64395:   7%|▋         | 2/28 [00:06<01:24,  3.24s/it]epoch 0 loss 5.64395:  11%|█         | 3/28 [00:06<00:48,  1.94s/it]epoch 0 loss 5.63399:  11%|█         | 3/28 [00:06<00:48,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0054[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = -0.0022[0m
[32m  eval_precision = 0.0033[0m
[32m  eval_recall = 0.006[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.63399:  14%|█▍        | 4/28 [00:13<01:35,  3.97s/it]epoch 0 loss 5.61223:  14%|█▍        | 4/28 [00:13<01:35,  3.97s/it]epoch 0 loss 5.61223:  18%|█▊        | 5/28 [00:13<01:01,  2.69s/it]epoch 0 loss 5.58314:  18%|█▊        | 5/28 [00:14<01:01,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0197[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = -0.0009[0m
[32m  eval_precision = 0.0028[0m
[32m  eval_recall = 0.0074[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.58314:  21%|██▏       | 6/28 [00:21<01:39,  4.54s/it]epoch 0 loss 5.54377:  21%|██▏       | 6/28 [00:22<01:39,  4.54s/it]epoch 0 loss 5.54377:  25%|██▌       | 7/28 [00:22<01:07,  3.20s/it]epoch 0 loss 5.49643:  25%|██▌       | 7/28 [00:22<01:07,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0487[0m
[32m  eval_f1 = 0.003[0m
[32m  eval_mcc = 0.0076[0m
[32m  eval_precision = 0.0039[0m
[32m  eval_recall = 0.005[0m
[32m  ********************[0m
[32m  Best f1:0.003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.49643:  29%|██▊       | 8/28 [00:30<01:33,  4.70s/it]epoch 0 loss 5.44546:  29%|██▊       | 8/28 [00:30<01:33,  4.70s/it]epoch 0 loss 5.44546:  32%|███▏      | 9/28 [00:30<01:03,  3.36s/it]epoch 0 loss 5.38815:  32%|███▏      | 9/28 [00:30<01:03,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0749[0m
[32m  eval_f1 = 0.005[0m
[32m  eval_mcc = 0.0242[0m
[32m  eval_precision = 0.0088[0m
[32m  eval_recall = 0.0111[0m
[32m  ********************[0m
[32m  Best f1:0.005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.38815:  36%|███▌      | 10/28 [00:42<01:45,  5.89s/it]epoch 0 loss 5.32781:  36%|███▌      | 10/28 [00:42<01:45,  5.89s/it]epoch 0 loss 5.32781:  39%|███▉      | 11/28 [00:42<01:11,  4.22s/it]epoch 0 loss 5.25882:  39%|███▉      | 11/28 [00:42<01:11,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0881[0m
[32m  eval_f1 = 0.0067[0m
[32m  eval_mcc = 0.0334[0m
[32m  eval_precision = 0.0147[0m
[32m  eval_recall = 0.014[0m
[32m  ********************[0m
[32m  Best f1:0.0067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.25882:  43%|████▎     | 12/28 [00:50<01:24,  5.31s/it]epoch 0 loss 5.18996:  43%|████▎     | 12/28 [00:50<01:24,  5.31s/it]epoch 0 loss 5.18996:  46%|████▋     | 13/28 [00:50<00:57,  3.83s/it]epoch 0 loss 5.11567:  46%|████▋     | 13/28 [00:51<00:57,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1033[0m
[32m  eval_f1 = 0.0086[0m
[32m  eval_mcc = 0.0459[0m
[32m  eval_precision = 0.0171[0m
[32m  eval_recall = 0.0159[0m
[32m  ********************[0m
[32m  Best f1:0.0086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.11567:  50%|█████     | 14/28 [00:58<01:08,  4.90s/it]epoch 0 loss 5.03882:  50%|█████     | 14/28 [00:58<01:08,  4.90s/it]epoch 0 loss 5.03882:  54%|█████▎    | 15/28 [00:58<00:46,  3.55s/it]epoch 0 loss 4.95966:  54%|█████▎    | 15/28 [00:58<00:46,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1194[0m
[32m  eval_f1 = 0.0101[0m
[32m  eval_mcc = 0.0593[0m
[32m  eval_precision = 0.0279[0m
[32m  eval_recall = 0.0152[0m
[32m  ********************[0m
[32m  Best f1:0.0101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.95966:  57%|█████▋    | 16/28 [01:08<01:05,  5.50s/it]epoch 0 loss 4.88137:  57%|█████▋    | 16/28 [01:08<01:05,  5.50s/it]epoch 0 loss 4.88137:  61%|██████    | 17/28 [01:08<00:43,  3.97s/it]epoch 0 loss 4.80577:  61%|██████    | 17/28 [01:09<00:43,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.58it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.53it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.54it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.51it/s][A
 50%|█████     | 5/10 [00:01<00:02,  2.48it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.46it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.45it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.44it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.43it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.17it/s][A100%|██████████| 10/10 [00:03<00:00,  2.67it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1531[0m
[32m  eval_f1 = 0.0136[0m
[32m  eval_mcc = 0.0962[0m
[32m  eval_precision = 0.0361[0m
[32m  eval_recall = 0.0182[0m
[32m  ********************[0m
[32m  Best f1:0.0136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0962[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.80577:  64%|██████▍   | 18/28 [01:17<00:52,  5.29s/it]epoch 0 loss 4.7312:  64%|██████▍   | 18/28 [01:17<00:52,  5.29s/it] epoch 0 loss 4.7312:  68%|██████▊   | 19/28 [01:17<00:34,  3.85s/it]epoch 0 loss 4.66372:  68%|██████▊   | 19/28 [01:18<00:34,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2202[0m
[32m  eval_f1 = 0.0195[0m
[32m  eval_mcc = 0.1648[0m
[32m  eval_precision = 0.0417[0m
[32m  eval_recall = 0.0245[0m
[32m  ********************[0m
[32m  Best f1:0.0195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.66372:  71%|███████▏  | 20/28 [01:28<00:45,  5.74s/it]epoch 0 loss 4.59554:  71%|███████▏  | 20/28 [01:28<00:45,  5.74s/it]epoch 0 loss 4.59554:  75%|███████▌  | 21/28 [01:28<00:29,  4.16s/it]epoch 0 loss 4.52382:  75%|███████▌  | 21/28 [01:28<00:29,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2863[0m
[32m  eval_f1 = 0.0283[0m
[32m  eval_mcc = 0.23[0m
[32m  eval_precision = 0.0647[0m
[32m  eval_recall = 0.0336[0m
[32m  ********************[0m
[32m  Best f1:0.0283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.23[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.52382:  79%|███████▊  | 22/28 [01:37<00:33,  5.60s/it]epoch 0 loss 4.46012:  79%|███████▊  | 22/28 [01:37<00:33,  5.60s/it]epoch 0 loss 4.46012:  82%|████████▏ | 23/28 [01:37<00:20,  4.07s/it]epoch 0 loss 4.39738:  82%|████████▏ | 23/28 [01:38<00:20,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3446[0m
[32m  eval_f1 = 0.0668[0m
[32m  eval_mcc = 0.2968[0m
[32m  eval_precision = 0.1123[0m
[32m  eval_recall = 0.0652[0m
[32m  ********************[0m
[32m  Best f1:0.0668[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2968[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.39738:  86%|████████▌ | 24/28 [01:48<00:24,  6.02s/it]epoch 0 loss 4.3366:  86%|████████▌ | 24/28 [01:48<00:24,  6.02s/it] epoch 0 loss 4.3366:  89%|████████▉ | 25/28 [01:48<00:13,  4.35s/it]epoch 0 loss 4.26971:  89%|████████▉ | 25/28 [01:49<00:13,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3835[0m
[32m  eval_f1 = 0.0858[0m
[32m  eval_mcc = 0.3448[0m
[32m  eval_precision = 0.1407[0m
[32m  eval_recall = 0.0793[0m
[32m  ********************[0m
[32m  Best f1:0.0858[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.26971:  93%|█████████▎| 26/28 [01:59<00:12,  6.12s/it]epoch 0 loss 4.20809:  93%|█████████▎| 26/28 [01:59<00:12,  6.12s/it]epoch 0 loss 4.20809:  96%|█████████▋| 27/28 [01:59<00:04,  4.41s/it]epoch 0 loss 4.15277:  96%|█████████▋| 27/28 [01:59<00:04,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4403[0m
[32m  eval_f1 = 0.1156[0m
[32m  eval_mcc = 0.4103[0m
[32m  eval_precision = 0.1645[0m
[32m  eval_recall = 0.1036[0m
[32m  ********************[0m
[32m  Best f1:0.1156[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.15277: 100%|██████████| 28/28 [02:11<00:00,  6.63s/it]epoch 0 loss 4.15277: 100%|██████████| 28/28 [02:11<00:00,  4.69s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.47528:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.47528:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s]epoch 1 loss 2.37465:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.496[0m
[32m  eval_f1 = 0.1377[0m
[32m  eval_mcc = 0.4682[0m
[32m  eval_precision = 0.1717[0m
[32m  eval_recall = 0.1304[0m
[32m  ********************[0m
[32m  Best f1:0.1377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4682[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.37465:   7%|▋         | 2/28 [00:06<01:35,  3.66s/it]epoch 1 loss 2.30679:   7%|▋         | 2/28 [00:06<01:35,  3.66s/it]epoch 1 loss 2.30679:  11%|█         | 3/28 [00:06<00:54,  2.19s/it]epoch 1 loss 2.28319:  11%|█         | 3/28 [00:07<00:54,  2.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5327[0m
[32m  eval_f1 = 0.1514[0m
[32m  eval_mcc = 0.5046[0m
[32m  eval_precision = 0.2072[0m
[32m  eval_recall = 0.1477[0m
[32m  ********************[0m
[32m  Best f1:0.1514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.28319:  14%|█▍        | 4/28 [00:14<01:47,  4.47s/it]epoch 1 loss 2.26695:  14%|█▍        | 4/28 [00:15<01:47,  4.47s/it]epoch 1 loss 2.26695:  18%|█▊        | 5/28 [00:15<01:09,  3.02s/it]epoch 1 loss 2.24044:  18%|█▊        | 5/28 [00:15<01:09,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5537[0m
[32m  eval_f1 = 0.1741[0m
[32m  eval_mcc = 0.5262[0m
[32m  eval_precision = 0.2143[0m
[32m  eval_recall = 0.1685[0m
[32m  ********************[0m
[32m  Best f1:0.1741[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.24044:  21%|██▏       | 6/28 [00:28<02:19,  6.34s/it]epoch 1 loss 2.21297:  21%|██▏       | 6/28 [00:28<02:19,  6.34s/it]epoch 1 loss 2.21297:  25%|██▌       | 7/28 [00:28<01:32,  4.41s/it]epoch 1 loss 2.1926:  25%|██▌       | 7/28 [00:28<01:32,  4.41s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5665[0m
[32m  eval_f1 = 0.1796[0m
[32m  eval_mcc = 0.54[0m
[32m  eval_precision = 0.2121[0m
[32m  eval_recall = 0.1746[0m
[32m  ********************[0m
[32m  Best f1:0.1796[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.54[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1926:  29%|██▊       | 8/28 [00:41<02:24,  7.22s/it]epoch 1 loss 2.18663:  29%|██▊       | 8/28 [00:42<02:24,  7.22s/it]epoch 1 loss 2.18663:  32%|███▏      | 9/28 [00:42<01:36,  5.10s/it]epoch 1 loss 2.16519:  32%|███▏      | 9/28 [00:42<01:36,  5.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5761[0m
[32m  eval_f1 = 0.1822[0m
[32m  eval_mcc = 0.5513[0m
[32m  eval_precision = 0.2165[0m
[32m  eval_recall = 0.1755[0m
[32m  ********************[0m
[32m  Best f1:0.1822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16519:  36%|███▌      | 10/28 [00:55<02:17,  7.64s/it]epoch 1 loss 2.14235:  36%|███▌      | 10/28 [00:55<02:17,  7.64s/it]epoch 1 loss 2.14235:  39%|███▉      | 11/28 [00:55<01:32,  5.43s/it]epoch 1 loss 2.1126:  39%|███▉      | 11/28 [00:56<01:32,  5.43s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.579[0m
[32m  eval_f1 = 0.1866[0m
[32m  eval_mcc = 0.5563[0m
[32m  eval_precision = 0.2466[0m
[32m  eval_recall = 0.1767[0m
[32m  ********************[0m
[32m  Best f1:0.1866[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1126:  43%|████▎     | 12/28 [01:08<02:03,  7.73s/it]epoch 1 loss 2.08715:  43%|████▎     | 12/28 [01:09<02:03,  7.73s/it]epoch 1 loss 2.08715:  46%|████▋     | 13/28 [01:09<01:22,  5.52s/it]epoch 1 loss 2.07188:  46%|████▋     | 13/28 [01:09<01:22,  5.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5821[0m
[32m  eval_f1 = 0.1904[0m
[32m  eval_mcc = 0.5604[0m
[32m  eval_precision = 0.2562[0m
[32m  eval_recall = 0.1801[0m
[32m  ********************[0m
[32m  Best f1:0.1904[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07188:  50%|█████     | 14/28 [01:17<01:29,  6.37s/it]epoch 1 loss 2.05067:  50%|█████     | 14/28 [01:18<01:29,  6.37s/it]epoch 1 loss 2.05067:  54%|█████▎    | 15/28 [01:18<00:59,  4.58s/it]epoch 1 loss 2.03604:  54%|█████▎    | 15/28 [01:18<00:59,  4.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5864[0m
[32m  eval_f1 = 0.1964[0m
[32m  eval_mcc = 0.5654[0m
[32m  eval_precision = 0.2719[0m
[32m  eval_recall = 0.1863[0m
[32m  ********************[0m
[32m  Best f1:0.1964[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03604:  57%|█████▋    | 16/28 [01:26<01:07,  5.63s/it]epoch 1 loss 2.01347:  57%|█████▋    | 16/28 [01:26<01:07,  5.63s/it]epoch 1 loss 2.01347:  61%|██████    | 17/28 [01:26<00:44,  4.06s/it]epoch 1 loss 1.99437:  61%|██████    | 17/28 [01:26<00:44,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5921[0m
[32m  eval_f1 = 0.2139[0m
[32m  eval_mcc = 0.5722[0m
[32m  eval_precision = 0.3043[0m
[32m  eval_recall = 0.2013[0m
[32m  ********************[0m
[32m  Best f1:0.2139[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5722[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99437:  64%|██████▍   | 18/28 [01:33<00:50,  5.09s/it]epoch 1 loss 1.97194:  64%|██████▍   | 18/28 [01:34<00:50,  5.09s/it]epoch 1 loss 1.97194:  68%|██████▊   | 19/28 [01:34<00:33,  3.69s/it]epoch 1 loss 1.97212:  68%|██████▊   | 19/28 [01:34<00:33,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5974[0m
[32m  eval_f1 = 0.2193[0m
[32m  eval_mcc = 0.5782[0m
[32m  eval_precision = 0.3219[0m
[32m  eval_recall = 0.2054[0m
[32m  ********************[0m
[32m  Best f1:0.2193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5782[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97212:  71%|███████▏  | 20/28 [01:44<00:45,  5.64s/it]epoch 1 loss 1.95735:  71%|███████▏  | 20/28 [01:45<00:45,  5.64s/it]epoch 1 loss 1.95735:  75%|███████▌  | 21/28 [01:45<00:28,  4.08s/it]epoch 1 loss 1.9437:  75%|███████▌  | 21/28 [01:45<00:28,  4.08s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6028[0m
[32m  eval_f1 = 0.2303[0m
[32m  eval_mcc = 0.582[0m
[32m  eval_precision = 0.3289[0m
[32m  eval_recall = 0.2148[0m
[32m  ********************[0m
[32m  Best f1:0.2303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9437:  79%|███████▊  | 22/28 [01:55<00:36,  6.08s/it]epoch 1 loss 1.92601:  79%|███████▊  | 22/28 [01:56<00:36,  6.08s/it]epoch 1 loss 1.92601:  82%|████████▏ | 23/28 [01:56<00:21,  4.38s/it]epoch 1 loss 1.91251:  82%|████████▏ | 23/28 [01:56<00:21,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6058[0m
[32m  eval_f1 = 0.2391[0m
[32m  eval_mcc = 0.5829[0m
[32m  eval_precision = 0.3404[0m
[32m  eval_recall = 0.222[0m
[32m  ********************[0m
[32m  Best f1:0.2391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91251:  86%|████████▌ | 24/28 [02:09<00:27,  6.91s/it]epoch 1 loss 1.8963:  86%|████████▌ | 24/28 [02:09<00:27,  6.91s/it] epoch 1 loss 1.8963:  89%|████████▉ | 25/28 [02:09<00:14,  4.96s/it]epoch 1 loss 1.88319:  89%|████████▉ | 25/28 [02:09<00:14,  4.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6083[0m
[32m  eval_f1 = 0.2531[0m
[32m  eval_mcc = 0.5849[0m
[32m  eval_precision = 0.3526[0m
[32m  eval_recall = 0.2351[0m
[32m  ********************[0m
[32m  Best f1:0.2531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5849[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88319:  93%|█████████▎| 26/28 [02:17<00:12,  6.04s/it]epoch 1 loss 1.87084:  93%|█████████▎| 26/28 [02:18<00:12,  6.04s/it]epoch 1 loss 1.87084:  96%|█████████▋| 27/28 [02:18<00:04,  4.36s/it]epoch 1 loss 1.859:  96%|█████████▋| 27/28 [02:18<00:04,  4.36s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6108[0m
[32m  eval_f1 = 0.2597[0m
[32m  eval_mcc = 0.5876[0m
[32m  eval_precision = 0.3501[0m
[32m  eval_recall = 0.241[0m
[32m  ********************[0m
[32m  Best f1:0.2597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5876[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.859: 100%|██████████| 28/28 [02:27<00:00,  5.88s/it]epoch 1 loss 1.859: 100%|██████████| 28/28 [02:27<00:00,  5.28s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.33971:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.33971:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.46135:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6186[0m
[32m  eval_f1 = 0.2652[0m
[32m  eval_mcc = 0.5961[0m
[32m  eval_precision = 0.3573[0m
[32m  eval_recall = 0.2462[0m
[32m  ********************[0m
[32m  Best f1:0.2652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5961[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46135:   7%|▋         | 2/28 [00:12<03:07,  7.22s/it]epoch 2 loss 1.45975:   7%|▋         | 2/28 [00:12<03:07,  7.22s/it]epoch 2 loss 1.45975:  11%|█         | 3/28 [00:12<01:43,  4.12s/it]epoch 2 loss 1.45214:  11%|█         | 3/28 [00:13<01:43,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6229[0m
[32m  eval_f1 = 0.2696[0m
[32m  eval_mcc = 0.6013[0m
[32m  eval_precision = 0.3589[0m
[32m  eval_recall = 0.2521[0m
[32m  ********************[0m
[32m  Best f1:0.2696[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45214:  14%|█▍        | 4/28 [00:25<02:59,  7.46s/it]epoch 2 loss 1.44844:  14%|█▍        | 4/28 [00:25<02:59,  7.46s/it]epoch 2 loss 1.44844:  18%|█▊        | 5/28 [00:25<01:53,  4.93s/it]epoch 2 loss 1.46887:  18%|█▊        | 5/28 [00:26<01:53,  4.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6243[0m
[32m  eval_f1 = 0.2703[0m
[32m  eval_mcc = 0.6039[0m
[32m  eval_precision = 0.3555[0m
[32m  eval_recall = 0.2525[0m
[32m  ********************[0m
[32m  Best f1:0.2703[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46887:  21%|██▏       | 6/28 [00:33<02:12,  6.01s/it]epoch 2 loss 1.51271:  21%|██▏       | 6/28 [00:34<02:12,  6.01s/it]epoch 2 loss 1.51271:  25%|██▌       | 7/28 [00:34<01:27,  4.19s/it]epoch 2 loss 1.50837:  25%|██▌       | 7/28 [00:34<01:27,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.626[0m
[32m  eval_f1 = 0.2788[0m
[32m  eval_mcc = 0.607[0m
[32m  eval_precision = 0.3754[0m
[32m  eval_recall = 0.2585[0m
[32m  ********************[0m
[32m  Best f1:0.2788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50837:  29%|██▊       | 8/28 [00:44<02:01,  6.10s/it]epoch 2 loss 1.51083:  29%|██▊       | 8/28 [00:45<02:01,  6.10s/it]epoch 2 loss 1.51083:  32%|███▏      | 9/28 [00:45<01:22,  4.32s/it]epoch 2 loss 1.50035:  32%|███▏      | 9/28 [00:45<01:22,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6295[0m
[32m  eval_f1 = 0.2884[0m
[32m  eval_mcc = 0.6108[0m
[32m  eval_precision = 0.3951[0m
[32m  eval_recall = 0.2661[0m
[32m  ********************[0m
[32m  Best f1:0.2884[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50035:  36%|███▌      | 10/28 [00:55<01:49,  6.11s/it]epoch 2 loss 1.47872:  36%|███▌      | 10/28 [00:55<01:49,  6.11s/it]epoch 2 loss 1.47872:  39%|███▉      | 11/28 [00:55<01:14,  4.39s/it]epoch 2 loss 1.47879:  39%|███▉      | 11/28 [00:56<01:14,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6348[0m
[32m  eval_f1 = 0.2924[0m
[32m  eval_mcc = 0.6151[0m
[32m  eval_precision = 0.3908[0m
[32m  eval_recall = 0.2717[0m
[32m  ********************[0m
[32m  Best f1:0.2924[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47879:  43%|████▎     | 12/28 [01:07<01:46,  6.63s/it]epoch 2 loss 1.46906:  43%|████▎     | 12/28 [01:07<01:46,  6.63s/it]epoch 2 loss 1.46906:  46%|████▋     | 13/28 [01:07<01:11,  4.77s/it]epoch 2 loss 1.46003:  46%|████▋     | 13/28 [01:08<01:11,  4.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6359[0m
[32m  eval_f1 = 0.2971[0m
[32m  eval_mcc = 0.6153[0m
[32m  eval_precision = 0.3952[0m
[32m  eval_recall = 0.2762[0m
[32m  ********************[0m
[32m  Best f1:0.2971[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46003:  50%|█████     | 14/28 [01:19<01:33,  6.71s/it]epoch 2 loss 1.46895:  50%|█████     | 14/28 [01:19<01:33,  6.71s/it]epoch 2 loss 1.46895:  54%|█████▎    | 15/28 [01:19<01:02,  4.83s/it]epoch 2 loss 1.45675:  54%|█████▎    | 15/28 [01:19<01:02,  4.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6378[0m
[32m  eval_f1 = 0.306[0m
[32m  eval_mcc = 0.6169[0m
[32m  eval_precision = 0.406[0m
[32m  eval_recall = 0.2838[0m
[32m  ********************[0m
[32m  Best f1:0.306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45675:  57%|█████▋    | 16/28 [01:27<01:10,  5.86s/it]epoch 2 loss 1.44988:  57%|█████▋    | 16/28 [01:28<01:10,  5.86s/it]epoch 2 loss 1.44988:  61%|██████    | 17/28 [01:28<00:46,  4.24s/it]epoch 2 loss 1.43987:  61%|██████    | 17/28 [01:28<00:46,  4.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.43it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.43it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.43it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.3093[0m
[32m  eval_mcc = 0.6185[0m
[32m  eval_precision = 0.4064[0m
[32m  eval_recall = 0.2869[0m
[32m  ********************[0m
[32m  Best f1:0.3093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43987:  64%|██████▍   | 18/28 [01:37<00:57,  5.79s/it]epoch 2 loss 1.44052:  64%|██████▍   | 18/28 [01:38<00:57,  5.79s/it]epoch 2 loss 1.44052:  68%|██████▊   | 19/28 [01:38<00:37,  4.20s/it]epoch 2 loss 1.43801:  68%|██████▊   | 19/28 [01:38<00:37,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6412[0m
[32m  eval_f1 = 0.312[0m
[32m  eval_mcc = 0.6211[0m
[32m  eval_precision = 0.4168[0m
[32m  eval_recall = 0.2883[0m
[32m  ********************[0m
[32m  Best f1:0.312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43801:  71%|███████▏  | 20/28 [01:44<00:37,  4.74s/it]epoch 2 loss 1.43148:  71%|███████▏  | 20/28 [01:44<00:37,  4.74s/it]epoch 2 loss 1.43148:  75%|███████▌  | 21/28 [01:44<00:24,  3.44s/it]epoch 2 loss 1.43416:  75%|███████▌  | 21/28 [01:44<00:24,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.54it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.67it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6405[0m
[32m  eval_f1 = 0.313[0m
[32m  eval_mcc = 0.6208[0m
[32m  eval_precision = 0.4193[0m
[32m  eval_recall = 0.2891[0m
[32m  ********************[0m
[32m  Best f1:0.313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.43416:  79%|███████▊  | 22/28 [01:53<00:31,  5.19s/it]epoch 2 loss 1.43168:  79%|███████▊  | 22/28 [01:54<00:31,  5.19s/it]epoch 2 loss 1.43168:  82%|████████▏ | 23/28 [01:54<00:18,  3.76s/it]epoch 2 loss 1.42567:  82%|████████▏ | 23/28 [01:54<00:18,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.64[0m
[32m  eval_f1 = 0.3146[0m
[32m  eval_mcc = 0.6207[0m
[32m  eval_precision = 0.4466[0m
[32m  eval_recall = 0.2887[0m
[32m  ********************[0m
[32m  Best f1:0.3146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.42567:  86%|████████▌ | 24/28 [02:00<00:18,  4.63s/it]epoch 2 loss 1.42298:  86%|████████▌ | 24/28 [02:01<00:18,  4.63s/it]epoch 2 loss 1.42298:  89%|████████▉ | 25/28 [02:01<00:10,  3.37s/it]epoch 2 loss 1.41794:  89%|████████▉ | 25/28 [02:01<00:10,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.3203[0m
[32m  eval_mcc = 0.6236[0m
[32m  eval_precision = 0.4496[0m
[32m  eval_recall = 0.2921[0m
[32m  ********************[0m
[32m  Best f1:0.3203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41794:  93%|█████████▎| 26/28 [02:11<00:10,  5.48s/it]epoch 2 loss 1.41962:  93%|█████████▎| 26/28 [02:12<00:10,  5.48s/it]epoch 2 loss 1.41962:  96%|█████████▋| 27/28 [02:12<00:03,  3.96s/it]epoch 2 loss 1.42268:  96%|█████████▋| 27/28 [02:12<00:03,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6447[0m
[32m  eval_f1 = 0.3239[0m
[32m  eval_mcc = 0.6253[0m
[32m  eval_precision = 0.448[0m
[32m  eval_recall = 0.295[0m
[32m  ********************[0m
[32m  Best f1:0.3239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42268: 100%|██████████| 28/28 [02:24<00:00,  6.40s/it]epoch 2 loss 1.42268: 100%|██████████| 28/28 [02:24<00:00,  5.15s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.23485:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.23485:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s]epoch 3 loss 1.30517:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6479[0m
[32m  eval_f1 = 0.3252[0m
[32m  eval_mcc = 0.6279[0m
[32m  eval_precision = 0.4448[0m
[32m  eval_recall = 0.2975[0m
[32m  ********************[0m
[32m  Best f1:0.3252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30517:   7%|▋         | 2/28 [00:13<03:24,  7.86s/it]epoch 3 loss 1.33619:   7%|▋         | 2/28 [00:13<03:24,  7.86s/it]epoch 3 loss 1.33619:  11%|█         | 3/28 [00:13<01:51,  4.47s/it]epoch 3 loss 1.32002:  11%|█         | 3/28 [00:14<01:51,  4.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6499[0m
[32m  eval_f1 = 0.3275[0m
[32m  eval_mcc = 0.6296[0m
[32m  eval_precision = 0.443[0m
[32m  eval_recall = 0.3007[0m
[32m  ********************[0m
[32m  Best f1:0.3275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32002:  14%|█▍        | 4/28 [00:22<02:24,  6.04s/it]epoch 3 loss 1.29077:  14%|█▍        | 4/28 [00:22<02:24,  6.04s/it]epoch 3 loss 1.29077:  18%|█▊        | 5/28 [00:22<01:32,  4.02s/it]epoch 3 loss 1.3024:  18%|█▊        | 5/28 [00:23<01:32,  4.02s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.651[0m
[32m  eval_f1 = 0.3245[0m
[32m  eval_mcc = 0.6307[0m
[32m  eval_precision = 0.4401[0m
[32m  eval_recall = 0.2984[0m
[32m  ********************[0m
[32m  Best MCC:0.6307[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3024:  21%|██▏       | 6/28 [00:28<01:42,  4.67s/it]epoch 3 loss 1.3106:  21%|██▏       | 6/28 [00:29<01:42,  4.67s/it]epoch 3 loss 1.3106:  25%|██▌       | 7/28 [00:29<01:08,  3.28s/it]epoch 3 loss 1.32797:  25%|██▌       | 7/28 [00:29<01:08,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.3299[0m
[32m  eval_mcc = 0.6327[0m
[32m  eval_precision = 0.4538[0m
[32m  eval_recall = 0.3026[0m
[32m  ********************[0m
[32m  Best f1:0.3299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32797:  29%|██▊       | 8/28 [00:38<01:44,  5.20s/it]epoch 3 loss 1.33129:  29%|██▊       | 8/28 [00:38<01:44,  5.20s/it]epoch 3 loss 1.33129:  32%|███▏      | 9/28 [00:38<01:10,  3.72s/it]epoch 3 loss 1.33029:  32%|███▏      | 9/28 [00:39<01:10,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6541[0m
[32m  eval_f1 = 0.3348[0m
[32m  eval_mcc = 0.6345[0m
[32m  eval_precision = 0.4563[0m
[32m  eval_recall = 0.3074[0m
[32m  ********************[0m
[32m  Best f1:0.3348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33029:  36%|███▌      | 10/28 [00:51<01:54,  6.39s/it]epoch 3 loss 1.32232:  36%|███▌      | 10/28 [00:51<01:54,  6.39s/it]epoch 3 loss 1.32232:  39%|███▉      | 11/28 [00:51<01:17,  4.56s/it]epoch 3 loss 1.32025:  39%|███▉      | 11/28 [00:52<01:17,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6543[0m
[32m  eval_f1 = 0.3351[0m
[32m  eval_mcc = 0.6349[0m
[32m  eval_precision = 0.4557[0m
[32m  eval_recall = 0.3077[0m
[32m  ********************[0m
[32m  Best f1:0.3351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32025:  43%|████▎     | 12/28 [01:04<01:52,  7.03s/it]epoch 3 loss 1.32518:  43%|████▎     | 12/28 [01:04<01:52,  7.03s/it]epoch 3 loss 1.32518:  46%|████▋     | 13/28 [01:04<01:15,  5.03s/it]epoch 3 loss 1.32092:  46%|████▋     | 13/28 [01:05<01:15,  5.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6543[0m
[32m  eval_f1 = 0.3351[0m
[32m  eval_mcc = 0.6351[0m
[32m  eval_precision = 0.4528[0m
[32m  eval_recall = 0.3077[0m
[32m  ********************[0m
[32m  Best f1:0.3351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32092:  50%|█████     | 14/28 [01:17<01:41,  7.27s/it]epoch 3 loss 1.32017:  50%|█████     | 14/28 [01:17<01:41,  7.27s/it]epoch 3 loss 1.32017:  54%|█████▎    | 15/28 [01:17<01:07,  5.21s/it]epoch 3 loss 1.32212:  54%|█████▎    | 15/28 [01:18<01:07,  5.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3351[0m
[32m  eval_mcc = 0.6339[0m
[32m  eval_precision = 0.4516[0m
[32m  eval_recall = 0.3074[0m

epoch 3 loss 1.32212:  57%|█████▋    | 16/28 [01:21<00:57,  4.78s/it]epoch 3 loss 1.32622:  57%|█████▋    | 16/28 [01:21<00:57,  4.78s/it]epoch 3 loss 1.32622:  61%|██████    | 17/28 [01:21<00:38,  3.46s/it]epoch 3 loss 1.33295:  61%|██████    | 17/28 [01:22<00:38,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6532[0m
[32m  eval_f1 = 0.3367[0m
[32m  eval_mcc = 0.6341[0m
[32m  eval_precision = 0.4516[0m
[32m  eval_recall = 0.3091[0m
[32m  ********************[0m
[32m  Best f1:0.3367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.33295:  64%|██████▍   | 18/28 [01:29<00:48,  4.83s/it]epoch 3 loss 1.32327:  64%|██████▍   | 18/28 [01:30<00:48,  4.83s/it]epoch 3 loss 1.32327:  68%|██████▊   | 19/28 [01:30<00:31,  3.50s/it]epoch 3 loss 1.32492:  68%|██████▊   | 19/28 [01:30<00:31,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6549[0m
[32m  eval_f1 = 0.3371[0m
[32m  eval_mcc = 0.6358[0m
[32m  eval_precision = 0.4506[0m
[32m  eval_recall = 0.3103[0m
[32m  ********************[0m
[32m  Best f1:0.3371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32492:  71%|███████▏  | 20/28 [01:40<00:43,  5.44s/it]epoch 3 loss 1.3178:  71%|███████▏  | 20/28 [01:40<00:43,  5.44s/it] epoch 3 loss 1.3178:  75%|███████▌  | 21/28 [01:40<00:27,  3.94s/it]epoch 3 loss 1.31686:  75%|███████▌  | 21/28 [01:41<00:27,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3385[0m
[32m  eval_mcc = 0.6379[0m
[32m  eval_precision = 0.4506[0m
[32m  eval_recall = 0.3125[0m
[32m  ********************[0m
[32m  Best f1:0.3385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6379[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31686:  79%|███████▊  | 22/28 [01:52<00:37,  6.19s/it]epoch 3 loss 1.31907:  79%|███████▊  | 22/28 [01:52<00:37,  6.19s/it]epoch 3 loss 1.31907:  82%|████████▏ | 23/28 [01:52<00:22,  4.47s/it]epoch 3 loss 1.32149:  82%|████████▏ | 23/28 [01:52<00:22,  4.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6586[0m
[32m  eval_f1 = 0.3409[0m
[32m  eval_mcc = 0.6399[0m
[32m  eval_precision = 0.4571[0m
[32m  eval_recall = 0.3145[0m
[32m  ********************[0m
[32m  Best f1:0.3409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32149:  86%|████████▌ | 24/28 [02:00<00:22,  5.53s/it]epoch 3 loss 1.32091:  86%|████████▌ | 24/28 [02:01<00:22,  5.53s/it]epoch 3 loss 1.32091:  89%|████████▉ | 25/28 [02:01<00:11,  3.99s/it]epoch 3 loss 1.31988:  89%|████████▉ | 25/28 [02:01<00:11,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6602[0m
[32m  eval_f1 = 0.3425[0m
[32m  eval_mcc = 0.6417[0m
[32m  eval_precision = 0.4579[0m
[32m  eval_recall = 0.3158[0m
[32m  ********************[0m
[32m  Best f1:0.3425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31988:  93%|█████████▎| 26/28 [02:08<00:10,  5.18s/it]epoch 3 loss 1.31351:  93%|█████████▎| 26/28 [02:09<00:10,  5.18s/it]epoch 3 loss 1.31351:  96%|█████████▋| 27/28 [02:09<00:03,  3.76s/it]epoch 3 loss 1.30664:  96%|█████████▋| 27/28 [02:09<00:03,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6609[0m
[32m  eval_f1 = 0.3437[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.4599[0m
[32m  eval_recall = 0.3163[0m
[32m  ********************[0m
[32m  Best f1:0.3437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30664: 100%|██████████| 28/28 [02:17<00:00,  5.02s/it]epoch 3 loss 1.30664: 100%|██████████| 28/28 [02:17<00:00,  4.91s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.22842:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.22842:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 4 loss 1.28716:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6608[0m
[32m  eval_f1 = 0.3438[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.4583[0m
[32m  eval_recall = 0.3163[0m
[32m  ********************[0m
[32m  Best f1:0.3438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28716:   7%|▋         | 2/28 [00:09<02:20,  5.41s/it]epoch 4 loss 1.29806:   7%|▋         | 2/28 [00:09<02:20,  5.41s/it]epoch 4 loss 1.29806:  11%|█         | 3/28 [00:09<01:18,  3.14s/it]epoch 4 loss 1.32305:  11%|█         | 3/28 [00:10<01:18,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6612[0m
[32m  eval_f1 = 0.3435[0m
[32m  eval_mcc = 0.6429[0m
[32m  eval_precision = 0.4572[0m
[32m  eval_recall = 0.3161[0m
[32m  ********************[0m
[32m  Best MCC:0.6429[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32305:  14%|█▍        | 4/28 [00:15<01:42,  4.29s/it]epoch 4 loss 1.2869:  14%|█▍        | 4/28 [00:16<01:42,  4.29s/it] epoch 4 loss 1.2869:  18%|█▊        | 5/28 [00:16<01:06,  2.89s/it]epoch 4 loss 1.26758:  18%|█▊        | 5/28 [00:16<01:06,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3443[0m
[32m  eval_mcc = 0.643[0m
[32m  eval_precision = 0.457[0m
[32m  eval_recall = 0.3166[0m
[32m  ********************[0m
[32m  Best f1:0.3443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26758:  21%|██▏       | 6/28 [00:27<02:05,  5.69s/it]epoch 4 loss 1.27345:  21%|██▏       | 6/28 [00:27<02:05,  5.69s/it]epoch 4 loss 1.27345:  25%|██▌       | 7/28 [00:27<01:23,  3.98s/it]epoch 4 loss 1.2801:  25%|██▌       | 7/28 [00:28<01:23,  3.98s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.53it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.47it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.44it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.43it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.43it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6608[0m
[32m  eval_f1 = 0.3429[0m
[32m  eval_mcc = 0.6423[0m
[32m  eval_precision = 0.4566[0m
[32m  eval_recall = 0.3154[0m

epoch 4 loss 1.2801:  29%|██▊       | 8/28 [00:32<01:21,  4.08s/it]epoch 4 loss 1.27185:  29%|██▊       | 8/28 [00:32<01:21,  4.08s/it]epoch 4 loss 1.27185:  32%|███▏      | 9/28 [00:32<00:56,  2.95s/it]epoch 4 loss 1.26744:  32%|███▏      | 9/28 [00:33<00:56,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6601[0m
[32m  eval_f1 = 0.3429[0m
[32m  eval_mcc = 0.6413[0m
[32m  eval_precision = 0.4537[0m
[32m  eval_recall = 0.3156[0m

epoch 4 loss 1.26744:  36%|███▌      | 10/28 [00:36<01:00,  3.38s/it]epoch 4 loss 1.26245:  36%|███▌      | 10/28 [00:37<01:00,  3.38s/it]epoch 4 loss 1.26245:  39%|███▉      | 11/28 [00:37<00:42,  2.49s/it]epoch 4 loss 1.27303:  39%|███▉      | 11/28 [00:37<00:42,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.40it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6598[0m
[32m  eval_f1 = 0.343[0m
[32m  eval_mcc = 0.6409[0m
[32m  eval_precision = 0.4547[0m
[32m  eval_recall = 0.3159[0m

epoch 4 loss 1.27303:  43%|████▎     | 12/28 [00:41<00:48,  3.06s/it]epoch 4 loss 1.27547:  43%|████▎     | 12/28 [00:42<00:48,  3.06s/it]epoch 4 loss 1.27547:  46%|████▋     | 13/28 [00:42<00:34,  2.27s/it]epoch 4 loss 1.27374:  46%|████▋     | 13/28 [00:42<00:34,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6599[0m
[32m  eval_f1 = 0.3433[0m
[32m  eval_mcc = 0.6409[0m
[32m  eval_precision = 0.454[0m
[32m  eval_recall = 0.3163[0m

epoch 4 loss 1.27374:  50%|█████     | 14/28 [00:46<00:40,  2.90s/it]epoch 4 loss 1.27828:  50%|█████     | 14/28 [00:47<00:40,  2.90s/it]epoch 4 loss 1.27828:  54%|█████▎    | 15/28 [00:47<00:28,  2.16s/it]epoch 4 loss 1.27987:  54%|█████▎    | 15/28 [00:47<00:28,  2.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6602[0m
[32m  eval_f1 = 0.3445[0m
[32m  eval_mcc = 0.6412[0m
[32m  eval_precision = 0.4538[0m
[32m  eval_recall = 0.3175[0m
[32m  ********************[0m
[32m  Best f1:0.3445[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27987:  57%|█████▋    | 16/28 [00:53<00:42,  3.53s/it]epoch 4 loss 1.27516:  57%|█████▋    | 16/28 [00:54<00:42,  3.53s/it]epoch 4 loss 1.27516:  61%|██████    | 17/28 [00:54<00:28,  2.62s/it]epoch 4 loss 1.27809:  61%|██████    | 17/28 [00:54<00:28,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6608[0m
[32m  eval_f1 = 0.3519[0m
[32m  eval_mcc = 0.6418[0m
[32m  eval_precision = 0.4625[0m
[32m  eval_recall = 0.3235[0m
[32m  ********************[0m
[32m  Best f1:0.3519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27809:  64%|██████▍   | 18/28 [01:02<00:42,  4.21s/it]epoch 4 loss 1.27773:  64%|██████▍   | 18/28 [01:02<00:42,  4.21s/it]epoch 4 loss 1.27773:  68%|██████▊   | 19/28 [01:02<00:27,  3.09s/it]epoch 4 loss 1.27877:  68%|██████▊   | 19/28 [01:03<00:27,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3529[0m
[32m  eval_mcc = 0.6423[0m
[32m  eval_precision = 0.4635[0m
[32m  eval_recall = 0.3242[0m
[32m  ********************[0m
[32m  Best f1:0.3529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27877:  71%|███████▏  | 20/28 [01:10<00:36,  4.59s/it]epoch 4 loss 1.27851:  71%|███████▏  | 20/28 [01:11<00:36,  4.59s/it]epoch 4 loss 1.27851:  75%|███████▌  | 21/28 [01:11<00:23,  3.36s/it]epoch 4 loss 1.28124:  75%|███████▌  | 21/28 [01:11<00:23,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6615[0m
[32m  eval_f1 = 0.3546[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.4639[0m
[32m  eval_recall = 0.3258[0m
[32m  ********************[0m
[32m  Best f1:0.3546[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.28124:  79%|███████▊  | 22/28 [01:18<00:28,  4.67s/it]epoch 4 loss 1.28316:  79%|███████▊  | 22/28 [01:19<00:28,  4.67s/it]epoch 4 loss 1.28316:  82%|████████▏ | 23/28 [01:19<00:16,  3.39s/it]epoch 4 loss 1.27866:  82%|████████▏ | 23/28 [01:19<00:16,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6615[0m
[32m  eval_f1 = 0.3543[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.4639[0m
[32m  eval_recall = 0.3257[0m

epoch 4 loss 1.27866:  86%|████████▌ | 24/28 [01:23<00:14,  3.52s/it]epoch 4 loss 1.27509:  86%|████████▌ | 24/28 [01:23<00:14,  3.52s/it]epoch 4 loss 1.27509:  89%|████████▉ | 25/28 [01:23<00:07,  2.58s/it]epoch 4 loss 1.26951:  89%|████████▉ | 25/28 [01:23<00:07,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6617[0m
[32m  eval_f1 = 0.3546[0m
[32m  eval_mcc = 0.6427[0m
[32m  eval_precision = 0.4642[0m
[32m  eval_recall = 0.3259[0m
[32m  ********************[0m
[32m  Best f1:0.3546[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.26951:  93%|█████████▎| 26/28 [01:31<00:08,  4.06s/it]epoch 4 loss 1.27462:  93%|█████████▎| 26/28 [01:31<00:08,  4.06s/it]epoch 4 loss 1.27462:  96%|█████████▋| 27/28 [01:31<00:02,  2.97s/it]epoch 4 loss 1.27385:  96%|█████████▋| 27/28 [01:31<00:02,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6619[0m
[32m  eval_f1 = 0.3548[0m
[32m  eval_mcc = 0.6429[0m
[32m  eval_precision = 0.4644[0m
[32m  eval_recall = 0.3261[0m
[32m  ********************[0m
[32m  Best f1:0.3548[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27385: 100%|██████████| 28/28 [01:39<00:00,  4.41s/it]epoch 4 loss 1.27385: 100%|██████████| 28/28 [01:39<00:00,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.69it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6619[0m
[32m  eval_f1 = 0.3548[0m
[32m  eval_mcc = 0.6429[0m
[32m  eval_precision = 0.4644[0m
[32m  eval_recall = 0.3261[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.74it/s] 20%|██        | 2/10 [00:00<00:02,  2.70it/s] 30%|███       | 3/10 [00:01<00:02,  2.71it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.72it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6423[0m
[32m  eval_f1 = 0.2736[0m
[32m  eval_mcc = 0.6241[0m
[32m  eval_precision = 0.3752[0m
[32m  eval_recall = 0.2556[0m

