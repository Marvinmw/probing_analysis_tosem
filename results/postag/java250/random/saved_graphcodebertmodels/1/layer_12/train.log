[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.6128:   0%|          | 0/28 [00:01<?, ?it/s]epoch 0 loss 5.6128:   4%|▎         | 1/28 [00:01<00:35,  1.31s/it]epoch 0 loss 5.64033:   4%|▎         | 1/28 [00:01<00:35,  1.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0021[0m
[32m  eval_f1 = 0.0003[0m
[32m  eval_mcc = -0.0006[0m
[32m  eval_precision = 0.0036[0m
[32m  eval_recall = 0.0006[0m
[32m  ********************[0m
[32m  Best f1:0.0003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.64033:   7%|▋         | 2/28 [00:06<01:32,  3.55s/it]epoch 0 loss 5.62154:   7%|▋         | 2/28 [00:06<01:32,  3.55s/it]epoch 0 loss 5.62154:  11%|█         | 3/28 [00:06<00:52,  2.12s/it]epoch 0 loss 5.60707:  11%|█         | 3/28 [00:07<00:52,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0067[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = 0.0013[0m
[32m  eval_precision = 0.0043[0m
[32m  eval_recall = 0.0017[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.60707:  14%|█▍        | 4/28 [00:12<01:26,  3.58s/it]epoch 0 loss 5.58187:  14%|█▍        | 4/28 [00:13<01:26,  3.58s/it]epoch 0 loss 5.58187:  18%|█▊        | 5/28 [00:13<00:56,  2.45s/it]epoch 0 loss 5.55248:  18%|█▊        | 5/28 [00:13<00:56,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0211[0m
[32m  eval_f1 = 0.0014[0m
[32m  eval_mcc = 0.0059[0m
[32m  eval_precision = 0.003[0m
[32m  eval_recall = 0.0049[0m
[32m  ********************[0m
[32m  Best f1:0.0014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.55248:  21%|██▏       | 6/28 [00:18<01:16,  3.48s/it]epoch 0 loss 5.51015:  21%|██▏       | 6/28 [00:18<01:16,  3.48s/it]epoch 0 loss 5.51015:  25%|██▌       | 7/28 [00:18<00:52,  2.48s/it]epoch 0 loss 5.45995:  25%|██▌       | 7/28 [00:19<00:52,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0489[0m
[32m  eval_f1 = 0.0049[0m
[32m  eval_mcc = 0.0272[0m
[32m  eval_precision = 0.0068[0m
[32m  eval_recall = 0.011[0m
[32m  ********************[0m
[32m  Best f1:0.0049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.45995:  29%|██▊       | 8/28 [00:24<01:11,  3.59s/it]epoch 0 loss 5.4051:  29%|██▊       | 8/28 [00:25<01:11,  3.59s/it] epoch 0 loss 5.4051:  32%|███▏      | 9/28 [00:25<00:49,  2.60s/it]epoch 0 loss 5.344:  32%|███▏      | 9/28 [00:25<00:49,  2.60s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0711[0m
[32m  eval_f1 = 0.0072[0m
[32m  eval_mcc = 0.0479[0m
[32m  eval_precision = 0.0076[0m
[32m  eval_recall = 0.015[0m
[32m  ********************[0m
[32m  Best f1:0.0072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.344:  36%|███▌      | 10/28 [00:31<01:05,  3.64s/it]epoch 0 loss 5.27984:  36%|███▌      | 10/28 [00:31<01:05,  3.64s/it]epoch 0 loss 5.27984:  39%|███▉      | 11/28 [00:31<00:45,  2.66s/it]epoch 0 loss 5.20987:  39%|███▉      | 11/28 [00:32<00:45,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0895[0m
[32m  eval_f1 = 0.0079[0m
[32m  eval_mcc = 0.0568[0m
[32m  eval_precision = 0.0075[0m
[32m  eval_recall = 0.0167[0m
[32m  ********************[0m
[32m  Best f1:0.0079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20987:  43%|████▎     | 12/28 [00:37<00:57,  3.60s/it]epoch 0 loss 5.14109:  43%|████▎     | 12/28 [00:37<00:57,  3.60s/it]epoch 0 loss 5.14109:  46%|████▋     | 13/28 [00:37<00:39,  2.64s/it]epoch 0 loss 5.07008:  46%|████▋     | 13/28 [00:38<00:39,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.113[0m
[32m  eval_f1 = 0.0085[0m
[32m  eval_mcc = 0.0587[0m
[32m  eval_precision = 0.013[0m
[32m  eval_recall = 0.0173[0m
[32m  ********************[0m
[32m  Best f1:0.0085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.07008:  50%|█████     | 14/28 [00:43<00:51,  3.65s/it]epoch 0 loss 4.99452:  50%|█████     | 14/28 [00:44<00:51,  3.65s/it]epoch 0 loss 4.99452:  54%|█████▎    | 15/28 [00:44<00:34,  2.68s/it]epoch 0 loss 4.91717:  54%|█████▎    | 15/28 [00:44<00:34,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1138[0m
[32m  eval_f1 = 0.0067[0m
[32m  eval_mcc = 0.0436[0m
[32m  eval_precision = 0.0107[0m
[32m  eval_recall = 0.0131[0m

epoch 0 loss 4.91717:  57%|█████▋    | 16/28 [00:48<00:36,  3.02s/it]epoch 0 loss 4.84282:  57%|█████▋    | 16/28 [00:48<00:36,  3.02s/it]epoch 0 loss 4.84282:  61%|██████    | 17/28 [00:48<00:24,  2.24s/it]epoch 0 loss 4.77227:  61%|██████    | 17/28 [00:49<00:24,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1159[0m
[32m  eval_f1 = 0.0056[0m
[32m  eval_mcc = 0.0428[0m
[32m  eval_precision = 0.0102[0m
[32m  eval_recall = 0.0123[0m

epoch 0 loss 4.77227:  64%|██████▍   | 18/28 [00:52<00:27,  2.71s/it]epoch 0 loss 4.70461:  64%|██████▍   | 18/28 [00:52<00:27,  2.71s/it]epoch 0 loss 4.70461:  68%|██████▊   | 19/28 [00:52<00:18,  2.02s/it]epoch 0 loss 4.64483:  68%|██████▊   | 19/28 [00:53<00:18,  2.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1257[0m
[32m  eval_f1 = 0.0068[0m
[32m  eval_mcc = 0.053[0m
[32m  eval_precision = 0.0208[0m
[32m  eval_recall = 0.0134[0m

epoch 0 loss 4.64483:  71%|███████▏  | 20/28 [00:56<00:20,  2.57s/it]epoch 0 loss 4.58559:  71%|███████▏  | 20/28 [00:57<00:20,  2.57s/it]epoch 0 loss 4.58559:  75%|███████▌  | 21/28 [00:57<00:13,  1.92s/it]epoch 0 loss 4.52252:  75%|███████▌  | 21/28 [00:57<00:13,  1.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1873[0m
[32m  eval_f1 = 0.014[0m
[32m  eval_mcc = 0.1212[0m
[32m  eval_precision = 0.0323[0m
[32m  eval_recall = 0.0199[0m
[32m  ********************[0m
[32m  Best f1:0.014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.52252:  79%|███████▊  | 22/28 [01:02<00:18,  3.09s/it]epoch 0 loss 4.46782:  79%|███████▊  | 22/28 [01:03<00:18,  3.09s/it]epoch 0 loss 4.46782:  82%|████████▏ | 23/28 [01:03<00:11,  2.29s/it]epoch 0 loss 4.41417:  82%|████████▏ | 23/28 [01:03<00:11,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2638[0m
[32m  eval_f1 = 0.0205[0m
[32m  eval_mcc = 0.2043[0m
[32m  eval_precision = 0.0302[0m
[32m  eval_recall = 0.0278[0m
[32m  ********************[0m
[32m  Best f1:0.0205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.41417:  86%|████████▌ | 24/28 [01:09<00:13,  3.44s/it]epoch 0 loss 4.36258:  86%|████████▌ | 24/28 [01:09<00:13,  3.44s/it]epoch 0 loss 4.36258:  89%|████████▉ | 25/28 [01:09<00:07,  2.54s/it]epoch 0 loss 4.30523:  89%|████████▉ | 25/28 [01:10<00:07,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2244[0m
[32m  eval_f1 = 0.0189[0m
[32m  eval_mcc = 0.1936[0m
[32m  eval_precision = 0.049[0m
[32m  eval_recall = 0.0231[0m

epoch 0 loss 4.30523:  93%|█████████▎| 26/28 [01:13<00:05,  2.93s/it]epoch 0 loss 4.25286:  93%|█████████▎| 26/28 [01:14<00:05,  2.93s/it]epoch 0 loss 4.25286:  96%|█████████▋| 27/28 [01:14<00:02,  2.17s/it]epoch 0 loss 4.20777:  96%|█████████▋| 27/28 [01:14<00:02,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2406[0m
[32m  eval_f1 = 0.055[0m
[32m  eval_mcc = 0.2357[0m
[32m  eval_precision = 0.1447[0m
[32m  eval_recall = 0.0501[0m
[32m  ********************[0m
[32m  Best f1:0.055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.20777: 100%|██████████| 28/28 [01:20<00:00,  3.28s/it]epoch 0 loss 4.20777: 100%|██████████| 28/28 [01:20<00:00,  2.86s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.81772:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.81772:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 1 loss 2.73483:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.321[0m
[32m  eval_f1 = 0.094[0m
[32m  eval_mcc = 0.3245[0m
[32m  eval_precision = 0.1543[0m
[32m  eval_recall = 0.0817[0m
[32m  ********************[0m
[32m  Best f1:0.094[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.73483:   7%|▋         | 2/28 [00:06<01:36,  3.69s/it]epoch 1 loss 2.67942:   7%|▋         | 2/28 [00:06<01:36,  3.69s/it]epoch 1 loss 2.67942:  11%|█         | 3/28 [00:06<00:55,  2.20s/it]epoch 1 loss 2.66474:  11%|█         | 3/28 [00:07<00:55,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4477[0m
[32m  eval_f1 = 0.1269[0m
[32m  eval_mcc = 0.4318[0m
[32m  eval_precision = 0.1696[0m
[32m  eval_recall = 0.119[0m
[32m  ********************[0m
[32m  Best f1:0.1269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.66474:  14%|█▍        | 4/28 [00:12<01:30,  3.77s/it]epoch 1 loss 2.65413:  14%|█▍        | 4/28 [00:13<01:30,  3.77s/it]epoch 1 loss 2.65413:  18%|█▊        | 5/28 [00:13<00:58,  2.56s/it]epoch 1 loss 2.6267:  18%|█▊        | 5/28 [00:13<00:58,  2.56s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5119[0m
[32m  eval_f1 = 0.1383[0m
[32m  eval_mcc = 0.4835[0m
[32m  eval_precision = 0.1945[0m
[32m  eval_recall = 0.1345[0m
[32m  ********************[0m
[32m  Best f1:0.1383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4835[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.6267:  21%|██▏       | 6/28 [00:18<01:18,  3.56s/it]epoch 1 loss 2.59869:  21%|██▏       | 6/28 [00:19<01:18,  3.56s/it]epoch 1 loss 2.59869:  25%|██▌       | 7/28 [00:19<00:53,  2.53s/it]epoch 1 loss 2.57652:  25%|██▌       | 7/28 [00:19<00:53,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5322[0m
[32m  eval_f1 = 0.1481[0m
[32m  eval_mcc = 0.5043[0m
[32m  eval_precision = 0.2065[0m
[32m  eval_recall = 0.1389[0m
[32m  ********************[0m
[32m  Best f1:0.1481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.57652:  29%|██▊       | 8/28 [00:25<01:12,  3.64s/it]epoch 1 loss 2.57217:  29%|██▊       | 8/28 [00:25<01:12,  3.64s/it]epoch 1 loss 2.57217:  32%|███▏      | 9/28 [00:25<00:50,  2.63s/it]epoch 1 loss 2.54992:  32%|███▏      | 9/28 [00:26<00:50,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5454[0m
[32m  eval_f1 = 0.1565[0m
[32m  eval_mcc = 0.5182[0m
[32m  eval_precision = 0.2084[0m
[32m  eval_recall = 0.145[0m
[32m  ********************[0m
[32m  Best f1:0.1565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.54992:  36%|███▌      | 10/28 [00:31<01:05,  3.61s/it]epoch 1 loss 2.52621:  36%|███▌      | 10/28 [00:32<01:05,  3.61s/it]epoch 1 loss 2.52621:  39%|███▉      | 11/28 [00:32<00:44,  2.64s/it]epoch 1 loss 2.49483:  39%|███▉      | 11/28 [00:32<00:44,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5543[0m
[32m  eval_f1 = 0.1607[0m
[32m  eval_mcc = 0.5275[0m
[32m  eval_precision = 0.2072[0m
[32m  eval_recall = 0.1512[0m
[32m  ********************[0m
[32m  Best f1:0.1607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.49483:  43%|████▎     | 12/28 [00:38<00:59,  3.69s/it]epoch 1 loss 2.46779:  43%|████▎     | 12/28 [00:38<00:59,  3.69s/it]epoch 1 loss 2.46779:  46%|████▋     | 13/28 [00:38<00:40,  2.70s/it]epoch 1 loss 2.45031:  46%|████▋     | 13/28 [00:38<00:40,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5579[0m
[32m  eval_f1 = 0.1699[0m
[32m  eval_mcc = 0.531[0m
[32m  eval_precision = 0.2135[0m
[32m  eval_recall = 0.1618[0m
[32m  ********************[0m
[32m  Best f1:0.1699[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.45031:  50%|█████     | 14/28 [00:44<00:51,  3.67s/it]epoch 1 loss 2.42666:  50%|█████     | 14/28 [00:44<00:51,  3.67s/it]epoch 1 loss 2.42666:  54%|█████▎    | 15/28 [00:44<00:35,  2.70s/it]epoch 1 loss 2.40863:  54%|█████▎    | 15/28 [00:45<00:35,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5574[0m
[32m  eval_f1 = 0.1707[0m
[32m  eval_mcc = 0.5315[0m
[32m  eval_precision = 0.2076[0m
[32m  eval_recall = 0.165[0m
[32m  ********************[0m
[32m  Best f1:0.1707[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.40863:  57%|█████▋    | 16/28 [00:51<00:44,  3.74s/it]epoch 1 loss 2.38217:  57%|█████▋    | 16/28 [00:51<00:44,  3.74s/it]epoch 1 loss 2.38217:  61%|██████    | 17/28 [00:51<00:30,  2.74s/it]epoch 1 loss 2.36295:  61%|██████    | 17/28 [00:51<00:30,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5619[0m
[32m  eval_f1 = 0.1732[0m
[32m  eval_mcc = 0.5382[0m
[32m  eval_precision = 0.2093[0m
[32m  eval_recall = 0.1673[0m
[32m  ********************[0m
[32m  Best f1:0.1732[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.36295:  64%|██████▍   | 18/28 [01:01<00:48,  4.86s/it]epoch 1 loss 2.33692:  64%|██████▍   | 18/28 [01:01<00:48,  4.86s/it]epoch 1 loss 2.33692:  68%|██████▊   | 19/28 [01:01<00:31,  3.53s/it]epoch 1 loss 2.33484:  68%|██████▊   | 19/28 [01:02<00:31,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5734[0m
[32m  eval_f1 = 0.1805[0m
[32m  eval_mcc = 0.5521[0m
[32m  eval_precision = 0.2168[0m
[32m  eval_recall = 0.174[0m
[32m  ********************[0m
[32m  Best f1:0.1805[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5521[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.33484:  71%|███████▏  | 20/28 [01:07<00:34,  4.28s/it]epoch 1 loss 2.31685:  71%|███████▏  | 20/28 [01:08<00:34,  4.28s/it]epoch 1 loss 2.31685:  75%|███████▌  | 21/28 [01:08<00:21,  3.13s/it]epoch 1 loss 2.29932:  75%|███████▌  | 21/28 [01:08<00:21,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5817[0m
[32m  eval_f1 = 0.1822[0m
[32m  eval_mcc = 0.5591[0m
[32m  eval_precision = 0.2161[0m
[32m  eval_recall = 0.176[0m
[32m  ********************[0m
[32m  Best f1:0.1822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29932:  79%|███████▊  | 22/28 [01:14<00:24,  4.01s/it]epoch 1 loss 2.27932:  79%|███████▊  | 22/28 [01:14<00:24,  4.01s/it]epoch 1 loss 2.27932:  82%|████████▏ | 23/28 [01:14<00:14,  2.94s/it]epoch 1 loss 2.26386:  82%|████████▏ | 23/28 [01:15<00:14,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5846[0m
[32m  eval_f1 = 0.1842[0m
[32m  eval_mcc = 0.5597[0m
[32m  eval_precision = 0.2367[0m
[32m  eval_recall = 0.1779[0m
[32m  ********************[0m
[32m  Best f1:0.1842[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26386:  86%|████████▌ | 24/28 [01:20<00:15,  3.80s/it]epoch 1 loss 2.24552:  86%|████████▌ | 24/28 [01:20<00:15,  3.80s/it]epoch 1 loss 2.24552:  89%|████████▉ | 25/28 [01:20<00:08,  2.79s/it]epoch 1 loss 2.22929:  89%|████████▉ | 25/28 [01:21<00:08,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5846[0m
[32m  eval_f1 = 0.1922[0m
[32m  eval_mcc = 0.559[0m
[32m  eval_precision = 0.2438[0m
[32m  eval_recall = 0.1859[0m
[32m  ********************[0m
[32m  Best f1:0.1922[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.22929:  93%|█████████▎| 26/28 [01:25<00:06,  3.42s/it]epoch 1 loss 2.21549:  93%|█████████▎| 26/28 [01:26<00:06,  3.42s/it]epoch 1 loss 2.21549:  96%|█████████▋| 27/28 [01:26<00:02,  2.51s/it]epoch 1 loss 2.20121:  96%|█████████▋| 27/28 [01:26<00:02,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5869[0m
[32m  eval_f1 = 0.1949[0m
[32m  eval_mcc = 0.5614[0m
[32m  eval_precision = 0.2438[0m
[32m  eval_recall = 0.1889[0m
[32m  ********************[0m
[32m  Best f1:0.1949[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20121: 100%|██████████| 28/28 [01:31<00:00,  3.49s/it]epoch 1 loss 2.20121: 100%|██████████| 28/28 [01:31<00:00,  3.28s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.59879:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.59879:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 2 loss 1.73815:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5908[0m
[32m  eval_f1 = 0.1958[0m
[32m  eval_mcc = 0.5659[0m
[32m  eval_precision = 0.2412[0m
[32m  eval_recall = 0.1906[0m
[32m  ********************[0m
[32m  Best f1:0.1958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.73815:   7%|▋         | 2/28 [00:06<01:37,  3.74s/it]epoch 2 loss 1.73397:   7%|▋         | 2/28 [00:06<01:37,  3.74s/it]epoch 2 loss 1.73397:  11%|█         | 3/28 [00:06<00:55,  2.22s/it]epoch 2 loss 1.72418:  11%|█         | 3/28 [00:07<00:55,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5931[0m
[32m  eval_f1 = 0.2011[0m
[32m  eval_mcc = 0.5693[0m
[32m  eval_precision = 0.2558[0m
[32m  eval_recall = 0.1942[0m
[32m  ********************[0m
[32m  Best f1:0.2011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5693[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.72418:  14%|█▍        | 4/28 [00:12<01:29,  3.75s/it]epoch 2 loss 1.71453:  14%|█▍        | 4/28 [00:13<01:29,  3.75s/it]epoch 2 loss 1.71453:  18%|█▊        | 5/28 [00:13<00:58,  2.56s/it]epoch 2 loss 1.73814:  18%|█▊        | 5/28 [00:13<00:58,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5996[0m
[32m  eval_f1 = 0.2078[0m
[32m  eval_mcc = 0.5782[0m
[32m  eval_precision = 0.2775[0m
[32m  eval_recall = 0.1977[0m
[32m  ********************[0m
[32m  Best f1:0.2078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5782[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.73814:  21%|██▏       | 6/28 [00:19<01:22,  3.74s/it]epoch 2 loss 1.78002:  21%|██▏       | 6/28 [00:19<01:22,  3.74s/it]epoch 2 loss 1.78002:  25%|██▌       | 7/28 [00:19<00:55,  2.66s/it]epoch 2 loss 1.77277:  25%|██▌       | 7/28 [00:20<00:55,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6008[0m
[32m  eval_f1 = 0.2118[0m
[32m  eval_mcc = 0.5806[0m
[32m  eval_precision = 0.291[0m
[32m  eval_recall = 0.2004[0m
[32m  ********************[0m
[32m  Best f1:0.2118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5806[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.77277:  29%|██▊       | 8/28 [00:25<01:11,  3.59s/it]epoch 2 loss 1.77564:  29%|██▊       | 8/28 [00:25<01:11,  3.59s/it]epoch 2 loss 1.77564:  32%|███▏      | 9/28 [00:25<00:49,  2.60s/it]epoch 2 loss 1.76233:  32%|███▏      | 9/28 [00:26<00:49,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.602[0m
[32m  eval_f1 = 0.2219[0m
[32m  eval_mcc = 0.5813[0m
[32m  eval_precision = 0.3009[0m
[32m  eval_recall = 0.2093[0m
[32m  ********************[0m
[32m  Best f1:0.2219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5813[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.76233:  36%|███▌      | 10/28 [00:31<01:04,  3.58s/it]epoch 2 loss 1.73978:  36%|███▌      | 10/28 [00:32<01:04,  3.58s/it]epoch 2 loss 1.73978:  39%|███▉      | 11/28 [00:32<00:44,  2.62s/it]epoch 2 loss 1.73933:  39%|███▉      | 11/28 [00:32<00:44,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6029[0m
[32m  eval_f1 = 0.2251[0m
[32m  eval_mcc = 0.5801[0m
[32m  eval_precision = 0.3082[0m
[32m  eval_recall = 0.2137[0m
[32m  ********************[0m
[32m  Best f1:0.2251[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.73933:  43%|████▎     | 12/28 [00:36<00:52,  3.28s/it]epoch 2 loss 1.72652:  43%|████▎     | 12/28 [00:37<00:52,  3.28s/it]epoch 2 loss 1.72652:  46%|████▋     | 13/28 [00:37<00:36,  2.41s/it]epoch 2 loss 1.71714:  46%|████▋     | 13/28 [00:37<00:36,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6025[0m
[32m  eval_f1 = 0.2298[0m
[32m  eval_mcc = 0.5786[0m
[32m  eval_precision = 0.3166[0m
[32m  eval_recall = 0.2172[0m
[32m  ********************[0m
[32m  Best f1:0.2298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.71714:  50%|█████     | 14/28 [00:42<00:43,  3.10s/it]epoch 2 loss 1.72423:  50%|█████     | 14/28 [00:42<00:43,  3.10s/it]epoch 2 loss 1.72423:  54%|█████▎    | 15/28 [00:42<00:29,  2.29s/it]epoch 2 loss 1.71161:  54%|█████▎    | 15/28 [00:42<00:29,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6065[0m
[32m  eval_f1 = 0.2327[0m
[32m  eval_mcc = 0.5827[0m
[32m  eval_precision = 0.3144[0m
[32m  eval_recall = 0.2196[0m
[32m  ********************[0m
[32m  Best f1:0.2327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.71161:  57%|█████▋    | 16/28 [00:48<00:41,  3.43s/it]epoch 2 loss 1.70426:  57%|█████▋    | 16/28 [00:48<00:41,  3.43s/it]epoch 2 loss 1.70426:  61%|██████    | 17/28 [00:48<00:27,  2.53s/it]epoch 2 loss 1.69232:  61%|██████    | 17/28 [00:49<00:27,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6107[0m
[32m  eval_f1 = 0.2372[0m
[32m  eval_mcc = 0.5877[0m
[32m  eval_precision = 0.3278[0m
[32m  eval_recall = 0.2229[0m
[32m  ********************[0m
[32m  Best f1:0.2372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5877[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.69232:  64%|██████▍   | 18/28 [00:54<00:35,  3.57s/it]epoch 2 loss 1.69235:  64%|██████▍   | 18/28 [00:55<00:35,  3.57s/it]epoch 2 loss 1.69235:  68%|██████▊   | 19/28 [00:55<00:23,  2.63s/it]epoch 2 loss 1.68827:  68%|██████▊   | 19/28 [00:55<00:23,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6124[0m
[32m  eval_f1 = 0.2377[0m
[32m  eval_mcc = 0.5906[0m
[32m  eval_precision = 0.3233[0m
[32m  eval_recall = 0.2238[0m
[32m  ********************[0m
[32m  Best f1:0.2377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5906[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.68827:  71%|███████▏  | 20/28 [01:01<00:28,  3.59s/it]epoch 2 loss 1.68131:  71%|███████▏  | 20/28 [01:01<00:28,  3.59s/it]epoch 2 loss 1.68131:  75%|███████▌  | 21/28 [01:01<00:18,  2.64s/it]epoch 2 loss 1.68287:  75%|███████▌  | 21/28 [01:02<00:18,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6101[0m
[32m  eval_f1 = 0.2383[0m
[32m  eval_mcc = 0.589[0m
[32m  eval_precision = 0.3234[0m
[32m  eval_recall = 0.2247[0m
[32m  ********************[0m
[32m  Best f1:0.2383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.68287:  79%|███████▊  | 22/28 [01:06<00:20,  3.38s/it]epoch 2 loss 1.67999:  79%|███████▊  | 22/28 [01:07<00:20,  3.38s/it]epoch 2 loss 1.67999:  82%|████████▏ | 23/28 [01:07<00:12,  2.49s/it]epoch 2 loss 1.67298:  82%|████████▏ | 23/28 [01:07<00:12,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6104[0m
[32m  eval_f1 = 0.2406[0m
[32m  eval_mcc = 0.5896[0m
[32m  eval_precision = 0.3246[0m
[32m  eval_recall = 0.2263[0m
[32m  ********************[0m
[32m  Best f1:0.2406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.67298:  86%|████████▌ | 24/28 [01:12<00:12,  3.24s/it]epoch 2 loss 1.66951:  86%|████████▌ | 24/28 [01:12<00:12,  3.24s/it]epoch 2 loss 1.66951:  89%|████████▉ | 25/28 [01:12<00:07,  2.39s/it]epoch 2 loss 1.66395:  89%|████████▉ | 25/28 [01:12<00:07,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6136[0m
[32m  eval_f1 = 0.2447[0m
[32m  eval_mcc = 0.5925[0m
[32m  eval_precision = 0.3246[0m
[32m  eval_recall = 0.2295[0m
[32m  ********************[0m
[32m  Best f1:0.2447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.66395:  93%|█████████▎| 26/28 [01:18<00:06,  3.38s/it]epoch 2 loss 1.66474:  93%|█████████▎| 26/28 [01:18<00:06,  3.38s/it]epoch 2 loss 1.66474:  96%|█████████▋| 27/28 [01:18<00:02,  2.50s/it]epoch 2 loss 1.66669:  96%|█████████▋| 27/28 [01:18<00:02,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6155[0m
[32m  eval_f1 = 0.2481[0m
[32m  eval_mcc = 0.5934[0m
[32m  eval_precision = 0.3454[0m
[32m  eval_recall = 0.2325[0m
[32m  ********************[0m
[32m  Best f1:0.2481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.66669: 100%|██████████| 28/28 [01:24<00:00,  3.49s/it]epoch 2 loss 1.66669: 100%|██████████| 28/28 [01:24<00:00,  3.02s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.46669:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.46669:   4%|▎         | 1/28 [00:00<00:11,  2.28it/s]epoch 3 loss 1.53088:   4%|▎         | 1/28 [00:00<00:11,  2.28it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6169[0m
[32m  eval_f1 = 0.2507[0m
[32m  eval_mcc = 0.594[0m
[32m  eval_precision = 0.3427[0m
[32m  eval_recall = 0.2355[0m
[32m  ********************[0m
[32m  Best f1:0.2507[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.594[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.53088:   7%|▋         | 2/28 [00:06<01:32,  3.55s/it]epoch 3 loss 1.56434:   7%|▋         | 2/28 [00:06<01:32,  3.55s/it]epoch 3 loss 1.56434:  11%|█         | 3/28 [00:06<00:53,  2.13s/it]epoch 3 loss 1.54645:  11%|█         | 3/28 [00:07<00:53,  2.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6179[0m
[32m  eval_f1 = 0.2542[0m
[32m  eval_mcc = 0.5949[0m
[32m  eval_precision = 0.3575[0m
[32m  eval_recall = 0.2388[0m
[32m  ********************[0m
[32m  Best f1:0.2542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5949[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.54645:  14%|█▍        | 4/28 [00:12<01:27,  3.63s/it]epoch 3 loss 1.51402:  14%|█▍        | 4/28 [00:12<01:27,  3.63s/it]epoch 3 loss 1.51402:  18%|█▊        | 5/28 [00:12<00:57,  2.48s/it]epoch 3 loss 1.52963:  18%|█▊        | 5/28 [00:13<00:57,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6187[0m
[32m  eval_f1 = 0.2551[0m
[32m  eval_mcc = 0.5959[0m
[32m  eval_precision = 0.3587[0m
[32m  eval_recall = 0.2393[0m
[32m  ********************[0m
[32m  Best f1:0.2551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.52963:  21%|██▏       | 6/28 [00:18<01:20,  3.65s/it]epoch 3 loss 1.53715:  21%|██▏       | 6/28 [00:19<01:20,  3.65s/it]epoch 3 loss 1.53715:  25%|██▌       | 7/28 [00:19<00:54,  2.60s/it]epoch 3 loss 1.55565:  25%|██▌       | 7/28 [00:19<00:54,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6203[0m
[32m  eval_f1 = 0.255[0m
[32m  eval_mcc = 0.598[0m
[32m  eval_precision = 0.3612[0m
[32m  eval_recall = 0.2387[0m
[32m  ********************[0m
[32m  Best MCC:0.598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.55565:  29%|██▊       | 8/28 [00:24<01:05,  3.27s/it]epoch 3 loss 1.56003:  29%|██▊       | 8/28 [00:24<01:05,  3.27s/it]epoch 3 loss 1.56003:  32%|███▏      | 9/28 [00:24<00:45,  2.37s/it]epoch 3 loss 1.55729:  32%|███▏      | 9/28 [00:24<00:45,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6222[0m
[32m  eval_f1 = 0.2583[0m
[32m  eval_mcc = 0.6004[0m
[32m  eval_precision = 0.3782[0m
[32m  eval_recall = 0.2403[0m
[32m  ********************[0m
[32m  Best f1:0.2583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.55729:  36%|███▌      | 10/28 [00:30<01:03,  3.51s/it]epoch 3 loss 1.5491:  36%|███▌      | 10/28 [00:30<01:03,  3.51s/it] epoch 3 loss 1.5491:  39%|███▉      | 11/28 [00:30<00:43,  2.57s/it]epoch 3 loss 1.54544:  39%|███▉      | 11/28 [00:31<00:43,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6227[0m
[32m  eval_f1 = 0.2598[0m
[32m  eval_mcc = 0.6016[0m
[32m  eval_precision = 0.3808[0m
[32m  eval_recall = 0.2409[0m
[32m  ********************[0m
[32m  Best f1:0.2598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.54544:  43%|████▎     | 12/28 [00:36<00:57,  3.59s/it]epoch 3 loss 1.55065:  43%|████▎     | 12/28 [00:37<00:57,  3.59s/it]epoch 3 loss 1.55065:  46%|████▋     | 13/28 [00:37<00:39,  2.64s/it]epoch 3 loss 1.54712:  46%|████▋     | 13/28 [00:37<00:39,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6219[0m
[32m  eval_f1 = 0.2601[0m
[32m  eval_mcc = 0.6013[0m
[32m  eval_precision = 0.3798[0m
[32m  eval_recall = 0.241[0m
[32m  ********************[0m
[32m  Best f1:0.2601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.54712:  50%|█████     | 14/28 [00:42<00:45,  3.26s/it]epoch 3 loss 1.54481:  50%|█████     | 14/28 [00:42<00:45,  3.26s/it]epoch 3 loss 1.54481:  54%|█████▎    | 15/28 [00:42<00:31,  2.40s/it]epoch 3 loss 1.54705:  54%|█████▎    | 15/28 [00:42<00:31,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6214[0m
[32m  eval_f1 = 0.2576[0m
[32m  eval_mcc = 0.6006[0m
[32m  eval_precision = 0.3814[0m
[32m  eval_recall = 0.2393[0m

epoch 3 loss 1.54705:  57%|█████▋    | 16/28 [00:46<00:34,  2.84s/it]epoch 3 loss 1.55165:  57%|█████▋    | 16/28 [00:46<00:34,  2.84s/it]epoch 3 loss 1.55165:  61%|██████    | 17/28 [00:46<00:23,  2.11s/it]epoch 3 loss 1.55959:  61%|██████    | 17/28 [00:47<00:23,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.70it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.94it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6222[0m
[32m  eval_f1 = 0.2615[0m
[32m  eval_mcc = 0.6011[0m
[32m  eval_precision = 0.3888[0m
[32m  eval_recall = 0.2427[0m
[32m  ********************[0m
[32m  Best f1:0.2615[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.55959:  64%|██████▍   | 18/28 [00:51<00:29,  2.97s/it]epoch 3 loss 1.54911:  64%|██████▍   | 18/28 [00:52<00:29,  2.97s/it]epoch 3 loss 1.54911:  68%|██████▊   | 19/28 [00:52<00:19,  2.21s/it]epoch 3 loss 1.55016:  68%|██████▊   | 19/28 [00:52<00:19,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6243[0m
[32m  eval_f1 = 0.2645[0m
[32m  eval_mcc = 0.6029[0m
[32m  eval_precision = 0.3764[0m
[32m  eval_recall = 0.2462[0m
[32m  ********************[0m
[32m  Best f1:0.2645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.55016:  71%|███████▏  | 20/28 [00:57<00:26,  3.29s/it]epoch 3 loss 1.5422:  71%|███████▏  | 20/28 [00:58<00:26,  3.29s/it] epoch 3 loss 1.5422:  75%|███████▌  | 21/28 [00:58<00:17,  2.43s/it]epoch 3 loss 1.54019:  75%|███████▌  | 21/28 [00:58<00:17,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.627[0m
[32m  eval_f1 = 0.2723[0m
[32m  eval_mcc = 0.6057[0m
[32m  eval_precision = 0.375[0m
[32m  eval_recall = 0.2527[0m
[32m  ********************[0m
[32m  Best f1:0.2723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.54019:  79%|███████▊  | 22/28 [01:04<00:20,  3.49s/it]epoch 3 loss 1.54146:  79%|███████▊  | 22/28 [01:04<00:20,  3.49s/it]epoch 3 loss 1.54146:  82%|████████▏ | 23/28 [01:04<00:12,  2.57s/it]epoch 3 loss 1.54288:  82%|████████▏ | 23/28 [01:05<00:12,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6283[0m
[32m  eval_f1 = 0.2729[0m
[32m  eval_mcc = 0.6073[0m
[32m  eval_precision = 0.3846[0m
[32m  eval_recall = 0.2535[0m
[32m  ********************[0m
[32m  Best f1:0.2729[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.54288:  86%|████████▌ | 24/28 [01:10<00:14,  3.58s/it]epoch 3 loss 1.54259:  86%|████████▌ | 24/28 [01:11<00:14,  3.58s/it]epoch 3 loss 1.54259:  89%|████████▉ | 25/28 [01:11<00:07,  2.63s/it]epoch 3 loss 1.54115:  89%|████████▉ | 25/28 [01:11<00:07,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6294[0m
[32m  eval_f1 = 0.2755[0m
[32m  eval_mcc = 0.6086[0m
[32m  eval_precision = 0.3864[0m
[32m  eval_recall = 0.2551[0m
[32m  ********************[0m
[32m  Best f1:0.2755[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.54115:  93%|█████████▎| 26/28 [01:17<00:07,  3.68s/it]epoch 3 loss 1.53381:  93%|█████████▎| 26/28 [01:17<00:07,  3.68s/it]epoch 3 loss 1.53381:  96%|█████████▋| 27/28 [01:17<00:02,  2.71s/it]epoch 3 loss 1.52561:  96%|█████████▋| 27/28 [01:17<00:02,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6292[0m
[32m  eval_f1 = 0.2764[0m
[32m  eval_mcc = 0.6085[0m
[32m  eval_precision = 0.3881[0m
[32m  eval_recall = 0.2552[0m
[32m  ********************[0m
[32m  Best f1:0.2764[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.52561: 100%|██████████| 28/28 [01:22<00:00,  3.34s/it]epoch 3 loss 1.52561: 100%|██████████| 28/28 [01:22<00:00,  2.95s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.44364:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.44364:   4%|▎         | 1/28 [00:00<00:11,  2.45it/s]epoch 4 loss 1.49681:   4%|▎         | 1/28 [00:00<00:11,  2.45it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6293[0m
[32m  eval_f1 = 0.2751[0m
[32m  eval_mcc = 0.6089[0m
[32m  eval_precision = 0.3887[0m
[32m  eval_recall = 0.254[0m
[32m  ********************[0m
[32m  Best MCC:0.6089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.49681:   7%|▋         | 2/28 [00:05<01:20,  3.09s/it]epoch 4 loss 1.51613:   7%|▋         | 2/28 [00:05<01:20,  3.09s/it]epoch 4 loss 1.51613:  11%|█         | 3/28 [00:05<00:46,  1.86s/it]epoch 4 loss 1.53919:  11%|█         | 3/28 [00:06<00:46,  1.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6291[0m
[32m  eval_f1 = 0.275[0m
[32m  eval_mcc = 0.6088[0m
[32m  eval_precision = 0.3972[0m
[32m  eval_recall = 0.2539[0m

epoch 4 loss 1.53919:  14%|█▍        | 4/28 [00:09<01:03,  2.65s/it]epoch 4 loss 1.49454:  14%|█▍        | 4/28 [00:10<01:03,  2.65s/it]epoch 4 loss 1.49454:  18%|█▊        | 5/28 [00:10<00:42,  1.84s/it]epoch 4 loss 1.47247:  18%|█▊        | 5/28 [00:10<00:42,  1.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.70it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.70it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.94it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6293[0m
[32m  eval_f1 = 0.27[0m
[32m  eval_mcc = 0.6089[0m
[32m  eval_precision = 0.3977[0m
[32m  eval_recall = 0.2498[0m
[32m  ********************[0m
[32m  Best MCC:0.6089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.47247:  21%|██▏       | 6/28 [00:15<01:04,  2.92s/it]epoch 4 loss 1.48005:  21%|██▏       | 6/28 [00:15<01:04,  2.92s/it]epoch 4 loss 1.48005:  25%|██▌       | 7/28 [00:15<00:44,  2.10s/it]epoch 4 loss 1.48699:  25%|██▌       | 7/28 [00:15<00:44,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6291[0m
[32m  eval_f1 = 0.2706[0m
[32m  eval_mcc = 0.6087[0m
[32m  eval_precision = 0.3907[0m
[32m  eval_recall = 0.2502[0m

epoch 4 loss 1.48699:  29%|██▊       | 8/28 [00:19<00:53,  2.66s/it]epoch 4 loss 1.47862:  29%|██▊       | 8/28 [00:19<00:53,  2.66s/it]epoch 4 loss 1.47862:  32%|███▏      | 9/28 [00:19<00:37,  1.95s/it]epoch 4 loss 1.4753:  32%|███▏      | 9/28 [00:20<00:37,  1.95s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6286[0m
[32m  eval_f1 = 0.2707[0m
[32m  eval_mcc = 0.6079[0m
[32m  eval_precision = 0.3902[0m
[32m  eval_recall = 0.2503[0m

epoch 4 loss 1.4753:  36%|███▌      | 10/28 [00:23<00:45,  2.54s/it]epoch 4 loss 1.46987:  36%|███▌      | 10/28 [00:23<00:45,  2.54s/it]epoch 4 loss 1.46987:  39%|███▉      | 11/28 [00:23<00:32,  1.89s/it]epoch 4 loss 1.4822:  39%|███▉      | 11/28 [00:24<00:32,  1.89s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6285[0m
[32m  eval_f1 = 0.2708[0m
[32m  eval_mcc = 0.6075[0m
[32m  eval_precision = 0.3901[0m
[32m  eval_recall = 0.2503[0m

epoch 4 loss 1.4822:  43%|████▎     | 12/28 [00:27<00:39,  2.49s/it]epoch 4 loss 1.48482:  43%|████▎     | 12/28 [00:28<00:39,  2.49s/it]epoch 4 loss 1.48482:  46%|████▋     | 13/28 [00:28<00:27,  1.86s/it]epoch 4 loss 1.4832:  46%|████▋     | 13/28 [00:28<00:27,  1.86s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6285[0m
[32m  eval_f1 = 0.2772[0m
[32m  eval_mcc = 0.6075[0m
[32m  eval_precision = 0.4063[0m
[32m  eval_recall = 0.2551[0m
[32m  ********************[0m
[32m  Best f1:0.2772[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.4832:  50%|█████     | 14/28 [00:33<00:39,  2.80s/it]epoch 4 loss 1.48855:  50%|█████     | 14/28 [00:33<00:39,  2.80s/it]epoch 4 loss 1.48855:  54%|█████▎    | 15/28 [00:33<00:27,  2.09s/it]epoch 4 loss 1.48995:  54%|█████▎    | 15/28 [00:34<00:27,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.49it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.56it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.63it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.66it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.69it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.70it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.92it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6288[0m
[32m  eval_f1 = 0.2781[0m
[32m  eval_mcc = 0.6076[0m
[32m  eval_precision = 0.4066[0m
[32m  eval_recall = 0.2558[0m
[32m  ********************[0m
[32m  Best f1:0.2781[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.48995:  57%|█████▋    | 16/28 [00:39<00:37,  3.11s/it]epoch 4 loss 1.48531:  57%|█████▋    | 16/28 [00:39<00:37,  3.11s/it]epoch 4 loss 1.48531:  61%|██████    | 17/28 [00:39<00:25,  2.30s/it]epoch 4 loss 1.48798:  61%|██████    | 17/28 [00:39<00:25,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6294[0m
[32m  eval_f1 = 0.2788[0m
[32m  eval_mcc = 0.6082[0m
[32m  eval_precision = 0.4067[0m
[32m  eval_recall = 0.2565[0m
[32m  ********************[0m
[32m  Best f1:0.2788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.48798:  64%|██████▍   | 18/28 [00:44<00:31,  3.19s/it]epoch 4 loss 1.4869:  64%|██████▍   | 18/28 [00:45<00:31,  3.19s/it] epoch 4 loss 1.4869:  68%|██████▊   | 19/28 [00:45<00:21,  2.36s/it]epoch 4 loss 1.48799:  68%|██████▊   | 19/28 [00:45<00:21,  2.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6297[0m
[32m  eval_f1 = 0.279[0m
[32m  eval_mcc = 0.6085[0m
[32m  eval_precision = 0.4068[0m
[32m  eval_recall = 0.2568[0m
[32m  ********************[0m
[32m  Best f1:0.279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.48799:  71%|███████▏  | 20/28 [00:50<00:25,  3.17s/it]epoch 4 loss 1.4873:  71%|███████▏  | 20/28 [00:50<00:25,  3.17s/it] epoch 4 loss 1.4873:  75%|███████▌  | 21/28 [00:50<00:16,  2.34s/it]epoch 4 loss 1.49099:  75%|███████▌  | 21/28 [00:51<00:16,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6305[0m
[32m  eval_f1 = 0.2796[0m
[32m  eval_mcc = 0.6093[0m
[32m  eval_precision = 0.4074[0m
[32m  eval_recall = 0.2574[0m
[32m  ********************[0m
[32m  Best f1:0.2796[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.49099:  79%|███████▊  | 22/28 [00:56<00:19,  3.33s/it]epoch 4 loss 1.49264:  79%|███████▊  | 22/28 [00:56<00:19,  3.33s/it]epoch 4 loss 1.49264:  82%|████████▏ | 23/28 [00:56<00:12,  2.45s/it]epoch 4 loss 1.48804:  82%|████████▏ | 23/28 [00:57<00:12,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6307[0m
[32m  eval_f1 = 0.2801[0m
[32m  eval_mcc = 0.6096[0m
[32m  eval_precision = 0.4072[0m
[32m  eval_recall = 0.2579[0m
[32m  ********************[0m
[32m  Best f1:0.2801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.48804:  86%|████████▌ | 24/28 [01:02<00:14,  3.55s/it]epoch 4 loss 1.48411:  86%|████████▌ | 24/28 [01:03<00:14,  3.55s/it]epoch 4 loss 1.48411:  89%|████████▉ | 25/28 [01:03<00:07,  2.61s/it]epoch 4 loss 1.47855:  89%|████████▉ | 25/28 [01:03<00:07,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.631[0m
[32m  eval_f1 = 0.2801[0m
[32m  eval_mcc = 0.6099[0m
[32m  eval_precision = 0.4071[0m
[32m  eval_recall = 0.258[0m
[32m  ********************[0m
[32m  Best f1:0.2801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.47855:  93%|█████████▎| 26/28 [01:09<00:07,  3.69s/it]epoch 4 loss 1.4846:  93%|█████████▎| 26/28 [01:09<00:07,  3.69s/it] epoch 4 loss 1.4846:  96%|█████████▋| 27/28 [01:09<00:02,  2.72s/it]epoch 4 loss 1.48238:  96%|█████████▋| 27/28 [01:10<00:02,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.631[0m
[32m  eval_f1 = 0.28[0m
[32m  eval_mcc = 0.6099[0m
[32m  eval_precision = 0.4071[0m
[32m  eval_recall = 0.2579[0m
[32m  ********************[0m
[32m  Best MCC:0.6099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.48238: 100%|██████████| 28/28 [01:14<00:00,  3.29s/it]epoch 4 loss 1.48238: 100%|██████████| 28/28 [01:14<00:00,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.73it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.71it/s] 40%|████      | 4/10 [00:01<00:02,  2.68it/s] 50%|█████     | 5/10 [00:01<00:01,  2.69it/s] 60%|██████    | 6/10 [00:02<00:01,  2.70it/s] 70%|███████   | 7/10 [00:02<00:01,  2.71it/s] 80%|████████  | 8/10 [00:02<00:00,  2.70it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s]100%|██████████| 10/10 [00:03<00:00,  2.94it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.631[0m
[32m  eval_f1 = 0.2801[0m
[32m  eval_mcc = 0.6099[0m
[32m  eval_precision = 0.4071[0m
[32m  eval_recall = 0.258[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.74it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.68it/s] 40%|████      | 4/10 [00:01<00:02,  2.69it/s] 50%|█████     | 5/10 [00:01<00:01,  2.69it/s] 60%|██████    | 6/10 [00:02<00:01,  2.70it/s] 70%|███████   | 7/10 [00:02<00:01,  2.70it/s] 80%|████████  | 8/10 [00:02<00:00,  2.70it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.70it/s]100%|██████████| 10/10 [00:03<00:00,  2.92it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6143[0m
[32m  eval_f1 = 0.227[0m
[32m  eval_mcc = 0.5936[0m
[32m  eval_precision = 0.3024[0m
[32m  eval_recall = 0.2116[0m

