[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=1, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.58776:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.58776:   4%|▎         | 1/28 [00:00<00:21,  1.27it/s]epoch 0 loss 5.59039:   4%|▎         | 1/28 [00:01<00:21,  1.27it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.003[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = -0.0012[0m
[32m  eval_precision = 0.0084[0m
[32m  eval_recall = 0.0031[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.59039:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 0 loss 5.58091:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 0 loss 5.58091:  11%|█         | 3/28 [00:05<00:47,  1.89s/it]epoch 0 loss 5.56609:  11%|█         | 3/28 [00:06<00:47,  1.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0063[0m
[32m  eval_f1 = 0.002[0m
[32m  eval_mcc = -0.0018[0m
[32m  eval_precision = 0.0077[0m
[32m  eval_recall = 0.0026[0m
[32m  ********************[0m
[32m  Best f1:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.56609:  14%|█▍        | 4/28 [00:11<01:15,  3.14s/it]epoch 0 loss 5.54857:  14%|█▍        | 4/28 [00:11<01:15,  3.14s/it]epoch 0 loss 5.54857:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it]epoch 0 loss 5.52443:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0152[0m
[32m  eval_f1 = 0.0035[0m
[32m  eval_mcc = -0.002[0m
[32m  eval_precision = 0.0083[0m
[32m  eval_recall = 0.0031[0m
[32m  ********************[0m
[32m  Best f1:0.0035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.52443:  21%|██▏       | 6/28 [00:16<01:07,  3.08s/it]epoch 0 loss 5.48482:  21%|██▏       | 6/28 [00:16<01:07,  3.08s/it]epoch 0 loss 5.48482:  25%|██▌       | 7/28 [00:16<00:46,  2.21s/it]epoch 0 loss 5.44471:  25%|██▌       | 7/28 [00:17<00:46,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0368[0m
[32m  eval_f1 = 0.0066[0m
[32m  eval_mcc = 0.0009[0m
[32m  eval_precision = 0.0128[0m
[32m  eval_recall = 0.0074[0m
[32m  ********************[0m
[32m  Best f1:0.0066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.44471:  29%|██▊       | 8/28 [00:22<01:07,  3.38s/it]epoch 0 loss 5.3975:  29%|██▊       | 8/28 [00:23<01:07,  3.38s/it] epoch 0 loss 5.3975:  32%|███▏      | 9/28 [00:23<00:46,  2.46s/it]epoch 0 loss 5.34503:  32%|███▏      | 9/28 [00:23<00:46,  2.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0817[0m
[32m  eval_f1 = 0.0118[0m
[32m  eval_mcc = 0.0277[0m
[32m  eval_precision = 0.0193[0m
[32m  eval_recall = 0.0137[0m
[32m  ********************[0m
[32m  Best f1:0.0118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.34503:  36%|███▌      | 10/28 [00:29<01:06,  3.71s/it]epoch 0 loss 5.29093:  36%|███▌      | 10/28 [00:29<01:06,  3.71s/it]epoch 0 loss 5.29093:  39%|███▉      | 11/28 [00:29<00:46,  2.71s/it]epoch 0 loss 5.22428:  39%|███▉      | 11/28 [00:30<00:46,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1114[0m
[32m  eval_f1 = 0.0179[0m
[32m  eval_mcc = 0.052[0m
[32m  eval_precision = 0.0199[0m
[32m  eval_recall = 0.0206[0m
[32m  ********************[0m
[32m  Best f1:0.0179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.22428:  43%|████▎     | 12/28 [00:36<01:01,  3.86s/it]epoch 0 loss 5.15972:  43%|████▎     | 12/28 [00:36<01:01,  3.86s/it]epoch 0 loss 5.15972:  46%|████▋     | 13/28 [00:36<00:42,  2.82s/it]epoch 0 loss 5.08874:  46%|████▋     | 13/28 [00:37<00:42,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1448[0m
[32m  eval_f1 = 0.026[0m
[32m  eval_mcc = 0.0842[0m
[32m  eval_precision = 0.0368[0m
[32m  eval_recall = 0.027[0m
[32m  ********************[0m
[32m  Best f1:0.026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0842[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.08874:  50%|█████     | 14/28 [00:43<00:55,  3.95s/it]epoch 0 loss 5.01587:  50%|█████     | 14/28 [00:43<00:55,  3.95s/it]epoch 0 loss 5.01587:  54%|█████▎    | 15/28 [00:43<00:37,  2.89s/it]epoch 0 loss 4.93748:  54%|█████▎    | 15/28 [00:44<00:37,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1913[0m
[32m  eval_f1 = 0.0338[0m
[32m  eval_mcc = 0.1326[0m
[32m  eval_precision = 0.0478[0m
[32m  eval_recall = 0.0346[0m
[32m  ********************[0m
[32m  Best f1:0.0338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93748:  57%|█████▋    | 16/28 [00:50<00:47,  3.98s/it]epoch 0 loss 4.85923:  57%|█████▋    | 16/28 [00:50<00:47,  3.98s/it]epoch 0 loss 4.85923:  61%|██████    | 17/28 [00:50<00:31,  2.91s/it]epoch 0 loss 4.78296:  61%|██████    | 17/28 [00:51<00:31,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2593[0m
[32m  eval_f1 = 0.0449[0m
[32m  eval_mcc = 0.2052[0m
[32m  eval_precision = 0.0783[0m
[32m  eval_recall = 0.0441[0m
[32m  ********************[0m
[32m  Best f1:0.0449[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.78296:  64%|██████▍   | 18/28 [00:57<00:39,  3.99s/it]epoch 0 loss 4.70571:  64%|██████▍   | 18/28 [00:57<00:39,  3.99s/it]epoch 0 loss 4.70571:  68%|██████▊   | 19/28 [00:57<00:26,  2.92s/it]epoch 0 loss 4.63528:  68%|██████▊   | 19/28 [00:58<00:26,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3207[0m
[32m  eval_f1 = 0.0597[0m
[32m  eval_mcc = 0.2714[0m
[32m  eval_precision = 0.1048[0m
[32m  eval_recall = 0.0567[0m
[32m  ********************[0m
[32m  Best f1:0.0597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.63528:  71%|███████▏  | 20/28 [01:07<00:40,  5.03s/it]epoch 0 loss 4.56247:  71%|███████▏  | 20/28 [01:08<00:40,  5.03s/it]epoch 0 loss 4.56247:  75%|███████▌  | 21/28 [01:08<00:25,  3.64s/it]epoch 0 loss 4.48601:  75%|███████▌  | 21/28 [01:08<00:25,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3737[0m
[32m  eval_f1 = 0.0743[0m
[32m  eval_mcc = 0.3285[0m
[32m  eval_precision = 0.1259[0m
[32m  eval_recall = 0.0701[0m
[32m  ********************[0m
[32m  Best f1:0.0743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.48601:  79%|███████▊  | 22/28 [01:19<00:36,  6.05s/it]epoch 0 loss 4.41615:  79%|███████▊  | 22/28 [01:20<00:36,  6.05s/it]epoch 0 loss 4.41615:  82%|████████▏ | 23/28 [01:20<00:21,  4.37s/it]epoch 0 loss 4.34753:  82%|████████▏ | 23/28 [01:20<00:21,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.44[0m
[32m  eval_f1 = 0.1053[0m
[32m  eval_mcc = 0.4017[0m
[32m  eval_precision = 0.1546[0m
[32m  eval_recall = 0.096[0m
[32m  ********************[0m
[32m  Best f1:0.1053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.34753:  86%|████████▌ | 24/28 [01:29<00:23,  5.91s/it]epoch 0 loss 4.28005:  86%|████████▌ | 24/28 [01:30<00:23,  5.91s/it]epoch 0 loss 4.28005:  89%|████████▉ | 25/28 [01:30<00:12,  4.26s/it]epoch 0 loss 4.20699:  89%|████████▉ | 25/28 [01:30<00:12,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.59it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4748[0m
[32m  eval_f1 = 0.1209[0m
[32m  eval_mcc = 0.4402[0m
[32m  eval_precision = 0.1649[0m
[32m  eval_recall = 0.11[0m
[32m  ********************[0m
[32m  Best f1:0.1209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.20699:  93%|█████████▎| 26/28 [01:41<00:12,  6.44s/it]epoch 0 loss 4.13879:  93%|█████████▎| 26/28 [01:42<00:12,  6.44s/it]epoch 0 loss 4.13879:  96%|█████████▋| 27/28 [01:42<00:04,  4.63s/it]epoch 0 loss 4.07782:  96%|█████████▋| 27/28 [01:42<00:04,  4.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5038[0m
[32m  eval_f1 = 0.135[0m
[32m  eval_mcc = 0.4727[0m
[32m  eval_precision = 0.1712[0m
[32m  eval_recall = 0.1253[0m
[32m  ********************[0m
[32m  Best f1:0.135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.07782: 100%|██████████| 28/28 [01:52<00:00,  6.39s/it]epoch 0 loss 4.07782: 100%|██████████| 28/28 [01:52<00:00,  4.02s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.22579:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.22579:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 1 loss 2.12402:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5288[0m
[32m  eval_f1 = 0.1448[0m
[32m  eval_mcc = 0.5001[0m
[32m  eval_precision = 0.183[0m
[32m  eval_recall = 0.1409[0m
[32m  ********************[0m
[32m  Best f1:0.1448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12402:   7%|▋         | 2/28 [00:09<02:28,  5.70s/it]epoch 1 loss 2.06364:   7%|▋         | 2/28 [00:10<02:28,  5.70s/it]epoch 1 loss 2.06364:  11%|█         | 3/28 [00:10<01:22,  3.29s/it]epoch 1 loss 2.04179:  11%|█         | 3/28 [00:10<01:22,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5445[0m
[32m  eval_f1 = 0.1536[0m
[32m  eval_mcc = 0.5173[0m
[32m  eval_precision = 0.2097[0m
[32m  eval_recall = 0.1499[0m
[32m  ********************[0m
[32m  Best f1:0.1536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04179:  14%|█▍        | 4/28 [00:19<02:18,  5.76s/it]epoch 1 loss 2.02938:  14%|█▍        | 4/28 [00:20<02:18,  5.76s/it]epoch 1 loss 2.02938:  18%|█▊        | 5/28 [00:20<01:28,  3.83s/it]epoch 1 loss 2.006:  18%|█▊        | 5/28 [00:20<01:28,  3.83s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5695[0m
[32m  eval_f1 = 0.1782[0m
[32m  eval_mcc = 0.5447[0m
[32m  eval_precision = 0.2315[0m
[32m  eval_recall = 0.1706[0m
[32m  ********************[0m
[32m  Best f1:0.1782[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.006:  21%|██▏       | 6/28 [00:29<02:02,  5.56s/it]epoch 1 loss 1.98186:  21%|██▏       | 6/28 [00:29<02:02,  5.56s/it]epoch 1 loss 1.98186:  25%|██▌       | 7/28 [00:29<01:21,  3.89s/it]epoch 1 loss 1.96519:  25%|██▌       | 7/28 [00:29<01:21,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5794[0m
[32m  eval_f1 = 0.187[0m
[32m  eval_mcc = 0.5555[0m
[32m  eval_precision = 0.2403[0m
[32m  eval_recall = 0.1799[0m
[32m  ********************[0m
[32m  Best f1:0.187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96519:  29%|██▊       | 8/28 [00:38<01:49,  5.45s/it]epoch 1 loss 1.96329:  29%|██▊       | 8/28 [00:38<01:49,  5.45s/it]epoch 1 loss 1.96329:  32%|███▏      | 9/28 [00:38<01:13,  3.88s/it]epoch 1 loss 1.94489:  32%|███▏      | 9/28 [00:39<01:13,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.587[0m
[32m  eval_f1 = 0.1915[0m
[32m  eval_mcc = 0.5638[0m
[32m  eval_precision = 0.2689[0m
[32m  eval_recall = 0.1827[0m
[32m  ********************[0m
[32m  Best f1:0.1915[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94489:  36%|███▌      | 10/28 [00:46<01:28,  4.92s/it]epoch 1 loss 1.92498:  36%|███▌      | 10/28 [00:46<01:28,  4.92s/it]epoch 1 loss 1.92498:  39%|███▉      | 11/28 [00:46<01:00,  3.54s/it]epoch 1 loss 1.89882:  39%|███▉      | 11/28 [00:46<01:00,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5932[0m
[32m  eval_f1 = 0.2043[0m
[32m  eval_mcc = 0.5705[0m
[32m  eval_precision = 0.3097[0m
[32m  eval_recall = 0.1904[0m
[32m  ********************[0m
[32m  Best f1:0.2043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89882:  43%|████▎     | 12/28 [00:55<01:22,  5.14s/it]epoch 1 loss 1.87554:  43%|████▎     | 12/28 [00:55<01:22,  5.14s/it]epoch 1 loss 1.87554:  46%|████▋     | 13/28 [00:55<00:55,  3.71s/it]epoch 1 loss 1.86265:  46%|████▋     | 13/28 [00:56<00:55,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5992[0m
[32m  eval_f1 = 0.2268[0m
[32m  eval_mcc = 0.5767[0m
[32m  eval_precision = 0.3308[0m
[32m  eval_recall = 0.2076[0m
[32m  ********************[0m
[32m  Best f1:0.2268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5767[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86265:  50%|█████     | 14/28 [01:03<01:09,  4.99s/it]epoch 1 loss 1.84434:  50%|█████     | 14/28 [01:04<01:09,  4.99s/it]epoch 1 loss 1.84434:  54%|█████▎    | 15/28 [01:04<00:46,  3.61s/it]epoch 1 loss 1.83185:  54%|█████▎    | 15/28 [01:04<00:46,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6085[0m
[32m  eval_f1 = 0.2462[0m
[32m  eval_mcc = 0.587[0m
[32m  eval_precision = 0.3438[0m
[32m  eval_recall = 0.2277[0m
[32m  ********************[0m
[32m  Best f1:0.2462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83185:  57%|█████▋    | 16/28 [01:12<01:01,  5.16s/it]epoch 1 loss 1.81146:  57%|█████▋    | 16/28 [01:13<01:01,  5.16s/it]epoch 1 loss 1.81146:  61%|██████    | 17/28 [01:13<00:41,  3.73s/it]epoch 1 loss 1.79293:  61%|██████    | 17/28 [01:13<00:41,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6145[0m
[32m  eval_f1 = 0.262[0m
[32m  eval_mcc = 0.594[0m
[32m  eval_precision = 0.3732[0m
[32m  eval_recall = 0.2424[0m
[32m  ********************[0m
[32m  Best f1:0.262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.594[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.79293:  64%|██████▍   | 18/28 [01:21<00:49,  5.00s/it]epoch 1 loss 1.77369:  64%|██████▍   | 18/28 [01:21<00:49,  5.00s/it]epoch 1 loss 1.77369:  68%|██████▊   | 19/28 [01:21<00:32,  3.62s/it]epoch 1 loss 1.7754:  68%|██████▊   | 19/28 [01:21<00:32,  3.62s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6204[0m
[32m  eval_f1 = 0.2676[0m
[32m  eval_mcc = 0.6011[0m
[32m  eval_precision = 0.3683[0m
[32m  eval_recall = 0.2469[0m
[32m  ********************[0m
[32m  Best f1:0.2676[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7754:  71%|███████▏  | 20/28 [01:30<00:41,  5.22s/it]epoch 1 loss 1.76311:  71%|███████▏  | 20/28 [01:30<00:41,  5.22s/it]epoch 1 loss 1.76311:  75%|███████▌  | 21/28 [01:30<00:26,  3.78s/it]epoch 1 loss 1.75175:  75%|███████▌  | 21/28 [01:31<00:26,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6272[0m
[32m  eval_f1 = 0.276[0m
[32m  eval_mcc = 0.6074[0m
[32m  eval_precision = 0.3719[0m
[32m  eval_recall = 0.2565[0m
[32m  ********************[0m
[32m  Best f1:0.276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75175:  79%|███████▊  | 22/28 [01:39<00:32,  5.35s/it]epoch 1 loss 1.73572:  79%|███████▊  | 22/28 [01:40<00:32,  5.35s/it]epoch 1 loss 1.73572:  82%|████████▏ | 23/28 [01:40<00:19,  3.87s/it]epoch 1 loss 1.72393:  82%|████████▏ | 23/28 [01:40<00:19,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6312[0m
[32m  eval_f1 = 0.2801[0m
[32m  eval_mcc = 0.6103[0m
[32m  eval_precision = 0.3736[0m
[32m  eval_recall = 0.2623[0m
[32m  ********************[0m
[32m  Best f1:0.2801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72393:  86%|████████▌ | 24/28 [01:50<00:23,  5.86s/it]epoch 1 loss 1.70941:  86%|████████▌ | 24/28 [01:51<00:23,  5.86s/it]epoch 1 loss 1.70941:  89%|████████▉ | 25/28 [01:51<00:12,  4.23s/it]epoch 1 loss 1.69825:  89%|████████▉ | 25/28 [01:51<00:12,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6339[0m
[32m  eval_f1 = 0.2856[0m
[32m  eval_mcc = 0.6125[0m
[32m  eval_precision = 0.3827[0m
[32m  eval_recall = 0.2672[0m
[32m  ********************[0m
[32m  Best f1:0.2856[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.69825:  93%|█████████▎| 26/28 [02:00<00:11,  5.72s/it]epoch 1 loss 1.6874:  93%|█████████▎| 26/28 [02:00<00:11,  5.72s/it] epoch 1 loss 1.6874:  96%|█████████▋| 27/28 [02:00<00:04,  4.13s/it]epoch 1 loss 1.67718:  96%|█████████▋| 27/28 [02:01<00:04,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.62it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6358[0m
[32m  eval_f1 = 0.2899[0m
[32m  eval_mcc = 0.6143[0m
[32m  eval_precision = 0.38[0m
[32m  eval_recall = 0.2715[0m
[32m  ********************[0m
[32m  Best f1:0.2899[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.67718: 100%|██████████| 28/28 [02:11<00:00,  6.19s/it]epoch 1 loss 1.67718: 100%|██████████| 28/28 [02:11<00:00,  4.71s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.2191:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.2191:   4%|▎         | 1/28 [00:00<00:11,  2.30it/s]epoch 2 loss 1.33484:   4%|▎         | 1/28 [00:00<00:11,  2.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.639[0m
[32m  eval_f1 = 0.297[0m
[32m  eval_mcc = 0.6179[0m
[32m  eval_precision = 0.393[0m
[32m  eval_recall = 0.2775[0m
[32m  ********************[0m
[32m  Best f1:0.297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33484:   7%|▋         | 2/28 [00:12<03:09,  7.28s/it]epoch 2 loss 1.33273:   7%|▋         | 2/28 [00:12<03:09,  7.28s/it]epoch 2 loss 1.33273:  11%|█         | 3/28 [00:12<01:43,  4.15s/it]epoch 2 loss 1.32786:  11%|█         | 3/28 [00:13<01:43,  4.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6413[0m
[32m  eval_f1 = 0.3022[0m
[32m  eval_mcc = 0.6205[0m
[32m  eval_precision = 0.4[0m
[32m  eval_recall = 0.2811[0m
[32m  ********************[0m
[32m  Best f1:0.3022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32786:  14%|█▍        | 4/28 [00:21<02:25,  6.05s/it]epoch 2 loss 1.32379:  14%|█▍        | 4/28 [00:22<02:25,  6.05s/it]epoch 2 loss 1.32379:  18%|█▊        | 5/28 [00:22<01:32,  4.02s/it]epoch 2 loss 1.34084:  18%|█▊        | 5/28 [00:22<01:32,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6453[0m
[32m  eval_f1 = 0.3131[0m
[32m  eval_mcc = 0.625[0m
[32m  eval_precision = 0.4123[0m
[32m  eval_recall = 0.2902[0m
[32m  ********************[0m
[32m  Best f1:0.3131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34084:  21%|██▏       | 6/28 [00:32<02:11,  5.98s/it]epoch 2 loss 1.38342:  21%|██▏       | 6/28 [00:32<02:11,  5.98s/it]epoch 2 loss 1.38342:  25%|██▌       | 7/28 [00:32<01:27,  4.17s/it]epoch 2 loss 1.37792:  25%|██▌       | 7/28 [00:32<01:27,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6494[0m
[32m  eval_f1 = 0.3203[0m
[32m  eval_mcc = 0.6301[0m
[32m  eval_precision = 0.4171[0m
[32m  eval_recall = 0.2971[0m
[32m  ********************[0m
[32m  Best f1:0.3203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37792:  29%|██▊       | 8/28 [00:40<01:49,  5.49s/it]epoch 2 loss 1.37962:  29%|██▊       | 8/28 [00:41<01:49,  5.49s/it]epoch 2 loss 1.37962:  32%|███▏      | 9/28 [00:41<01:14,  3.91s/it]epoch 2 loss 1.36897:  32%|███▏      | 9/28 [00:41<01:14,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6519[0m
[32m  eval_f1 = 0.3221[0m
[32m  eval_mcc = 0.6334[0m
[32m  eval_precision = 0.4151[0m
[32m  eval_recall = 0.3006[0m
[32m  ********************[0m
[32m  Best f1:0.3221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36897:  36%|███▌      | 10/28 [00:49<01:35,  5.30s/it]epoch 2 loss 1.34834:  36%|███▌      | 10/28 [00:50<01:35,  5.30s/it]epoch 2 loss 1.34834:  39%|███▉      | 11/28 [00:50<01:04,  3.81s/it]epoch 2 loss 1.34795:  39%|███▉      | 11/28 [00:50<01:04,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6537[0m
[32m  eval_f1 = 0.3261[0m
[32m  eval_mcc = 0.6352[0m
[32m  eval_precision = 0.4229[0m
[32m  eval_recall = 0.3039[0m
[32m  ********************[0m
[32m  Best f1:0.3261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34795:  43%|████▎     | 12/28 [00:57<01:19,  4.98s/it]epoch 2 loss 1.33919:  43%|████▎     | 12/28 [00:58<01:19,  4.98s/it]epoch 2 loss 1.33919:  46%|████▋     | 13/28 [00:58<00:54,  3.60s/it]epoch 2 loss 1.33082:  46%|████▋     | 13/28 [00:58<00:54,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6535[0m
[32m  eval_f1 = 0.3273[0m
[32m  eval_mcc = 0.6346[0m
[32m  eval_precision = 0.4218[0m
[32m  eval_recall = 0.3059[0m
[32m  ********************[0m
[32m  Best f1:0.3273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.33082:  50%|█████     | 14/28 [01:03<00:56,  4.03s/it]epoch 2 loss 1.34011:  50%|█████     | 14/28 [01:03<00:56,  4.03s/it]epoch 2 loss 1.34011:  54%|█████▎    | 15/28 [01:03<00:38,  2.93s/it]epoch 2 loss 1.32881:  54%|█████▎    | 15/28 [01:04<00:38,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.334[0m
[32m  eval_mcc = 0.6366[0m
[32m  eval_precision = 0.439[0m
[32m  eval_recall = 0.3112[0m
[32m  ********************[0m
[32m  Best f1:0.334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32881:  57%|█████▋    | 16/28 [01:12<00:55,  4.65s/it]epoch 2 loss 1.32163:  57%|█████▋    | 16/28 [01:12<00:55,  4.65s/it]epoch 2 loss 1.32163:  61%|██████    | 17/28 [01:12<00:37,  3.38s/it]epoch 2 loss 1.31315:  61%|██████    | 17/28 [01:13<00:37,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6578[0m
[32m  eval_f1 = 0.3369[0m
[32m  eval_mcc = 0.6385[0m
[32m  eval_precision = 0.4424[0m
[32m  eval_recall = 0.3131[0m
[32m  ********************[0m
[32m  Best f1:0.3369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31315:  64%|██████▍   | 18/28 [01:21<00:48,  4.88s/it]epoch 2 loss 1.31455:  64%|██████▍   | 18/28 [01:21<00:48,  4.88s/it]epoch 2 loss 1.31455:  68%|██████▊   | 19/28 [01:21<00:31,  3.54s/it]epoch 2 loss 1.31259:  68%|██████▊   | 19/28 [01:21<00:31,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6592[0m
[32m  eval_f1 = 0.3428[0m
[32m  eval_mcc = 0.6399[0m
[32m  eval_precision = 0.4423[0m
[32m  eval_recall = 0.3178[0m
[32m  ********************[0m
[32m  Best f1:0.3428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31259:  71%|███████▏  | 20/28 [01:30<00:40,  5.08s/it]epoch 2 loss 1.30635:  71%|███████▏  | 20/28 [01:30<00:40,  5.08s/it]epoch 2 loss 1.30635:  75%|███████▌  | 21/28 [01:30<00:25,  3.68s/it]epoch 2 loss 1.30976:  75%|███████▌  | 21/28 [01:30<00:25,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6601[0m
[32m  eval_f1 = 0.3455[0m
[32m  eval_mcc = 0.6409[0m
[32m  eval_precision = 0.4403[0m
[32m  eval_recall = 0.3206[0m
[32m  ********************[0m
[32m  Best f1:0.3455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30976:  79%|███████▊  | 22/28 [01:39<00:31,  5.25s/it]epoch 2 loss 1.30696:  79%|███████▊  | 22/28 [01:39<00:31,  5.25s/it]epoch 2 loss 1.30696:  82%|████████▏ | 23/28 [01:39<00:19,  3.80s/it]epoch 2 loss 1.30149:  82%|████████▏ | 23/28 [01:40<00:19,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6604[0m
[32m  eval_f1 = 0.3545[0m
[32m  eval_mcc = 0.6414[0m
[32m  eval_precision = 0.4531[0m
[32m  eval_recall = 0.3273[0m
[32m  ********************[0m
[32m  Best f1:0.3545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6414[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30149:  86%|████████▌ | 24/28 [01:51<00:24,  6.15s/it]epoch 2 loss 1.29945:  86%|████████▌ | 24/28 [01:51<00:24,  6.15s/it]epoch 2 loss 1.29945:  89%|████████▉ | 25/28 [01:51<00:13,  4.43s/it]epoch 2 loss 1.29495:  89%|████████▉ | 25/28 [01:52<00:13,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6614[0m
[32m  eval_f1 = 0.3556[0m
[32m  eval_mcc = 0.6426[0m
[32m  eval_precision = 0.4551[0m
[32m  eval_recall = 0.3275[0m
[32m  ********************[0m
[32m  Best f1:0.3556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6426[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29495:  93%|█████████▎| 26/28 [02:00<00:11,  5.71s/it]epoch 2 loss 1.2971:  93%|█████████▎| 26/28 [02:01<00:11,  5.71s/it] epoch 2 loss 1.2971:  96%|█████████▋| 27/28 [02:01<00:04,  4.12s/it]epoch 2 loss 1.29995:  96%|█████████▋| 27/28 [02:01<00:04,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6627[0m
[32m  eval_f1 = 0.3568[0m
[32m  eval_mcc = 0.6438[0m
[32m  eval_precision = 0.4516[0m
[32m  eval_recall = 0.3294[0m
[32m  ********************[0m
[32m  Best f1:0.3568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29995: 100%|██████████| 28/28 [02:06<00:00,  4.64s/it]epoch 2 loss 1.29995: 100%|██████████| 28/28 [02:06<00:00,  4.53s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.13704:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.13704:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 3 loss 1.19962:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6636[0m
[32m  eval_f1 = 0.3581[0m
[32m  eval_mcc = 0.6446[0m
[32m  eval_precision = 0.4507[0m
[32m  eval_recall = 0.3311[0m
[32m  ********************[0m
[32m  Best f1:0.3581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6446[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19962:   7%|▋         | 2/28 [00:06<01:44,  4.00s/it]epoch 3 loss 1.23129:   7%|▋         | 2/28 [00:07<01:44,  4.00s/it]epoch 3 loss 1.23129:  11%|█         | 3/28 [00:07<00:59,  2.37s/it]epoch 3 loss 1.21287:  11%|█         | 3/28 [00:07<00:59,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6649[0m
[32m  eval_f1 = 0.3601[0m
[32m  eval_mcc = 0.6457[0m
[32m  eval_precision = 0.4495[0m
[32m  eval_recall = 0.3338[0m
[32m  ********************[0m
[32m  Best f1:0.3601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21287:  14%|█▍        | 4/28 [00:13<01:36,  4.02s/it]epoch 3 loss 1.18504:  14%|█▍        | 4/28 [00:14<01:36,  4.02s/it]epoch 3 loss 1.18504:  18%|█▊        | 5/28 [00:14<01:02,  2.73s/it]epoch 3 loss 1.19616:  18%|█▊        | 5/28 [00:14<01:02,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6666[0m
[32m  eval_f1 = 0.3618[0m
[32m  eval_mcc = 0.6476[0m
[32m  eval_precision = 0.4574[0m
[32m  eval_recall = 0.3351[0m
[32m  ********************[0m
[32m  Best f1:0.3618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19616:  21%|██▏       | 6/28 [00:20<01:28,  4.02s/it]epoch 3 loss 1.20301:  21%|██▏       | 6/28 [00:21<01:28,  4.02s/it]epoch 3 loss 1.20301:  25%|██▌       | 7/28 [00:21<00:59,  2.84s/it]epoch 3 loss 1.21687:  25%|██▌       | 7/28 [00:21<00:59,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6686[0m
[32m  eval_f1 = 0.3641[0m
[32m  eval_mcc = 0.6497[0m
[32m  eval_precision = 0.4582[0m
[32m  eval_recall = 0.3371[0m
[32m  ********************[0m
[32m  Best f1:0.3641[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21687:  29%|██▊       | 8/28 [00:27<01:20,  4.01s/it]epoch 3 loss 1.22033:  29%|██▊       | 8/28 [00:28<01:20,  4.01s/it]epoch 3 loss 1.22033:  32%|███▏      | 9/28 [00:28<00:54,  2.89s/it]epoch 3 loss 1.21872:  32%|███▏      | 9/28 [00:28<00:54,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6694[0m
[32m  eval_f1 = 0.3647[0m
[32m  eval_mcc = 0.6507[0m
[32m  eval_precision = 0.455[0m
[32m  eval_recall = 0.3386[0m
[32m  ********************[0m
[32m  Best f1:0.3647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6507[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21872:  36%|███▌      | 10/28 [00:34<01:08,  3.81s/it]epoch 3 loss 1.21046:  36%|███▌      | 10/28 [00:34<01:08,  3.81s/it]epoch 3 loss 1.21046:  39%|███▉      | 11/28 [00:34<00:47,  2.77s/it]epoch 3 loss 1.21016:  39%|███▉      | 11/28 [00:34<00:47,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6696[0m
[32m  eval_f1 = 0.3646[0m
[32m  eval_mcc = 0.651[0m
[32m  eval_precision = 0.4548[0m
[32m  eval_recall = 0.3383[0m
[32m  ********************[0m
[32m  Best MCC:0.651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21016:  43%|████▎     | 12/28 [00:39<00:55,  3.46s/it]epoch 3 loss 1.21473:  43%|████▎     | 12/28 [00:39<00:55,  3.46s/it]epoch 3 loss 1.21473:  46%|████▋     | 13/28 [00:39<00:37,  2.53s/it]epoch 3 loss 1.21014:  46%|████▋     | 13/28 [00:40<00:37,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6692[0m
[32m  eval_f1 = 0.365[0m
[32m  eval_mcc = 0.6507[0m
[32m  eval_precision = 0.4543[0m
[32m  eval_recall = 0.3382[0m
[32m  ********************[0m
[32m  Best f1:0.365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.21014:  50%|█████     | 14/28 [00:44<00:46,  3.29s/it]epoch 3 loss 1.20997:  50%|█████     | 14/28 [00:45<00:46,  3.29s/it]epoch 3 loss 1.20997:  54%|█████▎    | 15/28 [00:45<00:31,  2.42s/it]epoch 3 loss 1.21152:  54%|█████▎    | 15/28 [00:45<00:31,  2.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6687[0m
[32m  eval_f1 = 0.3653[0m
[32m  eval_mcc = 0.6502[0m
[32m  eval_precision = 0.456[0m
[32m  eval_recall = 0.3385[0m
[32m  ********************[0m
[32m  Best f1:0.3653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.21152:  57%|█████▋    | 16/28 [00:50<00:38,  3.21s/it]epoch 3 loss 1.21576:  57%|█████▋    | 16/28 [00:50<00:38,  3.21s/it]epoch 3 loss 1.21576:  61%|██████    | 17/28 [00:50<00:26,  2.37s/it]epoch 3 loss 1.22187:  61%|██████    | 17/28 [00:51<00:26,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6692[0m
[32m  eval_f1 = 0.3648[0m
[32m  eval_mcc = 0.6507[0m
[32m  eval_precision = 0.4558[0m
[32m  eval_recall = 0.3384[0m

epoch 3 loss 1.22187:  64%|██████▍   | 18/28 [00:54<00:27,  2.79s/it]epoch 3 loss 1.21269:  64%|██████▍   | 18/28 [00:55<00:27,  2.79s/it]epoch 3 loss 1.21269:  68%|██████▊   | 19/28 [00:55<00:18,  2.08s/it]epoch 3 loss 1.21478:  68%|██████▊   | 19/28 [00:55<00:18,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6699[0m
[32m  eval_f1 = 0.3659[0m
[32m  eval_mcc = 0.6514[0m
[32m  eval_precision = 0.4554[0m
[32m  eval_recall = 0.3399[0m
[32m  ********************[0m
[32m  Best f1:0.3659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21478:  71%|███████▏  | 20/28 [01:01<00:27,  3.43s/it]epoch 3 loss 1.20774:  71%|███████▏  | 20/28 [01:02<00:27,  3.43s/it]epoch 3 loss 1.20774:  75%|███████▌  | 21/28 [01:02<00:17,  2.53s/it]epoch 3 loss 1.20707:  75%|███████▌  | 21/28 [01:02<00:17,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6707[0m
[32m  eval_f1 = 0.3662[0m
[32m  eval_mcc = 0.6523[0m
[32m  eval_precision = 0.4563[0m
[32m  eval_recall = 0.3405[0m
[32m  ********************[0m
[32m  Best f1:0.3662[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20707:  79%|███████▊  | 22/28 [01:08<00:22,  3.73s/it]epoch 3 loss 1.20938:  79%|███████▊  | 22/28 [01:09<00:22,  3.73s/it]epoch 3 loss 1.20938:  82%|████████▏ | 23/28 [01:09<00:13,  2.74s/it]epoch 3 loss 1.21194:  82%|████████▏ | 23/28 [01:09<00:13,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6724[0m
[32m  eval_f1 = 0.3695[0m
[32m  eval_mcc = 0.6542[0m
[32m  eval_precision = 0.4663[0m
[32m  eval_recall = 0.3427[0m
[32m  ********************[0m
[32m  Best f1:0.3695[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21194:  86%|████████▌ | 24/28 [01:15<00:15,  3.89s/it]epoch 3 loss 1.2109:  86%|████████▌ | 24/28 [01:16<00:15,  3.89s/it] epoch 3 loss 1.2109:  89%|████████▉ | 25/28 [01:16<00:08,  2.85s/it]epoch 3 loss 1.20962:  89%|████████▉ | 25/28 [01:16<00:08,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6736[0m
[32m  eval_f1 = 0.3714[0m
[32m  eval_mcc = 0.6557[0m
[32m  eval_precision = 0.4664[0m
[32m  eval_recall = 0.3444[0m
[32m  ********************[0m
[32m  Best f1:0.3714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6557[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20962:  93%|█████████▎| 26/28 [01:21<00:07,  3.76s/it]epoch 3 loss 1.20365:  93%|█████████▎| 26/28 [01:22<00:07,  3.76s/it]epoch 3 loss 1.20365:  96%|█████████▋| 27/28 [01:22<00:02,  2.76s/it]epoch 3 loss 1.19735:  96%|█████████▋| 27/28 [01:22<00:02,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6739[0m
[32m  eval_f1 = 0.3714[0m
[32m  eval_mcc = 0.656[0m
[32m  eval_precision = 0.4659[0m
[32m  eval_recall = 0.3443[0m
[32m  ********************[0m
[32m  Best MCC:0.656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19735: 100%|██████████| 28/28 [01:27<00:00,  3.42s/it]epoch 3 loss 1.19735: 100%|██████████| 28/28 [01:27<00:00,  3.12s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.12092:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.12092:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s]epoch 4 loss 1.18584:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.63it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6749[0m
[32m  eval_f1 = 0.3721[0m
[32m  eval_mcc = 0.6571[0m
[32m  eval_precision = 0.4664[0m
[32m  eval_recall = 0.3449[0m
[32m  ********************[0m
[32m  Best f1:0.3721[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6571[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18584:   7%|▋         | 2/28 [00:15<03:50,  8.88s/it]epoch 4 loss 1.19417:   7%|▋         | 2/28 [00:15<03:50,  8.88s/it]epoch 4 loss 1.19417:  11%|█         | 3/28 [00:15<02:05,  5.02s/it]epoch 4 loss 1.21663:  11%|█         | 3/28 [00:16<02:05,  5.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6754[0m
[32m  eval_f1 = 0.3725[0m
[32m  eval_mcc = 0.6577[0m
[32m  eval_precision = 0.4665[0m
[32m  eval_recall = 0.3453[0m
[32m  ********************[0m
[32m  Best f1:0.3725[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21663:  14%|█▍        | 4/28 [00:26<02:57,  7.42s/it]epoch 4 loss 1.18358:  14%|█▍        | 4/28 [00:27<02:57,  7.42s/it]epoch 4 loss 1.18358:  18%|█▊        | 5/28 [00:27<01:52,  4.90s/it]epoch 4 loss 1.16601:  18%|█▊        | 5/28 [00:27<01:52,  4.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6755[0m
[32m  eval_f1 = 0.3728[0m
[32m  eval_mcc = 0.6577[0m
[32m  eval_precision = 0.4669[0m
[32m  eval_recall = 0.3456[0m
[32m  ********************[0m
[32m  Best f1:0.3728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16601:  21%|██▏       | 6/28 [00:36<02:18,  6.31s/it]epoch 4 loss 1.17144:  21%|██▏       | 6/28 [00:36<02:18,  6.31s/it]epoch 4 loss 1.17144:  25%|██▌       | 7/28 [00:36<01:32,  4.39s/it]epoch 4 loss 1.17663:  25%|██▌       | 7/28 [00:37<01:32,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6754[0m
[32m  eval_f1 = 0.3736[0m
[32m  eval_mcc = 0.6577[0m
[32m  eval_precision = 0.4675[0m
[32m  eval_recall = 0.3462[0m
[32m  ********************[0m
[32m  Best f1:0.3736[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.17663:  29%|██▊       | 8/28 [00:43<01:41,  5.09s/it]epoch 4 loss 1.16806:  29%|██▊       | 8/28 [00:43<01:41,  5.09s/it]epoch 4 loss 1.16806:  32%|███▏      | 9/28 [00:43<01:08,  3.63s/it]epoch 4 loss 1.16349:  32%|███▏      | 9/28 [00:44<01:08,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6746[0m
[32m  eval_f1 = 0.3729[0m
[32m  eval_mcc = 0.6566[0m
[32m  eval_precision = 0.4659[0m
[32m  eval_recall = 0.3459[0m

epoch 4 loss 1.16349:  36%|███▌      | 10/28 [00:47<01:06,  3.67s/it]epoch 4 loss 1.15847:  36%|███▌      | 10/28 [00:47<01:06,  3.67s/it]epoch 4 loss 1.15847:  39%|███▉      | 11/28 [00:47<00:45,  2.67s/it]epoch 4 loss 1.16918:  39%|███▉      | 11/28 [00:48<00:45,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6746[0m
[32m  eval_f1 = 0.3725[0m
[32m  eval_mcc = 0.6566[0m
[32m  eval_precision = 0.4656[0m
[32m  eval_recall = 0.3453[0m

epoch 4 loss 1.16918:  43%|████▎     | 12/28 [00:51<00:48,  3.01s/it]epoch 4 loss 1.17017:  43%|████▎     | 12/28 [00:52<00:48,  3.01s/it]epoch 4 loss 1.17017:  46%|████▋     | 13/28 [00:52<00:33,  2.22s/it]epoch 4 loss 1.16868:  46%|████▋     | 13/28 [00:52<00:33,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6748[0m
[32m  eval_f1 = 0.3725[0m
[32m  eval_mcc = 0.6567[0m
[32m  eval_precision = 0.4653[0m
[32m  eval_recall = 0.3453[0m

epoch 4 loss 1.16868:  50%|█████     | 14/28 [00:55<00:37,  2.69s/it]epoch 4 loss 1.17251:  50%|█████     | 14/28 [00:56<00:37,  2.69s/it]epoch 4 loss 1.17251:  54%|█████▎    | 15/28 [00:56<00:25,  2.00s/it]epoch 4 loss 1.17317:  54%|█████▎    | 15/28 [00:56<00:25,  2.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6749[0m
[32m  eval_f1 = 0.3727[0m
[32m  eval_mcc = 0.6567[0m
[32m  eval_precision = 0.464[0m
[32m  eval_recall = 0.3459[0m

epoch 4 loss 1.17317:  57%|█████▋    | 16/28 [00:59<00:30,  2.54s/it]epoch 4 loss 1.16834:  57%|█████▋    | 16/28 [01:00<00:30,  2.54s/it]epoch 4 loss 1.16834:  61%|██████    | 17/28 [01:00<00:20,  1.89s/it]epoch 4 loss 1.17092:  61%|██████    | 17/28 [01:00<00:20,  1.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6751[0m
[32m  eval_f1 = 0.3729[0m
[32m  eval_mcc = 0.6569[0m
[32m  eval_precision = 0.4633[0m
[32m  eval_recall = 0.3463[0m

epoch 4 loss 1.17092:  64%|██████▍   | 18/28 [01:04<00:24,  2.46s/it]epoch 4 loss 1.17067:  64%|██████▍   | 18/28 [01:04<00:24,  2.46s/it]epoch 4 loss 1.17067:  68%|██████▊   | 19/28 [01:04<00:16,  1.84s/it]epoch 4 loss 1.17169:  68%|██████▊   | 19/28 [01:04<00:16,  1.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6754[0m
[32m  eval_f1 = 0.3728[0m
[32m  eval_mcc = 0.6571[0m
[32m  eval_precision = 0.4632[0m
[32m  eval_recall = 0.3464[0m

epoch 4 loss 1.17169:  71%|███████▏  | 20/28 [01:08<00:19,  2.43s/it]epoch 4 loss 1.17182:  71%|███████▏  | 20/28 [01:08<00:19,  2.43s/it]epoch 4 loss 1.17182:  75%|███████▌  | 21/28 [01:08<00:12,  1.82s/it]epoch 4 loss 1.17451:  75%|███████▌  | 21/28 [01:09<00:12,  1.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6755[0m
[32m  eval_f1 = 0.3727[0m
[32m  eval_mcc = 0.6572[0m
[32m  eval_precision = 0.4627[0m
[32m  eval_recall = 0.3465[0m

epoch 4 loss 1.17451:  79%|███████▊  | 22/28 [01:12<00:14,  2.41s/it]epoch 4 loss 1.17623:  79%|███████▊  | 22/28 [01:12<00:14,  2.41s/it]epoch 4 loss 1.17623:  82%|████████▏ | 23/28 [01:12<00:09,  1.81s/it]epoch 4 loss 1.17179:  82%|████████▏ | 23/28 [01:13<00:09,  1.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6757[0m
[32m  eval_f1 = 0.3728[0m
[32m  eval_mcc = 0.6574[0m
[32m  eval_precision = 0.4621[0m
[32m  eval_recall = 0.347[0m

epoch 4 loss 1.17179:  86%|████████▌ | 24/28 [01:16<00:09,  2.41s/it]epoch 4 loss 1.16886:  86%|████████▌ | 24/28 [01:17<00:09,  2.41s/it]epoch 4 loss 1.16886:  89%|████████▉ | 25/28 [01:17<00:05,  1.80s/it]epoch 4 loss 1.16362:  89%|████████▉ | 25/28 [01:17<00:05,  1.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6759[0m
[32m  eval_f1 = 0.3729[0m
[32m  eval_mcc = 0.6576[0m
[32m  eval_precision = 0.4622[0m
[32m  eval_recall = 0.347[0m

epoch 4 loss 1.16362:  93%|█████████▎| 26/28 [01:20<00:04,  2.40s/it]epoch 4 loss 1.16799:  93%|█████████▎| 26/28 [01:21<00:04,  2.40s/it]epoch 4 loss 1.16799:  96%|█████████▋| 27/28 [01:21<00:01,  1.80s/it]epoch 4 loss 1.1673:  96%|█████████▋| 27/28 [01:21<00:01,  1.80s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6759[0m
[32m  eval_f1 = 0.3728[0m
[32m  eval_mcc = 0.6577[0m
[32m  eval_precision = 0.4621[0m
[32m  eval_recall = 0.347[0m

epoch 4 loss 1.1673: 100%|██████████| 28/28 [01:24<00:00,  2.34s/it]epoch 4 loss 1.1673: 100%|██████████| 28/28 [01:24<00:00,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.70it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6754[0m
[32m  eval_f1 = 0.3736[0m
[32m  eval_mcc = 0.6577[0m
[32m  eval_precision = 0.4675[0m
[32m  eval_recall = 0.3462[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6544[0m
[32m  eval_f1 = 0.2986[0m
[32m  eval_mcc = 0.6366[0m
[32m  eval_precision = 0.3852[0m
[32m  eval_recall = 0.2812[0m

