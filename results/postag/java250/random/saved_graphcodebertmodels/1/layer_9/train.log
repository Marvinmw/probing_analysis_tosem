[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9', posratio=0.5, seed=831, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.63739:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.63739:   4%|▎         | 1/28 [00:00<00:21,  1.24it/s]epoch 0 loss 5.6716:   4%|▎         | 1/28 [00:01<00:21,  1.24it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0012[0m
[32m  eval_f1 = 0.0005[0m
[32m  eval_mcc = -0.0005[0m
[32m  eval_precision = 0.0014[0m
[32m  eval_recall = 0.0013[0m
[32m  ********************[0m
[32m  Best f1:0.0005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.6716:   7%|▋         | 2/28 [00:05<01:27,  3.36s/it]epoch 0 loss 5.64791:   7%|▋         | 2/28 [00:06<01:27,  3.36s/it]epoch 0 loss 5.64791:  11%|█         | 3/28 [00:06<00:50,  2.01s/it]epoch 0 loss 5.64075:  11%|█         | 3/28 [00:06<00:50,  2.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0052[0m
[32m  eval_f1 = 0.001[0m
[32m  eval_mcc = 0.0007[0m
[32m  eval_precision = 0.0017[0m
[32m  eval_recall = 0.0017[0m
[32m  ********************[0m
[32m  Best f1:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.64075:  14%|█▍        | 4/28 [00:13<01:32,  3.84s/it]epoch 0 loss 5.61965:  14%|█▍        | 4/28 [00:13<01:32,  3.84s/it]epoch 0 loss 5.61965:  18%|█▊        | 5/28 [00:13<01:00,  2.61s/it]epoch 0 loss 5.58656:  18%|█▊        | 5/28 [00:13<01:00,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0291[0m
[32m  eval_f1 = 0.0022[0m
[32m  eval_mcc = 0.0112[0m
[32m  eval_precision = 0.0028[0m
[32m  eval_recall = 0.0032[0m
[32m  ********************[0m
[32m  Best f1:0.0022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.58656:  21%|██▏       | 6/28 [00:21<01:39,  4.52s/it]epoch 0 loss 5.54783:  21%|██▏       | 6/28 [00:22<01:39,  4.52s/it]epoch 0 loss 5.54783:  25%|██▌       | 7/28 [00:22<01:06,  3.18s/it]epoch 0 loss 5.49382:  25%|██▌       | 7/28 [00:22<01:06,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0723[0m
[32m  eval_f1 = 0.0043[0m
[32m  eval_mcc = 0.0278[0m
[32m  eval_precision = 0.0048[0m
[32m  eval_recall = 0.0085[0m
[32m  ********************[0m
[32m  Best f1:0.0043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.49382:  29%|██▊       | 8/28 [00:30<01:39,  4.97s/it]epoch 0 loss 5.44057:  29%|██▊       | 8/28 [00:31<01:39,  4.97s/it]epoch 0 loss 5.44057:  32%|███▏      | 9/28 [00:31<01:07,  3.55s/it]epoch 0 loss 5.38065:  32%|███▏      | 9/28 [00:31<01:07,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0884[0m
[32m  eval_f1 = 0.0058[0m
[32m  eval_mcc = 0.0308[0m
[32m  eval_precision = 0.0077[0m
[32m  eval_recall = 0.012[0m
[32m  ********************[0m
[32m  Best f1:0.0058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.38065:  36%|███▌      | 10/28 [00:41<01:38,  5.49s/it]epoch 0 loss 5.3189:  36%|███▌      | 10/28 [00:41<01:38,  5.49s/it] epoch 0 loss 5.3189:  39%|███▉      | 11/28 [00:41<01:07,  3.94s/it]epoch 0 loss 5.25114:  39%|███▉      | 11/28 [00:42<01:07,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.44it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.44it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.43it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0945[0m
[32m  eval_f1 = 0.0066[0m
[32m  eval_mcc = 0.0336[0m
[32m  eval_precision = 0.0114[0m
[32m  eval_recall = 0.013[0m
[32m  ********************[0m
[32m  Best f1:0.0066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.25114:  43%|████▎     | 12/28 [00:54<01:44,  6.54s/it]epoch 0 loss 5.18296:  43%|████▎     | 12/28 [00:54<01:44,  6.54s/it]epoch 0 loss 5.18296:  46%|████▋     | 13/28 [00:54<01:10,  4.71s/it]epoch 0 loss 5.11199:  46%|████▋     | 13/28 [00:55<01:10,  4.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0982[0m
[32m  eval_f1 = 0.0072[0m
[32m  eval_mcc = 0.0329[0m
[32m  eval_precision = 0.0123[0m
[32m  eval_recall = 0.0131[0m
[32m  ********************[0m
[32m  Best f1:0.0072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.11199:  50%|█████     | 14/28 [01:03<01:22,  5.89s/it]epoch 0 loss 5.03558:  50%|█████     | 14/28 [01:03<01:22,  5.89s/it]epoch 0 loss 5.03558:  54%|█████▎    | 15/28 [01:03<00:55,  4.27s/it]epoch 0 loss 4.95844:  54%|█████▎    | 15/28 [01:04<00:55,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1015[0m
[32m  eval_f1 = 0.0074[0m
[32m  eval_mcc = 0.0321[0m
[32m  eval_precision = 0.0151[0m
[32m  eval_recall = 0.0125[0m
[32m  ********************[0m
[32m  Best f1:0.0074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.95844:  57%|█████▋    | 16/28 [01:12<01:06,  5.55s/it]epoch 0 loss 4.8834:  57%|█████▋    | 16/28 [01:12<01:06,  5.55s/it] epoch 0 loss 4.8834:  61%|██████    | 17/28 [01:12<00:44,  4.03s/it]epoch 0 loss 4.81154:  61%|██████    | 17/28 [01:13<00:44,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1058[0m
[32m  eval_f1 = 0.007[0m
[32m  eval_mcc = 0.0341[0m
[32m  eval_precision = 0.0191[0m
[32m  eval_recall = 0.0121[0m
[32m  ********************[0m
[32m  Best MCC:0.0341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.81154:  64%|██████▍   | 18/28 [01:20<00:52,  5.24s/it]epoch 0 loss 4.74253:  64%|██████▍   | 18/28 [01:21<00:52,  5.24s/it]epoch 0 loss 4.74253:  68%|██████▊   | 19/28 [01:21<00:34,  3.81s/it]epoch 0 loss 4.68051:  68%|██████▊   | 19/28 [01:21<00:34,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.38it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1242[0m
[32m  eval_f1 = 0.0099[0m
[32m  eval_mcc = 0.0549[0m
[32m  eval_precision = 0.0417[0m
[32m  eval_recall = 0.0146[0m
[32m  ********************[0m
[32m  Best f1:0.0099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.68051:  71%|███████▏  | 20/28 [01:33<00:49,  6.20s/it]epoch 0 loss 4.6185:  71%|███████▏  | 20/28 [01:33<00:49,  6.20s/it] epoch 0 loss 4.6185:  75%|███████▌  | 21/28 [01:33<00:31,  4.46s/it]epoch 0 loss 4.55134:  75%|███████▌  | 21/28 [01:33<00:31,  4.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1986[0m
[32m  eval_f1 = 0.021[0m
[32m  eval_mcc = 0.1385[0m
[32m  eval_precision = 0.0356[0m
[32m  eval_recall = 0.0241[0m
[32m  ********************[0m
[32m  Best f1:0.021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.55134:  79%|███████▊  | 22/28 [01:45<00:40,  6.74s/it]epoch 0 loss 4.49264:  79%|███████▊  | 22/28 [01:45<00:40,  6.74s/it]epoch 0 loss 4.49264:  82%|████████▏ | 23/28 [01:45<00:24,  4.84s/it]epoch 0 loss 4.4352:  82%|████████▏ | 23/28 [01:46<00:24,  4.84s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2814[0m
[32m  eval_f1 = 0.035[0m
[32m  eval_mcc = 0.2258[0m
[32m  eval_precision = 0.0649[0m
[32m  eval_recall = 0.0391[0m
[32m  ********************[0m
[32m  Best f1:0.035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.4352:  86%|████████▌ | 24/28 [01:55<00:24,  6.22s/it]epoch 0 loss 4.37946:  86%|████████▌ | 24/28 [01:55<00:24,  6.22s/it]epoch 0 loss 4.37946:  89%|████████▉ | 25/28 [01:55<00:13,  4.48s/it]epoch 0 loss 4.31781:  89%|████████▉ | 25/28 [01:56<00:13,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2959[0m
[32m  eval_f1 = 0.0563[0m
[32m  eval_mcc = 0.2538[0m
[32m  eval_precision = 0.1128[0m
[32m  eval_recall = 0.0537[0m
[32m  ********************[0m
[32m  Best f1:0.0563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.31781:  93%|█████████▎| 26/28 [02:03<00:11,  5.52s/it]epoch 0 loss 4.26099:  93%|█████████▎| 26/28 [02:04<00:11,  5.52s/it]epoch 0 loss 4.26099:  96%|█████████▋| 27/28 [02:04<00:03,  3.99s/it]epoch 0 loss 4.21162:  96%|█████████▋| 27/28 [02:04<00:03,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2953[0m
[32m  eval_f1 = 0.0735[0m
[32m  eval_mcc = 0.2834[0m
[32m  eval_precision = 0.1414[0m
[32m  eval_recall = 0.0638[0m
[32m  ********************[0m
[32m  Best f1:0.0735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.21162: 100%|██████████| 28/28 [02:12<00:00,  5.25s/it]epoch 0 loss 4.21162: 100%|██████████| 28/28 [02:12<00:00,  4.73s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.70793:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.70793:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 1 loss 2.61254:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3671[0m
[32m  eval_f1 = 0.1114[0m
[32m  eval_mcc = 0.3656[0m
[32m  eval_precision = 0.1714[0m
[32m  eval_recall = 0.0959[0m
[32m  ********************[0m
[32m  Best f1:0.1114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.61254:   7%|▋         | 2/28 [00:08<02:04,  4.79s/it]epoch 1 loss 2.55403:   7%|▋         | 2/28 [00:08<02:04,  4.79s/it]epoch 1 loss 2.55403:  11%|█         | 3/28 [00:08<01:09,  2.80s/it]epoch 1 loss 2.53432:  11%|█         | 3/28 [00:09<01:09,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4519[0m
[32m  eval_f1 = 0.1338[0m
[32m  eval_mcc = 0.4378[0m
[32m  eval_precision = 0.1791[0m
[32m  eval_recall = 0.1246[0m
[32m  ********************[0m
[32m  Best f1:0.1338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.53432:  14%|█▍        | 4/28 [00:21<02:38,  6.60s/it]epoch 1 loss 2.51879:  14%|█▍        | 4/28 [00:21<02:38,  6.60s/it]epoch 1 loss 2.51879:  18%|█▊        | 5/28 [00:21<01:40,  4.38s/it]epoch 1 loss 2.48913:  18%|█▊        | 5/28 [00:21<01:40,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5205[0m
[32m  eval_f1 = 0.1545[0m
[32m  eval_mcc = 0.4928[0m
[32m  eval_precision = 0.2019[0m
[32m  eval_recall = 0.1479[0m
[32m  ********************[0m
[32m  Best f1:0.1545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.48913:  21%|██▏       | 6/28 [00:34<02:37,  7.17s/it]epoch 1 loss 2.45945:  21%|██▏       | 6/28 [00:34<02:37,  7.17s/it]epoch 1 loss 2.45945:  25%|██▌       | 7/28 [00:34<01:44,  4.97s/it]epoch 1 loss 2.4359:  25%|██▌       | 7/28 [00:34<01:44,  4.97s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5471[0m
[32m  eval_f1 = 0.1619[0m
[32m  eval_mcc = 0.5196[0m
[32m  eval_precision = 0.2057[0m
[32m  eval_recall = 0.1555[0m
[32m  ********************[0m
[32m  Best f1:0.1619[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.4359:  29%|██▊       | 8/28 [00:43<02:05,  6.30s/it]epoch 1 loss 2.42985:  29%|██▊       | 8/28 [00:44<02:05,  6.30s/it]epoch 1 loss 2.42985:  32%|███▏      | 9/28 [00:44<01:24,  4.46s/it]epoch 1 loss 2.40547:  32%|███▏      | 9/28 [00:44<01:24,  4.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5545[0m
[32m  eval_f1 = 0.165[0m
[32m  eval_mcc = 0.5303[0m
[32m  eval_precision = 0.2071[0m
[32m  eval_recall = 0.157[0m
[32m  ********************[0m
[32m  Best f1:0.165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.40547:  36%|███▌      | 10/28 [00:52<01:40,  5.60s/it]epoch 1 loss 2.38034:  36%|███▌      | 10/28 [00:52<01:40,  5.60s/it]epoch 1 loss 2.38034:  39%|███▉      | 11/28 [00:52<01:08,  4.01s/it]epoch 1 loss 2.34889:  39%|███▉      | 11/28 [00:53<01:08,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5611[0m
[32m  eval_f1 = 0.1728[0m
[32m  eval_mcc = 0.5384[0m
[32m  eval_precision = 0.2243[0m
[32m  eval_recall = 0.1636[0m
[32m  ********************[0m
[32m  Best f1:0.1728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.34889:  43%|████▎     | 12/28 [01:00<01:23,  5.20s/it]epoch 1 loss 2.32059:  43%|████▎     | 12/28 [01:01<01:23,  5.20s/it]epoch 1 loss 2.32059:  46%|████▋     | 13/28 [01:01<00:56,  3.76s/it]epoch 1 loss 2.30269:  46%|████▋     | 13/28 [01:01<00:56,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5678[0m
[32m  eval_f1 = 0.1766[0m
[32m  eval_mcc = 0.5437[0m
[32m  eval_precision = 0.2338[0m
[32m  eval_recall = 0.1678[0m
[32m  ********************[0m
[32m  Best f1:0.1766[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.30269:  50%|█████     | 14/28 [01:12<01:24,  6.01s/it]epoch 1 loss 2.27884:  50%|█████     | 14/28 [01:12<01:24,  6.01s/it]epoch 1 loss 2.27884:  54%|█████▎    | 15/28 [01:12<00:56,  4.32s/it]epoch 1 loss 2.26073:  54%|█████▎    | 15/28 [01:13<00:56,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5756[0m
[32m  eval_f1 = 0.1807[0m
[32m  eval_mcc = 0.5511[0m
[32m  eval_precision = 0.2373[0m
[32m  eval_recall = 0.1729[0m
[32m  ********************[0m
[32m  Best f1:0.1807[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5511[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26073:  57%|█████▋    | 16/28 [01:24<01:19,  6.66s/it]epoch 1 loss 2.23464:  57%|█████▋    | 16/28 [01:25<01:19,  6.66s/it]epoch 1 loss 2.23464:  61%|██████    | 17/28 [01:25<00:52,  4.78s/it]epoch 1 loss 2.21475:  61%|██████    | 17/28 [01:25<00:52,  4.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5807[0m
[32m  eval_f1 = 0.1834[0m
[32m  eval_mcc = 0.5574[0m
[32m  eval_precision = 0.2362[0m
[32m  eval_recall = 0.1763[0m
[32m  ********************[0m
[32m  Best f1:0.1834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.21475:  64%|██████▍   | 18/28 [01:37<01:10,  7.06s/it]epoch 1 loss 2.1895:  64%|██████▍   | 18/28 [01:38<01:10,  7.06s/it] epoch 1 loss 2.1895:  68%|██████▊   | 19/28 [01:38<00:45,  5.07s/it]epoch 1 loss 2.18789:  68%|██████▊   | 19/28 [01:38<00:45,  5.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5847[0m
[32m  eval_f1 = 0.1863[0m
[32m  eval_mcc = 0.5633[0m
[32m  eval_precision = 0.2484[0m
[32m  eval_recall = 0.1788[0m
[32m  ********************[0m
[32m  Best f1:0.1863[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.18789:  71%|███████▏  | 20/28 [01:46<00:48,  6.12s/it]epoch 1 loss 2.17023:  71%|███████▏  | 20/28 [01:47<00:48,  6.12s/it]epoch 1 loss 2.17023:  75%|███████▌  | 21/28 [01:47<00:30,  4.41s/it]epoch 1 loss 2.15356:  75%|███████▌  | 21/28 [01:47<00:30,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5883[0m
[32m  eval_f1 = 0.1863[0m
[32m  eval_mcc = 0.566[0m
[32m  eval_precision = 0.257[0m
[32m  eval_recall = 0.1795[0m
[32m  ********************[0m
[32m  Best f1:0.1863[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15356:  79%|███████▊  | 22/28 [01:55<00:33,  5.64s/it]epoch 1 loss 2.13364:  79%|███████▊  | 22/28 [01:55<00:33,  5.64s/it]epoch 1 loss 2.13364:  82%|████████▏ | 23/28 [01:55<00:20,  4.08s/it]epoch 1 loss 2.11867:  82%|████████▏ | 23/28 [01:56<00:20,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5916[0m
[32m  eval_f1 = 0.1994[0m
[32m  eval_mcc = 0.5678[0m
[32m  eval_precision = 0.2592[0m
[32m  eval_recall = 0.1912[0m
[32m  ********************[0m
[32m  Best f1:0.1994[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5678[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11867:  86%|████████▌ | 24/28 [02:06<00:24,  6.09s/it]epoch 1 loss 2.10075:  86%|████████▌ | 24/28 [02:07<00:24,  6.09s/it]epoch 1 loss 2.10075:  89%|████████▉ | 25/28 [02:07<00:13,  4.39s/it]epoch 1 loss 2.0854:  89%|████████▉ | 25/28 [02:07<00:13,  4.39s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5952[0m
[32m  eval_f1 = 0.2078[0m
[32m  eval_mcc = 0.5709[0m
[32m  eval_precision = 0.2889[0m
[32m  eval_recall = 0.1967[0m
[32m  ********************[0m
[32m  Best f1:0.2078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5709[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0854:  93%|█████████▎| 26/28 [02:17<00:12,  6.23s/it]epoch 1 loss 2.07149:  93%|█████████▎| 26/28 [02:18<00:12,  6.23s/it]epoch 1 loss 2.07149:  96%|█████████▋| 27/28 [02:18<00:04,  4.50s/it]epoch 1 loss 2.05753:  96%|█████████▋| 27/28 [02:18<00:04,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.68it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.57it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.51it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.48it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.46it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.44it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.43it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.17it/s][A100%|██████████| 10/10 [00:03<00:00,  2.71it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5979[0m
[32m  eval_f1 = 0.2134[0m
[32m  eval_mcc = 0.5734[0m
[32m  eval_precision = 0.3057[0m
[32m  eval_recall = 0.2021[0m
[32m  ********************[0m
[32m  Best f1:0.2134[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05753: 100%|██████████| 28/28 [02:27<00:00,  5.86s/it]epoch 1 loss 2.05753: 100%|██████████| 28/28 [02:27<00:00,  5.26s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.46883:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.46883:   4%|▎         | 1/28 [00:00<00:13,  2.05it/s]epoch 2 loss 1.60079:   4%|▎         | 1/28 [00:00<00:13,  2.05it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.43it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5993[0m
[32m  eval_f1 = 0.2151[0m
[32m  eval_mcc = 0.5753[0m
[32m  eval_precision = 0.2902[0m
[32m  eval_recall = 0.205[0m
[32m  ********************[0m
[32m  Best f1:0.2151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5753[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60079:   7%|▋         | 2/28 [00:12<03:02,  7.00s/it]epoch 2 loss 1.60099:   7%|▋         | 2/28 [00:12<03:02,  7.00s/it]epoch 2 loss 1.60099:  11%|█         | 3/28 [00:12<01:40,  4.03s/it]epoch 2 loss 1.59342:  11%|█         | 3/28 [00:12<01:40,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.607[0m
[32m  eval_f1 = 0.2305[0m
[32m  eval_mcc = 0.5839[0m
[32m  eval_precision = 0.305[0m
[32m  eval_recall = 0.2193[0m
[32m  ********************[0m
[32m  Best f1:0.2305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5839[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59342:  14%|█▍        | 4/28 [00:24<02:51,  7.14s/it]epoch 2 loss 1.58817:  14%|█▍        | 4/28 [00:24<02:51,  7.14s/it]epoch 2 loss 1.58817:  18%|█▊        | 5/28 [00:24<01:48,  4.74s/it]epoch 2 loss 1.61098:  18%|█▊        | 5/28 [00:25<01:48,  4.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.43it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6097[0m
[32m  eval_f1 = 0.2365[0m
[32m  eval_mcc = 0.588[0m
[32m  eval_precision = 0.3315[0m
[32m  eval_recall = 0.2232[0m
[32m  ********************[0m
[32m  Best f1:0.2365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61098:  21%|██▏       | 6/28 [00:34<02:18,  6.30s/it]epoch 2 loss 1.65531:  21%|██▏       | 6/28 [00:34<02:18,  6.30s/it]epoch 2 loss 1.65531:  25%|██▌       | 7/28 [00:34<01:32,  4.40s/it]epoch 2 loss 1.64904:  25%|██▌       | 7/28 [00:35<01:32,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6107[0m
[32m  eval_f1 = 0.2403[0m
[32m  eval_mcc = 0.5907[0m
[32m  eval_precision = 0.3527[0m
[32m  eval_recall = 0.2259[0m
[32m  ********************[0m
[32m  Best f1:0.2403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64904:  29%|██▊       | 8/28 [00:47<02:18,  6.91s/it]epoch 2 loss 1.65211:  29%|██▊       | 8/28 [00:47<02:18,  6.91s/it]epoch 2 loss 1.65211:  32%|███▏      | 9/28 [00:47<01:32,  4.88s/it]epoch 2 loss 1.64005:  32%|███▏      | 9/28 [00:47<01:32,  4.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6124[0m
[32m  eval_f1 = 0.2473[0m
[32m  eval_mcc = 0.5927[0m
[32m  eval_precision = 0.3608[0m
[32m  eval_recall = 0.2305[0m
[32m  ********************[0m
[32m  Best f1:0.2473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64005:  36%|███▌      | 10/28 [00:55<01:44,  5.79s/it]epoch 2 loss 1.617:  36%|███▌      | 10/28 [00:55<01:44,  5.79s/it]  epoch 2 loss 1.617:  39%|███▉      | 11/28 [00:55<01:10,  4.15s/it]epoch 2 loss 1.61663:  39%|███▉      | 11/28 [00:56<01:10,  4.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6151[0m
[32m  eval_f1 = 0.2519[0m
[32m  eval_mcc = 0.5939[0m
[32m  eval_precision = 0.3592[0m
[32m  eval_recall = 0.2344[0m
[32m  ********************[0m
[32m  Best f1:0.2519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61663:  43%|████▎     | 12/28 [01:09<01:54,  7.13s/it]epoch 2 loss 1.6052:  43%|████▎     | 12/28 [01:10<01:54,  7.13s/it] epoch 2 loss 1.6052:  46%|████▋     | 13/28 [01:10<01:16,  5.10s/it]epoch 2 loss 1.59547:  46%|████▋     | 13/28 [01:10<01:16,  5.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6157[0m
[32m  eval_f1 = 0.2552[0m
[32m  eval_mcc = 0.5935[0m
[32m  eval_precision = 0.3521[0m
[32m  eval_recall = 0.2379[0m
[32m  ********************[0m
[32m  Best f1:0.2552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.59547:  50%|█████     | 14/28 [01:17<01:22,  5.91s/it]epoch 2 loss 1.60367:  50%|█████     | 14/28 [01:18<01:22,  5.91s/it]epoch 2 loss 1.60367:  54%|█████▎    | 15/28 [01:18<00:55,  4.26s/it]epoch 2 loss 1.59066:  54%|█████▎    | 15/28 [01:18<00:55,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6171[0m
[32m  eval_f1 = 0.2575[0m
[32m  eval_mcc = 0.5945[0m
[32m  eval_precision = 0.3441[0m
[32m  eval_recall = 0.2414[0m
[32m  ********************[0m
[32m  Best f1:0.2575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59066:  57%|█████▋    | 16/28 [01:29<01:14,  6.25s/it]epoch 2 loss 1.58309:  57%|█████▋    | 16/28 [01:29<01:14,  6.25s/it]epoch 2 loss 1.58309:  61%|██████    | 17/28 [01:29<00:49,  4.50s/it]epoch 2 loss 1.57207:  61%|██████    | 17/28 [01:29<00:49,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6195[0m
[32m  eval_f1 = 0.2603[0m
[32m  eval_mcc = 0.5975[0m
[32m  eval_precision = 0.3506[0m
[32m  eval_recall = 0.2435[0m
[32m  ********************[0m
[32m  Best f1:0.2603[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57207:  64%|██████▍   | 18/28 [01:40<01:04,  6.50s/it]epoch 2 loss 1.57211:  64%|██████▍   | 18/28 [01:41<01:04,  6.50s/it]epoch 2 loss 1.57211:  68%|██████▊   | 19/28 [01:41<00:42,  4.67s/it]epoch 2 loss 1.56896:  68%|██████▊   | 19/28 [01:41<00:42,  4.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6212[0m
[32m  eval_f1 = 0.262[0m
[32m  eval_mcc = 0.5999[0m
[32m  eval_precision = 0.3741[0m
[32m  eval_recall = 0.2447[0m
[32m  ********************[0m
[32m  Best f1:0.262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5999[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56896:  71%|███████▏  | 20/28 [01:52<00:53,  6.72s/it]epoch 2 loss 1.56233:  71%|███████▏  | 20/28 [01:53<00:53,  6.72s/it]epoch 2 loss 1.56233:  75%|███████▌  | 21/28 [01:53<00:33,  4.82s/it]epoch 2 loss 1.56426:  75%|███████▌  | 21/28 [01:53<00:33,  4.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6208[0m
[32m  eval_f1 = 0.2606[0m
[32m  eval_mcc = 0.5999[0m
[32m  eval_precision = 0.3674[0m
[32m  eval_recall = 0.2443[0m
[32m  ********************[0m
[32m  Best MCC:0.5999[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56426:  79%|███████▊  | 22/28 [02:00<00:34,  5.67s/it]epoch 2 loss 1.56154:  79%|███████▊  | 22/28 [02:01<00:34,  5.67s/it]epoch 2 loss 1.56154:  82%|████████▏ | 23/28 [02:01<00:20,  4.09s/it]epoch 2 loss 1.55546:  82%|████████▏ | 23/28 [02:01<00:20,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6215[0m
[32m  eval_f1 = 0.2622[0m
[32m  eval_mcc = 0.601[0m
[32m  eval_precision = 0.376[0m
[32m  eval_recall = 0.2449[0m
[32m  ********************[0m
[32m  Best f1:0.2622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55546:  86%|████████▌ | 24/28 [02:11<00:24,  6.07s/it]epoch 2 loss 1.55218:  86%|████████▌ | 24/28 [02:12<00:24,  6.07s/it]epoch 2 loss 1.55218:  89%|████████▉ | 25/28 [02:12<00:13,  4.37s/it]epoch 2 loss 1.54677:  89%|████████▉ | 25/28 [02:12<00:13,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6234[0m
[32m  eval_f1 = 0.266[0m
[32m  eval_mcc = 0.6027[0m
[32m  eval_precision = 0.3936[0m
[32m  eval_recall = 0.2471[0m
[32m  ********************[0m
[32m  Best f1:0.266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54677:  93%|█████████▎| 26/28 [02:22<00:12,  6.01s/it]epoch 2 loss 1.54798:  93%|█████████▎| 26/28 [02:22<00:12,  6.01s/it]epoch 2 loss 1.54798:  96%|█████████▋| 27/28 [02:22<00:04,  4.34s/it]epoch 2 loss 1.55088:  96%|█████████▋| 27/28 [02:22<00:04,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6285[0m
[32m  eval_f1 = 0.2758[0m
[32m  eval_mcc = 0.6074[0m
[32m  eval_precision = 0.3994[0m
[32m  eval_recall = 0.2538[0m
[32m  ********************[0m
[32m  Best f1:0.2758[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55088: 100%|██████████| 28/28 [02:29<00:00,  5.15s/it]epoch 2 loss 1.55088: 100%|██████████| 28/28 [02:29<00:00,  5.34s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.35225:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.35225:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 3 loss 1.41888:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6312[0m
[32m  eval_f1 = 0.2812[0m
[32m  eval_mcc = 0.6095[0m
[32m  eval_precision = 0.4032[0m
[32m  eval_recall = 0.2593[0m
[32m  ********************[0m
[32m  Best f1:0.2812[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6095[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41888:   7%|▋         | 2/28 [00:08<02:04,  4.77s/it]epoch 3 loss 1.45323:   7%|▋         | 2/28 [00:08<02:04,  4.77s/it]epoch 3 loss 1.45323:  11%|█         | 3/28 [00:08<01:09,  2.79s/it]epoch 3 loss 1.43644:  11%|█         | 3/28 [00:09<01:09,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.633[0m
[32m  eval_f1 = 0.2846[0m
[32m  eval_mcc = 0.6113[0m
[32m  eval_precision = 0.4023[0m
[32m  eval_recall = 0.2628[0m
[32m  ********************[0m
[32m  Best f1:0.2846[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43644:  14%|█▍        | 4/28 [00:16<01:56,  4.86s/it]epoch 3 loss 1.40543:  14%|█▍        | 4/28 [00:17<01:56,  4.86s/it]epoch 3 loss 1.40543:  18%|█▊        | 5/28 [00:17<01:15,  3.26s/it]epoch 3 loss 1.4199:  18%|█▊        | 5/28 [00:17<01:15,  3.26s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6347[0m
[32m  eval_f1 = 0.2867[0m
[32m  eval_mcc = 0.6131[0m
[32m  eval_precision = 0.3994[0m
[32m  eval_recall = 0.2648[0m
[32m  ********************[0m
[32m  Best f1:0.2867[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4199:  21%|██▏       | 6/28 [00:24<01:43,  4.71s/it]epoch 3 loss 1.42723:  21%|██▏       | 6/28 [00:25<01:43,  4.71s/it]epoch 3 loss 1.42723:  25%|██▌       | 7/28 [00:25<01:09,  3.31s/it]epoch 3 loss 1.4459:  25%|██▌       | 7/28 [00:25<01:09,  3.31s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6362[0m
[32m  eval_f1 = 0.2888[0m
[32m  eval_mcc = 0.6151[0m
[32m  eval_precision = 0.4114[0m
[32m  eval_recall = 0.2662[0m
[32m  ********************[0m
[32m  Best f1:0.2888[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4459:  29%|██▊       | 8/28 [00:33<01:36,  4.82s/it]epoch 3 loss 1.45043:  29%|██▊       | 8/28 [00:33<01:36,  4.82s/it]epoch 3 loss 1.45043:  32%|███▏      | 9/28 [00:33<01:05,  3.45s/it]epoch 3 loss 1.44866:  32%|███▏      | 9/28 [00:33<01:05,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6375[0m
[32m  eval_f1 = 0.2904[0m
[32m  eval_mcc = 0.6168[0m
[32m  eval_precision = 0.4073[0m
[32m  eval_recall = 0.2672[0m
[32m  ********************[0m
[32m  Best f1:0.2904[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44866:  36%|███▌      | 10/28 [00:45<01:48,  6.02s/it]epoch 3 loss 1.44103:  36%|███▌      | 10/28 [00:45<01:48,  6.02s/it]epoch 3 loss 1.44103:  39%|███▉      | 11/28 [00:45<01:13,  4.31s/it]epoch 3 loss 1.43839:  39%|███▉      | 11/28 [00:46<01:13,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.638[0m
[32m  eval_f1 = 0.2911[0m
[32m  eval_mcc = 0.6178[0m
[32m  eval_precision = 0.4163[0m
[32m  eval_recall = 0.2674[0m
[32m  ********************[0m
[32m  Best f1:0.2911[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43839:  43%|████▎     | 12/28 [00:57<01:47,  6.69s/it]epoch 3 loss 1.44397:  43%|████▎     | 12/28 [00:58<01:47,  6.69s/it]epoch 3 loss 1.44397:  46%|████▋     | 13/28 [00:58<01:11,  4.80s/it]epoch 3 loss 1.43958:  46%|████▋     | 13/28 [00:58<01:11,  4.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.637[0m
[32m  eval_f1 = 0.2976[0m
[32m  eval_mcc = 0.6172[0m
[32m  eval_precision = 0.4242[0m
[32m  eval_recall = 0.2719[0m
[32m  ********************[0m
[32m  Best f1:0.2976[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.43958:  50%|█████     | 14/28 [01:06<01:21,  5.85s/it]epoch 3 loss 1.43807:  50%|█████     | 14/28 [01:07<01:21,  5.85s/it]epoch 3 loss 1.43807:  54%|█████▎    | 15/28 [01:07<00:54,  4.21s/it]epoch 3 loss 1.44068:  54%|█████▎    | 15/28 [01:07<00:54,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6366[0m
[32m  eval_f1 = 0.2912[0m
[32m  eval_mcc = 0.6167[0m
[32m  eval_precision = 0.4187[0m
[32m  eval_recall = 0.2677[0m

epoch 3 loss 1.44068:  57%|█████▋    | 16/28 [01:10<00:49,  4.09s/it]epoch 3 loss 1.44546:  57%|█████▋    | 16/28 [01:11<00:49,  4.09s/it]epoch 3 loss 1.44546:  61%|██████    | 17/28 [01:11<00:32,  2.98s/it]epoch 3 loss 1.45279:  61%|██████    | 17/28 [01:11<00:32,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.2963[0m
[32m  eval_mcc = 0.617[0m
[32m  eval_precision = 0.4151[0m
[32m  eval_recall = 0.2725[0m

epoch 3 loss 1.45279:  64%|██████▍   | 18/28 [01:15<00:32,  3.23s/it]epoch 3 loss 1.44255:  64%|██████▍   | 18/28 [01:15<00:32,  3.23s/it]epoch 3 loss 1.44255:  68%|██████▊   | 19/28 [01:15<00:21,  2.38s/it]epoch 3 loss 1.44382:  68%|██████▊   | 19/28 [01:15<00:21,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6395[0m
[32m  eval_f1 = 0.3019[0m
[32m  eval_mcc = 0.6192[0m
[32m  eval_precision = 0.4232[0m
[32m  eval_recall = 0.2776[0m
[32m  ********************[0m
[32m  Best f1:0.3019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44382:  71%|███████▏  | 20/28 [01:23<00:33,  4.14s/it]epoch 3 loss 1.4361:  71%|███████▏  | 20/28 [01:24<00:33,  4.14s/it] epoch 3 loss 1.4361:  75%|███████▌  | 21/28 [01:24<00:21,  3.03s/it]epoch 3 loss 1.43444:  75%|███████▌  | 21/28 [01:24<00:21,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6416[0m
[32m  eval_f1 = 0.3029[0m
[32m  eval_mcc = 0.6214[0m
[32m  eval_precision = 0.4146[0m
[32m  eval_recall = 0.2793[0m
[32m  ********************[0m
[32m  Best f1:0.3029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43444:  79%|███████▊  | 22/28 [01:34<00:31,  5.20s/it]epoch 3 loss 1.43605:  79%|███████▊  | 22/28 [01:34<00:31,  5.20s/it]epoch 3 loss 1.43605:  82%|████████▏ | 23/28 [01:34<00:18,  3.77s/it]epoch 3 loss 1.43809:  82%|████████▏ | 23/28 [01:35<00:18,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6431[0m
[32m  eval_f1 = 0.3045[0m
[32m  eval_mcc = 0.6231[0m
[32m  eval_precision = 0.4238[0m
[32m  eval_recall = 0.2804[0m
[32m  ********************[0m
[32m  Best f1:0.3045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43809:  86%|████████▌ | 24/28 [01:44<00:22,  5.56s/it]epoch 3 loss 1.43754:  86%|████████▌ | 24/28 [01:45<00:22,  5.56s/it]epoch 3 loss 1.43754:  89%|████████▉ | 25/28 [01:45<00:12,  4.04s/it]epoch 3 loss 1.43618:  89%|████████▉ | 25/28 [01:45<00:12,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6442[0m
[32m  eval_f1 = 0.3063[0m
[32m  eval_mcc = 0.6245[0m
[32m  eval_precision = 0.4306[0m
[32m  eval_recall = 0.2816[0m
[32m  ********************[0m
[32m  Best f1:0.3063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43618:  93%|█████████▎| 26/28 [01:56<00:12,  6.13s/it]epoch 3 loss 1.42936:  93%|█████████▎| 26/28 [01:56<00:12,  6.13s/it]epoch 3 loss 1.42936:  96%|█████████▋| 27/28 [01:56<00:04,  4.44s/it]epoch 3 loss 1.42164:  96%|█████████▋| 27/28 [01:56<00:04,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.62it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6446[0m
[32m  eval_f1 = 0.3071[0m
[32m  eval_mcc = 0.625[0m
[32m  eval_precision = 0.4337[0m
[32m  eval_recall = 0.2816[0m
[32m  ********************[0m
[32m  Best f1:0.3071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42164: 100%|██████████| 28/28 [02:05<00:00,  5.64s/it]epoch 3 loss 1.42164: 100%|██████████| 28/28 [02:05<00:00,  4.47s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.33919:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.33919:   4%|▎         | 1/28 [00:00<00:13,  2.07it/s]epoch 4 loss 1.39357:   4%|▎         | 1/28 [00:00<00:13,  2.07it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.40it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.42it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.42it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.42it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.42it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.42it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.42it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.15it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6448[0m
[32m  eval_f1 = 0.3054[0m
[32m  eval_mcc = 0.6253[0m
[32m  eval_precision = 0.4217[0m
[32m  eval_recall = 0.2805[0m
[32m  ********************[0m
[32m  Best MCC:0.6253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39357:   7%|▋         | 2/28 [00:07<01:58,  4.55s/it]epoch 4 loss 1.41063:   7%|▋         | 2/28 [00:08<01:58,  4.55s/it]epoch 4 loss 1.41063:  11%|█         | 3/28 [00:08<01:07,  2.69s/it]epoch 4 loss 1.43598:  11%|█         | 3/28 [00:08<01:07,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.61it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.53it/s][A
 50%|█████     | 5/10 [00:01<00:02,  2.49it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.46it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.45it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.44it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.43it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.16it/s][A100%|██████████| 10/10 [00:03<00:00,  2.69it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6445[0m
[32m  eval_f1 = 0.3053[0m
[32m  eval_mcc = 0.625[0m
[32m  eval_precision = 0.4213[0m
[32m  eval_recall = 0.28[0m

epoch 4 loss 1.43598:  14%|█▍        | 4/28 [00:12<01:18,  3.28s/it]epoch 4 loss 1.39453:  14%|█▍        | 4/28 [00:12<01:18,  3.28s/it]epoch 4 loss 1.39453:  18%|█▊        | 5/28 [00:12<00:52,  2.26s/it]epoch 4 loss 1.37344:  18%|█▊        | 5/28 [00:13<00:52,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.42it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6438[0m
[32m  eval_f1 = 0.305[0m
[32m  eval_mcc = 0.6242[0m
[32m  eval_precision = 0.4213[0m
[32m  eval_recall = 0.2794[0m

epoch 4 loss 1.37344:  21%|██▏       | 6/28 [00:17<01:05,  2.97s/it]epoch 4 loss 1.38155:  21%|██▏       | 6/28 [00:17<01:05,  2.97s/it]epoch 4 loss 1.38155:  25%|██▌       | 7/28 [00:17<00:45,  2.15s/it]epoch 4 loss 1.38892:  25%|██▌       | 7/28 [00:18<00:45,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.37it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.39it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6433[0m
[32m  eval_f1 = 0.3048[0m
[32m  eval_mcc = 0.6236[0m
[32m  eval_precision = 0.4217[0m
[32m  eval_recall = 0.279[0m

epoch 4 loss 1.38892:  29%|██▊       | 8/28 [00:22<00:57,  2.86s/it]epoch 4 loss 1.38003:  29%|██▊       | 8/28 [00:22<00:57,  2.86s/it]epoch 4 loss 1.38003:  32%|███▏      | 9/28 [00:22<00:40,  2.11s/it]epoch 4 loss 1.3756:  32%|███▏      | 9/28 [00:23<00:40,  2.11s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.42it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.41it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.41it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.14it/s][A100%|██████████| 10/10 [00:03<00:00,  2.61it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6429[0m
[32m  eval_f1 = 0.3047[0m
[32m  eval_mcc = 0.623[0m
[32m  eval_precision = 0.421[0m
[32m  eval_recall = 0.279[0m

epoch 4 loss 1.3756:  36%|███▌      | 10/28 [00:27<00:50,  2.80s/it]epoch 4 loss 1.37059:  36%|███▌      | 10/28 [00:27<00:50,  2.80s/it]epoch 4 loss 1.37059:  39%|███▉      | 11/28 [00:27<00:35,  2.09s/it]epoch 4 loss 1.38222:  39%|███▉      | 11/28 [00:27<00:35,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.41it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.41it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.41it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.41it/s][A
 50%|█████     | 5/10 [00:02<00:02,  2.40it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.41it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.41it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.41it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.40it/s][A
100%|██████████| 10/10 [00:03<00:00,  3.13it/s][A100%|██████████| 10/10 [00:03<00:00,  2.60it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6429[0m
[32m  eval_f1 = 0.3065[0m
[32m  eval_mcc = 0.6229[0m
[32m  eval_precision = 0.4235[0m
[32m  eval_recall = 0.2802[0m

epoch 4 loss 1.38222:  43%|████▎     | 12/28 [00:31<00:44,  2.78s/it]epoch 4 loss 1.38501:  43%|████▎     | 12/28 [00:32<00:44,  2.78s/it]epoch 4 loss 1.38501:  46%|████▋     | 13/28 [00:32<00:31,  2.08s/it]epoch 4 loss 1.38335:  46%|████▋     | 13/28 [00:32<00:31,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.39it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.40it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.40it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.46it/s][A
 50%|█████     | 5/10 [00:02<00:01,  2.55it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.62it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.66it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.68it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.70it/s][A100%|██████████| 10/10 [00:03<00:00,  2.83it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.306[0m
[32m  eval_mcc = 0.6227[0m
[32m  eval_precision = 0.4227[0m
[32m  eval_recall = 0.2798[0m

epoch 4 loss 1.38335:  50%|█████     | 14/28 [00:36<00:37,  2.67s/it]epoch 4 loss 1.38813:  50%|█████     | 14/28 [00:36<00:37,  2.67s/it]epoch 4 loss 1.38813:  54%|█████▎    | 15/28 [00:36<00:25,  1.99s/it]epoch 4 loss 1.38953:  54%|█████▎    | 15/28 [00:37<00:25,  1.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6431[0m
[32m  eval_f1 = 0.3074[0m
[32m  eval_mcc = 0.6229[0m
[32m  eval_precision = 0.4213[0m
[32m  eval_recall = 0.2812[0m
[32m  ********************[0m
[32m  Best f1:0.3074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.38953:  57%|█████▋    | 16/28 [00:42<00:36,  3.04s/it]epoch 4 loss 1.38502:  57%|█████▋    | 16/28 [00:42<00:36,  3.04s/it]epoch 4 loss 1.38502:  61%|██████    | 17/28 [00:42<00:24,  2.25s/it]epoch 4 loss 1.38779:  61%|██████    | 17/28 [00:43<00:24,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6436[0m
[32m  eval_f1 = 0.3075[0m
[32m  eval_mcc = 0.6234[0m
[32m  eval_precision = 0.4201[0m
[32m  eval_recall = 0.2817[0m
[32m  ********************[0m
[32m  Best f1:0.3075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.38779:  64%|██████▍   | 18/28 [00:47<00:30,  3.04s/it]epoch 4 loss 1.38678:  64%|██████▍   | 18/28 [00:47<00:30,  3.04s/it]epoch 4 loss 1.38678:  68%|██████▊   | 19/28 [00:47<00:20,  2.25s/it]epoch 4 loss 1.38771:  68%|██████▊   | 19/28 [00:48<00:20,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6441[0m
[32m  eval_f1 = 0.311[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.4382[0m
[32m  eval_recall = 0.284[0m
[32m  ********************[0m
[32m  Best f1:0.311[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.38771:  71%|███████▏  | 20/28 [00:52<00:24,  3.04s/it]epoch 4 loss 1.387:  71%|███████▏  | 20/28 [00:53<00:24,  3.04s/it]  epoch 4 loss 1.387:  75%|███████▌  | 21/28 [00:53<00:15,  2.25s/it]epoch 4 loss 1.39033:  75%|███████▌  | 21/28 [00:53<00:15,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6443[0m
[32m  eval_f1 = 0.3107[0m
[32m  eval_mcc = 0.6241[0m
[32m  eval_precision = 0.4376[0m
[32m  eval_recall = 0.284[0m

epoch 4 loss 1.39033:  79%|███████▊  | 22/28 [00:57<00:16,  2.73s/it]epoch 4 loss 1.3919:  79%|███████▊  | 22/28 [00:57<00:16,  2.73s/it] epoch 4 loss 1.3919:  82%|████████▏ | 23/28 [00:57<00:10,  2.03s/it]epoch 4 loss 1.38741:  82%|████████▏ | 23/28 [00:57<00:10,  2.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6446[0m
[32m  eval_f1 = 0.3115[0m
[32m  eval_mcc = 0.6244[0m
[32m  eval_precision = 0.4373[0m
[32m  eval_recall = 0.2848[0m
[32m  ********************[0m
[32m  Best f1:0.3115[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.38741:  86%|████████▌ | 24/28 [01:02<00:11,  2.88s/it]epoch 4 loss 1.38371:  86%|████████▌ | 24/28 [01:02<00:11,  2.88s/it]epoch 4 loss 1.38371:  89%|████████▉ | 25/28 [01:02<00:06,  2.14s/it]epoch 4 loss 1.37826:  89%|████████▉ | 25/28 [01:03<00:06,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6447[0m
[32m  eval_f1 = 0.3119[0m
[32m  eval_mcc = 0.6244[0m
[32m  eval_precision = 0.4373[0m
[32m  eval_recall = 0.2852[0m
[32m  ********************[0m
[32m  Best f1:0.3119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.37826:  93%|█████████▎| 26/28 [01:07<00:06,  3.02s/it]epoch 4 loss 1.38378:  93%|█████████▎| 26/28 [01:08<00:06,  3.02s/it]epoch 4 loss 1.38378:  96%|█████████▋| 27/28 [01:08<00:02,  2.24s/it]epoch 4 loss 1.38243:  96%|█████████▋| 27/28 [01:08<00:02,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6448[0m
[32m  eval_f1 = 0.3129[0m
[32m  eval_mcc = 0.6246[0m
[32m  eval_precision = 0.4384[0m
[32m  eval_recall = 0.286[0m
[32m  ********************[0m
[32m  Best f1:0.3129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.38243: 100%|██████████| 28/28 [01:13<00:00,  3.25s/it]epoch 4 loss 1.38243: 100%|██████████| 28/28 [01:13<00:00,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.60it/s] 20%|██        | 2/10 [00:00<00:02,  2.69it/s] 30%|███       | 3/10 [00:01<00:02,  2.71it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6448[0m
[32m  eval_f1 = 0.3129[0m
[32m  eval_mcc = 0.6246[0m
[32m  eval_precision = 0.4384[0m
[32m  eval_recall = 0.286[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6265[0m
[32m  eval_f1 = 0.2471[0m
[32m  eval_mcc = 0.6074[0m
[32m  eval_precision = 0.3371[0m
[32m  eval_recall = 0.2299[0m

