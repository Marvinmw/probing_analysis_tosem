[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=3, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3', posratio=0.5, seed=206, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.70305:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.70305:   4%|▎         | 1/28 [00:00<00:22,  1.22it/s]epoch 0 loss 5.70501:   4%|▎         | 1/28 [00:01<00:22,  1.22it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0008[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = -0.0023[0m
[32m  eval_precision = 0.0037[0m
[32m  eval_recall = 0.0018[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.70501:   7%|▋         | 2/28 [00:05<01:22,  3.18s/it]epoch 0 loss 5.69374:   7%|▋         | 2/28 [00:06<01:22,  3.18s/it]epoch 0 loss 5.69374:  11%|█         | 3/28 [00:06<00:47,  1.91s/it]epoch 0 loss 5.68005:  11%|█         | 3/28 [00:06<00:47,  1.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0019[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = -0.0031[0m
[32m  eval_precision = 0.0015[0m
[32m  eval_recall = 0.0018[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.68005:  14%|█▍        | 4/28 [00:11<01:17,  3.21s/it]epoch 0 loss 5.65244:  14%|█▍        | 4/28 [00:11<01:17,  3.21s/it]epoch 0 loss 5.65244:  18%|█▊        | 5/28 [00:11<00:50,  2.20s/it]epoch 0 loss 5.62512:  18%|█▊        | 5/28 [00:12<00:50,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0057[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = -0.0054[0m
[32m  eval_precision = 0.0026[0m
[32m  eval_recall = 0.0017[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.62512:  21%|██▏       | 6/28 [00:18<01:22,  3.75s/it]epoch 0 loss 5.5898:  21%|██▏       | 6/28 [00:18<01:22,  3.75s/it] epoch 0 loss 5.5898:  25%|██▌       | 7/28 [00:18<00:56,  2.67s/it]epoch 0 loss 5.54795:  25%|██▌       | 7/28 [00:19<00:56,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.55it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.54it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.55it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.55it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.55it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.56it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.56it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.55it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.55it/s][A100%|██████████| 10/10 [00:03<00:00,  2.77it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0253[0m
[32m  eval_f1 = 0.0036[0m
[32m  eval_mcc = -0.0017[0m
[32m  eval_precision = 0.0041[0m
[32m  eval_recall = 0.0059[0m
[32m  ********************[0m
[32m  Best f1:0.0036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.54795:  29%|██▊       | 8/28 [00:24<01:13,  3.67s/it]epoch 0 loss 5.50159:  29%|██▊       | 8/28 [00:25<01:13,  3.67s/it]epoch 0 loss 5.50159:  32%|███▏      | 9/28 [00:25<00:50,  2.66s/it]epoch 0 loss 5.44838:  32%|███▏      | 9/28 [00:25<00:50,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.55it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.54it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.53it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.54it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.53it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.54it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.54it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.54it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.54it/s][A100%|██████████| 10/10 [00:03<00:00,  2.76it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0535[0m
[32m  eval_f1 = 0.0103[0m
[32m  eval_mcc = 0.013[0m
[32m  eval_precision = 0.0112[0m
[32m  eval_recall = 0.0156[0m
[32m  ********************[0m
[32m  Best f1:0.0103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.44838:  36%|███▌      | 10/28 [00:33<01:18,  4.39s/it]epoch 0 loss 5.3889:  36%|███▌      | 10/28 [00:33<01:18,  4.39s/it] epoch 0 loss 5.3889:  39%|███▉      | 11/28 [00:33<00:54,  3.18s/it]epoch 0 loss 5.32363:  39%|███▉      | 11/28 [00:34<00:54,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.53it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.52it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.52it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.53it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.52it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.52it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.51it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.51it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.51it/s][A100%|██████████| 10/10 [00:03<00:00,  2.73it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0792[0m
[32m  eval_f1 = 0.0197[0m
[32m  eval_mcc = 0.0329[0m
[32m  eval_precision = 0.0226[0m
[32m  eval_recall = 0.0263[0m
[32m  ********************[0m
[32m  Best f1:0.0197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.32363:  43%|████▎     | 12/28 [00:41<01:11,  4.45s/it]epoch 0 loss 5.258:  43%|████▎     | 12/28 [00:41<01:11,  4.45s/it]  epoch 0 loss 5.258:  46%|████▋     | 13/28 [00:41<00:48,  3.23s/it]epoch 0 loss 5.18656:  46%|████▋     | 13/28 [00:42<00:48,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1062[0m
[32m  eval_f1 = 0.0279[0m
[32m  eval_mcc = 0.0563[0m
[32m  eval_precision = 0.0336[0m
[32m  eval_recall = 0.0324[0m
[32m  ********************[0m
[32m  Best f1:0.0279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.18656:  50%|█████     | 14/28 [00:54<01:27,  6.23s/it]epoch 0 loss 5.11006:  50%|█████     | 14/28 [00:55<01:27,  6.23s/it]epoch 0 loss 5.11006:  54%|█████▎    | 15/28 [00:55<00:58,  4.49s/it]epoch 0 loss 5.03346:  54%|█████▎    | 15/28 [00:55<00:58,  4.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.53it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.54it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.53it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.54it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.54it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.55it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.55it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.55it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.55it/s][A100%|██████████| 10/10 [00:03<00:00,  2.76it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1462[0m
[32m  eval_f1 = 0.0362[0m
[32m  eval_mcc = 0.093[0m
[32m  eval_precision = 0.0489[0m
[32m  eval_recall = 0.0392[0m
[32m  ********************[0m
[32m  Best f1:0.0362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.03346:  57%|█████▋    | 16/28 [01:17<01:59,  9.96s/it]epoch 0 loss 4.95914:  57%|█████▋    | 16/28 [01:18<01:59,  9.96s/it]epoch 0 loss 4.95914:  61%|██████    | 17/28 [01:18<01:18,  7.09s/it]epoch 0 loss 4.88265:  61%|██████    | 17/28 [01:18<01:18,  7.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1956[0m
[32m  eval_f1 = 0.047[0m
[32m  eval_mcc = 0.1394[0m
[32m  eval_precision = 0.0717[0m
[32m  eval_recall = 0.0477[0m
[32m  ********************[0m
[32m  Best f1:0.047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.88265:  64%|██████▍   | 18/28 [01:40<01:57, 11.74s/it]epoch 0 loss 4.80641:  64%|██████▍   | 18/28 [01:41<01:57, 11.74s/it]epoch 0 loss 4.80641:  68%|██████▊   | 19/28 [01:41<01:15,  8.35s/it]epoch 0 loss 4.73102:  68%|██████▊   | 19/28 [01:41<01:15,  8.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.55it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.53it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.53it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.57it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.63it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.67it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.69it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.89it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2523[0m
[32m  eval_f1 = 0.0656[0m
[32m  eval_mcc = 0.1991[0m
[32m  eval_precision = 0.0988[0m
[32m  eval_recall = 0.0624[0m
[32m  ********************[0m
[32m  Best f1:0.0656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.73102:  71%|███████▏  | 20/28 [02:04<01:42, 12.83s/it]epoch 0 loss 4.64971:  71%|███████▏  | 20/28 [02:04<01:42, 12.83s/it]epoch 0 loss 4.64971:  75%|███████▌  | 21/28 [02:04<01:03,  9.10s/it]epoch 0 loss 4.57744:  75%|███████▌  | 21/28 [02:05<01:03,  9.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3171[0m
[32m  eval_f1 = 0.0881[0m
[32m  eval_mcc = 0.2724[0m
[32m  eval_precision = 0.1347[0m
[32m  eval_recall = 0.0815[0m
[32m  ********************[0m
[32m  Best f1:0.0881[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.57744:  79%|███████▊  | 22/28 [02:26<01:17, 12.93s/it]epoch 0 loss 4.5023:  79%|███████▊  | 22/28 [02:27<01:17, 12.93s/it] epoch 0 loss 4.5023:  82%|████████▏ | 23/28 [02:27<00:45,  9.18s/it]epoch 0 loss 4.43503:  82%|████████▏ | 23/28 [02:27<00:45,  9.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3717[0m
[32m  eval_f1 = 0.0971[0m
[32m  eval_mcc = 0.3324[0m
[32m  eval_precision = 0.1586[0m
[32m  eval_recall = 0.0885[0m
[32m  ********************[0m
[32m  Best f1:0.0971[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.43503:  86%|████████▌ | 24/28 [02:53<00:56, 14.24s/it]epoch 0 loss 4.36942:  86%|████████▌ | 24/28 [02:53<00:56, 14.24s/it]epoch 0 loss 4.36942:  89%|████████▉ | 25/28 [02:53<00:30, 10.10s/it]epoch 0 loss 4.29938:  89%|████████▉ | 25/28 [02:54<00:30, 10.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.57it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.57it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.55it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.54it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.54it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.55it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.56it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.56it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.55it/s][A100%|██████████| 10/10 [00:03<00:00,  2.77it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4238[0m
[32m  eval_f1 = 0.1117[0m
[32m  eval_mcc = 0.3883[0m
[32m  eval_precision = 0.1703[0m
[32m  eval_recall = 0.1014[0m
[32m  ********************[0m
[32m  Best f1:0.1117[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3883[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.29938:  93%|█████████▎| 26/28 [03:09<00:23, 11.70s/it]epoch 0 loss 4.23196:  93%|█████████▎| 26/28 [03:09<00:23, 11.70s/it]epoch 0 loss 4.23196:  96%|█████████▋| 27/28 [03:09<00:08,  8.32s/it]epoch 0 loss 4.16968:  96%|█████████▋| 27/28 [03:09<00:08,  8.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4607[0m
[32m  eval_f1 = 0.1244[0m
[32m  eval_mcc = 0.4273[0m
[32m  eval_precision = 0.1716[0m
[32m  eval_recall = 0.1149[0m
[32m  ********************[0m
[32m  Best f1:0.1244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.16968: 100%|██████████| 28/28 [03:34<00:00, 13.28s/it]epoch 0 loss 4.16968: 100%|██████████| 28/28 [03:34<00:00,  7.66s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.63053:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.63053:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 1 loss 2.42491:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4992[0m
[32m  eval_f1 = 0.1388[0m
[32m  eval_mcc = 0.4681[0m
[32m  eval_precision = 0.1884[0m
[32m  eval_recall = 0.1308[0m
[32m  ********************[0m
[32m  Best f1:0.1388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4681[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42491:   7%|▋         | 2/28 [00:25<06:33, 15.13s/it]epoch 1 loss 2.31048:   7%|▋         | 2/28 [00:26<06:33, 15.13s/it]epoch 1 loss 2.31048:  11%|█         | 3/28 [00:26<03:30,  8.41s/it]epoch 1 loss 2.2576:  11%|█         | 3/28 [00:26<03:30,  8.41s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5306[0m
[32m  eval_f1 = 0.1521[0m
[32m  eval_mcc = 0.5013[0m
[32m  eval_precision = 0.2[0m
[32m  eval_recall = 0.1471[0m
[32m  ********************[0m
[32m  Best f1:0.1521[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.2576:  14%|█▍        | 4/28 [00:49<05:41, 14.21s/it]epoch 1 loss 2.2082:  14%|█▍        | 4/28 [00:49<05:41, 14.21s/it]epoch 1 loss 2.2082:  18%|█▊        | 5/28 [00:49<03:32,  9.24s/it]epoch 1 loss 2.16982:  18%|█▊        | 5/28 [00:50<03:32,  9.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5609[0m
[32m  eval_f1 = 0.1704[0m
[32m  eval_mcc = 0.5344[0m
[32m  eval_precision = 0.2117[0m
[32m  eval_recall = 0.1653[0m
[32m  ********************[0m
[32m  Best f1:0.1704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16982:  21%|██▏       | 6/28 [01:12<05:02, 13.76s/it]epoch 1 loss 2.1177:  21%|██▏       | 6/28 [01:12<05:02, 13.76s/it] epoch 1 loss 2.1177:  25%|██▌       | 7/28 [01:12<03:17,  9.40s/it]epoch 1 loss 2.10342:  25%|██▌       | 7/28 [01:13<03:17,  9.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5781[0m
[32m  eval_f1 = 0.1847[0m
[32m  eval_mcc = 0.5536[0m
[32m  eval_precision = 0.233[0m
[32m  eval_recall = 0.1788[0m
[32m  ********************[0m
[32m  Best f1:0.1847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.10342:  29%|██▊       | 8/28 [01:34<04:24, 13.23s/it]epoch 1 loss 2.07094:  29%|██▊       | 8/28 [01:34<04:24, 13.23s/it]epoch 1 loss 2.07094:  32%|███▏      | 9/28 [01:34<02:55,  9.24s/it]epoch 1 loss 2.03852:  32%|███▏      | 9/28 [01:35<02:55,  9.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.56it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.56it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.56it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.56it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.56it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.56it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.56it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.56it/s][A100%|██████████| 10/10 [00:03<00:00,  2.78it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5898[0m
[32m  eval_f1 = 0.1951[0m
[32m  eval_mcc = 0.5671[0m
[32m  eval_precision = 0.2593[0m
[32m  eval_recall = 0.187[0m
[32m  ********************[0m
[32m  Best f1:0.1951[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5671[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03852:  36%|███▌      | 10/28 [01:56<03:58, 13.27s/it]epoch 1 loss 2.01104:  36%|███▌      | 10/28 [01:57<03:58, 13.27s/it]epoch 1 loss 2.01104:  39%|███▉      | 11/28 [01:57<02:38,  9.35s/it]epoch 1 loss 1.99458:  39%|███▉      | 11/28 [01:57<02:38,  9.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.57it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.58it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.59it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.58it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.58it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.58it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.59it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.59it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.59it/s][A100%|██████████| 10/10 [00:03<00:00,  2.81it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5954[0m
[32m  eval_f1 = 0.2108[0m
[32m  eval_mcc = 0.5737[0m
[32m  eval_precision = 0.2909[0m
[32m  eval_recall = 0.2011[0m
[32m  ********************[0m
[32m  Best f1:0.2108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5737[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99458:  43%|████▎     | 12/28 [02:14<03:06, 11.65s/it]epoch 1 loss 1.9672:  43%|████▎     | 12/28 [02:14<03:06, 11.65s/it] epoch 1 loss 1.9672:  46%|████▋     | 13/28 [02:14<02:03,  8.25s/it]epoch 1 loss 1.96071:  46%|████▋     | 13/28 [02:15<02:03,  8.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.57it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.59it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.59it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.59it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.59it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.60it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.60it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.60it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.60it/s][A100%|██████████| 10/10 [00:03<00:00,  2.82it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5989[0m
[32m  eval_f1 = 0.2235[0m
[32m  eval_mcc = 0.5779[0m
[32m  eval_precision = 0.2988[0m
[32m  eval_recall = 0.2096[0m
[32m  ********************[0m
[32m  Best f1:0.2235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5779[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96071:  50%|█████     | 14/28 [02:37<02:55, 12.54s/it]epoch 1 loss 1.94243:  50%|█████     | 14/28 [02:37<02:55, 12.54s/it]epoch 1 loss 1.94243:  54%|█████▎    | 15/28 [02:37<01:55,  8.90s/it]epoch 1 loss 1.91907:  54%|█████▎    | 15/28 [02:38<01:55,  8.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.59it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.58it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.61it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.67it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.70it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.94it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6037[0m
[32m  eval_f1 = 0.2317[0m
[32m  eval_mcc = 0.5828[0m
[32m  eval_precision = 0.3229[0m
[32m  eval_recall = 0.2154[0m
[32m  ********************[0m
[32m  Best f1:0.2317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91907:  57%|█████▋    | 16/28 [03:04<02:49, 14.16s/it]epoch 1 loss 1.89862:  57%|█████▋    | 16/28 [03:04<02:49, 14.16s/it]epoch 1 loss 1.89862:  61%|██████    | 17/28 [03:04<01:50, 10.03s/it]epoch 1 loss 1.87963:  61%|██████    | 17/28 [03:04<01:50, 10.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.611[0m
[32m  eval_f1 = 0.2405[0m
[32m  eval_mcc = 0.5909[0m
[32m  eval_precision = 0.3279[0m
[32m  eval_recall = 0.2226[0m
[32m  ********************[0m
[32m  Best f1:0.2405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87963:  64%|██████▍   | 18/28 [03:17<01:48, 10.84s/it]epoch 1 loss 1.85727:  64%|██████▍   | 18/28 [03:17<01:48, 10.84s/it]epoch 1 loss 1.85727:  68%|██████▊   | 19/28 [03:17<01:09,  7.71s/it]epoch 1 loss 1.84101:  68%|██████▊   | 19/28 [03:17<01:09,  7.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6151[0m
[32m  eval_f1 = 0.2479[0m
[32m  eval_mcc = 0.5951[0m
[32m  eval_precision = 0.3434[0m
[32m  eval_recall = 0.2287[0m
[32m  ********************[0m
[32m  Best f1:0.2479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5951[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84101:  71%|███████▏  | 20/28 [03:38<01:34, 11.76s/it]epoch 1 loss 1.82682:  71%|███████▏  | 20/28 [03:39<01:34, 11.76s/it]epoch 1 loss 1.82682:  75%|███████▌  | 21/28 [03:39<00:58,  8.36s/it]epoch 1 loss 1.8156:  75%|███████▌  | 21/28 [03:39<00:58,  8.36s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6212[0m
[32m  eval_f1 = 0.2668[0m
[32m  eval_mcc = 0.6007[0m
[32m  eval_precision = 0.3612[0m
[32m  eval_recall = 0.2456[0m
[32m  ********************[0m
[32m  Best f1:0.2668[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8156:  79%|███████▊  | 22/28 [04:00<01:14, 12.34s/it]epoch 1 loss 1.80194:  79%|███████▊  | 22/28 [04:01<01:14, 12.34s/it]epoch 1 loss 1.80194:  82%|████████▏ | 23/28 [04:01<00:43,  8.77s/it]epoch 1 loss 1.7828:  82%|████████▏ | 23/28 [04:01<00:43,  8.77s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6263[0m
[32m  eval_f1 = 0.2709[0m
[32m  eval_mcc = 0.6049[0m
[32m  eval_precision = 0.37[0m
[32m  eval_recall = 0.2508[0m
[32m  ********************[0m
[32m  Best f1:0.2709[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7828:  86%|████████▌ | 24/28 [04:15<00:41, 10.46s/it]epoch 1 loss 1.76972:  86%|████████▌ | 24/28 [04:16<00:41, 10.46s/it]epoch 1 loss 1.76972:  89%|████████▉ | 25/28 [04:16<00:22,  7.45s/it]epoch 1 loss 1.75618:  89%|████████▉ | 25/28 [04:16<00:22,  7.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6295[0m
[32m  eval_f1 = 0.2785[0m
[32m  eval_mcc = 0.6081[0m
[32m  eval_precision = 0.3653[0m
[32m  eval_recall = 0.2574[0m
[32m  ********************[0m
[32m  Best f1:0.2785[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75618:  93%|█████████▎| 26/28 [04:42<00:26, 13.21s/it]epoch 1 loss 1.75586:  93%|█████████▎| 26/28 [04:43<00:26, 13.21s/it]epoch 1 loss 1.75586:  96%|█████████▋| 27/28 [04:43<00:09,  9.37s/it]epoch 1 loss 1.74949:  96%|█████████▋| 27/28 [04:43<00:09,  9.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.80it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6321[0m
[32m  eval_f1 = 0.2843[0m
[32m  eval_mcc = 0.6112[0m
[32m  eval_precision = 0.369[0m
[32m  eval_recall = 0.2646[0m
[32m  ********************[0m
[32m  Best f1:0.2843[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74949: 100%|██████████| 28/28 [05:01<00:00, 12.01s/it]epoch 1 loss 1.74949: 100%|██████████| 28/28 [05:01<00:00, 10.76s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.2889:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.2889:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 2 loss 1.34007:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6351[0m
[32m  eval_f1 = 0.2871[0m
[32m  eval_mcc = 0.6144[0m
[32m  eval_precision = 0.3792[0m
[32m  eval_recall = 0.2673[0m
[32m  ********************[0m
[32m  Best f1:0.2871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34007:   7%|▋         | 2/28 [00:11<02:55,  6.74s/it]epoch 2 loss 1.37021:   7%|▋         | 2/28 [00:11<02:55,  6.74s/it]epoch 2 loss 1.37021:  11%|█         | 3/28 [00:12<01:36,  3.85s/it]epoch 2 loss 1.36321:  11%|█         | 3/28 [00:12<01:36,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6402[0m
[32m  eval_f1 = 0.2909[0m
[32m  eval_mcc = 0.6201[0m
[32m  eval_precision = 0.3882[0m
[32m  eval_recall = 0.2708[0m
[32m  ********************[0m
[32m  Best f1:0.2909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36321:  14%|█▍        | 4/28 [00:23<02:44,  6.84s/it]epoch 2 loss 1.38207:  14%|█▍        | 4/28 [00:23<02:44,  6.84s/it]epoch 2 loss 1.38207:  18%|█▊        | 5/28 [00:23<01:44,  4.52s/it]epoch 2 loss 1.38136:  18%|█▊        | 5/28 [00:24<01:44,  4.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6434[0m
[32m  eval_f1 = 0.294[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.3912[0m
[32m  eval_recall = 0.2741[0m
[32m  ********************[0m
[32m  Best f1:0.294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38136:  21%|██▏       | 6/28 [00:31<01:59,  5.44s/it]epoch 2 loss 1.38068:  21%|██▏       | 6/28 [00:31<01:59,  5.44s/it]epoch 2 loss 1.38068:  25%|██▌       | 7/28 [00:31<01:19,  3.80s/it]epoch 2 loss 1.38822:  25%|██▌       | 7/28 [00:31<01:19,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6468[0m
[32m  eval_f1 = 0.2972[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.3956[0m
[32m  eval_recall = 0.2769[0m
[32m  ********************[0m
[32m  Best f1:0.2972[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38822:  29%|██▊       | 8/28 [00:42<02:04,  6.21s/it]epoch 2 loss 1.39166:  29%|██▊       | 8/28 [00:43<02:04,  6.21s/it]epoch 2 loss 1.39166:  32%|███▏      | 9/28 [00:43<01:23,  4.40s/it]epoch 2 loss 1.3948:  32%|███▏      | 9/28 [00:43<01:23,  4.40s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6488[0m
[32m  eval_f1 = 0.3[0m
[32m  eval_mcc = 0.6297[0m
[32m  eval_precision = 0.4058[0m
[32m  eval_recall = 0.2775[0m
[32m  ********************[0m
[32m  Best f1:0.3[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3948:  36%|███▌      | 10/28 [00:54<01:56,  6.45s/it]epoch 2 loss 1.40616:  36%|███▌      | 10/28 [00:54<01:56,  6.45s/it]epoch 2 loss 1.40616:  39%|███▉      | 11/28 [00:54<01:18,  4.60s/it]epoch 2 loss 1.40194:  39%|███▉      | 11/28 [00:55<01:18,  4.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6505[0m
[32m  eval_f1 = 0.305[0m
[32m  eval_mcc = 0.6313[0m
[32m  eval_precision = 0.4233[0m
[32m  eval_recall = 0.2814[0m
[32m  ********************[0m
[32m  Best f1:0.305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40194:  43%|████▎     | 12/28 [01:05<01:44,  6.54s/it]epoch 2 loss 1.39478:  43%|████▎     | 12/28 [01:06<01:44,  6.54s/it]epoch 2 loss 1.39478:  46%|████▋     | 13/28 [01:06<01:10,  4.69s/it]epoch 2 loss 1.38342:  46%|████▋     | 13/28 [01:06<01:10,  4.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6522[0m
[32m  eval_f1 = 0.3083[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.4254[0m
[32m  eval_recall = 0.2826[0m
[32m  ********************[0m
[32m  Best f1:0.3083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38342:  50%|█████     | 14/28 [01:17<01:32,  6.63s/it]epoch 2 loss 1.38626:  50%|█████     | 14/28 [01:17<01:32,  6.63s/it]epoch 2 loss 1.38626:  54%|█████▎    | 15/28 [01:17<01:01,  4.76s/it]epoch 2 loss 1.38267:  54%|█████▎    | 15/28 [01:18<01:01,  4.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.654[0m
[32m  eval_f1 = 0.3279[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4602[0m
[32m  eval_recall = 0.2969[0m
[32m  ********************[0m
[32m  Best f1:0.3279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38267:  57%|█████▋    | 16/28 [01:28<01:18,  6.58s/it]epoch 2 loss 1.37821:  57%|█████▋    | 16/28 [01:28<01:18,  6.58s/it]epoch 2 loss 1.37821:  61%|██████    | 17/28 [01:28<00:52,  4.73s/it]epoch 2 loss 1.37143:  61%|██████    | 17/28 [01:29<00:52,  4.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6551[0m
[32m  eval_f1 = 0.3304[0m
[32m  eval_mcc = 0.6357[0m
[32m  eval_precision = 0.455[0m
[32m  eval_recall = 0.3[0m
[32m  ********************[0m
[32m  Best f1:0.3304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37143:  64%|██████▍   | 18/28 [01:37<00:58,  5.86s/it]epoch 2 loss 1.3632:  64%|██████▍   | 18/28 [01:37<00:58,  5.86s/it] epoch 2 loss 1.3632:  68%|██████▊   | 19/28 [01:37<00:38,  4.23s/it]epoch 2 loss 1.36427:  68%|██████▊   | 19/28 [01:38<00:38,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6557[0m
[32m  eval_f1 = 0.333[0m
[32m  eval_mcc = 0.6362[0m
[32m  eval_precision = 0.4472[0m
[32m  eval_recall = 0.3043[0m
[32m  ********************[0m
[32m  Best f1:0.333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36427:  71%|███████▏  | 20/28 [01:48<00:49,  6.21s/it]epoch 2 loss 1.36593:  71%|███████▏  | 20/28 [01:49<00:49,  6.21s/it]epoch 2 loss 1.36593:  75%|███████▌  | 21/28 [01:49<00:31,  4.47s/it]epoch 2 loss 1.3654:  75%|███████▌  | 21/28 [01:49<00:31,  4.47s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6567[0m
[32m  eval_f1 = 0.3355[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4466[0m
[32m  eval_recall = 0.3072[0m
[32m  ********************[0m
[32m  Best f1:0.3355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3654:  79%|███████▊  | 22/28 [01:59<00:37,  6.30s/it]epoch 2 loss 1.36036:  79%|███████▊  | 22/28 [02:00<00:37,  6.30s/it]epoch 2 loss 1.36036:  82%|████████▏ | 23/28 [02:00<00:22,  4.54s/it]epoch 2 loss 1.35172:  82%|████████▏ | 23/28 [02:00<00:22,  4.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.3412[0m
[32m  eval_mcc = 0.6395[0m
[32m  eval_precision = 0.4499[0m
[32m  eval_recall = 0.3121[0m
[32m  ********************[0m
[32m  Best f1:0.3412[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35172:  86%|████████▌ | 24/28 [02:09<00:23,  5.90s/it]epoch 2 loss 1.35065:  86%|████████▌ | 24/28 [02:09<00:23,  5.90s/it]epoch 2 loss 1.35065:  89%|████████▉ | 25/28 [02:09<00:12,  4.25s/it]epoch 2 loss 1.34696:  89%|████████▉ | 25/28 [02:09<00:12,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6603[0m
[32m  eval_f1 = 0.3437[0m
[32m  eval_mcc = 0.6412[0m
[32m  eval_precision = 0.4568[0m
[32m  eval_recall = 0.3148[0m
[32m  ********************[0m
[32m  Best f1:0.3437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6412[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34696:  93%|█████████▎| 26/28 [02:15<00:09,  4.90s/it]epoch 2 loss 1.34212:  93%|█████████▎| 26/28 [02:16<00:09,  4.90s/it]epoch 2 loss 1.34212:  96%|█████████▋| 27/28 [02:16<00:03,  3.56s/it]epoch 2 loss 1.3472:  96%|█████████▋| 27/28 [02:16<00:03,  3.56s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6615[0m
[32m  eval_f1 = 0.3426[0m
[32m  eval_mcc = 0.6426[0m
[32m  eval_precision = 0.4418[0m
[32m  eval_recall = 0.315[0m
[32m  ********************[0m
[32m  Best MCC:0.6426[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3472: 100%|██████████| 28/28 [02:21<00:00,  3.94s/it]epoch 2 loss 1.3472: 100%|██████████| 28/28 [02:21<00:00,  5.04s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.23429:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.23429:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s]epoch 3 loss 1.22614:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6632[0m
[32m  eval_f1 = 0.345[0m
[32m  eval_mcc = 0.6444[0m
[32m  eval_precision = 0.4452[0m
[32m  eval_recall = 0.3181[0m
[32m  ********************[0m
[32m  Best f1:0.345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22614:   7%|▋         | 2/28 [00:06<01:34,  3.64s/it]epoch 3 loss 1.23273:   7%|▋         | 2/28 [00:06<01:34,  3.64s/it]epoch 3 loss 1.23273:  11%|█         | 3/28 [00:06<00:54,  2.17s/it]epoch 3 loss 1.2385:  11%|█         | 3/28 [00:07<00:54,  2.17s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6644[0m
[32m  eval_f1 = 0.3456[0m
[32m  eval_mcc = 0.6458[0m
[32m  eval_precision = 0.4506[0m
[32m  eval_recall = 0.3186[0m
[32m  ********************[0m
[32m  Best f1:0.3456[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2385:  14%|█▍        | 4/28 [00:13<01:32,  3.87s/it]epoch 3 loss 1.24508:  14%|█▍        | 4/28 [00:13<01:32,  3.87s/it]epoch 3 loss 1.24508:  18%|█▊        | 5/28 [00:13<01:00,  2.63s/it]epoch 3 loss 1.2621:  18%|█▊        | 5/28 [00:14<01:00,  2.63s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3481[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.447[0m
[32m  eval_recall = 0.3207[0m
[32m  ********************[0m
[32m  Best f1:0.3481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2621:  21%|██▏       | 6/28 [00:20<01:26,  3.94s/it]epoch 3 loss 1.27436:  21%|██▏       | 6/28 [00:20<01:26,  3.94s/it]epoch 3 loss 1.27436:  25%|██▌       | 7/28 [00:20<00:58,  2.79s/it]epoch 3 loss 1.26511:  25%|██▌       | 7/28 [00:20<00:58,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6656[0m
[32m  eval_f1 = 0.3493[0m
[32m  eval_mcc = 0.6469[0m
[32m  eval_precision = 0.4556[0m
[32m  eval_recall = 0.321[0m
[32m  ********************[0m
[32m  Best f1:0.3493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26511:  29%|██▊       | 8/28 [00:27<01:19,  3.96s/it]epoch 3 loss 1.26153:  29%|██▊       | 8/28 [00:27<01:19,  3.96s/it]epoch 3 loss 1.26153:  32%|███▏      | 9/28 [00:27<00:54,  2.86s/it]epoch 3 loss 1.26236:  32%|███▏      | 9/28 [00:27<00:54,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6653[0m
[32m  eval_f1 = 0.3504[0m
[32m  eval_mcc = 0.6466[0m
[32m  eval_precision = 0.4582[0m
[32m  eval_recall = 0.322[0m
[32m  ********************[0m
[32m  Best f1:0.3504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.26236:  36%|███▌      | 10/28 [00:32<01:02,  3.49s/it]epoch 3 loss 1.26242:  36%|███▌      | 10/28 [00:32<01:02,  3.49s/it]epoch 3 loss 1.26242:  39%|███▉      | 11/28 [00:32<00:43,  2.55s/it]epoch 3 loss 1.25756:  39%|███▉      | 11/28 [00:33<00:43,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6659[0m
[32m  eval_f1 = 0.3574[0m
[32m  eval_mcc = 0.6471[0m
[32m  eval_precision = 0.4679[0m
[32m  eval_recall = 0.3266[0m
[32m  ********************[0m
[32m  Best f1:0.3574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25756:  43%|████▎     | 12/28 [00:38<00:57,  3.58s/it]epoch 3 loss 1.25726:  43%|████▎     | 12/28 [00:39<00:57,  3.58s/it]epoch 3 loss 1.25726:  46%|████▋     | 13/28 [00:39<00:39,  2.62s/it]epoch 3 loss 1.25843:  46%|████▋     | 13/28 [00:39<00:39,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3572[0m
[32m  eval_mcc = 0.6463[0m
[32m  eval_precision = 0.4661[0m
[32m  eval_recall = 0.3267[0m

epoch 3 loss 1.25843:  50%|█████     | 14/28 [00:42<00:41,  2.98s/it]epoch 3 loss 1.25708:  50%|█████     | 14/28 [00:43<00:41,  2.98s/it]epoch 3 loss 1.25708:  54%|█████▎    | 15/28 [00:43<00:28,  2.20s/it]epoch 3 loss 1.25539:  54%|█████▎    | 15/28 [00:43<00:28,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6669[0m
[32m  eval_f1 = 0.3597[0m
[32m  eval_mcc = 0.6479[0m
[32m  eval_precision = 0.4622[0m
[32m  eval_recall = 0.33[0m
[32m  ********************[0m
[32m  Best f1:0.3597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25539:  57%|█████▋    | 16/28 [00:49<00:39,  3.29s/it]epoch 3 loss 1.25663:  57%|█████▋    | 16/28 [00:49<00:39,  3.29s/it]epoch 3 loss 1.25663:  61%|██████    | 17/28 [00:49<00:26,  2.43s/it]epoch 3 loss 1.24994:  61%|██████    | 17/28 [00:49<00:26,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6691[0m
[32m  eval_f1 = 0.3637[0m
[32m  eval_mcc = 0.6502[0m
[32m  eval_precision = 0.4582[0m
[32m  eval_recall = 0.335[0m
[32m  ********************[0m
[32m  Best f1:0.3637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24994:  64%|██████▍   | 18/28 [00:56<00:37,  3.70s/it]epoch 3 loss 1.25001:  64%|██████▍   | 18/28 [00:56<00:37,  3.70s/it]epoch 3 loss 1.25001:  68%|██████▊   | 19/28 [00:56<00:24,  2.72s/it]epoch 3 loss 1.25365:  68%|██████▊   | 19/28 [00:57<00:24,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6697[0m
[32m  eval_f1 = 0.3662[0m
[32m  eval_mcc = 0.651[0m
[32m  eval_precision = 0.4602[0m
[32m  eval_recall = 0.3372[0m
[32m  ********************[0m
[32m  Best f1:0.3662[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25365:  71%|███████▏  | 20/28 [01:03<00:30,  3.86s/it]epoch 3 loss 1.24965:  71%|███████▏  | 20/28 [01:03<00:30,  3.86s/it]epoch 3 loss 1.24965:  75%|███████▌  | 21/28 [01:03<00:19,  2.83s/it]epoch 3 loss 1.24352:  75%|███████▌  | 21/28 [01:03<00:19,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6702[0m
[32m  eval_f1 = 0.3663[0m
[32m  eval_mcc = 0.6518[0m
[32m  eval_precision = 0.4633[0m
[32m  eval_recall = 0.3368[0m
[32m  ********************[0m
[32m  Best f1:0.3663[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24352:  79%|███████▊  | 22/28 [01:10<00:23,  3.93s/it]epoch 3 loss 1.24561:  79%|███████▊  | 22/28 [01:10<00:23,  3.93s/it]epoch 3 loss 1.24561:  82%|████████▏ | 23/28 [01:10<00:14,  2.88s/it]epoch 3 loss 1.24234:  82%|████████▏ | 23/28 [01:10<00:14,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6689[0m
[32m  eval_f1 = 0.3668[0m
[32m  eval_mcc = 0.6508[0m
[32m  eval_precision = 0.4649[0m
[32m  eval_recall = 0.3365[0m
[32m  ********************[0m
[32m  Best f1:0.3668[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.24234:  86%|████████▌ | 24/28 [01:15<00:14,  3.54s/it]epoch 3 loss 1.24757:  86%|████████▌ | 24/28 [01:16<00:14,  3.54s/it]epoch 3 loss 1.24757:  89%|████████▉ | 25/28 [01:16<00:07,  2.61s/it]epoch 3 loss 1.24511:  89%|████████▉ | 25/28 [01:16<00:07,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6685[0m
[32m  eval_f1 = 0.3673[0m
[32m  eval_mcc = 0.6506[0m
[32m  eval_precision = 0.4677[0m
[32m  eval_recall = 0.3368[0m
[32m  ********************[0m
[32m  Best f1:0.3673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.24511:  93%|█████████▎| 26/28 [01:20<00:06,  3.26s/it]epoch 3 loss 1.24632:  93%|█████████▎| 26/28 [01:21<00:06,  3.26s/it]epoch 3 loss 1.24632:  96%|█████████▋| 27/28 [01:21<00:02,  2.40s/it]epoch 3 loss 1.25083:  96%|█████████▋| 27/28 [01:21<00:02,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6685[0m
[32m  eval_f1 = 0.3676[0m
[32m  eval_mcc = 0.6506[0m
[32m  eval_precision = 0.466[0m
[32m  eval_recall = 0.3371[0m
[32m  ********************[0m
[32m  Best f1:0.3676[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.25083: 100%|██████████| 28/28 [01:25<00:00,  3.08s/it]epoch 3 loss 1.25083: 100%|██████████| 28/28 [01:25<00:00,  3.07s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.23446:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.23446:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s]epoch 4 loss 1.26325:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6687[0m
[32m  eval_f1 = 0.3685[0m
[32m  eval_mcc = 0.6506[0m
[32m  eval_precision = 0.4698[0m
[32m  eval_recall = 0.3378[0m
[32m  ********************[0m
[32m  Best f1:0.3685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.26325:   7%|▋         | 2/28 [00:05<01:22,  3.16s/it]epoch 4 loss 1.27717:   7%|▋         | 2/28 [00:05<01:22,  3.16s/it]epoch 4 loss 1.27717:  11%|█         | 3/28 [00:05<00:47,  1.90s/it]epoch 4 loss 1.26416:  11%|█         | 3/28 [00:06<00:47,  1.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6691[0m
[32m  eval_f1 = 0.3655[0m
[32m  eval_mcc = 0.6508[0m
[32m  eval_precision = 0.4608[0m
[32m  eval_recall = 0.3371[0m

epoch 4 loss 1.26416:  14%|█▍        | 4/28 [00:09<01:03,  2.65s/it]epoch 4 loss 1.24784:  14%|█▍        | 4/28 [00:10<01:03,  2.65s/it]epoch 4 loss 1.24784:  18%|█▊        | 5/28 [00:10<00:42,  1.84s/it]epoch 4 loss 1.24107:  18%|█▊        | 5/28 [00:10<00:42,  1.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6696[0m
[32m  eval_f1 = 0.3652[0m
[32m  eval_mcc = 0.651[0m
[32m  eval_precision = 0.4581[0m
[32m  eval_recall = 0.3374[0m

epoch 4 loss 1.24107:  21%|██▏       | 6/28 [00:13<00:55,  2.51s/it]epoch 4 loss 1.23358:  21%|██▏       | 6/28 [00:14<00:55,  2.51s/it]epoch 4 loss 1.23358:  25%|██▌       | 7/28 [00:14<00:38,  1.82s/it]epoch 4 loss 1.23332:  25%|██▌       | 7/28 [00:14<00:38,  1.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.669[0m
[32m  eval_f1 = 0.3641[0m
[32m  eval_mcc = 0.6503[0m
[32m  eval_precision = 0.4574[0m
[32m  eval_recall = 0.3363[0m

epoch 4 loss 1.23332:  29%|██▊       | 8/28 [00:18<00:48,  2.45s/it]epoch 4 loss 1.23402:  29%|██▊       | 8/28 [00:18<00:48,  2.45s/it]epoch 4 loss 1.23402:  32%|███▏      | 9/28 [00:18<00:34,  1.81s/it]epoch 4 loss 1.23263:  32%|███▏      | 9/28 [00:18<00:34,  1.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6696[0m
[32m  eval_f1 = 0.3666[0m
[32m  eval_mcc = 0.6508[0m
[32m  eval_precision = 0.4659[0m
[32m  eval_recall = 0.3378[0m

epoch 4 loss 1.23263:  36%|███▌      | 10/28 [00:22<00:43,  2.42s/it]epoch 4 loss 1.23534:  36%|███▌      | 10/28 [00:22<00:43,  2.42s/it]epoch 4 loss 1.23534:  39%|███▉      | 11/28 [00:22<00:30,  1.81s/it]epoch 4 loss 1.24155:  39%|███▉      | 11/28 [00:23<00:30,  1.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6706[0m
[32m  eval_f1 = 0.3717[0m
[32m  eval_mcc = 0.6518[0m
[32m  eval_precision = 0.4751[0m
[32m  eval_recall = 0.3413[0m
[32m  ********************[0m
[32m  Best f1:0.3717[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24155:  43%|████▎     | 12/28 [00:27<00:44,  2.80s/it]epoch 4 loss 1.24547:  43%|████▎     | 12/28 [00:28<00:44,  2.80s/it]epoch 4 loss 1.24547:  46%|████▋     | 13/28 [00:28<00:31,  2.07s/it]epoch 4 loss 1.23862:  46%|████▋     | 13/28 [00:28<00:31,  2.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6711[0m
[32m  eval_f1 = 0.372[0m
[32m  eval_mcc = 0.6524[0m
[32m  eval_precision = 0.4752[0m
[32m  eval_recall = 0.3416[0m
[32m  ********************[0m
[32m  Best f1:0.372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6524[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23862:  50%|█████     | 14/28 [00:34<00:47,  3.41s/it]epoch 4 loss 1.24124:  50%|█████     | 14/28 [00:35<00:47,  3.41s/it]epoch 4 loss 1.24124:  54%|█████▎    | 15/28 [00:35<00:32,  2.51s/it]epoch 4 loss 1.25037:  54%|█████▎    | 15/28 [00:35<00:32,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6727[0m
[32m  eval_f1 = 0.3729[0m
[32m  eval_mcc = 0.6541[0m
[32m  eval_precision = 0.477[0m
[32m  eval_recall = 0.3424[0m
[32m  ********************[0m
[32m  Best f1:0.3729[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6541[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25037:  57%|█████▋    | 16/28 [00:41<00:42,  3.55s/it]epoch 4 loss 1.24759:  57%|█████▋    | 16/28 [00:41<00:42,  3.55s/it]epoch 4 loss 1.24759:  61%|██████    | 17/28 [00:41<00:28,  2.61s/it]epoch 4 loss 1.24595:  61%|██████    | 17/28 [00:41<00:28,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.673[0m
[32m  eval_f1 = 0.3742[0m
[32m  eval_mcc = 0.6544[0m
[32m  eval_precision = 0.4777[0m
[32m  eval_recall = 0.3439[0m
[32m  ********************[0m
[32m  Best f1:0.3742[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24595:  64%|██████▍   | 18/28 [00:47<00:35,  3.57s/it]epoch 4 loss 1.24334:  64%|██████▍   | 18/28 [00:47<00:35,  3.57s/it]epoch 4 loss 1.24334:  68%|██████▊   | 19/28 [00:47<00:23,  2.63s/it]epoch 4 loss 1.23507:  68%|██████▊   | 19/28 [00:48<00:23,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.52it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.55it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.56it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.56it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.56it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.56it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.56it/s][A
 80%|████████  | 8/10 [00:03<00:00,  2.56it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.56it/s][A100%|██████████| 10/10 [00:03<00:00,  2.78it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3761[0m
[32m  eval_mcc = 0.6546[0m
[32m  eval_precision = 0.4781[0m
[32m  eval_recall = 0.346[0m
[32m  ********************[0m
[32m  Best f1:0.3761[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6546[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23507:  71%|███████▏  | 20/28 [00:53<00:29,  3.66s/it]epoch 4 loss 1.22976:  71%|███████▏  | 20/28 [00:54<00:29,  3.66s/it]epoch 4 loss 1.22976:  75%|███████▌  | 21/28 [00:54<00:18,  2.69s/it]epoch 4 loss 1.22698:  75%|███████▌  | 21/28 [00:54<00:18,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3763[0m
[32m  eval_mcc = 0.6546[0m
[32m  eval_precision = 0.4773[0m
[32m  eval_recall = 0.3461[0m
[32m  ********************[0m
[32m  Best f1:0.3763[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6546[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22698:  79%|███████▊  | 22/28 [01:00<00:22,  3.82s/it]epoch 4 loss 1.22031:  79%|███████▊  | 22/28 [01:01<00:22,  3.82s/it]epoch 4 loss 1.22031:  82%|████████▏ | 23/28 [01:01<00:14,  2.80s/it]epoch 4 loss 1.2189:  82%|████████▏ | 23/28 [01:01<00:14,  2.80s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6732[0m
[32m  eval_f1 = 0.377[0m
[32m  eval_mcc = 0.6547[0m
[32m  eval_precision = 0.4801[0m
[32m  eval_recall = 0.3464[0m
[32m  ********************[0m
[32m  Best f1:0.377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2189:  86%|████████▌ | 24/28 [01:07<00:15,  3.91s/it]epoch 4 loss 1.21192:  86%|████████▌ | 24/28 [01:07<00:15,  3.91s/it]epoch 4 loss 1.21192:  89%|████████▉ | 25/28 [01:07<00:08,  2.86s/it]epoch 4 loss 1.21271:  89%|████████▉ | 25/28 [01:08<00:08,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.3772[0m
[32m  eval_mcc = 0.6549[0m
[32m  eval_precision = 0.4807[0m
[32m  eval_recall = 0.3465[0m
[32m  ********************[0m
[32m  Best f1:0.3772[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21271:  93%|█████████▎| 26/28 [01:14<00:07,  3.94s/it]epoch 4 loss 1.20985:  93%|█████████▎| 26/28 [01:14<00:07,  3.94s/it]epoch 4 loss 1.20985:  96%|█████████▋| 27/28 [01:14<00:02,  2.89s/it]epoch 4 loss 1.2053:  96%|█████████▋| 27/28 [01:15<00:02,  2.89s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6732[0m
[32m  eval_f1 = 0.3771[0m
[32m  eval_mcc = 0.6548[0m
[32m  eval_precision = 0.4806[0m
[32m  eval_recall = 0.3464[0m

epoch 4 loss 1.2053: 100%|██████████| 28/28 [01:18<00:00,  3.10s/it]epoch 4 loss 1.2053: 100%|██████████| 28/28 [01:18<00:00,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.3772[0m
[32m  eval_mcc = 0.6549[0m
[32m  eval_precision = 0.4807[0m
[32m  eval_recall = 0.3465[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.71it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6502[0m
[32m  eval_f1 = 0.2956[0m
[32m  eval_mcc = 0.6316[0m
[32m  eval_precision = 0.3874[0m
[32m  eval_recall = 0.2764[0m

