[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=6, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6', posratio=0.5, seed=892, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.66719:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.66719:   4%|▎         | 1/28 [00:00<00:21,  1.26it/s]epoch 0 loss 5.65667:   4%|▎         | 1/28 [00:01<00:21,  1.26it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0014[0m
[32m  eval_f1 = 0.0005[0m
[32m  eval_mcc = 0.0004[0m
[32m  eval_precision = 0.0083[0m
[32m  eval_recall = 0.0017[0m
[32m  ********************[0m
[32m  Best f1:0.0005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.65667:   7%|▋         | 2/28 [00:06<01:31,  3.52s/it]epoch 0 loss 5.64738:   7%|▋         | 2/28 [00:06<01:31,  3.52s/it]epoch 0 loss 5.64738:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 0 loss 5.63073:  11%|█         | 3/28 [00:07<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.004[0m
[32m  eval_f1 = 0.001[0m
[32m  eval_mcc = 0.002[0m
[32m  eval_precision = 0.0084[0m
[32m  eval_recall = 0.0021[0m
[32m  ********************[0m
[32m  Best f1:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.63073:  14%|█▍        | 4/28 [00:12<01:24,  3.52s/it]epoch 0 loss 5.60119:  14%|█▍        | 4/28 [00:12<01:24,  3.52s/it]epoch 0 loss 5.60119:  18%|█▊        | 5/28 [00:12<00:55,  2.41s/it]epoch 0 loss 5.5692:  18%|█▊        | 5/28 [00:13<00:55,  2.41s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0143[0m
[32m  eval_f1 = 0.0025[0m
[32m  eval_mcc = 0.0075[0m
[32m  eval_precision = 0.0092[0m
[32m  eval_recall = 0.0037[0m
[32m  ********************[0m
[32m  Best f1:0.0025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.5692:  21%|██▏       | 6/28 [00:18<01:17,  3.52s/it]epoch 0 loss 5.53082:  21%|██▏       | 6/28 [00:18<01:17,  3.52s/it]epoch 0 loss 5.53082:  25%|██▌       | 7/28 [00:18<00:52,  2.51s/it]epoch 0 loss 5.48651:  25%|██▌       | 7/28 [00:19<00:52,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0416[0m
[32m  eval_f1 = 0.0074[0m
[32m  eval_mcc = 0.0206[0m
[32m  eval_precision = 0.0151[0m
[32m  eval_recall = 0.0096[0m
[32m  ********************[0m
[32m  Best f1:0.0074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.48651:  29%|██▊       | 8/28 [00:24<01:10,  3.51s/it]epoch 0 loss 5.43457:  29%|██▊       | 8/28 [00:24<01:10,  3.51s/it]epoch 0 loss 5.43457:  32%|███▏      | 9/28 [00:24<00:48,  2.55s/it]epoch 0 loss 5.37585:  32%|███▏      | 9/28 [00:25<00:48,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0799[0m
[32m  eval_f1 = 0.018[0m
[32m  eval_mcc = 0.0461[0m
[32m  eval_precision = 0.0231[0m
[32m  eval_recall = 0.0215[0m
[32m  ********************[0m
[32m  Best f1:0.018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.37585:  36%|███▌      | 10/28 [00:31<01:07,  3.77s/it]epoch 0 loss 5.31079:  36%|███▌      | 10/28 [00:31<01:07,  3.77s/it]epoch 0 loss 5.31079:  39%|███▉      | 11/28 [00:31<00:46,  2.75s/it]epoch 0 loss 5.24441:  39%|███▉      | 11/28 [00:32<00:46,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1119[0m
[32m  eval_f1 = 0.0246[0m
[32m  eval_mcc = 0.0754[0m
[32m  eval_precision = 0.0307[0m
[32m  eval_recall = 0.03[0m
[32m  ********************[0m
[32m  Best f1:0.0246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.24441:  43%|████▎     | 12/28 [00:39<01:07,  4.24s/it]epoch 0 loss 5.17353:  43%|████▎     | 12/28 [00:39<01:07,  4.24s/it]epoch 0 loss 5.17353:  46%|████▋     | 13/28 [00:39<00:46,  3.08s/it]epoch 0 loss 5.0968:  46%|████▋     | 13/28 [00:40<00:46,  3.08s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1376[0m
[32m  eval_f1 = 0.0297[0m
[32m  eval_mcc = 0.0987[0m
[32m  eval_precision = 0.0386[0m
[32m  eval_recall = 0.035[0m
[32m  ********************[0m
[32m  Best f1:0.0297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0987[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.0968:  50%|█████     | 14/28 [00:45<00:54,  3.86s/it]epoch 0 loss 5.02012:  50%|█████     | 14/28 [00:46<00:54,  3.86s/it]epoch 0 loss 5.02012:  54%|█████▎    | 15/28 [00:46<00:36,  2.83s/it]epoch 0 loss 4.94021:  54%|█████▎    | 15/28 [00:46<00:36,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1748[0m
[32m  eval_f1 = 0.037[0m
[32m  eval_mcc = 0.1332[0m
[32m  eval_precision = 0.0565[0m
[32m  eval_recall = 0.0402[0m
[32m  ********************[0m
[32m  Best f1:0.037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94021:  57%|█████▋    | 16/28 [00:52<00:47,  3.94s/it]epoch 0 loss 4.85995:  57%|█████▋    | 16/28 [00:52<00:47,  3.94s/it]epoch 0 loss 4.85995:  61%|██████    | 17/28 [00:52<00:31,  2.88s/it]epoch 0 loss 4.78217:  61%|██████    | 17/28 [00:53<00:31,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2235[0m
[32m  eval_f1 = 0.044[0m
[32m  eval_mcc = 0.1842[0m
[32m  eval_precision = 0.0651[0m
[32m  eval_recall = 0.0469[0m
[32m  ********************[0m
[32m  Best f1:0.044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1842[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.78217:  64%|██████▍   | 18/28 [01:01<00:44,  4.47s/it]epoch 0 loss 4.71058:  64%|██████▍   | 18/28 [01:01<00:44,  4.47s/it]epoch 0 loss 4.71058:  68%|██████▊   | 19/28 [01:01<00:29,  3.26s/it]epoch 0 loss 4.63473:  68%|██████▊   | 19/28 [01:01<00:29,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2784[0m
[32m  eval_f1 = 0.0494[0m
[32m  eval_mcc = 0.24[0m
[32m  eval_precision = 0.0763[0m
[32m  eval_recall = 0.051[0m
[32m  ********************[0m
[32m  Best f1:0.0494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.24[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.63473:  71%|███████▏  | 20/28 [01:08<00:33,  4.23s/it]epoch 0 loss 4.56304:  71%|███████▏  | 20/28 [01:08<00:33,  4.23s/it]epoch 0 loss 4.56304:  75%|███████▌  | 21/28 [01:08<00:21,  3.09s/it]epoch 0 loss 4.48887:  75%|███████▌  | 21/28 [01:08<00:21,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.344[0m
[32m  eval_f1 = 0.0568[0m
[32m  eval_mcc = 0.2992[0m
[32m  eval_precision = 0.0846[0m
[32m  eval_recall = 0.0581[0m
[32m  ********************[0m
[32m  Best f1:0.0568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2992[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.48887:  79%|███████▊  | 22/28 [01:15<00:24,  4.14s/it]epoch 0 loss 4.41838:  79%|███████▊  | 22/28 [01:15<00:24,  4.14s/it]epoch 0 loss 4.41838:  82%|████████▏ | 23/28 [01:15<00:15,  3.02s/it]epoch 0 loss 4.35564:  82%|████████▏ | 23/28 [01:15<00:15,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3863[0m
[32m  eval_f1 = 0.072[0m
[32m  eval_mcc = 0.3429[0m
[32m  eval_precision = 0.1098[0m
[32m  eval_recall = 0.0721[0m
[32m  ********************[0m
[32m  Best f1:0.072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3429[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.35564:  86%|████████▌ | 24/28 [01:21<00:15,  3.81s/it]epoch 0 loss 4.30243:  86%|████████▌ | 24/28 [01:21<00:15,  3.81s/it]epoch 0 loss 4.30243:  89%|████████▉ | 25/28 [01:21<00:08,  2.79s/it]epoch 0 loss 4.24131:  89%|████████▉ | 25/28 [01:21<00:08,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3995[0m
[32m  eval_f1 = 0.0874[0m
[32m  eval_mcc = 0.3644[0m
[32m  eval_precision = 0.1408[0m
[32m  eval_recall = 0.0826[0m
[32m  ********************[0m
[32m  Best f1:0.0874[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.24131:  93%|█████████▎| 26/28 [01:27<00:07,  3.65s/it]epoch 0 loss 4.18118:  93%|█████████▎| 26/28 [01:27<00:07,  3.65s/it]epoch 0 loss 4.18118:  96%|█████████▋| 27/28 [01:27<00:02,  2.68s/it]epoch 0 loss 4.12322:  96%|█████████▋| 27/28 [01:27<00:02,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4183[0m
[32m  eval_f1 = 0.1039[0m
[32m  eval_mcc = 0.39[0m
[32m  eval_precision = 0.1594[0m
[32m  eval_recall = 0.0957[0m
[32m  ********************[0m
[32m  Best f1:0.1039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.39[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.12322: 100%|██████████| 28/28 [01:33<00:00,  3.76s/it]epoch 0 loss 4.12322: 100%|██████████| 28/28 [01:33<00:00,  3.35s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.36024:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.36024:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.4017:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4651[0m
[32m  eval_f1 = 0.1271[0m
[32m  eval_mcc = 0.4398[0m
[32m  eval_precision = 0.1913[0m
[32m  eval_recall = 0.1194[0m
[32m  ********************[0m
[32m  Best f1:0.1271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.4017:   7%|▋         | 2/28 [00:09<02:20,  5.40s/it]epoch 1 loss 2.37956:   7%|▋         | 2/28 [00:09<02:20,  5.40s/it]epoch 1 loss 2.37956:  11%|█         | 3/28 [00:09<01:18,  3.13s/it]epoch 1 loss 2.35314:  11%|█         | 3/28 [00:10<01:18,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5072[0m
[32m  eval_f1 = 0.1442[0m
[32m  eval_mcc = 0.4794[0m
[32m  eval_precision = 0.2027[0m
[32m  eval_recall = 0.1383[0m
[32m  ********************[0m
[32m  Best f1:0.1442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.35314:  14%|█▍        | 4/28 [00:16<01:46,  4.45s/it]epoch 1 loss 2.28993:  14%|█▍        | 4/28 [00:16<01:46,  4.45s/it]epoch 1 loss 2.28993:  18%|█▊        | 5/28 [00:16<01:08,  3.00s/it]epoch 1 loss 2.27486:  18%|█▊        | 5/28 [00:17<01:08,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5503[0m
[32m  eval_f1 = 0.1683[0m
[32m  eval_mcc = 0.5238[0m
[32m  eval_precision = 0.2167[0m
[32m  eval_recall = 0.1616[0m
[32m  ********************[0m
[32m  Best f1:0.1683[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27486:  21%|██▏       | 6/28 [00:23<01:31,  4.17s/it]epoch 1 loss 2.25373:  21%|██▏       | 6/28 [00:23<01:31,  4.17s/it]epoch 1 loss 2.25373:  25%|██▌       | 7/28 [00:23<01:01,  2.94s/it]epoch 1 loss 2.2386:  25%|██▌       | 7/28 [00:23<01:01,  2.94s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5665[0m
[32m  eval_f1 = 0.1823[0m
[32m  eval_mcc = 0.5432[0m
[32m  eval_precision = 0.2231[0m
[32m  eval_recall = 0.175[0m
[32m  ********************[0m
[32m  Best f1:0.1823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.2386:  29%|██▊       | 8/28 [00:29<01:16,  3.81s/it]epoch 1 loss 2.20946:  29%|██▊       | 8/28 [00:29<01:16,  3.81s/it]epoch 1 loss 2.20946:  32%|███▏      | 9/28 [00:29<00:52,  2.75s/it]epoch 1 loss 2.20513:  32%|███▏      | 9/28 [00:29<00:52,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5766[0m
[32m  eval_f1 = 0.187[0m
[32m  eval_mcc = 0.5537[0m
[32m  eval_precision = 0.2515[0m
[32m  eval_recall = 0.1784[0m
[32m  ********************[0m
[32m  Best f1:0.187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20513:  36%|███▌      | 10/28 [00:35<01:05,  3.65s/it]epoch 1 loss 2.18914:  36%|███▌      | 10/28 [00:35<01:05,  3.65s/it]epoch 1 loss 2.18914:  39%|███▉      | 11/28 [00:35<00:45,  2.66s/it]epoch 1 loss 2.15633:  39%|███▉      | 11/28 [00:36<00:45,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5827[0m
[32m  eval_f1 = 0.1939[0m
[32m  eval_mcc = 0.5589[0m
[32m  eval_precision = 0.2749[0m
[32m  eval_recall = 0.1824[0m
[32m  ********************[0m
[32m  Best f1:0.1939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15633:  43%|████▎     | 12/28 [00:42<01:02,  3.88s/it]epoch 1 loss 2.11584:  43%|████▎     | 12/28 [00:42<01:02,  3.88s/it]epoch 1 loss 2.11584:  46%|████▋     | 13/28 [00:42<00:42,  2.83s/it]epoch 1 loss 2.0858:  46%|████▋     | 13/28 [00:43<00:42,  2.83s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5894[0m
[32m  eval_f1 = 0.203[0m
[32m  eval_mcc = 0.5658[0m
[32m  eval_precision = 0.2902[0m
[32m  eval_recall = 0.1882[0m
[32m  ********************[0m
[32m  Best f1:0.203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0858:  50%|█████     | 14/28 [00:49<00:55,  3.94s/it]epoch 1 loss 2.06537:  50%|█████     | 14/28 [00:49<00:55,  3.94s/it]epoch 1 loss 2.06537:  54%|█████▎    | 15/28 [00:49<00:37,  2.88s/it]epoch 1 loss 2.03976:  54%|█████▎    | 15/28 [00:50<00:37,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5916[0m
[32m  eval_f1 = 0.2155[0m
[32m  eval_mcc = 0.5683[0m
[32m  eval_precision = 0.2912[0m
[32m  eval_recall = 0.1998[0m
[32m  ********************[0m
[32m  Best f1:0.2155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5683[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03976:  57%|█████▋    | 16/28 [00:55<00:44,  3.71s/it]epoch 1 loss 2.02307:  57%|█████▋    | 16/28 [00:55<00:44,  3.71s/it]epoch 1 loss 2.02307:  61%|██████    | 17/28 [00:55<00:29,  2.72s/it]epoch 1 loss 2.00886:  61%|██████    | 17/28 [00:56<00:29,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5968[0m
[32m  eval_f1 = 0.2291[0m
[32m  eval_mcc = 0.574[0m
[32m  eval_precision = 0.2957[0m
[32m  eval_recall = 0.2144[0m
[32m  ********************[0m
[32m  Best f1:0.2291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00886:  64%|██████▍   | 18/28 [01:01<00:36,  3.60s/it]epoch 1 loss 1.98789:  64%|██████▍   | 18/28 [01:01<00:36,  3.60s/it]epoch 1 loss 1.98789:  68%|██████▊   | 19/28 [01:01<00:23,  2.65s/it]epoch 1 loss 1.96904:  68%|██████▊   | 19/28 [01:02<00:23,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6036[0m
[32m  eval_f1 = 0.2338[0m
[32m  eval_mcc = 0.5824[0m
[32m  eval_precision = 0.3017[0m
[32m  eval_recall = 0.2194[0m
[32m  ********************[0m
[32m  Best f1:0.2338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96904:  71%|███████▏  | 20/28 [01:07<00:28,  3.54s/it]epoch 1 loss 1.95568:  71%|███████▏  | 20/28 [01:07<00:28,  3.54s/it]epoch 1 loss 1.95568:  75%|███████▌  | 21/28 [01:07<00:18,  2.60s/it]epoch 1 loss 1.94421:  75%|███████▌  | 21/28 [01:08<00:18,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6064[0m
[32m  eval_f1 = 0.2385[0m
[32m  eval_mcc = 0.5855[0m
[32m  eval_precision = 0.3061[0m
[32m  eval_recall = 0.2248[0m
[32m  ********************[0m
[32m  Best f1:0.2385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5855[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94421:  79%|███████▊  | 22/28 [01:13<00:21,  3.53s/it]epoch 1 loss 1.93419:  79%|███████▊  | 22/28 [01:13<00:21,  3.53s/it]epoch 1 loss 1.93419:  82%|████████▏ | 23/28 [01:13<00:12,  2.60s/it]epoch 1 loss 1.91489:  82%|████████▏ | 23/28 [01:14<00:12,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6123[0m
[32m  eval_f1 = 0.2424[0m
[32m  eval_mcc = 0.5916[0m
[32m  eval_precision = 0.32[0m
[32m  eval_recall = 0.2294[0m
[32m  ********************[0m
[32m  Best f1:0.2424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91489:  86%|████████▌ | 24/28 [01:19<00:13,  3.49s/it]epoch 1 loss 1.90059:  86%|████████▌ | 24/28 [01:19<00:13,  3.49s/it]epoch 1 loss 1.90059:  89%|████████▉ | 25/28 [01:19<00:07,  2.57s/it]epoch 1 loss 1.89076:  89%|████████▉ | 25/28 [01:20<00:07,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6186[0m
[32m  eval_f1 = 0.2512[0m
[32m  eval_mcc = 0.5977[0m
[32m  eval_precision = 0.3354[0m
[32m  eval_recall = 0.2366[0m
[32m  ********************[0m
[32m  Best f1:0.2512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5977[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89076:  93%|█████████▎| 26/28 [01:25<00:07,  3.50s/it]epoch 1 loss 1.87825:  93%|█████████▎| 26/28 [01:26<00:07,  3.50s/it]epoch 1 loss 1.87825:  96%|█████████▋| 27/28 [01:26<00:02,  2.58s/it]epoch 1 loss 1.8733:  96%|█████████▋| 27/28 [01:26<00:02,  2.58s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6198[0m
[32m  eval_f1 = 0.2552[0m
[32m  eval_mcc = 0.5984[0m
[32m  eval_precision = 0.3348[0m
[32m  eval_recall = 0.2415[0m
[32m  ********************[0m
[32m  Best f1:0.2552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8733: 100%|██████████| 28/28 [01:32<00:00,  3.65s/it]epoch 1 loss 1.8733: 100%|██████████| 28/28 [01:32<00:00,  3.29s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.58374:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.58374:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s]epoch 2 loss 1.54358:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6203[0m
[32m  eval_f1 = 0.2583[0m
[32m  eval_mcc = 0.5984[0m
[32m  eval_precision = 0.3458[0m
[32m  eval_recall = 0.2448[0m
[32m  ********************[0m
[32m  Best f1:0.2583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.54358:   7%|▋         | 2/28 [00:05<01:19,  3.06s/it]epoch 2 loss 1.54269:   7%|▋         | 2/28 [00:05<01:19,  3.06s/it]epoch 2 loss 1.54269:  11%|█         | 3/28 [00:05<00:46,  1.84s/it]epoch 2 loss 1.51397:  11%|█         | 3/28 [00:06<00:46,  1.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.623[0m
[32m  eval_f1 = 0.261[0m
[32m  eval_mcc = 0.6013[0m
[32m  eval_precision = 0.3479[0m
[32m  eval_recall = 0.2468[0m
[32m  ********************[0m
[32m  Best f1:0.261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51397:  14%|█▍        | 4/28 [00:11<01:20,  3.35s/it]epoch 2 loss 1.53608:  14%|█▍        | 4/28 [00:11<01:20,  3.35s/it]epoch 2 loss 1.53608:  18%|█▊        | 5/28 [00:11<00:52,  2.30s/it]epoch 2 loss 1.55739:  18%|█▊        | 5/28 [00:12<00:52,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6265[0m
[32m  eval_f1 = 0.2675[0m
[32m  eval_mcc = 0.6048[0m
[32m  eval_precision = 0.3596[0m
[32m  eval_recall = 0.2511[0m
[32m  ********************[0m
[32m  Best f1:0.2675[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55739:  21%|██▏       | 6/28 [00:21<01:45,  4.80s/it]epoch 2 loss 1.5545:  21%|██▏       | 6/28 [00:21<01:45,  4.80s/it] epoch 2 loss 1.5545:  25%|██▌       | 7/28 [00:21<01:10,  3.37s/it]epoch 2 loss 1.51976:  25%|██▌       | 7/28 [00:22<01:10,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.63[0m
[32m  eval_f1 = 0.2726[0m
[32m  eval_mcc = 0.6085[0m
[32m  eval_precision = 0.3603[0m
[32m  eval_recall = 0.2548[0m
[32m  ********************[0m
[32m  Best f1:0.2726[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51976:  29%|██▊       | 8/28 [00:28<01:24,  4.24s/it]epoch 2 loss 1.49486:  29%|██▊       | 8/28 [00:28<01:24,  4.24s/it]epoch 2 loss 1.49486:  32%|███▏      | 9/28 [00:28<00:57,  3.05s/it]epoch 2 loss 1.49082:  32%|███▏      | 9/28 [00:28<00:57,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6315[0m
[32m  eval_f1 = 0.2756[0m
[32m  eval_mcc = 0.6103[0m
[32m  eval_precision = 0.362[0m
[32m  eval_recall = 0.2565[0m
[32m  ********************[0m
[32m  Best f1:0.2756[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49082:  36%|███▌      | 10/28 [00:34<01:14,  4.12s/it]epoch 2 loss 1.48507:  36%|███▌      | 10/28 [00:35<01:14,  4.12s/it]epoch 2 loss 1.48507:  39%|███▉      | 11/28 [00:35<00:50,  2.99s/it]epoch 2 loss 1.48079:  39%|███▉      | 11/28 [00:35<00:50,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6333[0m
[32m  eval_f1 = 0.286[0m
[32m  eval_mcc = 0.6128[0m
[32m  eval_precision = 0.3764[0m
[32m  eval_recall = 0.2638[0m
[32m  ********************[0m
[32m  Best f1:0.286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48079:  43%|████▎     | 12/28 [00:41<01:01,  3.84s/it]epoch 2 loss 1.48176:  43%|████▎     | 12/28 [00:41<01:01,  3.84s/it]epoch 2 loss 1.48176:  46%|████▋     | 13/28 [00:41<00:42,  2.80s/it]epoch 2 loss 1.47477:  46%|████▋     | 13/28 [00:41<00:42,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.634[0m
[32m  eval_f1 = 0.2895[0m
[32m  eval_mcc = 0.6145[0m
[32m  eval_precision = 0.3846[0m
[32m  eval_recall = 0.2668[0m
[32m  ********************[0m
[32m  Best f1:0.2895[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47477:  50%|█████     | 14/28 [00:47<00:51,  3.67s/it]epoch 2 loss 1.48494:  50%|█████     | 14/28 [00:47<00:51,  3.67s/it]epoch 2 loss 1.48494:  54%|█████▎    | 15/28 [00:47<00:34,  2.69s/it]epoch 2 loss 1.47989:  54%|█████▎    | 15/28 [00:48<00:34,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6371[0m
[32m  eval_f1 = 0.2929[0m
[32m  eval_mcc = 0.6178[0m
[32m  eval_precision = 0.3831[0m
[32m  eval_recall = 0.2704[0m
[32m  ********************[0m
[32m  Best f1:0.2929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47989:  57%|█████▋    | 16/28 [00:53<00:42,  3.56s/it]epoch 2 loss 1.47319:  57%|█████▋    | 16/28 [00:53<00:42,  3.56s/it]epoch 2 loss 1.47319:  61%|██████    | 17/28 [00:53<00:28,  2.61s/it]epoch 2 loss 1.4708:  61%|██████    | 17/28 [00:54<00:28,  2.61s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6392[0m
[32m  eval_f1 = 0.2946[0m
[32m  eval_mcc = 0.6193[0m
[32m  eval_precision = 0.3833[0m
[32m  eval_recall = 0.2722[0m
[32m  ********************[0m
[32m  Best f1:0.2946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4708:  64%|██████▍   | 18/28 [00:59<00:35,  3.52s/it]epoch 2 loss 1.46945:  64%|██████▍   | 18/28 [00:59<00:35,  3.52s/it]epoch 2 loss 1.46945:  68%|██████▊   | 19/28 [00:59<00:23,  2.59s/it]epoch 2 loss 1.46734:  68%|██████▊   | 19/28 [01:00<00:23,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6395[0m
[32m  eval_f1 = 0.2949[0m
[32m  eval_mcc = 0.6189[0m
[32m  eval_precision = 0.3832[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best f1:0.2949[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.46734:  71%|███████▏  | 20/28 [01:04<00:25,  3.24s/it]epoch 2 loss 1.46471:  71%|███████▏  | 20/28 [01:04<00:25,  3.24s/it]epoch 2 loss 1.46471:  75%|███████▌  | 21/28 [01:04<00:16,  2.39s/it]epoch 2 loss 1.46171:  75%|███████▌  | 21/28 [01:05<00:16,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6408[0m
[32m  eval_f1 = 0.2965[0m
[32m  eval_mcc = 0.62[0m
[32m  eval_precision = 0.3929[0m
[32m  eval_recall = 0.276[0m
[32m  ********************[0m
[32m  Best f1:0.2965[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.62[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46171:  79%|███████▊  | 22/28 [01:11<00:21,  3.61s/it]epoch 2 loss 1.45505:  79%|███████▊  | 22/28 [01:11<00:21,  3.61s/it]epoch 2 loss 1.45505:  82%|████████▏ | 23/28 [01:11<00:13,  2.66s/it]epoch 2 loss 1.45134:  82%|████████▏ | 23/28 [01:12<00:13,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.2981[0m
[32m  eval_mcc = 0.6222[0m
[32m  eval_precision = 0.3933[0m
[32m  eval_recall = 0.2774[0m
[32m  ********************[0m
[32m  Best f1:0.2981[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45134:  86%|████████▌ | 24/28 [01:19<00:16,  4.23s/it]epoch 2 loss 1.44526:  86%|████████▌ | 24/28 [01:20<00:16,  4.23s/it]epoch 2 loss 1.44526:  89%|████████▉ | 25/28 [01:20<00:09,  3.09s/it]epoch 2 loss 1.44362:  89%|████████▉ | 25/28 [01:20<00:09,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6451[0m
[32m  eval_f1 = 0.3004[0m
[32m  eval_mcc = 0.6253[0m
[32m  eval_precision = 0.3932[0m
[32m  eval_recall = 0.2791[0m
[32m  ********************[0m
[32m  Best f1:0.3004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44362:  93%|█████████▎| 26/28 [01:29<00:09,  4.92s/it]epoch 2 loss 1.44571:  93%|█████████▎| 26/28 [01:29<00:09,  4.92s/it]epoch 2 loss 1.44571:  96%|█████████▋| 27/28 [01:29<00:03,  3.57s/it]epoch 2 loss 1.43956:  96%|█████████▋| 27/28 [01:29<00:03,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3075[0m
[32m  eval_mcc = 0.6282[0m
[32m  eval_precision = 0.4035[0m
[32m  eval_recall = 0.2831[0m
[32m  ********************[0m
[32m  Best f1:0.3075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43956: 100%|██████████| 28/28 [01:35<00:00,  4.31s/it]epoch 2 loss 1.43956: 100%|██████████| 28/28 [01:35<00:00,  3.42s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.2432:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.2432:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 3 loss 1.24955:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6492[0m
[32m  eval_f1 = 0.3108[0m
[32m  eval_mcc = 0.6311[0m
[32m  eval_precision = 0.408[0m
[32m  eval_recall = 0.2855[0m
[32m  ********************[0m
[32m  Best f1:0.3108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6311[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24955:   7%|▋         | 2/28 [00:06<01:30,  3.47s/it]epoch 3 loss 1.29095:   7%|▋         | 2/28 [00:06<01:30,  3.47s/it]epoch 3 loss 1.29095:  11%|█         | 3/28 [00:06<00:52,  2.08s/it]epoch 3 loss 1.32263:  11%|█         | 3/28 [00:06<00:52,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6505[0m
[32m  eval_f1 = 0.3107[0m
[32m  eval_mcc = 0.6321[0m
[32m  eval_precision = 0.4051[0m
[32m  eval_recall = 0.2852[0m
[32m  ********************[0m
[32m  Best MCC:0.6321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32263:  14%|█▍        | 4/28 [00:11<01:14,  3.12s/it]epoch 3 loss 1.35051:  14%|█▍        | 4/28 [00:11<01:14,  3.12s/it]epoch 3 loss 1.35051:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it]epoch 3 loss 1.37577:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6508[0m
[32m  eval_f1 = 0.3102[0m
[32m  eval_mcc = 0.6315[0m
[32m  eval_precision = 0.4204[0m
[32m  eval_recall = 0.2851[0m

epoch 3 loss 1.37577:  21%|██▏       | 6/28 [00:15<00:59,  2.71s/it]epoch 3 loss 1.37119:  21%|██▏       | 6/28 [00:15<00:59,  2.71s/it]epoch 3 loss 1.37119:  25%|██▌       | 7/28 [00:15<00:41,  1.95s/it]epoch 3 loss 1.36792:  25%|██▌       | 7/28 [00:16<00:41,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6506[0m
[32m  eval_f1 = 0.3101[0m
[32m  eval_mcc = 0.6306[0m
[32m  eval_precision = 0.4066[0m
[32m  eval_recall = 0.2857[0m

epoch 3 loss 1.36792:  29%|██▊       | 8/28 [00:19<00:50,  2.54s/it]epoch 3 loss 1.36581:  29%|██▊       | 8/28 [00:19<00:50,  2.54s/it]epoch 3 loss 1.36581:  32%|███▏      | 9/28 [00:19<00:35,  1.87s/it]epoch 3 loss 1.37045:  32%|███▏      | 9/28 [00:20<00:35,  1.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6524[0m
[32m  eval_f1 = 0.3121[0m
[32m  eval_mcc = 0.6325[0m
[32m  eval_precision = 0.4064[0m
[32m  eval_recall = 0.2875[0m
[32m  ********************[0m
[32m  Best f1:0.3121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37045:  36%|███▌      | 10/28 [00:25<00:54,  3.02s/it]epoch 3 loss 1.3677:  36%|███▌      | 10/28 [00:26<00:54,  3.02s/it] epoch 3 loss 1.3677:  39%|███▉      | 11/28 [00:26<00:37,  2.23s/it]epoch 3 loss 1.36838:  39%|███▉      | 11/28 [00:26<00:37,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.313[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.4065[0m
[32m  eval_recall = 0.2883[0m
[32m  ********************[0m
[32m  Best f1:0.313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36838:  43%|████▎     | 12/28 [00:31<00:52,  3.26s/it]epoch 3 loss 1.35949:  43%|████▎     | 12/28 [00:32<00:52,  3.26s/it]epoch 3 loss 1.35949:  46%|████▋     | 13/28 [00:32<00:35,  2.40s/it]epoch 3 loss 1.34912:  46%|████▋     | 13/28 [00:32<00:35,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6534[0m
[32m  eval_f1 = 0.3137[0m
[32m  eval_mcc = 0.6336[0m
[32m  eval_precision = 0.4078[0m
[32m  eval_recall = 0.2891[0m
[32m  ********************[0m
[32m  Best f1:0.3137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34912:  50%|█████     | 14/28 [00:37<00:47,  3.37s/it]epoch 3 loss 1.3549:  50%|█████     | 14/28 [00:38<00:47,  3.37s/it] epoch 3 loss 1.3549:  54%|█████▎    | 15/28 [00:38<00:32,  2.48s/it]epoch 3 loss 1.35345:  54%|█████▎    | 15/28 [00:38<00:32,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6539[0m
[32m  eval_f1 = 0.3147[0m
[32m  eval_mcc = 0.6343[0m
[32m  eval_precision = 0.4183[0m
[32m  eval_recall = 0.2898[0m
[32m  ********************[0m
[32m  Best f1:0.3147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35345:  57%|█████▋    | 16/28 [00:44<00:44,  3.68s/it]epoch 3 loss 1.3549:  57%|█████▋    | 16/28 [00:44<00:44,  3.68s/it] epoch 3 loss 1.3549:  61%|██████    | 17/28 [00:44<00:29,  2.70s/it]epoch 3 loss 1.34656:  61%|██████    | 17/28 [00:45<00:29,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6541[0m
[32m  eval_f1 = 0.3153[0m
[32m  eval_mcc = 0.6345[0m
[32m  eval_precision = 0.4203[0m
[32m  eval_recall = 0.2905[0m
[32m  ********************[0m
[32m  Best f1:0.3153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34656:  64%|██████▍   | 18/28 [00:51<00:38,  3.86s/it]epoch 3 loss 1.34975:  64%|██████▍   | 18/28 [00:51<00:38,  3.86s/it]epoch 3 loss 1.34975:  68%|██████▊   | 19/28 [00:51<00:25,  2.83s/it]epoch 3 loss 1.35134:  68%|██████▊   | 19/28 [00:52<00:25,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6543[0m
[32m  eval_f1 = 0.3189[0m
[32m  eval_mcc = 0.6348[0m
[32m  eval_precision = 0.4309[0m
[32m  eval_recall = 0.2931[0m
[32m  ********************[0m
[32m  Best f1:0.3189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35134:  71%|███████▏  | 20/28 [00:58<00:31,  3.94s/it]epoch 3 loss 1.34651:  71%|███████▏  | 20/28 [00:58<00:31,  3.94s/it]epoch 3 loss 1.34651:  75%|███████▌  | 21/28 [00:58<00:20,  2.88s/it]epoch 3 loss 1.34901:  75%|███████▌  | 21/28 [00:59<00:20,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6545[0m
[32m  eval_f1 = 0.3231[0m
[32m  eval_mcc = 0.6351[0m
[32m  eval_precision = 0.4299[0m
[32m  eval_recall = 0.2953[0m
[32m  ********************[0m
[32m  Best f1:0.3231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34901:  79%|███████▊  | 22/28 [01:08<00:29,  4.83s/it]epoch 3 loss 1.3462:  79%|███████▊  | 22/28 [01:08<00:29,  4.83s/it] epoch 3 loss 1.3462:  82%|████████▏ | 23/28 [01:08<00:17,  3.51s/it]epoch 3 loss 1.34691:  82%|████████▏ | 23/28 [01:09<00:17,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3247[0m
[32m  eval_mcc = 0.6357[0m
[32m  eval_precision = 0.4274[0m
[32m  eval_recall = 0.2969[0m
[32m  ********************[0m
[32m  Best f1:0.3247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34691:  86%|████████▌ | 24/28 [01:15<00:17,  4.41s/it]epoch 3 loss 1.34358:  86%|████████▌ | 24/28 [01:15<00:17,  4.41s/it]epoch 3 loss 1.34358:  89%|████████▉ | 25/28 [01:15<00:09,  3.21s/it]epoch 3 loss 1.34042:  89%|████████▉ | 25/28 [01:16<00:09,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6561[0m
[32m  eval_f1 = 0.3267[0m
[32m  eval_mcc = 0.6367[0m
[32m  eval_precision = 0.4287[0m
[32m  eval_recall = 0.2984[0m
[32m  ********************[0m
[32m  Best f1:0.3267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34042:  93%|█████████▎| 26/28 [01:22<00:08,  4.22s/it]epoch 3 loss 1.34056:  93%|█████████▎| 26/28 [01:22<00:08,  4.22s/it]epoch 3 loss 1.34056:  96%|█████████▋| 27/28 [01:22<00:03,  3.09s/it]epoch 3 loss 1.33946:  96%|█████████▋| 27/28 [01:22<00:03,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6568[0m
[32m  eval_f1 = 0.3289[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4299[0m
[32m  eval_recall = 0.301[0m
[32m  ********************[0m
[32m  Best f1:0.3289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33946: 100%|██████████| 28/28 [01:28<00:00,  3.79s/it]epoch 3 loss 1.33946: 100%|██████████| 28/28 [01:28<00:00,  3.15s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.28006:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.28006:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.27325:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6573[0m
[32m  eval_f1 = 0.329[0m
[32m  eval_mcc = 0.638[0m
[32m  eval_precision = 0.426[0m
[32m  eval_recall = 0.3023[0m
[32m  ********************[0m
[32m  Best f1:0.329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27325:   7%|▋         | 2/28 [00:06<01:30,  3.50s/it]epoch 4 loss 1.25219:   7%|▋         | 2/28 [00:06<01:30,  3.50s/it]epoch 4 loss 1.25219:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 4 loss 1.27904:  11%|█         | 3/28 [00:06<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6571[0m
[32m  eval_f1 = 0.3345[0m
[32m  eval_mcc = 0.638[0m
[32m  eval_precision = 0.4343[0m
[32m  eval_recall = 0.3067[0m
[32m  ********************[0m
[32m  Best f1:0.3345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27904:  14%|█▍        | 4/28 [00:12<01:24,  3.50s/it]epoch 4 loss 1.24592:  14%|█▍        | 4/28 [00:12<01:24,  3.50s/it]epoch 4 loss 1.24592:  18%|█▊        | 5/28 [00:12<00:55,  2.40s/it]epoch 4 loss 1.2618:  18%|█▊        | 5/28 [00:12<00:55,  2.40s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6575[0m
[32m  eval_f1 = 0.3365[0m
[32m  eval_mcc = 0.6389[0m
[32m  eval_precision = 0.4359[0m
[32m  eval_recall = 0.3076[0m
[32m  ********************[0m
[32m  Best f1:0.3365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2618:  21%|██▏       | 6/28 [00:18<01:17,  3.50s/it]epoch 4 loss 1.27069:  21%|██▏       | 6/28 [00:18<01:17,  3.50s/it]epoch 4 loss 1.27069:  25%|██▌       | 7/28 [00:18<00:52,  2.50s/it]epoch 4 loss 1.27143:  25%|██▌       | 7/28 [00:19<00:52,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6581[0m
[32m  eval_f1 = 0.3363[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.4345[0m
[32m  eval_recall = 0.3079[0m
[32m  ********************[0m
[32m  Best MCC:0.6396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27143:  29%|██▊       | 8/28 [00:23<01:04,  3.20s/it]epoch 4 loss 1.26821:  29%|██▊       | 8/28 [00:23<01:04,  3.20s/it]epoch 4 loss 1.26821:  32%|███▏      | 9/28 [00:23<00:44,  2.33s/it]epoch 4 loss 1.26368:  32%|███▏      | 9/28 [00:24<00:44,  2.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6585[0m
[32m  eval_f1 = 0.3365[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.434[0m
[32m  eval_recall = 0.3082[0m
[32m  ********************[0m
[32m  Best f1:0.3365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.64[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26368:  36%|███▌      | 10/28 [00:30<01:04,  3.57s/it]epoch 4 loss 1.26619:  36%|███▌      | 10/28 [00:30<01:04,  3.57s/it]epoch 4 loss 1.26619:  39%|███▉      | 11/28 [00:30<00:44,  2.61s/it]epoch 4 loss 1.27849:  39%|███▉      | 11/28 [00:30<00:44,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6586[0m
[32m  eval_f1 = 0.3367[0m
[32m  eval_mcc = 0.6399[0m
[32m  eval_precision = 0.4333[0m
[32m  eval_recall = 0.3084[0m
[32m  ********************[0m
[32m  Best f1:0.3367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27849:  43%|████▎     | 12/28 [00:35<00:53,  3.35s/it]epoch 4 loss 1.28107:  43%|████▎     | 12/28 [00:36<00:53,  3.35s/it]epoch 4 loss 1.28107:  46%|████▋     | 13/28 [00:36<00:36,  2.46s/it]epoch 4 loss 1.28402:  46%|████▋     | 13/28 [00:36<00:36,  2.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6586[0m
[32m  eval_f1 = 0.3375[0m
[32m  eval_mcc = 0.6397[0m
[32m  eval_precision = 0.4325[0m
[32m  eval_recall = 0.3092[0m
[32m  ********************[0m
[32m  Best f1:0.3375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.28402:  50%|█████     | 14/28 [00:40<00:44,  3.15s/it]epoch 4 loss 1.28662:  50%|█████     | 14/28 [00:41<00:44,  3.15s/it]epoch 4 loss 1.28662:  54%|█████▎    | 15/28 [00:41<00:30,  2.32s/it]epoch 4 loss 1.28861:  54%|█████▎    | 15/28 [00:41<00:30,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6587[0m
[32m  eval_f1 = 0.3383[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.4325[0m
[32m  eval_recall = 0.3103[0m
[32m  ********************[0m
[32m  Best f1:0.3383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.28861:  57%|█████▋    | 16/28 [00:45<00:36,  3.05s/it]epoch 4 loss 1.29003:  57%|█████▋    | 16/28 [00:46<00:36,  3.05s/it]epoch 4 loss 1.29003:  61%|██████    | 17/28 [00:46<00:24,  2.26s/it]epoch 4 loss 1.30271:  61%|██████    | 17/28 [00:46<00:24,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.3385[0m
[32m  eval_mcc = 0.6395[0m
[32m  eval_precision = 0.4318[0m
[32m  eval_recall = 0.3107[0m
[32m  ********************[0m
[32m  Best f1:0.3385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.30271:  64%|██████▍   | 18/28 [00:51<00:30,  3.00s/it]epoch 4 loss 1.30083:  64%|██████▍   | 18/28 [00:51<00:30,  3.00s/it]epoch 4 loss 1.30083:  68%|██████▊   | 19/28 [00:51<00:20,  2.23s/it]epoch 4 loss 1.30074:  68%|██████▊   | 19/28 [00:51<00:20,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6591[0m
[32m  eval_f1 = 0.3403[0m
[32m  eval_mcc = 0.6397[0m
[32m  eval_precision = 0.432[0m
[32m  eval_recall = 0.3125[0m
[32m  ********************[0m
[32m  Best f1:0.3403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.30074:  71%|███████▏  | 20/28 [00:56<00:23,  2.98s/it]epoch 4 loss 1.29639:  71%|███████▏  | 20/28 [00:56<00:23,  2.98s/it]epoch 4 loss 1.29639:  75%|███████▌  | 21/28 [00:56<00:15,  2.21s/it]epoch 4 loss 1.30168:  75%|███████▌  | 21/28 [00:57<00:15,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6591[0m
[32m  eval_f1 = 0.3406[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.4314[0m
[32m  eval_recall = 0.313[0m
[32m  ********************[0m
[32m  Best f1:0.3406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.30168:  79%|███████▊  | 22/28 [01:01<00:18,  3.10s/it]epoch 4 loss 1.30052:  79%|███████▊  | 22/28 [01:02<00:18,  3.10s/it]epoch 4 loss 1.30052:  82%|████████▏ | 23/28 [01:02<00:11,  2.29s/it]epoch 4 loss 1.29974:  82%|████████▏ | 23/28 [01:02<00:11,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6595[0m
[32m  eval_f1 = 0.3407[0m
[32m  eval_mcc = 0.6399[0m
[32m  eval_precision = 0.4306[0m
[32m  eval_recall = 0.3132[0m
[32m  ********************[0m
[32m  Best f1:0.3407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.29974:  86%|████████▌ | 24/28 [01:10<00:16,  4.11s/it]epoch 4 loss 1.30089:  86%|████████▌ | 24/28 [01:11<00:16,  4.11s/it]epoch 4 loss 1.30089:  89%|████████▉ | 25/28 [01:11<00:09,  3.00s/it]epoch 4 loss 1.29908:  89%|████████▉ | 25/28 [01:11<00:09,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6596[0m
[32m  eval_f1 = 0.3408[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.4304[0m
[32m  eval_recall = 0.3134[0m
[32m  ********************[0m
[32m  Best f1:0.3408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.64[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29908:  93%|█████████▎| 26/28 [01:17<00:08,  4.10s/it]epoch 4 loss 1.30289:  93%|█████████▎| 26/28 [01:18<00:08,  4.10s/it]epoch 4 loss 1.30289:  96%|█████████▋| 27/28 [01:18<00:02,  3.00s/it]epoch 4 loss 1.29875:  96%|█████████▋| 27/28 [01:18<00:02,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6596[0m
[32m  eval_f1 = 0.3409[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.4304[0m
[32m  eval_recall = 0.3135[0m
[32m  ********************[0m
[32m  Best f1:0.3409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.29875: 100%|██████████| 28/28 [01:22<00:00,  3.55s/it]epoch 4 loss 1.29875: 100%|██████████| 28/28 [01:22<00:00,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6596[0m
[32m  eval_f1 = 0.3409[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.4304[0m
[32m  eval_recall = 0.3135[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.2668[0m
[32m  eval_mcc = 0.6177[0m
[32m  eval_precision = 0.3412[0m
[32m  eval_recall = 0.2489[0m

