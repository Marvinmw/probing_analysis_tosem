[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9', posratio=0.5, seed=892, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.76575:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.76575:   4%|▎         | 1/28 [00:00<00:21,  1.27it/s]epoch 0 loss 5.76316:   4%|▎         | 1/28 [00:01<00:21,  1.27it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0015[0m
[32m  eval_f1 = 0.0004[0m
[32m  eval_mcc = -0.0001[0m
[32m  eval_precision = 0.0006[0m
[32m  eval_recall = 0.0006[0m
[32m  ********************[0m
[32m  Best f1:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.76316:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 0 loss 5.74702:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 0 loss 5.74702:  11%|█         | 3/28 [00:05<00:47,  1.88s/it]epoch 0 loss 5.73456:  11%|█         | 3/28 [00:06<00:47,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0036[0m
[32m  eval_f1 = 0.0008[0m
[32m  eval_mcc = 0.0001[0m
[32m  eval_precision = 0.005[0m
[32m  eval_recall = 0.0011[0m
[32m  ********************[0m
[32m  Best f1:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.73456:  14%|█▍        | 4/28 [00:11<01:22,  3.44s/it]epoch 0 loss 5.70391:  14%|█▍        | 4/28 [00:12<01:22,  3.44s/it]epoch 0 loss 5.70391:  18%|█▊        | 5/28 [00:12<00:54,  2.35s/it]epoch 0 loss 5.67097:  18%|█▊        | 5/28 [00:12<00:54,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0133[0m
[32m  eval_f1 = 0.0018[0m
[32m  eval_mcc = 0.0028[0m
[32m  eval_precision = 0.0041[0m
[32m  eval_recall = 0.0028[0m
[32m  ********************[0m
[32m  Best f1:0.0018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.67097:  21%|██▏       | 6/28 [00:19<01:28,  4.00s/it]epoch 0 loss 5.63129:  21%|██▏       | 6/28 [00:19<01:28,  4.00s/it]epoch 0 loss 5.63129:  25%|██▌       | 7/28 [00:19<00:59,  2.84s/it]epoch 0 loss 5.58611:  25%|██▌       | 7/28 [00:20<00:59,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0378[0m
[32m  eval_f1 = 0.0036[0m
[32m  eval_mcc = 0.0134[0m
[32m  eval_precision = 0.0077[0m
[32m  eval_recall = 0.0079[0m
[32m  ********************[0m
[32m  Best f1:0.0036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0134[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.58611:  29%|██▊       | 8/28 [00:27<01:29,  4.49s/it]epoch 0 loss 5.53301:  29%|██▊       | 8/28 [00:28<01:29,  4.49s/it]epoch 0 loss 5.53301:  32%|███▏      | 9/28 [00:28<01:01,  3.22s/it]epoch 0 loss 5.47412:  32%|███▏      | 9/28 [00:28<01:01,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.068[0m
[32m  eval_f1 = 0.0099[0m
[32m  eval_mcc = 0.0368[0m
[32m  eval_precision = 0.0168[0m
[32m  eval_recall = 0.0173[0m
[32m  ********************[0m
[32m  Best f1:0.0099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.47412:  36%|███▌      | 10/28 [00:34<01:15,  4.21s/it]epoch 0 loss 5.4087:  36%|███▌      | 10/28 [00:35<01:15,  4.21s/it] epoch 0 loss 5.4087:  39%|███▉      | 11/28 [00:35<00:51,  3.06s/it]epoch 0 loss 5.34195:  39%|███▉      | 11/28 [00:35<00:51,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0825[0m
[32m  eval_f1 = 0.0131[0m
[32m  eval_mcc = 0.0493[0m
[32m  eval_precision = 0.0227[0m
[32m  eval_recall = 0.0219[0m
[32m  ********************[0m
[32m  Best f1:0.0131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.34195:  43%|████▎     | 12/28 [00:41<01:03,  3.98s/it]epoch 0 loss 5.2698:  43%|████▎     | 12/28 [00:41<01:03,  3.98s/it] epoch 0 loss 5.2698:  46%|████▋     | 13/28 [00:41<00:43,  2.90s/it]epoch 0 loss 5.19188:  46%|████▋     | 13/28 [00:42<00:43,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0985[0m
[32m  eval_f1 = 0.0149[0m
[32m  eval_mcc = 0.0627[0m
[32m  eval_precision = 0.0354[0m
[32m  eval_recall = 0.0238[0m
[32m  ********************[0m
[32m  Best f1:0.0149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.19188:  50%|█████     | 14/28 [00:48<00:55,  3.99s/it]epoch 0 loss 5.11375:  50%|█████     | 14/28 [00:48<00:55,  3.99s/it]epoch 0 loss 5.11375:  54%|█████▎    | 15/28 [00:48<00:37,  2.92s/it]epoch 0 loss 5.03385:  54%|█████▎    | 15/28 [00:49<00:37,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1282[0m
[32m  eval_f1 = 0.0199[0m
[32m  eval_mcc = 0.0857[0m
[32m  eval_precision = 0.0377[0m
[32m  eval_recall = 0.0271[0m
[32m  ********************[0m
[32m  Best f1:0.0199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0857[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.03385:  57%|█████▋    | 16/28 [00:55<00:47,  3.99s/it]epoch 0 loss 4.95279:  57%|█████▋    | 16/28 [00:55<00:47,  3.99s/it]epoch 0 loss 4.95279:  61%|██████    | 17/28 [00:55<00:32,  2.92s/it]epoch 0 loss 4.87452:  61%|██████    | 17/28 [00:55<00:32,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1685[0m
[32m  eval_f1 = 0.0264[0m
[32m  eval_mcc = 0.1214[0m
[32m  eval_precision = 0.0515[0m
[32m  eval_recall = 0.0307[0m
[32m  ********************[0m
[32m  Best f1:0.0264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.87452:  64%|██████▍   | 18/28 [01:01<00:38,  3.86s/it]epoch 0 loss 4.80312:  64%|██████▍   | 18/28 [01:01<00:38,  3.86s/it]epoch 0 loss 4.80312:  68%|██████▊   | 19/28 [01:01<00:25,  2.83s/it]epoch 0 loss 4.72754:  68%|██████▊   | 19/28 [01:02<00:25,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2068[0m
[32m  eval_f1 = 0.0316[0m
[32m  eval_mcc = 0.1639[0m
[32m  eval_precision = 0.0556[0m
[32m  eval_recall = 0.034[0m
[32m  ********************[0m
[32m  Best f1:0.0316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.72754:  71%|███████▏  | 20/28 [01:07<00:29,  3.70s/it]epoch 0 loss 4.65608:  71%|███████▏  | 20/28 [01:08<00:29,  3.70s/it]epoch 0 loss 4.65608:  75%|███████▌  | 21/28 [01:08<00:19,  2.72s/it]epoch 0 loss 4.58251:  75%|███████▌  | 21/28 [01:08<00:19,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2546[0m
[32m  eval_f1 = 0.0362[0m
[32m  eval_mcc = 0.2042[0m
[32m  eval_precision = 0.058[0m
[32m  eval_recall = 0.0383[0m
[32m  ********************[0m
[32m  Best f1:0.0362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.58251:  79%|███████▊  | 22/28 [01:14<00:23,  3.85s/it]epoch 0 loss 4.5128:  79%|███████▊  | 22/28 [01:15<00:23,  3.85s/it] epoch 0 loss 4.5128:  82%|████████▏ | 23/28 [01:15<00:14,  2.83s/it]epoch 0 loss 4.45149:  82%|████████▏ | 23/28 [01:15<00:14,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.331[0m
[32m  eval_f1 = 0.0462[0m
[32m  eval_mcc = 0.2791[0m
[32m  eval_precision = 0.0698[0m
[32m  eval_recall = 0.0481[0m
[32m  ********************[0m
[32m  Best f1:0.0462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2791[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.45149:  86%|████████▌ | 24/28 [01:21<00:15,  3.76s/it]epoch 0 loss 4.39984:  86%|████████▌ | 24/28 [01:21<00:15,  3.76s/it]epoch 0 loss 4.39984:  89%|████████▉ | 25/28 [01:21<00:08,  2.76s/it]epoch 0 loss 4.33998:  89%|████████▉ | 25/28 [01:21<00:08,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3624[0m
[32m  eval_f1 = 0.0763[0m
[32m  eval_mcc = 0.3245[0m
[32m  eval_precision = 0.1178[0m
[32m  eval_recall = 0.0718[0m
[32m  ********************[0m
[32m  Best f1:0.0763[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.33998:  93%|█████████▎| 26/28 [01:30<00:09,  4.65s/it]epoch 0 loss 4.28154:  93%|█████████▎| 26/28 [01:30<00:09,  4.65s/it]epoch 0 loss 4.28154:  96%|█████████▋| 27/28 [01:30<00:03,  3.38s/it]epoch 0 loss 4.22534:  96%|█████████▋| 27/28 [01:31<00:03,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.67it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.379[0m
[32m  eval_f1 = 0.0939[0m
[32m  eval_mcc = 0.3554[0m
[32m  eval_precision = 0.1446[0m
[32m  eval_recall = 0.0856[0m
[32m  ********************[0m
[32m  Best f1:0.0939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.22534: 100%|██████████| 28/28 [01:41<00:00,  5.52s/it]epoch 0 loss 4.22534: 100%|██████████| 28/28 [01:41<00:00,  3.62s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.50661:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.50661:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s]epoch 1 loss 2.54727:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4179[0m
[32m  eval_f1 = 0.1146[0m
[32m  eval_mcc = 0.399[0m
[32m  eval_precision = 0.1643[0m
[32m  eval_recall = 0.1046[0m
[32m  ********************[0m
[32m  Best f1:0.1146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.54727:   7%|▋         | 2/28 [00:11<02:54,  6.71s/it]epoch 1 loss 2.52766:   7%|▋         | 2/28 [00:11<02:54,  6.71s/it]epoch 1 loss 2.52766:  11%|█         | 3/28 [00:11<01:36,  3.84s/it]epoch 1 loss 2.50459:  11%|█         | 3/28 [00:12<01:36,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4735[0m
[32m  eval_f1 = 0.1367[0m
[32m  eval_mcc = 0.4497[0m
[32m  eval_precision = 0.1784[0m
[32m  eval_recall = 0.1289[0m
[32m  ********************[0m
[32m  Best f1:0.1367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.50459:  14%|█▍        | 4/28 [00:20<02:17,  5.73s/it]epoch 1 loss 2.44321:  14%|█▍        | 4/28 [00:20<02:17,  5.73s/it]epoch 1 loss 2.44321:  18%|█▊        | 5/28 [00:21<01:27,  3.81s/it]epoch 1 loss 2.42714:  18%|█▊        | 5/28 [00:21<01:27,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5297[0m
[32m  eval_f1 = 0.1529[0m
[32m  eval_mcc = 0.5023[0m
[32m  eval_precision = 0.2128[0m
[32m  eval_recall = 0.1487[0m
[32m  ********************[0m
[32m  Best f1:0.1529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42714:  21%|██▏       | 6/28 [00:28<01:48,  4.92s/it]epoch 1 loss 2.40628:  21%|██▏       | 6/28 [00:28<01:48,  4.92s/it]epoch 1 loss 2.40628:  25%|██▌       | 7/28 [00:28<01:12,  3.45s/it]epoch 1 loss 2.39014:  25%|██▌       | 7/28 [00:28<01:12,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5556[0m
[32m  eval_f1 = 0.1724[0m
[32m  eval_mcc = 0.5311[0m
[32m  eval_precision = 0.2233[0m
[32m  eval_recall = 0.166[0m
[32m  ********************[0m
[32m  Best f1:0.1724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5311[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.39014:  29%|██▊       | 8/28 [00:35<01:31,  4.60s/it]epoch 1 loss 2.35968:  29%|██▊       | 8/28 [00:35<01:31,  4.60s/it]epoch 1 loss 2.35968:  32%|███▏      | 9/28 [00:35<01:02,  3.29s/it]epoch 1 loss 2.35558:  32%|███▏      | 9/28 [00:36<01:02,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5664[0m
[32m  eval_f1 = 0.1774[0m
[32m  eval_mcc = 0.5424[0m
[32m  eval_precision = 0.2362[0m
[32m  eval_recall = 0.1705[0m
[32m  ********************[0m
[32m  Best f1:0.1774[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.35558:  36%|███▌      | 10/28 [00:45<01:31,  5.10s/it]epoch 1 loss 2.3394:  36%|███▌      | 10/28 [00:45<01:31,  5.10s/it] epoch 1 loss 2.3394:  39%|███▉      | 11/28 [00:45<01:02,  3.67s/it]epoch 1 loss 2.30544:  39%|███▉      | 11/28 [00:45<01:02,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5747[0m
[32m  eval_f1 = 0.1812[0m
[32m  eval_mcc = 0.5502[0m
[32m  eval_precision = 0.2559[0m
[32m  eval_recall = 0.173[0m
[32m  ********************[0m
[32m  Best f1:0.1812[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.30544:  43%|████▎     | 12/28 [00:57<01:37,  6.07s/it]epoch 1 loss 2.26287:  43%|████▎     | 12/28 [00:57<01:37,  6.07s/it]epoch 1 loss 2.26287:  46%|████▋     | 13/28 [00:57<01:05,  4.35s/it]epoch 1 loss 2.23065:  46%|████▋     | 13/28 [00:57<01:05,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5796[0m
[32m  eval_f1 = 0.1806[0m
[32m  eval_mcc = 0.5552[0m
[32m  eval_precision = 0.2422[0m
[32m  eval_recall = 0.1723[0m
[32m  ********************[0m
[32m  Best MCC:0.5552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23065:  50%|█████     | 14/28 [01:02<01:04,  4.58s/it]epoch 1 loss 2.20851:  50%|█████     | 14/28 [01:03<01:04,  4.58s/it]epoch 1 loss 2.20851:  54%|█████▎    | 15/28 [01:03<00:43,  3.32s/it]epoch 1 loss 2.18134:  54%|█████▎    | 15/28 [01:03<00:43,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5815[0m
[32m  eval_f1 = 0.1897[0m
[32m  eval_mcc = 0.5575[0m
[32m  eval_precision = 0.2495[0m
[32m  eval_recall = 0.18[0m
[32m  ********************[0m
[32m  Best f1:0.1897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.18134:  57%|█████▋    | 16/28 [01:16<01:15,  6.27s/it]epoch 1 loss 2.16248:  57%|█████▋    | 16/28 [01:16<01:15,  6.27s/it]epoch 1 loss 2.16248:  61%|██████    | 17/28 [01:16<00:49,  4.52s/it]epoch 1 loss 2.14674:  61%|██████    | 17/28 [01:16<00:49,  4.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5866[0m
[32m  eval_f1 = 0.1944[0m
[32m  eval_mcc = 0.5633[0m
[32m  eval_precision = 0.2579[0m
[32m  eval_recall = 0.1855[0m
[32m  ********************[0m
[32m  Best f1:0.1944[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.14674:  64%|██████▍   | 18/28 [01:28<01:06,  6.62s/it]epoch 1 loss 2.12448:  64%|██████▍   | 18/28 [01:28<01:06,  6.62s/it]epoch 1 loss 2.12448:  68%|██████▊   | 19/28 [01:28<00:42,  4.76s/it]epoch 1 loss 2.10431:  68%|██████▊   | 19/28 [01:28<00:42,  4.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5924[0m
[32m  eval_f1 = 0.208[0m
[32m  eval_mcc = 0.5713[0m
[32m  eval_precision = 0.2824[0m
[32m  eval_recall = 0.1974[0m
[32m  ********************[0m
[32m  Best f1:0.208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5713[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.10431:  71%|███████▏  | 20/28 [01:40<00:55,  6.97s/it]epoch 1 loss 2.08948:  71%|███████▏  | 20/28 [01:41<00:55,  6.97s/it]epoch 1 loss 2.08948:  75%|███████▌  | 21/28 [01:41<00:35,  5.01s/it]epoch 1 loss 2.07653:  75%|███████▌  | 21/28 [01:41<00:35,  5.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5966[0m
[32m  eval_f1 = 0.2184[0m
[32m  eval_mcc = 0.5764[0m
[32m  eval_precision = 0.2799[0m
[32m  eval_recall = 0.2056[0m
[32m  ********************[0m
[32m  Best f1:0.2184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5764[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07653:  79%|███████▊  | 22/28 [01:49<00:36,  6.06s/it]epoch 1 loss 2.06504:  79%|███████▊  | 22/28 [01:50<00:36,  6.06s/it]epoch 1 loss 2.06504:  82%|████████▏ | 23/28 [01:50<00:21,  4.37s/it]epoch 1 loss 2.04442:  82%|████████▏ | 23/28 [01:50<00:21,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6007[0m
[32m  eval_f1 = 0.2269[0m
[32m  eval_mcc = 0.5802[0m
[32m  eval_precision = 0.2836[0m
[32m  eval_recall = 0.2136[0m
[32m  ********************[0m
[32m  Best f1:0.2269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04442:  86%|████████▌ | 24/28 [01:59<00:23,  5.91s/it]epoch 1 loss 2.029:  86%|████████▌ | 24/28 [01:59<00:23,  5.91s/it]  epoch 1 loss 2.029:  89%|████████▉ | 25/28 [01:59<00:12,  4.27s/it]epoch 1 loss 2.01815:  89%|████████▉ | 25/28 [02:00<00:12,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6026[0m
[32m  eval_f1 = 0.2297[0m
[32m  eval_mcc = 0.5811[0m
[32m  eval_precision = 0.2853[0m
[32m  eval_recall = 0.2179[0m
[32m  ********************[0m
[32m  Best f1:0.2297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01815:  93%|█████████▎| 26/28 [02:08<00:11,  5.69s/it]epoch 1 loss 2.00433:  93%|█████████▎| 26/28 [02:09<00:11,  5.69s/it]epoch 1 loss 2.00433:  96%|█████████▋| 27/28 [02:09<00:04,  4.11s/it]epoch 1 loss 1.99824:  96%|█████████▋| 27/28 [02:09<00:04,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6055[0m
[32m  eval_f1 = 0.2354[0m
[32m  eval_mcc = 0.5834[0m
[32m  eval_precision = 0.2942[0m
[32m  eval_recall = 0.2234[0m
[32m  ********************[0m
[32m  Best f1:0.2354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99824: 100%|██████████| 28/28 [02:17<00:00,  5.40s/it]epoch 1 loss 1.99824: 100%|██████████| 28/28 [02:17<00:00,  4.92s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.68522:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.68522:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 2 loss 1.64436:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6068[0m
[32m  eval_f1 = 0.2438[0m
[32m  eval_mcc = 0.584[0m
[32m  eval_precision = 0.3267[0m
[32m  eval_recall = 0.2302[0m
[32m  ********************[0m
[32m  Best f1:0.2438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64436:   7%|▋         | 2/28 [00:08<02:05,  4.81s/it]epoch 2 loss 1.64229:   7%|▋         | 2/28 [00:08<02:05,  4.81s/it]epoch 2 loss 1.64229:  11%|█         | 3/28 [00:08<01:10,  2.81s/it]epoch 2 loss 1.61207:  11%|█         | 3/28 [00:09<01:10,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6106[0m
[32m  eval_f1 = 0.2462[0m
[32m  eval_mcc = 0.5882[0m
[32m  eval_precision = 0.3321[0m
[32m  eval_recall = 0.2322[0m
[32m  ********************[0m
[32m  Best f1:0.2462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5882[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61207:  14%|█▍        | 4/28 [00:18<02:13,  5.56s/it]epoch 2 loss 1.6323:  14%|█▍        | 4/28 [00:18<02:13,  5.56s/it] epoch 2 loss 1.6323:  18%|█▊        | 5/28 [00:18<01:25,  3.71s/it]epoch 2 loss 1.65354:  18%|█▊        | 5/28 [00:19<01:25,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6143[0m
[32m  eval_f1 = 0.2483[0m
[32m  eval_mcc = 0.592[0m
[32m  eval_precision = 0.3413[0m
[32m  eval_recall = 0.2346[0m
[32m  ********************[0m
[32m  Best f1:0.2483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.65354:  21%|██▏       | 6/28 [00:29<02:12,  6.01s/it]epoch 2 loss 1.65048:  21%|██▏       | 6/28 [00:29<02:12,  6.01s/it]epoch 2 loss 1.65048:  25%|██▌       | 7/28 [00:29<01:27,  4.18s/it]epoch 2 loss 1.61515:  25%|██▌       | 7/28 [00:30<01:27,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6143[0m
[32m  eval_f1 = 0.2505[0m
[32m  eval_mcc = 0.5921[0m
[32m  eval_precision = 0.3414[0m
[32m  eval_recall = 0.2361[0m
[32m  ********************[0m
[32m  Best f1:0.2505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61515:  29%|██▊       | 8/28 [00:38<01:49,  5.47s/it]epoch 2 loss 1.58883:  29%|██▊       | 8/28 [00:38<01:49,  5.47s/it]epoch 2 loss 1.58883:  32%|███▏      | 9/28 [00:38<01:14,  3.90s/it]epoch 2 loss 1.58404:  32%|███▏      | 9/28 [00:38<01:14,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.615[0m
[32m  eval_f1 = 0.2508[0m
[32m  eval_mcc = 0.593[0m
[32m  eval_precision = 0.3427[0m
[32m  eval_recall = 0.2358[0m
[32m  ********************[0m
[32m  Best f1:0.2508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58404:  36%|███▌      | 10/28 [00:45<01:24,  4.71s/it]epoch 2 loss 1.5774:  36%|███▌      | 10/28 [00:45<01:24,  4.71s/it] epoch 2 loss 1.5774:  39%|███▉      | 11/28 [00:45<00:57,  3.40s/it]epoch 2 loss 1.57246:  39%|███▉      | 11/28 [00:45<00:57,  3.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6161[0m
[32m  eval_f1 = 0.2534[0m
[32m  eval_mcc = 0.5948[0m
[32m  eval_precision = 0.3406[0m
[32m  eval_recall = 0.2378[0m
[32m  ********************[0m
[32m  Best f1:0.2534[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5948[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57246:  43%|████▎     | 12/28 [00:51<01:09,  4.34s/it]epoch 2 loss 1.57314:  43%|████▎     | 12/28 [00:52<01:09,  4.34s/it]epoch 2 loss 1.57314:  46%|████▋     | 13/28 [00:52<00:47,  3.15s/it]epoch 2 loss 1.56596:  46%|████▋     | 13/28 [00:52<00:47,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.62[0m
[32m  eval_f1 = 0.2566[0m
[32m  eval_mcc = 0.6003[0m
[32m  eval_precision = 0.3428[0m
[32m  eval_recall = 0.2403[0m
[32m  ********************[0m
[32m  Best f1:0.2566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56596:  50%|█████     | 14/28 [00:58<00:58,  4.16s/it]epoch 2 loss 1.57577:  50%|█████     | 14/28 [00:59<00:58,  4.16s/it]epoch 2 loss 1.57577:  54%|█████▎    | 15/28 [00:59<00:39,  3.04s/it]epoch 2 loss 1.57021:  54%|█████▎    | 15/28 [00:59<00:39,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6224[0m
[32m  eval_f1 = 0.268[0m
[32m  eval_mcc = 0.6028[0m
[32m  eval_precision = 0.3509[0m
[32m  eval_recall = 0.2486[0m
[32m  ********************[0m
[32m  Best f1:0.268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57021:  57%|█████▋    | 16/28 [01:05<00:48,  4.07s/it]epoch 2 loss 1.5633:  57%|█████▋    | 16/28 [01:06<00:48,  4.07s/it] epoch 2 loss 1.5633:  61%|██████    | 17/28 [01:06<00:32,  2.98s/it]epoch 2 loss 1.56073:  61%|██████    | 17/28 [01:06<00:32,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6246[0m
[32m  eval_f1 = 0.2726[0m
[32m  eval_mcc = 0.604[0m
[32m  eval_precision = 0.3456[0m
[32m  eval_recall = 0.2532[0m
[32m  ********************[0m
[32m  Best f1:0.2726[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56073:  64%|██████▍   | 18/28 [01:12<00:41,  4.11s/it]epoch 2 loss 1.55915:  64%|██████▍   | 18/28 [01:13<00:41,  4.11s/it]epoch 2 loss 1.55915:  68%|██████▊   | 19/28 [01:13<00:27,  3.01s/it]epoch 2 loss 1.55626:  68%|██████▊   | 19/28 [01:13<00:27,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6251[0m
[32m  eval_f1 = 0.2748[0m
[32m  eval_mcc = 0.6036[0m
[32m  eval_precision = 0.3548[0m
[32m  eval_recall = 0.2561[0m
[32m  ********************[0m
[32m  Best f1:0.2748[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.55626:  71%|███████▏  | 20/28 [01:18<00:28,  3.52s/it]epoch 2 loss 1.55316:  71%|███████▏  | 20/28 [01:18<00:28,  3.52s/it]epoch 2 loss 1.55316:  75%|███████▌  | 21/28 [01:18<00:18,  2.58s/it]epoch 2 loss 1.54942:  75%|███████▌  | 21/28 [01:18<00:18,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6257[0m
[32m  eval_f1 = 0.2735[0m
[32m  eval_mcc = 0.6038[0m
[32m  eval_precision = 0.3603[0m
[32m  eval_recall = 0.256[0m

epoch 2 loss 1.54942:  79%|███████▊  | 22/28 [01:22<00:17,  2.94s/it]epoch 2 loss 1.5425:  79%|███████▊  | 22/28 [01:22<00:17,  2.94s/it] epoch 2 loss 1.5425:  82%|████████▏ | 23/28 [01:22<00:10,  2.18s/it]epoch 2 loss 1.53839:  82%|████████▏ | 23/28 [01:23<00:10,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6295[0m
[32m  eval_f1 = 0.2767[0m
[32m  eval_mcc = 0.6086[0m
[32m  eval_precision = 0.3708[0m
[32m  eval_recall = 0.2582[0m
[32m  ********************[0m
[32m  Best f1:0.2767[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53839:  86%|████████▌ | 24/28 [01:33<00:18,  4.63s/it]epoch 2 loss 1.53163:  86%|████████▌ | 24/28 [01:33<00:18,  4.63s/it]epoch 2 loss 1.53163:  89%|████████▉ | 25/28 [01:33<00:10,  3.36s/it]epoch 2 loss 1.52981:  89%|████████▉ | 25/28 [01:33<00:10,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6317[0m
[32m  eval_f1 = 0.2812[0m
[32m  eval_mcc = 0.6117[0m
[32m  eval_precision = 0.3726[0m
[32m  eval_recall = 0.2618[0m
[32m  ********************[0m
[32m  Best f1:0.2812[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6117[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52981:  93%|█████████▎| 26/28 [01:51<00:15,  7.71s/it]epoch 2 loss 1.5317:  93%|█████████▎| 26/28 [01:51<00:15,  7.71s/it] epoch 2 loss 1.5317:  96%|█████████▋| 27/28 [01:51<00:05,  5.52s/it]epoch 2 loss 1.52537:  96%|█████████▋| 27/28 [01:51<00:05,  5.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6328[0m
[32m  eval_f1 = 0.2828[0m
[32m  eval_mcc = 0.6142[0m
[32m  eval_precision = 0.3742[0m
[32m  eval_recall = 0.2627[0m
[32m  ********************[0m
[32m  Best f1:0.2828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52537: 100%|██████████| 28/28 [02:03<00:00,  7.29s/it]epoch 2 loss 1.52537: 100%|██████████| 28/28 [02:03<00:00,  4.40s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.32872:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.32872:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s]epoch 3 loss 1.33216:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6338[0m
[32m  eval_f1 = 0.283[0m
[32m  eval_mcc = 0.6156[0m
[32m  eval_precision = 0.3722[0m
[32m  eval_recall = 0.2626[0m
[32m  ********************[0m
[32m  Best f1:0.283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6156[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33216:   7%|▋         | 2/28 [00:09<02:20,  5.41s/it]epoch 3 loss 1.36878:   7%|▋         | 2/28 [00:09<02:20,  5.41s/it]epoch 3 loss 1.36878:  11%|█         | 3/28 [00:09<01:18,  3.13s/it]epoch 3 loss 1.40265:  11%|█         | 3/28 [00:10<01:18,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6355[0m
[32m  eval_f1 = 0.2835[0m
[32m  eval_mcc = 0.6167[0m
[32m  eval_precision = 0.3716[0m
[32m  eval_recall = 0.263[0m
[32m  ********************[0m
[32m  Best f1:0.2835[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40265:  14%|█▍        | 4/28 [00:18<02:07,  5.31s/it]epoch 3 loss 1.43082:  14%|█▍        | 4/28 [00:18<02:07,  5.31s/it]epoch 3 loss 1.43082:  18%|█▊        | 5/28 [00:18<01:21,  3.55s/it]epoch 3 loss 1.45371:  18%|█▊        | 5/28 [00:19<01:21,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6362[0m
[32m  eval_f1 = 0.2848[0m
[32m  eval_mcc = 0.6161[0m
[32m  eval_precision = 0.3623[0m
[32m  eval_recall = 0.2648[0m
[32m  ********************[0m
[32m  Best f1:0.2848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.45371:  21%|██▏       | 6/28 [00:23<01:28,  4.02s/it]epoch 3 loss 1.44893:  21%|██▏       | 6/28 [00:24<01:28,  4.02s/it]epoch 3 loss 1.44893:  25%|██▌       | 7/28 [00:24<00:59,  2.83s/it]epoch 3 loss 1.44569:  25%|██▌       | 7/28 [00:24<00:59,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.637[0m
[32m  eval_f1 = 0.2857[0m
[32m  eval_mcc = 0.6161[0m
[32m  eval_precision = 0.3659[0m
[32m  eval_recall = 0.2659[0m
[32m  ********************[0m
[32m  Best f1:0.2857[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.44569:  29%|██▊       | 8/28 [00:31<01:27,  4.36s/it]epoch 3 loss 1.44504:  29%|██▊       | 8/28 [00:32<01:27,  4.36s/it]epoch 3 loss 1.44504:  32%|███▏      | 9/28 [00:32<00:59,  3.13s/it]epoch 3 loss 1.45053:  32%|███▏      | 9/28 [00:32<00:59,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.2887[0m
[32m  eval_mcc = 0.6181[0m
[32m  eval_precision = 0.3772[0m
[32m  eval_recall = 0.2679[0m
[32m  ********************[0m
[32m  Best f1:0.2887[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45053:  36%|███▌      | 10/28 [00:41<01:28,  4.92s/it]epoch 3 loss 1.4479:  36%|███▌      | 10/28 [00:41<01:28,  4.92s/it] epoch 3 loss 1.4479:  39%|███▉      | 11/28 [00:41<01:00,  3.54s/it]epoch 3 loss 1.4493:  39%|███▉      | 11/28 [00:41<01:00,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6396[0m
[32m  eval_f1 = 0.2897[0m
[32m  eval_mcc = 0.6191[0m
[32m  eval_precision = 0.3783[0m
[32m  eval_recall = 0.2686[0m
[32m  ********************[0m
[32m  Best f1:0.2897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4493:  43%|████▎     | 12/28 [00:51<01:26,  5.40s/it]epoch 3 loss 1.43916:  43%|████▎     | 12/28 [00:51<01:26,  5.40s/it]epoch 3 loss 1.43916:  46%|████▋     | 13/28 [00:51<00:58,  3.89s/it]epoch 3 loss 1.42779:  46%|████▋     | 13/28 [00:52<00:58,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6398[0m
[32m  eval_f1 = 0.2897[0m
[32m  eval_mcc = 0.6193[0m
[32m  eval_precision = 0.3807[0m
[32m  eval_recall = 0.2688[0m
[32m  ********************[0m
[32m  Best MCC:0.6193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42779:  50%|█████     | 14/28 [00:58<01:07,  4.84s/it]epoch 3 loss 1.4345:  50%|█████     | 14/28 [00:59<01:07,  4.84s/it] epoch 3 loss 1.4345:  54%|█████▎    | 15/28 [00:59<00:45,  3.50s/it]epoch 3 loss 1.4335:  54%|█████▎    | 15/28 [00:59<00:45,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6403[0m
[32m  eval_f1 = 0.2924[0m
[32m  eval_mcc = 0.62[0m
[32m  eval_precision = 0.3895[0m
[32m  eval_recall = 0.2705[0m
[32m  ********************[0m
[32m  Best f1:0.2924[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.62[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4335:  57%|█████▋    | 16/28 [01:09<01:07,  5.64s/it]epoch 3 loss 1.43482:  57%|█████▋    | 16/28 [01:10<01:07,  5.64s/it]epoch 3 loss 1.43482:  61%|██████    | 17/28 [01:10<00:44,  4.07s/it]epoch 3 loss 1.42647:  61%|██████    | 17/28 [01:10<00:44,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6401[0m
[32m  eval_f1 = 0.2946[0m
[32m  eval_mcc = 0.6198[0m
[32m  eval_precision = 0.39[0m
[32m  eval_recall = 0.2722[0m
[32m  ********************[0m
[32m  Best f1:0.2946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.42647:  64%|██████▍   | 18/28 [01:15<00:43,  4.38s/it]epoch 3 loss 1.42975:  64%|██████▍   | 18/28 [01:15<00:43,  4.38s/it]epoch 3 loss 1.42975:  68%|██████▊   | 19/28 [01:15<00:28,  3.19s/it]epoch 3 loss 1.43113:  68%|██████▊   | 19/28 [01:15<00:28,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6403[0m
[32m  eval_f1 = 0.295[0m
[32m  eval_mcc = 0.6202[0m
[32m  eval_precision = 0.3847[0m
[32m  eval_recall = 0.2724[0m
[32m  ********************[0m
[32m  Best f1:0.295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43113:  71%|███████▏  | 20/28 [01:23<00:37,  4.73s/it]epoch 3 loss 1.4259:  71%|███████▏  | 20/28 [01:24<00:37,  4.73s/it] epoch 3 loss 1.4259:  75%|███████▌  | 21/28 [01:24<00:24,  3.43s/it]epoch 3 loss 1.42871:  75%|███████▌  | 21/28 [01:24<00:24,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6412[0m
[32m  eval_f1 = 0.298[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.3934[0m
[32m  eval_recall = 0.2742[0m
[32m  ********************[0m
[32m  Best f1:0.298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42871:  79%|███████▊  | 22/28 [01:32<00:28,  4.81s/it]epoch 3 loss 1.4254:  79%|███████▊  | 22/28 [01:32<00:28,  4.81s/it] epoch 3 loss 1.4254:  82%|████████▏ | 23/28 [01:32<00:17,  3.49s/it]epoch 3 loss 1.42599:  82%|████████▏ | 23/28 [01:33<00:17,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6421[0m
[32m  eval_f1 = 0.2989[0m
[32m  eval_mcc = 0.622[0m
[32m  eval_precision = 0.3932[0m
[32m  eval_recall = 0.2754[0m
[32m  ********************[0m
[32m  Best f1:0.2989[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42599:  86%|████████▌ | 24/28 [01:39<00:17,  4.49s/it]epoch 3 loss 1.42249:  86%|████████▌ | 24/28 [01:39<00:17,  4.49s/it]epoch 3 loss 1.42249:  89%|████████▉ | 25/28 [01:39<00:09,  3.27s/it]epoch 3 loss 1.41919:  89%|████████▉ | 25/28 [01:40<00:09,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.642[0m
[32m  eval_f1 = 0.2994[0m
[32m  eval_mcc = 0.6219[0m
[32m  eval_precision = 0.4002[0m
[32m  eval_recall = 0.2755[0m
[32m  ********************[0m
[32m  Best f1:0.2994[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.41919:  93%|█████████▎| 26/28 [01:45<00:07,  3.89s/it]epoch 3 loss 1.41924:  93%|█████████▎| 26/28 [01:45<00:07,  3.89s/it]epoch 3 loss 1.41924:  96%|█████████▋| 27/28 [01:45<00:02,  2.84s/it]epoch 3 loss 1.41882:  96%|█████████▋| 27/28 [01:45<00:02,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6429[0m
[32m  eval_f1 = 0.3047[0m
[32m  eval_mcc = 0.6229[0m
[32m  eval_precision = 0.4106[0m
[32m  eval_recall = 0.2794[0m
[32m  ********************[0m
[32m  Best f1:0.3047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41882: 100%|██████████| 28/28 [01:52<00:00,  4.05s/it]epoch 3 loss 1.41882: 100%|██████████| 28/28 [01:52<00:00,  4.02s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.35243:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.35243:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s]epoch 4 loss 1.3427:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6437[0m
[32m  eval_f1 = 0.3065[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.4118[0m
[32m  eval_recall = 0.281[0m
[32m  ********************[0m
[32m  Best f1:0.3065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3427:   7%|▋         | 2/28 [00:09<02:16,  5.25s/it]epoch 4 loss 1.32505:   7%|▋         | 2/28 [00:09<02:16,  5.25s/it]epoch 4 loss 1.32505:  11%|█         | 3/28 [00:09<01:16,  3.05s/it]epoch 4 loss 1.35329:  11%|█         | 3/28 [00:09<01:16,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6436[0m
[32m  eval_f1 = 0.3068[0m
[32m  eval_mcc = 0.6241[0m
[32m  eval_precision = 0.4087[0m
[32m  eval_recall = 0.2812[0m
[32m  ********************[0m
[32m  Best f1:0.3068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35329:  14%|█▍        | 4/28 [00:17<01:57,  4.91s/it]epoch 4 loss 1.31803:  14%|█▍        | 4/28 [00:17<01:57,  4.91s/it]epoch 4 loss 1.31803:  18%|█▊        | 5/28 [00:17<01:15,  3.29s/it]epoch 4 loss 1.33521:  18%|█▊        | 5/28 [00:18<01:15,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6435[0m
[32m  eval_f1 = 0.3088[0m
[32m  eval_mcc = 0.6244[0m
[32m  eval_precision = 0.4169[0m
[32m  eval_recall = 0.2822[0m
[32m  ********************[0m
[32m  Best f1:0.3088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33521:  21%|██▏       | 6/28 [00:25<01:49,  4.98s/it]epoch 4 loss 1.34403:  21%|██▏       | 6/28 [00:26<01:49,  4.98s/it]epoch 4 loss 1.34403:  25%|██▌       | 7/28 [00:26<01:13,  3.49s/it]epoch 4 loss 1.34384:  25%|██▌       | 7/28 [00:26<01:13,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6438[0m
[32m  eval_f1 = 0.3096[0m
[32m  eval_mcc = 0.6247[0m
[32m  eval_precision = 0.4167[0m
[32m  eval_recall = 0.2828[0m
[32m  ********************[0m
[32m  Best f1:0.3096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34384:  29%|██▊       | 8/28 [00:33<01:35,  4.79s/it]epoch 4 loss 1.34086:  29%|██▊       | 8/28 [00:34<01:35,  4.79s/it]epoch 4 loss 1.34086:  32%|███▏      | 9/28 [00:34<01:05,  3.42s/it]epoch 4 loss 1.33553:  32%|███▏      | 9/28 [00:34<01:05,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6443[0m
[32m  eval_f1 = 0.3101[0m
[32m  eval_mcc = 0.6252[0m
[32m  eval_precision = 0.4164[0m
[32m  eval_recall = 0.2835[0m
[32m  ********************[0m
[32m  Best f1:0.3101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33553:  36%|███▌      | 10/28 [00:45<01:42,  5.69s/it]epoch 4 loss 1.33801:  36%|███▌      | 10/28 [00:45<01:42,  5.69s/it]epoch 4 loss 1.33801:  39%|███▉      | 11/28 [00:45<01:09,  4.08s/it]epoch 4 loss 1.35135:  39%|███▉      | 11/28 [00:45<01:09,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.644[0m
[32m  eval_f1 = 0.3106[0m
[32m  eval_mcc = 0.6247[0m
[32m  eval_precision = 0.416[0m
[32m  eval_recall = 0.284[0m
[32m  ********************[0m
[32m  Best f1:0.3106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.35135:  43%|████▎     | 12/28 [00:50<01:10,  4.39s/it]epoch 4 loss 1.35417:  43%|████▎     | 12/28 [00:51<01:10,  4.39s/it]epoch 4 loss 1.35417:  46%|████▋     | 13/28 [00:51<00:47,  3.18s/it]epoch 4 loss 1.35696:  46%|████▋     | 13/28 [00:51<00:47,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6445[0m
[32m  eval_f1 = 0.3107[0m
[32m  eval_mcc = 0.625[0m
[32m  eval_precision = 0.4142[0m
[32m  eval_recall = 0.2849[0m
[32m  ********************[0m
[32m  Best f1:0.3107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.35696:  50%|█████     | 14/28 [00:56<00:52,  3.77s/it]epoch 4 loss 1.35994:  50%|█████     | 14/28 [00:56<00:52,  3.77s/it]epoch 4 loss 1.35994:  54%|█████▎    | 15/28 [00:56<00:35,  2.75s/it]epoch 4 loss 1.36213:  54%|█████▎    | 15/28 [00:56<00:35,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6448[0m
[32m  eval_f1 = 0.3112[0m
[32m  eval_mcc = 0.625[0m
[32m  eval_precision = 0.4132[0m
[32m  eval_recall = 0.2857[0m
[32m  ********************[0m
[32m  Best f1:0.3112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.36213:  57%|█████▋    | 16/28 [01:01<00:40,  3.40s/it]epoch 4 loss 1.36451:  57%|█████▋    | 16/28 [01:01<00:40,  3.40s/it]epoch 4 loss 1.36451:  61%|██████    | 17/28 [01:01<00:27,  2.50s/it]epoch 4 loss 1.37788:  61%|██████    | 17/28 [01:02<00:27,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6456[0m
[32m  eval_f1 = 0.3143[0m
[32m  eval_mcc = 0.6257[0m
[32m  eval_precision = 0.421[0m
[32m  eval_recall = 0.2884[0m
[32m  ********************[0m
[32m  Best f1:0.3143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37788:  64%|██████▍   | 18/28 [01:07<00:34,  3.48s/it]epoch 4 loss 1.37617:  64%|██████▍   | 18/28 [01:08<00:34,  3.48s/it]epoch 4 loss 1.37617:  68%|██████▊   | 19/28 [01:08<00:23,  2.56s/it]epoch 4 loss 1.37641:  68%|██████▊   | 19/28 [01:08<00:23,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6458[0m
[32m  eval_f1 = 0.3143[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4204[0m
[32m  eval_recall = 0.2887[0m
[32m  ********************[0m
[32m  Best f1:0.3143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.37641:  71%|███████▏  | 20/28 [01:13<00:26,  3.35s/it]epoch 4 loss 1.37188:  71%|███████▏  | 20/28 [01:13<00:26,  3.35s/it]epoch 4 loss 1.37188:  75%|███████▌  | 21/28 [01:13<00:17,  2.46s/it]epoch 4 loss 1.37778:  75%|███████▌  | 21/28 [01:14<00:17,  2.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6464[0m
[32m  eval_f1 = 0.316[0m
[32m  eval_mcc = 0.6261[0m
[32m  eval_precision = 0.4198[0m
[32m  eval_recall = 0.2902[0m
[32m  ********************[0m
[32m  Best f1:0.316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37778:  79%|███████▊  | 22/28 [01:20<00:22,  3.67s/it]epoch 4 loss 1.37631:  79%|███████▊  | 22/28 [01:20<00:22,  3.67s/it]epoch 4 loss 1.37631:  82%|████████▏ | 23/28 [01:20<00:13,  2.70s/it]epoch 4 loss 1.37533:  82%|████████▏ | 23/28 [01:20<00:13,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6469[0m
[32m  eval_f1 = 0.3166[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.4195[0m
[32m  eval_recall = 0.2911[0m
[32m  ********************[0m
[32m  Best f1:0.3166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37533:  86%|████████▌ | 24/28 [01:26<00:14,  3.58s/it]epoch 4 loss 1.37658:  86%|████████▌ | 24/28 [01:26<00:14,  3.58s/it]epoch 4 loss 1.37658:  89%|████████▉ | 25/28 [01:26<00:07,  2.63s/it]epoch 4 loss 1.37502:  89%|████████▉ | 25/28 [01:26<00:07,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6469[0m
[32m  eval_f1 = 0.3165[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.4193[0m
[32m  eval_recall = 0.2912[0m
[32m  ********************[0m
[32m  Best MCC:0.6266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37502:  93%|█████████▎| 26/28 [01:31<00:06,  3.27s/it]epoch 4 loss 1.37876:  93%|█████████▎| 26/28 [01:31<00:06,  3.27s/it]epoch 4 loss 1.37876:  96%|█████████▋| 27/28 [01:31<00:02,  2.41s/it]epoch 4 loss 1.37495:  96%|█████████▋| 27/28 [01:31<00:02,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6469[0m
[32m  eval_f1 = 0.3165[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.4192[0m
[32m  eval_recall = 0.2912[0m

epoch 4 loss 1.37495: 100%|██████████| 28/28 [01:35<00:00,  2.76s/it]epoch 4 loss 1.37495: 100%|██████████| 28/28 [01:35<00:00,  3.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6469[0m
[32m  eval_f1 = 0.3166[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.4195[0m
[32m  eval_recall = 0.2911[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6272[0m
[32m  eval_f1 = 0.2468[0m
[32m  eval_mcc = 0.6069[0m
[32m  eval_precision = 0.3217[0m
[32m  eval_recall = 0.2316[0m

