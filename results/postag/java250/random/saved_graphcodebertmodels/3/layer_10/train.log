[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10', posratio=0.5, seed=892, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.76054:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.76054:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.75692:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0025[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = -0.0004[0m
[32m  eval_precision = 0.0066[0m
[32m  eval_recall = 0.0025[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.75692:   7%|▋         | 2/28 [00:05<01:20,  3.11s/it]epoch 0 loss 5.73916:   7%|▋         | 2/28 [00:05<01:20,  3.11s/it]epoch 0 loss 5.73916:  11%|█         | 3/28 [00:05<00:46,  1.87s/it]epoch 0 loss 5.72555:  11%|█         | 3/28 [00:06<00:46,  1.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0047[0m
[32m  eval_f1 = 0.0008[0m
[32m  eval_mcc = -0.0007[0m
[32m  eval_precision = 0.0118[0m
[32m  eval_recall = 0.0029[0m
[32m  ********************[0m
[32m  Best f1:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.72555:  14%|█▍        | 4/28 [00:10<01:15,  3.13s/it]epoch 0 loss 5.69514:  14%|█▍        | 4/28 [00:11<01:15,  3.13s/it]epoch 0 loss 5.69514:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it]epoch 0 loss 5.66104:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0136[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = 0.0008[0m
[32m  eval_precision = 0.0052[0m
[32m  eval_recall = 0.0045[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.66104:  21%|██▏       | 6/28 [00:17<01:13,  3.36s/it]epoch 0 loss 5.62091:  21%|██▏       | 6/28 [00:17<01:13,  3.36s/it]epoch 0 loss 5.62091:  25%|██▌       | 7/28 [00:17<00:50,  2.40s/it]epoch 0 loss 5.57499:  25%|██▌       | 7/28 [00:17<00:50,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0475[0m
[32m  eval_f1 = 0.0057[0m
[32m  eval_mcc = 0.023[0m
[32m  eval_precision = 0.0147[0m
[32m  eval_recall = 0.013[0m
[32m  ********************[0m
[32m  Best f1:0.0057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.57499:  29%|██▊       | 8/28 [00:24<01:15,  3.76s/it]epoch 0 loss 5.52158:  29%|██▊       | 8/28 [00:24<01:15,  3.76s/it]epoch 0 loss 5.52158:  32%|███▏      | 9/28 [00:24<00:51,  2.72s/it]epoch 0 loss 5.46211:  32%|███▏      | 9/28 [00:25<00:51,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0696[0m
[32m  eval_f1 = 0.0086[0m
[32m  eval_mcc = 0.0376[0m
[32m  eval_precision = 0.0108[0m
[32m  eval_recall = 0.0177[0m
[32m  ********************[0m
[32m  Best f1:0.0086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.46211:  36%|███▌      | 10/28 [00:31<01:10,  3.94s/it]epoch 0 loss 5.39597:  36%|███▌      | 10/28 [00:31<01:10,  3.94s/it]epoch 0 loss 5.39597:  39%|███▉      | 11/28 [00:31<00:48,  2.87s/it]epoch 0 loss 5.32851:  39%|███▉      | 11/28 [00:32<00:48,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0808[0m
[32m  eval_f1 = 0.0118[0m
[32m  eval_mcc = 0.0461[0m
[32m  eval_precision = 0.0213[0m
[32m  eval_recall = 0.0194[0m
[32m  ********************[0m
[32m  Best f1:0.0118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.32851:  43%|████▎     | 12/28 [00:38<01:04,  4.05s/it]epoch 0 loss 5.25597:  43%|████▎     | 12/28 [00:38<01:04,  4.05s/it]epoch 0 loss 5.25597:  46%|████▋     | 13/28 [00:38<00:44,  2.95s/it]epoch 0 loss 5.17705:  46%|████▋     | 13/28 [00:39<00:44,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0978[0m
[32m  eval_f1 = 0.0141[0m
[32m  eval_mcc = 0.0611[0m
[32m  eval_precision = 0.0282[0m
[32m  eval_recall = 0.0211[0m
[32m  ********************[0m
[32m  Best f1:0.0141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.17705:  50%|█████     | 14/28 [00:45<00:57,  4.11s/it]epoch 0 loss 5.09795:  50%|█████     | 14/28 [00:46<00:57,  4.11s/it]epoch 0 loss 5.09795:  54%|█████▎    | 15/28 [00:46<00:39,  3.00s/it]epoch 0 loss 5.01742:  54%|█████▎    | 15/28 [00:46<00:39,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1295[0m
[32m  eval_f1 = 0.0188[0m
[32m  eval_mcc = 0.086[0m
[32m  eval_precision = 0.0324[0m
[32m  eval_recall = 0.0245[0m
[32m  ********************[0m
[32m  Best f1:0.0188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.01742:  57%|█████▋    | 16/28 [00:54<00:55,  4.60s/it]epoch 0 loss 4.93614:  57%|█████▋    | 16/28 [00:54<00:55,  4.60s/it]epoch 0 loss 4.93614:  61%|██████    | 17/28 [00:54<00:36,  3.34s/it]epoch 0 loss 4.85821:  61%|██████    | 17/28 [00:55<00:36,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1684[0m
[32m  eval_f1 = 0.0237[0m
[32m  eval_mcc = 0.1185[0m
[32m  eval_precision = 0.0458[0m
[32m  eval_recall = 0.0286[0m
[32m  ********************[0m
[32m  Best f1:0.0237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.85821:  64%|██████▍   | 18/28 [01:01<00:44,  4.48s/it]epoch 0 loss 4.78685:  64%|██████▍   | 18/28 [01:02<00:44,  4.48s/it]epoch 0 loss 4.78685:  68%|██████▊   | 19/28 [01:02<00:29,  3.26s/it]epoch 0 loss 4.71186:  68%|██████▊   | 19/28 [01:02<00:29,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2051[0m
[32m  eval_f1 = 0.0289[0m
[32m  eval_mcc = 0.157[0m
[32m  eval_precision = 0.0541[0m
[32m  eval_recall = 0.0316[0m
[32m  ********************[0m
[32m  Best f1:0.0289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.71186:  71%|███████▏  | 20/28 [01:10<00:38,  4.85s/it]epoch 0 loss 4.64098:  71%|███████▏  | 20/28 [01:11<00:38,  4.85s/it]epoch 0 loss 4.64098:  75%|███████▌  | 21/28 [01:11<00:24,  3.52s/it]epoch 0 loss 4.56829:  75%|███████▌  | 21/28 [01:11<00:24,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2629[0m
[32m  eval_f1 = 0.0321[0m
[32m  eval_mcc = 0.2114[0m
[32m  eval_precision = 0.0536[0m
[32m  eval_recall = 0.0356[0m
[32m  ********************[0m
[32m  Best f1:0.0321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.56829:  79%|███████▊  | 22/28 [01:19<00:28,  4.79s/it]epoch 0 loss 4.49958:  79%|███████▊  | 22/28 [01:19<00:28,  4.79s/it]epoch 0 loss 4.49958:  82%|████████▏ | 23/28 [01:19<00:17,  3.48s/it]epoch 0 loss 4.43938:  82%|████████▏ | 23/28 [01:19<00:17,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3257[0m
[32m  eval_f1 = 0.0437[0m
[32m  eval_mcc = 0.2734[0m
[32m  eval_precision = 0.0596[0m
[32m  eval_recall = 0.0462[0m
[32m  ********************[0m
[32m  Best f1:0.0437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.43938:  86%|████████▌ | 24/28 [01:26<00:18,  4.54s/it]epoch 0 loss 4.38872:  86%|████████▌ | 24/28 [01:26<00:18,  4.54s/it]epoch 0 loss 4.38872:  89%|████████▉ | 25/28 [01:26<00:09,  3.31s/it]epoch 0 loss 4.32973:  89%|████████▉ | 25/28 [01:27<00:09,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3675[0m
[32m  eval_f1 = 0.0824[0m
[32m  eval_mcc = 0.3335[0m
[32m  eval_precision = 0.1262[0m
[32m  eval_recall = 0.0757[0m
[32m  ********************[0m
[32m  Best f1:0.0824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.32973:  93%|█████████▎| 26/28 [01:33<00:08,  4.22s/it]epoch 0 loss 4.27251:  93%|█████████▎| 26/28 [01:33<00:08,  4.22s/it]epoch 0 loss 4.27251:  96%|█████████▋| 27/28 [01:33<00:03,  3.08s/it]epoch 0 loss 4.21661:  96%|█████████▋| 27/28 [01:33<00:03,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3804[0m
[32m  eval_f1 = 0.0952[0m
[32m  eval_mcc = 0.3634[0m
[32m  eval_precision = 0.1355[0m
[32m  eval_recall = 0.0863[0m
[32m  ********************[0m
[32m  Best f1:0.0952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3634[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.21661: 100%|██████████| 28/28 [01:40<00:00,  4.06s/it]epoch 0 loss 4.21661: 100%|██████████| 28/28 [01:40<00:00,  3.58s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.52283:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.52283:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.56046:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.421[0m
[32m  eval_f1 = 0.1146[0m
[32m  eval_mcc = 0.4071[0m
[32m  eval_precision = 0.1574[0m
[32m  eval_recall = 0.1051[0m
[32m  ********************[0m
[32m  Best f1:0.1146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.56046:   7%|▋         | 2/28 [00:06<01:44,  4.02s/it]epoch 1 loss 2.54271:   7%|▋         | 2/28 [00:07<01:44,  4.02s/it]epoch 1 loss 2.54271:  11%|█         | 3/28 [00:07<00:59,  2.38s/it]epoch 1 loss 2.52064:  11%|█         | 3/28 [00:07<00:59,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4786[0m
[32m  eval_f1 = 0.1356[0m
[32m  eval_mcc = 0.4554[0m
[32m  eval_precision = 0.1854[0m
[32m  eval_recall = 0.1294[0m
[32m  ********************[0m
[32m  Best f1:0.1356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.52064:  14%|█▍        | 4/28 [00:13<01:37,  4.05s/it]epoch 1 loss 2.46001:  14%|█▍        | 4/28 [00:14<01:37,  4.05s/it]epoch 1 loss 2.46001:  18%|█▊        | 5/28 [00:14<01:03,  2.74s/it]epoch 1 loss 2.44539:  18%|█▊        | 5/28 [00:14<01:03,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5277[0m
[32m  eval_f1 = 0.1476[0m
[32m  eval_mcc = 0.5003[0m
[32m  eval_precision = 0.208[0m
[32m  eval_recall = 0.1451[0m
[32m  ********************[0m
[32m  Best f1:0.1476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.44539:  21%|██▏       | 6/28 [00:20<01:22,  3.76s/it]epoch 1 loss 2.42505:  21%|██▏       | 6/28 [00:20<01:22,  3.76s/it]epoch 1 loss 2.42505:  25%|██▌       | 7/28 [00:20<00:56,  2.68s/it]epoch 1 loss 2.40965:  25%|██▌       | 7/28 [00:20<00:56,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5536[0m
[32m  eval_f1 = 0.1704[0m
[32m  eval_mcc = 0.529[0m
[32m  eval_precision = 0.223[0m
[32m  eval_recall = 0.1651[0m
[32m  ********************[0m
[32m  Best f1:0.1704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.40965:  29%|██▊       | 8/28 [00:27<01:18,  3.91s/it]epoch 1 loss 2.37933:  29%|██▊       | 8/28 [00:27<01:18,  3.91s/it]epoch 1 loss 2.37933:  32%|███▏      | 9/28 [00:27<00:53,  2.82s/it]epoch 1 loss 2.37521:  32%|███▏      | 9/28 [00:27<00:53,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5641[0m
[32m  eval_f1 = 0.1723[0m
[32m  eval_mcc = 0.5393[0m
[32m  eval_precision = 0.2227[0m
[32m  eval_recall = 0.1679[0m
[32m  ********************[0m
[32m  Best f1:0.1723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.37521:  36%|███▌      | 10/28 [00:37<01:27,  4.89s/it]epoch 1 loss 2.35922:  36%|███▌      | 10/28 [00:37<01:27,  4.89s/it]epoch 1 loss 2.35922:  39%|███▉      | 11/28 [00:37<00:59,  3.52s/it]epoch 1 loss 2.32569:  39%|███▉      | 11/28 [00:37<00:59,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5718[0m
[32m  eval_f1 = 0.1764[0m
[32m  eval_mcc = 0.5465[0m
[32m  eval_precision = 0.2297[0m
[32m  eval_recall = 0.1703[0m
[32m  ********************[0m
[32m  Best f1:0.1764[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32569:  43%|████▎     | 12/28 [00:50<01:39,  6.25s/it]epoch 1 loss 2.28366:  43%|████▎     | 12/28 [00:50<01:39,  6.25s/it]epoch 1 loss 2.28366:  46%|████▋     | 13/28 [00:50<01:07,  4.48s/it]epoch 1 loss 2.25202:  46%|████▋     | 13/28 [00:50<01:07,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5735[0m
[32m  eval_f1 = 0.1768[0m
[32m  eval_mcc = 0.5484[0m
[32m  eval_precision = 0.232[0m
[32m  eval_recall = 0.17[0m
[32m  ********************[0m
[32m  Best f1:0.1768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.25202:  50%|█████     | 14/28 [01:03<01:37,  6.96s/it]epoch 1 loss 2.2303:  50%|█████     | 14/28 [01:03<01:37,  6.96s/it] epoch 1 loss 2.2303:  54%|█████▎    | 15/28 [01:03<01:04,  4.99s/it]epoch 1 loss 2.20317:  54%|█████▎    | 15/28 [01:03<01:04,  4.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.577[0m
[32m  eval_f1 = 0.1797[0m
[32m  eval_mcc = 0.5528[0m
[32m  eval_precision = 0.2402[0m
[32m  eval_recall = 0.1718[0m
[32m  ********************[0m
[32m  Best f1:0.1797[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5528[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20317:  57%|█████▋    | 16/28 [01:16<01:27,  7.30s/it]epoch 1 loss 2.18438:  57%|█████▋    | 16/28 [01:16<01:27,  7.30s/it]epoch 1 loss 2.18438:  61%|██████    | 17/28 [01:16<00:57,  5.23s/it]epoch 1 loss 2.16864:  61%|██████    | 17/28 [01:17<00:57,  5.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5835[0m
[32m  eval_f1 = 0.1871[0m
[32m  eval_mcc = 0.5604[0m
[32m  eval_precision = 0.2545[0m
[32m  eval_recall = 0.178[0m
[32m  ********************[0m
[32m  Best f1:0.1871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16864:  64%|██████▍   | 18/28 [01:28<01:11,  7.17s/it]epoch 1 loss 2.14627:  64%|██████▍   | 18/28 [01:28<01:11,  7.17s/it]epoch 1 loss 2.14627:  68%|██████▊   | 19/28 [01:28<00:46,  5.14s/it]epoch 1 loss 2.12625:  68%|██████▊   | 19/28 [01:29<00:46,  5.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5898[0m
[32m  eval_f1 = 0.194[0m
[32m  eval_mcc = 0.5691[0m
[32m  eval_precision = 0.2639[0m
[32m  eval_recall = 0.1832[0m
[32m  ********************[0m
[32m  Best f1:0.194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12625:  71%|███████▏  | 20/28 [01:37<00:50,  6.29s/it]epoch 1 loss 2.1112:  71%|███████▏  | 20/28 [01:38<00:50,  6.29s/it] epoch 1 loss 2.1112:  75%|███████▌  | 21/28 [01:38<00:31,  4.53s/it]epoch 1 loss 2.09845:  75%|███████▌  | 21/28 [01:38<00:31,  4.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5953[0m
[32m  eval_f1 = 0.2174[0m
[32m  eval_mcc = 0.575[0m
[32m  eval_precision = 0.2691[0m
[32m  eval_recall = 0.2052[0m
[32m  ********************[0m
[32m  Best f1:0.2174[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09845:  79%|███████▊  | 22/28 [01:48<00:38,  6.41s/it]epoch 1 loss 2.08718:  79%|███████▊  | 22/28 [01:49<00:38,  6.41s/it]epoch 1 loss 2.08718:  82%|████████▏ | 23/28 [01:49<00:23,  4.61s/it]epoch 1 loss 2.06633:  82%|████████▏ | 23/28 [01:49<00:23,  4.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5995[0m
[32m  eval_f1 = 0.223[0m
[32m  eval_mcc = 0.5786[0m
[32m  eval_precision = 0.2921[0m
[32m  eval_recall = 0.2111[0m
[32m  ********************[0m
[32m  Best f1:0.223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.06633:  86%|████████▌ | 24/28 [01:58<00:23,  5.90s/it]epoch 1 loss 2.05072:  86%|████████▌ | 24/28 [01:58<00:23,  5.90s/it]epoch 1 loss 2.05072:  89%|████████▉ | 25/28 [01:58<00:12,  4.25s/it]epoch 1 loss 2.03986:  89%|████████▉ | 25/28 [01:59<00:12,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5998[0m
[32m  eval_f1 = 0.227[0m
[32m  eval_mcc = 0.5776[0m
[32m  eval_precision = 0.2875[0m
[32m  eval_recall = 0.2157[0m
[32m  ********************[0m
[32m  Best f1:0.227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.03986:  93%|█████████▎| 26/28 [02:05<00:09,  4.89s/it]epoch 1 loss 2.02602:  93%|█████████▎| 26/28 [02:05<00:09,  4.89s/it]epoch 1 loss 2.02602:  96%|█████████▋| 27/28 [02:05<00:03,  3.55s/it]epoch 1 loss 2.01953:  96%|█████████▋| 27/28 [02:05<00:03,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6045[0m
[32m  eval_f1 = 0.2316[0m
[32m  eval_mcc = 0.5821[0m
[32m  eval_precision = 0.2902[0m
[32m  eval_recall = 0.2201[0m
[32m  ********************[0m
[32m  Best f1:0.2316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5821[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01953: 100%|██████████| 28/28 [02:16<00:00,  5.80s/it]epoch 1 loss 2.01953: 100%|██████████| 28/28 [02:16<00:00,  4.87s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.70988:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.70988:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 2 loss 1.66687:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6058[0m
[32m  eval_f1 = 0.2359[0m
[32m  eval_mcc = 0.583[0m
[32m  eval_precision = 0.2973[0m
[32m  eval_recall = 0.2241[0m
[32m  ********************[0m
[32m  Best f1:0.2359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.66687:   7%|▋         | 2/28 [00:07<01:55,  4.46s/it]epoch 2 loss 1.66121:   7%|▋         | 2/28 [00:08<01:55,  4.46s/it]epoch 2 loss 1.66121:  11%|█         | 3/28 [00:08<01:05,  2.62s/it]epoch 2 loss 1.63108:  11%|█         | 3/28 [00:08<01:05,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6097[0m
[32m  eval_f1 = 0.2436[0m
[32m  eval_mcc = 0.5873[0m
[32m  eval_precision = 0.3122[0m
[32m  eval_recall = 0.2298[0m
[32m  ********************[0m
[32m  Best f1:0.2436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63108:  14%|█▍        | 4/28 [00:15<01:46,  4.42s/it]epoch 2 loss 1.65113:  14%|█▍        | 4/28 [00:15<01:46,  4.42s/it]epoch 2 loss 1.65113:  18%|█▊        | 5/28 [00:15<01:08,  2.98s/it]epoch 2 loss 1.6729:  18%|█▊        | 5/28 [00:16<01:08,  2.98s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6121[0m
[32m  eval_f1 = 0.2428[0m
[32m  eval_mcc = 0.5898[0m
[32m  eval_precision = 0.3222[0m
[32m  eval_recall = 0.2295[0m
[32m  ********************[0m
[32m  Best MCC:0.5898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.6729:  21%|██▏       | 6/28 [00:21<01:23,  3.80s/it]epoch 2 loss 1.67104:  21%|██▏       | 6/28 [00:21<01:23,  3.80s/it]epoch 2 loss 1.67104:  25%|██▌       | 7/28 [00:21<00:56,  2.69s/it]epoch 2 loss 1.63598:  25%|██▌       | 7/28 [00:21<00:56,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6134[0m
[32m  eval_f1 = 0.2448[0m
[32m  eval_mcc = 0.5911[0m
[32m  eval_precision = 0.3303[0m
[32m  eval_recall = 0.2317[0m
[32m  ********************[0m
[32m  Best f1:0.2448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5911[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63598:  29%|██▊       | 8/28 [00:30<01:30,  4.54s/it]epoch 2 loss 1.61025:  29%|██▊       | 8/28 [00:30<01:30,  4.54s/it]epoch 2 loss 1.61025:  32%|███▏      | 9/28 [00:30<01:01,  3.25s/it]epoch 2 loss 1.60561:  32%|███▏      | 9/28 [00:30<01:01,  3.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6131[0m
[32m  eval_f1 = 0.246[0m
[32m  eval_mcc = 0.591[0m
[32m  eval_precision = 0.3348[0m
[32m  eval_recall = 0.2316[0m
[32m  ********************[0m
[32m  Best f1:0.246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.60561:  36%|███▌      | 10/28 [00:36<01:14,  4.14s/it]epoch 2 loss 1.59915:  36%|███▌      | 10/28 [00:37<01:14,  4.14s/it]epoch 2 loss 1.59915:  39%|███▉      | 11/28 [00:37<00:50,  3.00s/it]epoch 2 loss 1.59441:  39%|███▉      | 11/28 [00:37<00:50,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6148[0m
[32m  eval_f1 = 0.2493[0m
[32m  eval_mcc = 0.5934[0m
[32m  eval_precision = 0.3358[0m
[32m  eval_recall = 0.2343[0m
[32m  ********************[0m
[32m  Best f1:0.2493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59441:  43%|████▎     | 12/28 [00:43<01:07,  4.20s/it]epoch 2 loss 1.59532:  43%|████▎     | 12/28 [00:44<01:07,  4.20s/it]epoch 2 loss 1.59532:  46%|████▋     | 13/28 [00:44<00:45,  3.05s/it]epoch 2 loss 1.58771:  46%|████▋     | 13/28 [00:44<00:45,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6194[0m
[32m  eval_f1 = 0.2559[0m
[32m  eval_mcc = 0.5996[0m
[32m  eval_precision = 0.3426[0m
[32m  eval_recall = 0.2392[0m
[32m  ********************[0m
[32m  Best f1:0.2559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58771:  50%|█████     | 14/28 [00:52<01:06,  4.72s/it]epoch 2 loss 1.59676:  50%|█████     | 14/28 [00:53<01:06,  4.72s/it]epoch 2 loss 1.59676:  54%|█████▎    | 15/28 [00:53<00:44,  3.43s/it]epoch 2 loss 1.59097:  54%|█████▎    | 15/28 [00:53<00:44,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6208[0m
[32m  eval_f1 = 0.2643[0m
[32m  eval_mcc = 0.6009[0m
[32m  eval_precision = 0.3521[0m
[32m  eval_recall = 0.2447[0m
[32m  ********************[0m
[32m  Best f1:0.2643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59097:  57%|█████▋    | 16/28 [01:00<00:55,  4.62s/it]epoch 2 loss 1.58391:  57%|█████▋    | 16/28 [01:01<00:55,  4.62s/it]epoch 2 loss 1.58391:  61%|██████    | 17/28 [01:01<00:36,  3.36s/it]epoch 2 loss 1.58136:  61%|██████    | 17/28 [01:01<00:36,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6219[0m
[32m  eval_f1 = 0.2689[0m
[32m  eval_mcc = 0.601[0m
[32m  eval_precision = 0.349[0m
[32m  eval_recall = 0.2499[0m
[32m  ********************[0m
[32m  Best f1:0.2689[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58136:  64%|██████▍   | 18/28 [01:09<00:49,  4.92s/it]epoch 2 loss 1.57931:  64%|██████▍   | 18/28 [01:10<00:49,  4.92s/it]epoch 2 loss 1.57931:  68%|██████▊   | 19/28 [01:10<00:32,  3.57s/it]epoch 2 loss 1.57665:  68%|██████▊   | 19/28 [01:10<00:32,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6234[0m
[32m  eval_f1 = 0.2702[0m
[32m  eval_mcc = 0.6017[0m
[32m  eval_precision = 0.3458[0m
[32m  eval_recall = 0.2521[0m
[32m  ********************[0m
[32m  Best f1:0.2702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57665:  71%|███████▏  | 20/28 [01:18<00:39,  4.88s/it]epoch 2 loss 1.57365:  71%|███████▏  | 20/28 [01:18<00:39,  4.88s/it]epoch 2 loss 1.57365:  75%|███████▌  | 21/28 [01:18<00:24,  3.54s/it]epoch 2 loss 1.56986:  75%|███████▌  | 21/28 [01:18<00:24,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6245[0m
[32m  eval_f1 = 0.271[0m
[32m  eval_mcc = 0.6025[0m
[32m  eval_precision = 0.3438[0m
[32m  eval_recall = 0.2537[0m
[32m  ********************[0m
[32m  Best f1:0.271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56986:  79%|███████▊  | 22/28 [01:27<00:30,  5.09s/it]epoch 2 loss 1.56284:  79%|███████▊  | 22/28 [01:27<00:30,  5.09s/it]epoch 2 loss 1.56284:  82%|████████▏ | 23/28 [01:27<00:18,  3.69s/it]epoch 2 loss 1.55882:  82%|████████▏ | 23/28 [01:28<00:18,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6271[0m
[32m  eval_f1 = 0.2728[0m
[32m  eval_mcc = 0.606[0m
[32m  eval_precision = 0.346[0m
[32m  eval_recall = 0.2551[0m
[32m  ********************[0m
[32m  Best f1:0.2728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55882:  86%|████████▌ | 24/28 [01:36<00:20,  5.16s/it]epoch 2 loss 1.55207:  86%|████████▌ | 24/28 [01:36<00:20,  5.16s/it]epoch 2 loss 1.55207:  89%|████████▉ | 25/28 [01:36<00:11,  3.74s/it]epoch 2 loss 1.55037:  89%|████████▉ | 25/28 [01:37<00:11,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6295[0m
[32m  eval_f1 = 0.276[0m
[32m  eval_mcc = 0.6094[0m
[32m  eval_precision = 0.3472[0m
[32m  eval_recall = 0.2578[0m
[32m  ********************[0m
[32m  Best f1:0.276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6094[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55037:  93%|█████████▎| 26/28 [01:46<00:11,  5.60s/it]epoch 2 loss 1.55239:  93%|█████████▎| 26/28 [01:47<00:11,  5.60s/it]epoch 2 loss 1.55239:  96%|█████████▋| 27/28 [01:47<00:04,  4.05s/it]epoch 2 loss 1.54581:  96%|█████████▋| 27/28 [01:47<00:04,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6311[0m
[32m  eval_f1 = 0.2784[0m
[32m  eval_mcc = 0.6125[0m
[32m  eval_precision = 0.3535[0m
[32m  eval_recall = 0.2593[0m
[32m  ********************[0m
[32m  Best f1:0.2784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54581: 100%|██████████| 28/28 [01:55<00:00,  5.46s/it]epoch 2 loss 1.54581: 100%|██████████| 28/28 [01:55<00:00,  4.13s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.35417:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.35417:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 3 loss 1.35635:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6315[0m
[32m  eval_f1 = 0.2792[0m
[32m  eval_mcc = 0.6134[0m
[32m  eval_precision = 0.3544[0m
[32m  eval_recall = 0.2595[0m
[32m  ********************[0m
[32m  Best f1:0.2792[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6134[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35635:   7%|▋         | 2/28 [00:10<02:37,  6.04s/it]epoch 3 loss 1.39203:   7%|▋         | 2/28 [00:10<02:37,  6.04s/it]epoch 3 loss 1.39203:  11%|█         | 3/28 [00:10<01:26,  3.47s/it]epoch 3 loss 1.42496:  11%|█         | 3/28 [00:11<01:26,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6324[0m
[32m  eval_f1 = 0.2795[0m
[32m  eval_mcc = 0.6135[0m
[32m  eval_precision = 0.3508[0m
[32m  eval_recall = 0.2597[0m
[32m  ********************[0m
[32m  Best f1:0.2795[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42496:  14%|█▍        | 4/28 [00:26<03:22,  8.42s/it]epoch 3 loss 1.4516:  14%|█▍        | 4/28 [00:27<03:22,  8.42s/it] epoch 3 loss 1.4516:  18%|█▊        | 5/28 [00:27<02:07,  5.54s/it]epoch 3 loss 1.47407:  18%|█▊        | 5/28 [00:27<02:07,  5.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6336[0m
[32m  eval_f1 = 0.2807[0m
[32m  eval_mcc = 0.6132[0m
[32m  eval_precision = 0.3564[0m
[32m  eval_recall = 0.2615[0m
[32m  ********************[0m
[32m  Best f1:0.2807[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.47407:  21%|██▏       | 6/28 [00:32<01:58,  5.41s/it]epoch 3 loss 1.46939:  21%|██▏       | 6/28 [00:32<01:58,  5.41s/it]epoch 3 loss 1.46939:  25%|██▌       | 7/28 [00:32<01:19,  3.77s/it]epoch 3 loss 1.4663:  25%|██▌       | 7/28 [00:33<01:19,  3.77s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6338[0m
[32m  eval_f1 = 0.2815[0m
[32m  eval_mcc = 0.6126[0m
[32m  eval_precision = 0.3546[0m
[32m  eval_recall = 0.2625[0m
[32m  ********************[0m
[32m  Best f1:0.2815[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.4663:  29%|██▊       | 8/28 [00:40<01:42,  5.11s/it]epoch 3 loss 1.46626:  29%|██▊       | 8/28 [00:41<01:42,  5.11s/it]epoch 3 loss 1.46626:  32%|███▏      | 9/28 [00:41<01:09,  3.65s/it]epoch 3 loss 1.47277:  32%|███▏      | 9/28 [00:41<01:09,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.635[0m
[32m  eval_f1 = 0.2832[0m
[32m  eval_mcc = 0.6138[0m
[32m  eval_precision = 0.3661[0m
[32m  eval_recall = 0.2638[0m
[32m  ********************[0m
[32m  Best f1:0.2832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47277:  36%|███▌      | 10/28 [00:50<01:36,  5.37s/it]epoch 3 loss 1.46971:  36%|███▌      | 10/28 [00:50<01:36,  5.37s/it]epoch 3 loss 1.46971:  39%|███▉      | 11/28 [00:50<01:05,  3.86s/it]epoch 3 loss 1.47125:  39%|███▉      | 11/28 [00:51<01:05,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6359[0m
[32m  eval_f1 = 0.2855[0m
[32m  eval_mcc = 0.615[0m
[32m  eval_precision = 0.3686[0m
[32m  eval_recall = 0.2664[0m
[32m  ********************[0m
[32m  Best f1:0.2855[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.615[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47125:  43%|████▎     | 12/28 [01:02<01:41,  6.36s/it]epoch 3 loss 1.46128:  43%|████▎     | 12/28 [01:03<01:41,  6.36s/it]epoch 3 loss 1.46128:  46%|████▋     | 13/28 [01:03<01:08,  4.56s/it]epoch 3 loss 1.45028:  46%|████▋     | 13/28 [01:03<01:08,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.2864[0m
[32m  eval_mcc = 0.6166[0m
[32m  eval_precision = 0.3738[0m
[32m  eval_recall = 0.2671[0m
[32m  ********************[0m
[32m  Best f1:0.2864[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45028:  50%|█████     | 14/28 [01:11<01:18,  5.62s/it]epoch 3 loss 1.45671:  50%|█████     | 14/28 [01:11<01:18,  5.62s/it]epoch 3 loss 1.45671:  54%|█████▎    | 15/28 [01:11<00:52,  4.05s/it]epoch 3 loss 1.45521:  54%|█████▎    | 15/28 [01:12<00:52,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6373[0m
[32m  eval_f1 = 0.2864[0m
[32m  eval_mcc = 0.6168[0m
[32m  eval_precision = 0.3737[0m
[32m  eval_recall = 0.2671[0m
[32m  ********************[0m
[32m  Best MCC:0.6168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45521:  57%|█████▋    | 16/28 [01:16<00:51,  4.33s/it]epoch 3 loss 1.45654:  57%|█████▋    | 16/28 [01:17<00:51,  4.33s/it]epoch 3 loss 1.45654:  61%|██████    | 17/28 [01:17<00:34,  3.15s/it]epoch 3 loss 1.44817:  61%|██████    | 17/28 [01:17<00:34,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.2868[0m
[32m  eval_mcc = 0.6171[0m
[32m  eval_precision = 0.3731[0m
[32m  eval_recall = 0.2675[0m
[32m  ********************[0m
[32m  Best f1:0.2868[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44817:  64%|██████▍   | 18/28 [01:27<00:52,  5.28s/it]epoch 3 loss 1.45138:  64%|██████▍   | 18/28 [01:27<00:52,  5.28s/it]epoch 3 loss 1.45138:  68%|██████▊   | 19/28 [01:27<00:34,  3.82s/it]epoch 3 loss 1.45262:  68%|██████▊   | 19/28 [01:28<00:34,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.2888[0m
[32m  eval_mcc = 0.6171[0m
[32m  eval_precision = 0.3829[0m
[32m  eval_recall = 0.2681[0m
[32m  ********************[0m
[32m  Best f1:0.2888[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45262:  71%|███████▏  | 20/28 [01:36<00:41,  5.24s/it]epoch 3 loss 1.44736:  71%|███████▏  | 20/28 [01:36<00:41,  5.24s/it]epoch 3 loss 1.44736:  75%|███████▌  | 21/28 [01:36<00:26,  3.80s/it]epoch 3 loss 1.45022:  75%|███████▌  | 21/28 [01:37<00:26,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6386[0m
[32m  eval_f1 = 0.2899[0m
[32m  eval_mcc = 0.6186[0m
[32m  eval_precision = 0.3845[0m
[32m  eval_recall = 0.2687[0m
[32m  ********************[0m
[32m  Best f1:0.2899[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45022:  79%|███████▊  | 22/28 [01:44<00:28,  4.81s/it]epoch 3 loss 1.44673:  79%|███████▊  | 22/28 [01:44<00:28,  4.81s/it]epoch 3 loss 1.44673:  82%|████████▏ | 23/28 [01:44<00:17,  3.49s/it]epoch 3 loss 1.44724:  82%|████████▏ | 23/28 [01:44<00:17,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.292[0m
[32m  eval_mcc = 0.6188[0m
[32m  eval_precision = 0.3831[0m
[32m  eval_recall = 0.2704[0m
[32m  ********************[0m
[32m  Best f1:0.292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44724:  86%|████████▌ | 24/28 [01:51<00:18,  4.59s/it]epoch 3 loss 1.44377:  86%|████████▌ | 24/28 [01:52<00:18,  4.59s/it]epoch 3 loss 1.44377:  89%|████████▉ | 25/28 [01:52<00:10,  3.34s/it]epoch 3 loss 1.44052:  89%|████████▉ | 25/28 [01:52<00:10,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6395[0m
[32m  eval_f1 = 0.2931[0m
[32m  eval_mcc = 0.6193[0m
[32m  eval_precision = 0.3899[0m
[32m  eval_recall = 0.2713[0m
[32m  ********************[0m
[32m  Best f1:0.2931[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44052:  93%|█████████▎| 26/28 [01:59<00:09,  4.55s/it]epoch 3 loss 1.44064:  93%|█████████▎| 26/28 [01:59<00:09,  4.55s/it]epoch 3 loss 1.44064:  96%|█████████▋| 27/28 [01:59<00:03,  3.31s/it]epoch 3 loss 1.44022:  96%|█████████▋| 27/28 [02:00<00:03,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.64[0m
[32m  eval_f1 = 0.296[0m
[32m  eval_mcc = 0.6198[0m
[32m  eval_precision = 0.3903[0m
[32m  eval_recall = 0.2733[0m
[32m  ********************[0m
[32m  Best f1:0.296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44022: 100%|██████████| 28/28 [02:09<00:00,  5.07s/it]epoch 3 loss 1.44022: 100%|██████████| 28/28 [02:09<00:00,  4.61s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.3777:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.3777:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 4 loss 1.36477:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6409[0m
[32m  eval_f1 = 0.298[0m
[32m  eval_mcc = 0.6208[0m
[32m  eval_precision = 0.3996[0m
[32m  eval_recall = 0.2746[0m
[32m  ********************[0m
[32m  Best f1:0.298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36477:   7%|▋         | 2/28 [00:07<01:58,  4.56s/it]epoch 4 loss 1.34577:   7%|▋         | 2/28 [00:08<01:58,  4.56s/it]epoch 4 loss 1.34577:  11%|█         | 3/28 [00:08<01:06,  2.67s/it]epoch 4 loss 1.37387:  11%|█         | 3/28 [00:08<01:06,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.641[0m
[32m  eval_f1 = 0.3002[0m
[32m  eval_mcc = 0.6213[0m
[32m  eval_precision = 0.4006[0m
[32m  eval_recall = 0.2761[0m
[32m  ********************[0m
[32m  Best f1:0.3002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37387:  14%|█▍        | 4/28 [00:16<01:58,  4.95s/it]epoch 4 loss 1.3391:  14%|█▍        | 4/28 [00:17<01:58,  4.95s/it] epoch 4 loss 1.3391:  18%|█▊        | 5/28 [00:17<01:16,  3.32s/it]epoch 4 loss 1.35622:  18%|█▊        | 5/28 [00:17<01:16,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6404[0m
[32m  eval_f1 = 0.3008[0m
[32m  eval_mcc = 0.6211[0m
[32m  eval_precision = 0.4022[0m
[32m  eval_recall = 0.2762[0m
[32m  ********************[0m
[32m  Best f1:0.3008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.35622:  21%|██▏       | 6/28 [00:22<01:24,  3.85s/it]epoch 4 loss 1.36449:  21%|██▏       | 6/28 [00:22<01:24,  3.85s/it]epoch 4 loss 1.36449:  25%|██▌       | 7/28 [00:22<00:57,  2.72s/it]epoch 4 loss 1.36417:  25%|██▌       | 7/28 [00:22<00:57,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6408[0m
[32m  eval_f1 = 0.3013[0m
[32m  eval_mcc = 0.6215[0m
[32m  eval_precision = 0.4027[0m
[32m  eval_recall = 0.2765[0m
[32m  ********************[0m
[32m  Best f1:0.3013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36417:  29%|██▊       | 8/28 [00:33<01:48,  5.42s/it]epoch 4 loss 1.36136:  29%|██▊       | 8/28 [00:34<01:48,  5.42s/it]epoch 4 loss 1.36136:  32%|███▏      | 9/28 [00:34<01:13,  3.86s/it]epoch 4 loss 1.35632:  32%|███▏      | 9/28 [00:34<01:13,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6411[0m
[32m  eval_f1 = 0.3018[0m
[32m  eval_mcc = 0.6218[0m
[32m  eval_precision = 0.4032[0m
[32m  eval_recall = 0.277[0m
[32m  ********************[0m
[32m  Best f1:0.3018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35632:  36%|███▌      | 10/28 [00:41<01:32,  5.11s/it]epoch 4 loss 1.35901:  36%|███▌      | 10/28 [00:42<01:32,  5.11s/it]epoch 4 loss 1.35901:  39%|███▉      | 11/28 [00:42<01:02,  3.68s/it]epoch 4 loss 1.37215:  39%|███▉      | 11/28 [00:42<01:02,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6414[0m
[32m  eval_f1 = 0.3014[0m
[32m  eval_mcc = 0.622[0m
[32m  eval_precision = 0.402[0m
[32m  eval_recall = 0.2769[0m
[32m  ********************[0m
[32m  Best MCC:0.622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37215:  43%|████▎     | 12/28 [00:47<01:05,  4.07s/it]epoch 4 loss 1.37543:  43%|████▎     | 12/28 [00:47<01:05,  4.07s/it]epoch 4 loss 1.37543:  46%|████▋     | 13/28 [00:47<00:44,  2.96s/it]epoch 4 loss 1.37805:  46%|████▋     | 13/28 [00:48<00:44,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6418[0m
[32m  eval_f1 = 0.3026[0m
[32m  eval_mcc = 0.6222[0m
[32m  eval_precision = 0.4023[0m
[32m  eval_recall = 0.2783[0m
[32m  ********************[0m
[32m  Best f1:0.3026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37805:  50%|█████     | 14/28 [00:56<01:05,  4.70s/it]epoch 4 loss 1.3814:  50%|█████     | 14/28 [00:56<01:05,  4.70s/it] epoch 4 loss 1.3814:  54%|█████▎    | 15/28 [00:56<00:44,  3.41s/it]epoch 4 loss 1.38352:  54%|█████▎    | 15/28 [00:57<00:44,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6421[0m
[32m  eval_f1 = 0.3029[0m
[32m  eval_mcc = 0.6222[0m
[32m  eval_precision = 0.4021[0m
[32m  eval_recall = 0.2787[0m
[32m  ********************[0m
[32m  Best f1:0.3029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38352:  57%|█████▋    | 16/28 [01:05<00:59,  4.99s/it]epoch 4 loss 1.38593:  57%|█████▋    | 16/28 [01:06<00:59,  4.99s/it]epoch 4 loss 1.38593:  61%|██████    | 17/28 [01:06<00:39,  3.61s/it]epoch 4 loss 1.39907:  61%|██████    | 17/28 [01:06<00:39,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6422[0m
[32m  eval_f1 = 0.3035[0m
[32m  eval_mcc = 0.6221[0m
[32m  eval_precision = 0.4013[0m
[32m  eval_recall = 0.2794[0m
[32m  ********************[0m
[32m  Best f1:0.3035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.39907:  64%|██████▍   | 18/28 [01:11<00:40,  4.03s/it]epoch 4 loss 1.39753:  64%|██████▍   | 18/28 [01:11<00:40,  4.03s/it]epoch 4 loss 1.39753:  68%|██████▊   | 19/28 [01:11<00:26,  2.94s/it]epoch 4 loss 1.39779:  68%|██████▊   | 19/28 [01:11<00:26,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6422[0m
[32m  eval_f1 = 0.304[0m
[32m  eval_mcc = 0.6218[0m
[32m  eval_precision = 0.4002[0m
[32m  eval_recall = 0.2799[0m
[32m  ********************[0m
[32m  Best f1:0.304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.39779:  71%|███████▏  | 20/28 [01:16<00:27,  3.50s/it]epoch 4 loss 1.39283:  71%|███████▏  | 20/28 [01:16<00:27,  3.50s/it]epoch 4 loss 1.39283:  75%|███████▌  | 21/28 [01:16<00:17,  2.57s/it]epoch 4 loss 1.39869:  75%|███████▌  | 21/28 [01:17<00:17,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6422[0m
[32m  eval_f1 = 0.3043[0m
[32m  eval_mcc = 0.6216[0m
[32m  eval_precision = 0.3989[0m
[32m  eval_recall = 0.2804[0m
[32m  ********************[0m
[32m  Best f1:0.3043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.39869:  79%|███████▊  | 22/28 [01:21<00:19,  3.28s/it]epoch 4 loss 1.39759:  79%|███████▊  | 22/28 [01:21<00:19,  3.28s/it]epoch 4 loss 1.39759:  82%|████████▏ | 23/28 [01:21<00:12,  2.42s/it]epoch 4 loss 1.3966:  82%|████████▏ | 23/28 [01:22<00:12,  2.42s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6422[0m
[32m  eval_f1 = 0.3043[0m
[32m  eval_mcc = 0.6215[0m
[32m  eval_precision = 0.3984[0m
[32m  eval_recall = 0.2805[0m

epoch 4 loss 1.3966:  86%|████████▌ | 24/28 [01:25<00:11,  2.83s/it]epoch 4 loss 1.39759:  86%|████████▌ | 24/28 [01:26<00:11,  2.83s/it]epoch 4 loss 1.39759:  89%|████████▉ | 25/28 [01:26<00:06,  2.10s/it]epoch 4 loss 1.39603:  89%|████████▉ | 25/28 [01:26<00:06,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6423[0m
[32m  eval_f1 = 0.3042[0m
[32m  eval_mcc = 0.6216[0m
[32m  eval_precision = 0.3984[0m
[32m  eval_recall = 0.2805[0m

epoch 4 loss 1.39603:  93%|█████████▎| 26/28 [01:29<00:05,  2.61s/it]epoch 4 loss 1.39994:  93%|█████████▎| 26/28 [01:30<00:05,  2.61s/it]epoch 4 loss 1.39994:  96%|█████████▋| 27/28 [01:30<00:01,  1.94s/it]epoch 4 loss 1.39617:  96%|█████████▋| 27/28 [01:30<00:01,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.3045[0m
[32m  eval_mcc = 0.622[0m
[32m  eval_precision = 0.3986[0m
[32m  eval_recall = 0.2808[0m
[32m  ********************[0m
[32m  Best f1:0.3045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.39617: 100%|██████████| 28/28 [01:34<00:00,  2.72s/it]epoch 4 loss 1.39617: 100%|██████████| 28/28 [01:34<00:00,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.3045[0m
[32m  eval_mcc = 0.622[0m
[32m  eval_precision = 0.3986[0m
[32m  eval_recall = 0.2808[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6242[0m
[32m  eval_f1 = 0.2386[0m
[32m  eval_mcc = 0.6046[0m
[32m  eval_precision = 0.3149[0m
[32m  eval_recall = 0.2226[0m

