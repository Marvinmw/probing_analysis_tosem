[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=1, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1', posratio=0.5, seed=206, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.62017:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.62017:   4%|▎         | 1/28 [00:00<00:21,  1.26it/s]epoch 0 loss 5.62349:   4%|▎         | 1/28 [00:01<00:21,  1.26it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0011[0m
[32m  eval_f1 = 0.0003[0m
[32m  eval_mcc = -0.0025[0m
[32m  eval_precision = 0.0027[0m
[32m  eval_recall = 0.0011[0m
[32m  ********************[0m
[32m  Best f1:0.0003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.62349:   7%|▋         | 2/28 [00:05<01:22,  3.16s/it]epoch 0 loss 5.61514:   7%|▋         | 2/28 [00:06<01:22,  3.16s/it]epoch 0 loss 5.61514:  11%|█         | 3/28 [00:06<00:47,  1.90s/it]epoch 0 loss 5.60209:  11%|█         | 3/28 [00:06<00:47,  1.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0018[0m
[32m  eval_f1 = 0.0005[0m
[32m  eval_mcc = -0.0036[0m
[32m  eval_precision = 0.0039[0m
[32m  eval_recall = 0.0013[0m
[32m  ********************[0m
[32m  Best f1:0.0005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.60209:  14%|█▍        | 4/28 [00:11<01:16,  3.17s/it]epoch 0 loss 5.57581:  14%|█▍        | 4/28 [00:11<01:16,  3.17s/it]epoch 0 loss 5.57581:  18%|█▊        | 5/28 [00:11<00:49,  2.17s/it]epoch 0 loss 5.55115:  18%|█▊        | 5/28 [00:11<00:49,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0059[0m
[32m  eval_f1 = 0.0013[0m
[32m  eval_mcc = -0.0056[0m
[32m  eval_precision = 0.0038[0m
[32m  eval_recall = 0.002[0m
[32m  ********************[0m
[32m  Best f1:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.55115:  21%|██▏       | 6/28 [00:16<01:11,  3.26s/it]epoch 0 loss 5.51659:  21%|██▏       | 6/28 [00:17<01:11,  3.26s/it]epoch 0 loss 5.51659:  25%|██▌       | 7/28 [00:17<00:48,  2.32s/it]epoch 0 loss 5.47591:  25%|██▌       | 7/28 [00:17<00:48,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0261[0m
[32m  eval_f1 = 0.004[0m
[32m  eval_mcc = 0.0016[0m
[32m  eval_precision = 0.0076[0m
[32m  eval_recall = 0.004[0m
[32m  ********************[0m
[32m  Best f1:0.004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.47591:  29%|██▊       | 8/28 [00:23<01:08,  3.41s/it]epoch 0 loss 5.43186:  29%|██▊       | 8/28 [00:23<01:08,  3.41s/it]epoch 0 loss 5.43186:  32%|███▏      | 9/28 [00:23<00:47,  2.48s/it]epoch 0 loss 5.38002:  32%|███▏      | 9/28 [00:23<00:47,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0536[0m
[32m  eval_f1 = 0.0083[0m
[32m  eval_mcc = 0.0136[0m
[32m  eval_precision = 0.0114[0m
[32m  eval_recall = 0.0102[0m
[32m  ********************[0m
[32m  Best f1:0.0083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.38002:  36%|███▌      | 10/28 [00:30<01:09,  3.84s/it]epoch 0 loss 5.32207:  36%|███▌      | 10/28 [00:30<01:09,  3.84s/it]epoch 0 loss 5.32207:  39%|███▉      | 11/28 [00:30<00:47,  2.80s/it]epoch 0 loss 5.25947:  39%|███▉      | 11/28 [00:31<00:47,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.094[0m
[32m  eval_f1 = 0.0222[0m
[32m  eval_mcc = 0.0463[0m
[32m  eval_precision = 0.0348[0m
[32m  eval_recall = 0.0252[0m
[32m  ********************[0m
[32m  Best f1:0.0222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0463[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.25947:  43%|████▎     | 12/28 [00:37<01:05,  4.07s/it]epoch 0 loss 5.19607:  43%|████▎     | 12/28 [00:38<01:05,  4.07s/it]epoch 0 loss 5.19607:  46%|████▋     | 13/28 [00:38<00:44,  2.97s/it]epoch 0 loss 5.1267:  46%|████▋     | 13/28 [00:38<00:44,  2.97s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.128[0m
[32m  eval_f1 = 0.0291[0m
[32m  eval_mcc = 0.077[0m
[32m  eval_precision = 0.0397[0m
[32m  eval_recall = 0.033[0m
[32m  ********************[0m
[32m  Best f1:0.0291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.077[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.1267:  50%|█████     | 14/28 [00:46<01:05,  4.67s/it]epoch 0 loss 5.05173:  50%|█████     | 14/28 [00:47<01:05,  4.67s/it]epoch 0 loss 5.05173:  54%|█████▎    | 15/28 [00:47<00:44,  3.39s/it]epoch 0 loss 4.97679:  54%|█████▎    | 15/28 [00:47<00:44,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1723[0m
[32m  eval_f1 = 0.0421[0m
[32m  eval_mcc = 0.1198[0m
[32m  eval_precision = 0.0608[0m
[32m  eval_recall = 0.0448[0m
[32m  ********************[0m
[32m  Best f1:0.0421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.97679:  57%|█████▋    | 16/28 [00:54<00:55,  4.59s/it]epoch 0 loss 4.90288:  57%|█████▋    | 16/28 [00:55<00:55,  4.59s/it]epoch 0 loss 4.90288:  61%|██████    | 17/28 [00:55<00:36,  3.33s/it]epoch 0 loss 4.82624:  61%|██████    | 17/28 [00:55<00:36,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.236[0m
[32m  eval_f1 = 0.0647[0m
[32m  eval_mcc = 0.184[0m
[32m  eval_precision = 0.0959[0m
[32m  eval_recall = 0.0629[0m
[32m  ********************[0m
[32m  Best f1:0.0647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.82624:  64%|██████▍   | 18/28 [01:03<00:48,  4.85s/it]epoch 0 loss 4.75011:  64%|██████▍   | 18/28 [01:03<00:48,  4.85s/it]epoch 0 loss 4.75011:  68%|██████▊   | 19/28 [01:03<00:31,  3.53s/it]epoch 0 loss 4.67505:  68%|██████▊   | 19/28 [01:04<00:31,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2982[0m
[32m  eval_f1 = 0.0888[0m
[32m  eval_mcc = 0.2489[0m
[32m  eval_precision = 0.122[0m
[32m  eval_recall = 0.0831[0m
[32m  ********************[0m
[32m  Best f1:0.0888[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.67505:  71%|███████▏  | 20/28 [01:11<00:38,  4.87s/it]epoch 0 loss 4.59296:  71%|███████▏  | 20/28 [01:12<00:38,  4.87s/it]epoch 0 loss 4.59296:  75%|███████▌  | 21/28 [01:12<00:24,  3.53s/it]epoch 0 loss 4.51972:  75%|███████▌  | 21/28 [01:12<00:24,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3625[0m
[32m  eval_f1 = 0.1042[0m
[32m  eval_mcc = 0.3184[0m
[32m  eval_precision = 0.1553[0m
[32m  eval_recall = 0.0949[0m
[32m  ********************[0m
[32m  Best f1:0.1042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.51972:  79%|███████▊  | 22/28 [01:18<00:26,  4.43s/it]epoch 0 loss 4.44367:  79%|███████▊  | 22/28 [01:19<00:26,  4.43s/it]epoch 0 loss 4.44367:  82%|████████▏ | 23/28 [01:19<00:16,  3.23s/it]epoch 0 loss 4.37493:  82%|████████▏ | 23/28 [01:19<00:16,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4117[0m
[32m  eval_f1 = 0.1116[0m
[32m  eval_mcc = 0.3726[0m
[32m  eval_precision = 0.1612[0m
[32m  eval_recall = 0.1019[0m
[32m  ********************[0m
[32m  Best f1:0.1116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3726[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.37493:  86%|████████▌ | 24/28 [01:25<00:16,  4.25s/it]epoch 0 loss 4.30797:  86%|████████▌ | 24/28 [01:26<00:16,  4.25s/it]epoch 0 loss 4.30797:  89%|████████▉ | 25/28 [01:26<00:09,  3.10s/it]epoch 0 loss 4.2364:  89%|████████▉ | 25/28 [01:26<00:09,  3.10s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4504[0m
[32m  eval_f1 = 0.1207[0m
[32m  eval_mcc = 0.4148[0m
[32m  eval_precision = 0.1654[0m
[32m  eval_recall = 0.1117[0m
[32m  ********************[0m
[32m  Best f1:0.1207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.2364:  93%|█████████▎| 26/28 [01:32<00:08,  4.18s/it]epoch 0 loss 4.16756:  93%|█████████▎| 26/28 [01:33<00:08,  4.18s/it]epoch 0 loss 4.16756:  96%|█████████▋| 27/28 [01:33<00:03,  3.06s/it]epoch 0 loss 4.10421:  96%|█████████▋| 27/28 [01:33<00:03,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.479[0m
[32m  eval_f1 = 0.1297[0m
[32m  eval_mcc = 0.4458[0m
[32m  eval_precision = 0.1747[0m
[32m  eval_recall = 0.1213[0m
[32m  ********************[0m
[32m  Best f1:0.1297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.10421: 100%|██████████| 28/28 [01:42<00:00,  4.82s/it]epoch 0 loss 4.10421: 100%|██████████| 28/28 [01:42<00:00,  3.65s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.53324:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.53324:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 1 loss 2.32437:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5133[0m
[32m  eval_f1 = 0.1441[0m
[32m  eval_mcc = 0.4827[0m
[32m  eval_precision = 0.1992[0m
[32m  eval_recall = 0.1378[0m
[32m  ********************[0m
[32m  Best f1:0.1441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32437:   7%|▋         | 2/28 [00:12<03:15,  7.52s/it]epoch 1 loss 2.21318:   7%|▋         | 2/28 [00:13<03:15,  7.52s/it]epoch 1 loss 2.21318:  11%|█         | 3/28 [00:13<01:46,  4.28s/it]epoch 1 loss 2.16463:  11%|█         | 3/28 [00:13<01:46,  4.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5439[0m
[32m  eval_f1 = 0.1638[0m
[32m  eval_mcc = 0.5158[0m
[32m  eval_precision = 0.2111[0m
[32m  eval_recall = 0.1581[0m
[32m  ********************[0m
[32m  Best f1:0.1638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16463:  14%|█▍        | 4/28 [00:22<02:30,  6.29s/it]epoch 1 loss 2.11744:  14%|█▍        | 4/28 [00:23<02:30,  6.29s/it]epoch 1 loss 2.11744:  18%|█▊        | 5/28 [00:23<01:35,  4.17s/it]epoch 1 loss 2.07989:  18%|█▊        | 5/28 [00:23<01:35,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5698[0m
[32m  eval_f1 = 0.179[0m
[32m  eval_mcc = 0.5443[0m
[32m  eval_precision = 0.2187[0m
[32m  eval_recall = 0.1731[0m
[32m  ********************[0m
[32m  Best f1:0.179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07989:  21%|██▏       | 6/28 [00:32<02:09,  5.87s/it]epoch 1 loss 2.02836:  21%|██▏       | 6/28 [00:32<02:09,  5.87s/it]epoch 1 loss 2.02836:  25%|██▌       | 7/28 [00:32<01:25,  4.09s/it]epoch 1 loss 2.01472:  25%|██▌       | 7/28 [00:33<01:25,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5826[0m
[32m  eval_f1 = 0.1892[0m
[32m  eval_mcc = 0.5585[0m
[32m  eval_precision = 0.2487[0m
[32m  eval_recall = 0.1839[0m
[32m  ********************[0m
[32m  Best f1:0.1892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01472:  29%|██▊       | 8/28 [00:42<02:01,  6.06s/it]epoch 1 loss 1.98426:  29%|██▊       | 8/28 [00:43<02:01,  6.06s/it]epoch 1 loss 1.98426:  32%|███▏      | 9/28 [00:43<01:21,  4.29s/it]epoch 1 loss 1.95333:  32%|███▏      | 9/28 [00:43<01:21,  4.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5941[0m
[32m  eval_f1 = 0.1993[0m
[32m  eval_mcc = 0.5717[0m
[32m  eval_precision = 0.2607[0m
[32m  eval_recall = 0.1918[0m
[32m  ********************[0m
[32m  Best f1:0.1993[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5717[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95333:  36%|███▌      | 10/28 [00:52<01:44,  5.78s/it]epoch 1 loss 1.92677:  36%|███▌      | 10/28 [00:52<01:44,  5.78s/it]epoch 1 loss 1.92677:  39%|███▉      | 11/28 [00:52<01:10,  4.14s/it]epoch 1 loss 1.91172:  39%|███▉      | 11/28 [00:53<01:10,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.601[0m
[32m  eval_f1 = 0.2114[0m
[32m  eval_mcc = 0.5795[0m
[32m  eval_precision = 0.2864[0m
[32m  eval_recall = 0.1995[0m
[32m  ********************[0m
[32m  Best f1:0.2114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5795[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91172:  43%|████▎     | 12/28 [01:02<01:35,  5.94s/it]epoch 1 loss 1.88456:  43%|████▎     | 12/28 [01:03<01:35,  5.94s/it]epoch 1 loss 1.88456:  46%|████▋     | 13/28 [01:03<01:04,  4.27s/it]epoch 1 loss 1.87903:  46%|████▋     | 13/28 [01:03<01:04,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6055[0m
[32m  eval_f1 = 0.2213[0m
[32m  eval_mcc = 0.5848[0m
[32m  eval_precision = 0.3083[0m
[32m  eval_recall = 0.2071[0m
[32m  ********************[0m
[32m  Best f1:0.2213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87903:  50%|█████     | 14/28 [01:11<01:15,  5.41s/it]epoch 1 loss 1.86213:  50%|█████     | 14/28 [01:11<01:15,  5.41s/it]epoch 1 loss 1.86213:  54%|█████▎    | 15/28 [01:11<00:50,  3.90s/it]epoch 1 loss 1.84018:  54%|█████▎    | 15/28 [01:12<00:50,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.612[0m
[32m  eval_f1 = 0.2516[0m
[32m  eval_mcc = 0.5917[0m
[32m  eval_precision = 0.35[0m
[32m  eval_recall = 0.2343[0m
[32m  ********************[0m
[32m  Best f1:0.2516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84018:  57%|█████▋    | 16/28 [01:21<01:08,  5.72s/it]epoch 1 loss 1.82056:  57%|█████▋    | 16/28 [01:22<01:08,  5.72s/it]epoch 1 loss 1.82056:  61%|██████    | 17/28 [01:22<00:45,  4.13s/it]epoch 1 loss 1.80255:  61%|██████    | 17/28 [01:22<00:45,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.615[0m
[32m  eval_f1 = 0.2602[0m
[32m  eval_mcc = 0.5952[0m
[32m  eval_precision = 0.3611[0m
[32m  eval_recall = 0.2401[0m
[32m  ********************[0m
[32m  Best f1:0.2602[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80255:  64%|██████▍   | 18/28 [01:30<00:53,  5.33s/it]epoch 1 loss 1.78132:  64%|██████▍   | 18/28 [01:30<00:53,  5.33s/it]epoch 1 loss 1.78132:  68%|██████▊   | 19/28 [01:30<00:34,  3.86s/it]epoch 1 loss 1.76582:  68%|██████▊   | 19/28 [01:31<00:34,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6192[0m
[32m  eval_f1 = 0.2699[0m
[32m  eval_mcc = 0.5997[0m
[32m  eval_precision = 0.3657[0m
[32m  eval_recall = 0.2483[0m
[32m  ********************[0m
[32m  Best f1:0.2699[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5997[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76582:  71%|███████▏  | 20/28 [01:41<00:47,  5.97s/it]epoch 1 loss 1.75195:  71%|███████▏  | 20/28 [01:42<00:47,  5.97s/it]epoch 1 loss 1.75195:  75%|███████▌  | 21/28 [01:42<00:30,  4.30s/it]epoch 1 loss 1.74166:  75%|███████▌  | 21/28 [01:42<00:30,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6228[0m
[32m  eval_f1 = 0.2773[0m
[32m  eval_mcc = 0.6028[0m
[32m  eval_precision = 0.3641[0m
[32m  eval_recall = 0.2571[0m
[32m  ********************[0m
[32m  Best f1:0.2773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74166:  79%|███████▊  | 22/28 [01:50<00:32,  5.48s/it]epoch 1 loss 1.72858:  79%|███████▊  | 22/28 [01:50<00:32,  5.48s/it]epoch 1 loss 1.72858:  82%|████████▏ | 23/28 [01:50<00:19,  3.97s/it]epoch 1 loss 1.71045:  82%|████████▏ | 23/28 [01:51<00:19,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.63[0m
[32m  eval_f1 = 0.2854[0m
[32m  eval_mcc = 0.6092[0m
[32m  eval_precision = 0.3787[0m
[32m  eval_recall = 0.2648[0m
[32m  ********************[0m
[32m  Best f1:0.2854[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.71045:  86%|████████▌ | 24/28 [02:00<00:22,  5.70s/it]epoch 1 loss 1.6981:  86%|████████▌ | 24/28 [02:00<00:22,  5.70s/it] epoch 1 loss 1.6981:  89%|████████▉ | 25/28 [02:00<00:12,  4.11s/it]epoch 1 loss 1.685:  89%|████████▉ | 25/28 [02:01<00:12,  4.11s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6334[0m
[32m  eval_f1 = 0.2873[0m
[32m  eval_mcc = 0.6125[0m
[32m  eval_precision = 0.3756[0m
[32m  eval_recall = 0.2675[0m
[32m  ********************[0m
[32m  Best f1:0.2873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.685:  93%|█████████▎| 26/28 [02:11<00:11,  5.96s/it]epoch 1 loss 1.68549:  93%|█████████▎| 26/28 [02:11<00:11,  5.96s/it]epoch 1 loss 1.68549:  96%|█████████▋| 27/28 [02:11<00:04,  4.29s/it]epoch 1 loss 1.6796:  96%|█████████▋| 27/28 [02:11<00:04,  4.29s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6356[0m
[32m  eval_f1 = 0.2895[0m
[32m  eval_mcc = 0.6148[0m
[32m  eval_precision = 0.3726[0m
[32m  eval_recall = 0.2698[0m
[32m  ********************[0m
[32m  Best f1:0.2895[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.6796: 100%|██████████| 28/28 [02:21<00:00,  5.99s/it]epoch 1 loss 1.6796: 100%|██████████| 28/28 [02:21<00:00,  5.05s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.23992:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.23992:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 2 loss 1.28974:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.2935[0m
[32m  eval_mcc = 0.6181[0m
[32m  eval_precision = 0.3806[0m
[32m  eval_recall = 0.2728[0m
[32m  ********************[0m
[32m  Best f1:0.2935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28974:   7%|▋         | 2/28 [00:11<02:46,  6.41s/it]epoch 2 loss 1.31635:   7%|▋         | 2/28 [00:11<02:46,  6.41s/it]epoch 2 loss 1.31635:  11%|█         | 3/28 [00:11<01:31,  3.67s/it]epoch 2 loss 1.31117:  11%|█         | 3/28 [00:11<01:31,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.645[0m
[32m  eval_f1 = 0.2996[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.3915[0m
[32m  eval_recall = 0.2772[0m
[32m  ********************[0m
[32m  Best f1:0.2996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31117:  14%|█▍        | 4/28 [00:21<02:33,  6.38s/it]epoch 2 loss 1.32911:  14%|█▍        | 4/28 [00:22<02:33,  6.38s/it]epoch 2 loss 1.32911:  18%|█▊        | 5/28 [00:22<01:37,  4.23s/it]epoch 2 loss 1.32991:  18%|█▊        | 5/28 [00:22<01:37,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6475[0m
[32m  eval_f1 = 0.3063[0m
[32m  eval_mcc = 0.6277[0m
[32m  eval_precision = 0.4069[0m
[32m  eval_recall = 0.2816[0m
[32m  ********************[0m
[32m  Best f1:0.3063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32991:  21%|██▏       | 6/28 [00:32<02:17,  6.26s/it]epoch 2 loss 1.33018:  21%|██▏       | 6/28 [00:32<02:17,  6.26s/it]epoch 2 loss 1.33018:  25%|██▌       | 7/28 [00:32<01:31,  4.35s/it]epoch 2 loss 1.33774:  25%|██▌       | 7/28 [00:33<01:31,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.3111[0m
[32m  eval_mcc = 0.6313[0m
[32m  eval_precision = 0.4166[0m
[32m  eval_recall = 0.2851[0m
[32m  ********************[0m
[32m  Best f1:0.3111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33774:  29%|██▊       | 8/28 [00:43<02:05,  6.26s/it]epoch 2 loss 1.34108:  29%|██▊       | 8/28 [00:43<02:05,  6.26s/it]epoch 2 loss 1.34108:  32%|███▏      | 9/28 [00:43<01:24,  4.44s/it]epoch 2 loss 1.34349:  32%|███▏      | 9/28 [00:44<01:24,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6534[0m
[32m  eval_f1 = 0.3141[0m
[32m  eval_mcc = 0.6342[0m
[32m  eval_precision = 0.4284[0m
[32m  eval_recall = 0.2865[0m
[32m  ********************[0m
[32m  Best f1:0.3141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34349:  36%|███▌      | 10/28 [00:54<01:52,  6.23s/it]epoch 2 loss 1.3551:  36%|███▌      | 10/28 [00:54<01:52,  6.23s/it] epoch 2 loss 1.3551:  39%|███▉      | 11/28 [00:54<01:15,  4.45s/it]epoch 2 loss 1.35107:  39%|███▉      | 11/28 [00:54<01:15,  4.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6554[0m
[32m  eval_f1 = 0.3179[0m
[32m  eval_mcc = 0.6365[0m
[32m  eval_precision = 0.43[0m
[32m  eval_recall = 0.2901[0m
[32m  ********************[0m
[32m  Best f1:0.3179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35107:  43%|████▎     | 12/28 [01:05<01:40,  6.31s/it]epoch 2 loss 1.34391:  43%|████▎     | 12/28 [01:05<01:40,  6.31s/it]epoch 2 loss 1.34391:  46%|████▋     | 13/28 [01:05<01:07,  4.53s/it]epoch 2 loss 1.33263:  46%|████▋     | 13/28 [01:05<01:07,  4.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6562[0m
[32m  eval_f1 = 0.3237[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4354[0m
[32m  eval_recall = 0.2948[0m
[32m  ********************[0m
[32m  Best f1:0.3237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33263:  50%|█████     | 14/28 [01:14<01:22,  5.92s/it]epoch 2 loss 1.3352:  50%|█████     | 14/28 [01:14<01:22,  5.92s/it] epoch 2 loss 1.3352:  54%|█████▎    | 15/28 [01:14<00:55,  4.26s/it]epoch 2 loss 1.33249:  54%|█████▎    | 15/28 [01:15<00:55,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6581[0m
[32m  eval_f1 = 0.3319[0m
[32m  eval_mcc = 0.6391[0m
[32m  eval_precision = 0.4382[0m
[32m  eval_recall = 0.3018[0m
[32m  ********************[0m
[32m  Best f1:0.3319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33249:  57%|█████▋    | 16/28 [01:24<01:10,  5.86s/it]epoch 2 loss 1.32812:  57%|█████▋    | 16/28 [01:24<01:10,  5.86s/it]epoch 2 loss 1.32812:  61%|██████    | 17/28 [01:24<00:46,  4.23s/it]epoch 2 loss 1.32144:  61%|██████    | 17/28 [01:25<00:46,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6595[0m
[32m  eval_f1 = 0.3417[0m
[32m  eval_mcc = 0.6404[0m
[32m  eval_precision = 0.4529[0m
[32m  eval_recall = 0.3094[0m
[32m  ********************[0m
[32m  Best f1:0.3417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32144:  64%|██████▍   | 18/28 [01:32<00:52,  5.29s/it]epoch 2 loss 1.31306:  64%|██████▍   | 18/28 [01:33<00:52,  5.29s/it]epoch 2 loss 1.31306:  68%|██████▊   | 19/28 [01:33<00:34,  3.82s/it]epoch 2 loss 1.31461:  68%|██████▊   | 19/28 [01:33<00:34,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6599[0m
[32m  eval_f1 = 0.3438[0m
[32m  eval_mcc = 0.6408[0m
[32m  eval_precision = 0.4533[0m
[32m  eval_recall = 0.3128[0m
[32m  ********************[0m
[32m  Best f1:0.3438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31461:  71%|███████▏  | 20/28 [01:43<00:46,  5.75s/it]epoch 2 loss 1.31615:  71%|███████▏  | 20/28 [01:43<00:46,  5.75s/it]epoch 2 loss 1.31615:  75%|███████▌  | 21/28 [01:43<00:29,  4.15s/it]epoch 2 loss 1.31577:  75%|███████▌  | 21/28 [01:44<00:29,  4.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6601[0m
[32m  eval_f1 = 0.3474[0m
[32m  eval_mcc = 0.6409[0m
[32m  eval_precision = 0.4587[0m
[32m  eval_recall = 0.317[0m
[32m  ********************[0m
[32m  Best f1:0.3474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31577:  79%|███████▊  | 22/28 [01:51<00:31,  5.22s/it]epoch 2 loss 1.311:  79%|███████▊  | 22/28 [01:51<00:31,  5.22s/it]  epoch 2 loss 1.311:  82%|████████▏ | 23/28 [01:51<00:18,  3.78s/it]epoch 2 loss 1.30271:  82%|████████▏ | 23/28 [01:52<00:18,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6617[0m
[32m  eval_f1 = 0.3579[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.4669[0m
[32m  eval_recall = 0.328[0m
[32m  ********************[0m
[32m  Best f1:0.3579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30271:  86%|████████▌ | 24/28 [01:58<00:19,  4.75s/it]epoch 2 loss 1.30159:  86%|████████▌ | 24/28 [01:59<00:19,  4.75s/it]epoch 2 loss 1.30159:  89%|████████▉ | 25/28 [01:59<00:10,  3.45s/it]epoch 2 loss 1.29821:  89%|████████▉ | 25/28 [01:59<00:10,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6642[0m
[32m  eval_f1 = 0.3582[0m
[32m  eval_mcc = 0.6451[0m
[32m  eval_precision = 0.4633[0m
[32m  eval_recall = 0.3294[0m
[32m  ********************[0m
[32m  Best f1:0.3582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29821:  93%|█████████▎| 26/28 [02:08<00:10,  5.21s/it]epoch 2 loss 1.29331:  93%|█████████▎| 26/28 [02:09<00:10,  5.21s/it]epoch 2 loss 1.29331:  96%|█████████▋| 27/28 [02:09<00:03,  3.77s/it]epoch 2 loss 1.29832:  96%|█████████▋| 27/28 [02:09<00:03,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.666[0m
[32m  eval_f1 = 0.3581[0m
[32m  eval_mcc = 0.6472[0m
[32m  eval_precision = 0.4615[0m
[32m  eval_recall = 0.3307[0m
[32m  ********************[0m
[32m  Best MCC:0.6472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29832: 100%|██████████| 28/28 [02:15<00:00,  4.67s/it]epoch 2 loss 1.29832: 100%|██████████| 28/28 [02:15<00:00,  4.85s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.1901:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.1901:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 3 loss 1.18492:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6669[0m
[32m  eval_f1 = 0.361[0m
[32m  eval_mcc = 0.6481[0m
[32m  eval_precision = 0.4578[0m
[32m  eval_recall = 0.3339[0m
[32m  ********************[0m
[32m  Best f1:0.361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18492:   7%|▋         | 2/28 [00:10<02:35,  5.97s/it]epoch 3 loss 1.19125:   7%|▋         | 2/28 [00:10<02:35,  5.97s/it]epoch 3 loss 1.19125:  11%|█         | 3/28 [00:10<01:25,  3.44s/it]epoch 3 loss 1.19664:  11%|█         | 3/28 [00:11<01:25,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6682[0m
[32m  eval_f1 = 0.3653[0m
[32m  eval_mcc = 0.6495[0m
[32m  eval_precision = 0.4773[0m
[32m  eval_recall = 0.3363[0m
[32m  ********************[0m
[32m  Best f1:0.3653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19664:  14%|█▍        | 4/28 [00:18<02:03,  5.13s/it]epoch 3 loss 1.20197:  14%|█▍        | 4/28 [00:18<02:03,  5.13s/it]epoch 3 loss 1.20197:  18%|█▊        | 5/28 [00:18<01:18,  3.43s/it]epoch 3 loss 1.21815:  18%|█▊        | 5/28 [00:19<01:18,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6682[0m
[32m  eval_f1 = 0.3669[0m
[32m  eval_mcc = 0.6495[0m
[32m  eval_precision = 0.4787[0m
[32m  eval_recall = 0.3374[0m
[32m  ********************[0m
[32m  Best f1:0.3669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.21815:  21%|██▏       | 6/28 [00:25<01:38,  4.49s/it]epoch 3 loss 1.23016:  21%|██▏       | 6/28 [00:25<01:38,  4.49s/it]epoch 3 loss 1.23016:  25%|██▌       | 7/28 [00:25<01:06,  3.16s/it]epoch 3 loss 1.22185:  25%|██▌       | 7/28 [00:26<01:06,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6685[0m
[32m  eval_f1 = 0.3675[0m
[32m  eval_mcc = 0.6497[0m
[32m  eval_precision = 0.4713[0m
[32m  eval_recall = 0.3378[0m
[32m  ********************[0m
[32m  Best f1:0.3675[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22185:  29%|██▊       | 8/28 [00:34<01:37,  4.88s/it]epoch 3 loss 1.21745:  29%|██▊       | 8/28 [00:34<01:37,  4.88s/it]epoch 3 loss 1.21745:  32%|███▏      | 9/28 [00:34<01:06,  3.48s/it]epoch 3 loss 1.21814:  32%|███▏      | 9/28 [00:35<01:06,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6686[0m
[32m  eval_f1 = 0.3682[0m
[32m  eval_mcc = 0.6498[0m
[32m  eval_precision = 0.472[0m
[32m  eval_recall = 0.3385[0m
[32m  ********************[0m
[32m  Best f1:0.3682[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6498[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21814:  36%|███▌      | 10/28 [00:41<01:19,  4.42s/it]epoch 3 loss 1.21819:  36%|███▌      | 10/28 [00:41<01:19,  4.42s/it]epoch 3 loss 1.21819:  39%|███▉      | 11/28 [00:41<00:54,  3.19s/it]epoch 3 loss 1.21346:  39%|███▉      | 11/28 [00:42<00:54,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6695[0m
[32m  eval_f1 = 0.3695[0m
[32m  eval_mcc = 0.6509[0m
[32m  eval_precision = 0.4743[0m
[32m  eval_recall = 0.3399[0m
[32m  ********************[0m
[32m  Best f1:0.3695[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21346:  43%|████▎     | 12/28 [00:48<01:07,  4.20s/it]epoch 3 loss 1.21318:  43%|████▎     | 12/28 [00:48<01:07,  4.20s/it]epoch 3 loss 1.21318:  46%|████▋     | 13/28 [00:48<00:45,  3.06s/it]epoch 3 loss 1.21447:  46%|████▋     | 13/28 [00:49<00:45,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6701[0m
[32m  eval_f1 = 0.3705[0m
[32m  eval_mcc = 0.6513[0m
[32m  eval_precision = 0.4737[0m
[32m  eval_recall = 0.3413[0m
[32m  ********************[0m
[32m  Best f1:0.3705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21447:  50%|█████     | 14/28 [00:55<00:57,  4.08s/it]epoch 3 loss 1.21239:  50%|█████     | 14/28 [00:55<00:57,  4.08s/it]epoch 3 loss 1.21239:  54%|█████▎    | 15/28 [00:55<00:38,  2.98s/it]epoch 3 loss 1.21057:  54%|█████▎    | 15/28 [00:55<00:38,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6709[0m
[32m  eval_f1 = 0.3732[0m
[32m  eval_mcc = 0.6521[0m
[32m  eval_precision = 0.4729[0m
[32m  eval_recall = 0.3438[0m
[32m  ********************[0m
[32m  Best f1:0.3732[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6521[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21057:  57%|█████▋    | 16/28 [01:02<00:48,  4.08s/it]epoch 3 loss 1.21174:  57%|█████▋    | 16/28 [01:02<00:48,  4.08s/it]epoch 3 loss 1.21174:  61%|██████    | 17/28 [01:02<00:32,  2.98s/it]epoch 3 loss 1.20539:  61%|██████    | 17/28 [01:02<00:32,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6721[0m
[32m  eval_f1 = 0.3753[0m
[32m  eval_mcc = 0.6533[0m
[32m  eval_precision = 0.4722[0m
[32m  eval_recall = 0.3455[0m
[32m  ********************[0m
[32m  Best f1:0.3753[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20539:  64%|██████▍   | 18/28 [01:09<00:40,  4.03s/it]epoch 3 loss 1.20548:  64%|██████▍   | 18/28 [01:09<00:40,  4.03s/it]epoch 3 loss 1.20548:  68%|██████▊   | 19/28 [01:09<00:26,  2.95s/it]epoch 3 loss 1.20871:  68%|██████▊   | 19/28 [01:09<00:26,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3762[0m
[32m  eval_mcc = 0.6545[0m
[32m  eval_precision = 0.4701[0m
[32m  eval_recall = 0.3467[0m
[32m  ********************[0m
[32m  Best f1:0.3762[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20871:  71%|███████▏  | 20/28 [01:18<00:37,  4.69s/it]epoch 3 loss 1.2046:  71%|███████▏  | 20/28 [01:18<00:37,  4.69s/it] epoch 3 loss 1.2046:  75%|███████▌  | 21/28 [01:18<00:23,  3.41s/it]epoch 3 loss 1.1986:  75%|███████▌  | 21/28 [01:19<00:23,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6738[0m
[32m  eval_f1 = 0.375[0m
[32m  eval_mcc = 0.6555[0m
[32m  eval_precision = 0.4681[0m
[32m  eval_recall = 0.346[0m
[32m  ********************[0m
[32m  Best MCC:0.6555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1986:  79%|███████▊  | 22/28 [01:26<00:27,  4.66s/it]epoch 3 loss 1.20068:  79%|███████▊  | 22/28 [01:26<00:27,  4.66s/it]epoch 3 loss 1.20068:  82%|████████▏ | 23/28 [01:26<00:16,  3.39s/it]epoch 3 loss 1.19759:  82%|████████▏ | 23/28 [01:27<00:16,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6742[0m
[32m  eval_f1 = 0.3745[0m
[32m  eval_mcc = 0.6562[0m
[32m  eval_precision = 0.4694[0m
[32m  eval_recall = 0.3459[0m
[32m  ********************[0m
[32m  Best MCC:0.6562[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19759:  86%|████████▌ | 24/28 [01:34<00:18,  4.72s/it]epoch 3 loss 1.20321:  86%|████████▌ | 24/28 [01:34<00:18,  4.72s/it]epoch 3 loss 1.20321:  89%|████████▉ | 25/28 [01:34<00:10,  3.43s/it]epoch 3 loss 1.20088:  89%|████████▉ | 25/28 [01:35<00:10,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6737[0m
[32m  eval_f1 = 0.3739[0m
[32m  eval_mcc = 0.6558[0m
[32m  eval_precision = 0.4683[0m
[32m  eval_recall = 0.3456[0m

epoch 3 loss 1.20088:  93%|█████████▎| 26/28 [01:38<00:07,  3.54s/it]epoch 3 loss 1.20227:  93%|█████████▎| 26/28 [01:39<00:07,  3.54s/it]epoch 3 loss 1.20227:  96%|█████████▋| 27/28 [01:39<00:02,  2.59s/it]epoch 3 loss 1.20657:  96%|█████████▋| 27/28 [01:39<00:02,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6739[0m
[32m  eval_f1 = 0.3749[0m
[32m  eval_mcc = 0.656[0m
[32m  eval_precision = 0.4679[0m
[32m  eval_recall = 0.3461[0m

epoch 3 loss 1.20657: 100%|██████████| 28/28 [01:42<00:00,  2.89s/it]epoch 3 loss 1.20657: 100%|██████████| 28/28 [01:42<00:00,  3.67s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.17442:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.17442:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s]epoch 4 loss 1.21143:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.673[0m
[32m  eval_f1 = 0.3765[0m
[32m  eval_mcc = 0.6549[0m
[32m  eval_precision = 0.4692[0m
[32m  eval_recall = 0.3477[0m
[32m  ********************[0m
[32m  Best f1:0.3765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.21143:   7%|▋         | 2/28 [00:07<01:46,  4.09s/it]epoch 4 loss 1.22858:   7%|▋         | 2/28 [00:07<01:46,  4.09s/it]epoch 4 loss 1.22858:  11%|█         | 3/28 [00:07<01:00,  2.42s/it]epoch 4 loss 1.21645:  11%|█         | 3/28 [00:07<01:00,  2.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6726[0m
[32m  eval_f1 = 0.3774[0m
[32m  eval_mcc = 0.6542[0m
[32m  eval_precision = 0.475[0m
[32m  eval_recall = 0.3488[0m
[32m  ********************[0m
[32m  Best f1:0.3774[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.21645:  14%|█▍        | 4/28 [00:14<01:43,  4.31s/it]epoch 4 loss 1.20184:  14%|█▍        | 4/28 [00:15<01:43,  4.31s/it]epoch 4 loss 1.20184:  18%|█▊        | 5/28 [00:15<01:06,  2.91s/it]epoch 4 loss 1.19569:  18%|█▊        | 5/28 [00:15<01:06,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.378[0m
[32m  eval_mcc = 0.6546[0m
[32m  eval_precision = 0.4662[0m
[32m  eval_recall = 0.3499[0m
[32m  ********************[0m
[32m  Best f1:0.378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.19569:  21%|██▏       | 6/28 [00:21<01:29,  4.06s/it]epoch 4 loss 1.18885:  21%|██▏       | 6/28 [00:21<01:29,  4.06s/it]epoch 4 loss 1.18885:  25%|██▌       | 7/28 [00:21<01:00,  2.87s/it]epoch 4 loss 1.18935:  25%|██▌       | 7/28 [00:22<01:00,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.3776[0m
[32m  eval_mcc = 0.6547[0m
[32m  eval_precision = 0.4626[0m
[32m  eval_recall = 0.3498[0m

epoch 4 loss 1.18935:  29%|██▊       | 8/28 [00:25<01:03,  3.16s/it]epoch 4 loss 1.19116:  29%|██▊       | 8/28 [00:26<01:03,  3.16s/it]epoch 4 loss 1.19116:  32%|███▏      | 9/28 [00:26<00:43,  2.30s/it]epoch 4 loss 1.18952:  32%|███▏      | 9/28 [00:26<00:43,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6743[0m
[32m  eval_f1 = 0.3784[0m
[32m  eval_mcc = 0.6557[0m
[32m  eval_precision = 0.4688[0m
[32m  eval_recall = 0.3503[0m
[32m  ********************[0m
[32m  Best f1:0.3784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.18952:  36%|███▌      | 10/28 [00:32<01:03,  3.53s/it]epoch 4 loss 1.19201:  36%|███▌      | 10/28 [00:32<01:03,  3.53s/it]epoch 4 loss 1.19201:  39%|███▉      | 11/28 [00:32<00:43,  2.58s/it]epoch 4 loss 1.19854:  39%|███▉      | 11/28 [00:33<00:43,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6747[0m
[32m  eval_f1 = 0.3785[0m
[32m  eval_mcc = 0.6561[0m
[32m  eval_precision = 0.4691[0m
[32m  eval_recall = 0.3501[0m
[32m  ********************[0m
[32m  Best f1:0.3785[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.19854:  43%|████▎     | 12/28 [00:38<00:58,  3.63s/it]epoch 4 loss 1.20185:  43%|████▎     | 12/28 [00:39<00:58,  3.63s/it]epoch 4 loss 1.20185:  46%|████▋     | 13/28 [00:39<00:39,  2.65s/it]epoch 4 loss 1.19529:  46%|████▋     | 13/28 [00:39<00:39,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6747[0m
[32m  eval_f1 = 0.3785[0m
[32m  eval_mcc = 0.6562[0m
[32m  eval_precision = 0.4689[0m
[32m  eval_recall = 0.3502[0m
[32m  ********************[0m
[32m  Best MCC:0.6562[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19529:  50%|█████     | 14/28 [00:46<00:56,  4.03s/it]epoch 4 loss 1.1982:  50%|█████     | 14/28 [00:46<00:56,  4.03s/it] epoch 4 loss 1.1982:  54%|█████▎    | 15/28 [00:46<00:38,  2.94s/it]epoch 4 loss 1.2074:  54%|█████▎    | 15/28 [00:47<00:38,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6751[0m
[32m  eval_f1 = 0.38[0m
[32m  eval_mcc = 0.6566[0m
[32m  eval_precision = 0.4701[0m
[32m  eval_recall = 0.3521[0m
[32m  ********************[0m
[32m  Best f1:0.38[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2074:  57%|█████▋    | 16/28 [00:55<00:54,  4.53s/it]epoch 4 loss 1.20454:  57%|█████▋    | 16/28 [00:55<00:54,  4.53s/it]epoch 4 loss 1.20454:  61%|██████    | 17/28 [00:55<00:36,  3.30s/it]epoch 4 loss 1.20274:  61%|██████    | 17/28 [00:55<00:36,  3.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6764[0m
[32m  eval_f1 = 0.3814[0m
[32m  eval_mcc = 0.658[0m
[32m  eval_precision = 0.4741[0m
[32m  eval_recall = 0.3531[0m
[32m  ********************[0m
[32m  Best f1:0.3814[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20274:  64%|██████▍   | 18/28 [01:04<00:50,  5.08s/it]epoch 4 loss 1.19987:  64%|██████▍   | 18/28 [01:05<00:50,  5.08s/it]epoch 4 loss 1.19987:  68%|██████▊   | 19/28 [01:05<00:33,  3.68s/it]epoch 4 loss 1.19187:  68%|██████▊   | 19/28 [01:05<00:33,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.677[0m
[32m  eval_f1 = 0.382[0m
[32m  eval_mcc = 0.6586[0m
[32m  eval_precision = 0.4737[0m
[32m  eval_recall = 0.3537[0m
[32m  ********************[0m
[32m  Best f1:0.382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19187:  71%|███████▏  | 20/28 [01:13<00:39,  4.95s/it]epoch 4 loss 1.18681:  71%|███████▏  | 20/28 [01:13<00:39,  4.95s/it]epoch 4 loss 1.18681:  75%|███████▌  | 21/28 [01:13<00:25,  3.59s/it]epoch 4 loss 1.18415:  75%|███████▌  | 21/28 [01:13<00:25,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6774[0m
[32m  eval_f1 = 0.3826[0m
[32m  eval_mcc = 0.6591[0m
[32m  eval_precision = 0.4733[0m
[32m  eval_recall = 0.3546[0m
[32m  ********************[0m
[32m  Best f1:0.3826[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18415:  79%|███████▊  | 22/28 [01:23<00:32,  5.38s/it]epoch 4 loss 1.1774:  79%|███████▊  | 22/28 [01:23<00:32,  5.38s/it] epoch 4 loss 1.1774:  82%|████████▏ | 23/28 [01:23<00:19,  3.89s/it]epoch 4 loss 1.17596:  82%|████████▏ | 23/28 [01:23<00:19,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6774[0m
[32m  eval_f1 = 0.3829[0m
[32m  eval_mcc = 0.6591[0m
[32m  eval_precision = 0.4734[0m
[32m  eval_recall = 0.3547[0m
[32m  ********************[0m
[32m  Best f1:0.3829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17596:  86%|████████▌ | 24/28 [01:30<00:19,  4.97s/it]epoch 4 loss 1.16906:  86%|████████▌ | 24/28 [01:31<00:19,  4.97s/it]epoch 4 loss 1.16906:  89%|████████▉ | 25/28 [01:31<00:10,  3.60s/it]epoch 4 loss 1.16971:  89%|████████▉ | 25/28 [01:31<00:10,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6775[0m
[32m  eval_f1 = 0.383[0m
[32m  eval_mcc = 0.6592[0m
[32m  eval_precision = 0.4735[0m
[32m  eval_recall = 0.3548[0m
[32m  ********************[0m
[32m  Best f1:0.383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16971:  93%|█████████▎| 26/28 [01:40<00:10,  5.33s/it]epoch 4 loss 1.16695:  93%|█████████▎| 26/28 [01:41<00:10,  5.33s/it]epoch 4 loss 1.16695:  96%|█████████▋| 27/28 [01:41<00:03,  3.86s/it]epoch 4 loss 1.16226:  96%|█████████▋| 27/28 [01:41<00:03,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6774[0m
[32m  eval_f1 = 0.3829[0m
[32m  eval_mcc = 0.6591[0m
[32m  eval_precision = 0.4735[0m
[32m  eval_recall = 0.3547[0m

epoch 4 loss 1.16226: 100%|██████████| 28/28 [01:45<00:00,  3.99s/it]epoch 4 loss 1.16226: 100%|██████████| 28/28 [01:45<00:00,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6775[0m
[32m  eval_f1 = 0.383[0m
[32m  eval_mcc = 0.6592[0m
[32m  eval_precision = 0.4735[0m
[32m  eval_recall = 0.3548[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6557[0m
[32m  eval_f1 = 0.3001[0m
[32m  eval_mcc = 0.6372[0m
[32m  eval_precision = 0.387[0m
[32m  eval_recall = 0.2811[0m

