[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=11, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11', posratio=0.5, seed=892, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.79447:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.79447:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.78886:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0077[0m
[32m  eval_f1 = 0.0013[0m
[32m  eval_mcc = 0.0023[0m
[32m  eval_precision = 0.0046[0m
[32m  eval_recall = 0.0042[0m
[32m  ********************[0m
[32m  Best f1:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.78886:   7%|▋         | 2/28 [00:06<01:30,  3.50s/it]epoch 0 loss 5.76752:   7%|▋         | 2/28 [00:06<01:30,  3.50s/it]epoch 0 loss 5.76752:  11%|█         | 3/28 [00:06<00:52,  2.08s/it]epoch 0 loss 5.755:  11%|█         | 3/28 [00:06<00:52,  2.08s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0135[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = 0.0042[0m
[32m  eval_precision = 0.0066[0m
[32m  eval_recall = 0.0052[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.755:  14%|█▍        | 4/28 [00:13<01:32,  3.84s/it]epoch 0 loss 5.72371:  14%|█▍        | 4/28 [00:13<01:32,  3.84s/it]epoch 0 loss 5.72371:  18%|█▊        | 5/28 [00:13<00:59,  2.61s/it]epoch 0 loss 5.68831:  18%|█▊        | 5/28 [00:13<00:59,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.04[0m
[32m  eval_f1 = 0.0023[0m
[32m  eval_mcc = 0.0217[0m
[32m  eval_precision = 0.004[0m
[32m  eval_recall = 0.0096[0m
[32m  ********************[0m
[32m  Best f1:0.0023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.68831:  21%|██▏       | 6/28 [00:19<01:22,  3.75s/it]epoch 0 loss 5.64734:  21%|██▏       | 6/28 [00:19<01:22,  3.75s/it]epoch 0 loss 5.64734:  25%|██▌       | 7/28 [00:19<00:55,  2.66s/it]epoch 0 loss 5.60024:  25%|██▌       | 7/28 [00:20<00:55,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.056[0m
[32m  eval_f1 = 0.0031[0m
[32m  eval_mcc = 0.025[0m
[32m  eval_precision = 0.0039[0m
[32m  eval_recall = 0.0122[0m
[32m  ********************[0m
[32m  Best f1:0.0031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.60024:  29%|██▊       | 8/28 [00:26<01:17,  3.85s/it]epoch 0 loss 5.54653:  29%|██▊       | 8/28 [00:26<01:17,  3.85s/it]epoch 0 loss 5.54653:  32%|███▏      | 9/28 [00:26<00:52,  2.78s/it]epoch 0 loss 5.48671:  32%|███▏      | 9/28 [00:27<00:52,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0646[0m
[32m  eval_f1 = 0.0052[0m
[32m  eval_mcc = 0.0242[0m
[32m  eval_precision = 0.0064[0m
[32m  eval_recall = 0.0131[0m
[32m  ********************[0m
[32m  Best f1:0.0052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.48671:  36%|███▌      | 10/28 [00:31<01:02,  3.47s/it]epoch 0 loss 5.41986:  36%|███▌      | 10/28 [00:32<01:02,  3.47s/it]epoch 0 loss 5.41986:  39%|███▉      | 11/28 [00:32<00:43,  2.53s/it]epoch 0 loss 5.35289:  39%|███▉      | 11/28 [00:32<00:43,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0777[0m
[32m  eval_f1 = 0.0087[0m
[32m  eval_mcc = 0.0353[0m
[32m  eval_precision = 0.0155[0m
[32m  eval_recall = 0.0158[0m
[32m  ********************[0m
[32m  Best f1:0.0087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.35289:  43%|████▎     | 12/28 [00:37<00:56,  3.52s/it]epoch 0 loss 5.27999:  43%|████▎     | 12/28 [00:38<00:56,  3.52s/it]epoch 0 loss 5.27999:  46%|████▋     | 13/28 [00:38<00:38,  2.58s/it]epoch 0 loss 5.20084:  46%|████▋     | 13/28 [00:38<00:38,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0918[0m
[32m  eval_f1 = 0.01[0m
[32m  eval_mcc = 0.045[0m
[32m  eval_precision = 0.0148[0m
[32m  eval_recall = 0.0175[0m
[32m  ********************[0m
[32m  Best f1:0.01[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20084:  50%|█████     | 14/28 [00:44<00:52,  3.76s/it]epoch 0 loss 5.12224:  50%|█████     | 14/28 [00:45<00:52,  3.76s/it]epoch 0 loss 5.12224:  54%|█████▎    | 15/28 [00:45<00:35,  2.76s/it]epoch 0 loss 5.04252:  54%|█████▎    | 15/28 [00:45<00:35,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1204[0m
[32m  eval_f1 = 0.013[0m
[32m  eval_mcc = 0.069[0m
[32m  eval_precision = 0.0197[0m
[32m  eval_recall = 0.0204[0m
[32m  ********************[0m
[32m  Best f1:0.013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04252:  57%|█████▋    | 16/28 [00:51<00:46,  3.90s/it]epoch 0 loss 4.96163:  57%|█████▋    | 16/28 [00:52<00:46,  3.90s/it]epoch 0 loss 4.96163:  61%|██████    | 17/28 [00:52<00:31,  2.86s/it]epoch 0 loss 4.88467:  61%|██████    | 17/28 [00:52<00:31,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1397[0m
[32m  eval_f1 = 0.0088[0m
[32m  eval_mcc = 0.0834[0m
[32m  eval_precision = 0.0366[0m
[32m  eval_recall = 0.018[0m
[32m  ********************[0m
[32m  Best MCC:0.0834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.88467:  64%|██████▍   | 18/28 [00:57<00:35,  3.51s/it]epoch 0 loss 4.81436:  64%|██████▍   | 18/28 [00:57<00:35,  3.51s/it]epoch 0 loss 4.81436:  68%|██████▊   | 19/28 [00:57<00:23,  2.58s/it]epoch 0 loss 4.74051:  68%|██████▊   | 19/28 [00:58<00:23,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1653[0m
[32m  eval_f1 = 0.0143[0m
[32m  eval_mcc = 0.1124[0m
[32m  eval_precision = 0.036[0m
[32m  eval_recall = 0.0212[0m
[32m  ********************[0m
[32m  Best f1:0.0143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1124[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.74051:  71%|███████▏  | 20/28 [01:04<00:29,  3.74s/it]epoch 0 loss 4.67062:  71%|███████▏  | 20/28 [01:04<00:29,  3.74s/it]epoch 0 loss 4.67062:  75%|███████▌  | 21/28 [01:04<00:19,  2.75s/it]epoch 0 loss 4.59938:  75%|███████▌  | 21/28 [01:05<00:19,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2345[0m
[32m  eval_f1 = 0.0255[0m
[32m  eval_mcc = 0.1813[0m
[32m  eval_precision = 0.0437[0m
[32m  eval_recall = 0.0304[0m
[32m  ********************[0m
[32m  Best f1:0.0255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1813[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.59938:  79%|███████▊  | 22/28 [01:10<00:22,  3.69s/it]epoch 0 loss 4.53169:  79%|███████▊  | 22/28 [01:10<00:22,  3.69s/it]epoch 0 loss 4.53169:  82%|████████▏ | 23/28 [01:10<00:13,  2.71s/it]epoch 0 loss 4.47228:  82%|████████▏ | 23/28 [01:11<00:13,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2959[0m
[32m  eval_f1 = 0.0351[0m
[32m  eval_mcc = 0.2397[0m
[32m  eval_precision = 0.0666[0m
[32m  eval_recall = 0.0388[0m
[32m  ********************[0m
[32m  Best f1:0.0351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2397[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.47228:  86%|████████▌ | 24/28 [01:17<00:14,  3.72s/it]epoch 0 loss 4.42253:  86%|████████▌ | 24/28 [01:17<00:14,  3.72s/it]epoch 0 loss 4.42253:  89%|████████▉ | 25/28 [01:17<00:08,  2.73s/it]epoch 0 loss 4.36454:  89%|████████▉ | 25/28 [01:17<00:08,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3108[0m
[32m  eval_f1 = 0.0538[0m
[32m  eval_mcc = 0.2756[0m
[32m  eval_precision = 0.1176[0m
[32m  eval_recall = 0.0515[0m
[32m  ********************[0m
[32m  Best f1:0.0538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2756[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.36454:  93%|█████████▎| 26/28 [01:23<00:07,  3.81s/it]epoch 0 loss 4.30851:  93%|█████████▎| 26/28 [01:24<00:07,  3.81s/it]epoch 0 loss 4.30851:  96%|█████████▋| 27/28 [01:24<00:02,  2.79s/it]epoch 0 loss 4.25371:  96%|█████████▋| 27/28 [01:24<00:02,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3481[0m
[32m  eval_f1 = 0.0936[0m
[32m  eval_mcc = 0.3361[0m
[32m  eval_precision = 0.1386[0m
[32m  eval_recall = 0.0835[0m
[32m  ********************[0m
[32m  Best f1:0.0936[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.25371: 100%|██████████| 28/28 [01:30<00:00,  3.86s/it]epoch 0 loss 4.25371: 100%|██████████| 28/28 [01:30<00:00,  3.23s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.59281:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.59281:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s]epoch 1 loss 2.63188:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3972[0m
[32m  eval_f1 = 0.1091[0m
[32m  eval_mcc = 0.3897[0m
[32m  eval_precision = 0.171[0m
[32m  eval_recall = 0.1002[0m
[32m  ********************[0m
[32m  Best f1:0.1091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.63188:   7%|▋         | 2/28 [00:07<01:45,  4.05s/it]epoch 1 loss 2.61844:   7%|▋         | 2/28 [00:07<01:45,  4.05s/it]epoch 1 loss 2.61844:  11%|█         | 3/28 [00:07<00:59,  2.39s/it]epoch 1 loss 2.59643:  11%|█         | 3/28 [00:07<00:59,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4598[0m
[32m  eval_f1 = 0.1293[0m
[32m  eval_mcc = 0.4401[0m
[32m  eval_precision = 0.1795[0m
[32m  eval_recall = 0.1227[0m
[32m  ********************[0m
[32m  Best f1:0.1293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.59643:  14%|█▍        | 4/28 [00:13<01:30,  3.78s/it]epoch 1 loss 2.53776:  14%|█▍        | 4/28 [00:13<01:30,  3.78s/it]epoch 1 loss 2.53776:  18%|█▊        | 5/28 [00:13<00:59,  2.58s/it]epoch 1 loss 2.52167:  18%|█▊        | 5/28 [00:14<00:59,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.514[0m
[32m  eval_f1 = 0.145[0m
[32m  eval_mcc = 0.4867[0m
[32m  eval_precision = 0.1936[0m
[32m  eval_recall = 0.1404[0m
[32m  ********************[0m
[32m  Best f1:0.145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4867[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.52167:  21%|██▏       | 6/28 [00:20<01:27,  3.96s/it]epoch 1 loss 2.50033:  21%|██▏       | 6/28 [00:20<01:27,  3.96s/it]epoch 1 loss 2.50033:  25%|██▌       | 7/28 [00:20<00:58,  2.81s/it]epoch 1 loss 2.4839:  25%|██▌       | 7/28 [00:21<00:58,  2.81s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.543[0m
[32m  eval_f1 = 0.1641[0m
[32m  eval_mcc = 0.518[0m
[32m  eval_precision = 0.2205[0m
[32m  eval_recall = 0.1586[0m
[32m  ********************[0m
[32m  Best f1:0.1641[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.4839:  29%|██▊       | 8/28 [00:27<01:19,  3.99s/it]epoch 1 loss 2.45284:  29%|██▊       | 8/28 [00:27<01:19,  3.99s/it]epoch 1 loss 2.45284:  32%|███▏      | 9/28 [00:27<00:54,  2.87s/it]epoch 1 loss 2.44874:  32%|███▏      | 9/28 [00:28<00:54,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5562[0m
[32m  eval_f1 = 0.1684[0m
[32m  eval_mcc = 0.5306[0m
[32m  eval_precision = 0.2249[0m
[32m  eval_recall = 0.164[0m
[32m  ********************[0m
[32m  Best f1:0.1684[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.44874:  36%|███▌      | 10/28 [00:34<01:11,  3.95s/it]epoch 1 loss 2.43288:  36%|███▌      | 10/28 [00:34<01:11,  3.95s/it]epoch 1 loss 2.43288:  39%|███▉      | 11/28 [00:34<00:48,  2.87s/it]epoch 1 loss 2.39901:  39%|███▉      | 11/28 [00:35<00:48,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5673[0m
[32m  eval_f1 = 0.172[0m
[32m  eval_mcc = 0.541[0m
[32m  eval_precision = 0.2196[0m
[32m  eval_recall = 0.1665[0m
[32m  ********************[0m
[32m  Best f1:0.172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.541[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.39901:  43%|████▎     | 12/28 [00:41<01:03,  3.98s/it]epoch 1 loss 2.35631:  43%|████▎     | 12/28 [00:41<01:03,  3.98s/it]epoch 1 loss 2.35631:  46%|████▋     | 13/28 [00:41<00:43,  2.90s/it]epoch 1 loss 2.32387:  46%|████▋     | 13/28 [00:41<00:43,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5684[0m
[32m  eval_f1 = 0.172[0m
[32m  eval_mcc = 0.5425[0m
[32m  eval_precision = 0.2187[0m
[32m  eval_recall = 0.1666[0m
[32m  ********************[0m
[32m  Best MCC:0.5425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32387:  50%|█████     | 14/28 [00:46<00:49,  3.55s/it]epoch 1 loss 2.30136:  50%|█████     | 14/28 [00:46<00:49,  3.55s/it]epoch 1 loss 2.30136:  54%|█████▎    | 15/28 [00:46<00:33,  2.60s/it]epoch 1 loss 2.27354:  54%|█████▎    | 15/28 [00:47<00:33,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5704[0m
[32m  eval_f1 = 0.1728[0m
[32m  eval_mcc = 0.5456[0m
[32m  eval_precision = 0.2196[0m
[32m  eval_recall = 0.1676[0m
[32m  ********************[0m
[32m  Best f1:0.1728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5456[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27354:  57%|█████▋    | 16/28 [00:53<00:45,  3.83s/it]epoch 1 loss 2.25419:  57%|█████▋    | 16/28 [00:54<00:45,  3.83s/it]epoch 1 loss 2.25419:  61%|██████    | 17/28 [00:54<00:30,  2.81s/it]epoch 1 loss 2.23754:  61%|██████    | 17/28 [00:54<00:30,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5767[0m
[32m  eval_f1 = 0.1773[0m
[32m  eval_mcc = 0.5532[0m
[32m  eval_precision = 0.2267[0m
[32m  eval_recall = 0.1716[0m
[32m  ********************[0m
[32m  Best f1:0.1773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5532[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23754:  64%|██████▍   | 18/28 [01:00<00:38,  3.80s/it]epoch 1 loss 2.21476:  64%|██████▍   | 18/28 [01:00<00:38,  3.80s/it]epoch 1 loss 2.21476:  68%|██████▊   | 19/28 [01:00<00:25,  2.79s/it]epoch 1 loss 2.19372:  68%|██████▊   | 19/28 [01:01<00:25,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5839[0m
[32m  eval_f1 = 0.1848[0m
[32m  eval_mcc = 0.563[0m
[32m  eval_precision = 0.2416[0m
[32m  eval_recall = 0.1772[0m
[32m  ********************[0m
[32m  Best f1:0.1848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.19372:  71%|███████▏  | 20/28 [01:07<00:31,  3.92s/it]epoch 1 loss 2.17788:  71%|███████▏  | 20/28 [01:07<00:31,  3.92s/it]epoch 1 loss 2.17788:  75%|███████▌  | 21/28 [01:07<00:20,  2.88s/it]epoch 1 loss 2.1643:  75%|███████▌  | 21/28 [01:08<00:20,  2.88s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.59[0m
[32m  eval_f1 = 0.1998[0m
[32m  eval_mcc = 0.5692[0m
[32m  eval_precision = 0.2643[0m
[32m  eval_recall = 0.1903[0m
[32m  ********************[0m
[32m  Best f1:0.1998[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1643:  79%|███████▊  | 22/28 [01:14<00:23,  3.95s/it]epoch 1 loss 2.1522:  79%|███████▊  | 22/28 [01:14<00:23,  3.95s/it]epoch 1 loss 2.1522:  82%|████████▏ | 23/28 [01:14<00:14,  2.90s/it]epoch 1 loss 2.1307:  82%|████████▏ | 23/28 [01:14<00:14,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5941[0m
[32m  eval_f1 = 0.2161[0m
[32m  eval_mcc = 0.5723[0m
[32m  eval_precision = 0.2749[0m
[32m  eval_recall = 0.2044[0m
[32m  ********************[0m
[32m  Best f1:0.2161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1307:  86%|████████▌ | 24/28 [01:21<00:15,  3.98s/it]epoch 1 loss 2.11429:  86%|████████▌ | 24/28 [01:21<00:15,  3.98s/it]epoch 1 loss 2.11429:  89%|████████▉ | 25/28 [01:21<00:08,  2.91s/it]epoch 1 loss 2.10274:  89%|████████▉ | 25/28 [01:21<00:08,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5957[0m
[32m  eval_f1 = 0.2202[0m
[32m  eval_mcc = 0.5727[0m
[32m  eval_precision = 0.2819[0m
[32m  eval_recall = 0.2095[0m
[32m  ********************[0m
[32m  Best f1:0.2202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.10274:  93%|█████████▎| 26/28 [01:28<00:08,  4.03s/it]epoch 1 loss 2.08825:  93%|█████████▎| 26/28 [01:28<00:08,  4.03s/it]epoch 1 loss 2.08825:  96%|█████████▋| 27/28 [01:28<00:02,  2.95s/it]epoch 1 loss 2.08067:  96%|█████████▋| 27/28 [01:28<00:02,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6005[0m
[32m  eval_f1 = 0.2266[0m
[32m  eval_mcc = 0.5777[0m
[32m  eval_precision = 0.2916[0m
[32m  eval_recall = 0.2151[0m
[32m  ********************[0m
[32m  Best f1:0.2266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08067: 100%|██████████| 28/28 [01:33<00:00,  3.70s/it]epoch 1 loss 2.08067: 100%|██████████| 28/28 [01:33<00:00,  3.36s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.75489:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.75489:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 2 loss 1.71041:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6031[0m
[32m  eval_f1 = 0.2337[0m
[32m  eval_mcc = 0.5802[0m
[32m  eval_precision = 0.2927[0m
[32m  eval_recall = 0.2215[0m
[32m  ********************[0m
[32m  Best f1:0.2337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.71041:   7%|▋         | 2/28 [00:06<01:30,  3.49s/it]epoch 2 loss 1.70285:   7%|▋         | 2/28 [00:06<01:30,  3.49s/it]epoch 2 loss 1.70285:  11%|█         | 3/28 [00:06<00:52,  2.09s/it]epoch 2 loss 1.67223:  11%|█         | 3/28 [00:06<00:52,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6062[0m
[32m  eval_f1 = 0.2367[0m
[32m  eval_mcc = 0.5837[0m
[32m  eval_precision = 0.3045[0m
[32m  eval_recall = 0.2247[0m
[32m  ********************[0m
[32m  Best f1:0.2367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5837[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.67223:  14%|█▍        | 4/28 [00:13<01:32,  3.84s/it]epoch 2 loss 1.69175:  14%|█▍        | 4/28 [00:13<01:32,  3.84s/it]epoch 2 loss 1.69175:  18%|█▊        | 5/28 [00:13<01:00,  2.61s/it]epoch 2 loss 1.7136:  18%|█▊        | 5/28 [00:13<01:00,  2.61s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6088[0m
[32m  eval_f1 = 0.2421[0m
[32m  eval_mcc = 0.5862[0m
[32m  eval_precision = 0.3127[0m
[32m  eval_recall = 0.2289[0m
[32m  ********************[0m
[32m  Best f1:0.2421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5862[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.7136:  21%|██▏       | 6/28 [00:19<01:26,  3.95s/it]epoch 2 loss 1.71123:  21%|██▏       | 6/28 [00:20<01:26,  3.95s/it]epoch 2 loss 1.71123:  25%|██▌       | 7/28 [00:20<00:58,  2.80s/it]epoch 2 loss 1.6752:  25%|██▌       | 7/28 [00:20<00:58,  2.80s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6078[0m
[32m  eval_f1 = 0.2431[0m
[32m  eval_mcc = 0.5851[0m
[32m  eval_precision = 0.3156[0m
[32m  eval_recall = 0.2302[0m
[32m  ********************[0m
[32m  Best f1:0.2431[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.6752:  29%|██▊       | 8/28 [00:25<01:10,  3.51s/it]epoch 2 loss 1.64909:  29%|██▊       | 8/28 [00:25<01:10,  3.51s/it]epoch 2 loss 1.64909:  32%|███▏      | 9/28 [00:25<00:48,  2.54s/it]epoch 2 loss 1.64435:  32%|███▏      | 9/28 [00:26<00:48,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6095[0m
[32m  eval_f1 = 0.2445[0m
[32m  eval_mcc = 0.5869[0m
[32m  eval_precision = 0.3214[0m
[32m  eval_recall = 0.2308[0m
[32m  ********************[0m
[32m  Best f1:0.2445[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5869[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64435:  36%|███▌      | 10/28 [00:31<01:05,  3.65s/it]epoch 2 loss 1.63743:  36%|███▌      | 10/28 [00:32<01:05,  3.65s/it]epoch 2 loss 1.63743:  39%|███▉      | 11/28 [00:32<00:45,  2.66s/it]epoch 2 loss 1.63246:  39%|███▉      | 11/28 [00:32<00:45,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6107[0m
[32m  eval_f1 = 0.2471[0m
[32m  eval_mcc = 0.5887[0m
[32m  eval_precision = 0.3273[0m
[32m  eval_recall = 0.2322[0m
[32m  ********************[0m
[32m  Best f1:0.2471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5887[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63246:  43%|████▎     | 12/28 [00:38<00:59,  3.70s/it]epoch 2 loss 1.63278:  43%|████▎     | 12/28 [00:38<00:59,  3.70s/it]epoch 2 loss 1.63278:  46%|████▋     | 13/28 [00:38<00:40,  2.71s/it]epoch 2 loss 1.6254:  46%|████▋     | 13/28 [00:39<00:40,  2.71s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6124[0m
[32m  eval_f1 = 0.2498[0m
[32m  eval_mcc = 0.5916[0m
[32m  eval_precision = 0.3275[0m
[32m  eval_recall = 0.234[0m
[32m  ********************[0m
[32m  Best f1:0.2498[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.6254:  50%|█████     | 14/28 [00:45<00:54,  3.87s/it]epoch 2 loss 1.63439:  50%|█████     | 14/28 [00:45<00:54,  3.87s/it]epoch 2 loss 1.63439:  54%|█████▎    | 15/28 [00:45<00:36,  2.83s/it]epoch 2 loss 1.62801:  54%|█████▎    | 15/28 [00:46<00:36,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6174[0m
[32m  eval_f1 = 0.2575[0m
[32m  eval_mcc = 0.5968[0m
[32m  eval_precision = 0.3447[0m
[32m  eval_recall = 0.2399[0m
[32m  ********************[0m
[32m  Best f1:0.2575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5968[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62801:  57%|█████▋    | 16/28 [00:52<00:47,  3.94s/it]epoch 2 loss 1.62074:  57%|█████▋    | 16/28 [00:52<00:47,  3.94s/it]epoch 2 loss 1.62074:  61%|██████    | 17/28 [00:52<00:31,  2.89s/it]epoch 2 loss 1.61799:  61%|██████    | 17/28 [00:53<00:31,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6181[0m
[32m  eval_f1 = 0.2618[0m
[32m  eval_mcc = 0.5968[0m
[32m  eval_precision = 0.346[0m
[32m  eval_recall = 0.2435[0m
[32m  ********************[0m
[32m  Best f1:0.2618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.61799:  64%|██████▍   | 18/28 [00:57<00:35,  3.53s/it]epoch 2 loss 1.61567:  64%|██████▍   | 18/28 [00:58<00:35,  3.53s/it]epoch 2 loss 1.61567:  68%|██████▊   | 19/28 [00:58<00:23,  2.59s/it]epoch 2 loss 1.61264:  68%|██████▊   | 19/28 [00:58<00:23,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6204[0m
[32m  eval_f1 = 0.2658[0m
[32m  eval_mcc = 0.5984[0m
[32m  eval_precision = 0.3552[0m
[32m  eval_recall = 0.248[0m
[32m  ********************[0m
[32m  Best f1:0.2658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61264:  71%|███████▏  | 20/28 [01:04<00:30,  3.78s/it]epoch 2 loss 1.60933:  71%|███████▏  | 20/28 [01:05<00:30,  3.78s/it]epoch 2 loss 1.60933:  75%|███████▌  | 21/28 [01:05<00:19,  2.77s/it]epoch 2 loss 1.60524:  75%|███████▌  | 21/28 [01:05<00:19,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.621[0m
[32m  eval_f1 = 0.2675[0m
[32m  eval_mcc = 0.5987[0m
[32m  eval_precision = 0.3542[0m
[32m  eval_recall = 0.2507[0m
[32m  ********************[0m
[32m  Best f1:0.2675[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5987[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60524:  79%|███████▊  | 22/28 [01:11<00:22,  3.71s/it]epoch 2 loss 1.59806:  79%|███████▊  | 22/28 [01:11<00:22,  3.71s/it]epoch 2 loss 1.59806:  82%|████████▏ | 23/28 [01:11<00:13,  2.73s/it]epoch 2 loss 1.59389:  82%|████████▏ | 23/28 [01:11<00:13,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6234[0m
[32m  eval_f1 = 0.2706[0m
[32m  eval_mcc = 0.6019[0m
[32m  eval_precision = 0.3617[0m
[32m  eval_recall = 0.2532[0m
[32m  ********************[0m
[32m  Best f1:0.2706[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59389:  86%|████████▌ | 24/28 [01:17<00:14,  3.59s/it]epoch 2 loss 1.58687:  86%|████████▌ | 24/28 [01:17<00:14,  3.59s/it]epoch 2 loss 1.58687:  89%|████████▉ | 25/28 [01:17<00:07,  2.64s/it]epoch 2 loss 1.5853:  89%|████████▉ | 25/28 [01:17<00:07,  2.64s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6256[0m
[32m  eval_f1 = 0.2717[0m
[32m  eval_mcc = 0.6052[0m
[32m  eval_precision = 0.3602[0m
[32m  eval_recall = 0.2545[0m
[32m  ********************[0m
[32m  Best f1:0.2717[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5853:  93%|█████████▎| 26/28 [01:23<00:07,  3.55s/it]epoch 2 loss 1.58731:  93%|█████████▎| 26/28 [01:23<00:07,  3.55s/it]epoch 2 loss 1.58731:  96%|█████████▋| 27/28 [01:23<00:02,  2.61s/it]epoch 2 loss 1.5808:  96%|█████████▋| 27/28 [01:23<00:02,  2.61s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6271[0m
[32m  eval_f1 = 0.2745[0m
[32m  eval_mcc = 0.6084[0m
[32m  eval_precision = 0.3529[0m
[32m  eval_recall = 0.2558[0m
[32m  ********************[0m
[32m  Best f1:0.2745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5808: 100%|██████████| 28/28 [01:30<00:00,  3.72s/it]epoch 2 loss 1.5808: 100%|██████████| 28/28 [01:30<00:00,  3.21s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.38378:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.38378:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 3 loss 1.38652:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6269[0m
[32m  eval_f1 = 0.2742[0m
[32m  eval_mcc = 0.6085[0m
[32m  eval_precision = 0.3484[0m
[32m  eval_recall = 0.2553[0m
[32m  ********************[0m
[32m  Best MCC:0.6085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38652:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 3 loss 1.42185:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 3 loss 1.42185:  11%|█         | 3/28 [00:05<00:47,  1.89s/it]epoch 3 loss 1.45536:  11%|█         | 3/28 [00:06<00:47,  1.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.628[0m
[32m  eval_f1 = 0.2752[0m
[32m  eval_mcc = 0.6086[0m
[32m  eval_precision = 0.3552[0m
[32m  eval_recall = 0.2562[0m
[32m  ********************[0m
[32m  Best f1:0.2752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45536:  14%|█▍        | 4/28 [00:11<01:21,  3.38s/it]epoch 3 loss 1.48219:  14%|█▍        | 4/28 [00:11<01:21,  3.38s/it]epoch 3 loss 1.48219:  18%|█▊        | 5/28 [00:11<00:53,  2.32s/it]epoch 3 loss 1.50539:  18%|█▊        | 5/28 [00:12<00:53,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6299[0m
[32m  eval_f1 = 0.2776[0m
[32m  eval_mcc = 0.6091[0m
[32m  eval_precision = 0.3555[0m
[32m  eval_recall = 0.259[0m
[32m  ********************[0m
[32m  Best f1:0.2776[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50539:  21%|██▏       | 6/28 [00:18<01:23,  3.77s/it]epoch 3 loss 1.50141:  21%|██▏       | 6/28 [00:19<01:23,  3.77s/it]epoch 3 loss 1.50141:  25%|██▌       | 7/28 [00:19<00:56,  2.68s/it]epoch 3 loss 1.49783:  25%|██▌       | 7/28 [00:19<00:56,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6305[0m
[32m  eval_f1 = 0.2774[0m
[32m  eval_mcc = 0.6089[0m
[32m  eval_precision = 0.3526[0m
[32m  eval_recall = 0.2597[0m

epoch 3 loss 1.49783:  29%|██▊       | 8/28 [00:22<01:00,  3.04s/it]epoch 3 loss 1.49819:  29%|██▊       | 8/28 [00:23<01:00,  3.04s/it]epoch 3 loss 1.49819:  32%|███▏      | 9/28 [00:23<00:42,  2.21s/it]epoch 3 loss 1.5039:  32%|███▏      | 9/28 [00:23<00:42,  2.21s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.631[0m
[32m  eval_f1 = 0.2786[0m
[32m  eval_mcc = 0.6094[0m
[32m  eval_precision = 0.3521[0m
[32m  eval_recall = 0.2606[0m
[32m  ********************[0m
[32m  Best f1:0.2786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6094[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.5039:  36%|███▌      | 10/28 [00:29<01:02,  3.48s/it]epoch 3 loss 1.50041:  36%|███▌      | 10/28 [00:29<01:02,  3.48s/it]epoch 3 loss 1.50041:  39%|███▉      | 11/28 [00:29<00:43,  2.55s/it]epoch 3 loss 1.50179:  39%|███▉      | 11/28 [00:30<00:43,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6322[0m
[32m  eval_f1 = 0.2794[0m
[32m  eval_mcc = 0.6109[0m
[32m  eval_precision = 0.3533[0m
[32m  eval_recall = 0.2615[0m
[32m  ********************[0m
[32m  Best f1:0.2794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50179:  43%|████▎     | 12/28 [00:35<00:57,  3.57s/it]epoch 3 loss 1.49152:  43%|████▎     | 12/28 [00:36<00:57,  3.57s/it]epoch 3 loss 1.49152:  46%|████▋     | 13/28 [00:36<00:39,  2.62s/it]epoch 3 loss 1.48069:  46%|████▋     | 13/28 [00:36<00:39,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6333[0m
[32m  eval_f1 = 0.2801[0m
[32m  eval_mcc = 0.6122[0m
[32m  eval_precision = 0.3559[0m
[32m  eval_recall = 0.2621[0m
[32m  ********************[0m
[32m  Best f1:0.2801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48069:  50%|█████     | 14/28 [00:42<00:50,  3.62s/it]epoch 3 loss 1.48737:  50%|█████     | 14/28 [00:42<00:50,  3.62s/it]epoch 3 loss 1.48737:  54%|█████▎    | 15/28 [00:42<00:34,  2.66s/it]epoch 3 loss 1.48599:  54%|█████▎    | 15/28 [00:43<00:34,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6327[0m
[32m  eval_f1 = 0.2791[0m
[32m  eval_mcc = 0.6118[0m
[32m  eval_precision = 0.3552[0m
[32m  eval_recall = 0.2613[0m

epoch 3 loss 1.48599:  57%|█████▋    | 16/28 [00:46<00:36,  3.00s/it]epoch 3 loss 1.48755:  57%|█████▋    | 16/28 [00:46<00:36,  3.00s/it]epoch 3 loss 1.48755:  61%|██████    | 17/28 [00:46<00:24,  2.22s/it]epoch 3 loss 1.47881:  61%|██████    | 17/28 [00:47<00:24,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6321[0m
[32m  eval_f1 = 0.28[0m
[32m  eval_mcc = 0.6113[0m
[32m  eval_precision = 0.3559[0m
[32m  eval_recall = 0.2618[0m

epoch 3 loss 1.47881:  64%|██████▍   | 18/28 [00:50<00:26,  2.70s/it]epoch 3 loss 1.48204:  64%|██████▍   | 18/28 [00:51<00:26,  2.70s/it]epoch 3 loss 1.48204:  68%|██████▊   | 19/28 [00:51<00:18,  2.01s/it]epoch 3 loss 1.48314:  68%|██████▊   | 19/28 [00:51<00:18,  2.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6331[0m
[32m  eval_f1 = 0.2843[0m
[32m  eval_mcc = 0.6125[0m
[32m  eval_precision = 0.367[0m
[32m  eval_recall = 0.2648[0m
[32m  ********************[0m
[32m  Best f1:0.2843[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48314:  71%|███████▏  | 20/28 [00:57<00:26,  3.32s/it]epoch 3 loss 1.47757:  71%|███████▏  | 20/28 [00:57<00:26,  3.32s/it]epoch 3 loss 1.47757:  75%|███████▌  | 21/28 [00:57<00:17,  2.45s/it]epoch 3 loss 1.48048:  75%|███████▌  | 21/28 [00:58<00:17,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6342[0m
[32m  eval_f1 = 0.2871[0m
[32m  eval_mcc = 0.6138[0m
[32m  eval_precision = 0.3665[0m
[32m  eval_recall = 0.2671[0m
[32m  ********************[0m
[32m  Best f1:0.2871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48048:  79%|███████▊  | 22/28 [01:04<00:21,  3.62s/it]epoch 3 loss 1.47675:  79%|███████▊  | 22/28 [01:04<00:21,  3.62s/it]epoch 3 loss 1.47675:  82%|████████▏ | 23/28 [01:04<00:13,  2.67s/it]epoch 3 loss 1.47749:  82%|████████▏ | 23/28 [01:05<00:13,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6353[0m
[32m  eval_f1 = 0.29[0m
[32m  eval_mcc = 0.6147[0m
[32m  eval_precision = 0.3733[0m
[32m  eval_recall = 0.2689[0m
[32m  ********************[0m
[32m  Best f1:0.29[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47749:  86%|████████▌ | 24/28 [01:11<00:15,  3.83s/it]epoch 3 loss 1.47405:  86%|████████▌ | 24/28 [01:11<00:15,  3.83s/it]epoch 3 loss 1.47405:  89%|████████▉ | 25/28 [01:11<00:08,  2.81s/it]epoch 3 loss 1.47088:  89%|████████▉ | 25/28 [01:12<00:08,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6363[0m
[32m  eval_f1 = 0.2902[0m
[32m  eval_mcc = 0.6158[0m
[32m  eval_precision = 0.3757[0m
[32m  eval_recall = 0.2689[0m
[32m  ********************[0m
[32m  Best f1:0.2902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47088:  93%|█████████▎| 26/28 [01:18<00:07,  3.98s/it]epoch 3 loss 1.47079:  93%|█████████▎| 26/28 [01:18<00:07,  3.98s/it]epoch 3 loss 1.47079:  96%|█████████▋| 27/28 [01:18<00:02,  2.91s/it]epoch 3 loss 1.47064:  96%|█████████▋| 27/28 [01:18<00:02,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.2916[0m
[32m  eval_mcc = 0.6167[0m
[32m  eval_precision = 0.3766[0m
[32m  eval_recall = 0.2701[0m
[32m  ********************[0m
[32m  Best f1:0.2916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47064: 100%|██████████| 28/28 [01:25<00:00,  3.95s/it]epoch 3 loss 1.47064: 100%|██████████| 28/28 [01:25<00:00,  3.04s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.39876:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.39876:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 4 loss 1.39156:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6377[0m
[32m  eval_f1 = 0.2948[0m
[32m  eval_mcc = 0.6172[0m
[32m  eval_precision = 0.3811[0m
[32m  eval_recall = 0.2734[0m
[32m  ********************[0m
[32m  Best f1:0.2948[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39156:   7%|▋         | 2/28 [00:06<01:33,  3.58s/it]epoch 4 loss 1.37323:   7%|▋         | 2/28 [00:06<01:33,  3.58s/it]epoch 4 loss 1.37323:  11%|█         | 3/28 [00:06<00:53,  2.14s/it]epoch 4 loss 1.40127:  11%|█         | 3/28 [00:07<00:53,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.2947[0m
[32m  eval_mcc = 0.6171[0m
[32m  eval_precision = 0.383[0m
[32m  eval_recall = 0.2731[0m

epoch 4 loss 1.40127:  14%|█▍        | 4/28 [00:10<01:07,  2.80s/it]epoch 4 loss 1.36663:  14%|█▍        | 4/28 [00:10<01:07,  2.80s/it]epoch 4 loss 1.36663:  18%|█▊        | 5/28 [00:10<00:44,  1.94s/it]epoch 4 loss 1.3842:  18%|█▊        | 5/28 [00:11<00:44,  1.94s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6368[0m
[32m  eval_f1 = 0.2946[0m
[32m  eval_mcc = 0.6173[0m
[32m  eval_precision = 0.3795[0m
[32m  eval_recall = 0.2721[0m
[32m  ********************[0m
[32m  Best MCC:0.6173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3842:  21%|██▏       | 6/28 [00:15<01:05,  2.99s/it]epoch 4 loss 1.39192:  21%|██▏       | 6/28 [00:16<01:05,  2.99s/it]epoch 4 loss 1.39192:  25%|██▌       | 7/28 [00:16<00:45,  2.15s/it]epoch 4 loss 1.39165:  25%|██▌       | 7/28 [00:16<00:45,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.2957[0m
[32m  eval_mcc = 0.6177[0m
[32m  eval_precision = 0.3797[0m
[32m  eval_recall = 0.2736[0m
[32m  ********************[0m
[32m  Best f1:0.2957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6177[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39165:  29%|██▊       | 8/28 [00:22<01:06,  3.33s/it]epoch 4 loss 1.3888:  29%|██▊       | 8/28 [00:22<01:06,  3.33s/it] epoch 4 loss 1.3888:  32%|███▏      | 9/28 [00:22<00:46,  2.43s/it]epoch 4 loss 1.38406:  32%|███▏      | 9/28 [00:23<00:46,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6375[0m
[32m  eval_f1 = 0.2963[0m
[32m  eval_mcc = 0.618[0m
[32m  eval_precision = 0.3802[0m
[32m  eval_recall = 0.2742[0m
[32m  ********************[0m
[32m  Best f1:0.2963[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38406:  36%|███▌      | 10/28 [00:29<01:07,  3.76s/it]epoch 4 loss 1.38681:  36%|███▌      | 10/28 [00:29<01:07,  3.76s/it]epoch 4 loss 1.38681:  39%|███▉      | 11/28 [00:29<00:46,  2.74s/it]epoch 4 loss 1.39999:  39%|███▉      | 11/28 [00:30<00:46,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6378[0m
[32m  eval_f1 = 0.296[0m
[32m  eval_mcc = 0.6181[0m
[32m  eval_precision = 0.3796[0m
[32m  eval_recall = 0.274[0m
[32m  ********************[0m
[32m  Best MCC:0.6181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39999:  43%|████▎     | 12/28 [00:34<00:55,  3.44s/it]epoch 4 loss 1.40314:  43%|████▎     | 12/28 [00:35<00:55,  3.44s/it]epoch 4 loss 1.40314:  46%|████▋     | 13/28 [00:35<00:37,  2.52s/it]epoch 4 loss 1.40534:  46%|████▋     | 13/28 [00:35<00:37,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6386[0m
[32m  eval_f1 = 0.2962[0m
[32m  eval_mcc = 0.6186[0m
[32m  eval_precision = 0.3804[0m
[32m  eval_recall = 0.2744[0m
[32m  ********************[0m
[32m  Best MCC:0.6186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40534:  50%|█████     | 14/28 [00:39<00:44,  3.16s/it]epoch 4 loss 1.40905:  50%|█████     | 14/28 [00:40<00:44,  3.16s/it]epoch 4 loss 1.40905:  54%|█████▎    | 15/28 [00:40<00:30,  2.33s/it]epoch 4 loss 1.411:  54%|█████▎    | 15/28 [00:40<00:30,  2.33s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.2961[0m
[32m  eval_mcc = 0.6189[0m
[32m  eval_precision = 0.3822[0m
[32m  eval_recall = 0.2748[0m
[32m  ********************[0m
[32m  Best MCC:0.6189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.411:  57%|█████▋    | 16/28 [00:45<00:36,  3.06s/it]epoch 4 loss 1.41345:  57%|█████▋    | 16/28 [00:45<00:36,  3.06s/it]epoch 4 loss 1.41345:  61%|██████    | 17/28 [00:45<00:24,  2.26s/it]epoch 4 loss 1.42648:  61%|██████    | 17/28 [00:45<00:24,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.2978[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.3817[0m
[32m  eval_recall = 0.2765[0m
[32m  ********************[0m
[32m  Best f1:0.2978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.42648:  64%|██████▍   | 18/28 [00:50<00:30,  3.01s/it]epoch 4 loss 1.42511:  64%|██████▍   | 18/28 [00:50<00:30,  3.01s/it]epoch 4 loss 1.42511:  68%|██████▊   | 19/28 [00:50<00:20,  2.23s/it]epoch 4 loss 1.42536:  68%|██████▊   | 19/28 [00:51<00:20,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.639[0m
[32m  eval_f1 = 0.2992[0m
[32m  eval_mcc = 0.6183[0m
[32m  eval_precision = 0.3779[0m
[32m  eval_recall = 0.2782[0m
[32m  ********************[0m
[32m  Best f1:0.2992[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.42536:  71%|███████▏  | 20/28 [00:55<00:23,  2.98s/it]epoch 4 loss 1.42048:  71%|███████▏  | 20/28 [00:55<00:23,  2.98s/it]epoch 4 loss 1.42048:  75%|███████▌  | 21/28 [00:55<00:15,  2.21s/it]epoch 4 loss 1.42624:  75%|███████▌  | 21/28 [00:56<00:15,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.3[0m
[32m  eval_mcc = 0.6186[0m
[32m  eval_precision = 0.3785[0m
[32m  eval_recall = 0.2789[0m
[32m  ********************[0m
[32m  Best f1:0.3[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.42624:  79%|███████▊  | 22/28 [01:00<00:18,  3.06s/it]epoch 4 loss 1.4251:  79%|███████▊  | 22/28 [01:01<00:18,  3.06s/it] epoch 4 loss 1.4251:  82%|████████▏ | 23/28 [01:01<00:11,  2.26s/it]epoch 4 loss 1.42419:  82%|████████▏ | 23/28 [01:01<00:11,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.3[0m
[32m  eval_mcc = 0.6185[0m
[32m  eval_precision = 0.3778[0m
[32m  eval_recall = 0.2791[0m

epoch 4 loss 1.42419:  86%|████████▌ | 24/28 [01:05<00:10,  2.73s/it]epoch 4 loss 1.42527:  86%|████████▌ | 24/28 [01:05<00:10,  2.73s/it]epoch 4 loss 1.42527:  89%|████████▉ | 25/28 [01:05<00:06,  2.03s/it]epoch 4 loss 1.42393:  89%|████████▉ | 25/28 [01:05<00:06,  2.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.3002[0m
[32m  eval_mcc = 0.6185[0m
[32m  eval_precision = 0.3791[0m
[32m  eval_recall = 0.2793[0m
[32m  ********************[0m
[32m  Best f1:0.3002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.42393:  93%|█████████▎| 26/28 [01:10<00:05,  2.94s/it]epoch 4 loss 1.42793:  93%|█████████▎| 26/28 [01:10<00:05,  2.94s/it]epoch 4 loss 1.42793:  96%|█████████▋| 27/28 [01:10<00:02,  2.18s/it]epoch 4 loss 1.4245:  96%|█████████▋| 27/28 [01:11<00:02,  2.18s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6396[0m
[32m  eval_f1 = 0.3003[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.3794[0m
[32m  eval_recall = 0.2794[0m
[32m  ********************[0m
[32m  Best f1:0.3003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.4245: 100%|██████████| 28/28 [01:15<00:00,  2.98s/it]epoch 4 loss 1.4245: 100%|██████████| 28/28 [01:15<00:00,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6396[0m
[32m  eval_f1 = 0.3003[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.3794[0m
[32m  eval_recall = 0.2794[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6206[0m
[32m  eval_f1 = 0.2352[0m
[32m  eval_mcc = 0.6007[0m
[32m  eval_precision = 0.3073[0m
[32m  eval_recall = 0.2209[0m

