[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=7, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7', posratio=0.5, seed=892, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.63967:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.63967:   4%|▎         | 1/28 [00:00<00:20,  1.29it/s]epoch 0 loss 5.63207:   4%|▎         | 1/28 [00:01<00:20,  1.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0024[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = 0.0012[0m
[32m  eval_precision = 0.006[0m
[32m  eval_recall = 0.0005[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.63207:   7%|▋         | 2/28 [00:06<01:31,  3.51s/it]epoch 0 loss 5.62039:   7%|▋         | 2/28 [00:06<01:31,  3.51s/it]epoch 0 loss 5.62039:  11%|█         | 3/28 [00:06<00:52,  2.09s/it]epoch 0 loss 5.60403:  11%|█         | 3/28 [00:07<00:52,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0058[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = 0.0026[0m
[32m  eval_precision = 0.0121[0m
[32m  eval_recall = 0.001[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.60403:  14%|█▍        | 4/28 [00:12<01:23,  3.47s/it]epoch 0 loss 5.57464:  14%|█▍        | 4/28 [00:12<01:23,  3.47s/it]epoch 0 loss 5.57464:  18%|█▊        | 5/28 [00:12<00:54,  2.37s/it]epoch 0 loss 5.54193:  18%|█▊        | 5/28 [00:13<00:54,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0189[0m
[32m  eval_f1 = 0.0025[0m
[32m  eval_mcc = 0.0095[0m
[32m  eval_precision = 0.0109[0m
[32m  eval_recall = 0.003[0m
[32m  ********************[0m
[32m  Best f1:0.0025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0095[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.54193:  21%|██▏       | 6/28 [00:18<01:16,  3.50s/it]epoch 0 loss 5.50436:  21%|██▏       | 6/28 [00:18<01:16,  3.50s/it]epoch 0 loss 5.50436:  25%|██▌       | 7/28 [00:18<00:52,  2.49s/it]epoch 0 loss 5.46067:  25%|██▌       | 7/28 [00:19<00:52,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0462[0m
[32m  eval_f1 = 0.0054[0m
[32m  eval_mcc = 0.0199[0m
[32m  eval_precision = 0.0115[0m
[32m  eval_recall = 0.0084[0m
[32m  ********************[0m
[32m  Best f1:0.0054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.46067:  29%|██▊       | 8/28 [00:24<01:10,  3.50s/it]epoch 0 loss 5.40873:  29%|██▊       | 8/28 [00:24<01:10,  3.50s/it]epoch 0 loss 5.40873:  32%|███▏      | 9/28 [00:24<00:48,  2.54s/it]epoch 0 loss 5.35122:  32%|███▏      | 9/28 [00:25<00:48,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0792[0m
[32m  eval_f1 = 0.0119[0m
[32m  eval_mcc = 0.0419[0m
[32m  eval_precision = 0.0174[0m
[32m  eval_recall = 0.0183[0m
[32m  ********************[0m
[32m  Best f1:0.0119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0419[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.35122:  36%|███▌      | 10/28 [00:30<01:02,  3.47s/it]epoch 0 loss 5.28651:  36%|███▌      | 10/28 [00:30<01:02,  3.47s/it]epoch 0 loss 5.28651:  39%|███▉      | 11/28 [00:30<00:43,  2.54s/it]epoch 0 loss 5.22134:  39%|███▉      | 11/28 [00:31<00:43,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.098[0m
[32m  eval_f1 = 0.0162[0m
[32m  eval_mcc = 0.0572[0m
[32m  eval_precision = 0.0259[0m
[32m  eval_recall = 0.0237[0m
[32m  ********************[0m
[32m  Best f1:0.0162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0572[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.22134:  43%|████▎     | 12/28 [00:37<00:59,  3.73s/it]epoch 0 loss 5.15127:  43%|████▎     | 12/28 [00:37<00:59,  3.73s/it]epoch 0 loss 5.15127:  46%|████▋     | 13/28 [00:37<00:40,  2.73s/it]epoch 0 loss 5.07546:  46%|████▋     | 13/28 [00:38<00:40,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.121[0m
[32m  eval_f1 = 0.0254[0m
[32m  eval_mcc = 0.0775[0m
[32m  eval_precision = 0.0372[0m
[32m  eval_recall = 0.0308[0m
[32m  ********************[0m
[32m  Best f1:0.0254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0775[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.07546:  50%|█████     | 14/28 [00:44<00:54,  3.88s/it]epoch 0 loss 4.9996:  50%|█████     | 14/28 [00:44<00:54,  3.88s/it] epoch 0 loss 4.9996:  54%|█████▎    | 15/28 [00:44<00:36,  2.84s/it]epoch 0 loss 4.92064:  54%|█████▎    | 15/28 [00:45<00:36,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1508[0m
[32m  eval_f1 = 0.0295[0m
[32m  eval_mcc = 0.105[0m
[32m  eval_precision = 0.054[0m
[32m  eval_recall = 0.0325[0m
[32m  ********************[0m
[32m  Best f1:0.0295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.105[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.92064:  57%|█████▋    | 16/28 [00:50<00:44,  3.69s/it]epoch 0 loss 4.84102:  57%|█████▋    | 16/28 [00:50<00:44,  3.69s/it]epoch 0 loss 4.84102:  61%|██████    | 17/28 [00:50<00:29,  2.71s/it]epoch 0 loss 4.76454:  61%|██████    | 17/28 [00:51<00:29,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1944[0m
[32m  eval_f1 = 0.0336[0m
[32m  eval_mcc = 0.1512[0m
[32m  eval_precision = 0.0464[0m
[32m  eval_recall = 0.0361[0m
[32m  ********************[0m
[32m  Best f1:0.0336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.76454:  64%|██████▍   | 18/28 [00:56<00:36,  3.70s/it]epoch 0 loss 4.69465:  64%|██████▍   | 18/28 [00:57<00:36,  3.70s/it]epoch 0 loss 4.69465:  68%|██████▊   | 19/28 [00:57<00:24,  2.71s/it]epoch 0 loss 4.62019:  68%|██████▊   | 19/28 [00:57<00:24,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2624[0m
[32m  eval_f1 = 0.0433[0m
[32m  eval_mcc = 0.2232[0m
[32m  eval_precision = 0.0598[0m
[32m  eval_recall = 0.0447[0m
[32m  ********************[0m
[32m  Best f1:0.0433[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.62019:  71%|███████▏  | 20/28 [01:03<00:30,  3.85s/it]epoch 0 loss 4.54954:  71%|███████▏  | 20/28 [01:04<00:30,  3.85s/it]epoch 0 loss 4.54954:  75%|███████▌  | 21/28 [01:04<00:19,  2.82s/it]epoch 0 loss 4.47658:  75%|███████▌  | 21/28 [01:04<00:19,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3372[0m
[32m  eval_f1 = 0.0485[0m
[32m  eval_mcc = 0.2906[0m
[32m  eval_precision = 0.0784[0m
[32m  eval_recall = 0.0517[0m
[32m  ********************[0m
[32m  Best f1:0.0485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2906[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.47658:  79%|███████▊  | 22/28 [01:10<00:23,  3.92s/it]epoch 0 loss 4.40725:  79%|███████▊  | 22/28 [01:10<00:23,  3.92s/it]epoch 0 loss 4.40725:  82%|████████▏ | 23/28 [01:10<00:14,  2.87s/it]epoch 0 loss 4.34574:  82%|████████▏ | 23/28 [01:11<00:14,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3732[0m
[32m  eval_f1 = 0.064[0m
[32m  eval_mcc = 0.3282[0m
[32m  eval_precision = 0.1224[0m
[32m  eval_recall = 0.0639[0m
[32m  ********************[0m
[32m  Best f1:0.064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.34574:  86%|████████▌ | 24/28 [01:16<00:15,  3.80s/it]epoch 0 loss 4.29381:  86%|████████▌ | 24/28 [01:17<00:15,  3.80s/it]epoch 0 loss 4.29381:  89%|████████▉ | 25/28 [01:17<00:08,  2.79s/it]epoch 0 loss 4.23396:  89%|████████▉ | 25/28 [01:17<00:08,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3864[0m
[32m  eval_f1 = 0.0828[0m
[32m  eval_mcc = 0.3509[0m
[32m  eval_precision = 0.1427[0m
[32m  eval_recall = 0.0789[0m
[32m  ********************[0m
[32m  Best f1:0.0828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.23396:  93%|█████████▎| 26/28 [01:23<00:07,  3.68s/it]epoch 0 loss 4.17474:  93%|█████████▎| 26/28 [01:23<00:07,  3.68s/it]epoch 0 loss 4.17474:  96%|█████████▋| 27/28 [01:23<00:02,  2.70s/it]epoch 0 loss 4.11811:  96%|█████████▋| 27/28 [01:23<00:02,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.409[0m
[32m  eval_f1 = 0.1028[0m
[32m  eval_mcc = 0.3804[0m
[32m  eval_precision = 0.1589[0m
[32m  eval_recall = 0.0949[0m
[32m  ********************[0m
[32m  Best f1:0.1028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.11811: 100%|██████████| 28/28 [01:29<00:00,  3.78s/it]epoch 0 loss 4.11811: 100%|██████████| 28/28 [01:29<00:00,  3.21s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.37975:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.37975:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 1 loss 2.42189:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4572[0m
[32m  eval_f1 = 0.123[0m
[32m  eval_mcc = 0.4311[0m
[32m  eval_precision = 0.1857[0m
[32m  eval_recall = 0.1167[0m
[32m  ********************[0m
[32m  Best f1:0.123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4311[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42189:   7%|▋         | 2/28 [00:10<02:37,  6.05s/it]epoch 1 loss 2.39952:   7%|▋         | 2/28 [00:10<02:37,  6.05s/it]epoch 1 loss 2.39952:  11%|█         | 3/28 [00:10<01:27,  3.48s/it]epoch 1 loss 2.37496:  11%|█         | 3/28 [00:11<01:27,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.507[0m
[32m  eval_f1 = 0.1435[0m
[32m  eval_mcc = 0.4789[0m
[32m  eval_precision = 0.1999[0m
[32m  eval_recall = 0.1375[0m
[32m  ********************[0m
[32m  Best f1:0.1435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4789[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.37496:  14%|█▍        | 4/28 [00:20<02:23,  5.97s/it]epoch 1 loss 2.31308:  14%|█▍        | 4/28 [00:21<02:23,  5.97s/it]epoch 1 loss 2.31308:  18%|█▊        | 5/28 [00:21<01:31,  3.97s/it]epoch 1 loss 2.2983:  18%|█▊        | 5/28 [00:21<01:31,  3.97s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5498[0m
[32m  eval_f1 = 0.168[0m
[32m  eval_mcc = 0.5239[0m
[32m  eval_precision = 0.2235[0m
[32m  eval_recall = 0.161[0m
[32m  ********************[0m
[32m  Best f1:0.168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.2983:  21%|██▏       | 6/28 [00:28<01:56,  5.29s/it]epoch 1 loss 2.27807:  21%|██▏       | 6/28 [00:29<01:56,  5.29s/it]epoch 1 loss 2.27807:  25%|██▌       | 7/28 [00:29<01:17,  3.70s/it]epoch 1 loss 2.26277:  25%|██▌       | 7/28 [00:29<01:17,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5676[0m
[32m  eval_f1 = 0.1763[0m
[32m  eval_mcc = 0.5449[0m
[32m  eval_precision = 0.2255[0m
[32m  eval_recall = 0.1701[0m
[32m  ********************[0m
[32m  Best f1:0.1763[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5449[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26277:  29%|██▊       | 8/28 [00:37<01:41,  5.07s/it]epoch 1 loss 2.23341:  29%|██▊       | 8/28 [00:37<01:41,  5.07s/it]epoch 1 loss 2.23341:  32%|███▏      | 9/28 [00:37<01:08,  3.62s/it]epoch 1 loss 2.22975:  32%|███▏      | 9/28 [00:38<01:08,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5799[0m
[32m  eval_f1 = 0.1873[0m
[32m  eval_mcc = 0.5568[0m
[32m  eval_precision = 0.2527[0m
[32m  eval_recall = 0.1791[0m
[32m  ********************[0m
[32m  Best f1:0.1873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.22975:  36%|███▌      | 10/28 [00:47<01:37,  5.43s/it]epoch 1 loss 2.21405:  36%|███▌      | 10/28 [00:47<01:37,  5.43s/it]epoch 1 loss 2.21405:  39%|███▉      | 11/28 [00:47<01:06,  3.89s/it]epoch 1 loss 2.18082:  39%|███▉      | 11/28 [00:48<01:06,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.67it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5863[0m
[32m  eval_f1 = 0.1932[0m
[32m  eval_mcc = 0.5623[0m
[32m  eval_precision = 0.274[0m
[32m  eval_recall = 0.1824[0m
[32m  ********************[0m
[32m  Best f1:0.1932[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.18082:  43%|████▎     | 12/28 [00:58<01:35,  5.97s/it]epoch 1 loss 2.13981:  43%|████▎     | 12/28 [00:58<01:35,  5.97s/it]epoch 1 loss 2.13981:  46%|████▋     | 13/28 [00:58<01:04,  4.29s/it]epoch 1 loss 2.10966:  46%|████▋     | 13/28 [00:59<01:04,  4.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5887[0m
[32m  eval_f1 = 0.1959[0m
[32m  eval_mcc = 0.5646[0m
[32m  eval_precision = 0.2826[0m
[32m  eval_recall = 0.1835[0m
[32m  ********************[0m
[32m  Best f1:0.1959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.10966:  50%|█████     | 14/28 [01:06<01:15,  5.37s/it]epoch 1 loss 2.08917:  50%|█████     | 14/28 [01:07<01:15,  5.37s/it]epoch 1 loss 2.08917:  54%|█████▎    | 15/28 [01:07<00:50,  3.88s/it]epoch 1 loss 2.06314:  54%|█████▎    | 15/28 [01:07<00:50,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5924[0m
[32m  eval_f1 = 0.2183[0m
[32m  eval_mcc = 0.5691[0m
[32m  eval_precision = 0.3005[0m
[32m  eval_recall = 0.2019[0m
[32m  ********************[0m
[32m  Best f1:0.2183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.06314:  57%|█████▋    | 16/28 [01:15<01:02,  5.22s/it]epoch 1 loss 2.04622:  57%|█████▋    | 16/28 [01:15<01:02,  5.22s/it]epoch 1 loss 2.04622:  61%|██████    | 17/28 [01:15<00:41,  3.78s/it]epoch 1 loss 2.03177:  61%|██████    | 17/28 [01:16<00:41,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5986[0m
[32m  eval_f1 = 0.2256[0m
[32m  eval_mcc = 0.5762[0m
[32m  eval_precision = 0.3014[0m
[32m  eval_recall = 0.2112[0m
[32m  ********************[0m
[32m  Best f1:0.2256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5762[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03177:  64%|██████▍   | 18/28 [01:23<00:49,  4.91s/it]epoch 1 loss 2.01079:  64%|██████▍   | 18/28 [01:23<00:49,  4.91s/it]epoch 1 loss 2.01079:  68%|██████▊   | 19/28 [01:23<00:32,  3.56s/it]epoch 1 loss 1.99199:  68%|██████▊   | 19/28 [01:24<00:32,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6018[0m
[32m  eval_f1 = 0.2298[0m
[32m  eval_mcc = 0.5811[0m
[32m  eval_precision = 0.3114[0m
[32m  eval_recall = 0.2159[0m
[32m  ********************[0m
[32m  Best f1:0.2298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99199:  71%|███████▏  | 20/28 [01:30<00:36,  4.53s/it]epoch 1 loss 1.97847:  71%|███████▏  | 20/28 [01:31<00:36,  4.53s/it]epoch 1 loss 1.97847:  75%|███████▌  | 21/28 [01:31<00:23,  3.30s/it]epoch 1 loss 1.9668:  75%|███████▌  | 21/28 [01:31<00:23,  3.30s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6046[0m
[32m  eval_f1 = 0.2354[0m
[32m  eval_mcc = 0.5843[0m
[32m  eval_precision = 0.3098[0m
[32m  eval_recall = 0.2215[0m
[32m  ********************[0m
[32m  Best f1:0.2354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5843[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9668:  79%|███████▊  | 22/28 [01:38<00:26,  4.45s/it]epoch 1 loss 1.95683:  79%|███████▊  | 22/28 [01:38<00:26,  4.45s/it]epoch 1 loss 1.95683:  82%|████████▏ | 23/28 [01:38<00:16,  3.24s/it]epoch 1 loss 1.93751:  82%|████████▏ | 23/28 [01:38<00:16,  3.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6112[0m
[32m  eval_f1 = 0.2399[0m
[32m  eval_mcc = 0.5907[0m
[32m  eval_precision = 0.3145[0m
[32m  eval_recall = 0.2267[0m
[32m  ********************[0m
[32m  Best f1:0.2399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93751:  86%|████████▌ | 24/28 [01:45<00:17,  4.30s/it]epoch 1 loss 1.92303:  86%|████████▌ | 24/28 [01:45<00:17,  4.30s/it]epoch 1 loss 1.92303:  89%|████████▉ | 25/28 [01:45<00:09,  3.14s/it]epoch 1 loss 1.91323:  89%|████████▉ | 25/28 [01:46<00:09,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6155[0m
[32m  eval_f1 = 0.2427[0m
[32m  eval_mcc = 0.5945[0m
[32m  eval_precision = 0.32[0m
[32m  eval_recall = 0.2301[0m
[32m  ********************[0m
[32m  Best f1:0.2427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91323:  93%|█████████▎| 26/28 [01:52<00:08,  4.27s/it]epoch 1 loss 1.90052:  93%|█████████▎| 26/28 [01:53<00:08,  4.27s/it]epoch 1 loss 1.90052:  96%|█████████▋| 27/28 [01:53<00:03,  3.11s/it]epoch 1 loss 1.89588:  96%|█████████▋| 27/28 [01:53<00:03,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6151[0m
[32m  eval_f1 = 0.2496[0m
[32m  eval_mcc = 0.5933[0m
[32m  eval_precision = 0.3303[0m
[32m  eval_recall = 0.2361[0m
[32m  ********************[0m
[32m  Best f1:0.2496[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 1 loss 1.89588: 100%|██████████| 28/28 [01:57<00:00,  3.64s/it]epoch 1 loss 1.89588: 100%|██████████| 28/28 [01:57<00:00,  4.21s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.60872:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.60872:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s]epoch 2 loss 1.56705:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6163[0m
[32m  eval_f1 = 0.2538[0m
[32m  eval_mcc = 0.5941[0m
[32m  eval_precision = 0.3442[0m
[32m  eval_recall = 0.2401[0m
[32m  ********************[0m
[32m  Best f1:0.2538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.56705:   7%|▋         | 2/28 [00:05<01:20,  3.11s/it]epoch 2 loss 1.56513:   7%|▋         | 2/28 [00:05<01:20,  3.11s/it]epoch 2 loss 1.56513:  11%|█         | 3/28 [00:05<00:46,  1.87s/it]epoch 2 loss 1.53627:  11%|█         | 3/28 [00:06<00:46,  1.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6194[0m
[32m  eval_f1 = 0.2553[0m
[32m  eval_mcc = 0.5974[0m
[32m  eval_precision = 0.345[0m
[32m  eval_recall = 0.2415[0m
[32m  ********************[0m
[32m  Best f1:0.2553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5974[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53627:  14%|█▍        | 4/28 [00:16<02:10,  5.44s/it]epoch 2 loss 1.55719:  14%|█▍        | 4/28 [00:17<02:10,  5.44s/it]epoch 2 loss 1.55719:  18%|█▊        | 5/28 [00:17<01:23,  3.63s/it]epoch 2 loss 1.57895:  18%|█▊        | 5/28 [00:17<01:23,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6238[0m
[32m  eval_f1 = 0.2609[0m
[32m  eval_mcc = 0.6021[0m
[32m  eval_precision = 0.3498[0m
[32m  eval_recall = 0.2465[0m
[32m  ********************[0m
[32m  Best f1:0.2609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57895:  21%|██▏       | 6/28 [00:24<01:45,  4.79s/it]epoch 2 loss 1.57645:  21%|██▏       | 6/28 [00:24<01:45,  4.79s/it]epoch 2 loss 1.57645:  25%|██▌       | 7/28 [00:24<01:10,  3.37s/it]epoch 2 loss 1.54184:  25%|██▌       | 7/28 [00:25<01:10,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6262[0m
[32m  eval_f1 = 0.265[0m
[32m  eval_mcc = 0.6047[0m
[32m  eval_precision = 0.3601[0m
[32m  eval_recall = 0.2487[0m
[32m  ********************[0m
[32m  Best f1:0.265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54184:  29%|██▊       | 8/28 [00:31<01:29,  4.46s/it]epoch 2 loss 1.51632:  29%|██▊       | 8/28 [00:31<01:29,  4.46s/it]epoch 2 loss 1.51632:  32%|███▏      | 9/28 [00:31<01:00,  3.20s/it]epoch 2 loss 1.51228:  32%|███▏      | 9/28 [00:32<01:00,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.628[0m
[32m  eval_f1 = 0.2744[0m
[32m  eval_mcc = 0.6067[0m
[32m  eval_precision = 0.3651[0m
[32m  eval_recall = 0.2543[0m
[32m  ********************[0m
[32m  Best f1:0.2744[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51228:  36%|███▌      | 10/28 [00:41<01:31,  5.07s/it]epoch 2 loss 1.50625:  36%|███▌      | 10/28 [00:41<01:31,  5.07s/it]epoch 2 loss 1.50625:  39%|███▉      | 11/28 [00:41<01:02,  3.65s/it]epoch 2 loss 1.50186:  39%|███▉      | 11/28 [00:41<01:02,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6285[0m
[32m  eval_f1 = 0.2754[0m
[32m  eval_mcc = 0.6078[0m
[32m  eval_precision = 0.3605[0m
[32m  eval_recall = 0.2552[0m
[32m  ********************[0m
[32m  Best f1:0.2754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50186:  43%|████▎     | 12/28 [00:49<01:18,  4.89s/it]epoch 2 loss 1.50263:  43%|████▎     | 12/28 [00:49<01:18,  4.89s/it]epoch 2 loss 1.50263:  46%|████▋     | 13/28 [00:49<00:53,  3.54s/it]epoch 2 loss 1.49559:  46%|████▋     | 13/28 [00:50<00:53,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6314[0m
[32m  eval_f1 = 0.2826[0m
[32m  eval_mcc = 0.6119[0m
[32m  eval_precision = 0.3701[0m
[32m  eval_recall = 0.2605[0m
[32m  ********************[0m
[32m  Best f1:0.2826[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49559:  50%|█████     | 14/28 [00:59<01:15,  5.41s/it]epoch 2 loss 1.50563:  50%|█████     | 14/28 [00:59<01:15,  5.41s/it]epoch 2 loss 1.50563:  54%|█████▎    | 15/28 [00:59<00:50,  3.90s/it]epoch 2 loss 1.50057:  54%|█████▎    | 15/28 [01:00<00:50,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.634[0m
[32m  eval_f1 = 0.288[0m
[32m  eval_mcc = 0.6146[0m
[32m  eval_precision = 0.3857[0m
[32m  eval_recall = 0.2652[0m
[32m  ********************[0m
[32m  Best f1:0.288[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50057:  57%|█████▋    | 16/28 [01:06<00:55,  4.61s/it]epoch 2 loss 1.4943:  57%|█████▋    | 16/28 [01:06<00:55,  4.61s/it] epoch 2 loss 1.4943:  61%|██████    | 17/28 [01:06<00:36,  3.35s/it]epoch 2 loss 1.49171:  61%|██████    | 17/28 [01:06<00:36,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6361[0m
[32m  eval_f1 = 0.29[0m
[32m  eval_mcc = 0.6161[0m
[32m  eval_precision = 0.386[0m
[32m  eval_recall = 0.2683[0m
[32m  ********************[0m
[32m  Best f1:0.29[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49171:  64%|██████▍   | 18/28 [01:12<00:42,  4.28s/it]epoch 2 loss 1.49048:  64%|██████▍   | 18/28 [01:13<00:42,  4.28s/it]epoch 2 loss 1.49048:  68%|██████▊   | 19/28 [01:13<00:28,  3.12s/it]epoch 2 loss 1.48816:  68%|██████▊   | 19/28 [01:13<00:28,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.2926[0m
[32m  eval_mcc = 0.6167[0m
[32m  eval_precision = 0.3831[0m
[32m  eval_recall = 0.2718[0m
[32m  ********************[0m
[32m  Best f1:0.2926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48816:  71%|███████▏  | 20/28 [01:19<00:31,  3.92s/it]epoch 2 loss 1.48549:  71%|███████▏  | 20/28 [01:19<00:31,  3.92s/it]epoch 2 loss 1.48549:  75%|███████▌  | 21/28 [01:19<00:20,  2.87s/it]epoch 2 loss 1.48225:  75%|███████▌  | 21/28 [01:19<00:20,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6379[0m
[32m  eval_f1 = 0.2927[0m
[32m  eval_mcc = 0.6169[0m
[32m  eval_precision = 0.3833[0m
[32m  eval_recall = 0.2724[0m
[32m  ********************[0m
[32m  Best f1:0.2927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48225:  79%|███████▊  | 22/28 [01:26<00:23,  3.96s/it]epoch 2 loss 1.47553:  79%|███████▊  | 22/28 [01:26<00:23,  3.96s/it]epoch 2 loss 1.47553:  82%|████████▏ | 23/28 [01:26<00:14,  2.90s/it]epoch 2 loss 1.47178:  82%|████████▏ | 23/28 [01:26<00:14,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6395[0m
[32m  eval_f1 = 0.2941[0m
[32m  eval_mcc = 0.6189[0m
[32m  eval_precision = 0.3846[0m
[32m  eval_recall = 0.2729[0m
[32m  ********************[0m
[32m  Best f1:0.2941[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47178:  86%|████████▌ | 24/28 [01:32<00:15,  3.98s/it]epoch 2 loss 1.46558:  86%|████████▌ | 24/28 [01:33<00:15,  3.98s/it]epoch 2 loss 1.46558:  89%|████████▉ | 25/28 [01:33<00:08,  2.91s/it]epoch 2 loss 1.46377:  89%|████████▉ | 25/28 [01:33<00:08,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6418[0m
[32m  eval_f1 = 0.2965[0m
[32m  eval_mcc = 0.6218[0m
[32m  eval_precision = 0.3842[0m
[32m  eval_recall = 0.2751[0m
[32m  ********************[0m
[32m  Best f1:0.2965[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46377:  93%|█████████▎| 26/28 [01:39<00:07,  3.73s/it]epoch 2 loss 1.466:  93%|█████████▎| 26/28 [01:39<00:07,  3.73s/it]  epoch 2 loss 1.466:  96%|█████████▋| 27/28 [01:39<00:02,  2.74s/it]epoch 2 loss 1.45987:  96%|█████████▋| 27/28 [01:39<00:02,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.643[0m
[32m  eval_f1 = 0.2971[0m
[32m  eval_mcc = 0.6242[0m
[32m  eval_precision = 0.3853[0m
[32m  eval_recall = 0.2751[0m
[32m  ********************[0m
[32m  Best f1:0.2971[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45987: 100%|██████████| 28/28 [01:45<00:00,  3.58s/it]epoch 2 loss 1.45987: 100%|██████████| 28/28 [01:45<00:00,  3.75s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.26753:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.26753:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 3 loss 1.27156:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6444[0m
[32m  eval_f1 = 0.2972[0m
[32m  eval_mcc = 0.6261[0m
[32m  eval_precision = 0.3864[0m
[32m  eval_recall = 0.2746[0m
[32m  ********************[0m
[32m  Best f1:0.2972[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27156:   7%|▋         | 2/28 [00:07<01:45,  4.05s/it]epoch 3 loss 1.31024:   7%|▋         | 2/28 [00:07<01:45,  4.05s/it]epoch 3 loss 1.31024:  11%|█         | 3/28 [00:07<00:59,  2.39s/it]epoch 3 loss 1.34262:  11%|█         | 3/28 [00:07<00:59,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6459[0m
[32m  eval_f1 = 0.2983[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.3862[0m
[32m  eval_recall = 0.275[0m
[32m  ********************[0m
[32m  Best f1:0.2983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34262:  14%|█▍        | 4/28 [00:14<01:37,  4.04s/it]epoch 3 loss 1.37059:  14%|█▍        | 4/28 [00:14<01:37,  4.04s/it]epoch 3 loss 1.37059:  18%|█▊        | 5/28 [00:14<01:02,  2.74s/it]epoch 3 loss 1.39593:  18%|█▊        | 5/28 [00:14<01:02,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6467[0m
[32m  eval_f1 = 0.3038[0m
[32m  eval_mcc = 0.6273[0m
[32m  eval_precision = 0.3973[0m
[32m  eval_recall = 0.2788[0m
[32m  ********************[0m
[32m  Best f1:0.3038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.39593:  21%|██▏       | 6/28 [00:19<01:17,  3.51s/it]epoch 3 loss 1.39122:  21%|██▏       | 6/28 [00:19<01:17,  3.51s/it]epoch 3 loss 1.39122:  25%|██▌       | 7/28 [00:19<00:52,  2.50s/it]epoch 3 loss 1.38784:  25%|██▌       | 7/28 [00:20<00:52,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6469[0m
[32m  eval_f1 = 0.3047[0m
[32m  eval_mcc = 0.6267[0m
[32m  eval_precision = 0.4013[0m
[32m  eval_recall = 0.2801[0m
[32m  ********************[0m
[32m  Best f1:0.3047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.38784:  29%|██▊       | 8/28 [00:24<01:05,  3.26s/it]epoch 3 loss 1.38581:  29%|██▊       | 8/28 [00:25<01:05,  3.26s/it]epoch 3 loss 1.38581:  32%|███▏      | 9/28 [00:25<00:45,  2.37s/it]epoch 3 loss 1.39098:  32%|███▏      | 9/28 [00:25<00:45,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6485[0m
[32m  eval_f1 = 0.3067[0m
[32m  eval_mcc = 0.6284[0m
[32m  eval_precision = 0.4066[0m
[32m  eval_recall = 0.2817[0m
[32m  ********************[0m
[32m  Best f1:0.3067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39098:  36%|███▌      | 10/28 [00:31<01:02,  3.46s/it]epoch 3 loss 1.38831:  36%|███▌      | 10/28 [00:31<01:02,  3.46s/it]epoch 3 loss 1.38831:  39%|███▉      | 11/28 [00:31<00:42,  2.53s/it]epoch 3 loss 1.38908:  39%|███▉      | 11/28 [00:31<00:42,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6498[0m
[32m  eval_f1 = 0.3085[0m
[32m  eval_mcc = 0.6297[0m
[32m  eval_precision = 0.4079[0m
[32m  eval_recall = 0.2832[0m
[32m  ********************[0m
[32m  Best f1:0.3085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38908:  43%|████▎     | 12/28 [00:38<01:00,  3.76s/it]epoch 3 loss 1.38002:  43%|████▎     | 12/28 [00:38<01:00,  3.76s/it]epoch 3 loss 1.38002:  46%|████▋     | 13/28 [00:38<00:41,  2.75s/it]epoch 3 loss 1.36906:  46%|████▋     | 13/28 [00:38<00:41,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6511[0m
[32m  eval_f1 = 0.3101[0m
[32m  eval_mcc = 0.6312[0m
[32m  eval_precision = 0.4126[0m
[32m  eval_recall = 0.2851[0m
[32m  ********************[0m
[32m  Best f1:0.3101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36906:  50%|█████     | 14/28 [00:45<00:55,  3.97s/it]epoch 3 loss 1.37526:  50%|█████     | 14/28 [00:45<00:55,  3.97s/it]epoch 3 loss 1.37526:  54%|█████▎    | 15/28 [00:45<00:37,  2.91s/it]epoch 3 loss 1.37387:  54%|█████▎    | 15/28 [00:46<00:37,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6519[0m
[32m  eval_f1 = 0.3107[0m
[32m  eval_mcc = 0.6321[0m
[32m  eval_precision = 0.4134[0m
[32m  eval_recall = 0.2858[0m
[32m  ********************[0m
[32m  Best f1:0.3107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37387:  57%|█████▋    | 16/28 [00:52<00:48,  4.01s/it]epoch 3 loss 1.3753:  57%|█████▋    | 16/28 [00:52<00:48,  4.01s/it] epoch 3 loss 1.3753:  61%|██████    | 17/28 [00:52<00:32,  2.93s/it]epoch 3 loss 1.36693:  61%|██████    | 17/28 [00:53<00:32,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3105[0m
[32m  eval_mcc = 0.6316[0m
[32m  eval_precision = 0.4133[0m
[32m  eval_recall = 0.2852[0m

epoch 3 loss 1.36693:  64%|██████▍   | 18/28 [00:56<00:31,  3.19s/it]epoch 3 loss 1.37018:  64%|██████▍   | 18/28 [00:56<00:31,  3.19s/it]epoch 3 loss 1.37018:  68%|██████▊   | 19/28 [00:56<00:21,  2.35s/it]epoch 3 loss 1.37191:  68%|██████▊   | 19/28 [00:57<00:21,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6511[0m
[32m  eval_f1 = 0.3103[0m
[32m  eval_mcc = 0.6315[0m
[32m  eval_precision = 0.4133[0m
[32m  eval_recall = 0.2852[0m

epoch 3 loss 1.37191:  71%|███████▏  | 20/28 [01:00<00:22,  2.79s/it]epoch 3 loss 1.36687:  71%|███████▏  | 20/28 [01:01<00:22,  2.79s/it]epoch 3 loss 1.36687:  75%|███████▌  | 21/28 [01:01<00:14,  2.07s/it]epoch 3 loss 1.36934:  75%|███████▌  | 21/28 [01:01<00:14,  2.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6523[0m
[32m  eval_f1 = 0.3109[0m
[32m  eval_mcc = 0.6328[0m
[32m  eval_precision = 0.4053[0m
[32m  eval_recall = 0.286[0m
[32m  ********************[0m
[32m  Best f1:0.3109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36934:  79%|███████▊  | 22/28 [01:10<00:25,  4.30s/it]epoch 3 loss 1.36634:  79%|███████▊  | 22/28 [01:11<00:25,  4.30s/it]epoch 3 loss 1.36634:  82%|████████▏ | 23/28 [01:11<00:15,  3.13s/it]epoch 3 loss 1.36707:  82%|████████▏ | 23/28 [01:11<00:15,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6532[0m
[32m  eval_f1 = 0.3119[0m
[32m  eval_mcc = 0.6337[0m
[32m  eval_precision = 0.408[0m
[32m  eval_recall = 0.2865[0m
[32m  ********************[0m
[32m  Best f1:0.3119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36707:  86%|████████▌ | 24/28 [01:18<00:17,  4.49s/it]epoch 3 loss 1.36389:  86%|████████▌ | 24/28 [01:19<00:17,  4.49s/it]epoch 3 loss 1.36389:  89%|████████▉ | 25/28 [01:19<00:09,  3.27s/it]epoch 3 loss 1.36078:  89%|████████▉ | 25/28 [01:19<00:09,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6534[0m
[32m  eval_f1 = 0.3113[0m
[32m  eval_mcc = 0.634[0m
[32m  eval_precision = 0.4052[0m
[32m  eval_recall = 0.286[0m
[32m  ********************[0m
[32m  Best MCC:0.634[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36078:  93%|█████████▎| 26/28 [01:23<00:07,  3.75s/it]epoch 3 loss 1.36098:  93%|█████████▎| 26/28 [01:24<00:07,  3.75s/it]epoch 3 loss 1.36098:  96%|█████████▋| 27/28 [01:24<00:02,  2.75s/it]epoch 3 loss 1.36001:  96%|█████████▋| 27/28 [01:24<00:02,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6539[0m
[32m  eval_f1 = 0.3167[0m
[32m  eval_mcc = 0.6344[0m
[32m  eval_precision = 0.4172[0m
[32m  eval_recall = 0.291[0m
[32m  ********************[0m
[32m  Best f1:0.3167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36001: 100%|██████████| 28/28 [01:30<00:00,  3.82s/it]epoch 3 loss 1.36001: 100%|██████████| 28/28 [01:30<00:00,  3.24s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.29682:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.29682:   4%|▎         | 1/28 [00:00<00:11,  2.30it/s]epoch 4 loss 1.29044:   4%|▎         | 1/28 [00:00<00:11,  2.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6543[0m
[32m  eval_f1 = 0.3293[0m
[32m  eval_mcc = 0.635[0m
[32m  eval_precision = 0.427[0m
[32m  eval_recall = 0.3011[0m
[32m  ********************[0m
[32m  Best f1:0.3293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.635[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29044:   7%|▋         | 2/28 [00:06<01:30,  3.46s/it]epoch 4 loss 1.27176:   7%|▋         | 2/28 [00:06<01:30,  3.46s/it]epoch 4 loss 1.27176:  11%|█         | 3/28 [00:06<00:51,  2.07s/it]epoch 4 loss 1.29812:  11%|█         | 3/28 [00:06<00:51,  2.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6548[0m
[32m  eval_f1 = 0.3313[0m
[32m  eval_mcc = 0.6358[0m
[32m  eval_precision = 0.4343[0m
[32m  eval_recall = 0.3024[0m
[32m  ********************[0m
[32m  Best f1:0.3313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29812:  14%|█▍        | 4/28 [00:11<01:22,  3.45s/it]epoch 4 loss 1.26443:  14%|█▍        | 4/28 [00:12<01:22,  3.45s/it]epoch 4 loss 1.26443:  18%|█▊        | 5/28 [00:12<00:54,  2.36s/it]epoch 4 loss 1.28087:  18%|█▊        | 5/28 [00:12<00:54,  2.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6549[0m
[32m  eval_f1 = 0.3347[0m
[32m  eval_mcc = 0.6362[0m
[32m  eval_precision = 0.4383[0m
[32m  eval_recall = 0.3044[0m
[32m  ********************[0m
[32m  Best f1:0.3347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28087:  21%|██▏       | 6/28 [00:18<01:16,  3.48s/it]epoch 4 loss 1.28983:  21%|██▏       | 6/28 [00:18<01:16,  3.48s/it]epoch 4 loss 1.28983:  25%|██▌       | 7/28 [00:18<00:52,  2.48s/it]epoch 4 loss 1.29055:  25%|██▌       | 7/28 [00:18<00:52,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6555[0m
[32m  eval_f1 = 0.3348[0m
[32m  eval_mcc = 0.637[0m
[32m  eval_precision = 0.4379[0m
[32m  eval_recall = 0.3046[0m
[32m  ********************[0m
[32m  Best f1:0.3348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29055:  29%|██▊       | 8/28 [00:24<01:09,  3.49s/it]epoch 4 loss 1.28726:  29%|██▊       | 8/28 [00:24<01:09,  3.49s/it]epoch 4 loss 1.28726:  32%|███▏      | 9/28 [00:24<00:48,  2.53s/it]epoch 4 loss 1.28237:  32%|███▏      | 9/28 [00:24<00:48,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6559[0m
[32m  eval_f1 = 0.3349[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4374[0m
[32m  eval_recall = 0.3049[0m
[32m  ********************[0m
[32m  Best f1:0.3349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28237:  36%|███▌      | 10/28 [00:31<01:08,  3.80s/it]epoch 4 loss 1.28483:  36%|███▌      | 10/28 [00:31<01:08,  3.80s/it]epoch 4 loss 1.28483:  39%|███▉      | 11/28 [00:31<00:47,  2.77s/it]epoch 4 loss 1.29723:  39%|███▉      | 11/28 [00:32<00:47,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6564[0m
[32m  eval_f1 = 0.3356[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.4375[0m
[32m  eval_recall = 0.3057[0m
[32m  ********************[0m
[32m  Best f1:0.3356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29723:  43%|████▎     | 12/28 [00:38<01:02,  3.91s/it]epoch 4 loss 1.30012:  43%|████▎     | 12/28 [00:38<01:02,  3.91s/it]epoch 4 loss 1.30012:  46%|████▋     | 13/28 [00:38<00:42,  2.86s/it]epoch 4 loss 1.3033:  46%|████▋     | 13/28 [00:38<00:42,  2.86s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6563[0m
[32m  eval_f1 = 0.3362[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4366[0m
[32m  eval_recall = 0.3065[0m
[32m  ********************[0m
[32m  Best f1:0.3362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.3033:  50%|█████     | 14/28 [00:43<00:49,  3.51s/it]epoch 4 loss 1.30594:  50%|█████     | 14/28 [00:44<00:49,  3.51s/it]epoch 4 loss 1.30594:  54%|█████▎    | 15/28 [00:44<00:33,  2.58s/it]epoch 4 loss 1.30811:  54%|█████▎    | 15/28 [00:44<00:33,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3356[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4354[0m
[32m  eval_recall = 0.3063[0m

epoch 4 loss 1.30811:  57%|█████▋    | 16/28 [00:47<00:35,  2.95s/it]epoch 4 loss 1.3099:  57%|█████▋    | 16/28 [00:48<00:35,  2.95s/it] epoch 4 loss 1.3099:  61%|██████    | 17/28 [00:48<00:23,  2.18s/it]epoch 4 loss 1.32291:  61%|██████    | 17/28 [00:48<00:23,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3362[0m
[32m  eval_mcc = 0.6376[0m
[32m  eval_precision = 0.4351[0m
[32m  eval_recall = 0.3071[0m
[32m  ********************[0m
[32m  Best f1:0.3362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.32291:  64%|██████▍   | 18/28 [00:53<00:30,  3.10s/it]epoch 4 loss 1.32072:  64%|██████▍   | 18/28 [00:53<00:30,  3.10s/it]epoch 4 loss 1.32072:  68%|██████▊   | 19/28 [00:53<00:20,  2.29s/it]epoch 4 loss 1.3206:  68%|██████▊   | 19/28 [00:54<00:20,  2.29s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6567[0m
[32m  eval_f1 = 0.3363[0m
[32m  eval_mcc = 0.6372[0m
[32m  eval_precision = 0.4332[0m
[32m  eval_recall = 0.3074[0m
[32m  ********************[0m
[32m  Best f1:0.3363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.3206:  71%|███████▏  | 20/28 [00:58<00:24,  3.05s/it]epoch 4 loss 1.3161:  71%|███████▏  | 20/28 [00:59<00:24,  3.05s/it]epoch 4 loss 1.3161:  75%|███████▌  | 21/28 [00:59<00:15,  2.26s/it]epoch 4 loss 1.32169:  75%|███████▌  | 21/28 [00:59<00:15,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6568[0m
[32m  eval_f1 = 0.3367[0m
[32m  eval_mcc = 0.6372[0m
[32m  eval_precision = 0.433[0m
[32m  eval_recall = 0.3082[0m
[32m  ********************[0m
[32m  Best f1:0.3367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.32169:  79%|███████▊  | 22/28 [01:04<00:18,  3.06s/it]epoch 4 loss 1.3204:  79%|███████▊  | 22/28 [01:04<00:18,  3.06s/it] epoch 4 loss 1.3204:  82%|████████▏ | 23/28 [01:04<00:11,  2.26s/it]epoch 4 loss 1.31951:  82%|████████▏ | 23/28 [01:04<00:11,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6571[0m
[32m  eval_f1 = 0.3374[0m
[32m  eval_mcc = 0.6374[0m
[32m  eval_precision = 0.4326[0m
[32m  eval_recall = 0.3094[0m
[32m  ********************[0m
[32m  Best f1:0.3374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.31951:  86%|████████▌ | 24/28 [01:12<00:16,  4.13s/it]epoch 4 loss 1.3207:  86%|████████▌ | 24/28 [01:13<00:16,  4.13s/it] epoch 4 loss 1.3207:  89%|████████▉ | 25/28 [01:13<00:09,  3.02s/it]epoch 4 loss 1.3189:  89%|████████▉ | 25/28 [01:13<00:09,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6572[0m
[32m  eval_f1 = 0.3376[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4324[0m
[32m  eval_recall = 0.3095[0m
[32m  ********************[0m
[32m  Best f1:0.3376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.3189:  93%|█████████▎| 26/28 [01:18<00:07,  3.68s/it]epoch 4 loss 1.32265:  93%|█████████▎| 26/28 [01:18<00:07,  3.68s/it]epoch 4 loss 1.32265:  96%|█████████▋| 27/28 [01:18<00:02,  2.70s/it]epoch 4 loss 1.31866:  96%|█████████▋| 27/28 [01:19<00:02,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6572[0m
[32m  eval_f1 = 0.3375[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4323[0m
[32m  eval_recall = 0.3094[0m

epoch 4 loss 1.31866: 100%|██████████| 28/28 [01:22<00:00,  2.97s/it]epoch 4 loss 1.31866: 100%|██████████| 28/28 [01:22<00:00,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6572[0m
[32m  eval_f1 = 0.3376[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4324[0m
[32m  eval_recall = 0.3095[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6337[0m
[32m  eval_f1 = 0.262[0m
[32m  eval_mcc = 0.6149[0m
[32m  eval_precision = 0.3449[0m
[32m  eval_recall = 0.2422[0m

