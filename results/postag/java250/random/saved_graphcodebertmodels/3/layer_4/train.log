[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4', posratio=0.5, seed=892, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.66623:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.66623:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.65857:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0039[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = 0.0018[0m
[32m  eval_precision = 0.0105[0m
[32m  eval_recall = 0.0021[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.65857:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.65413:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.65413:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 0 loss 5.63895:  11%|█         | 3/28 [00:07<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0128[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = 0.0099[0m
[32m  eval_precision = 0.0111[0m
[32m  eval_recall = 0.0034[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.63895:  14%|█▍        | 4/28 [00:12<01:24,  3.52s/it]epoch 0 loss 5.6127:  14%|█▍        | 4/28 [00:12<01:24,  3.52s/it] epoch 0 loss 5.6127:  18%|█▊        | 5/28 [00:12<00:55,  2.40s/it]epoch 0 loss 5.58243:  18%|█▊        | 5/28 [00:13<00:55,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0258[0m
[32m  eval_f1 = 0.0046[0m
[32m  eval_mcc = 0.0191[0m
[32m  eval_precision = 0.0156[0m
[32m  eval_recall = 0.005[0m
[32m  ********************[0m
[32m  Best f1:0.0046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.58243:  21%|██▏       | 6/28 [00:23<01:56,  5.28s/it]epoch 0 loss 5.54465:  21%|██▏       | 6/28 [00:24<01:56,  5.28s/it]epoch 0 loss 5.54465:  25%|██▌       | 7/28 [00:24<01:17,  3.69s/it]epoch 0 loss 5.50272:  25%|██▌       | 7/28 [00:24<01:17,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0541[0m
[32m  eval_f1 = 0.0079[0m
[32m  eval_mcc = 0.036[0m
[32m  eval_precision = 0.0189[0m
[32m  eval_recall = 0.0092[0m
[32m  ********************[0m
[32m  Best f1:0.0079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.50272:  29%|██▊       | 8/28 [00:29<01:25,  4.28s/it]epoch 0 loss 5.45175:  29%|██▊       | 8/28 [00:29<01:25,  4.28s/it]epoch 0 loss 5.45175:  32%|███▏      | 9/28 [00:29<00:58,  3.07s/it]epoch 0 loss 5.39394:  32%|███▏      | 9/28 [00:30<00:58,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0967[0m
[32m  eval_f1 = 0.0201[0m
[32m  eval_mcc = 0.067[0m
[32m  eval_precision = 0.0305[0m
[32m  eval_recall = 0.0238[0m
[32m  ********************[0m
[32m  Best f1:0.0201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.39394:  36%|███▌      | 10/28 [00:35<01:10,  3.90s/it]epoch 0 loss 5.33078:  36%|███▌      | 10/28 [00:36<01:10,  3.90s/it]epoch 0 loss 5.33078:  39%|███▉      | 11/28 [00:36<00:48,  2.84s/it]epoch 0 loss 5.26511:  39%|███▉      | 11/28 [00:36<00:48,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1328[0m
[32m  eval_f1 = 0.026[0m
[32m  eval_mcc = 0.098[0m
[32m  eval_precision = 0.0324[0m
[32m  eval_recall = 0.0329[0m
[32m  ********************[0m
[32m  Best f1:0.026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.26511:  43%|████▎     | 12/28 [00:41<00:59,  3.70s/it]epoch 0 loss 5.19439:  43%|████▎     | 12/28 [00:42<00:59,  3.70s/it]epoch 0 loss 5.19439:  46%|████▋     | 13/28 [00:42<00:40,  2.71s/it]epoch 0 loss 5.11877:  46%|████▋     | 13/28 [00:42<00:40,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1691[0m
[32m  eval_f1 = 0.033[0m
[32m  eval_mcc = 0.1309[0m
[32m  eval_precision = 0.0464[0m
[32m  eval_recall = 0.0404[0m
[32m  ********************[0m
[32m  Best f1:0.033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.11877:  50%|█████     | 14/28 [00:47<00:49,  3.57s/it]epoch 0 loss 5.04195:  50%|█████     | 14/28 [00:48<00:49,  3.57s/it]epoch 0 loss 5.04195:  54%|█████▎    | 15/28 [00:48<00:34,  2.62s/it]epoch 0 loss 4.9616:  54%|█████▎    | 15/28 [00:48<00:34,  2.62s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2098[0m
[32m  eval_f1 = 0.0396[0m
[32m  eval_mcc = 0.1669[0m
[32m  eval_precision = 0.0559[0m
[32m  eval_recall = 0.0456[0m
[32m  ********************[0m
[32m  Best f1:0.0396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.9616:  57%|█████▋    | 16/28 [00:53<00:42,  3.52s/it]epoch 0 loss 4.88095:  57%|█████▋    | 16/28 [00:54<00:42,  3.52s/it]epoch 0 loss 4.88095:  61%|██████    | 17/28 [00:54<00:28,  2.59s/it]epoch 0 loss 4.80265:  61%|██████    | 17/28 [00:54<00:28,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2584[0m
[32m  eval_f1 = 0.0447[0m
[32m  eval_mcc = 0.2129[0m
[32m  eval_precision = 0.0661[0m
[32m  eval_recall = 0.0503[0m
[32m  ********************[0m
[32m  Best f1:0.0447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.80265:  64%|██████▍   | 18/28 [00:59<00:34,  3.49s/it]epoch 0 loss 4.7295:  64%|██████▍   | 18/28 [01:00<00:34,  3.49s/it] epoch 0 loss 4.7295:  68%|██████▊   | 19/28 [01:00<00:23,  2.57s/it]epoch 0 loss 4.65181:  68%|██████▊   | 19/28 [01:00<00:23,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3121[0m
[32m  eval_f1 = 0.0501[0m
[32m  eval_mcc = 0.2668[0m
[32m  eval_precision = 0.0758[0m
[32m  eval_recall = 0.0548[0m
[32m  ********************[0m
[32m  Best f1:0.0501[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2668[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.65181:  71%|███████▏  | 20/28 [01:05<00:27,  3.48s/it]epoch 0 loss 4.57836:  71%|███████▏  | 20/28 [01:06<00:27,  3.48s/it]epoch 0 loss 4.57836:  75%|███████▌  | 21/28 [01:06<00:17,  2.56s/it]epoch 0 loss 4.5018:  75%|███████▌  | 21/28 [01:06<00:17,  2.56s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3548[0m
[32m  eval_f1 = 0.057[0m
[32m  eval_mcc = 0.3137[0m
[32m  eval_precision = 0.0966[0m
[32m  eval_recall = 0.0602[0m
[32m  ********************[0m
[32m  Best f1:0.057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.5018:  79%|███████▊  | 22/28 [01:17<00:31,  5.28s/it]epoch 0 loss 4.42935:  79%|███████▊  | 22/28 [01:18<00:31,  5.28s/it]epoch 0 loss 4.42935:  82%|████████▏ | 23/28 [01:18<00:19,  3.82s/it]epoch 0 loss 4.36423:  82%|████████▏ | 23/28 [01:18<00:19,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3855[0m
[32m  eval_f1 = 0.0686[0m
[32m  eval_mcc = 0.3474[0m
[32m  eval_precision = 0.1058[0m
[32m  eval_recall = 0.0684[0m
[32m  ********************[0m
[32m  Best f1:0.0686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.36423:  86%|████████▌ | 24/28 [01:24<00:17,  4.37s/it]epoch 0 loss 4.30845:  86%|████████▌ | 24/28 [01:24<00:17,  4.37s/it]epoch 0 loss 4.30845:  89%|████████▉ | 25/28 [01:24<00:09,  3.19s/it]epoch 0 loss 4.24465:  89%|████████▉ | 25/28 [01:24<00:09,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4124[0m
[32m  eval_f1 = 0.0896[0m
[32m  eval_mcc = 0.375[0m
[32m  eval_precision = 0.1429[0m
[32m  eval_recall = 0.0852[0m
[32m  ********************[0m
[32m  Best f1:0.0896[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.24465:  93%|█████████▎| 26/28 [01:30<00:07,  3.91s/it]epoch 0 loss 4.18183:  93%|█████████▎| 26/28 [01:30<00:07,  3.91s/it]epoch 0 loss 4.18183:  96%|█████████▋| 27/28 [01:30<00:02,  2.86s/it]epoch 0 loss 4.12121:  96%|█████████▋| 27/28 [01:30<00:02,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.437[0m
[32m  eval_f1 = 0.1112[0m
[32m  eval_mcc = 0.4067[0m
[32m  eval_precision = 0.1582[0m
[32m  eval_recall = 0.1023[0m
[32m  ********************[0m
[32m  Best f1:0.1112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.12121: 100%|██████████| 28/28 [01:35<00:00,  3.62s/it]epoch 0 loss 4.12121: 100%|██████████| 28/28 [01:35<00:00,  3.42s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.29505:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.29505:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 1 loss 2.33781:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4721[0m
[32m  eval_f1 = 0.128[0m
[32m  eval_mcc = 0.4486[0m
[32m  eval_precision = 0.1778[0m
[32m  eval_recall = 0.1205[0m
[32m  ********************[0m
[32m  Best f1:0.128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4486[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.33781:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 1 loss 2.31366:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 1 loss 2.31366:  11%|█         | 3/28 [00:06<00:52,  2.11s/it]epoch 1 loss 2.28417:  11%|█         | 3/28 [00:06<00:52,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5123[0m
[32m  eval_f1 = 0.1508[0m
[32m  eval_mcc = 0.4875[0m
[32m  eval_precision = 0.214[0m
[32m  eval_recall = 0.143[0m
[32m  ********************[0m
[32m  Best f1:0.1508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.28417:  14%|█▍        | 4/28 [00:12<01:24,  3.51s/it]epoch 1 loss 2.21898:  14%|█▍        | 4/28 [00:12<01:24,  3.51s/it]epoch 1 loss 2.21898:  18%|█▊        | 5/28 [00:12<00:55,  2.39s/it]epoch 1 loss 2.20176:  18%|█▊        | 5/28 [00:13<00:55,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5512[0m
[32m  eval_f1 = 0.1715[0m
[32m  eval_mcc = 0.5247[0m
[32m  eval_precision = 0.2126[0m
[32m  eval_recall = 0.1656[0m
[32m  ********************[0m
[32m  Best f1:0.1715[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20176:  21%|██▏       | 6/28 [00:18<01:17,  3.50s/it]epoch 1 loss 2.17951:  21%|██▏       | 6/28 [00:18<01:17,  3.50s/it]epoch 1 loss 2.17951:  25%|██▌       | 7/28 [00:18<00:52,  2.49s/it]epoch 1 loss 2.16488:  25%|██▌       | 7/28 [00:19<00:52,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5662[0m
[32m  eval_f1 = 0.1856[0m
[32m  eval_mcc = 0.5417[0m
[32m  eval_precision = 0.2293[0m
[32m  eval_recall = 0.1783[0m
[32m  ********************[0m
[32m  Best f1:0.1856[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16488:  29%|██▊       | 8/28 [00:24<01:10,  3.50s/it]epoch 1 loss 2.13549:  29%|██▊       | 8/28 [00:24<01:10,  3.50s/it]epoch 1 loss 2.13549:  32%|███▏      | 9/28 [00:24<00:48,  2.54s/it]epoch 1 loss 2.13137:  32%|███▏      | 9/28 [00:25<00:48,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5795[0m
[32m  eval_f1 = 0.1928[0m
[32m  eval_mcc = 0.5573[0m
[32m  eval_precision = 0.2523[0m
[32m  eval_recall = 0.1831[0m
[32m  ********************[0m
[32m  Best f1:0.1928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5573[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13137:  36%|███▌      | 10/28 [00:34<01:28,  4.91s/it]epoch 1 loss 2.1164:  36%|███▌      | 10/28 [00:35<01:28,  4.91s/it] epoch 1 loss 2.1164:  39%|███▉      | 11/28 [00:35<01:00,  3.53s/it]epoch 1 loss 2.08398:  39%|███▉      | 11/28 [00:35<01:00,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5871[0m
[32m  eval_f1 = 0.2006[0m
[32m  eval_mcc = 0.5655[0m
[32m  eval_precision = 0.2806[0m
[32m  eval_recall = 0.1883[0m
[32m  ********************[0m
[32m  Best f1:0.2006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08398:  43%|████▎     | 12/28 [00:47<01:37,  6.12s/it]epoch 1 loss 2.04445:  43%|████▎     | 12/28 [00:47<01:37,  6.12s/it]epoch 1 loss 2.04445:  46%|████▋     | 13/28 [00:47<01:05,  4.39s/it]epoch 1 loss 2.01602:  46%|████▋     | 13/28 [00:48<01:05,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5901[0m
[32m  eval_f1 = 0.2094[0m
[32m  eval_mcc = 0.5686[0m
[32m  eval_precision = 0.2838[0m
[32m  eval_recall = 0.1941[0m
[32m  ********************[0m
[32m  Best f1:0.2094[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01602:  50%|█████     | 14/28 [00:53<01:06,  4.77s/it]epoch 1 loss 1.99667:  50%|█████     | 14/28 [00:53<01:06,  4.77s/it]epoch 1 loss 1.99667:  54%|█████▎    | 15/28 [00:53<00:45,  3.46s/it]epoch 1 loss 1.97163:  54%|█████▎    | 15/28 [00:54<00:45,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5939[0m
[32m  eval_f1 = 0.2308[0m
[32m  eval_mcc = 0.5721[0m
[32m  eval_precision = 0.3072[0m
[32m  eval_recall = 0.2139[0m
[32m  ********************[0m
[32m  Best f1:0.2308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5721[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97163:  57%|█████▋    | 16/28 [00:59<00:49,  4.13s/it]epoch 1 loss 1.9552:  57%|█████▋    | 16/28 [01:00<00:49,  4.13s/it] epoch 1 loss 1.9552:  61%|██████    | 17/28 [01:00<00:33,  3.02s/it]epoch 1 loss 1.94134:  61%|██████    | 17/28 [01:00<00:33,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5975[0m
[32m  eval_f1 = 0.2363[0m
[32m  eval_mcc = 0.5752[0m
[32m  eval_precision = 0.3146[0m
[32m  eval_recall = 0.2202[0m
[32m  ********************[0m
[32m  Best f1:0.2363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94134:  64%|██████▍   | 18/28 [01:05<00:38,  3.81s/it]epoch 1 loss 1.92083:  64%|██████▍   | 18/28 [01:06<00:38,  3.81s/it]epoch 1 loss 1.92083:  68%|██████▊   | 19/28 [01:06<00:25,  2.79s/it]epoch 1 loss 1.90239:  68%|██████▊   | 19/28 [01:06<00:25,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6052[0m
[32m  eval_f1 = 0.2417[0m
[32m  eval_mcc = 0.5836[0m
[32m  eval_precision = 0.3169[0m
[32m  eval_recall = 0.2259[0m
[32m  ********************[0m
[32m  Best f1:0.2417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90239:  71%|███████▏  | 20/28 [01:11<00:29,  3.65s/it]epoch 1 loss 1.88961:  71%|███████▏  | 20/28 [01:12<00:29,  3.65s/it]epoch 1 loss 1.88961:  75%|███████▌  | 21/28 [01:12<00:18,  2.68s/it]epoch 1 loss 1.87894:  75%|███████▌  | 21/28 [01:12<00:18,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6111[0m
[32m  eval_f1 = 0.2472[0m
[32m  eval_mcc = 0.5898[0m
[32m  eval_precision = 0.3191[0m
[32m  eval_recall = 0.2321[0m
[32m  ********************[0m
[32m  Best f1:0.2472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87894:  79%|███████▊  | 22/28 [01:17<00:21,  3.58s/it]epoch 1 loss 1.86925:  79%|███████▊  | 22/28 [01:18<00:21,  3.58s/it]epoch 1 loss 1.86925:  82%|████████▏ | 23/28 [01:18<00:13,  2.63s/it]epoch 1 loss 1.85069:  82%|████████▏ | 23/28 [01:18<00:13,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6155[0m
[32m  eval_f1 = 0.2533[0m
[32m  eval_mcc = 0.5944[0m
[32m  eval_precision = 0.3335[0m
[32m  eval_recall = 0.2369[0m
[32m  ********************[0m
[32m  Best f1:0.2533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5944[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.85069:  86%|████████▌ | 24/28 [01:23<00:14,  3.54s/it]epoch 1 loss 1.83692:  86%|████████▌ | 24/28 [01:24<00:14,  3.54s/it]epoch 1 loss 1.83692:  89%|████████▉ | 25/28 [01:24<00:07,  2.61s/it]epoch 1 loss 1.82788:  89%|████████▉ | 25/28 [01:24<00:07,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6213[0m
[32m  eval_f1 = 0.2611[0m
[32m  eval_mcc = 0.6005[0m
[32m  eval_precision = 0.3551[0m
[32m  eval_recall = 0.2431[0m
[32m  ********************[0m
[32m  Best f1:0.2611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.82788:  93%|█████████▎| 26/28 [01:29<00:06,  3.49s/it]epoch 1 loss 1.81557:  93%|█████████▎| 26/28 [01:30<00:06,  3.49s/it]epoch 1 loss 1.81557:  96%|█████████▋| 27/28 [01:30<00:02,  2.57s/it]epoch 1 loss 1.81108:  96%|█████████▋| 27/28 [01:30<00:02,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6241[0m
[32m  eval_f1 = 0.2655[0m
[32m  eval_mcc = 0.6033[0m
[32m  eval_precision = 0.3508[0m
[32m  eval_recall = 0.2478[0m
[32m  ********************[0m
[32m  Best f1:0.2655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81108: 100%|██████████| 28/28 [01:35<00:00,  3.44s/it]epoch 1 loss 1.81108: 100%|██████████| 28/28 [01:35<00:00,  3.42s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.53814:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.53814:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 2 loss 1.49329:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6256[0m
[32m  eval_f1 = 0.2698[0m
[32m  eval_mcc = 0.6045[0m
[32m  eval_precision = 0.3514[0m
[32m  eval_recall = 0.2526[0m
[32m  ********************[0m
[32m  Best f1:0.2698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49329:   7%|▋         | 2/28 [00:06<01:30,  3.50s/it]epoch 2 loss 1.49185:   7%|▋         | 2/28 [00:06<01:30,  3.50s/it]epoch 2 loss 1.49185:  11%|█         | 3/28 [00:06<00:52,  2.09s/it]epoch 2 loss 1.46429:  11%|█         | 3/28 [00:06<00:52,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6288[0m
[32m  eval_f1 = 0.2738[0m
[32m  eval_mcc = 0.6079[0m
[32m  eval_precision = 0.3611[0m
[32m  eval_recall = 0.2563[0m
[32m  ********************[0m
[32m  Best f1:0.2738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46429:  14%|█▍        | 4/28 [00:12<01:30,  3.79s/it]epoch 2 loss 1.4857:  14%|█▍        | 4/28 [00:13<01:30,  3.79s/it] epoch 2 loss 1.4857:  18%|█▊        | 5/28 [00:13<00:59,  2.58s/it]epoch 2 loss 1.50833:  18%|█▊        | 5/28 [00:13<00:59,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6341[0m
[32m  eval_f1 = 0.2804[0m
[32m  eval_mcc = 0.6132[0m
[32m  eval_precision = 0.3707[0m
[32m  eval_recall = 0.2614[0m
[32m  ********************[0m
[32m  Best f1:0.2804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50833:  21%|██▏       | 6/28 [00:19<01:25,  3.87s/it]epoch 2 loss 1.50527:  21%|██▏       | 6/28 [00:20<01:25,  3.87s/it]epoch 2 loss 1.50527:  25%|██▌       | 7/28 [00:20<00:57,  2.74s/it]epoch 2 loss 1.47165:  25%|██▌       | 7/28 [00:20<00:57,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6356[0m
[32m  eval_f1 = 0.2855[0m
[32m  eval_mcc = 0.6147[0m
[32m  eval_precision = 0.3724[0m
[32m  eval_recall = 0.2654[0m
[32m  ********************[0m
[32m  Best f1:0.2855[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47165:  29%|██▊       | 8/28 [00:25<01:13,  3.67s/it]epoch 2 loss 1.4469:  29%|██▊       | 8/28 [00:26<01:13,  3.67s/it] epoch 2 loss 1.4469:  32%|███▏      | 9/28 [00:26<00:50,  2.65s/it]epoch 2 loss 1.4422:  32%|███▏      | 9/28 [00:26<00:50,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6387[0m
[32m  eval_f1 = 0.2895[0m
[32m  eval_mcc = 0.6179[0m
[32m  eval_precision = 0.3761[0m
[32m  eval_recall = 0.2677[0m
[32m  ********************[0m
[32m  Best f1:0.2895[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4422:  36%|███▌      | 10/28 [00:38<01:40,  5.59s/it]epoch 2 loss 1.43609:  36%|███▌      | 10/28 [00:38<01:40,  5.59s/it]epoch 2 loss 1.43609:  39%|███▉      | 11/28 [00:38<01:08,  4.01s/it]epoch 2 loss 1.43221:  39%|███▉      | 11/28 [00:39<01:08,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6399[0m
[32m  eval_f1 = 0.29[0m
[32m  eval_mcc = 0.6197[0m
[32m  eval_precision = 0.3752[0m
[32m  eval_recall = 0.2687[0m
[32m  ********************[0m
[32m  Best f1:0.29[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43221:  43%|████▎     | 12/28 [00:44<01:12,  4.51s/it]epoch 2 loss 1.43263:  43%|████▎     | 12/28 [00:44<01:12,  4.51s/it]epoch 2 loss 1.43263:  46%|████▋     | 13/28 [00:44<00:49,  3.27s/it]epoch 2 loss 1.42513:  46%|████▋     | 13/28 [00:45<00:49,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6408[0m
[32m  eval_f1 = 0.2966[0m
[32m  eval_mcc = 0.6215[0m
[32m  eval_precision = 0.3887[0m
[32m  eval_recall = 0.2739[0m
[32m  ********************[0m
[32m  Best f1:0.2966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42513:  50%|█████     | 14/28 [00:50<00:55,  3.98s/it]epoch 2 loss 1.43534:  50%|█████     | 14/28 [00:50<00:55,  3.98s/it]epoch 2 loss 1.43534:  54%|█████▎    | 15/28 [00:50<00:37,  2.91s/it]epoch 2 loss 1.43002:  54%|█████▎    | 15/28 [00:51<00:37,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6419[0m
[32m  eval_f1 = 0.3007[0m
[32m  eval_mcc = 0.6228[0m
[32m  eval_precision = 0.4002[0m
[32m  eval_recall = 0.2773[0m
[32m  ********************[0m
[32m  Best f1:0.3007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43002:  57%|█████▋    | 16/28 [00:56<00:44,  3.72s/it]epoch 2 loss 1.42376:  57%|█████▋    | 16/28 [00:56<00:44,  3.72s/it]epoch 2 loss 1.42376:  61%|██████    | 17/28 [00:56<00:30,  2.73s/it]epoch 2 loss 1.42147:  61%|██████    | 17/28 [00:57<00:30,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6438[0m
[32m  eval_f1 = 0.3041[0m
[32m  eval_mcc = 0.6244[0m
[32m  eval_precision = 0.3961[0m
[32m  eval_recall = 0.2803[0m
[32m  ********************[0m
[32m  Best f1:0.3041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42147:  64%|██████▍   | 18/28 [01:02<00:36,  3.60s/it]epoch 2 loss 1.42038:  64%|██████▍   | 18/28 [01:02<00:36,  3.60s/it]epoch 2 loss 1.42038:  68%|██████▊   | 19/28 [01:02<00:23,  2.64s/it]epoch 2 loss 1.4184:  68%|██████▊   | 19/28 [01:03<00:23,  2.64s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6454[0m
[32m  eval_f1 = 0.3077[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.3969[0m
[32m  eval_recall = 0.2842[0m
[32m  ********************[0m
[32m  Best f1:0.3077[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4184:  71%|███████▏  | 20/28 [01:08<00:28,  3.53s/it]epoch 2 loss 1.4159:  71%|███████▏  | 20/28 [01:09<00:28,  3.53s/it]epoch 2 loss 1.4159:  75%|███████▌  | 21/28 [01:09<00:18,  2.60s/it]epoch 2 loss 1.41304:  75%|███████▌  | 21/28 [01:09<00:18,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6473[0m
[32m  eval_f1 = 0.3121[0m
[32m  eval_mcc = 0.627[0m
[32m  eval_precision = 0.4125[0m
[32m  eval_recall = 0.2884[0m
[32m  ********************[0m
[32m  Best f1:0.3121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41304:  79%|███████▊  | 22/28 [01:14<00:21,  3.52s/it]epoch 2 loss 1.40655:  79%|███████▊  | 22/28 [01:15<00:21,  3.52s/it]epoch 2 loss 1.40655:  82%|████████▏ | 23/28 [01:15<00:12,  2.59s/it]epoch 2 loss 1.40311:  82%|████████▏ | 23/28 [01:15<00:12,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6486[0m
[32m  eval_f1 = 0.3115[0m
[32m  eval_mcc = 0.6287[0m
[32m  eval_precision = 0.4125[0m
[32m  eval_recall = 0.2873[0m
[32m  ********************[0m
[32m  Best MCC:0.6287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40311:  86%|████████▌ | 24/28 [01:20<00:13,  3.33s/it]epoch 2 loss 1.39765:  86%|████████▌ | 24/28 [01:20<00:13,  3.33s/it]epoch 2 loss 1.39765:  89%|████████▉ | 25/28 [01:20<00:07,  2.45s/it]epoch 2 loss 1.39561:  89%|████████▉ | 25/28 [01:20<00:07,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.65[0m
[32m  eval_f1 = 0.3116[0m
[32m  eval_mcc = 0.6306[0m
[32m  eval_precision = 0.4021[0m
[32m  eval_recall = 0.2873[0m
[32m  ********************[0m
[32m  Best MCC:0.6306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39561:  93%|█████████▎| 26/28 [01:25<00:06,  3.23s/it]epoch 2 loss 1.3976:  93%|█████████▎| 26/28 [01:26<00:06,  3.23s/it] epoch 2 loss 1.3976:  96%|█████████▋| 27/28 [01:26<00:02,  2.38s/it]epoch 2 loss 1.39179:  96%|█████████▋| 27/28 [01:26<00:02,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.651[0m
[32m  eval_f1 = 0.3119[0m
[32m  eval_mcc = 0.6324[0m
[32m  eval_precision = 0.4199[0m
[32m  eval_recall = 0.2871[0m
[32m  ********************[0m
[32m  Best MCC:0.6324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39179: 100%|██████████| 28/28 [01:30<00:00,  3.03s/it]epoch 2 loss 1.39179: 100%|██████████| 28/28 [01:30<00:00,  3.23s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.19594:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.19594:   4%|▎         | 1/28 [00:00<00:10,  2.46it/s]epoch 3 loss 1.2024:   4%|▎         | 1/28 [00:00<00:10,  2.46it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6524[0m
[32m  eval_f1 = 0.3112[0m
[32m  eval_mcc = 0.6342[0m
[32m  eval_precision = 0.4211[0m
[32m  eval_recall = 0.2858[0m
[32m  ********************[0m
[32m  Best MCC:0.6342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2024:   7%|▋         | 2/28 [00:08<02:08,  4.95s/it]epoch 3 loss 1.24762:   7%|▋         | 2/28 [00:08<02:08,  4.95s/it]epoch 3 loss 1.24762:  11%|█         | 3/28 [00:08<01:12,  2.88s/it]epoch 3 loss 1.27886:  11%|█         | 3/28 [00:09<01:12,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6529[0m
[32m  eval_f1 = 0.3115[0m
[32m  eval_mcc = 0.6345[0m
[32m  eval_precision = 0.413[0m
[32m  eval_recall = 0.2859[0m
[32m  ********************[0m
[32m  Best MCC:0.6345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27886:  14%|█▍        | 4/28 [00:13<01:28,  3.67s/it]epoch 3 loss 1.30525:  14%|█▍        | 4/28 [00:14<01:28,  3.67s/it]epoch 3 loss 1.30525:  18%|█▊        | 5/28 [00:14<00:57,  2.49s/it]epoch 3 loss 1.33138:  18%|█▊        | 5/28 [00:14<00:57,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6546[0m
[32m  eval_f1 = 0.3147[0m
[32m  eval_mcc = 0.6356[0m
[32m  eval_precision = 0.4192[0m
[32m  eval_recall = 0.2889[0m
[32m  ********************[0m
[32m  Best f1:0.3147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33138:  21%|██▏       | 6/28 [00:19<01:18,  3.55s/it]epoch 3 loss 1.3272:  21%|██▏       | 6/28 [00:20<01:18,  3.55s/it] epoch 3 loss 1.3272:  25%|██▌       | 7/28 [00:20<00:53,  2.53s/it]epoch 3 loss 1.32368:  25%|██▌       | 7/28 [00:20<00:53,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3167[0m
[32m  eval_mcc = 0.6358[0m
[32m  eval_precision = 0.4157[0m
[32m  eval_recall = 0.2906[0m
[32m  ********************[0m
[32m  Best f1:0.3167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32368:  29%|██▊       | 8/28 [00:25<01:09,  3.48s/it]epoch 3 loss 1.32113:  29%|██▊       | 8/28 [00:26<01:09,  3.48s/it]epoch 3 loss 1.32113:  32%|███▏      | 9/28 [00:26<00:47,  2.52s/it]epoch 3 loss 1.32499:  32%|███▏      | 9/28 [00:26<00:47,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.318[0m
[32m  eval_mcc = 0.6372[0m
[32m  eval_precision = 0.4142[0m
[32m  eval_recall = 0.2918[0m
[32m  ********************[0m
[32m  Best f1:0.318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32499:  36%|███▌      | 10/28 [00:31<01:02,  3.49s/it]epoch 3 loss 1.32219:  36%|███▌      | 10/28 [00:32<01:02,  3.49s/it]epoch 3 loss 1.32219:  39%|███▉      | 11/28 [00:32<00:43,  2.55s/it]epoch 3 loss 1.32227:  39%|███▉      | 11/28 [00:32<00:43,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6579[0m
[32m  eval_f1 = 0.3216[0m
[32m  eval_mcc = 0.6387[0m
[32m  eval_precision = 0.4238[0m
[32m  eval_recall = 0.2943[0m
[32m  ********************[0m
[32m  Best f1:0.3216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32227:  43%|████▎     | 12/28 [00:37<00:56,  3.50s/it]epoch 3 loss 1.31402:  43%|████▎     | 12/28 [00:38<00:56,  3.50s/it]epoch 3 loss 1.31402:  46%|████▋     | 13/28 [00:38<00:38,  2.57s/it]epoch 3 loss 1.30442:  46%|████▋     | 13/28 [00:38<00:38,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3242[0m
[32m  eval_mcc = 0.6398[0m
[32m  eval_precision = 0.4265[0m
[32m  eval_recall = 0.2963[0m
[32m  ********************[0m
[32m  Best f1:0.3242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30442:  50%|█████     | 14/28 [00:44<00:49,  3.51s/it]epoch 3 loss 1.30979:  50%|█████     | 14/28 [00:44<00:49,  3.51s/it]epoch 3 loss 1.30979:  54%|█████▎    | 15/28 [00:44<00:33,  2.57s/it]epoch 3 loss 1.3085:  54%|█████▎    | 15/28 [00:44<00:33,  2.57s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6592[0m
[32m  eval_f1 = 0.328[0m
[32m  eval_mcc = 0.6402[0m
[32m  eval_precision = 0.4445[0m
[32m  eval_recall = 0.2986[0m
[32m  ********************[0m
[32m  Best f1:0.328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3085:  57%|█████▋    | 16/28 [00:50<00:42,  3.51s/it]epoch 3 loss 1.30968:  57%|█████▋    | 16/28 [00:50<00:42,  3.51s/it]epoch 3 loss 1.30968:  61%|██████    | 17/28 [00:50<00:28,  2.58s/it]epoch 3 loss 1.30171:  61%|██████    | 17/28 [00:50<00:28,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.3277[0m
[32m  eval_mcc = 0.6397[0m
[32m  eval_precision = 0.4439[0m
[32m  eval_recall = 0.2984[0m

epoch 3 loss 1.30171:  64%|██████▍   | 18/28 [00:54<00:29,  2.95s/it]epoch 3 loss 1.30512:  64%|██████▍   | 18/28 [00:54<00:29,  2.95s/it]epoch 3 loss 1.30512:  68%|██████▊   | 19/28 [00:54<00:19,  2.18s/it]epoch 3 loss 1.30677:  68%|██████▊   | 19/28 [00:55<00:19,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3361[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.4531[0m
[32m  eval_recall = 0.3046[0m
[32m  ********************[0m
[32m  Best f1:0.3361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.30677:  71%|███████▏  | 20/28 [00:59<00:23,  2.95s/it]epoch 3 loss 1.30202:  71%|███████▏  | 20/28 [00:59<00:23,  2.95s/it]epoch 3 loss 1.30202:  75%|███████▌  | 21/28 [00:59<00:15,  2.19s/it]epoch 3 loss 1.3043:  75%|███████▌  | 21/28 [01:00<00:15,  2.19s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6596[0m
[32m  eval_f1 = 0.3365[0m
[32m  eval_mcc = 0.6407[0m
[32m  eval_precision = 0.4442[0m
[32m  eval_recall = 0.3055[0m
[32m  ********************[0m
[32m  Best f1:0.3365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3043:  79%|███████▊  | 22/28 [01:05<00:19,  3.24s/it]epoch 3 loss 1.30155:  79%|███████▊  | 22/28 [01:06<00:19,  3.24s/it]epoch 3 loss 1.30155:  82%|████████▏ | 23/28 [01:06<00:11,  2.40s/it]epoch 3 loss 1.30229:  82%|████████▏ | 23/28 [01:06<00:11,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6604[0m
[32m  eval_f1 = 0.3375[0m
[32m  eval_mcc = 0.6413[0m
[32m  eval_precision = 0.4467[0m
[32m  eval_recall = 0.3062[0m
[32m  ********************[0m
[32m  Best f1:0.3375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30229:  86%|████████▌ | 24/28 [01:17<00:20,  5.22s/it]epoch 3 loss 1.29899:  86%|████████▌ | 24/28 [01:18<00:20,  5.22s/it]epoch 3 loss 1.29899:  89%|████████▉ | 25/28 [01:18<00:11,  3.78s/it]epoch 3 loss 1.29585:  89%|████████▉ | 25/28 [01:18<00:11,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3393[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.4502[0m
[32m  eval_recall = 0.3077[0m
[32m  ********************[0m
[32m  Best f1:0.3393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29585:  93%|█████████▎| 26/28 [01:23<00:08,  4.32s/it]epoch 3 loss 1.29585:  93%|█████████▎| 26/28 [01:24<00:08,  4.32s/it]epoch 3 loss 1.29585:  96%|█████████▋| 27/28 [01:24<00:03,  3.15s/it]epoch 3 loss 1.29485:  96%|█████████▋| 27/28 [01:24<00:03,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.662[0m
[32m  eval_f1 = 0.3403[0m
[32m  eval_mcc = 0.6431[0m
[32m  eval_precision = 0.4497[0m
[32m  eval_recall = 0.3089[0m
[32m  ********************[0m
[32m  Best f1:0.3403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6431[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29485: 100%|██████████| 28/28 [01:29<00:00,  3.84s/it]epoch 3 loss 1.29485: 100%|██████████| 28/28 [01:29<00:00,  3.20s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.23449:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.23449:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 4 loss 1.22996:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.663[0m
[32m  eval_f1 = 0.3444[0m
[32m  eval_mcc = 0.6442[0m
[32m  eval_precision = 0.4502[0m
[32m  eval_recall = 0.314[0m
[32m  ********************[0m
[32m  Best f1:0.3444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22996:   7%|▋         | 2/28 [00:06<01:31,  3.52s/it]epoch 4 loss 1.20929:   7%|▋         | 2/28 [00:06<01:31,  3.52s/it]epoch 4 loss 1.20929:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 4 loss 1.23682:  11%|█         | 3/28 [00:06<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6638[0m
[32m  eval_f1 = 0.3538[0m
[32m  eval_mcc = 0.6453[0m
[32m  eval_precision = 0.4654[0m
[32m  eval_recall = 0.3215[0m
[32m  ********************[0m
[32m  Best f1:0.3538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23682:  14%|█▍        | 4/28 [00:12<01:29,  3.74s/it]epoch 4 loss 1.20518:  14%|█▍        | 4/28 [00:13<01:29,  3.74s/it]epoch 4 loss 1.20518:  18%|█▊        | 5/28 [00:13<00:58,  2.54s/it]epoch 4 loss 1.22032:  18%|█▊        | 5/28 [00:13<00:58,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6641[0m
[32m  eval_f1 = 0.3529[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.4554[0m
[32m  eval_recall = 0.3209[0m
[32m  ********************[0m
[32m  Best MCC:0.6459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22032:  21%|██▏       | 6/28 [00:18<01:14,  3.39s/it]epoch 4 loss 1.2287:  21%|██▏       | 6/28 [00:18<01:14,  3.39s/it] epoch 4 loss 1.2287:  25%|██▌       | 7/28 [00:18<00:50,  2.41s/it]epoch 4 loss 1.22924:  25%|██▌       | 7/28 [00:19<00:50,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6643[0m
[32m  eval_f1 = 0.3583[0m
[32m  eval_mcc = 0.6463[0m
[32m  eval_precision = 0.4576[0m
[32m  eval_recall = 0.3265[0m
[32m  ********************[0m
[32m  Best f1:0.3583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6463[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22924:  29%|██▊       | 8/28 [00:27<01:26,  4.35s/it]epoch 4 loss 1.2265:  29%|██▊       | 8/28 [00:27<01:26,  4.35s/it] epoch 4 loss 1.2265:  32%|███▏      | 9/28 [00:27<00:59,  3.12s/it]epoch 4 loss 1.22124:  32%|███▏      | 9/28 [00:27<00:59,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.665[0m
[32m  eval_f1 = 0.3585[0m
[32m  eval_mcc = 0.647[0m
[32m  eval_precision = 0.4572[0m
[32m  eval_recall = 0.3271[0m
[32m  ********************[0m
[32m  Best f1:0.3585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22124:  36%|███▌      | 10/28 [00:36<01:28,  4.94s/it]epoch 4 loss 1.22363:  36%|███▌      | 10/28 [00:36<01:28,  4.94s/it]epoch 4 loss 1.22363:  39%|███▉      | 11/28 [00:36<01:00,  3.56s/it]epoch 4 loss 1.23531:  39%|███▉      | 11/28 [00:37<01:00,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6646[0m
[32m  eval_f1 = 0.3585[0m
[32m  eval_mcc = 0.6464[0m
[32m  eval_precision = 0.4581[0m
[32m  eval_recall = 0.3269[0m
[32m  ********************[0m
[32m  Best f1:0.3585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.23531:  43%|████▎     | 12/28 [00:41<01:02,  3.93s/it]epoch 4 loss 1.23843:  43%|████▎     | 12/28 [00:42<01:02,  3.93s/it]epoch 4 loss 1.23843:  46%|████▋     | 13/28 [00:42<00:42,  2.86s/it]epoch 4 loss 1.24097:  46%|████▋     | 13/28 [00:42<00:42,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6644[0m
[32m  eval_f1 = 0.3586[0m
[32m  eval_mcc = 0.6461[0m
[32m  eval_precision = 0.4581[0m
[32m  eval_recall = 0.327[0m
[32m  ********************[0m
[32m  Best f1:0.3586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24097:  50%|█████     | 14/28 [00:46<00:48,  3.44s/it]epoch 4 loss 1.24332:  50%|█████     | 14/28 [00:47<00:48,  3.44s/it]epoch 4 loss 1.24332:  54%|█████▎    | 15/28 [00:47<00:32,  2.52s/it]epoch 4 loss 1.24522:  54%|█████▎    | 15/28 [00:47<00:32,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.3586[0m
[32m  eval_mcc = 0.6464[0m
[32m  eval_precision = 0.4573[0m
[32m  eval_recall = 0.3274[0m
[32m  ********************[0m
[32m  Best f1:0.3586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24522:  57%|█████▋    | 16/28 [00:52<00:38,  3.21s/it]epoch 4 loss 1.24666:  57%|█████▋    | 16/28 [00:52<00:38,  3.21s/it]epoch 4 loss 1.24666:  61%|██████    | 17/28 [00:52<00:26,  2.37s/it]epoch 4 loss 1.25904:  61%|██████    | 17/28 [00:52<00:26,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6652[0m
[32m  eval_f1 = 0.3588[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.4568[0m
[32m  eval_recall = 0.3278[0m
[32m  ********************[0m
[32m  Best f1:0.3588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.25904:  64%|██████▍   | 18/28 [00:57<00:30,  3.09s/it]epoch 4 loss 1.25709:  64%|██████▍   | 18/28 [00:57<00:30,  3.09s/it]epoch 4 loss 1.25709:  68%|██████▊   | 19/28 [00:57<00:20,  2.28s/it]epoch 4 loss 1.25653:  68%|██████▊   | 19/28 [00:58<00:20,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3583[0m
[32m  eval_mcc = 0.6466[0m
[32m  eval_precision = 0.4555[0m
[32m  eval_recall = 0.3278[0m

epoch 4 loss 1.25653:  71%|███████▏  | 20/28 [01:01<00:21,  2.74s/it]epoch 4 loss 1.25189:  71%|███████▏  | 20/28 [01:01<00:21,  2.74s/it]epoch 4 loss 1.25189:  75%|███████▌  | 21/28 [01:01<00:14,  2.04s/it]epoch 4 loss 1.25705:  75%|███████▌  | 21/28 [01:02<00:14,  2.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3585[0m
[32m  eval_mcc = 0.6469[0m
[32m  eval_precision = 0.455[0m
[32m  eval_recall = 0.3282[0m

epoch 4 loss 1.25705:  79%|███████▊  | 22/28 [01:05<00:15,  2.57s/it]epoch 4 loss 1.25597:  79%|███████▊  | 22/28 [01:06<00:15,  2.57s/it]epoch 4 loss 1.25597:  82%|████████▏ | 23/28 [01:06<00:09,  1.92s/it]epoch 4 loss 1.25515:  82%|████████▏ | 23/28 [01:06<00:09,  1.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.666[0m
[32m  eval_f1 = 0.3583[0m
[32m  eval_mcc = 0.6471[0m
[32m  eval_precision = 0.4544[0m
[32m  eval_recall = 0.3283[0m
[32m  ********************[0m
[32m  Best MCC:0.6471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25515:  86%|████████▌ | 24/28 [01:10<00:11,  2.77s/it]epoch 4 loss 1.25648:  86%|████████▌ | 24/28 [01:11<00:11,  2.77s/it]epoch 4 loss 1.25648:  89%|████████▉ | 25/28 [01:11<00:06,  2.06s/it]epoch 4 loss 1.2544:  89%|████████▉ | 25/28 [01:11<00:06,  2.06s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6661[0m
[32m  eval_f1 = 0.3583[0m
[32m  eval_mcc = 0.6471[0m
[32m  eval_precision = 0.4542[0m
[32m  eval_recall = 0.3284[0m
[32m  ********************[0m
[32m  Best MCC:0.6471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2544:  93%|█████████▎| 26/28 [01:16<00:05,  2.88s/it]epoch 4 loss 1.25794:  93%|█████████▎| 26/28 [01:16<00:05,  2.88s/it]epoch 4 loss 1.25794:  96%|█████████▋| 27/28 [01:16<00:02,  2.14s/it]epoch 4 loss 1.25386:  96%|█████████▋| 27/28 [01:16<00:02,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6661[0m
[32m  eval_f1 = 0.3588[0m
[32m  eval_mcc = 0.6472[0m
[32m  eval_precision = 0.4542[0m
[32m  eval_recall = 0.3289[0m
[32m  ********************[0m
[32m  Best MCC:0.6472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25386: 100%|██████████| 28/28 [01:21<00:00,  2.86s/it]epoch 4 loss 1.25386: 100%|██████████| 28/28 [01:21<00:00,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6652[0m
[32m  eval_f1 = 0.3588[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.4568[0m
[32m  eval_recall = 0.3278[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.71it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.643[0m
[32m  eval_f1 = 0.2829[0m
[32m  eval_mcc = 0.6237[0m
[32m  eval_precision = 0.3597[0m
[32m  eval_recall = 0.2659[0m

