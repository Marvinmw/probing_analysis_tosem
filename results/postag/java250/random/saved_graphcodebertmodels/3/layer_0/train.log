[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=0, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0', posratio=0.5, seed=206, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.71589:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.71589:   4%|▎         | 1/28 [00:00<00:21,  1.28it/s]epoch 0 loss 5.72092:   4%|▎         | 1/28 [00:01<00:21,  1.28it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0012[0m
[32m  eval_f1 = 0.0003[0m
[32m  eval_mcc = -0.0011[0m
[32m  eval_precision = 0.0041[0m
[32m  eval_recall = 0.0004[0m
[32m  ********************[0m
[32m  Best f1:0.0003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.72092:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 0 loss 5.71357:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 0 loss 5.71357:  11%|█         | 3/28 [00:05<00:47,  1.89s/it]epoch 0 loss 5.69889:  11%|█         | 3/28 [00:06<00:47,  1.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0018[0m
[32m  eval_f1 = 0.0005[0m
[32m  eval_mcc = -0.0018[0m
[32m  eval_precision = 0.0038[0m
[32m  eval_recall = 0.0005[0m
[32m  ********************[0m
[32m  Best f1:0.0005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.69889:  14%|█▍        | 4/28 [00:10<01:12,  3.02s/it]epoch 0 loss 5.67325:  14%|█▍        | 4/28 [00:11<01:12,  3.02s/it]epoch 0 loss 5.67325:  18%|█▊        | 5/28 [00:11<00:47,  2.08s/it]epoch 0 loss 5.64523:  18%|█▊        | 5/28 [00:11<00:47,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0057[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = -0.0029[0m
[32m  eval_precision = 0.0061[0m
[32m  eval_recall = 0.0012[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.64523:  21%|██▏       | 6/28 [00:16<01:08,  3.09s/it]epoch 0 loss 5.61007:  21%|██▏       | 6/28 [00:16<01:08,  3.09s/it]epoch 0 loss 5.61007:  25%|██▌       | 7/28 [00:16<00:46,  2.21s/it]epoch 0 loss 5.56777:  25%|██▌       | 7/28 [00:16<00:46,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0221[0m
[32m  eval_f1 = 0.0036[0m
[32m  eval_mcc = 0.0042[0m
[32m  eval_precision = 0.0068[0m
[32m  eval_recall = 0.004[0m
[32m  ********************[0m
[32m  Best f1:0.0036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.56777:  29%|██▊       | 8/28 [00:22<01:06,  3.35s/it]epoch 0 loss 5.52183:  29%|██▊       | 8/28 [00:22<01:06,  3.35s/it]epoch 0 loss 5.52183:  32%|███▏      | 9/28 [00:22<00:46,  2.43s/it]epoch 0 loss 5.46913:  32%|███▏      | 9/28 [00:23<00:46,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0535[0m
[32m  eval_f1 = 0.0097[0m
[32m  eval_mcc = 0.0219[0m
[32m  eval_precision = 0.012[0m
[32m  eval_recall = 0.0124[0m
[32m  ********************[0m
[32m  Best f1:0.0097[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.46913:  36%|███▌      | 10/28 [00:29<01:06,  3.70s/it]epoch 0 loss 5.40914:  36%|███▌      | 10/28 [00:29<01:06,  3.70s/it]epoch 0 loss 5.40914:  39%|███▉      | 11/28 [00:29<00:45,  2.70s/it]epoch 0 loss 5.34331:  39%|███▉      | 11/28 [00:30<00:45,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0841[0m
[32m  eval_f1 = 0.0163[0m
[32m  eval_mcc = 0.045[0m
[32m  eval_precision = 0.0181[0m
[32m  eval_recall = 0.0221[0m
[32m  ********************[0m
[32m  Best f1:0.0163[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.34331:  43%|████▎     | 12/28 [00:36<01:02,  3.89s/it]epoch 0 loss 5.27731:  43%|████▎     | 12/28 [00:36<01:02,  3.89s/it]epoch 0 loss 5.27731:  46%|████▋     | 13/28 [00:36<00:42,  2.84s/it]epoch 0 loss 5.2048:  46%|████▋     | 13/28 [00:37<00:42,  2.84s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1367[0m
[32m  eval_f1 = 0.0373[0m
[32m  eval_mcc = 0.0959[0m
[32m  eval_precision = 0.0405[0m
[32m  eval_recall = 0.0462[0m
[32m  ********************[0m
[32m  Best f1:0.0373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.2048:  50%|█████     | 14/28 [00:42<00:52,  3.76s/it]epoch 0 loss 5.12662:  50%|█████     | 14/28 [00:43<00:52,  3.76s/it]epoch 0 loss 5.12662:  54%|█████▎    | 15/28 [00:43<00:35,  2.75s/it]epoch 0 loss 5.04875:  54%|█████▎    | 15/28 [00:43<00:35,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1975[0m
[32m  eval_f1 = 0.062[0m
[32m  eval_mcc = 0.156[0m
[32m  eval_precision = 0.0768[0m
[32m  eval_recall = 0.0667[0m
[32m  ********************[0m
[32m  Best f1:0.062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.156[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04875:  57%|█████▋    | 16/28 [00:55<01:06,  5.51s/it]epoch 0 loss 4.9721:  57%|█████▋    | 16/28 [00:55<01:06,  5.51s/it] epoch 0 loss 4.9721:  61%|██████    | 17/28 [00:55<00:43,  3.98s/it]epoch 0 loss 4.8926:  61%|██████    | 17/28 [00:55<00:43,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2516[0m
[32m  eval_f1 = 0.0846[0m
[32m  eval_mcc = 0.2083[0m
[32m  eval_precision = 0.1034[0m
[32m  eval_recall = 0.0853[0m
[32m  ********************[0m
[32m  Best f1:0.0846[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.8926:  64%|██████▍   | 18/28 [01:07<01:04,  6.49s/it]epoch 0 loss 4.81281:  64%|██████▍   | 18/28 [01:08<01:04,  6.49s/it]epoch 0 loss 4.81281:  68%|██████▊   | 19/28 [01:08<00:42,  4.67s/it]epoch 0 loss 4.73364:  68%|██████▊   | 19/28 [01:08<00:42,  4.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3093[0m
[32m  eval_f1 = 0.1031[0m
[32m  eval_mcc = 0.2651[0m
[32m  eval_precision = 0.1328[0m
[32m  eval_recall = 0.0987[0m
[32m  ********************[0m
[32m  Best f1:0.1031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.73364:  71%|███████▏  | 20/28 [01:20<00:55,  6.93s/it]epoch 0 loss 4.64759:  71%|███████▏  | 20/28 [01:20<00:55,  6.93s/it]epoch 0 loss 4.64759:  75%|███████▌  | 21/28 [01:20<00:34,  4.98s/it]epoch 0 loss 4.57074:  75%|███████▌  | 21/28 [01:21<00:34,  4.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3726[0m
[32m  eval_f1 = 0.1159[0m
[32m  eval_mcc = 0.3308[0m
[32m  eval_precision = 0.1523[0m
[32m  eval_recall = 0.107[0m
[32m  ********************[0m
[32m  Best f1:0.1159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.57074:  79%|███████▊  | 22/28 [01:30<00:38,  6.39s/it]epoch 0 loss 4.49144:  79%|███████▊  | 22/28 [01:30<00:38,  6.39s/it]epoch 0 loss 4.49144:  82%|████████▏ | 23/28 [01:30<00:23,  4.60s/it]epoch 0 loss 4.41851:  82%|████████▏ | 23/28 [01:31<00:23,  4.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4322[0m
[32m  eval_f1 = 0.123[0m
[32m  eval_mcc = 0.3947[0m
[32m  eval_precision = 0.1705[0m
[32m  eval_recall = 0.1126[0m
[32m  ********************[0m
[32m  Best f1:0.123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3947[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.41851:  86%|████████▌ | 24/28 [01:43<00:28,  7.06s/it]epoch 0 loss 4.34773:  86%|████████▌ | 24/28 [01:44<00:28,  7.06s/it]epoch 0 loss 4.34773:  89%|████████▉ | 25/28 [01:44<00:15,  5.06s/it]epoch 0 loss 4.27256:  89%|████████▉ | 25/28 [01:44<00:15,  5.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4596[0m
[32m  eval_f1 = 0.1235[0m
[32m  eval_mcc = 0.4247[0m
[32m  eval_precision = 0.1768[0m
[32m  eval_recall = 0.1151[0m
[32m  ********************[0m
[32m  Best f1:0.1235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.27256:  93%|█████████▎| 26/28 [01:55<00:13,  6.95s/it]epoch 0 loss 4.20014:  93%|█████████▎| 26/28 [01:55<00:13,  6.95s/it]epoch 0 loss 4.20014:  96%|█████████▋| 27/28 [01:55<00:04,  4.99s/it]epoch 0 loss 4.13397:  96%|█████████▋| 27/28 [01:56<00:04,  4.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4823[0m
[32m  eval_f1 = 0.1309[0m
[32m  eval_mcc = 0.4493[0m
[32m  eval_precision = 0.1742[0m
[32m  eval_recall = 0.1236[0m
[32m  ********************[0m
[32m  Best f1:0.1309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.13397: 100%|██████████| 28/28 [02:06<00:00,  6.78s/it]epoch 0 loss 4.13397: 100%|██████████| 28/28 [02:06<00:00,  4.53s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.48184:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.48184:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 1 loss 2.27047:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5179[0m
[32m  eval_f1 = 0.1476[0m
[32m  eval_mcc = 0.4876[0m
[32m  eval_precision = 0.1993[0m
[32m  eval_recall = 0.1417[0m
[32m  ********************[0m
[32m  Best f1:0.1476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4876[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27047:   7%|▋         | 2/28 [00:11<02:50,  6.57s/it]epoch 1 loss 2.15849:   7%|▋         | 2/28 [00:11<02:50,  6.57s/it]epoch 1 loss 2.15849:  11%|█         | 3/28 [00:11<01:34,  3.76s/it]epoch 1 loss 2.10985:  11%|█         | 3/28 [00:12<01:34,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5518[0m
[32m  eval_f1 = 0.1667[0m
[32m  eval_mcc = 0.5241[0m
[32m  eval_precision = 0.2122[0m
[32m  eval_recall = 0.162[0m
[32m  ********************[0m
[32m  Best f1:0.1667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.10985:  14%|█▍        | 4/28 [00:21<02:26,  6.08s/it]epoch 1 loss 2.06305:  14%|█▍        | 4/28 [00:21<02:26,  6.08s/it]epoch 1 loss 2.06305:  18%|█▊        | 5/28 [00:21<01:32,  4.04s/it]epoch 1 loss 2.02722:  18%|█▊        | 5/28 [00:22<01:32,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5766[0m
[32m  eval_f1 = 0.184[0m
[32m  eval_mcc = 0.5515[0m
[32m  eval_precision = 0.2257[0m
[32m  eval_recall = 0.1786[0m
[32m  ********************[0m
[32m  Best f1:0.184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02722:  21%|██▏       | 6/28 [00:32<02:18,  6.28s/it]epoch 1 loss 1.97575:  21%|██▏       | 6/28 [00:32<02:18,  6.28s/it]epoch 1 loss 1.97575:  25%|██▌       | 7/28 [00:32<01:31,  4.37s/it]epoch 1 loss 1.96239:  25%|██▌       | 7/28 [00:33<01:31,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5859[0m
[32m  eval_f1 = 0.1925[0m
[32m  eval_mcc = 0.562[0m
[32m  eval_precision = 0.2615[0m
[32m  eval_recall = 0.1865[0m
[32m  ********************[0m
[32m  Best f1:0.1925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.562[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96239:  29%|██▊       | 8/28 [00:39<01:44,  5.23s/it]epoch 1 loss 1.9325:  29%|██▊       | 8/28 [00:40<01:44,  5.23s/it] epoch 1 loss 1.9325:  32%|███▏      | 9/28 [00:40<01:10,  3.72s/it]epoch 1 loss 1.90239:  32%|███▏      | 9/28 [00:40<01:10,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5966[0m
[32m  eval_f1 = 0.2078[0m
[32m  eval_mcc = 0.5744[0m
[32m  eval_precision = 0.2892[0m
[32m  eval_recall = 0.1966[0m
[32m  ********************[0m
[32m  Best f1:0.2078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5744[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90239:  36%|███▌      | 10/28 [00:50<01:44,  5.81s/it]epoch 1 loss 1.87657:  36%|███▌      | 10/28 [00:51<01:44,  5.81s/it]epoch 1 loss 1.87657:  39%|███▉      | 11/28 [00:51<01:10,  4.16s/it]epoch 1 loss 1.86211:  39%|███▉      | 11/28 [00:51<01:10,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6056[0m
[32m  eval_f1 = 0.2226[0m
[32m  eval_mcc = 0.5847[0m
[32m  eval_precision = 0.3075[0m
[32m  eval_recall = 0.2067[0m
[32m  ********************[0m
[32m  Best f1:0.2226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86211:  43%|████▎     | 12/28 [00:58<01:23,  5.19s/it]epoch 1 loss 1.83554:  43%|████▎     | 12/28 [00:59<01:23,  5.19s/it]epoch 1 loss 1.83554:  46%|████▋     | 13/28 [00:59<00:56,  3.75s/it]epoch 1 loss 1.83052:  46%|████▋     | 13/28 [00:59<00:56,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6101[0m
[32m  eval_f1 = 0.2387[0m
[32m  eval_mcc = 0.5898[0m
[32m  eval_precision = 0.3281[0m
[32m  eval_recall = 0.222[0m
[32m  ********************[0m
[32m  Best f1:0.2387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83052:  50%|█████     | 14/28 [01:10<01:23,  5.96s/it]epoch 1 loss 1.81393:  50%|█████     | 14/28 [01:10<01:23,  5.96s/it]epoch 1 loss 1.81393:  54%|█████▎    | 15/28 [01:10<00:55,  4.29s/it]epoch 1 loss 1.79274:  54%|█████▎    | 15/28 [01:11<00:55,  4.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6139[0m
[32m  eval_f1 = 0.2569[0m
[32m  eval_mcc = 0.5938[0m
[32m  eval_precision = 0.346[0m
[32m  eval_recall = 0.2366[0m
[32m  ********************[0m
[32m  Best f1:0.2569[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5938[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.79274:  57%|█████▋    | 16/28 [01:16<00:56,  4.73s/it]epoch 1 loss 1.77322:  57%|█████▋    | 16/28 [01:16<00:56,  4.73s/it]epoch 1 loss 1.77322:  61%|██████    | 17/28 [01:16<00:37,  3.44s/it]epoch 1 loss 1.75573:  61%|██████    | 17/28 [01:17<00:37,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6178[0m
[32m  eval_f1 = 0.2683[0m
[32m  eval_mcc = 0.5983[0m
[32m  eval_precision = 0.3749[0m
[32m  eval_recall = 0.2461[0m
[32m  ********************[0m
[32m  Best f1:0.2683[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75573:  64%|██████▍   | 18/28 [01:22<00:41,  4.10s/it]epoch 1 loss 1.73521:  64%|██████▍   | 18/28 [01:22<00:41,  4.10s/it]epoch 1 loss 1.73521:  68%|██████▊   | 19/28 [01:22<00:26,  3.00s/it]epoch 1 loss 1.71998:  68%|██████▊   | 19/28 [01:23<00:26,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6247[0m
[32m  eval_f1 = 0.2832[0m
[32m  eval_mcc = 0.6057[0m
[32m  eval_precision = 0.3892[0m
[32m  eval_recall = 0.2594[0m
[32m  ********************[0m
[32m  Best f1:0.2832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.71998:  71%|███████▏  | 20/28 [01:29<00:32,  4.01s/it]epoch 1 loss 1.70653:  71%|███████▏  | 20/28 [01:29<00:32,  4.01s/it]epoch 1 loss 1.70653:  75%|███████▌  | 21/28 [01:29<00:20,  2.94s/it]epoch 1 loss 1.6966:  75%|███████▌  | 21/28 [01:30<00:20,  2.94s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6284[0m
[32m  eval_f1 = 0.2866[0m
[32m  eval_mcc = 0.6087[0m
[32m  eval_precision = 0.3863[0m
[32m  eval_recall = 0.2644[0m
[32m  ********************[0m
[32m  Best f1:0.2866[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.6966:  79%|███████▊  | 22/28 [01:36<00:24,  4.01s/it]epoch 1 loss 1.68389:  79%|███████▊  | 22/28 [01:36<00:24,  4.01s/it]epoch 1 loss 1.68389:  82%|████████▏ | 23/28 [01:36<00:14,  2.93s/it]epoch 1 loss 1.66602:  82%|████████▏ | 23/28 [01:37<00:14,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.632[0m
[32m  eval_f1 = 0.2923[0m
[32m  eval_mcc = 0.6112[0m
[32m  eval_precision = 0.3839[0m
[32m  eval_recall = 0.2713[0m
[32m  ********************[0m
[32m  Best f1:0.2923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.66602:  86%|████████▌ | 24/28 [01:43<00:16,  4.00s/it]epoch 1 loss 1.65387:  86%|████████▌ | 24/28 [01:43<00:16,  4.00s/it]epoch 1 loss 1.65387:  89%|████████▉ | 25/28 [01:43<00:08,  2.93s/it]epoch 1 loss 1.64103:  89%|████████▉ | 25/28 [01:44<00:08,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.636[0m
[32m  eval_f1 = 0.2986[0m
[32m  eval_mcc = 0.615[0m
[32m  eval_precision = 0.3934[0m
[32m  eval_recall = 0.2766[0m
[32m  ********************[0m
[32m  Best f1:0.2986[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.615[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.64103:  93%|█████████▎| 26/28 [01:50<00:08,  4.23s/it]epoch 1 loss 1.64191:  93%|█████████▎| 26/28 [01:51<00:08,  4.23s/it]epoch 1 loss 1.64191:  96%|█████████▋| 27/28 [01:51<00:03,  3.09s/it]epoch 1 loss 1.63632:  96%|█████████▋| 27/28 [01:51<00:03,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6399[0m
[32m  eval_f1 = 0.305[0m
[32m  eval_mcc = 0.6192[0m
[32m  eval_precision = 0.4049[0m
[32m  eval_recall = 0.2817[0m
[32m  ********************[0m
[32m  Best f1:0.305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.63632: 100%|██████████| 28/28 [01:57<00:00,  4.04s/it]epoch 1 loss 1.63632: 100%|██████████| 28/28 [01:57<00:00,  4.20s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.2027:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.2027:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 2 loss 1.25345:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6462[0m
[32m  eval_f1 = 0.3097[0m
[32m  eval_mcc = 0.6259[0m
[32m  eval_precision = 0.4099[0m
[32m  eval_recall = 0.2859[0m
[32m  ********************[0m
[32m  Best f1:0.3097[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25345:   7%|▋         | 2/28 [00:09<02:27,  5.67s/it]epoch 2 loss 1.27866:   7%|▋         | 2/28 [00:10<02:27,  5.67s/it]epoch 2 loss 1.27866:  11%|█         | 3/28 [00:10<01:21,  3.28s/it]epoch 2 loss 1.27417:  11%|█         | 3/28 [00:10<01:21,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6489[0m
[32m  eval_f1 = 0.3119[0m
[32m  eval_mcc = 0.6289[0m
[32m  eval_precision = 0.4076[0m
[32m  eval_recall = 0.2881[0m
[32m  ********************[0m
[32m  Best f1:0.3119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27417:  14%|█▍        | 4/28 [00:21<02:37,  6.57s/it]epoch 2 loss 1.29235:  14%|█▍        | 4/28 [00:22<02:37,  6.57s/it]epoch 2 loss 1.29235:  18%|█▊        | 5/28 [00:22<01:40,  4.35s/it]epoch 2 loss 1.29367:  18%|█▊        | 5/28 [00:22<01:40,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6499[0m
[32m  eval_f1 = 0.3144[0m
[32m  eval_mcc = 0.6303[0m
[32m  eval_precision = 0.4073[0m
[32m  eval_recall = 0.2902[0m
[32m  ********************[0m
[32m  Best f1:0.3144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29367:  21%|██▏       | 6/28 [00:34<02:33,  6.97s/it]epoch 2 loss 1.29335:  21%|██▏       | 6/28 [00:34<02:33,  6.97s/it]epoch 2 loss 1.29335:  25%|██▌       | 7/28 [00:34<01:41,  4.83s/it]epoch 2 loss 1.30077:  25%|██▌       | 7/28 [00:35<01:41,  4.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3178[0m
[32m  eval_mcc = 0.6334[0m
[32m  eval_precision = 0.4142[0m
[32m  eval_recall = 0.2924[0m
[32m  ********************[0m
[32m  Best f1:0.3178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30077:  29%|██▊       | 8/28 [00:46<02:21,  7.07s/it]epoch 2 loss 1.30406:  29%|██▊       | 8/28 [00:46<02:21,  7.07s/it]epoch 2 loss 1.30406:  32%|███▏      | 9/28 [00:46<01:34,  4.99s/it]epoch 2 loss 1.30666:  32%|███▏      | 9/28 [00:47<01:34,  4.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3317[0m
[32m  eval_mcc = 0.636[0m
[32m  eval_precision = 0.4362[0m
[32m  eval_recall = 0.3028[0m
[32m  ********************[0m
[32m  Best f1:0.3317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.636[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30666:  36%|███▌      | 10/28 [00:58<02:06,  7.04s/it]epoch 2 loss 1.31826:  36%|███▌      | 10/28 [00:59<02:06,  7.04s/it]epoch 2 loss 1.31826:  39%|███▉      | 11/28 [00:59<01:25,  5.02s/it]epoch 2 loss 1.31519:  39%|███▉      | 11/28 [00:59<01:25,  5.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6573[0m
[32m  eval_f1 = 0.3384[0m
[32m  eval_mcc = 0.6383[0m
[32m  eval_precision = 0.4444[0m
[32m  eval_recall = 0.3087[0m
[32m  ********************[0m
[32m  Best f1:0.3384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31519:  43%|████▎     | 12/28 [01:10<01:49,  6.84s/it]epoch 2 loss 1.30836:  43%|████▎     | 12/28 [01:10<01:49,  6.84s/it]epoch 2 loss 1.30836:  46%|████▋     | 13/28 [01:10<01:13,  4.90s/it]epoch 2 loss 1.29724:  46%|████▋     | 13/28 [01:10<01:13,  4.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.659[0m
[32m  eval_f1 = 0.3494[0m
[32m  eval_mcc = 0.6402[0m
[32m  eval_precision = 0.465[0m
[32m  eval_recall = 0.3172[0m
[32m  ********************[0m
[32m  Best f1:0.3494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29724:  50%|█████     | 14/28 [01:21<01:35,  6.85s/it]epoch 2 loss 1.29963:  50%|█████     | 14/28 [01:22<01:35,  6.85s/it]epoch 2 loss 1.29963:  54%|█████▎    | 15/28 [01:22<01:03,  4.91s/it]epoch 2 loss 1.2973:  54%|█████▎    | 15/28 [01:22<01:03,  4.91s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3579[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.4754[0m
[32m  eval_recall = 0.3238[0m
[32m  ********************[0m
[32m  Best f1:0.3579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2973:  57%|█████▋    | 16/28 [01:29<01:07,  5.64s/it]epoch 2 loss 1.29317:  57%|█████▋    | 16/28 [01:30<01:07,  5.64s/it]epoch 2 loss 1.29317:  61%|██████    | 17/28 [01:30<00:44,  4.07s/it]epoch 2 loss 1.28687:  61%|██████    | 17/28 [01:30<00:44,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6628[0m
[32m  eval_f1 = 0.3651[0m
[32m  eval_mcc = 0.6438[0m
[32m  eval_precision = 0.4764[0m
[32m  eval_recall = 0.3317[0m
[32m  ********************[0m
[32m  Best f1:0.3651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28687:  64%|██████▍   | 18/28 [01:40<01:00,  6.02s/it]epoch 2 loss 1.27867:  64%|██████▍   | 18/28 [01:40<01:00,  6.02s/it]epoch 2 loss 1.27867:  68%|██████▊   | 19/28 [01:40<00:39,  4.34s/it]epoch 2 loss 1.27998:  68%|██████▊   | 19/28 [01:41<00:39,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6637[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.6448[0m
[32m  eval_precision = 0.4729[0m
[32m  eval_recall = 0.3356[0m
[32m  ********************[0m
[32m  Best f1:0.3679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27998:  71%|███████▏  | 20/28 [01:48<00:41,  5.25s/it]epoch 2 loss 1.28175:  71%|███████▏  | 20/28 [01:48<00:41,  5.25s/it]epoch 2 loss 1.28175:  75%|███████▌  | 21/28 [01:48<00:26,  3.80s/it]epoch 2 loss 1.28155:  75%|███████▌  | 21/28 [01:49<00:26,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.369[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.4693[0m
[32m  eval_recall = 0.3379[0m
[32m  ********************[0m
[32m  Best f1:0.369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28155:  79%|███████▊  | 22/28 [01:59<00:35,  5.98s/it]epoch 2 loss 1.27679:  79%|███████▊  | 22/28 [02:00<00:35,  5.98s/it]epoch 2 loss 1.27679:  82%|████████▏ | 23/28 [02:00<00:21,  4.32s/it]epoch 2 loss 1.26877:  82%|████████▏ | 23/28 [02:00<00:21,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6662[0m
[32m  eval_f1 = 0.3731[0m
[32m  eval_mcc = 0.6473[0m
[32m  eval_precision = 0.4708[0m
[32m  eval_recall = 0.3429[0m
[32m  ********************[0m
[32m  Best f1:0.3731[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26877:  86%|████████▌ | 24/28 [02:07<00:20,  5.24s/it]epoch 2 loss 1.26753:  86%|████████▌ | 24/28 [02:08<00:20,  5.24s/it]epoch 2 loss 1.26753:  89%|████████▉ | 25/28 [02:08<00:11,  3.79s/it]epoch 2 loss 1.26432:  89%|████████▉ | 25/28 [02:08<00:11,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6684[0m
[32m  eval_f1 = 0.3758[0m
[32m  eval_mcc = 0.6497[0m
[32m  eval_precision = 0.4679[0m
[32m  eval_recall = 0.3462[0m
[32m  ********************[0m
[32m  Best f1:0.3758[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26432:  93%|█████████▎| 26/28 [02:19<00:11,  5.97s/it]epoch 2 loss 1.25936:  93%|█████████▎| 26/28 [02:19<00:11,  5.97s/it]epoch 2 loss 1.25936:  96%|█████████▋| 27/28 [02:19<00:04,  4.30s/it]epoch 2 loss 1.26447:  96%|█████████▋| 27/28 [02:19<00:04,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6705[0m
[32m  eval_f1 = 0.3785[0m
[32m  eval_mcc = 0.6519[0m
[32m  eval_precision = 0.4686[0m
[32m  eval_recall = 0.3514[0m
[32m  ********************[0m
[32m  Best f1:0.3785[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26447: 100%|██████████| 28/28 [02:28<00:00,  5.58s/it]epoch 2 loss 1.26447: 100%|██████████| 28/28 [02:28<00:00,  5.29s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.15931:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.15931:   4%|▎         | 1/28 [00:00<00:11,  2.43it/s]epoch 3 loss 1.15377:   4%|▎         | 1/28 [00:00<00:11,  2.43it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6718[0m
[32m  eval_f1 = 0.3773[0m
[32m  eval_mcc = 0.6533[0m
[32m  eval_precision = 0.4714[0m
[32m  eval_recall = 0.3501[0m
[32m  ********************[0m
[32m  Best MCC:0.6533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15377:   7%|▋         | 2/28 [00:08<02:03,  4.74s/it]epoch 3 loss 1.16017:   7%|▋         | 2/28 [00:08<02:03,  4.74s/it]epoch 3 loss 1.16017:  11%|█         | 3/28 [00:08<01:09,  2.77s/it]epoch 3 loss 1.16556:  11%|█         | 3/28 [00:09<01:09,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.673[0m
[32m  eval_f1 = 0.3788[0m
[32m  eval_mcc = 0.6546[0m
[32m  eval_precision = 0.4705[0m
[32m  eval_recall = 0.3523[0m
[32m  ********************[0m
[32m  Best f1:0.3788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6546[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16556:  14%|█▍        | 4/28 [00:20<02:28,  6.20s/it]epoch 3 loss 1.17162:  14%|█▍        | 4/28 [00:20<02:28,  6.20s/it]epoch 3 loss 1.17162:  18%|█▊        | 5/28 [00:20<01:34,  4.12s/it]epoch 3 loss 1.18723:  18%|█▊        | 5/28 [00:20<01:34,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6739[0m
[32m  eval_f1 = 0.3797[0m
[32m  eval_mcc = 0.6556[0m
[32m  eval_precision = 0.4694[0m
[32m  eval_recall = 0.3534[0m
[32m  ********************[0m
[32m  Best f1:0.3797[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18723:  21%|██▏       | 6/28 [00:32<02:32,  6.92s/it]epoch 3 loss 1.19857:  21%|██▏       | 6/28 [00:33<02:32,  6.92s/it]epoch 3 loss 1.19857:  25%|██▌       | 7/28 [00:33<01:40,  4.79s/it]epoch 3 loss 1.1903:  25%|██▌       | 7/28 [00:33<01:40,  4.79s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6755[0m
[32m  eval_f1 = 0.3849[0m
[32m  eval_mcc = 0.6572[0m
[32m  eval_precision = 0.4747[0m
[32m  eval_recall = 0.3583[0m
[32m  ********************[0m
[32m  Best f1:0.3849[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6572[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1903:  29%|██▊       | 8/28 [00:45<02:23,  7.17s/it]epoch 3 loss 1.18572:  29%|██▊       | 8/28 [00:45<02:23,  7.17s/it]epoch 3 loss 1.18572:  32%|███▏      | 9/28 [00:45<01:36,  5.06s/it]epoch 3 loss 1.18592:  32%|███▏      | 9/28 [00:46<01:36,  5.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.674[0m
[32m  eval_f1 = 0.3855[0m
[32m  eval_mcc = 0.6556[0m
[32m  eval_precision = 0.4748[0m
[32m  eval_recall = 0.3582[0m
[32m  ********************[0m
[32m  Best f1:0.3855[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.18592:  36%|███▌      | 10/28 [00:54<01:48,  6.02s/it]epoch 3 loss 1.18566:  36%|███▌      | 10/28 [00:54<01:48,  6.02s/it]epoch 3 loss 1.18566:  39%|███▉      | 11/28 [00:54<01:13,  4.31s/it]epoch 3 loss 1.18091:  39%|███▉      | 11/28 [00:54<01:13,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6748[0m
[32m  eval_f1 = 0.391[0m
[32m  eval_mcc = 0.6565[0m
[32m  eval_precision = 0.4847[0m
[32m  eval_recall = 0.3621[0m
[32m  ********************[0m
[32m  Best f1:0.391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.18091:  43%|████▎     | 12/28 [01:02<01:26,  5.40s/it]epoch 3 loss 1.18046:  43%|████▎     | 12/28 [01:02<01:26,  5.40s/it]epoch 3 loss 1.18046:  46%|████▋     | 13/28 [01:02<00:58,  3.89s/it]epoch 3 loss 1.18217:  46%|████▋     | 13/28 [01:03<00:58,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6752[0m
[32m  eval_f1 = 0.3912[0m
[32m  eval_mcc = 0.6568[0m
[32m  eval_precision = 0.4844[0m
[32m  eval_recall = 0.3614[0m
[32m  ********************[0m
[32m  Best f1:0.3912[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.18217:  50%|█████     | 14/28 [01:10<01:09,  4.99s/it]epoch 3 loss 1.17976:  50%|█████     | 14/28 [01:10<01:09,  4.99s/it]epoch 3 loss 1.17976:  54%|█████▎    | 15/28 [01:10<00:46,  3.61s/it]epoch 3 loss 1.17824:  54%|█████▎    | 15/28 [01:11<00:46,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6774[0m
[32m  eval_f1 = 0.392[0m
[32m  eval_mcc = 0.6591[0m
[32m  eval_precision = 0.4841[0m
[32m  eval_recall = 0.3627[0m
[32m  ********************[0m
[32m  Best f1:0.392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17824:  57%|█████▋    | 16/28 [01:21<01:10,  5.86s/it]epoch 3 loss 1.17946:  57%|█████▋    | 16/28 [01:22<01:10,  5.86s/it]epoch 3 loss 1.17946:  61%|██████    | 17/28 [01:22<00:46,  4.22s/it]epoch 3 loss 1.17303:  61%|██████    | 17/28 [01:22<00:46,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6791[0m
[32m  eval_f1 = 0.3923[0m
[32m  eval_mcc = 0.6608[0m
[32m  eval_precision = 0.4828[0m
[32m  eval_recall = 0.3632[0m
[32m  ********************[0m
[32m  Best f1:0.3923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17303:  64%|██████▍   | 18/28 [01:33<01:02,  6.26s/it]epoch 3 loss 1.17297:  64%|██████▍   | 18/28 [01:33<01:02,  6.26s/it]epoch 3 loss 1.17297:  68%|██████▊   | 19/28 [01:33<00:40,  4.51s/it]epoch 3 loss 1.1758:  68%|██████▊   | 19/28 [01:34<00:40,  4.51s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6791[0m
[32m  eval_f1 = 0.3925[0m
[32m  eval_mcc = 0.661[0m
[32m  eval_precision = 0.4826[0m
[32m  eval_recall = 0.3634[0m
[32m  ********************[0m
[32m  Best f1:0.3925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.661[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1758:  71%|███████▏  | 20/28 [01:43<00:48,  6.10s/it]epoch 3 loss 1.17174:  71%|███████▏  | 20/28 [01:43<00:48,  6.10s/it]epoch 3 loss 1.17174:  75%|███████▌  | 21/28 [01:43<00:30,  4.40s/it]epoch 3 loss 1.16579:  75%|███████▌  | 21/28 [01:44<00:30,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6793[0m
[32m  eval_f1 = 0.3924[0m
[32m  eval_mcc = 0.6613[0m
[32m  eval_precision = 0.4831[0m
[32m  eval_recall = 0.3633[0m
[32m  ********************[0m
[32m  Best MCC:0.6613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16579:  79%|███████▊  | 22/28 [01:51<00:32,  5.40s/it]epoch 3 loss 1.16801:  79%|███████▊  | 22/28 [01:52<00:32,  5.40s/it]epoch 3 loss 1.16801:  82%|████████▏ | 23/28 [01:52<00:19,  3.91s/it]epoch 3 loss 1.16498:  82%|████████▏ | 23/28 [01:52<00:19,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6801[0m
[32m  eval_f1 = 0.3922[0m
[32m  eval_mcc = 0.6625[0m
[32m  eval_precision = 0.4845[0m
[32m  eval_recall = 0.3635[0m
[32m  ********************[0m
[32m  Best MCC:0.6625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16498:  86%|████████▌ | 24/28 [01:58<00:18,  4.73s/it]epoch 3 loss 1.17083:  86%|████████▌ | 24/28 [01:59<00:18,  4.73s/it]epoch 3 loss 1.17083:  89%|████████▉ | 25/28 [01:59<00:10,  3.44s/it]epoch 3 loss 1.16864:  89%|████████▉ | 25/28 [01:59<00:10,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6794[0m
[32m  eval_f1 = 0.3918[0m
[32m  eval_mcc = 0.6619[0m
[32m  eval_precision = 0.4841[0m
[32m  eval_recall = 0.363[0m

epoch 3 loss 1.16864:  93%|█████████▎| 26/28 [02:02<00:07,  3.54s/it]epoch 3 loss 1.16994:  93%|█████████▎| 26/28 [02:03<00:07,  3.54s/it]epoch 3 loss 1.16994:  96%|█████████▋| 27/28 [02:03<00:02,  2.60s/it]epoch 3 loss 1.17369:  96%|█████████▋| 27/28 [02:03<00:02,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6794[0m
[32m  eval_f1 = 0.3915[0m
[32m  eval_mcc = 0.6619[0m
[32m  eval_precision = 0.4855[0m
[32m  eval_recall = 0.3627[0m

epoch 3 loss 1.17369: 100%|██████████| 28/28 [02:06<00:00,  2.89s/it]epoch 3 loss 1.17369: 100%|██████████| 28/28 [02:06<00:00,  4.53s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.14502:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.14502:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s]epoch 4 loss 1.18065:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.68[0m
[32m  eval_f1 = 0.3912[0m
[32m  eval_mcc = 0.6624[0m
[32m  eval_precision = 0.4778[0m
[32m  eval_recall = 0.363[0m

epoch 4 loss 1.18065:   7%|▋         | 2/28 [00:04<01:02,  2.39s/it]epoch 4 loss 1.19716:   7%|▋         | 2/28 [00:04<01:02,  2.39s/it]epoch 4 loss 1.19716:  11%|█         | 3/28 [00:04<00:36,  1.48s/it]epoch 4 loss 1.18408:  11%|█         | 3/28 [00:04<00:36,  1.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6804[0m
[32m  eval_f1 = 0.3909[0m
[32m  eval_mcc = 0.6626[0m
[32m  eval_precision = 0.4772[0m
[32m  eval_recall = 0.3629[0m
[32m  ********************[0m
[32m  Best MCC:0.6626[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18408:  14%|█▍        | 4/28 [00:12<01:33,  3.89s/it]epoch 4 loss 1.17006:  14%|█▍        | 4/28 [00:12<01:33,  3.89s/it]epoch 4 loss 1.17006:  18%|█▊        | 5/28 [00:12<01:00,  2.64s/it]epoch 4 loss 1.1639:  18%|█▊        | 5/28 [00:12<01:00,  2.64s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6801[0m
[32m  eval_f1 = 0.3904[0m
[32m  eval_mcc = 0.6621[0m
[32m  eval_precision = 0.477[0m
[32m  eval_recall = 0.3627[0m

epoch 4 loss 1.1639:  21%|██▏       | 6/28 [00:16<01:06,  3.03s/it]epoch 4 loss 1.15765:  21%|██▏       | 6/28 [00:16<01:06,  3.03s/it]epoch 4 loss 1.15765:  25%|██▌       | 7/28 [00:16<00:45,  2.17s/it]epoch 4 loss 1.15817:  25%|██▌       | 7/28 [00:17<00:45,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6798[0m
[32m  eval_f1 = 0.3912[0m
[32m  eval_mcc = 0.6616[0m
[32m  eval_precision = 0.4814[0m
[32m  eval_recall = 0.3631[0m

epoch 4 loss 1.15817:  29%|██▊       | 8/28 [00:20<00:53,  2.68s/it]epoch 4 loss 1.15921:  29%|██▊       | 8/28 [00:20<00:53,  2.68s/it]epoch 4 loss 1.15921:  32%|███▏      | 9/28 [00:20<00:37,  1.97s/it]epoch 4 loss 1.15709:  32%|███▏      | 9/28 [00:21<00:37,  1.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6803[0m
[32m  eval_f1 = 0.3941[0m
[32m  eval_mcc = 0.6621[0m
[32m  eval_precision = 0.4901[0m
[32m  eval_recall = 0.3647[0m
[32m  ********************[0m
[32m  Best f1:0.3941[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.15709:  36%|███▌      | 10/28 [00:26<00:53,  2.96s/it]epoch 4 loss 1.15985:  36%|███▌      | 10/28 [00:26<00:53,  2.96s/it]epoch 4 loss 1.15985:  39%|███▉      | 11/28 [00:26<00:37,  2.18s/it]epoch 4 loss 1.16617:  39%|███▉      | 11/28 [00:26<00:37,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6808[0m
[32m  eval_f1 = 0.3943[0m
[32m  eval_mcc = 0.6626[0m
[32m  eval_precision = 0.4888[0m
[32m  eval_recall = 0.365[0m
[32m  ********************[0m
[32m  Best f1:0.3943[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.16617:  43%|████▎     | 12/28 [00:31<00:49,  3.09s/it]epoch 4 loss 1.16905:  43%|████▎     | 12/28 [00:32<00:49,  3.09s/it]epoch 4 loss 1.16905:  46%|████▋     | 13/28 [00:32<00:34,  2.27s/it]epoch 4 loss 1.16269:  46%|████▋     | 13/28 [00:32<00:34,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6815[0m
[32m  eval_f1 = 0.3975[0m
[32m  eval_mcc = 0.6633[0m
[32m  eval_precision = 0.4979[0m
[32m  eval_recall = 0.3671[0m
[32m  ********************[0m
[32m  Best f1:0.3975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16269:  50%|█████     | 14/28 [00:39<00:52,  3.72s/it]epoch 4 loss 1.16584:  50%|█████     | 14/28 [00:39<00:52,  3.72s/it]epoch 4 loss 1.16584:  54%|█████▎    | 15/28 [00:39<00:35,  2.73s/it]epoch 4 loss 1.17461:  54%|█████▎    | 15/28 [00:39<00:35,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6825[0m
[32m  eval_f1 = 0.3991[0m
[32m  eval_mcc = 0.6644[0m
[32m  eval_precision = 0.4991[0m
[32m  eval_recall = 0.3694[0m
[32m  ********************[0m
[32m  Best f1:0.3991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17461:  57%|█████▋    | 16/28 [00:46<00:46,  3.91s/it]epoch 4 loss 1.17179:  57%|█████▋    | 16/28 [00:46<00:46,  3.91s/it]epoch 4 loss 1.17179:  61%|██████    | 17/28 [00:46<00:31,  2.86s/it]epoch 4 loss 1.17031:  61%|██████    | 17/28 [00:47<00:31,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6828[0m
[32m  eval_f1 = 0.3996[0m
[32m  eval_mcc = 0.6648[0m
[32m  eval_precision = 0.4993[0m
[32m  eval_recall = 0.3699[0m
[32m  ********************[0m
[32m  Best f1:0.3996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17031:  64%|██████▍   | 18/28 [00:53<00:39,  4.00s/it]epoch 4 loss 1.16772:  64%|██████▍   | 18/28 [00:53<00:39,  4.00s/it]epoch 4 loss 1.16772:  68%|██████▊   | 19/28 [00:53<00:26,  2.92s/it]epoch 4 loss 1.15986:  68%|██████▊   | 19/28 [00:54<00:26,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6831[0m
[32m  eval_f1 = 0.3986[0m
[32m  eval_mcc = 0.6652[0m
[32m  eval_precision = 0.4933[0m
[32m  eval_recall = 0.3699[0m
[32m  ********************[0m
[32m  Best MCC:0.6652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15986:  71%|███████▏  | 20/28 [00:58<00:28,  3.56s/it]epoch 4 loss 1.15495:  71%|███████▏  | 20/28 [00:59<00:28,  3.56s/it]epoch 4 loss 1.15495:  75%|███████▌  | 21/28 [00:59<00:18,  2.61s/it]epoch 4 loss 1.15244:  75%|███████▌  | 21/28 [00:59<00:18,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6831[0m
[32m  eval_f1 = 0.3992[0m
[32m  eval_mcc = 0.6652[0m
[32m  eval_precision = 0.4973[0m
[32m  eval_recall = 0.3703[0m
[32m  ********************[0m
[32m  Best MCC:0.6652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15244:  79%|███████▊  | 22/28 [01:04<00:20,  3.35s/it]epoch 4 loss 1.14587:  79%|███████▊  | 22/28 [01:04<00:20,  3.35s/it]epoch 4 loss 1.14587:  82%|████████▏ | 23/28 [01:04<00:12,  2.47s/it]epoch 4 loss 1.1445:  82%|████████▏ | 23/28 [01:05<00:12,  2.47s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6833[0m
[32m  eval_f1 = 0.3994[0m
[32m  eval_mcc = 0.6654[0m
[32m  eval_precision = 0.4966[0m
[32m  eval_recall = 0.3704[0m
[32m  ********************[0m
[32m  Best MCC:0.6654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1445:  86%|████████▌ | 24/28 [01:09<00:13,  3.25s/it]epoch 4 loss 1.13787:  86%|████████▌ | 24/28 [01:10<00:13,  3.25s/it]epoch 4 loss 1.13787:  89%|████████▉ | 25/28 [01:10<00:07,  2.40s/it]epoch 4 loss 1.13861:  89%|████████▉ | 25/28 [01:10<00:07,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6833[0m
[32m  eval_f1 = 0.3993[0m
[32m  eval_mcc = 0.6654[0m
[32m  eval_precision = 0.4963[0m
[32m  eval_recall = 0.3703[0m

epoch 4 loss 1.13861:  93%|█████████▎| 26/28 [01:13<00:05,  2.82s/it]epoch 4 loss 1.13581:  93%|█████████▎| 26/28 [01:14<00:05,  2.82s/it]epoch 4 loss 1.13581:  96%|█████████▋| 27/28 [01:14<00:02,  2.09s/it]epoch 4 loss 1.13116:  96%|█████████▋| 27/28 [01:14<00:02,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6831[0m
[32m  eval_f1 = 0.3992[0m
[32m  eval_mcc = 0.6652[0m
[32m  eval_precision = 0.4963[0m
[32m  eval_recall = 0.3703[0m

epoch 4 loss 1.13116: 100%|██████████| 28/28 [01:17<00:00,  2.55s/it]epoch 4 loss 1.13116: 100%|██████████| 28/28 [01:17<00:00,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.70it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6828[0m
[32m  eval_f1 = 0.3996[0m
[32m  eval_mcc = 0.6648[0m
[32m  eval_precision = 0.4993[0m
[32m  eval_recall = 0.3699[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.72it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6627[0m
[32m  eval_f1 = 0.3118[0m
[32m  eval_mcc = 0.6447[0m
[32m  eval_precision = 0.3887[0m
[32m  eval_recall = 0.2949[0m

