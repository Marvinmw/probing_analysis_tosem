[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8', posratio=0.5, seed=892, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.68827:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.68827:   4%|▎         | 1/28 [00:00<00:21,  1.24it/s]epoch 0 loss 5.68439:   4%|▎         | 1/28 [00:01<00:21,  1.24it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0025[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = 0.0004[0m
[32m  eval_precision = 0.0024[0m
[32m  eval_recall = 0.0023[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.68439:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.67281:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.67281:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 0 loss 5.65751:  11%|█         | 3/28 [00:07<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.007[0m
[32m  eval_f1 = 0.0013[0m
[32m  eval_mcc = 0.0027[0m
[32m  eval_precision = 0.0045[0m
[32m  eval_recall = 0.0026[0m
[32m  ********************[0m
[32m  Best f1:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.65751:  14%|█▍        | 4/28 [00:13<01:36,  4.01s/it]epoch 0 loss 5.62715:  14%|█▍        | 4/28 [00:14<01:36,  4.01s/it]epoch 0 loss 5.62715:  18%|█▊        | 5/28 [00:14<01:02,  2.72s/it]epoch 0 loss 5.5945:  18%|█▊        | 5/28 [00:14<01:02,  2.72s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.017[0m
[32m  eval_f1 = 0.0021[0m
[32m  eval_mcc = 0.0048[0m
[32m  eval_precision = 0.007[0m
[32m  eval_recall = 0.0033[0m
[32m  ********************[0m
[32m  Best f1:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.5945:  21%|██▏       | 6/28 [00:20<01:31,  4.15s/it]epoch 0 loss 5.55573:  21%|██▏       | 6/28 [00:21<01:31,  4.15s/it]epoch 0 loss 5.55573:  25%|██▌       | 7/28 [00:21<01:01,  2.94s/it]epoch 0 loss 5.51151:  25%|██▌       | 7/28 [00:21<01:01,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0468[0m
[32m  eval_f1 = 0.0051[0m
[32m  eval_mcc = 0.0196[0m
[32m  eval_precision = 0.0112[0m
[32m  eval_recall = 0.0091[0m
[32m  ********************[0m
[32m  Best f1:0.0051[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.51151:  29%|██▊       | 8/28 [00:28<01:24,  4.22s/it]epoch 0 loss 5.45828:  29%|██▊       | 8/28 [00:28<01:24,  4.22s/it]epoch 0 loss 5.45828:  32%|███▏      | 9/28 [00:28<00:57,  3.03s/it]epoch 0 loss 5.39958:  32%|███▏      | 9/28 [00:29<00:57,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0777[0m
[32m  eval_f1 = 0.0114[0m
[32m  eval_mcc = 0.043[0m
[32m  eval_precision = 0.0184[0m
[32m  eval_recall = 0.019[0m
[32m  ********************[0m
[32m  Best f1:0.0114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.39958:  36%|███▌      | 10/28 [00:35<01:17,  4.29s/it]epoch 0 loss 5.33513:  36%|███▌      | 10/28 [00:36<01:17,  4.29s/it]epoch 0 loss 5.33513:  39%|███▉      | 11/28 [00:36<00:52,  3.10s/it]epoch 0 loss 5.26867:  39%|███▉      | 11/28 [00:36<00:52,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.095[0m
[32m  eval_f1 = 0.0144[0m
[32m  eval_mcc = 0.058[0m
[32m  eval_precision = 0.0274[0m
[32m  eval_recall = 0.0229[0m
[32m  ********************[0m
[32m  Best f1:0.0144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.26867:  43%|████▎     | 12/28 [00:43<01:10,  4.42s/it]epoch 0 loss 5.19718:  43%|████▎     | 12/28 [00:44<01:10,  4.42s/it]epoch 0 loss 5.19718:  46%|████▋     | 13/28 [00:44<00:48,  3.21s/it]epoch 0 loss 5.11998:  46%|████▋     | 13/28 [00:44<00:48,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1133[0m
[32m  eval_f1 = 0.0172[0m
[32m  eval_mcc = 0.0736[0m
[32m  eval_precision = 0.0317[0m
[32m  eval_recall = 0.0255[0m
[32m  ********************[0m
[32m  Best f1:0.0172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0736[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.11998:  50%|█████     | 14/28 [00:52<01:08,  4.87s/it]epoch 0 loss 5.04287:  50%|█████     | 14/28 [00:53<01:08,  4.87s/it]epoch 0 loss 5.04287:  54%|█████▎    | 15/28 [00:53<00:45,  3.52s/it]epoch 0 loss 4.96341:  54%|█████▎    | 15/28 [00:53<00:45,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1424[0m
[32m  eval_f1 = 0.0219[0m
[32m  eval_mcc = 0.0971[0m
[32m  eval_precision = 0.0385[0m
[32m  eval_recall = 0.0284[0m
[32m  ********************[0m
[32m  Best f1:0.0219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0971[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.96341:  57%|█████▋    | 16/28 [01:00<00:57,  4.77s/it]epoch 0 loss 4.88294:  57%|█████▋    | 16/28 [01:01<00:57,  4.77s/it]epoch 0 loss 4.88294:  61%|██████    | 17/28 [01:01<00:38,  3.46s/it]epoch 0 loss 4.80602:  61%|██████    | 17/28 [01:01<00:38,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1852[0m
[32m  eval_f1 = 0.0312[0m
[32m  eval_mcc = 0.1401[0m
[32m  eval_precision = 0.0454[0m
[32m  eval_recall = 0.0344[0m
[32m  ********************[0m
[32m  Best f1:0.0312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.80602:  64%|██████▍   | 18/28 [01:08<00:45,  4.55s/it]epoch 0 loss 4.73549:  64%|██████▍   | 18/28 [01:08<00:45,  4.55s/it]epoch 0 loss 4.73549:  68%|██████▊   | 19/28 [01:08<00:29,  3.31s/it]epoch 0 loss 4.6606:  68%|██████▊   | 19/28 [01:09<00:29,  3.31s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2349[0m
[32m  eval_f1 = 0.0374[0m
[32m  eval_mcc = 0.1935[0m
[32m  eval_precision = 0.0584[0m
[32m  eval_recall = 0.0393[0m
[32m  ********************[0m
[32m  Best f1:0.0374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.6606:  71%|███████▏  | 20/28 [01:17<00:39,  4.93s/it]epoch 0 loss 4.5903:  71%|███████▏  | 20/28 [01:17<00:39,  4.93s/it]epoch 0 loss 4.5903:  75%|███████▌  | 21/28 [01:17<00:25,  3.58s/it]epoch 0 loss 4.51738:  75%|███████▌  | 21/28 [01:18<00:25,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3078[0m
[32m  eval_f1 = 0.0455[0m
[32m  eval_mcc = 0.2601[0m
[32m  eval_precision = 0.0638[0m
[32m  eval_recall = 0.0477[0m
[32m  ********************[0m
[32m  Best f1:0.0455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.51738:  79%|███████▊  | 22/28 [01:25<00:27,  4.66s/it]epoch 0 loss 4.4481:  79%|███████▊  | 22/28 [01:25<00:27,  4.66s/it] epoch 0 loss 4.4481:  82%|████████▏ | 23/28 [01:25<00:16,  3.39s/it]epoch 0 loss 4.38721:  82%|████████▏ | 23/28 [01:25<00:16,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3613[0m
[32m  eval_f1 = 0.0567[0m
[32m  eval_mcc = 0.3138[0m
[32m  eval_precision = 0.0872[0m
[32m  eval_recall = 0.0577[0m
[32m  ********************[0m
[32m  Best f1:0.0567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.38721:  86%|████████▌ | 24/28 [01:34<00:20,  5.01s/it]epoch 0 loss 4.33562:  86%|████████▌ | 24/28 [01:34<00:20,  5.01s/it]epoch 0 loss 4.33562:  89%|████████▉ | 25/28 [01:34<00:10,  3.64s/it]epoch 0 loss 4.27619:  89%|████████▉ | 25/28 [01:35<00:10,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3846[0m
[32m  eval_f1 = 0.0845[0m
[32m  eval_mcc = 0.3504[0m
[32m  eval_precision = 0.1348[0m
[32m  eval_recall = 0.0799[0m
[32m  ********************[0m
[32m  Best f1:0.0845[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.27619:  93%|█████████▎| 26/28 [01:43<00:10,  5.05s/it]epoch 0 loss 4.21772:  93%|█████████▎| 26/28 [01:43<00:10,  5.05s/it]epoch 0 loss 4.21772:  96%|█████████▋| 27/28 [01:43<00:03,  3.66s/it]epoch 0 loss 4.16169:  96%|█████████▋| 27/28 [01:43<00:03,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3985[0m
[32m  eval_f1 = 0.0972[0m
[32m  eval_mcc = 0.3723[0m
[32m  eval_precision = 0.161[0m
[32m  eval_recall = 0.0897[0m
[32m  ********************[0m
[32m  Best f1:0.0972[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.16169: 100%|██████████| 28/28 [01:49<00:00,  4.44s/it]epoch 0 loss 4.16169: 100%|██████████| 28/28 [01:49<00:00,  3.92s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.43768:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.43768:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 1 loss 2.47841:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4435[0m
[32m  eval_f1 = 0.1197[0m
[32m  eval_mcc = 0.4199[0m
[32m  eval_precision = 0.1666[0m
[32m  eval_recall = 0.113[0m
[32m  ********************[0m
[32m  Best f1:0.1197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.47841:   7%|▋         | 2/28 [00:07<01:46,  4.08s/it]epoch 1 loss 2.45984:   7%|▋         | 2/28 [00:07<01:46,  4.08s/it]epoch 1 loss 2.45984:  11%|█         | 3/28 [00:07<01:00,  2.41s/it]epoch 1 loss 2.43679:  11%|█         | 3/28 [00:07<01:00,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.494[0m
[32m  eval_f1 = 0.1398[0m
[32m  eval_mcc = 0.4666[0m
[32m  eval_precision = 0.1912[0m
[32m  eval_recall = 0.134[0m
[32m  ********************[0m
[32m  Best f1:0.1398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.43679:  14%|█▍        | 4/28 [00:13<01:36,  4.02s/it]epoch 1 loss 2.37466:  14%|█▍        | 4/28 [00:14<01:36,  4.02s/it]epoch 1 loss 2.37466:  18%|█▊        | 5/28 [00:14<01:02,  2.73s/it]epoch 1 loss 2.35838:  18%|█▊        | 5/28 [00:14<01:02,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5425[0m
[32m  eval_f1 = 0.161[0m
[32m  eval_mcc = 0.5162[0m
[32m  eval_precision = 0.2165[0m
[32m  eval_recall = 0.1548[0m
[32m  ********************[0m
[32m  Best f1:0.161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.35838:  21%|██▏       | 6/28 [00:20<01:28,  4.00s/it]epoch 1 loss 2.33735:  21%|██▏       | 6/28 [00:21<01:28,  4.00s/it]epoch 1 loss 2.33735:  25%|██▌       | 7/28 [00:21<00:59,  2.84s/it]epoch 1 loss 2.32173:  25%|██▌       | 7/28 [00:21<00:59,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5629[0m
[32m  eval_f1 = 0.1727[0m
[32m  eval_mcc = 0.5404[0m
[32m  eval_precision = 0.2175[0m
[32m  eval_recall = 0.1662[0m
[32m  ********************[0m
[32m  Best f1:0.1727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32173:  29%|██▊       | 8/28 [00:26<01:14,  3.73s/it]epoch 1 loss 2.29208:  29%|██▊       | 8/28 [00:27<01:14,  3.73s/it]epoch 1 loss 2.29208:  32%|███▏      | 9/28 [00:27<00:51,  2.70s/it]epoch 1 loss 2.28815:  32%|███▏      | 9/28 [00:27<00:51,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5735[0m
[32m  eval_f1 = 0.1815[0m
[32m  eval_mcc = 0.5506[0m
[32m  eval_precision = 0.2367[0m
[32m  eval_recall = 0.174[0m
[32m  ********************[0m
[32m  Best f1:0.1815[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5506[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.28815:  36%|███▌      | 10/28 [00:33<01:09,  3.86s/it]epoch 1 loss 2.27266:  36%|███▌      | 10/28 [00:34<01:09,  3.86s/it]epoch 1 loss 2.27266:  39%|███▉      | 11/28 [00:34<00:47,  2.81s/it]epoch 1 loss 2.23912:  39%|███▉      | 11/28 [00:34<00:47,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5802[0m
[32m  eval_f1 = 0.1848[0m
[32m  eval_mcc = 0.5561[0m
[32m  eval_precision = 0.2575[0m
[32m  eval_recall = 0.1761[0m
[32m  ********************[0m
[32m  Best f1:0.1848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23912:  43%|████▎     | 12/28 [00:41<01:07,  4.25s/it]epoch 1 loss 2.19732:  43%|████▎     | 12/28 [00:42<01:07,  4.25s/it]epoch 1 loss 2.19732:  46%|████▋     | 13/28 [00:42<00:46,  3.09s/it]epoch 1 loss 2.16595:  46%|████▋     | 13/28 [00:42<00:46,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5833[0m
[32m  eval_f1 = 0.1849[0m
[32m  eval_mcc = 0.5591[0m
[32m  eval_precision = 0.242[0m
[32m  eval_recall = 0.1757[0m
[32m  ********************[0m
[32m  Best f1:0.1849[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16595:  50%|█████     | 14/28 [00:48<00:58,  4.17s/it]epoch 1 loss 2.14468:  50%|█████     | 14/28 [00:49<00:58,  4.17s/it]epoch 1 loss 2.14468:  54%|█████▎    | 15/28 [00:49<00:39,  3.04s/it]epoch 1 loss 2.11849:  54%|█████▎    | 15/28 [00:49<00:39,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5871[0m
[32m  eval_f1 = 0.1923[0m
[32m  eval_mcc = 0.5636[0m
[32m  eval_precision = 0.2527[0m
[32m  eval_recall = 0.1816[0m
[32m  ********************[0m
[32m  Best f1:0.1923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5636[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11849:  57%|█████▋    | 16/28 [00:55<00:48,  4.08s/it]epoch 1 loss 2.10067:  57%|█████▋    | 16/28 [00:56<00:48,  4.08s/it]epoch 1 loss 2.10067:  61%|██████    | 17/28 [00:56<00:32,  2.98s/it]epoch 1 loss 2.08563:  61%|██████    | 17/28 [00:56<00:32,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5921[0m
[32m  eval_f1 = 0.2088[0m
[32m  eval_mcc = 0.5694[0m
[32m  eval_precision = 0.288[0m
[32m  eval_recall = 0.1966[0m
[32m  ********************[0m
[32m  Best f1:0.2088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08563:  64%|██████▍   | 18/28 [01:01<00:37,  3.79s/it]epoch 1 loss 2.06432:  64%|██████▍   | 18/28 [01:02<00:37,  3.79s/it]epoch 1 loss 2.06432:  68%|██████▊   | 19/28 [01:02<00:25,  2.78s/it]epoch 1 loss 2.04509:  68%|██████▊   | 19/28 [01:02<00:25,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.595[0m
[32m  eval_f1 = 0.2132[0m
[32m  eval_mcc = 0.5741[0m
[32m  eval_precision = 0.2839[0m
[32m  eval_recall = 0.2008[0m
[32m  ********************[0m
[32m  Best f1:0.2132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5741[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04509:  71%|███████▏  | 20/28 [01:08<00:29,  3.65s/it]epoch 1 loss 2.03087:  71%|███████▏  | 20/28 [01:08<00:29,  3.65s/it]epoch 1 loss 2.03087:  75%|███████▌  | 21/28 [01:08<00:18,  2.69s/it]epoch 1 loss 2.01872:  75%|███████▌  | 21/28 [01:08<00:18,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6004[0m
[32m  eval_f1 = 0.2227[0m
[32m  eval_mcc = 0.5802[0m
[32m  eval_precision = 0.298[0m
[32m  eval_recall = 0.2085[0m
[32m  ********************[0m
[32m  Best f1:0.2227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01872:  79%|███████▊  | 22/28 [01:14<00:21,  3.54s/it]epoch 1 loss 2.00817:  79%|███████▊  | 22/28 [01:14<00:21,  3.54s/it]epoch 1 loss 2.00817:  82%|████████▏ | 23/28 [01:14<00:13,  2.61s/it]epoch 1 loss 1.98822:  82%|████████▏ | 23/28 [01:14<00:13,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6048[0m
[32m  eval_f1 = 0.2304[0m
[32m  eval_mcc = 0.5843[0m
[32m  eval_precision = 0.2903[0m
[32m  eval_recall = 0.2172[0m
[32m  ********************[0m
[32m  Best f1:0.2304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5843[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98822:  86%|████████▌ | 24/28 [01:20<00:14,  3.51s/it]epoch 1 loss 1.9735:  86%|████████▌ | 24/28 [01:20<00:14,  3.51s/it] epoch 1 loss 1.9735:  89%|████████▉ | 25/28 [01:20<00:07,  2.58s/it]epoch 1 loss 1.96315:  89%|████████▉ | 25/28 [01:20<00:07,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6061[0m
[32m  eval_f1 = 0.2336[0m
[32m  eval_mcc = 0.5847[0m
[32m  eval_precision = 0.3007[0m
[32m  eval_recall = 0.221[0m
[32m  ********************[0m
[32m  Best f1:0.2336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96315:  93%|█████████▎| 26/28 [01:26<00:07,  3.75s/it]epoch 1 loss 1.95007:  93%|█████████▎| 26/28 [01:27<00:07,  3.75s/it]epoch 1 loss 1.95007:  96%|█████████▋| 27/28 [01:27<00:02,  2.75s/it]epoch 1 loss 1.94489:  96%|█████████▋| 27/28 [01:27<00:02,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6121[0m
[32m  eval_f1 = 0.2442[0m
[32m  eval_mcc = 0.5903[0m
[32m  eval_precision = 0.3244[0m
[32m  eval_recall = 0.2297[0m
[32m  ********************[0m
[32m  Best f1:0.2442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94489: 100%|██████████| 28/28 [01:33<00:00,  3.82s/it]epoch 1 loss 1.94489: 100%|██████████| 28/28 [01:33<00:00,  3.35s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.64994:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.64994:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 2 loss 1.60657:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6139[0m
[32m  eval_f1 = 0.2477[0m
[32m  eval_mcc = 0.5917[0m
[32m  eval_precision = 0.324[0m
[32m  eval_recall = 0.2343[0m
[32m  ********************[0m
[32m  Best f1:0.2477[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60657:   7%|▋         | 2/28 [00:07<01:47,  4.12s/it]epoch 2 loss 1.60415:   7%|▋         | 2/28 [00:07<01:47,  4.12s/it]epoch 2 loss 1.60415:  11%|█         | 3/28 [00:07<01:00,  2.43s/it]epoch 2 loss 1.57439:  11%|█         | 3/28 [00:07<01:00,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6154[0m
[32m  eval_f1 = 0.2491[0m
[32m  eval_mcc = 0.5934[0m
[32m  eval_precision = 0.3319[0m
[32m  eval_recall = 0.2356[0m
[32m  ********************[0m
[32m  Best f1:0.2491[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57439:  14%|█▍        | 4/28 [00:14<01:37,  4.07s/it]epoch 2 loss 1.59472:  14%|█▍        | 4/28 [00:14<01:37,  4.07s/it]epoch 2 loss 1.59472:  18%|█▊        | 5/28 [00:14<01:03,  2.76s/it]epoch 2 loss 1.61624:  18%|█▊        | 5/28 [00:14<01:03,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6166[0m
[32m  eval_f1 = 0.2519[0m
[32m  eval_mcc = 0.5944[0m
[32m  eval_precision = 0.3385[0m
[32m  eval_recall = 0.2384[0m
[32m  ********************[0m
[32m  Best f1:0.2519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5944[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61624:  21%|██▏       | 6/28 [00:21<01:28,  4.02s/it]epoch 2 loss 1.61308:  21%|██▏       | 6/28 [00:21<01:28,  4.02s/it]epoch 2 loss 1.61308:  25%|██▌       | 7/28 [00:21<00:59,  2.84s/it]epoch 2 loss 1.57803:  25%|██▌       | 7/28 [00:21<00:59,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6215[0m
[32m  eval_f1 = 0.2596[0m
[32m  eval_mcc = 0.5998[0m
[32m  eval_precision = 0.3524[0m
[32m  eval_recall = 0.2434[0m
[32m  ********************[0m
[32m  Best f1:0.2596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5998[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57803:  29%|██▊       | 8/28 [00:27<01:17,  3.88s/it]epoch 2 loss 1.55167:  29%|██▊       | 8/28 [00:27<01:17,  3.88s/it]epoch 2 loss 1.55167:  32%|███▏      | 9/28 [00:27<00:53,  2.80s/it]epoch 2 loss 1.54688:  32%|███▏      | 9/28 [00:28<00:53,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6206[0m
[32m  eval_f1 = 0.265[0m
[32m  eval_mcc = 0.5991[0m
[32m  eval_precision = 0.3661[0m
[32m  eval_recall = 0.246[0m
[32m  ********************[0m
[32m  Best f1:0.265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.54688:  36%|███▌      | 10/28 [00:32<01:01,  3.41s/it]epoch 2 loss 1.54063:  36%|███▌      | 10/28 [00:33<01:01,  3.41s/it]epoch 2 loss 1.54063:  39%|███▉      | 11/28 [00:33<00:42,  2.49s/it]epoch 2 loss 1.53618:  39%|███▉      | 11/28 [00:33<00:42,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6215[0m
[32m  eval_f1 = 0.2673[0m
[32m  eval_mcc = 0.6006[0m
[32m  eval_precision = 0.3617[0m
[32m  eval_recall = 0.2476[0m
[32m  ********************[0m
[32m  Best f1:0.2673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53618:  43%|████▎     | 12/28 [00:39<00:59,  3.71s/it]epoch 2 loss 1.53755:  43%|████▎     | 12/28 [00:40<00:59,  3.71s/it]epoch 2 loss 1.53755:  46%|████▋     | 13/28 [00:40<00:40,  2.71s/it]epoch 2 loss 1.53056:  46%|████▋     | 13/28 [00:40<00:40,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6247[0m
[32m  eval_f1 = 0.2709[0m
[32m  eval_mcc = 0.605[0m
[32m  eval_precision = 0.3609[0m
[32m  eval_recall = 0.251[0m
[32m  ********************[0m
[32m  Best f1:0.2709[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53056:  50%|█████     | 14/28 [00:46<00:54,  3.87s/it]epoch 2 loss 1.54046:  50%|█████     | 14/28 [00:47<00:54,  3.87s/it]epoch 2 loss 1.54046:  54%|█████▎    | 15/28 [00:47<00:36,  2.83s/it]epoch 2 loss 1.53519:  54%|█████▎    | 15/28 [00:47<00:36,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6283[0m
[32m  eval_f1 = 0.2752[0m
[32m  eval_mcc = 0.6089[0m
[32m  eval_precision = 0.3514[0m
[32m  eval_recall = 0.2542[0m
[32m  ********************[0m
[32m  Best f1:0.2752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53519:  57%|█████▋    | 16/28 [00:53<00:47,  3.96s/it]epoch 2 loss 1.52845:  57%|█████▋    | 16/28 [00:54<00:47,  3.96s/it]epoch 2 loss 1.52845:  61%|██████    | 17/28 [00:54<00:31,  2.89s/it]epoch 2 loss 1.52588:  61%|██████    | 17/28 [00:54<00:31,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6312[0m
[32m  eval_f1 = 0.2804[0m
[32m  eval_mcc = 0.611[0m
[32m  eval_precision = 0.3595[0m
[32m  eval_recall = 0.2597[0m
[32m  ********************[0m
[32m  Best f1:0.2804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52588:  64%|██████▍   | 18/28 [01:00<00:40,  4.01s/it]epoch 2 loss 1.52448:  64%|██████▍   | 18/28 [01:01<00:40,  4.01s/it]epoch 2 loss 1.52448:  68%|██████▊   | 19/28 [01:01<00:26,  2.93s/it]epoch 2 loss 1.52192:  68%|██████▊   | 19/28 [01:01<00:26,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6309[0m
[32m  eval_f1 = 0.2812[0m
[32m  eval_mcc = 0.61[0m
[32m  eval_precision = 0.3649[0m
[32m  eval_recall = 0.2617[0m
[32m  ********************[0m
[32m  Best f1:0.2812[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.52192:  71%|███████▏  | 20/28 [01:05<00:27,  3.47s/it]epoch 2 loss 1.51921:  71%|███████▏  | 20/28 [01:06<00:27,  3.47s/it]epoch 2 loss 1.51921:  75%|███████▌  | 21/28 [01:06<00:17,  2.55s/it]epoch 2 loss 1.51581:  75%|███████▌  | 21/28 [01:06<00:17,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6323[0m
[32m  eval_f1 = 0.286[0m
[32m  eval_mcc = 0.6109[0m
[32m  eval_precision = 0.3817[0m
[32m  eval_recall = 0.2657[0m
[32m  ********************[0m
[32m  Best f1:0.286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.51581:  79%|███████▊  | 22/28 [01:10<00:19,  3.21s/it]epoch 2 loss 1.50897:  79%|███████▊  | 22/28 [01:11<00:19,  3.21s/it]epoch 2 loss 1.50897:  82%|████████▏ | 23/28 [01:11<00:11,  2.37s/it]epoch 2 loss 1.50509:  82%|████████▏ | 23/28 [01:11<00:11,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6345[0m
[32m  eval_f1 = 0.287[0m
[32m  eval_mcc = 0.6138[0m
[32m  eval_precision = 0.382[0m
[32m  eval_recall = 0.2662[0m
[32m  ********************[0m
[32m  Best f1:0.287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50509:  86%|████████▌ | 24/28 [01:16<00:13,  3.36s/it]epoch 2 loss 1.49866:  86%|████████▌ | 24/28 [01:17<00:13,  3.36s/it]epoch 2 loss 1.49866:  89%|████████▉ | 25/28 [01:17<00:07,  2.48s/it]epoch 2 loss 1.49673:  89%|████████▉ | 25/28 [01:17<00:07,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.637[0m
[32m  eval_f1 = 0.2879[0m
[32m  eval_mcc = 0.6171[0m
[32m  eval_precision = 0.3739[0m
[32m  eval_recall = 0.2672[0m
[32m  ********************[0m
[32m  Best f1:0.2879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49673:  93%|█████████▎| 26/28 [01:23<00:07,  3.71s/it]epoch 2 loss 1.49881:  93%|█████████▎| 26/28 [01:24<00:07,  3.71s/it]epoch 2 loss 1.49881:  96%|█████████▋| 27/28 [01:24<00:02,  2.72s/it]epoch 2 loss 1.49273:  96%|█████████▋| 27/28 [01:24<00:02,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6365[0m
[32m  eval_f1 = 0.2891[0m
[32m  eval_mcc = 0.6178[0m
[32m  eval_precision = 0.3758[0m
[32m  eval_recall = 0.2679[0m
[32m  ********************[0m
[32m  Best f1:0.2891[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49273: 100%|██████████| 28/28 [01:30<00:00,  3.72s/it]epoch 2 loss 1.49273: 100%|██████████| 28/28 [01:30<00:00,  3.23s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.29487:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.29487:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 3 loss 1.30078:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6384[0m
[32m  eval_f1 = 0.2894[0m
[32m  eval_mcc = 0.6202[0m
[32m  eval_precision = 0.3767[0m
[32m  eval_recall = 0.2678[0m
[32m  ********************[0m
[32m  Best f1:0.2894[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30078:   7%|▋         | 2/28 [00:06<01:41,  3.90s/it]epoch 3 loss 1.33887:   7%|▋         | 2/28 [00:07<01:41,  3.90s/it]epoch 3 loss 1.33887:  11%|█         | 3/28 [00:07<00:57,  2.32s/it]epoch 3 loss 1.37332:  11%|█         | 3/28 [00:07<00:57,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6417[0m
[32m  eval_f1 = 0.2898[0m
[32m  eval_mcc = 0.6233[0m
[32m  eval_precision = 0.3771[0m
[32m  eval_recall = 0.268[0m
[32m  ********************[0m
[32m  Best f1:0.2898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37332:  14%|█▍        | 4/28 [00:13<01:34,  3.95s/it]epoch 3 loss 1.40148:  14%|█▍        | 4/28 [00:14<01:34,  3.95s/it]epoch 3 loss 1.40148:  18%|█▊        | 5/28 [00:14<01:01,  2.68s/it]epoch 3 loss 1.42589:  18%|█▊        | 5/28 [00:14<01:01,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6426[0m
[32m  eval_f1 = 0.2904[0m
[32m  eval_mcc = 0.6231[0m
[32m  eval_precision = 0.3731[0m
[32m  eval_recall = 0.2689[0m
[32m  ********************[0m
[32m  Best f1:0.2904[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.42589:  21%|██▏       | 6/28 [00:18<01:14,  3.37s/it]epoch 3 loss 1.4218:  21%|██▏       | 6/28 [00:19<01:14,  3.37s/it] epoch 3 loss 1.4218:  25%|██▌       | 7/28 [00:19<00:50,  2.41s/it]epoch 3 loss 1.41789:  25%|██▌       | 7/28 [00:19<00:50,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6443[0m
[32m  eval_f1 = 0.2929[0m
[32m  eval_mcc = 0.6241[0m
[32m  eval_precision = 0.3787[0m
[32m  eval_recall = 0.2712[0m
[32m  ********************[0m
[32m  Best f1:0.2929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41789:  29%|██▊       | 8/28 [00:25<01:14,  3.72s/it]epoch 3 loss 1.41627:  29%|██▊       | 8/28 [00:26<01:14,  3.72s/it]epoch 3 loss 1.41627:  32%|███▏      | 9/28 [00:26<00:51,  2.69s/it]epoch 3 loss 1.42129:  32%|███▏      | 9/28 [00:26<00:51,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6451[0m
[32m  eval_f1 = 0.2953[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.3814[0m
[32m  eval_recall = 0.273[0m
[32m  ********************[0m
[32m  Best f1:0.2953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42129:  36%|███▌      | 10/28 [00:32<01:07,  3.74s/it]epoch 3 loss 1.41833:  36%|███▌      | 10/28 [00:32<01:07,  3.74s/it]epoch 3 loss 1.41833:  39%|███▉      | 11/28 [00:32<00:46,  2.73s/it]epoch 3 loss 1.41934:  39%|███▉      | 11/28 [00:33<00:46,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6472[0m
[32m  eval_f1 = 0.3025[0m
[32m  eval_mcc = 0.6272[0m
[32m  eval_precision = 0.4004[0m
[32m  eval_recall = 0.2781[0m
[32m  ********************[0m
[32m  Best f1:0.3025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41934:  43%|████▎     | 12/28 [00:38<01:01,  3.81s/it]epoch 3 loss 1.40978:  43%|████▎     | 12/28 [00:39<01:01,  3.81s/it]epoch 3 loss 1.40978:  46%|████▋     | 13/28 [00:39<00:41,  2.79s/it]epoch 3 loss 1.39855:  46%|████▋     | 13/28 [00:39<00:41,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6473[0m
[32m  eval_f1 = 0.3014[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.3983[0m
[32m  eval_recall = 0.2776[0m
[32m  ********************[0m
[32m  Best MCC:0.6274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39855:  50%|█████     | 14/28 [00:44<00:48,  3.47s/it]epoch 3 loss 1.40515:  50%|█████     | 14/28 [00:44<00:48,  3.47s/it]epoch 3 loss 1.40515:  54%|█████▎    | 15/28 [00:44<00:33,  2.55s/it]epoch 3 loss 1.40424:  54%|█████▎    | 15/28 [00:45<00:33,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6462[0m
[32m  eval_f1 = 0.3018[0m
[32m  eval_mcc = 0.6262[0m
[32m  eval_precision = 0.4[0m
[32m  eval_recall = 0.2779[0m

epoch 3 loss 1.40424:  57%|█████▋    | 16/28 [00:48<00:35,  2.93s/it]epoch 3 loss 1.40573:  57%|█████▋    | 16/28 [00:49<00:35,  2.93s/it]epoch 3 loss 1.40573:  61%|██████    | 17/28 [00:49<00:23,  2.17s/it]epoch 3 loss 1.39748:  61%|██████    | 17/28 [00:49<00:23,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6466[0m
[32m  eval_f1 = 0.3034[0m
[32m  eval_mcc = 0.6267[0m
[32m  eval_precision = 0.4085[0m
[32m  eval_recall = 0.2793[0m
[32m  ********************[0m
[32m  Best f1:0.3034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.39748:  64%|██████▍   | 18/28 [00:54<00:30,  3.03s/it]epoch 3 loss 1.40096:  64%|██████▍   | 18/28 [00:54<00:30,  3.03s/it]epoch 3 loss 1.40096:  68%|██████▊   | 19/28 [00:54<00:20,  2.24s/it]epoch 3 loss 1.4024:  68%|██████▊   | 19/28 [00:54<00:20,  2.24s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.306[0m
[32m  eval_mcc = 0.6273[0m
[32m  eval_precision = 0.4098[0m
[32m  eval_recall = 0.281[0m
[32m  ********************[0m
[32m  Best f1:0.306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.4024:  71%|███████▏  | 20/28 [00:59<00:24,  3.09s/it]epoch 3 loss 1.3972:  71%|███████▏  | 20/28 [00:59<00:24,  3.09s/it]epoch 3 loss 1.3972:  75%|███████▌  | 21/28 [00:59<00:15,  2.28s/it]epoch 3 loss 1.39978:  75%|███████▌  | 21/28 [01:00<00:15,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6477[0m
[32m  eval_f1 = 0.3054[0m
[32m  eval_mcc = 0.6281[0m
[32m  eval_precision = 0.4065[0m
[32m  eval_recall = 0.2807[0m
[32m  ********************[0m
[32m  Best MCC:0.6281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39978:  79%|███████▊  | 22/28 [01:05<00:18,  3.11s/it]epoch 3 loss 1.39656:  79%|███████▊  | 22/28 [01:05<00:18,  3.11s/it]epoch 3 loss 1.39656:  82%|████████▏ | 23/28 [01:05<00:11,  2.30s/it]epoch 3 loss 1.39709:  82%|████████▏ | 23/28 [01:05<00:11,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6475[0m
[32m  eval_f1 = 0.3054[0m
[32m  eval_mcc = 0.6278[0m
[32m  eval_precision = 0.3977[0m
[32m  eval_recall = 0.2809[0m

epoch 3 loss 1.39709:  86%|████████▌ | 24/28 [01:09<00:11,  2.75s/it]epoch 3 loss 1.39377:  86%|████████▌ | 24/28 [01:09<00:11,  2.75s/it]epoch 3 loss 1.39377:  89%|████████▉ | 25/28 [01:09<00:06,  2.05s/it]epoch 3 loss 1.39058:  89%|████████▉ | 25/28 [01:10<00:06,  2.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6484[0m
[32m  eval_f1 = 0.3062[0m
[32m  eval_mcc = 0.6287[0m
[32m  eval_precision = 0.3994[0m
[32m  eval_recall = 0.2813[0m
[32m  ********************[0m
[32m  Best f1:0.3062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39058:  93%|█████████▎| 26/28 [01:15<00:06,  3.13s/it]epoch 3 loss 1.39063:  93%|█████████▎| 26/28 [01:15<00:06,  3.13s/it]epoch 3 loss 1.39063:  96%|█████████▋| 27/28 [01:15<00:02,  2.31s/it]epoch 3 loss 1.39003:  96%|█████████▋| 27/28 [01:15<00:02,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6496[0m
[32m  eval_f1 = 0.3099[0m
[32m  eval_mcc = 0.63[0m
[32m  eval_precision = 0.4012[0m
[32m  eval_recall = 0.2846[0m
[32m  ********************[0m
[32m  Best f1:0.3099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.63[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39003: 100%|██████████| 28/28 [01:22<00:00,  3.52s/it]epoch 3 loss 1.39003: 100%|██████████| 28/28 [01:22<00:00,  2.93s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.32148:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.32148:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s]epoch 4 loss 1.31635:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6504[0m
[32m  eval_f1 = 0.3159[0m
[32m  eval_mcc = 0.6309[0m
[32m  eval_precision = 0.4107[0m
[32m  eval_recall = 0.2889[0m
[32m  ********************[0m
[32m  Best f1:0.3159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31635:   7%|▋         | 2/28 [00:06<01:44,  4.01s/it]epoch 4 loss 1.29909:   7%|▋         | 2/28 [00:07<01:44,  4.01s/it]epoch 4 loss 1.29909:  11%|█         | 3/28 [00:07<00:59,  2.38s/it]epoch 4 loss 1.32646:  11%|█         | 3/28 [00:07<00:59,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.3162[0m
[32m  eval_mcc = 0.6318[0m
[32m  eval_precision = 0.4115[0m
[32m  eval_recall = 0.289[0m
[32m  ********************[0m
[32m  Best f1:0.3162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32646:  14%|█▍        | 4/28 [00:13<01:35,  4.00s/it]epoch 4 loss 1.29256:  14%|█▍        | 4/28 [00:14<01:35,  4.00s/it]epoch 4 loss 1.29256:  18%|█▊        | 5/28 [00:14<01:02,  2.71s/it]epoch 4 loss 1.30904:  18%|█▊        | 5/28 [00:14<01:02,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6505[0m
[32m  eval_f1 = 0.3159[0m
[32m  eval_mcc = 0.6318[0m
[32m  eval_precision = 0.4123[0m
[32m  eval_recall = 0.2889[0m

epoch 4 loss 1.30904:  21%|██▏       | 6/28 [00:18<01:07,  3.08s/it]epoch 4 loss 1.31735:  21%|██▏       | 6/28 [00:18<01:07,  3.08s/it]epoch 4 loss 1.31735:  25%|██▌       | 7/28 [00:18<00:46,  2.21s/it]epoch 4 loss 1.31709:  25%|██▌       | 7/28 [00:18<00:46,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6507[0m
[32m  eval_f1 = 0.3167[0m
[32m  eval_mcc = 0.632[0m
[32m  eval_precision = 0.4209[0m
[32m  eval_recall = 0.2895[0m
[32m  ********************[0m
[32m  Best f1:0.3167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31709:  29%|██▊       | 8/28 [00:24<01:07,  3.38s/it]epoch 4 loss 1.31387:  29%|██▊       | 8/28 [00:24<01:07,  3.38s/it]epoch 4 loss 1.31387:  32%|███▏      | 9/28 [00:24<00:46,  2.45s/it]epoch 4 loss 1.30881:  32%|███▏      | 9/28 [00:25<00:46,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6512[0m
[32m  eval_f1 = 0.3176[0m
[32m  eval_mcc = 0.6325[0m
[32m  eval_precision = 0.421[0m
[32m  eval_recall = 0.2907[0m
[32m  ********************[0m
[32m  Best f1:0.3176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.30881:  36%|███▌      | 10/28 [00:30<01:01,  3.43s/it]epoch 4 loss 1.31116:  36%|███▌      | 10/28 [00:30<01:01,  3.43s/it]epoch 4 loss 1.31116:  39%|███▉      | 11/28 [00:30<00:42,  2.51s/it]epoch 4 loss 1.32441:  39%|███▉      | 11/28 [00:31<00:42,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6517[0m
[32m  eval_f1 = 0.3176[0m
[32m  eval_mcc = 0.6329[0m
[32m  eval_precision = 0.4204[0m
[32m  eval_recall = 0.2909[0m
[32m  ********************[0m
[32m  Best f1:0.3176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32441:  43%|████▎     | 12/28 [00:36<00:55,  3.45s/it]epoch 4 loss 1.32683:  43%|████▎     | 12/28 [00:36<00:55,  3.45s/it]epoch 4 loss 1.32683:  46%|████▋     | 13/28 [00:36<00:38,  2.53s/it]epoch 4 loss 1.32976:  46%|████▋     | 13/28 [00:37<00:38,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6519[0m
[32m  eval_f1 = 0.3173[0m
[32m  eval_mcc = 0.6329[0m
[32m  eval_precision = 0.4112[0m
[32m  eval_recall = 0.291[0m

epoch 4 loss 1.32976:  50%|█████     | 14/28 [00:40<00:40,  2.92s/it]epoch 4 loss 1.33264:  50%|█████     | 14/28 [00:41<00:40,  2.92s/it]epoch 4 loss 1.33264:  54%|█████▎    | 15/28 [00:41<00:28,  2.16s/it]epoch 4 loss 1.33486:  54%|█████▎    | 15/28 [00:41<00:28,  2.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6523[0m
[32m  eval_f1 = 0.3173[0m
[32m  eval_mcc = 0.633[0m
[32m  eval_precision = 0.4092[0m
[32m  eval_recall = 0.2914[0m
[32m  ********************[0m
[32m  Best MCC:0.633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33486:  57%|█████▋    | 16/28 [00:46<00:36,  3.03s/it]epoch 4 loss 1.33686:  57%|█████▋    | 16/28 [00:46<00:36,  3.03s/it]epoch 4 loss 1.33686:  61%|██████    | 17/28 [00:46<00:24,  2.24s/it]epoch 4 loss 1.35017:  61%|██████    | 17/28 [00:46<00:24,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3183[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4089[0m
[32m  eval_recall = 0.2933[0m
[32m  ********************[0m
[32m  Best f1:0.3183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35017:  64%|██████▍   | 18/28 [00:52<00:32,  3.28s/it]epoch 4 loss 1.34841:  64%|██████▍   | 18/28 [00:52<00:32,  3.28s/it]epoch 4 loss 1.34841:  68%|██████▊   | 19/28 [00:52<00:21,  2.42s/it]epoch 4 loss 1.34833:  68%|██████▊   | 19/28 [00:53<00:21,  2.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.3197[0m
[32m  eval_mcc = 0.633[0m
[32m  eval_precision = 0.4073[0m
[32m  eval_recall = 0.2948[0m
[32m  ********************[0m
[32m  Best f1:0.3197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.34833:  71%|███████▏  | 20/28 [00:57<00:25,  3.18s/it]epoch 4 loss 1.34395:  71%|███████▏  | 20/28 [00:57<00:25,  3.18s/it]epoch 4 loss 1.34395:  75%|███████▌  | 21/28 [00:57<00:16,  2.35s/it]epoch 4 loss 1.34967:  75%|███████▌  | 21/28 [00:58<00:16,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3202[0m
[32m  eval_mcc = 0.633[0m
[32m  eval_precision = 0.407[0m
[32m  eval_recall = 0.2955[0m
[32m  ********************[0m
[32m  Best f1:0.3202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.34967:  79%|███████▊  | 22/28 [01:02<00:18,  3.11s/it]epoch 4 loss 1.34815:  79%|███████▊  | 22/28 [01:03<00:18,  3.11s/it]epoch 4 loss 1.34815:  82%|████████▏ | 23/28 [01:03<00:11,  2.30s/it]epoch 4 loss 1.34713:  82%|████████▏ | 23/28 [01:03<00:11,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.32[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.4064[0m
[32m  eval_recall = 0.2956[0m

epoch 4 loss 1.34713:  86%|████████▌ | 24/28 [01:07<00:11,  2.75s/it]epoch 4 loss 1.3484:  86%|████████▌ | 24/28 [01:07<00:11,  2.75s/it] epoch 4 loss 1.3484:  89%|████████▉ | 25/28 [01:07<00:06,  2.05s/it]epoch 4 loss 1.34668:  89%|████████▉ | 25/28 [01:07<00:06,  2.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6531[0m
[32m  eval_f1 = 0.3212[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.406[0m
[32m  eval_recall = 0.297[0m
[32m  ********************[0m
[32m  Best f1:0.3212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.34668:  93%|█████████▎| 26/28 [01:12<00:05,  2.85s/it]epoch 4 loss 1.35044:  93%|█████████▎| 26/28 [01:12<00:05,  2.85s/it]epoch 4 loss 1.35044:  96%|█████████▋| 27/28 [01:12<00:02,  2.12s/it]epoch 4 loss 1.34657:  96%|█████████▋| 27/28 [01:12<00:02,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6531[0m
[32m  eval_f1 = 0.3212[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4059[0m
[32m  eval_recall = 0.297[0m
[32m  ********************[0m
[32m  Best f1:0.3212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.34657: 100%|██████████| 28/28 [01:17<00:00,  2.84s/it]epoch 4 loss 1.34657: 100%|██████████| 28/28 [01:17<00:00,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6531[0m
[32m  eval_f1 = 0.3212[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4059[0m
[32m  eval_recall = 0.297[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.631[0m
[32m  eval_f1 = 0.2548[0m
[32m  eval_mcc = 0.6115[0m
[32m  eval_precision = 0.3367[0m
[32m  eval_recall = 0.237[0m

