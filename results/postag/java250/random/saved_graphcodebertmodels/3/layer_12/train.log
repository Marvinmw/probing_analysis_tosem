[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12', posratio=0.5, seed=892, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.80537:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.80537:   4%|▎         | 1/28 [00:00<00:20,  1.29it/s]epoch 0 loss 5.79706:   4%|▎         | 1/28 [00:01<00:20,  1.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0055[0m
[32m  eval_f1 = 0.0008[0m
[32m  eval_mcc = 0.0009[0m
[32m  eval_precision = 0.003[0m
[32m  eval_recall = 0.0026[0m
[32m  ********************[0m
[32m  Best f1:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.79706:   7%|▋         | 2/28 [00:06<01:30,  3.50s/it]epoch 0 loss 5.77323:   7%|▋         | 2/28 [00:06<01:30,  3.50s/it]epoch 0 loss 5.77323:  11%|█         | 3/28 [00:06<00:52,  2.08s/it]epoch 0 loss 5.76076:  11%|█         | 3/28 [00:06<00:52,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0154[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = 0.0061[0m
[32m  eval_precision = 0.0024[0m
[32m  eval_recall = 0.004[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0061[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.76076:  14%|█▍        | 4/28 [00:13<01:32,  3.87s/it]epoch 0 loss 5.72852:  14%|█▍        | 4/28 [00:13<01:32,  3.87s/it]epoch 0 loss 5.72852:  18%|█▊        | 5/28 [00:13<01:00,  2.63s/it]epoch 0 loss 5.69253:  18%|█▊        | 5/28 [00:14<01:00,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0297[0m
[32m  eval_f1 = 0.0015[0m
[32m  eval_mcc = 0.0086[0m
[32m  eval_precision = 0.0036[0m
[32m  eval_recall = 0.0062[0m
[32m  ********************[0m
[32m  Best f1:0.0015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.69253:  21%|██▏       | 6/28 [00:20<01:26,  3.95s/it]epoch 0 loss 5.65181:  21%|██▏       | 6/28 [00:20<01:26,  3.95s/it]epoch 0 loss 5.65181:  25%|██▌       | 7/28 [00:20<00:58,  2.80s/it]epoch 0 loss 5.60459:  25%|██▌       | 7/28 [00:20<00:58,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0494[0m
[32m  eval_f1 = 0.0024[0m
[32m  eval_mcc = 0.0148[0m
[32m  eval_precision = 0.0054[0m
[32m  eval_recall = 0.0091[0m
[32m  ********************[0m
[32m  Best f1:0.0024[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.60459:  29%|██▊       | 8/28 [00:27<01:21,  4.05s/it]epoch 0 loss 5.55066:  29%|██▊       | 8/28 [00:27<01:21,  4.05s/it]epoch 0 loss 5.55066:  32%|███▏      | 9/28 [00:27<00:55,  2.92s/it]epoch 0 loss 5.49101:  32%|███▏      | 9/28 [00:28<00:55,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.058[0m
[32m  eval_f1 = 0.0039[0m
[32m  eval_mcc = 0.018[0m
[32m  eval_precision = 0.008[0m
[32m  eval_recall = 0.0104[0m
[32m  ********************[0m
[32m  Best f1:0.0039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.49101:  36%|███▌      | 10/28 [00:38<01:35,  5.29s/it]epoch 0 loss 5.42443:  36%|███▌      | 10/28 [00:38<01:35,  5.29s/it]epoch 0 loss 5.42443:  39%|███▉      | 11/28 [00:38<01:04,  3.80s/it]epoch 0 loss 5.35763:  39%|███▉      | 11/28 [00:39<01:04,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0704[0m
[32m  eval_f1 = 0.0083[0m
[32m  eval_mcc = 0.031[0m
[32m  eval_precision = 0.0214[0m
[32m  eval_recall = 0.014[0m
[32m  ********************[0m
[32m  Best f1:0.0083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.35763:  43%|████▎     | 12/28 [00:53<01:52,  7.06s/it]epoch 0 loss 5.28462:  43%|████▎     | 12/28 [00:53<01:52,  7.06s/it]epoch 0 loss 5.28462:  46%|████▋     | 13/28 [00:53<01:15,  5.05s/it]epoch 0 loss 5.20594:  46%|████▋     | 13/28 [00:54<01:15,  5.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0885[0m
[32m  eval_f1 = 0.0109[0m
[32m  eval_mcc = 0.0463[0m
[32m  eval_precision = 0.0144[0m
[32m  eval_recall = 0.0171[0m
[32m  ********************[0m
[32m  Best f1:0.0109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0463[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20594:  50%|█████     | 14/28 [01:04<01:33,  6.66s/it]epoch 0 loss 5.12739:  50%|█████     | 14/28 [01:04<01:33,  6.66s/it]epoch 0 loss 5.12739:  54%|█████▎    | 15/28 [01:04<01:02,  4.78s/it]epoch 0 loss 5.04797:  54%|█████▎    | 15/28 [01:04<01:02,  4.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1144[0m
[32m  eval_f1 = 0.0094[0m
[32m  eval_mcc = 0.0629[0m
[32m  eval_precision = 0.0171[0m
[32m  eval_recall = 0.0172[0m
[32m  ********************[0m
[32m  Best MCC:0.0629[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04797:  57%|█████▋    | 16/28 [01:09<00:57,  4.83s/it]epoch 0 loss 4.96767:  57%|█████▋    | 16/28 [01:09<00:57,  4.83s/it]epoch 0 loss 4.96767:  61%|██████    | 17/28 [01:09<00:38,  3.50s/it]epoch 0 loss 4.89153:  61%|██████    | 17/28 [01:10<00:38,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1517[0m
[32m  eval_f1 = 0.0104[0m
[32m  eval_mcc = 0.0984[0m
[32m  eval_precision = 0.0295[0m
[32m  eval_recall = 0.0198[0m
[32m  ********************[0m
[32m  Best MCC:0.0984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.89153:  64%|██████▍   | 18/28 [01:17<00:46,  4.67s/it]epoch 0 loss 4.82174:  64%|██████▍   | 18/28 [01:17<00:46,  4.67s/it]epoch 0 loss 4.82174:  68%|██████▊   | 19/28 [01:17<00:30,  3.39s/it]epoch 0 loss 4.74839:  68%|██████▊   | 19/28 [01:18<00:30,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1743[0m
[32m  eval_f1 = 0.0154[0m
[32m  eval_mcc = 0.1262[0m
[32m  eval_precision = 0.0348[0m
[32m  eval_recall = 0.0224[0m
[32m  ********************[0m
[32m  Best f1:0.0154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.74839:  71%|███████▏  | 20/28 [01:26<00:40,  5.12s/it]epoch 0 loss 4.6794:  71%|███████▏  | 20/28 [01:27<00:40,  5.12s/it] epoch 0 loss 4.6794:  75%|███████▌  | 21/28 [01:27<00:25,  3.71s/it]epoch 0 loss 4.60907:  75%|███████▌  | 21/28 [01:27<00:25,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2233[0m
[32m  eval_f1 = 0.0227[0m
[32m  eval_mcc = 0.1721[0m
[32m  eval_precision = 0.0334[0m
[32m  eval_recall = 0.0283[0m
[32m  ********************[0m
[32m  Best f1:0.0227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1721[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.60907:  79%|███████▊  | 22/28 [01:36<00:31,  5.23s/it]epoch 0 loss 4.54198:  79%|███████▊  | 22/28 [01:36<00:31,  5.23s/it]epoch 0 loss 4.54198:  82%|████████▏ | 23/28 [01:36<00:18,  3.79s/it]epoch 0 loss 4.4832:  82%|████████▏ | 23/28 [01:36<00:18,  3.79s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2874[0m
[32m  eval_f1 = 0.03[0m
[32m  eval_mcc = 0.2287[0m
[32m  eval_precision = 0.0414[0m
[32m  eval_recall = 0.0353[0m
[32m  ********************[0m
[32m  Best f1:0.03[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.4832:  86%|████████▌ | 24/28 [01:46<00:22,  5.71s/it]epoch 0 loss 4.43398:  86%|████████▌ | 24/28 [01:47<00:22,  5.71s/it]epoch 0 loss 4.43398:  89%|████████▉ | 25/28 [01:47<00:12,  4.12s/it]epoch 0 loss 4.37654:  89%|████████▉ | 25/28 [01:47<00:12,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.287[0m
[32m  eval_f1 = 0.0416[0m
[32m  eval_mcc = 0.2436[0m
[32m  eval_precision = 0.0752[0m
[32m  eval_recall = 0.042[0m
[32m  ********************[0m
[32m  Best f1:0.0416[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.37654:  93%|█████████▎| 26/28 [01:56<00:11,  5.61s/it]epoch 0 loss 4.32143:  93%|█████████▎| 26/28 [01:56<00:11,  5.61s/it]epoch 0 loss 4.32143:  96%|█████████▋| 27/28 [01:56<00:04,  4.05s/it]epoch 0 loss 4.26738:  96%|█████████▋| 27/28 [01:56<00:04,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3215[0m
[32m  eval_f1 = 0.0775[0m
[32m  eval_mcc = 0.2945[0m
[32m  eval_precision = 0.1306[0m
[32m  eval_recall = 0.07[0m
[32m  ********************[0m
[32m  Best f1:0.0775[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.26738: 100%|██████████| 28/28 [02:03<00:00,  5.05s/it]epoch 0 loss 4.26738: 100%|██████████| 28/28 [02:03<00:00,  4.43s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.64467:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.64467:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 1 loss 2.68343:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3914[0m
[32m  eval_f1 = 0.1056[0m
[32m  eval_mcc = 0.3738[0m
[32m  eval_precision = 0.1636[0m
[32m  eval_recall = 0.098[0m
[32m  ********************[0m
[32m  Best f1:0.1056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.68343:   7%|▋         | 2/28 [00:09<02:18,  5.32s/it]epoch 1 loss 2.66901:   7%|▋         | 2/28 [00:09<02:18,  5.32s/it]epoch 1 loss 2.66901:  11%|█         | 3/28 [00:09<01:17,  3.08s/it]epoch 1 loss 2.6461:  11%|█         | 3/28 [00:09<01:17,  3.08s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.455[0m
[32m  eval_f1 = 0.1246[0m
[32m  eval_mcc = 0.4327[0m
[32m  eval_precision = 0.1785[0m
[32m  eval_recall = 0.119[0m
[32m  ********************[0m
[32m  Best f1:0.1246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.6461:  14%|█▍        | 4/28 [00:18<02:08,  5.35s/it]epoch 1 loss 2.58825:  14%|█▍        | 4/28 [00:18<02:08,  5.35s/it]epoch 1 loss 2.58825:  18%|█▊        | 5/28 [00:18<01:22,  3.58s/it]epoch 1 loss 2.57205:  18%|█▊        | 5/28 [00:19<01:22,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5081[0m
[32m  eval_f1 = 0.1412[0m
[32m  eval_mcc = 0.4799[0m
[32m  eval_precision = 0.1974[0m
[32m  eval_recall = 0.1363[0m
[32m  ********************[0m
[32m  Best f1:0.1412[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4799[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.57205:  21%|██▏       | 6/28 [00:27<01:56,  5.29s/it]epoch 1 loss 2.55042:  21%|██▏       | 6/28 [00:27<01:56,  5.29s/it]epoch 1 loss 2.55042:  25%|██▌       | 7/28 [00:27<01:17,  3.70s/it]epoch 1 loss 2.53364:  25%|██▌       | 7/28 [00:28<01:17,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5375[0m
[32m  eval_f1 = 0.155[0m
[32m  eval_mcc = 0.5119[0m
[32m  eval_precision = 0.2129[0m
[32m  eval_recall = 0.1487[0m
[32m  ********************[0m
[32m  Best f1:0.155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.53364:  29%|██▊       | 8/28 [00:35<01:39,  4.96s/it]epoch 1 loss 2.50238:  29%|██▊       | 8/28 [00:35<01:39,  4.96s/it]epoch 1 loss 2.50238:  32%|███▏      | 9/28 [00:35<01:07,  3.54s/it]epoch 1 loss 2.49854:  32%|███▏      | 9/28 [00:36<01:07,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.551[0m
[32m  eval_f1 = 0.1653[0m
[32m  eval_mcc = 0.5253[0m
[32m  eval_precision = 0.2268[0m
[32m  eval_recall = 0.1589[0m
[32m  ********************[0m
[32m  Best f1:0.1653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.49854:  36%|███▌      | 10/28 [00:44<01:31,  5.10s/it]epoch 1 loss 2.48292:  36%|███▌      | 10/28 [00:44<01:31,  5.10s/it]epoch 1 loss 2.48292:  39%|███▉      | 11/28 [00:44<01:02,  3.67s/it]epoch 1 loss 2.44917:  39%|███▉      | 11/28 [00:45<01:02,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5601[0m
[32m  eval_f1 = 0.1691[0m
[32m  eval_mcc = 0.5333[0m
[32m  eval_precision = 0.2194[0m
[32m  eval_recall = 0.1624[0m
[32m  ********************[0m
[32m  Best f1:0.1691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.44917:  43%|████▎     | 12/28 [00:53<01:22,  5.13s/it]epoch 1 loss 2.40608:  43%|████▎     | 12/28 [00:53<01:22,  5.13s/it]epoch 1 loss 2.40608:  46%|████▋     | 13/28 [00:53<00:55,  3.70s/it]epoch 1 loss 2.37328:  46%|████▋     | 13/28 [00:54<00:55,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5619[0m
[32m  eval_f1 = 0.1698[0m
[32m  eval_mcc = 0.5356[0m
[32m  eval_precision = 0.2113[0m
[32m  eval_recall = 0.1633[0m
[32m  ********************[0m
[32m  Best f1:0.1698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.37328:  50%|█████     | 14/28 [01:01<01:07,  4.80s/it]epoch 1 loss 2.35065:  50%|█████     | 14/28 [01:01<01:07,  4.80s/it]epoch 1 loss 2.35065:  54%|█████▎    | 15/28 [01:01<00:45,  3.48s/it]epoch 1 loss 2.32263:  54%|█████▎    | 15/28 [01:02<00:45,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5623[0m
[32m  eval_f1 = 0.1703[0m
[32m  eval_mcc = 0.537[0m
[32m  eval_precision = 0.2214[0m
[32m  eval_recall = 0.1646[0m
[32m  ********************[0m
[32m  Best f1:0.1703[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32263:  57%|█████▋    | 16/28 [01:10<01:00,  5.05s/it]epoch 1 loss 2.30365:  57%|█████▋    | 16/28 [01:10<01:00,  5.05s/it]epoch 1 loss 2.30365:  61%|██████    | 17/28 [01:10<00:40,  3.66s/it]epoch 1 loss 2.28702:  61%|██████    | 17/28 [01:11<00:40,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5669[0m
[32m  eval_f1 = 0.1734[0m
[32m  eval_mcc = 0.5422[0m
[32m  eval_precision = 0.2176[0m
[32m  eval_recall = 0.168[0m
[32m  ********************[0m
[32m  Best f1:0.1734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5422[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.28702:  64%|██████▍   | 18/28 [01:17<00:46,  4.69s/it]epoch 1 loss 2.26387:  64%|██████▍   | 18/28 [01:18<00:46,  4.69s/it]epoch 1 loss 2.26387:  68%|██████▊   | 19/28 [01:18<00:30,  3.41s/it]epoch 1 loss 2.24251:  68%|██████▊   | 19/28 [01:18<00:30,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5785[0m
[32m  eval_f1 = 0.1823[0m
[32m  eval_mcc = 0.5566[0m
[32m  eval_precision = 0.2403[0m
[32m  eval_recall = 0.1749[0m
[32m  ********************[0m
[32m  Best f1:0.1823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.24251:  71%|███████▏  | 20/28 [01:26<00:38,  4.78s/it]epoch 1 loss 2.2264:  71%|███████▏  | 20/28 [01:26<00:38,  4.78s/it] epoch 1 loss 2.2264:  75%|███████▌  | 21/28 [01:26<00:24,  3.47s/it]epoch 1 loss 2.21254:  75%|███████▌  | 21/28 [01:27<00:24,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5845[0m
[32m  eval_f1 = 0.197[0m
[32m  eval_mcc = 0.5633[0m
[32m  eval_precision = 0.2575[0m
[32m  eval_recall = 0.1882[0m
[32m  ********************[0m
[32m  Best f1:0.197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.21254:  79%|███████▊  | 22/28 [01:33<00:26,  4.39s/it]epoch 1 loss 2.2001:  79%|███████▊  | 22/28 [01:33<00:26,  4.39s/it] epoch 1 loss 2.2001:  82%|████████▏ | 23/28 [01:33<00:16,  3.20s/it]epoch 1 loss 2.17822:  82%|████████▏ | 23/28 [01:34<00:16,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5891[0m
[32m  eval_f1 = 0.2131[0m
[32m  eval_mcc = 0.567[0m
[32m  eval_precision = 0.2758[0m
[32m  eval_recall = 0.2024[0m
[32m  ********************[0m
[32m  Best f1:0.2131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17822:  86%|████████▌ | 24/28 [01:40<00:16,  4.18s/it]epoch 1 loss 2.16152:  86%|████████▌ | 24/28 [01:40<00:16,  4.18s/it]epoch 1 loss 2.16152:  89%|████████▉ | 25/28 [01:40<00:09,  3.06s/it]epoch 1 loss 2.14963:  89%|████████▉ | 25/28 [01:40<00:09,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5925[0m
[32m  eval_f1 = 0.218[0m
[32m  eval_mcc = 0.5694[0m
[32m  eval_precision = 0.2812[0m
[32m  eval_recall = 0.2079[0m
[32m  ********************[0m
[32m  Best f1:0.218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.14963:  93%|█████████▎| 26/28 [01:47<00:08,  4.10s/it]epoch 1 loss 2.13468:  93%|█████████▎| 26/28 [01:47<00:08,  4.10s/it]epoch 1 loss 2.13468:  96%|█████████▋| 27/28 [01:47<00:02,  3.00s/it]epoch 1 loss 2.12685:  96%|█████████▋| 27/28 [01:47<00:02,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.594[0m
[32m  eval_f1 = 0.2226[0m
[32m  eval_mcc = 0.5707[0m
[32m  eval_precision = 0.2919[0m
[32m  eval_recall = 0.2122[0m
[32m  ********************[0m
[32m  Best f1:0.2226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5707[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12685: 100%|██████████| 28/28 [01:53<00:00,  3.98s/it]epoch 1 loss 2.12685: 100%|██████████| 28/28 [01:53<00:00,  4.06s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.79624:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.79624:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.74859:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5979[0m
[32m  eval_f1 = 0.2306[0m
[32m  eval_mcc = 0.5746[0m
[32m  eval_precision = 0.3059[0m
[32m  eval_recall = 0.2186[0m
[32m  ********************[0m
[32m  Best f1:0.2306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.74859:   7%|▋         | 2/28 [00:06<01:43,  4.00s/it]epoch 2 loss 1.74159:   7%|▋         | 2/28 [00:07<01:43,  4.00s/it]epoch 2 loss 1.74159:  11%|█         | 3/28 [00:07<00:59,  2.37s/it]epoch 2 loss 1.70956:  11%|█         | 3/28 [00:07<00:59,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6021[0m
[32m  eval_f1 = 0.2343[0m
[32m  eval_mcc = 0.5792[0m
[32m  eval_precision = 0.2987[0m
[32m  eval_recall = 0.2215[0m
[32m  ********************[0m
[32m  Best f1:0.2343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5792[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.70956:  14%|█▍        | 4/28 [00:13<01:34,  3.94s/it]epoch 2 loss 1.72844:  14%|█▍        | 4/28 [00:14<01:34,  3.94s/it]epoch 2 loss 1.72844:  18%|█▊        | 5/28 [00:14<01:01,  2.67s/it]epoch 2 loss 1.74975:  18%|█▊        | 5/28 [00:14<01:01,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6024[0m
[32m  eval_f1 = 0.2378[0m
[32m  eval_mcc = 0.5793[0m
[32m  eval_precision = 0.317[0m
[32m  eval_recall = 0.2251[0m
[32m  ********************[0m
[32m  Best f1:0.2378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5793[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.74975:  21%|██▏       | 6/28 [00:20<01:27,  3.99s/it]epoch 2 loss 1.74698:  21%|██▏       | 6/28 [00:21<01:27,  3.99s/it]epoch 2 loss 1.74698:  25%|██▌       | 7/28 [00:21<00:59,  2.82s/it]epoch 2 loss 1.71078:  25%|██▌       | 7/28 [00:21<00:59,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6035[0m
[32m  eval_f1 = 0.2401[0m
[32m  eval_mcc = 0.5803[0m
[32m  eval_precision = 0.324[0m
[32m  eval_recall = 0.2269[0m
[32m  ********************[0m
[32m  Best f1:0.2401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.71078:  29%|██▊       | 8/28 [00:27<01:20,  4.01s/it]epoch 2 loss 1.68423:  29%|██▊       | 8/28 [00:28<01:20,  4.01s/it]epoch 2 loss 1.68423:  32%|███▏      | 9/28 [00:28<00:54,  2.89s/it]epoch 2 loss 1.67948:  32%|███▏      | 9/28 [00:28<00:54,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6054[0m
[32m  eval_f1 = 0.2408[0m
[32m  eval_mcc = 0.5823[0m
[32m  eval_precision = 0.3231[0m
[32m  eval_recall = 0.2269[0m
[32m  ********************[0m
[32m  Best f1:0.2408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.67948:  36%|███▌      | 10/28 [00:34<01:11,  4.00s/it]epoch 2 loss 1.67315:  36%|███▌      | 10/28 [00:34<01:11,  4.00s/it]epoch 2 loss 1.67315:  39%|███▉      | 11/28 [00:34<00:49,  2.91s/it]epoch 2 loss 1.66815:  39%|███▉      | 11/28 [00:35<00:49,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.607[0m
[32m  eval_f1 = 0.2437[0m
[32m  eval_mcc = 0.5846[0m
[32m  eval_precision = 0.3255[0m
[32m  eval_recall = 0.2289[0m
[32m  ********************[0m
[32m  Best f1:0.2437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5846[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.66815:  43%|████▎     | 12/28 [00:41<01:04,  4.01s/it]epoch 2 loss 1.6687:  43%|████▎     | 12/28 [00:41<01:04,  4.01s/it] epoch 2 loss 1.6687:  46%|████▋     | 13/28 [00:41<00:43,  2.92s/it]epoch 2 loss 1.66076:  46%|████▋     | 13/28 [00:42<00:43,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6069[0m
[32m  eval_f1 = 0.2448[0m
[32m  eval_mcc = 0.5859[0m
[32m  eval_precision = 0.3242[0m
[32m  eval_recall = 0.2298[0m
[32m  ********************[0m
[32m  Best f1:0.2448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5859[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.66076:  50%|█████     | 14/28 [00:47<00:53,  3.80s/it]epoch 2 loss 1.67013:  50%|█████     | 14/28 [00:48<00:53,  3.80s/it]epoch 2 loss 1.67013:  54%|█████▎    | 15/28 [00:48<00:36,  2.78s/it]epoch 2 loss 1.66351:  54%|█████▎    | 15/28 [00:48<00:36,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6109[0m
[32m  eval_f1 = 0.2476[0m
[32m  eval_mcc = 0.5901[0m
[32m  eval_precision = 0.3363[0m
[32m  eval_recall = 0.2321[0m
[32m  ********************[0m
[32m  Best f1:0.2476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5901[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.66351:  57%|█████▋    | 16/28 [00:54<00:47,  3.93s/it]epoch 2 loss 1.65636:  57%|█████▋    | 16/28 [00:55<00:47,  3.93s/it]epoch 2 loss 1.65636:  61%|██████    | 17/28 [00:55<00:31,  2.87s/it]epoch 2 loss 1.65331:  61%|██████    | 17/28 [00:55<00:31,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6149[0m
[32m  eval_f1 = 0.2536[0m
[32m  eval_mcc = 0.5935[0m
[32m  eval_precision = 0.3436[0m
[32m  eval_recall = 0.2374[0m
[32m  ********************[0m
[32m  Best f1:0.2536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.65331:  64%|██████▍   | 18/28 [01:02<00:42,  4.21s/it]epoch 2 loss 1.65133:  64%|██████▍   | 18/28 [01:02<00:42,  4.21s/it]epoch 2 loss 1.65133:  68%|██████▊   | 19/28 [01:02<00:27,  3.07s/it]epoch 2 loss 1.64807:  68%|██████▊   | 19/28 [01:03<00:27,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6169[0m
[32m  eval_f1 = 0.2577[0m
[32m  eval_mcc = 0.5946[0m
[32m  eval_precision = 0.3429[0m
[32m  eval_recall = 0.2419[0m
[32m  ********************[0m
[32m  Best f1:0.2577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64807:  71%|███████▏  | 20/28 [01:09<00:32,  4.10s/it]epoch 2 loss 1.64423:  71%|███████▏  | 20/28 [01:09<00:32,  4.10s/it]epoch 2 loss 1.64423:  75%|███████▌  | 21/28 [01:09<00:20,  2.99s/it]epoch 2 loss 1.63994:  75%|███████▌  | 21/28 [01:10<00:20,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6178[0m
[32m  eval_f1 = 0.2608[0m
[32m  eval_mcc = 0.5953[0m
[32m  eval_precision = 0.3476[0m
[32m  eval_recall = 0.2456[0m
[32m  ********************[0m
[32m  Best f1:0.2608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63994:  79%|███████▊  | 22/28 [01:19<00:29,  4.96s/it]epoch 2 loss 1.63264:  79%|███████▊  | 22/28 [01:19<00:29,  4.96s/it]epoch 2 loss 1.63264:  82%|████████▏ | 23/28 [01:19<00:18,  3.60s/it]epoch 2 loss 1.62842:  82%|████████▏ | 23/28 [01:20<00:18,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6194[0m
[32m  eval_f1 = 0.2605[0m
[32m  eval_mcc = 0.5975[0m
[32m  eval_precision = 0.3394[0m
[32m  eval_recall = 0.2455[0m
[32m  ********************[0m
[32m  Best MCC:0.5975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62842:  86%|████████▌ | 24/28 [01:24<00:16,  4.06s/it]epoch 2 loss 1.62149:  86%|████████▌ | 24/28 [01:25<00:16,  4.06s/it]epoch 2 loss 1.62149:  89%|████████▉ | 25/28 [01:25<00:08,  2.97s/it]epoch 2 loss 1.6199:  89%|████████▉ | 25/28 [01:25<00:08,  2.97s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6217[0m
[32m  eval_f1 = 0.2621[0m
[32m  eval_mcc = 0.601[0m
[32m  eval_precision = 0.3385[0m
[32m  eval_recall = 0.2466[0m
[32m  ********************[0m
[32m  Best f1:0.2621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.6199:  93%|█████████▎| 26/28 [01:36<00:11,  5.54s/it]epoch 2 loss 1.62174:  93%|█████████▎| 26/28 [01:37<00:11,  5.54s/it]epoch 2 loss 1.62174:  96%|█████████▋| 27/28 [01:37<00:04,  4.00s/it]epoch 2 loss 1.61491:  96%|█████████▋| 27/28 [01:37<00:04,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6227[0m
[32m  eval_f1 = 0.2639[0m
[32m  eval_mcc = 0.6036[0m
[32m  eval_precision = 0.3496[0m
[32m  eval_recall = 0.2471[0m
[32m  ********************[0m
[32m  Best f1:0.2639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61491: 100%|██████████| 28/28 [01:46<00:00,  5.45s/it]epoch 2 loss 1.61491: 100%|██████████| 28/28 [01:46<00:00,  3.79s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.41749:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.41749:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 3 loss 1.41915:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6238[0m
[32m  eval_f1 = 0.265[0m
[32m  eval_mcc = 0.6051[0m
[32m  eval_precision = 0.3482[0m
[32m  eval_recall = 0.2471[0m
[32m  ********************[0m
[32m  Best f1:0.265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6051[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41915:   7%|▋         | 2/28 [00:13<03:29,  8.08s/it]epoch 3 loss 1.45459:   7%|▋         | 2/28 [00:14<03:29,  8.08s/it]epoch 3 loss 1.45459:  11%|█         | 3/28 [00:14<01:54,  4.58s/it]epoch 3 loss 1.48871:  11%|█         | 3/28 [00:14<01:54,  4.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6256[0m
[32m  eval_f1 = 0.2656[0m
[32m  eval_mcc = 0.6059[0m
[32m  eval_precision = 0.3464[0m
[32m  eval_recall = 0.2479[0m
[32m  ********************[0m
[32m  Best f1:0.2656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48871:  14%|█▍        | 4/28 [00:23<02:30,  6.27s/it]epoch 3 loss 1.51452:  14%|█▍        | 4/28 [00:23<02:30,  6.27s/it]epoch 3 loss 1.51452:  18%|█▊        | 5/28 [00:23<01:35,  4.16s/it]epoch 3 loss 1.53721:  18%|█▊        | 5/28 [00:23<01:35,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.628[0m
[32m  eval_f1 = 0.2677[0m
[32m  eval_mcc = 0.6069[0m
[32m  eval_precision = 0.3497[0m
[32m  eval_recall = 0.2508[0m
[32m  ********************[0m
[32m  Best f1:0.2677[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.53721:  21%|██▏       | 6/28 [00:32<02:09,  5.88s/it]epoch 3 loss 1.53328:  21%|██▏       | 6/28 [00:33<02:09,  5.88s/it]epoch 3 loss 1.53328:  25%|██▌       | 7/28 [00:33<01:26,  4.10s/it]epoch 3 loss 1.52985:  25%|██▌       | 7/28 [00:33<01:26,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6282[0m
[32m  eval_f1 = 0.2687[0m
[32m  eval_mcc = 0.6062[0m
[32m  eval_precision = 0.345[0m
[32m  eval_recall = 0.2526[0m
[32m  ********************[0m
[32m  Best f1:0.2687[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.52985:  29%|██▊       | 8/28 [00:38<01:27,  4.40s/it]epoch 3 loss 1.52968:  29%|██▊       | 8/28 [00:38<01:27,  4.40s/it]epoch 3 loss 1.52968:  32%|███▏      | 9/28 [00:38<00:59,  3.15s/it]epoch 3 loss 1.53526:  32%|███▏      | 9/28 [00:39<00:59,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.67it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6285[0m
[32m  eval_f1 = 0.27[0m
[32m  eval_mcc = 0.6066[0m
[32m  eval_precision = 0.3452[0m
[32m  eval_recall = 0.2536[0m
[32m  ********************[0m
[32m  Best f1:0.27[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.53526:  36%|███▌      | 10/28 [00:46<01:25,  4.75s/it]epoch 3 loss 1.53167:  36%|███▌      | 10/28 [00:47<01:25,  4.75s/it]epoch 3 loss 1.53167:  39%|███▉      | 11/28 [00:47<00:58,  3.43s/it]epoch 3 loss 1.53284:  39%|███▉      | 11/28 [00:47<00:58,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6301[0m
[32m  eval_f1 = 0.2716[0m
[32m  eval_mcc = 0.6086[0m
[32m  eval_precision = 0.3471[0m
[32m  eval_recall = 0.2549[0m
[32m  ********************[0m
[32m  Best f1:0.2716[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.53284:  43%|████▎     | 12/28 [00:56<01:19,  5.00s/it]epoch 3 loss 1.52236:  43%|████▎     | 12/28 [00:56<01:19,  5.00s/it]epoch 3 loss 1.52236:  46%|████▋     | 13/28 [00:56<00:54,  3.62s/it]epoch 3 loss 1.51122:  46%|████▋     | 13/28 [00:56<00:54,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6302[0m
[32m  eval_f1 = 0.2727[0m
[32m  eval_mcc = 0.6089[0m
[32m  eval_precision = 0.3495[0m
[32m  eval_recall = 0.2557[0m
[32m  ********************[0m
[32m  Best f1:0.2727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.51122:  50%|█████     | 14/28 [01:03<01:06,  4.76s/it]epoch 3 loss 1.51787:  50%|█████     | 14/28 [01:04<01:06,  4.76s/it]epoch 3 loss 1.51787:  54%|█████▎    | 15/28 [01:04<00:44,  3.45s/it]epoch 3 loss 1.51653:  54%|█████▎    | 15/28 [01:04<00:44,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6294[0m
[32m  eval_f1 = 0.2729[0m
[32m  eval_mcc = 0.6082[0m
[32m  eval_precision = 0.3481[0m
[32m  eval_recall = 0.2558[0m
[32m  ********************[0m
[32m  Best f1:0.2729[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.51653:  57%|█████▋    | 16/28 [01:09<00:47,  3.95s/it]epoch 3 loss 1.51817:  57%|█████▋    | 16/28 [01:09<00:47,  3.95s/it]epoch 3 loss 1.51817:  61%|██████    | 17/28 [01:09<00:31,  2.89s/it]epoch 3 loss 1.50926:  61%|██████    | 17/28 [01:10<00:31,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6275[0m
[32m  eval_f1 = 0.2721[0m
[32m  eval_mcc = 0.6063[0m
[32m  eval_precision = 0.3499[0m
[32m  eval_recall = 0.255[0m

epoch 3 loss 1.50926:  64%|██████▍   | 18/28 [01:13<00:31,  3.16s/it]epoch 3 loss 1.51188:  64%|██████▍   | 18/28 [01:13<00:31,  3.16s/it]epoch 3 loss 1.51188:  68%|██████▊   | 19/28 [01:13<00:20,  2.33s/it]epoch 3 loss 1.51329:  68%|██████▊   | 19/28 [01:14<00:20,  2.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6292[0m
[32m  eval_f1 = 0.2734[0m
[32m  eval_mcc = 0.6083[0m
[32m  eval_precision = 0.3531[0m
[32m  eval_recall = 0.2557[0m
[32m  ********************[0m
[32m  Best f1:0.2734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.51329:  71%|███████▏  | 20/28 [01:19<00:25,  3.17s/it]epoch 3 loss 1.50767:  71%|███████▏  | 20/28 [01:19<00:25,  3.17s/it]epoch 3 loss 1.50767:  75%|███████▌  | 21/28 [01:19<00:16,  2.34s/it]epoch 3 loss 1.5105:  75%|███████▌  | 21/28 [01:19<00:16,  2.34s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6315[0m
[32m  eval_f1 = 0.2744[0m
[32m  eval_mcc = 0.6106[0m
[32m  eval_precision = 0.3526[0m
[32m  eval_recall = 0.2566[0m
[32m  ********************[0m
[32m  Best f1:0.2744[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.5105:  79%|███████▊  | 22/28 [01:26<00:22,  3.73s/it]epoch 3 loss 1.50688:  79%|███████▊  | 22/28 [01:26<00:22,  3.73s/it]epoch 3 loss 1.50688:  82%|████████▏ | 23/28 [01:26<00:13,  2.74s/it]epoch 3 loss 1.50766:  82%|████████▏ | 23/28 [01:27<00:13,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6338[0m
[32m  eval_f1 = 0.2775[0m
[32m  eval_mcc = 0.6129[0m
[32m  eval_precision = 0.3611[0m
[32m  eval_recall = 0.259[0m
[32m  ********************[0m
[32m  Best f1:0.2775[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50766:  86%|████████▌ | 24/28 [01:36<00:18,  4.69s/it]epoch 3 loss 1.50416:  86%|████████▌ | 24/28 [01:36<00:18,  4.69s/it]epoch 3 loss 1.50416:  89%|████████▉ | 25/28 [01:36<00:10,  3.41s/it]epoch 3 loss 1.50096:  89%|████████▉ | 25/28 [01:36<00:10,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6355[0m
[32m  eval_f1 = 0.2819[0m
[32m  eval_mcc = 0.6148[0m
[32m  eval_precision = 0.3719[0m
[32m  eval_recall = 0.2617[0m
[32m  ********************[0m
[32m  Best f1:0.2819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50096:  93%|█████████▎| 26/28 [01:44<00:09,  4.78s/it]epoch 3 loss 1.50102:  93%|█████████▎| 26/28 [01:44<00:09,  4.78s/it]epoch 3 loss 1.50102:  96%|█████████▋| 27/28 [01:44<00:03,  3.47s/it]epoch 3 loss 1.50104:  96%|█████████▋| 27/28 [01:45<00:03,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6361[0m
[32m  eval_f1 = 0.2831[0m
[32m  eval_mcc = 0.6154[0m
[32m  eval_precision = 0.3725[0m
[32m  eval_recall = 0.2628[0m
[32m  ********************[0m
[32m  Best f1:0.2831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50104: 100%|██████████| 28/28 [01:53<00:00,  4.92s/it]epoch 3 loss 1.50104: 100%|██████████| 28/28 [01:53<00:00,  4.04s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.42982:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.42982:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 4 loss 1.42189:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6363[0m
[32m  eval_f1 = 0.2854[0m
[32m  eval_mcc = 0.6157[0m
[32m  eval_precision = 0.3708[0m
[32m  eval_recall = 0.2648[0m
[32m  ********************[0m
[32m  Best f1:0.2854[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42189:   7%|▋         | 2/28 [00:08<02:05,  4.85s/it]epoch 4 loss 1.40213:   7%|▋         | 2/28 [00:08<02:05,  4.85s/it]epoch 4 loss 1.40213:  11%|█         | 3/28 [00:08<01:10,  2.82s/it]epoch 4 loss 1.43048:  11%|█         | 3/28 [00:09<01:10,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.636[0m
[32m  eval_f1 = 0.2907[0m
[32m  eval_mcc = 0.6158[0m
[32m  eval_precision = 0.3799[0m
[32m  eval_recall = 0.2682[0m
[32m  ********************[0m
[32m  Best f1:0.2907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.43048:  14%|█▍        | 4/28 [00:17<02:02,  5.10s/it]epoch 4 loss 1.39596:  14%|█▍        | 4/28 [00:17<02:02,  5.10s/it]epoch 4 loss 1.39596:  18%|█▊        | 5/28 [00:17<01:18,  3.42s/it]epoch 4 loss 1.41418:  18%|█▊        | 5/28 [00:18<01:18,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6352[0m
[32m  eval_f1 = 0.29[0m
[32m  eval_mcc = 0.6154[0m
[32m  eval_precision = 0.3778[0m
[32m  eval_recall = 0.2672[0m

epoch 4 loss 1.41418:  21%|██▏       | 6/28 [00:21<01:17,  3.54s/it]epoch 4 loss 1.42136:  21%|██▏       | 6/28 [00:22<01:17,  3.54s/it]epoch 4 loss 1.42136:  25%|██▌       | 7/28 [00:22<00:52,  2.52s/it]epoch 4 loss 1.42119:  25%|██▌       | 7/28 [00:22<00:52,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6355[0m
[32m  eval_f1 = 0.2906[0m
[32m  eval_mcc = 0.6159[0m
[32m  eval_precision = 0.3775[0m
[32m  eval_recall = 0.268[0m
[32m  ********************[0m
[32m  Best MCC:0.6159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42119:  29%|██▊       | 8/28 [00:27<01:07,  3.35s/it]epoch 4 loss 1.41805:  29%|██▊       | 8/28 [00:27<01:07,  3.35s/it]epoch 4 loss 1.41805:  32%|███▏      | 9/28 [00:27<00:46,  2.43s/it]epoch 4 loss 1.41326:  32%|███▏      | 9/28 [00:27<00:46,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.635[0m
[32m  eval_f1 = 0.2906[0m
[32m  eval_mcc = 0.6153[0m
[32m  eval_precision = 0.3767[0m
[32m  eval_recall = 0.2682[0m

epoch 4 loss 1.41326:  36%|███▌      | 10/28 [00:32<00:59,  3.33s/it]epoch 4 loss 1.4159:  36%|███▌      | 10/28 [00:33<00:59,  3.33s/it] epoch 4 loss 1.4159:  39%|███▉      | 11/28 [00:33<00:41,  2.44s/it]epoch 4 loss 1.42907:  39%|███▉      | 11/28 [00:33<00:41,  2.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6357[0m
[32m  eval_f1 = 0.2911[0m
[32m  eval_mcc = 0.6158[0m
[32m  eval_precision = 0.3763[0m
[32m  eval_recall = 0.2689[0m
[32m  ********************[0m
[32m  Best f1:0.2911[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.42907:  43%|████▎     | 12/28 [00:38<00:52,  3.25s/it]epoch 4 loss 1.4321:  43%|████▎     | 12/28 [00:38<00:52,  3.25s/it] epoch 4 loss 1.4321:  46%|████▋     | 13/28 [00:38<00:35,  2.39s/it]epoch 4 loss 1.43447:  46%|████▋     | 13/28 [00:39<00:35,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6358[0m
[32m  eval_f1 = 0.2914[0m
[32m  eval_mcc = 0.6155[0m
[32m  eval_precision = 0.3751[0m
[32m  eval_recall = 0.2696[0m
[32m  ********************[0m
[32m  Best f1:0.2914[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.43447:  50%|█████     | 14/28 [00:43<00:44,  3.15s/it]epoch 4 loss 1.43809:  50%|█████     | 14/28 [00:44<00:44,  3.15s/it]epoch 4 loss 1.43809:  54%|█████▎    | 15/28 [00:44<00:30,  2.32s/it]epoch 4 loss 1.44029:  54%|█████▎    | 15/28 [00:44<00:30,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6364[0m
[32m  eval_f1 = 0.2919[0m
[32m  eval_mcc = 0.6159[0m
[32m  eval_precision = 0.3752[0m
[32m  eval_recall = 0.2703[0m
[32m  ********************[0m
[32m  Best f1:0.2919[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.44029:  57%|█████▋    | 16/28 [00:51<00:47,  3.98s/it]epoch 4 loss 1.44306:  57%|█████▋    | 16/28 [00:52<00:47,  3.98s/it]epoch 4 loss 1.44306:  61%|██████    | 17/28 [00:52<00:32,  2.91s/it]epoch 4 loss 1.45592:  61%|██████    | 17/28 [00:52<00:32,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6365[0m
[32m  eval_f1 = 0.292[0m
[32m  eval_mcc = 0.6158[0m
[32m  eval_precision = 0.3742[0m
[32m  eval_recall = 0.2709[0m
[32m  ********************[0m
[32m  Best f1:0.292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.45592:  64%|██████▍   | 18/28 [00:57<00:35,  3.55s/it]epoch 4 loss 1.45432:  64%|██████▍   | 18/28 [00:57<00:35,  3.55s/it]epoch 4 loss 1.45432:  68%|██████▊   | 19/28 [00:57<00:23,  2.61s/it]epoch 4 loss 1.45461:  68%|██████▊   | 19/28 [00:58<00:23,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.637[0m
[32m  eval_f1 = 0.2929[0m
[32m  eval_mcc = 0.6161[0m
[32m  eval_precision = 0.3738[0m
[32m  eval_recall = 0.272[0m
[32m  ********************[0m
[32m  Best f1:0.2929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45461:  71%|███████▏  | 20/28 [01:04<00:30,  3.79s/it]epoch 4 loss 1.44991:  71%|███████▏  | 20/28 [01:04<00:30,  3.79s/it]epoch 4 loss 1.44991:  75%|███████▌  | 21/28 [01:04<00:19,  2.78s/it]epoch 4 loss 1.45561:  75%|███████▌  | 21/28 [01:05<00:19,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.2934[0m
[32m  eval_mcc = 0.6164[0m
[32m  eval_precision = 0.3738[0m
[32m  eval_recall = 0.2726[0m
[32m  ********************[0m
[32m  Best f1:0.2934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45561:  79%|███████▊  | 22/28 [01:11<00:23,  3.88s/it]epoch 4 loss 1.45445:  79%|███████▊  | 22/28 [01:11<00:23,  3.88s/it]epoch 4 loss 1.45445:  82%|████████▏ | 23/28 [01:11<00:14,  2.85s/it]epoch 4 loss 1.45329:  82%|████████▏ | 23/28 [01:12<00:14,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6379[0m
[32m  eval_f1 = 0.2936[0m
[32m  eval_mcc = 0.6168[0m
[32m  eval_precision = 0.373[0m
[32m  eval_recall = 0.2731[0m
[32m  ********************[0m
[32m  Best f1:0.2936[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45329:  86%|████████▌ | 24/28 [01:17<00:14,  3.68s/it]epoch 4 loss 1.45422:  86%|████████▌ | 24/28 [01:17<00:14,  3.68s/it]epoch 4 loss 1.45422:  89%|████████▉ | 25/28 [01:17<00:08,  2.70s/it]epoch 4 loss 1.45275:  89%|████████▉ | 25/28 [01:18<00:08,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.638[0m
[32m  eval_f1 = 0.2941[0m
[32m  eval_mcc = 0.617[0m
[32m  eval_precision = 0.373[0m
[32m  eval_recall = 0.2737[0m
[32m  ********************[0m
[32m  Best f1:0.2941[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45275:  93%|█████████▎| 26/28 [01:23<00:07,  3.51s/it]epoch 4 loss 1.45673:  93%|█████████▎| 26/28 [01:23<00:07,  3.51s/it]epoch 4 loss 1.45673:  96%|█████████▋| 27/28 [01:23<00:02,  2.58s/it]epoch 4 loss 1.45318:  96%|█████████▋| 27/28 [01:23<00:02,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6381[0m
[32m  eval_f1 = 0.2942[0m
[32m  eval_mcc = 0.617[0m
[32m  eval_precision = 0.3732[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best f1:0.2942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45318: 100%|██████████| 28/28 [01:29<00:00,  3.66s/it]epoch 4 loss 1.45318: 100%|██████████| 28/28 [01:29<00:00,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.59it/s] 20%|██        | 2/10 [00:00<00:03,  2.66it/s] 30%|███       | 3/10 [00:01<00:02,  2.70it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6381[0m
[32m  eval_f1 = 0.2942[0m
[32m  eval_mcc = 0.617[0m
[32m  eval_precision = 0.3732[0m
[32m  eval_recall = 0.2738[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.78it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6211[0m
[32m  eval_f1 = 0.2338[0m
[32m  eval_mcc = 0.6004[0m
[32m  eval_precision = 0.2985[0m
[32m  eval_recall = 0.2199[0m

