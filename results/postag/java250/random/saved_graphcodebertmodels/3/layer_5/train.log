[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=5, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5', posratio=0.5, seed=892, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.71542:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.71542:   4%|▎         | 1/28 [00:00<00:21,  1.26it/s]epoch 0 loss 5.71374:   4%|▎         | 1/28 [00:01<00:21,  1.26it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0027[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = 0.0011[0m
[32m  eval_precision = 0.009[0m
[32m  eval_recall = 0.0043[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.71374:   7%|▋         | 2/28 [00:06<01:31,  3.54s/it]epoch 0 loss 5.70464:   7%|▋         | 2/28 [00:06<01:31,  3.54s/it]epoch 0 loss 5.70464:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 0 loss 5.69237:  11%|█         | 3/28 [00:07<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0078[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = 0.0055[0m
[32m  eval_precision = 0.0095[0m
[32m  eval_recall = 0.005[0m
[32m  ********************[0m
[32m  Best f1:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.69237:  14%|█▍        | 4/28 [00:12<01:24,  3.52s/it]epoch 0 loss 5.66202:  14%|█▍        | 4/28 [00:12<01:24,  3.52s/it]epoch 0 loss 5.66202:  18%|█▊        | 5/28 [00:12<00:55,  2.40s/it]epoch 0 loss 5.63093:  18%|█▊        | 5/28 [00:13<00:55,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0202[0m
[32m  eval_f1 = 0.0039[0m
[32m  eval_mcc = 0.0143[0m
[32m  eval_precision = 0.0097[0m
[32m  eval_recall = 0.0063[0m
[32m  ********************[0m
[32m  Best f1:0.0039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.63093:  21%|██▏       | 6/28 [00:18<01:17,  3.52s/it]epoch 0 loss 5.59289:  21%|██▏       | 6/28 [00:18<01:17,  3.52s/it]epoch 0 loss 5.59289:  25%|██▌       | 7/28 [00:18<00:52,  2.50s/it]epoch 0 loss 5.55008:  25%|██▌       | 7/28 [00:19<00:52,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0498[0m
[32m  eval_f1 = 0.0099[0m
[32m  eval_mcc = 0.0332[0m
[32m  eval_precision = 0.0222[0m
[32m  eval_recall = 0.0121[0m
[32m  ********************[0m
[32m  Best f1:0.0099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.55008:  29%|██▊       | 8/28 [00:24<01:10,  3.52s/it]epoch 0 loss 5.4977:  29%|██▊       | 8/28 [00:24<01:10,  3.52s/it] epoch 0 loss 5.4977:  32%|███▏      | 9/28 [00:24<00:48,  2.55s/it]epoch 0 loss 5.44029:  32%|███▏      | 9/28 [00:25<00:48,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0934[0m
[32m  eval_f1 = 0.0195[0m
[32m  eval_mcc = 0.066[0m
[32m  eval_precision = 0.0278[0m
[32m  eval_recall = 0.024[0m
[32m  ********************[0m
[32m  Best f1:0.0195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.44029:  36%|███▌      | 10/28 [00:30<01:03,  3.52s/it]epoch 0 loss 5.37662:  36%|███▌      | 10/28 [00:31<01:03,  3.52s/it]epoch 0 loss 5.37662:  39%|███▉      | 11/28 [00:31<00:43,  2.57s/it]epoch 0 loss 5.31151:  39%|███▉      | 11/28 [00:31<00:43,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1289[0m
[32m  eval_f1 = 0.027[0m
[32m  eval_mcc = 0.0983[0m
[32m  eval_precision = 0.0382[0m
[32m  eval_recall = 0.036[0m
[32m  ********************[0m
[32m  Best f1:0.027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.31151:  43%|████▎     | 12/28 [00:36<00:55,  3.49s/it]epoch 0 loss 5.24036:  43%|████▎     | 12/28 [00:37<00:55,  3.49s/it]epoch 0 loss 5.24036:  46%|████▋     | 13/28 [00:37<00:38,  2.56s/it]epoch 0 loss 5.16388:  46%|████▋     | 13/28 [00:37<00:38,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1636[0m
[32m  eval_f1 = 0.0328[0m
[32m  eval_mcc = 0.1301[0m
[32m  eval_precision = 0.0441[0m
[32m  eval_recall = 0.0437[0m
[32m  ********************[0m
[32m  Best f1:0.0328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.16388:  50%|█████     | 14/28 [00:42<00:48,  3.45s/it]epoch 0 loss 5.08649:  50%|█████     | 14/28 [00:43<00:48,  3.45s/it]epoch 0 loss 5.08649:  54%|█████▎    | 15/28 [00:43<00:32,  2.53s/it]epoch 0 loss 5.00652:  54%|█████▎    | 15/28 [00:43<00:32,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.193[0m
[32m  eval_f1 = 0.0391[0m
[32m  eval_mcc = 0.1551[0m
[32m  eval_precision = 0.0544[0m
[32m  eval_recall = 0.0477[0m
[32m  ********************[0m
[32m  Best f1:0.0391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.00652:  57%|█████▋    | 16/28 [00:48<00:41,  3.47s/it]epoch 0 loss 4.9253:  57%|█████▋    | 16/28 [00:49<00:41,  3.47s/it] epoch 0 loss 4.9253:  61%|██████    | 17/28 [00:49<00:28,  2.56s/it]epoch 0 loss 4.84577:  61%|██████    | 17/28 [00:49<00:28,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2401[0m
[32m  eval_f1 = 0.047[0m
[32m  eval_mcc = 0.1996[0m
[32m  eval_precision = 0.07[0m
[32m  eval_recall = 0.0521[0m
[32m  ********************[0m
[32m  Best f1:0.047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.84577:  64%|██████▍   | 18/28 [00:58<00:47,  4.72s/it]epoch 0 loss 4.77193:  64%|██████▍   | 18/28 [00:59<00:47,  4.72s/it]epoch 0 loss 4.77193:  68%|██████▊   | 19/28 [00:59<00:30,  3.43s/it]epoch 0 loss 4.69378:  68%|██████▊   | 19/28 [00:59<00:30,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2917[0m
[32m  eval_f1 = 0.0527[0m
[32m  eval_mcc = 0.2499[0m
[32m  eval_precision = 0.0783[0m
[32m  eval_recall = 0.0561[0m
[32m  ********************[0m
[32m  Best f1:0.0527[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2499[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.69378:  71%|███████▏  | 20/28 [01:07<00:37,  4.75s/it]epoch 0 loss 4.61975:  71%|███████▏  | 20/28 [01:07<00:37,  4.75s/it]epoch 0 loss 4.61975:  75%|███████▌  | 21/28 [01:07<00:24,  3.45s/it]epoch 0 loss 4.54229:  75%|███████▌  | 21/28 [01:07<00:24,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3473[0m
[32m  eval_f1 = 0.0557[0m
[32m  eval_mcc = 0.3049[0m
[32m  eval_precision = 0.0892[0m
[32m  eval_recall = 0.0584[0m
[32m  ********************[0m
[32m  Best f1:0.0557[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.54229:  79%|███████▊  | 22/28 [01:16<00:31,  5.17s/it]epoch 0 loss 4.46918:  79%|███████▊  | 22/28 [01:17<00:31,  5.17s/it]epoch 0 loss 4.46918:  82%|████████▏ | 23/28 [01:17<00:18,  3.75s/it]epoch 0 loss 4.40318:  82%|████████▏ | 23/28 [01:17<00:18,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3981[0m
[32m  eval_f1 = 0.0758[0m
[32m  eval_mcc = 0.3582[0m
[32m  eval_precision = 0.1178[0m
[32m  eval_recall = 0.075[0m
[32m  ********************[0m
[32m  Best f1:0.0758[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.40318:  86%|████████▌ | 24/28 [01:22<00:17,  4.32s/it]epoch 0 loss 4.34668:  86%|████████▌ | 24/28 [01:23<00:17,  4.32s/it]epoch 0 loss 4.34668:  89%|████████▉ | 25/28 [01:23<00:09,  3.15s/it]epoch 0 loss 4.28246:  89%|████████▉ | 25/28 [01:23<00:09,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4107[0m
[32m  eval_f1 = 0.0876[0m
[32m  eval_mcc = 0.3733[0m
[32m  eval_precision = 0.1407[0m
[32m  eval_recall = 0.0836[0m
[32m  ********************[0m
[32m  Best f1:0.0876[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3733[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.28246:  93%|█████████▎| 26/28 [01:28<00:07,  3.90s/it]epoch 0 loss 4.21946:  93%|█████████▎| 26/28 [01:29<00:07,  3.90s/it]epoch 0 loss 4.21946:  96%|█████████▋| 27/28 [01:29<00:02,  2.86s/it]epoch 0 loss 4.15846:  96%|█████████▋| 27/28 [01:29<00:02,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4267[0m
[32m  eval_f1 = 0.1073[0m
[32m  eval_mcc = 0.3959[0m
[32m  eval_precision = 0.1588[0m
[32m  eval_recall = 0.0988[0m
[32m  ********************[0m
[32m  Best f1:0.1073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.15846: 100%|██████████| 28/28 [01:34<00:00,  3.64s/it]epoch 0 loss 4.15846: 100%|██████████| 28/28 [01:34<00:00,  3.38s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.32598:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.32598:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.36942:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4636[0m
[32m  eval_f1 = 0.1256[0m
[32m  eval_mcc = 0.4374[0m
[32m  eval_precision = 0.1823[0m
[32m  eval_recall = 0.1175[0m
[32m  ********************[0m
[32m  Best f1:0.1256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.36942:   7%|▋         | 2/28 [00:06<01:31,  3.54s/it]epoch 1 loss 2.34539:   7%|▋         | 2/28 [00:06<01:31,  3.54s/it]epoch 1 loss 2.34539:  11%|█         | 3/28 [00:06<00:52,  2.12s/it]epoch 1 loss 2.3163:  11%|█         | 3/28 [00:06<00:52,  2.12s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5024[0m
[32m  eval_f1 = 0.1485[0m
[32m  eval_mcc = 0.4755[0m
[32m  eval_precision = 0.2143[0m
[32m  eval_recall = 0.1401[0m
[32m  ********************[0m
[32m  Best f1:0.1485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4755[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.3163:  14%|█▍        | 4/28 [00:13<01:32,  3.86s/it]epoch 1 loss 2.25134:  14%|█▍        | 4/28 [00:13<01:32,  3.86s/it]epoch 1 loss 2.25134:  18%|█▊        | 5/28 [00:13<01:00,  2.62s/it]epoch 1 loss 2.23435:  18%|█▊        | 5/28 [00:13<01:00,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5483[0m
[32m  eval_f1 = 0.1702[0m
[32m  eval_mcc = 0.5212[0m
[32m  eval_precision = 0.2139[0m
[32m  eval_recall = 0.1641[0m
[32m  ********************[0m
[32m  Best f1:0.1702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23435:  21%|██▏       | 6/28 [00:21<01:41,  4.59s/it]epoch 1 loss 2.212:  21%|██▏       | 6/28 [00:22<01:41,  4.59s/it]  epoch 1 loss 2.212:  25%|██▌       | 7/28 [00:22<01:07,  3.23s/it]epoch 1 loss 2.19653:  25%|██▌       | 7/28 [00:22<01:07,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5654[0m
[32m  eval_f1 = 0.185[0m
[32m  eval_mcc = 0.5408[0m
[32m  eval_precision = 0.2402[0m
[32m  eval_recall = 0.1774[0m
[32m  ********************[0m
[32m  Best f1:0.185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.19653:  29%|██▊       | 8/28 [00:32<01:46,  5.32s/it]epoch 1 loss 2.16695:  29%|██▊       | 8/28 [00:32<01:46,  5.32s/it]epoch 1 loss 2.16695:  32%|███▏      | 9/28 [00:32<01:12,  3.79s/it]epoch 1 loss 2.16274:  32%|███▏      | 9/28 [00:32<01:12,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5784[0m
[32m  eval_f1 = 0.1909[0m
[32m  eval_mcc = 0.5563[0m
[32m  eval_precision = 0.2561[0m
[32m  eval_recall = 0.1814[0m
[32m  ********************[0m
[32m  Best f1:0.1909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16274:  36%|███▌      | 10/28 [00:38<01:17,  4.29s/it]epoch 1 loss 2.14746:  36%|███▌      | 10/28 [00:38<01:17,  4.29s/it]epoch 1 loss 2.14746:  39%|███▉      | 11/28 [00:38<00:52,  3.10s/it]epoch 1 loss 2.1152:  39%|███▉      | 11/28 [00:38<00:52,  3.10s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.588[0m
[32m  eval_f1 = 0.2[0m
[32m  eval_mcc = 0.5667[0m
[32m  eval_precision = 0.2736[0m
[32m  eval_recall = 0.1871[0m
[32m  ********************[0m
[32m  Best f1:0.2[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1152:  43%|████▎     | 12/28 [00:44<01:02,  3.88s/it]epoch 1 loss 2.07532:  43%|████▎     | 12/28 [00:44<01:02,  3.88s/it]epoch 1 loss 2.07532:  46%|████▋     | 13/28 [00:44<00:42,  2.83s/it]epoch 1 loss 2.04603:  46%|████▋     | 13/28 [00:44<00:42,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5915[0m
[32m  eval_f1 = 0.2156[0m
[32m  eval_mcc = 0.5702[0m
[32m  eval_precision = 0.2927[0m
[32m  eval_recall = 0.2004[0m
[32m  ********************[0m
[32m  Best f1:0.2156[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04603:  50%|█████     | 14/28 [00:50<00:51,  3.69s/it]epoch 1 loss 2.02599:  50%|█████     | 14/28 [00:50<00:51,  3.69s/it]epoch 1 loss 2.02599:  54%|█████▎    | 15/28 [00:50<00:35,  2.70s/it]epoch 1 loss 2.00046:  54%|█████▎    | 15/28 [00:50<00:35,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5943[0m
[32m  eval_f1 = 0.2306[0m
[32m  eval_mcc = 0.5724[0m
[32m  eval_precision = 0.3048[0m
[32m  eval_recall = 0.2137[0m
[32m  ********************[0m
[32m  Best f1:0.2306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00046:  57%|█████▋    | 16/28 [00:57<00:46,  3.84s/it]epoch 1 loss 1.98372:  57%|█████▋    | 16/28 [00:57<00:46,  3.84s/it]epoch 1 loss 1.98372:  61%|██████    | 17/28 [00:57<00:30,  2.82s/it]epoch 1 loss 1.96977:  61%|██████    | 17/28 [00:57<00:30,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5968[0m
[32m  eval_f1 = 0.2353[0m
[32m  eval_mcc = 0.5743[0m
[32m  eval_precision = 0.3041[0m
[32m  eval_recall = 0.2193[0m
[32m  ********************[0m
[32m  Best f1:0.2353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96977:  64%|██████▍   | 18/28 [01:05<00:42,  4.25s/it]epoch 1 loss 1.94889:  64%|██████▍   | 18/28 [01:05<00:42,  4.25s/it]epoch 1 loss 1.94889:  68%|██████▊   | 19/28 [01:05<00:27,  3.10s/it]epoch 1 loss 1.93024:  68%|██████▊   | 19/28 [01:05<00:27,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6057[0m
[32m  eval_f1 = 0.2394[0m
[32m  eval_mcc = 0.5842[0m
[32m  eval_precision = 0.3049[0m
[32m  eval_recall = 0.2244[0m
[32m  ********************[0m
[32m  Best f1:0.2394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5842[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93024:  71%|███████▏  | 20/28 [01:11<00:30,  3.87s/it]epoch 1 loss 1.91723:  71%|███████▏  | 20/28 [01:11<00:30,  3.87s/it]epoch 1 loss 1.91723:  75%|███████▌  | 21/28 [01:11<00:19,  2.84s/it]epoch 1 loss 1.90614:  75%|███████▌  | 21/28 [01:11<00:19,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6114[0m
[32m  eval_f1 = 0.244[0m
[32m  eval_mcc = 0.5903[0m
[32m  eval_precision = 0.308[0m
[32m  eval_recall = 0.2301[0m
[32m  ********************[0m
[32m  Best f1:0.244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90614:  79%|███████▊  | 22/28 [01:17<00:22,  3.69s/it]epoch 1 loss 1.89623:  79%|███████▊  | 22/28 [01:17<00:22,  3.69s/it]epoch 1 loss 1.89623:  82%|████████▏ | 23/28 [01:17<00:13,  2.71s/it]epoch 1 loss 1.87733:  82%|████████▏ | 23/28 [01:18<00:13,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6158[0m
[32m  eval_f1 = 0.2511[0m
[32m  eval_mcc = 0.5951[0m
[32m  eval_precision = 0.3363[0m
[32m  eval_recall = 0.236[0m
[32m  ********************[0m
[32m  Best f1:0.2511[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5951[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87733:  86%|████████▌ | 24/28 [01:23<00:14,  3.60s/it]epoch 1 loss 1.86318:  86%|████████▌ | 24/28 [01:23<00:14,  3.60s/it]epoch 1 loss 1.86318:  89%|████████▉ | 25/28 [01:23<00:07,  2.65s/it]epoch 1 loss 1.85383:  89%|████████▉ | 25/28 [01:24<00:07,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6184[0m
[32m  eval_f1 = 0.2583[0m
[32m  eval_mcc = 0.5976[0m
[32m  eval_precision = 0.3398[0m
[32m  eval_recall = 0.2425[0m
[32m  ********************[0m
[32m  Best f1:0.2583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5976[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.85383:  93%|█████████▎| 26/28 [01:29<00:07,  3.55s/it]epoch 1 loss 1.84143:  93%|█████████▎| 26/28 [01:29<00:07,  3.55s/it]epoch 1 loss 1.84143:  96%|█████████▋| 27/28 [01:29<00:02,  2.61s/it]epoch 1 loss 1.83681:  96%|█████████▋| 27/28 [01:30<00:02,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6197[0m
[32m  eval_f1 = 0.2639[0m
[32m  eval_mcc = 0.5988[0m
[32m  eval_precision = 0.3578[0m
[32m  eval_recall = 0.247[0m
[32m  ********************[0m
[32m  Best f1:0.2639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5988[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83681: 100%|██████████| 28/28 [01:35<00:00,  3.44s/it]epoch 1 loss 1.83681: 100%|██████████| 28/28 [01:35<00:00,  3.40s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.55326:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.55326:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.51195:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6227[0m
[32m  eval_f1 = 0.269[0m
[32m  eval_mcc = 0.6014[0m
[32m  eval_precision = 0.3567[0m
[32m  eval_recall = 0.252[0m
[32m  ********************[0m
[32m  Best f1:0.269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51195:   7%|▋         | 2/28 [00:06<01:31,  3.51s/it]epoch 2 loss 1.5105:   7%|▋         | 2/28 [00:06<01:31,  3.51s/it] epoch 2 loss 1.5105:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 2 loss 1.48251:  11%|█         | 3/28 [00:06<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6245[0m
[32m  eval_f1 = 0.2713[0m
[32m  eval_mcc = 0.6032[0m
[32m  eval_precision = 0.3581[0m
[32m  eval_recall = 0.254[0m
[32m  ********************[0m
[32m  Best f1:0.2713[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48251:  14%|█▍        | 4/28 [00:16<02:01,  5.07s/it]epoch 2 loss 1.50423:  14%|█▍        | 4/28 [00:16<02:01,  5.07s/it]epoch 2 loss 1.50423:  18%|█▊        | 5/28 [00:16<01:18,  3.40s/it]epoch 2 loss 1.52565:  18%|█▊        | 5/28 [00:16<01:18,  3.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.627[0m
[32m  eval_f1 = 0.2748[0m
[32m  eval_mcc = 0.6055[0m
[32m  eval_precision = 0.3601[0m
[32m  eval_recall = 0.2568[0m
[32m  ********************[0m
[32m  Best f1:0.2748[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52565:  21%|██▏       | 6/28 [00:21<01:29,  4.08s/it]epoch 2 loss 1.52391:  21%|██▏       | 6/28 [00:22<01:29,  4.08s/it]epoch 2 loss 1.52391:  25%|██▌       | 7/28 [00:22<01:00,  2.88s/it]epoch 2 loss 1.4899:  25%|██▌       | 7/28 [00:22<01:00,  2.88s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6292[0m
[32m  eval_f1 = 0.2802[0m
[32m  eval_mcc = 0.6079[0m
[32m  eval_precision = 0.3713[0m
[32m  eval_recall = 0.2601[0m
[32m  ********************[0m
[32m  Best f1:0.2802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4899:  29%|██▊       | 8/28 [00:28<01:15,  3.77s/it]epoch 2 loss 1.46485:  29%|██▊       | 8/28 [00:28<01:15,  3.77s/it]epoch 2 loss 1.46485:  32%|███▏      | 9/28 [00:28<00:51,  2.72s/it]epoch 2 loss 1.46092:  32%|███▏      | 9/28 [00:28<00:51,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6326[0m
[32m  eval_f1 = 0.2841[0m
[32m  eval_mcc = 0.6114[0m
[32m  eval_precision = 0.3741[0m
[32m  eval_recall = 0.2625[0m
[32m  ********************[0m
[32m  Best f1:0.2841[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46092:  36%|███▌      | 10/28 [00:34<01:05,  3.63s/it]epoch 2 loss 1.45487:  36%|███▌      | 10/28 [00:34<01:05,  3.63s/it]epoch 2 loss 1.45487:  39%|███▉      | 11/28 [00:34<00:45,  2.65s/it]epoch 2 loss 1.45112:  39%|███▉      | 11/28 [00:34<00:45,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6352[0m
[32m  eval_f1 = 0.2903[0m
[32m  eval_mcc = 0.6147[0m
[32m  eval_precision = 0.3882[0m
[32m  eval_recall = 0.2674[0m
[32m  ********************[0m
[32m  Best f1:0.2903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45112:  43%|████▎     | 12/28 [00:40<00:57,  3.57s/it]epoch 2 loss 1.45193:  43%|████▎     | 12/28 [00:40<00:57,  3.57s/it]epoch 2 loss 1.45193:  46%|████▋     | 13/28 [00:40<00:39,  2.62s/it]epoch 2 loss 1.44465:  46%|████▋     | 13/28 [00:41<00:39,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6354[0m
[32m  eval_f1 = 0.2934[0m
[32m  eval_mcc = 0.6158[0m
[32m  eval_precision = 0.3865[0m
[32m  eval_recall = 0.2699[0m
[32m  ********************[0m
[32m  Best f1:0.2934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44465:  50%|█████     | 14/28 [00:46<00:49,  3.54s/it]epoch 2 loss 1.45496:  50%|█████     | 14/28 [00:46<00:49,  3.54s/it]epoch 2 loss 1.45496:  54%|█████▎    | 15/28 [00:46<00:33,  2.60s/it]epoch 2 loss 1.44976:  54%|█████▎    | 15/28 [00:47<00:33,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6382[0m
[32m  eval_f1 = 0.2952[0m
[32m  eval_mcc = 0.619[0m
[32m  eval_precision = 0.3865[0m
[32m  eval_recall = 0.2724[0m
[32m  ********************[0m
[32m  Best f1:0.2952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.619[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44976:  57%|█████▋    | 16/28 [00:52<00:42,  3.52s/it]epoch 2 loss 1.44332:  57%|█████▋    | 16/28 [00:52<00:42,  3.52s/it]epoch 2 loss 1.44332:  61%|██████    | 17/28 [00:52<00:28,  2.59s/it]epoch 2 loss 1.44135:  61%|██████    | 17/28 [00:53<00:28,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.64[0m
[32m  eval_f1 = 0.2996[0m
[32m  eval_mcc = 0.6204[0m
[32m  eval_precision = 0.3859[0m
[32m  eval_recall = 0.2775[0m
[32m  ********************[0m
[32m  Best f1:0.2996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6204[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44135:  64%|██████▍   | 18/28 [00:59<00:37,  3.73s/it]epoch 2 loss 1.44027:  64%|██████▍   | 18/28 [00:59<00:37,  3.73s/it]epoch 2 loss 1.44027:  68%|██████▊   | 19/28 [00:59<00:24,  2.74s/it]epoch 2 loss 1.43824:  68%|██████▊   | 19/28 [01:00<00:24,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6418[0m
[32m  eval_f1 = 0.3009[0m
[32m  eval_mcc = 0.6218[0m
[32m  eval_precision = 0.3887[0m
[32m  eval_recall = 0.2795[0m
[32m  ********************[0m
[32m  Best f1:0.3009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43824:  71%|███████▏  | 20/28 [01:06<00:31,  3.88s/it]epoch 2 loss 1.43574:  71%|███████▏  | 20/28 [01:06<00:31,  3.88s/it]epoch 2 loss 1.43574:  75%|███████▌  | 21/28 [01:06<00:19,  2.84s/it]epoch 2 loss 1.43276:  75%|███████▌  | 21/28 [01:07<00:19,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.642[0m
[32m  eval_f1 = 0.3002[0m
[32m  eval_mcc = 0.6215[0m
[32m  eval_precision = 0.3947[0m
[32m  eval_recall = 0.2789[0m

epoch 2 loss 1.43276:  79%|███████▊  | 22/28 [01:10<00:18,  3.13s/it]epoch 2 loss 1.42605:  79%|███████▊  | 22/28 [01:10<00:18,  3.13s/it]epoch 2 loss 1.42605:  82%|████████▏ | 23/28 [01:10<00:11,  2.31s/it]epoch 2 loss 1.42248:  82%|████████▏ | 23/28 [01:11<00:11,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6429[0m
[32m  eval_f1 = 0.3018[0m
[32m  eval_mcc = 0.6226[0m
[32m  eval_precision = 0.3962[0m
[32m  eval_recall = 0.2807[0m
[32m  ********************[0m
[32m  Best f1:0.3018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42248:  86%|████████▌ | 24/28 [01:20<00:18,  4.55s/it]epoch 2 loss 1.41667:  86%|████████▌ | 24/28 [01:21<00:18,  4.55s/it]epoch 2 loss 1.41667:  89%|████████▉ | 25/28 [01:21<00:09,  3.31s/it]epoch 2 loss 1.41488:  89%|████████▉ | 25/28 [01:21<00:09,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6468[0m
[32m  eval_f1 = 0.3071[0m
[32m  eval_mcc = 0.6271[0m
[32m  eval_precision = 0.4066[0m
[32m  eval_recall = 0.2844[0m
[32m  ********************[0m
[32m  Best f1:0.3071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41488:  93%|█████████▎| 26/28 [01:26<00:08,  4.02s/it]epoch 2 loss 1.4168:  93%|█████████▎| 26/28 [01:27<00:08,  4.02s/it] epoch 2 loss 1.4168:  96%|█████████▋| 27/28 [01:27<00:02,  2.94s/it]epoch 2 loss 1.41066:  96%|█████████▋| 27/28 [01:27<00:02,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6481[0m
[32m  eval_f1 = 0.3138[0m
[32m  eval_mcc = 0.6292[0m
[32m  eval_precision = 0.4157[0m
[32m  eval_recall = 0.2887[0m
[32m  ********************[0m
[32m  Best f1:0.3138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41066: 100%|██████████| 28/28 [01:32<00:00,  3.67s/it]epoch 2 loss 1.41066: 100%|██████████| 28/28 [01:32<00:00,  3.30s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.21401:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.21401:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 3 loss 1.22184:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6496[0m
[32m  eval_f1 = 0.3155[0m
[32m  eval_mcc = 0.6312[0m
[32m  eval_precision = 0.4256[0m
[32m  eval_recall = 0.2895[0m
[32m  ********************[0m
[32m  Best f1:0.3155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22184:   7%|▋         | 2/28 [00:06<01:31,  3.51s/it]epoch 3 loss 1.26545:   7%|▋         | 2/28 [00:06<01:31,  3.51s/it]epoch 3 loss 1.26545:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 3 loss 1.29626:  11%|█         | 3/28 [00:06<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6507[0m
[32m  eval_f1 = 0.3153[0m
[32m  eval_mcc = 0.6321[0m
[32m  eval_precision = 0.4258[0m
[32m  eval_recall = 0.2893[0m
[32m  ********************[0m
[32m  Best MCC:0.6321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29626:  14%|█▍        | 4/28 [00:11<01:15,  3.14s/it]epoch 3 loss 1.32302:  14%|█▍        | 4/28 [00:11<01:15,  3.14s/it]epoch 3 loss 1.32302:  18%|█▊        | 5/28 [00:11<00:49,  2.16s/it]epoch 3 loss 1.34841:  18%|█▊        | 5/28 [00:12<00:49,  2.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6506[0m
[32m  eval_f1 = 0.3172[0m
[32m  eval_mcc = 0.6313[0m
[32m  eval_precision = 0.4317[0m
[32m  eval_recall = 0.2913[0m
[32m  ********************[0m
[32m  Best f1:0.3172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.34841:  21%|██▏       | 6/28 [00:16<01:06,  3.03s/it]epoch 3 loss 1.34411:  21%|██▏       | 6/28 [00:16<01:06,  3.03s/it]epoch 3 loss 1.34411:  25%|██▌       | 7/28 [00:16<00:45,  2.18s/it]epoch 3 loss 1.34089:  25%|██▌       | 7/28 [00:17<00:45,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6511[0m
[32m  eval_f1 = 0.3172[0m
[32m  eval_mcc = 0.6313[0m
[32m  eval_precision = 0.4192[0m
[32m  eval_recall = 0.2916[0m

epoch 3 loss 1.34089:  29%|██▊       | 8/28 [00:20<00:53,  2.69s/it]epoch 3 loss 1.33881:  29%|██▊       | 8/28 [00:21<00:53,  2.69s/it]epoch 3 loss 1.33881:  32%|███▏      | 9/28 [00:21<00:37,  1.98s/it]epoch 3 loss 1.34349:  32%|███▏      | 9/28 [00:21<00:37,  1.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.3194[0m
[32m  eval_mcc = 0.6329[0m
[32m  eval_precision = 0.416[0m
[32m  eval_recall = 0.2929[0m
[32m  ********************[0m
[32m  Best f1:0.3194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34349:  36%|███▌      | 10/28 [00:26<00:56,  3.11s/it]epoch 3 loss 1.34029:  36%|███▌      | 10/28 [00:27<00:56,  3.11s/it]epoch 3 loss 1.34029:  39%|███▉      | 11/28 [00:27<00:38,  2.29s/it]epoch 3 loss 1.34055:  39%|███▉      | 11/28 [00:27<00:38,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6541[0m
[32m  eval_f1 = 0.3202[0m
[32m  eval_mcc = 0.6346[0m
[32m  eval_precision = 0.4171[0m
[32m  eval_recall = 0.2937[0m
[32m  ********************[0m
[32m  Best f1:0.3202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34055:  43%|████▎     | 12/28 [00:32<00:53,  3.32s/it]epoch 3 loss 1.33204:  43%|████▎     | 12/28 [00:33<00:53,  3.32s/it]epoch 3 loss 1.33204:  46%|████▋     | 13/28 [00:33<00:36,  2.44s/it]epoch 3 loss 1.32195:  46%|████▋     | 13/28 [00:33<00:36,  2.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3196[0m
[32m  eval_mcc = 0.6359[0m
[32m  eval_precision = 0.4167[0m
[32m  eval_recall = 0.2937[0m
[32m  ********************[0m
[32m  Best MCC:0.6359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32195:  50%|█████     | 14/28 [00:37<00:43,  3.13s/it]epoch 3 loss 1.32726:  50%|█████     | 14/28 [00:38<00:43,  3.13s/it]epoch 3 loss 1.32726:  54%|█████▎    | 15/28 [00:38<00:30,  2.31s/it]epoch 3 loss 1.32589:  54%|█████▎    | 15/28 [00:38<00:30,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3215[0m
[32m  eval_mcc = 0.6358[0m
[32m  eval_precision = 0.4296[0m
[32m  eval_recall = 0.2946[0m
[32m  ********************[0m
[32m  Best f1:0.3215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.32589:  57%|█████▋    | 16/28 [00:43<00:36,  3.04s/it]epoch 3 loss 1.32741:  57%|█████▋    | 16/28 [00:43<00:36,  3.04s/it]epoch 3 loss 1.32741:  61%|██████    | 17/28 [00:43<00:24,  2.25s/it]epoch 3 loss 1.3194:  61%|██████    | 17/28 [00:43<00:24,  2.25s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3251[0m
[32m  eval_mcc = 0.6365[0m
[32m  eval_precision = 0.4306[0m
[32m  eval_recall = 0.2974[0m
[32m  ********************[0m
[32m  Best f1:0.3251[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3194:  64%|██████▍   | 18/28 [00:53<00:45,  4.53s/it]epoch 3 loss 1.3228:  64%|██████▍   | 18/28 [00:53<00:45,  4.53s/it]epoch 3 loss 1.3228:  68%|██████▊   | 19/28 [00:53<00:29,  3.29s/it]epoch 3 loss 1.32459:  68%|██████▊   | 19/28 [00:54<00:29,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3265[0m
[32m  eval_mcc = 0.6366[0m
[32m  eval_precision = 0.4314[0m
[32m  eval_recall = 0.2984[0m
[32m  ********************[0m
[32m  Best f1:0.3265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32459:  71%|███████▏  | 20/28 [00:59<00:31,  3.96s/it]epoch 3 loss 1.31979:  71%|███████▏  | 20/28 [00:59<00:31,  3.96s/it]epoch 3 loss 1.31979:  75%|███████▌  | 21/28 [00:59<00:20,  2.90s/it]epoch 3 loss 1.32229:  75%|███████▌  | 21/28 [01:00<00:20,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3282[0m
[32m  eval_mcc = 0.6359[0m
[32m  eval_precision = 0.4396[0m
[32m  eval_recall = 0.3[0m
[32m  ********************[0m
[32m  Best f1:0.3282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.32229:  79%|███████▊  | 22/28 [01:04<00:20,  3.45s/it]epoch 3 loss 1.31934:  79%|███████▊  | 22/28 [01:04<00:20,  3.45s/it]epoch 3 loss 1.31934:  82%|████████▏ | 23/28 [01:04<00:12,  2.54s/it]epoch 3 loss 1.32021:  82%|████████▏ | 23/28 [01:05<00:12,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3397[0m
[32m  eval_mcc = 0.6372[0m
[32m  eval_precision = 0.4581[0m
[32m  eval_recall = 0.3088[0m
[32m  ********************[0m
[32m  Best f1:0.3397[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32021:  86%|████████▌ | 24/28 [01:10<00:13,  3.46s/it]epoch 3 loss 1.31686:  86%|████████▌ | 24/28 [01:10<00:13,  3.46s/it]epoch 3 loss 1.31686:  89%|████████▉ | 25/28 [01:10<00:07,  2.55s/it]epoch 3 loss 1.31373:  89%|████████▉ | 25/28 [01:11<00:07,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6574[0m
[32m  eval_f1 = 0.3404[0m
[32m  eval_mcc = 0.6382[0m
[32m  eval_precision = 0.4584[0m
[32m  eval_recall = 0.3093[0m
[32m  ********************[0m
[32m  Best f1:0.3404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31373:  93%|█████████▎| 26/28 [01:16<00:06,  3.48s/it]epoch 3 loss 1.31383:  93%|█████████▎| 26/28 [01:16<00:06,  3.48s/it]epoch 3 loss 1.31383:  96%|█████████▋| 27/28 [01:16<00:02,  2.56s/it]epoch 3 loss 1.31283:  96%|█████████▋| 27/28 [01:17<00:02,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6582[0m
[32m  eval_f1 = 0.3404[0m
[32m  eval_mcc = 0.6389[0m
[32m  eval_precision = 0.4558[0m
[32m  eval_recall = 0.3103[0m
[32m  ********************[0m
[32m  Best f1:0.3404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31283: 100%|██████████| 28/28 [01:26<00:00,  4.66s/it]epoch 3 loss 1.31283: 100%|██████████| 28/28 [01:26<00:00,  3.09s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.25436:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.25436:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.24888:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6587[0m
[32m  eval_f1 = 0.3437[0m
[32m  eval_mcc = 0.6395[0m
[32m  eval_precision = 0.4649[0m
[32m  eval_recall = 0.3126[0m
[32m  ********************[0m
[32m  Best f1:0.3437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24888:   7%|▋         | 2/28 [00:06<01:37,  3.73s/it]epoch 4 loss 1.22642:   7%|▋         | 2/28 [00:06<01:37,  3.73s/it]epoch 4 loss 1.22642:  11%|█         | 3/28 [00:06<00:55,  2.23s/it]epoch 4 loss 1.25314:  11%|█         | 3/28 [00:07<00:55,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3451[0m
[32m  eval_mcc = 0.6401[0m
[32m  eval_precision = 0.4665[0m
[32m  eval_recall = 0.3132[0m
[32m  ********************[0m
[32m  Best f1:0.3451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25314:  14%|█▍        | 4/28 [00:16<02:05,  5.21s/it]epoch 4 loss 1.22103:  14%|█▍        | 4/28 [00:17<02:05,  5.21s/it]epoch 4 loss 1.22103:  18%|█▊        | 5/28 [00:17<01:20,  3.48s/it]epoch 4 loss 1.23661:  18%|█▊        | 5/28 [00:17<01:20,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6593[0m
[32m  eval_f1 = 0.3446[0m
[32m  eval_mcc = 0.6408[0m
[32m  eval_precision = 0.4662[0m
[32m  eval_recall = 0.313[0m
[32m  ********************[0m
[32m  Best MCC:0.6408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23661:  21%|██▏       | 6/28 [00:21<01:25,  3.91s/it]epoch 4 loss 1.24511:  21%|██▏       | 6/28 [00:22<01:25,  3.91s/it]epoch 4 loss 1.24511:  25%|██▌       | 7/28 [00:22<00:58,  2.76s/it]epoch 4 loss 1.24554:  25%|██▌       | 7/28 [00:22<00:58,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6597[0m
[32m  eval_f1 = 0.3439[0m
[32m  eval_mcc = 0.6413[0m
[32m  eval_precision = 0.4549[0m
[32m  eval_recall = 0.3129[0m
[32m  ********************[0m
[32m  Best MCC:0.6413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24554:  29%|██▊       | 8/28 [00:26<01:07,  3.40s/it]epoch 4 loss 1.24244:  29%|██▊       | 8/28 [00:27<01:07,  3.40s/it]epoch 4 loss 1.24244:  32%|███▏      | 9/28 [00:27<00:46,  2.46s/it]epoch 4 loss 1.23759:  32%|███▏      | 9/28 [00:27<00:46,  2.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6599[0m
[32m  eval_f1 = 0.3441[0m
[32m  eval_mcc = 0.6415[0m
[32m  eval_precision = 0.4541[0m
[32m  eval_recall = 0.3131[0m
[32m  ********************[0m
[32m  Best MCC:0.6415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23759:  36%|███▌      | 10/28 [00:32<00:57,  3.17s/it]epoch 4 loss 1.24022:  36%|███▌      | 10/28 [00:32<00:57,  3.17s/it]epoch 4 loss 1.24022:  39%|███▉      | 11/28 [00:32<00:39,  2.32s/it]epoch 4 loss 1.25216:  39%|███▉      | 11/28 [00:32<00:39,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6598[0m
[32m  eval_f1 = 0.3443[0m
[32m  eval_mcc = 0.6412[0m
[32m  eval_precision = 0.4524[0m
[32m  eval_recall = 0.3136[0m

epoch 4 loss 1.25216:  43%|████▎     | 12/28 [00:36<00:44,  2.77s/it]epoch 4 loss 1.25489:  43%|████▎     | 12/28 [00:36<00:44,  2.77s/it]epoch 4 loss 1.25489:  46%|████▋     | 13/28 [00:36<00:30,  2.05s/it]epoch 4 loss 1.25802:  46%|████▋     | 13/28 [00:37<00:30,  2.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6599[0m
[32m  eval_f1 = 0.3448[0m
[32m  eval_mcc = 0.6412[0m
[32m  eval_precision = 0.4525[0m
[32m  eval_recall = 0.3142[0m

epoch 4 loss 1.25802:  50%|█████     | 14/28 [00:40<00:36,  2.58s/it]epoch 4 loss 1.26039:  50%|█████     | 14/28 [00:40<00:36,  2.58s/it]epoch 4 loss 1.26039:  54%|█████▎    | 15/28 [00:40<00:25,  1.93s/it]epoch 4 loss 1.26261:  54%|█████▎    | 15/28 [00:41<00:25,  1.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.66[0m
[32m  eval_f1 = 0.3457[0m
[32m  eval_mcc = 0.6411[0m
[32m  eval_precision = 0.4549[0m
[32m  eval_recall = 0.3153[0m
[32m  ********************[0m
[32m  Best f1:0.3457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.26261:  57%|█████▋    | 16/28 [00:45<00:33,  2.77s/it]epoch 4 loss 1.26386:  57%|█████▋    | 16/28 [00:46<00:33,  2.77s/it]epoch 4 loss 1.26386:  61%|██████    | 17/28 [00:46<00:22,  2.06s/it]epoch 4 loss 1.27637:  61%|██████    | 17/28 [00:46<00:22,  2.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6599[0m
[32m  eval_f1 = 0.3454[0m
[32m  eval_mcc = 0.6408[0m
[32m  eval_precision = 0.4524[0m
[32m  eval_recall = 0.3155[0m

epoch 4 loss 1.27637:  64%|██████▍   | 18/28 [00:49<00:25,  2.59s/it]epoch 4 loss 1.2746:  64%|██████▍   | 18/28 [00:50<00:25,  2.59s/it] epoch 4 loss 1.2746:  68%|██████▊   | 19/28 [00:50<00:17,  1.93s/it]epoch 4 loss 1.27425:  68%|██████▊   | 19/28 [00:50<00:17,  1.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6597[0m
[32m  eval_f1 = 0.3455[0m
[32m  eval_mcc = 0.6404[0m
[32m  eval_precision = 0.4516[0m
[32m  eval_recall = 0.3159[0m

epoch 4 loss 1.27425:  71%|███████▏  | 20/28 [00:54<00:19,  2.49s/it]epoch 4 loss 1.26967:  71%|███████▏  | 20/28 [00:54<00:19,  2.49s/it]epoch 4 loss 1.26967:  75%|███████▌  | 21/28 [00:54<00:13,  1.86s/it]epoch 4 loss 1.27496:  75%|███████▌  | 21/28 [00:54<00:13,  1.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6598[0m
[32m  eval_f1 = 0.3454[0m
[32m  eval_mcc = 0.6405[0m
[32m  eval_precision = 0.4509[0m
[32m  eval_recall = 0.3161[0m

epoch 4 loss 1.27496:  79%|███████▊  | 22/28 [00:58<00:14,  2.45s/it]epoch 4 loss 1.27385:  79%|███████▊  | 22/28 [00:58<00:14,  2.45s/it]epoch 4 loss 1.27385:  82%|████████▏ | 23/28 [00:58<00:09,  1.83s/it]epoch 4 loss 1.27301:  82%|████████▏ | 23/28 [00:59<00:09,  1.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6599[0m
[32m  eval_f1 = 0.3457[0m
[32m  eval_mcc = 0.6405[0m
[32m  eval_precision = 0.4511[0m
[32m  eval_recall = 0.3164[0m
[32m  ********************[0m
[32m  Best f1:0.3457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27301:  86%|████████▌ | 24/28 [01:03<00:10,  2.71s/it]epoch 4 loss 1.27428:  86%|████████▌ | 24/28 [01:03<00:10,  2.71s/it]epoch 4 loss 1.27428:  89%|████████▉ | 25/28 [01:03<00:06,  2.02s/it]epoch 4 loss 1.27239:  89%|████████▉ | 25/28 [01:04<00:06,  2.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6602[0m
[32m  eval_f1 = 0.3458[0m
[32m  eval_mcc = 0.6407[0m
[32m  eval_precision = 0.451[0m
[32m  eval_recall = 0.3166[0m
[32m  ********************[0m
[32m  Best f1:0.3458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27239:  93%|█████████▎| 26/28 [01:08<00:05,  2.89s/it]epoch 4 loss 1.27599:  93%|█████████▎| 26/28 [01:09<00:05,  2.89s/it]epoch 4 loss 1.27599:  96%|█████████▋| 27/28 [01:09<00:02,  2.15s/it]epoch 4 loss 1.27182:  96%|█████████▋| 27/28 [01:09<00:02,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6602[0m
[32m  eval_f1 = 0.3458[0m
[32m  eval_mcc = 0.6408[0m
[32m  eval_precision = 0.4509[0m
[32m  eval_recall = 0.3166[0m

epoch 4 loss 1.27182: 100%|██████████| 28/28 [01:12<00:00,  2.59s/it]epoch 4 loss 1.27182: 100%|██████████| 28/28 [01:12<00:00,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6602[0m
[32m  eval_f1 = 0.3458[0m
[32m  eval_mcc = 0.6407[0m
[32m  eval_precision = 0.451[0m
[32m  eval_recall = 0.3166[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.74it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6373[0m
[32m  eval_f1 = 0.2706[0m
[32m  eval_mcc = 0.6186[0m
[32m  eval_precision = 0.3539[0m
[32m  eval_recall = 0.2491[0m

