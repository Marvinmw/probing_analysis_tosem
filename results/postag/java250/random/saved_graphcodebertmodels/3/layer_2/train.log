[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=2, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2', posratio=0.5, seed=206, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.66159:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.66159:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.66315:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0013[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = -0.0018[0m
[32m  eval_precision = 0.0025[0m
[32m  eval_recall = 0.0015[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.66315:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 0 loss 5.65274:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 0 loss 5.65274:  11%|█         | 3/28 [00:05<00:47,  1.89s/it]epoch 0 loss 5.6378:  11%|█         | 3/28 [00:06<00:47,  1.89s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0022[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = -0.003[0m
[32m  eval_precision = 0.0028[0m
[32m  eval_recall = 0.0018[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.6378:  14%|█▍        | 4/28 [00:11<01:15,  3.15s/it]epoch 0 loss 5.61072:  14%|█▍        | 4/28 [00:11<01:15,  3.15s/it]epoch 0 loss 5.61072:  18%|█▊        | 5/28 [00:11<00:49,  2.16s/it]epoch 0 loss 5.58374:  18%|█▊        | 5/28 [00:11<00:49,  2.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0061[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = -0.0051[0m
[32m  eval_precision = 0.0033[0m
[32m  eval_recall = 0.0021[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.58374:  21%|██▏       | 6/28 [00:16<01:11,  3.24s/it]epoch 0 loss 5.5492:  21%|██▏       | 6/28 [00:17<01:11,  3.24s/it] epoch 0 loss 5.5492:  25%|██▌       | 7/28 [00:17<00:48,  2.31s/it]epoch 0 loss 5.50734:  25%|██▌       | 7/28 [00:17<00:48,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0274[0m
[32m  eval_f1 = 0.0039[0m
[32m  eval_mcc = 0.0017[0m
[32m  eval_precision = 0.0062[0m
[32m  eval_recall = 0.0046[0m
[32m  ********************[0m
[32m  Best f1:0.0039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.50734:  29%|██▊       | 8/28 [00:22<01:07,  3.37s/it]epoch 0 loss 5.46238:  29%|██▊       | 8/28 [00:23<01:07,  3.37s/it]epoch 0 loss 5.46238:  32%|███▏      | 9/28 [00:23<00:46,  2.44s/it]epoch 0 loss 5.41063:  32%|███▏      | 9/28 [00:23<00:46,  2.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.06[0m
[32m  eval_f1 = 0.0114[0m
[32m  eval_mcc = 0.0175[0m
[32m  eval_precision = 0.0143[0m
[32m  eval_recall = 0.0139[0m
[32m  ********************[0m
[32m  Best f1:0.0114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.41063:  36%|███▌      | 10/28 [00:29<01:06,  3.70s/it]epoch 0 loss 5.35144:  36%|███▌      | 10/28 [00:30<01:06,  3.70s/it]epoch 0 loss 5.35144:  39%|███▉      | 11/28 [00:30<00:45,  2.70s/it]epoch 0 loss 5.28808:  39%|███▉      | 11/28 [00:30<00:45,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0897[0m
[32m  eval_f1 = 0.0211[0m
[32m  eval_mcc = 0.0392[0m
[32m  eval_precision = 0.0243[0m
[32m  eval_recall = 0.0253[0m
[32m  ********************[0m
[32m  Best f1:0.0211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.28808:  43%|████▎     | 12/28 [00:36<01:02,  3.88s/it]epoch 0 loss 5.22378:  43%|████▎     | 12/28 [00:37<01:02,  3.88s/it]epoch 0 loss 5.22378:  46%|████▋     | 13/28 [00:37<00:42,  2.83s/it]epoch 0 loss 5.15326:  46%|████▋     | 13/28 [00:37<00:42,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1256[0m
[32m  eval_f1 = 0.0292[0m
[32m  eval_mcc = 0.0724[0m
[32m  eval_precision = 0.0385[0m
[32m  eval_recall = 0.0339[0m
[32m  ********************[0m
[32m  Best f1:0.0292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15326:  50%|█████     | 14/28 [00:42<00:51,  3.69s/it]epoch 0 loss 5.07729:  50%|█████     | 14/28 [00:43<00:51,  3.69s/it]epoch 0 loss 5.07729:  54%|█████▎    | 15/28 [00:43<00:35,  2.71s/it]epoch 0 loss 5.00131:  54%|█████▎    | 15/28 [00:43<00:35,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1774[0m
[32m  eval_f1 = 0.049[0m
[32m  eval_mcc = 0.124[0m
[32m  eval_precision = 0.0773[0m
[32m  eval_recall = 0.0499[0m
[32m  ********************[0m
[32m  Best f1:0.049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.124[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.00131:  57%|█████▋    | 16/28 [00:48<00:43,  3.60s/it]epoch 0 loss 4.92685:  57%|█████▋    | 16/28 [00:49<00:43,  3.60s/it]epoch 0 loss 4.92685:  61%|██████    | 17/28 [00:49<00:29,  2.65s/it]epoch 0 loss 4.85029:  61%|██████    | 17/28 [00:49<00:29,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2248[0m
[32m  eval_f1 = 0.0622[0m
[32m  eval_mcc = 0.1705[0m
[32m  eval_precision = 0.0945[0m
[32m  eval_recall = 0.0601[0m
[32m  ********************[0m
[32m  Best f1:0.0622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.85029:  64%|██████▍   | 18/28 [00:55<00:36,  3.61s/it]epoch 0 loss 4.77364:  64%|██████▍   | 18/28 [00:55<00:36,  3.61s/it]epoch 0 loss 4.77364:  68%|██████▊   | 19/28 [00:55<00:23,  2.66s/it]epoch 0 loss 4.69809:  68%|██████▊   | 19/28 [00:56<00:23,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2776[0m
[32m  eval_f1 = 0.0739[0m
[32m  eval_mcc = 0.226[0m
[32m  eval_precision = 0.1097[0m
[32m  eval_recall = 0.0694[0m
[32m  ********************[0m
[32m  Best f1:0.0739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.69809:  71%|███████▏  | 20/28 [01:02<00:30,  3.81s/it]epoch 0 loss 4.61613:  71%|███████▏  | 20/28 [01:02<00:30,  3.81s/it]epoch 0 loss 4.61613:  75%|███████▌  | 21/28 [01:02<00:19,  2.79s/it]epoch 0 loss 4.543:  75%|███████▌  | 21/28 [01:03<00:19,  2.79s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3385[0m
[32m  eval_f1 = 0.0904[0m
[32m  eval_mcc = 0.2936[0m
[32m  eval_precision = 0.1405[0m
[32m  eval_recall = 0.0837[0m
[32m  ********************[0m
[32m  Best f1:0.0904[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2936[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.543:  79%|███████▊  | 22/28 [01:09<00:23,  3.91s/it]epoch 0 loss 4.46719:  79%|███████▊  | 22/28 [01:09<00:23,  3.91s/it]epoch 0 loss 4.46719:  82%|████████▏ | 23/28 [01:09<00:14,  2.86s/it]epoch 0 loss 4.39919:  82%|████████▏ | 23/28 [01:09<00:14,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3989[0m
[32m  eval_f1 = 0.1091[0m
[32m  eval_mcc = 0.3607[0m
[32m  eval_precision = 0.1629[0m
[32m  eval_recall = 0.0986[0m
[32m  ********************[0m
[32m  Best f1:0.1091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.39919:  86%|████████▌ | 24/28 [01:15<00:14,  3.65s/it]epoch 0 loss 4.3329:  86%|████████▌ | 24/28 [01:15<00:14,  3.65s/it] epoch 0 loss 4.3329:  89%|████████▉ | 25/28 [01:15<00:08,  2.68s/it]epoch 0 loss 4.26177:  89%|████████▉ | 25/28 [01:15<00:08,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4467[0m
[32m  eval_f1 = 0.1204[0m
[32m  eval_mcc = 0.4122[0m
[32m  eval_precision = 0.1679[0m
[32m  eval_recall = 0.1102[0m
[32m  ********************[0m
[32m  Best f1:0.1204[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.26177:  93%|█████████▎| 26/28 [01:22<00:07,  3.85s/it]epoch 0 loss 4.19355:  93%|█████████▎| 26/28 [01:22<00:07,  3.85s/it]epoch 0 loss 4.19355:  96%|█████████▋| 27/28 [01:22<00:02,  2.82s/it]epoch 0 loss 4.13049:  96%|█████████▋| 27/28 [01:22<00:02,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4789[0m
[32m  eval_f1 = 0.13[0m
[32m  eval_mcc = 0.4461[0m
[32m  eval_precision = 0.1717[0m
[32m  eval_recall = 0.1203[0m
[32m  ********************[0m
[32m  Best f1:0.13[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.13049: 100%|██████████| 28/28 [01:28<00:00,  3.88s/it]epoch 0 loss 4.13049: 100%|██████████| 28/28 [01:28<00:00,  3.17s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.57231:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.57231:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s]epoch 1 loss 2.36446:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5154[0m
[32m  eval_f1 = 0.1446[0m
[32m  eval_mcc = 0.4851[0m
[32m  eval_precision = 0.1979[0m
[32m  eval_recall = 0.1371[0m
[32m  ********************[0m
[32m  Best f1:0.1446[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.36446:   7%|▋         | 2/28 [00:07<01:47,  4.12s/it]epoch 1 loss 2.25157:   7%|▋         | 2/28 [00:07<01:47,  4.12s/it]epoch 1 loss 2.25157:  11%|█         | 3/28 [00:07<01:00,  2.43s/it]epoch 1 loss 2.20149:  11%|█         | 3/28 [00:07<01:00,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5427[0m
[32m  eval_f1 = 0.1562[0m
[32m  eval_mcc = 0.5145[0m
[32m  eval_precision = 0.2005[0m
[32m  eval_recall = 0.1519[0m
[32m  ********************[0m
[32m  Best f1:0.1562[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20149:  14%|█▍        | 4/28 [00:14<01:38,  4.12s/it]epoch 1 loss 2.15363:  14%|█▍        | 4/28 [00:14<01:38,  4.12s/it]epoch 1 loss 2.15363:  18%|█▊        | 5/28 [00:14<01:04,  2.79s/it]epoch 1 loss 2.11537:  18%|█▊        | 5/28 [00:15<01:04,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5663[0m
[32m  eval_f1 = 0.175[0m
[32m  eval_mcc = 0.5405[0m
[32m  eval_precision = 0.2181[0m
[32m  eval_recall = 0.1693[0m
[32m  ********************[0m
[32m  Best f1:0.175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11537:  21%|██▏       | 6/28 [00:21<01:29,  4.07s/it]epoch 1 loss 2.06366:  21%|██▏       | 6/28 [00:21<01:29,  4.07s/it]epoch 1 loss 2.06366:  25%|██▌       | 7/28 [00:21<01:00,  2.88s/it]epoch 1 loss 2.04988:  25%|██▌       | 7/28 [00:22<01:00,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.582[0m
[32m  eval_f1 = 0.1871[0m
[32m  eval_mcc = 0.5578[0m
[32m  eval_precision = 0.2405[0m
[32m  eval_recall = 0.1818[0m
[32m  ********************[0m
[32m  Best f1:0.1871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04988:  29%|██▊       | 8/28 [00:31<01:38,  4.94s/it]epoch 1 loss 2.01811:  29%|██▊       | 8/28 [00:31<01:38,  4.94s/it]epoch 1 loss 2.01811:  32%|███▏      | 9/28 [00:31<01:07,  3.53s/it]epoch 1 loss 1.98698:  32%|███▏      | 9/28 [00:31<01:07,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5939[0m
[32m  eval_f1 = 0.1993[0m
[32m  eval_mcc = 0.5711[0m
[32m  eval_precision = 0.2581[0m
[32m  eval_recall = 0.1912[0m
[32m  ********************[0m
[32m  Best f1:0.1993[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5711[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98698:  36%|███▌      | 10/28 [00:38<01:20,  4.46s/it]epoch 1 loss 1.95977:  36%|███▌      | 10/28 [00:38<01:20,  4.46s/it]epoch 1 loss 1.95977:  39%|███▉      | 11/28 [00:38<00:54,  3.23s/it]epoch 1 loss 1.9444:  39%|███▉      | 11/28 [00:38<00:54,  3.23s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5998[0m
[32m  eval_f1 = 0.2054[0m
[32m  eval_mcc = 0.5781[0m
[32m  eval_precision = 0.2862[0m
[32m  eval_recall = 0.1948[0m
[32m  ********************[0m
[32m  Best f1:0.2054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5781[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9444:  43%|████▎     | 12/28 [00:47<01:21,  5.11s/it]epoch 1 loss 1.9173:  43%|████▎     | 12/28 [00:48<01:21,  5.11s/it]epoch 1 loss 1.9173:  46%|████▋     | 13/28 [00:48<00:55,  3.69s/it]epoch 1 loss 1.91159:  46%|████▋     | 13/28 [00:48<00:55,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6035[0m
[32m  eval_f1 = 0.2255[0m
[32m  eval_mcc = 0.5827[0m
[32m  eval_precision = 0.3007[0m
[32m  eval_recall = 0.2117[0m
[32m  ********************[0m
[32m  Best f1:0.2255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91159:  50%|█████     | 14/28 [00:54<01:03,  4.55s/it]epoch 1 loss 1.89412:  50%|█████     | 14/28 [00:55<01:03,  4.55s/it]epoch 1 loss 1.89412:  54%|█████▎    | 15/28 [00:55<00:43,  3.31s/it]epoch 1 loss 1.87164:  54%|█████▎    | 15/28 [00:55<00:43,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6079[0m
[32m  eval_f1 = 0.2376[0m
[32m  eval_mcc = 0.5876[0m
[32m  eval_precision = 0.3303[0m
[32m  eval_recall = 0.2197[0m
[32m  ********************[0m
[32m  Best f1:0.2376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5876[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87164:  57%|█████▋    | 16/28 [01:03<00:58,  4.85s/it]epoch 1 loss 1.85156:  57%|█████▋    | 16/28 [01:04<00:58,  4.85s/it]epoch 1 loss 1.85156:  61%|██████    | 17/28 [01:04<00:38,  3.52s/it]epoch 1 loss 1.83333:  61%|██████    | 17/28 [01:04<00:38,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6132[0m
[32m  eval_f1 = 0.2448[0m
[32m  eval_mcc = 0.5937[0m
[32m  eval_precision = 0.3311[0m
[32m  eval_recall = 0.2252[0m
[32m  ********************[0m
[32m  Best f1:0.2448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83333:  64%|██████▍   | 18/28 [01:12<00:50,  5.04s/it]epoch 1 loss 1.81176:  64%|██████▍   | 18/28 [01:13<00:50,  5.04s/it]epoch 1 loss 1.81176:  68%|██████▊   | 19/28 [01:13<00:32,  3.65s/it]epoch 1 loss 1.79616:  68%|██████▊   | 19/28 [01:13<00:32,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6185[0m
[32m  eval_f1 = 0.2655[0m
[32m  eval_mcc = 0.5993[0m
[32m  eval_precision = 0.3649[0m
[32m  eval_recall = 0.2438[0m
[32m  ********************[0m
[32m  Best f1:0.2655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5993[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.79616:  71%|███████▏  | 20/28 [01:23<00:46,  5.83s/it]epoch 1 loss 1.78229:  71%|███████▏  | 20/28 [01:24<00:46,  5.83s/it]epoch 1 loss 1.78229:  75%|███████▌  | 21/28 [01:24<00:29,  4.21s/it]epoch 1 loss 1.77173:  75%|███████▌  | 21/28 [01:24<00:29,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6219[0m
[32m  eval_f1 = 0.2693[0m
[32m  eval_mcc = 0.6021[0m
[32m  eval_precision = 0.3625[0m
[32m  eval_recall = 0.2479[0m
[32m  ********************[0m
[32m  Best f1:0.2693[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77173:  79%|███████▊  | 22/28 [01:35<00:37,  6.29s/it]epoch 1 loss 1.75857:  79%|███████▊  | 22/28 [01:36<00:37,  6.29s/it]epoch 1 loss 1.75857:  82%|████████▏ | 23/28 [01:36<00:22,  4.53s/it]epoch 1 loss 1.7398:  82%|████████▏ | 23/28 [01:36<00:22,  4.53s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6306[0m
[32m  eval_f1 = 0.2821[0m
[32m  eval_mcc = 0.61[0m
[32m  eval_precision = 0.3692[0m
[32m  eval_recall = 0.2604[0m
[32m  ********************[0m
[32m  Best f1:0.2821[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.61[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7398:  86%|████████▌ | 24/28 [01:45<00:23,  5.91s/it]epoch 1 loss 1.72715:  86%|████████▌ | 24/28 [01:45<00:23,  5.91s/it]epoch 1 loss 1.72715:  89%|████████▉ | 25/28 [01:45<00:12,  4.26s/it]epoch 1 loss 1.71399:  89%|████████▉ | 25/28 [01:45<00:12,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6342[0m
[32m  eval_f1 = 0.2872[0m
[32m  eval_mcc = 0.6135[0m
[32m  eval_precision = 0.3692[0m
[32m  eval_recall = 0.2676[0m
[32m  ********************[0m
[32m  Best f1:0.2872[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.71399:  93%|█████████▎| 26/28 [01:54<00:11,  5.57s/it]epoch 1 loss 1.71413:  93%|█████████▎| 26/28 [01:54<00:11,  5.57s/it]epoch 1 loss 1.71413:  96%|█████████▋| 27/28 [01:54<00:04,  4.03s/it]epoch 1 loss 1.70816:  96%|█████████▋| 27/28 [01:54<00:04,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6368[0m
[32m  eval_f1 = 0.2895[0m
[32m  eval_mcc = 0.6162[0m
[32m  eval_precision = 0.3789[0m
[32m  eval_recall = 0.2699[0m
[32m  ********************[0m
[32m  Best f1:0.2895[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.70816: 100%|██████████| 28/28 [02:03<00:00,  5.44s/it]epoch 1 loss 1.70816: 100%|██████████| 28/28 [02:03<00:00,  4.40s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.26294:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.26294:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 2 loss 1.31161:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6434[0m
[32m  eval_f1 = 0.2959[0m
[32m  eval_mcc = 0.6232[0m
[32m  eval_precision = 0.3916[0m
[32m  eval_recall = 0.2746[0m
[32m  ********************[0m
[32m  Best f1:0.2959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31161:   7%|▋         | 2/28 [00:11<02:52,  6.62s/it]epoch 2 loss 1.34009:   7%|▋         | 2/28 [00:11<02:52,  6.62s/it]epoch 2 loss 1.34009:  11%|█         | 3/28 [00:11<01:34,  3.79s/it]epoch 2 loss 1.33445:  11%|█         | 3/28 [00:12<01:34,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6459[0m
[32m  eval_f1 = 0.2985[0m
[32m  eval_mcc = 0.626[0m
[32m  eval_precision = 0.3888[0m
[32m  eval_recall = 0.2768[0m
[32m  ********************[0m
[32m  Best f1:0.2985[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.626[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33445:  14%|█▍        | 4/28 [00:20<02:18,  5.77s/it]epoch 2 loss 1.35313:  14%|█▍        | 4/28 [00:21<02:18,  5.77s/it]epoch 2 loss 1.35313:  18%|█▊        | 5/28 [00:21<01:28,  3.84s/it]epoch 2 loss 1.35315:  18%|█▊        | 5/28 [00:21<01:28,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3001[0m
[32m  eval_mcc = 0.6275[0m
[32m  eval_precision = 0.3927[0m
[32m  eval_recall = 0.2773[0m
[32m  ********************[0m
[32m  Best f1:0.3001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35315:  21%|██▏       | 6/28 [00:33<02:28,  6.75s/it]epoch 2 loss 1.35274:  21%|██▏       | 6/28 [00:33<02:28,  6.75s/it]epoch 2 loss 1.35274:  25%|██▌       | 7/28 [00:33<01:38,  4.68s/it]epoch 2 loss 1.35988:  25%|██▌       | 7/28 [00:34<01:38,  4.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6496[0m
[32m  eval_f1 = 0.3067[0m
[32m  eval_mcc = 0.6303[0m
[32m  eval_precision = 0.404[0m
[32m  eval_recall = 0.2822[0m
[32m  ********************[0m
[32m  Best f1:0.3067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35988:  29%|██▊       | 8/28 [00:41<01:50,  5.52s/it]epoch 2 loss 1.36304:  29%|██▊       | 8/28 [00:41<01:50,  5.52s/it]epoch 2 loss 1.36304:  32%|███▏      | 9/28 [00:41<01:14,  3.92s/it]epoch 2 loss 1.36622:  32%|███▏      | 9/28 [00:41<01:14,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6513[0m
[32m  eval_f1 = 0.3083[0m
[32m  eval_mcc = 0.6323[0m
[32m  eval_precision = 0.4051[0m
[32m  eval_recall = 0.2833[0m
[32m  ********************[0m
[32m  Best f1:0.3083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36622:  36%|███▌      | 10/28 [00:50<01:37,  5.43s/it]epoch 2 loss 1.37764:  36%|███▌      | 10/28 [00:50<01:37,  5.43s/it]epoch 2 loss 1.37764:  39%|███▉      | 11/28 [00:50<01:06,  3.90s/it]epoch 2 loss 1.37369:  39%|███▉      | 11/28 [00:51<01:06,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.3158[0m
[32m  eval_mcc = 0.6336[0m
[32m  eval_precision = 0.4216[0m
[32m  eval_recall = 0.289[0m
[32m  ********************[0m
[32m  Best f1:0.3158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37369:  43%|████▎     | 12/28 [01:01<01:33,  5.87s/it]epoch 2 loss 1.36672:  43%|████▎     | 12/28 [01:01<01:33,  5.87s/it]epoch 2 loss 1.36672:  46%|████▋     | 13/28 [01:01<01:03,  4.22s/it]epoch 2 loss 1.3551:  46%|████▋     | 13/28 [01:02<01:03,  4.22s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3241[0m
[32m  eval_mcc = 0.6341[0m
[32m  eval_precision = 0.4375[0m
[32m  eval_recall = 0.2946[0m
[32m  ********************[0m
[32m  Best f1:0.3241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3551:  50%|█████     | 14/28 [01:12<01:28,  6.30s/it]epoch 2 loss 1.35786:  50%|█████     | 14/28 [01:13<01:28,  6.30s/it]epoch 2 loss 1.35786:  54%|█████▎    | 15/28 [01:13<00:58,  4.53s/it]epoch 2 loss 1.35481:  54%|█████▎    | 15/28 [01:13<00:58,  4.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6555[0m
[32m  eval_f1 = 0.3342[0m
[32m  eval_mcc = 0.6365[0m
[32m  eval_precision = 0.4477[0m
[32m  eval_recall = 0.3034[0m
[32m  ********************[0m
[32m  Best f1:0.3342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35481:  57%|█████▋    | 16/28 [01:21<01:09,  5.80s/it]epoch 2 loss 1.35071:  57%|█████▋    | 16/28 [01:22<01:09,  5.80s/it]epoch 2 loss 1.35071:  61%|██████    | 17/28 [01:22<00:46,  4.18s/it]epoch 2 loss 1.34395:  61%|██████    | 17/28 [01:22<00:46,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3443[0m
[32m  eval_mcc = 0.6378[0m
[32m  eval_precision = 0.4558[0m
[32m  eval_recall = 0.3119[0m
[32m  ********************[0m
[32m  Best f1:0.3443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34395:  64%|██████▍   | 18/28 [01:30<00:53,  5.31s/it]epoch 2 loss 1.3357:  64%|██████▍   | 18/28 [01:30<00:53,  5.31s/it] epoch 2 loss 1.3357:  68%|██████▊   | 19/28 [01:30<00:34,  3.84s/it]epoch 2 loss 1.33699:  68%|██████▊   | 19/28 [01:31<00:34,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6576[0m
[32m  eval_f1 = 0.3468[0m
[32m  eval_mcc = 0.6384[0m
[32m  eval_precision = 0.4586[0m
[32m  eval_recall = 0.3153[0m
[32m  ********************[0m
[32m  Best f1:0.3468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33699:  71%|███████▏  | 20/28 [01:37<00:37,  4.65s/it]epoch 2 loss 1.33865:  71%|███████▏  | 20/28 [01:37<00:37,  4.65s/it]epoch 2 loss 1.33865:  75%|███████▌  | 21/28 [01:37<00:23,  3.38s/it]epoch 2 loss 1.33837:  75%|███████▌  | 21/28 [01:38<00:23,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6592[0m
[32m  eval_f1 = 0.3521[0m
[32m  eval_mcc = 0.6401[0m
[32m  eval_precision = 0.4646[0m
[32m  eval_recall = 0.3202[0m
[32m  ********************[0m
[32m  Best f1:0.3521[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33837:  79%|███████▊  | 22/28 [01:44<00:26,  4.36s/it]epoch 2 loss 1.33347:  79%|███████▊  | 22/28 [01:44<00:26,  4.36s/it]epoch 2 loss 1.33347:  82%|████████▏ | 23/28 [01:44<00:15,  3.18s/it]epoch 2 loss 1.32495:  82%|████████▏ | 23/28 [01:45<00:15,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6617[0m
[32m  eval_f1 = 0.358[0m
[32m  eval_mcc = 0.6426[0m
[32m  eval_precision = 0.4726[0m
[32m  eval_recall = 0.3277[0m
[32m  ********************[0m
[32m  Best f1:0.358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6426[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32495:  86%|████████▌ | 24/28 [01:51<00:16,  4.17s/it]epoch 2 loss 1.32385:  86%|████████▌ | 24/28 [01:51<00:16,  4.17s/it]epoch 2 loss 1.32385:  89%|████████▉ | 25/28 [01:51<00:09,  3.05s/it]epoch 2 loss 1.32027:  89%|████████▉ | 25/28 [01:51<00:09,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6636[0m
[32m  eval_f1 = 0.3592[0m
[32m  eval_mcc = 0.6447[0m
[32m  eval_precision = 0.4686[0m
[32m  eval_recall = 0.3295[0m
[32m  ********************[0m
[32m  Best f1:0.3592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32027:  93%|█████████▎| 26/28 [02:00<00:09,  4.82s/it]epoch 2 loss 1.31525:  93%|█████████▎| 26/28 [02:00<00:09,  4.82s/it]epoch 2 loss 1.31525:  96%|█████████▋| 27/28 [02:00<00:03,  3.49s/it]epoch 2 loss 1.32035:  96%|█████████▋| 27/28 [02:01<00:03,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.359[0m
[32m  eval_mcc = 0.6461[0m
[32m  eval_precision = 0.4683[0m
[32m  eval_recall = 0.3298[0m
[32m  ********************[0m
[32m  Best MCC:0.6461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32035: 100%|██████████| 28/28 [02:05<00:00,  3.90s/it]epoch 2 loss 1.32035: 100%|██████████| 28/28 [02:05<00:00,  4.49s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.20964:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.20964:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s]epoch 3 loss 1.20358:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6652[0m
[32m  eval_f1 = 0.3574[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.4659[0m
[32m  eval_recall = 0.3297[0m
[32m  ********************[0m
[32m  Best MCC:0.6465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20358:   7%|▋         | 2/28 [00:05<01:19,  3.06s/it]epoch 3 loss 1.21048:   7%|▋         | 2/28 [00:05<01:19,  3.06s/it]epoch 3 loss 1.21048:  11%|█         | 3/28 [00:05<00:46,  1.85s/it]epoch 3 loss 1.2166:  11%|█         | 3/28 [00:06<00:46,  1.85s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6656[0m
[32m  eval_f1 = 0.358[0m
[32m  eval_mcc = 0.6469[0m
[32m  eval_precision = 0.4653[0m
[32m  eval_recall = 0.3299[0m
[32m  ********************[0m
[32m  Best MCC:0.6469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2166:  14%|█▍        | 4/28 [00:10<01:11,  2.97s/it]epoch 3 loss 1.22168:  14%|█▍        | 4/28 [00:10<01:11,  2.97s/it]epoch 3 loss 1.22168:  18%|█▊        | 5/28 [00:10<00:46,  2.04s/it]epoch 3 loss 1.23818:  18%|█▊        | 5/28 [00:11<00:46,  2.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6659[0m
[32m  eval_f1 = 0.359[0m
[32m  eval_mcc = 0.6473[0m
[32m  eval_precision = 0.462[0m
[32m  eval_recall = 0.3306[0m
[32m  ********************[0m
[32m  Best MCC:0.6473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23818:  21%|██▏       | 6/28 [00:15<01:06,  3.03s/it]epoch 3 loss 1.25059:  21%|██▏       | 6/28 [00:16<01:06,  3.03s/it]epoch 3 loss 1.25059:  25%|██▌       | 7/28 [00:16<00:45,  2.17s/it]epoch 3 loss 1.242:  25%|██▌       | 7/28 [00:16<00:45,  2.17s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3613[0m
[32m  eval_mcc = 0.648[0m
[32m  eval_precision = 0.4755[0m
[32m  eval_recall = 0.3318[0m
[32m  ********************[0m
[32m  Best f1:0.3613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.242:  29%|██▊       | 8/28 [00:25<01:26,  4.31s/it]epoch 3 loss 1.23838:  29%|██▊       | 8/28 [00:25<01:26,  4.31s/it]epoch 3 loss 1.23838:  32%|███▏      | 9/28 [00:25<00:58,  3.09s/it]epoch 3 loss 1.23919:  32%|███▏      | 9/28 [00:25<00:58,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6662[0m
[32m  eval_f1 = 0.3626[0m
[32m  eval_mcc = 0.6475[0m
[32m  eval_precision = 0.4794[0m
[32m  eval_recall = 0.3325[0m
[32m  ********************[0m
[32m  Best f1:0.3626[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.23919:  36%|███▌      | 10/28 [00:30<01:06,  3.69s/it]epoch 3 loss 1.23947:  36%|███▌      | 10/28 [00:30<01:06,  3.69s/it]epoch 3 loss 1.23947:  39%|███▉      | 11/28 [00:30<00:45,  2.69s/it]epoch 3 loss 1.23474:  39%|███▉      | 11/28 [00:31<00:45,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3682[0m
[32m  eval_mcc = 0.648[0m
[32m  eval_precision = 0.4813[0m
[32m  eval_recall = 0.3371[0m
[32m  ********************[0m
[32m  Best f1:0.3682[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.23474:  43%|████▎     | 12/28 [00:35<00:53,  3.37s/it]epoch 3 loss 1.2343:  43%|████▎     | 12/28 [00:36<00:53,  3.37s/it] epoch 3 loss 1.2343:  46%|████▋     | 13/28 [00:36<00:37,  2.47s/it]epoch 3 loss 1.23525:  46%|████▋     | 13/28 [00:36<00:37,  2.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6671[0m
[32m  eval_f1 = 0.3719[0m
[32m  eval_mcc = 0.6481[0m
[32m  eval_precision = 0.481[0m
[32m  eval_recall = 0.3404[0m
[32m  ********************[0m
[32m  Best f1:0.3719[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23525:  50%|█████     | 14/28 [00:41<00:48,  3.44s/it]epoch 3 loss 1.23338:  50%|█████     | 14/28 [00:42<00:48,  3.44s/it]epoch 3 loss 1.23338:  54%|█████▎    | 15/28 [00:42<00:32,  2.54s/it]epoch 3 loss 1.23186:  54%|█████▎    | 15/28 [00:42<00:32,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6678[0m
[32m  eval_f1 = 0.3722[0m
[32m  eval_mcc = 0.6489[0m
[32m  eval_precision = 0.4766[0m
[32m  eval_recall = 0.3415[0m
[32m  ********************[0m
[32m  Best f1:0.3722[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23186:  57%|█████▋    | 16/28 [00:48<00:44,  3.74s/it]epoch 3 loss 1.23318:  57%|█████▋    | 16/28 [00:49<00:44,  3.74s/it]epoch 3 loss 1.23318:  61%|██████    | 17/28 [00:49<00:30,  2.74s/it]epoch 3 loss 1.22667:  61%|██████    | 17/28 [00:49<00:30,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6695[0m
[32m  eval_f1 = 0.3748[0m
[32m  eval_mcc = 0.6507[0m
[32m  eval_precision = 0.4763[0m
[32m  eval_recall = 0.3446[0m
[32m  ********************[0m
[32m  Best f1:0.3748[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6507[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22667:  64%|██████▍   | 18/28 [00:58<00:46,  4.66s/it]epoch 3 loss 1.22674:  64%|██████▍   | 18/28 [00:58<00:46,  4.66s/it]epoch 3 loss 1.22674:  68%|██████▊   | 19/28 [00:58<00:30,  3.39s/it]epoch 3 loss 1.23032:  68%|██████▊   | 19/28 [00:59<00:30,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6718[0m
[32m  eval_f1 = 0.3769[0m
[32m  eval_mcc = 0.6533[0m
[32m  eval_precision = 0.477[0m
[32m  eval_recall = 0.3466[0m
[32m  ********************[0m
[32m  Best f1:0.3769[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23032:  71%|███████▏  | 20/28 [01:05<00:34,  4.33s/it]epoch 3 loss 1.22622:  71%|███████▏  | 20/28 [01:05<00:34,  4.33s/it]epoch 3 loss 1.22622:  75%|███████▌  | 21/28 [01:05<00:22,  3.16s/it]epoch 3 loss 1.2201:  75%|███████▌  | 21/28 [01:06<00:22,  3.16s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3771[0m
[32m  eval_mcc = 0.655[0m
[32m  eval_precision = 0.4794[0m
[32m  eval_recall = 0.3471[0m
[32m  ********************[0m
[32m  Best f1:0.3771[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2201:  79%|███████▊  | 22/28 [01:14<00:28,  4.71s/it]epoch 3 loss 1.22227:  79%|███████▊  | 22/28 [01:14<00:28,  4.71s/it]epoch 3 loss 1.22227:  82%|████████▏ | 23/28 [01:14<00:17,  3.43s/it]epoch 3 loss 1.2192:  82%|████████▏ | 23/28 [01:14<00:17,  3.43s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6716[0m
[32m  eval_f1 = 0.3765[0m
[32m  eval_mcc = 0.6537[0m
[32m  eval_precision = 0.479[0m
[32m  eval_recall = 0.3466[0m

epoch 3 loss 1.2192:  86%|████████▌ | 24/28 [01:18<00:14,  3.54s/it]epoch 3 loss 1.22474:  86%|████████▌ | 24/28 [01:18<00:14,  3.54s/it]epoch 3 loss 1.22474:  89%|████████▉ | 25/28 [01:18<00:07,  2.60s/it]epoch 3 loss 1.2223:  89%|████████▉ | 25/28 [01:19<00:07,  2.60s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6711[0m
[32m  eval_f1 = 0.3765[0m
[32m  eval_mcc = 0.6534[0m
[32m  eval_precision = 0.4804[0m
[32m  eval_recall = 0.3465[0m

epoch 3 loss 1.2223:  93%|█████████▎| 26/28 [01:22<00:05,  2.96s/it]epoch 3 loss 1.22365:  93%|█████████▎| 26/28 [01:22<00:05,  2.96s/it]epoch 3 loss 1.22365:  96%|█████████▋| 27/28 [01:22<00:02,  2.19s/it]epoch 3 loss 1.228:  96%|█████████▋| 27/28 [01:23<00:02,  2.19s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6711[0m
[32m  eval_f1 = 0.3762[0m
[32m  eval_mcc = 0.6533[0m
[32m  eval_precision = 0.4813[0m
[32m  eval_recall = 0.3461[0m

epoch 3 loss 1.228: 100%|██████████| 28/28 [01:26<00:00,  2.61s/it]epoch 3 loss 1.228: 100%|██████████| 28/28 [01:26<00:00,  3.09s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.20418:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.20418:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s]epoch 4 loss 1.23775:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6713[0m
[32m  eval_f1 = 0.3773[0m
[32m  eval_mcc = 0.6533[0m
[32m  eval_precision = 0.481[0m
[32m  eval_recall = 0.347[0m
[32m  ********************[0m
[32m  Best f1:0.3773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.23775:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 4 loss 1.25178:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 4 loss 1.25178:  11%|█         | 3/28 [00:05<00:47,  1.89s/it]epoch 4 loss 1.24054:  11%|█         | 3/28 [00:06<00:47,  1.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6714[0m
[32m  eval_f1 = 0.3778[0m
[32m  eval_mcc = 0.6531[0m
[32m  eval_precision = 0.4771[0m
[32m  eval_recall = 0.3484[0m
[32m  ********************[0m
[32m  Best f1:0.3778[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24054:  14%|█▍        | 4/28 [00:10<01:15,  3.14s/it]epoch 4 loss 1.22427:  14%|█▍        | 4/28 [00:11<01:15,  3.14s/it]epoch 4 loss 1.22427:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it]epoch 4 loss 1.21786:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6705[0m
[32m  eval_f1 = 0.3748[0m
[32m  eval_mcc = 0.652[0m
[32m  eval_precision = 0.4759[0m
[32m  eval_recall = 0.3456[0m

epoch 4 loss 1.21786:  21%|██▏       | 6/28 [00:15<00:59,  2.72s/it]epoch 4 loss 1.21068:  21%|██▏       | 6/28 [00:15<00:59,  2.72s/it]epoch 4 loss 1.21068:  25%|██▌       | 7/28 [00:15<00:41,  1.96s/it]epoch 4 loss 1.21095:  25%|██▌       | 7/28 [00:15<00:41,  1.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6702[0m
[32m  eval_f1 = 0.3746[0m
[32m  eval_mcc = 0.6515[0m
[32m  eval_precision = 0.4747[0m
[32m  eval_recall = 0.3454[0m

epoch 4 loss 1.21095:  29%|██▊       | 8/28 [00:19<00:50,  2.55s/it]epoch 4 loss 1.212:  29%|██▊       | 8/28 [00:19<00:50,  2.55s/it]  epoch 4 loss 1.212:  32%|███▏      | 9/28 [00:19<00:35,  1.88s/it]epoch 4 loss 1.21064:  32%|███▏      | 9/28 [00:20<00:35,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6707[0m
[32m  eval_f1 = 0.3768[0m
[32m  eval_mcc = 0.6521[0m
[32m  eval_precision = 0.4791[0m
[32m  eval_recall = 0.3474[0m

epoch 4 loss 1.21064:  36%|███▌      | 10/28 [00:23<00:44,  2.47s/it]epoch 4 loss 1.21329:  36%|███▌      | 10/28 [00:23<00:44,  2.47s/it]epoch 4 loss 1.21329:  39%|███▉      | 11/28 [00:23<00:31,  1.84s/it]epoch 4 loss 1.21994:  39%|███▉      | 11/28 [00:24<00:31,  1.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6717[0m
[32m  eval_f1 = 0.378[0m
[32m  eval_mcc = 0.653[0m
[32m  eval_precision = 0.4797[0m
[32m  eval_recall = 0.3485[0m
[32m  ********************[0m
[32m  Best f1:0.378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.21994:  43%|████▎     | 12/28 [00:29<00:45,  2.83s/it]epoch 4 loss 1.22354:  43%|████▎     | 12/28 [00:29<00:45,  2.83s/it]epoch 4 loss 1.22354:  46%|████▋     | 13/28 [00:29<00:31,  2.09s/it]epoch 4 loss 1.21693:  46%|████▋     | 13/28 [00:29<00:31,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6729[0m
[32m  eval_f1 = 0.3784[0m
[32m  eval_mcc = 0.6543[0m
[32m  eval_precision = 0.4783[0m
[32m  eval_recall = 0.3489[0m
[32m  ********************[0m
[32m  Best f1:0.3784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.21693:  50%|█████     | 14/28 [00:34<00:42,  3.04s/it]epoch 4 loss 1.21957:  50%|█████     | 14/28 [00:35<00:42,  3.04s/it]epoch 4 loss 1.21957:  54%|█████▎    | 15/28 [00:35<00:29,  2.24s/it]epoch 4 loss 1.2289:  54%|█████▎    | 15/28 [00:35<00:29,  2.24s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6737[0m
[32m  eval_f1 = 0.3811[0m
[32m  eval_mcc = 0.6552[0m
[32m  eval_precision = 0.4854[0m
[32m  eval_recall = 0.3514[0m
[32m  ********************[0m
[32m  Best f1:0.3811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2289:  57%|█████▋    | 16/28 [00:41<00:42,  3.50s/it]epoch 4 loss 1.22605:  57%|█████▋    | 16/28 [00:41<00:42,  3.50s/it]epoch 4 loss 1.22605:  61%|██████    | 17/28 [00:41<00:28,  2.58s/it]epoch 4 loss 1.22426:  61%|██████    | 17/28 [00:42<00:28,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6742[0m
[32m  eval_f1 = 0.3822[0m
[32m  eval_mcc = 0.6557[0m
[32m  eval_precision = 0.4854[0m
[32m  eval_recall = 0.3527[0m
[32m  ********************[0m
[32m  Best f1:0.3822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6557[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22426:  64%|██████▍   | 18/28 [00:47<00:36,  3.62s/it]epoch 4 loss 1.22156:  64%|██████▍   | 18/28 [00:48<00:36,  3.62s/it]epoch 4 loss 1.22156:  68%|██████▊   | 19/28 [00:48<00:23,  2.66s/it]epoch 4 loss 1.21344:  68%|██████▊   | 19/28 [00:48<00:23,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6744[0m
[32m  eval_f1 = 0.3847[0m
[32m  eval_mcc = 0.656[0m
[32m  eval_precision = 0.4942[0m
[32m  eval_recall = 0.3542[0m
[32m  ********************[0m
[32m  Best f1:0.3847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21344:  71%|███████▏  | 20/28 [00:54<00:30,  3.81s/it]epoch 4 loss 1.2082:  71%|███████▏  | 20/28 [00:55<00:30,  3.81s/it] epoch 4 loss 1.2082:  75%|███████▌  | 21/28 [00:55<00:19,  2.79s/it]epoch 4 loss 1.20544:  75%|███████▌  | 21/28 [00:55<00:19,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6748[0m
[32m  eval_f1 = 0.3902[0m
[32m  eval_mcc = 0.6565[0m
[32m  eval_precision = 0.5033[0m
[32m  eval_recall = 0.3579[0m
[32m  ********************[0m
[32m  Best f1:0.3902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20544:  79%|███████▊  | 22/28 [01:01<00:23,  3.91s/it]epoch 4 loss 1.19877:  79%|███████▊  | 22/28 [01:02<00:23,  3.91s/it]epoch 4 loss 1.19877:  82%|████████▏ | 23/28 [01:02<00:14,  2.87s/it]epoch 4 loss 1.19724:  82%|████████▏ | 23/28 [01:02<00:14,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.675[0m
[32m  eval_f1 = 0.3903[0m
[32m  eval_mcc = 0.6567[0m
[32m  eval_precision = 0.5022[0m
[32m  eval_recall = 0.358[0m
[32m  ********************[0m
[32m  Best f1:0.3903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19724:  86%|████████▌ | 24/28 [01:08<00:15,  3.95s/it]epoch 4 loss 1.1902:  86%|████████▌ | 24/28 [01:09<00:15,  3.95s/it] epoch 4 loss 1.1902:  89%|████████▉ | 25/28 [01:09<00:08,  2.89s/it]epoch 4 loss 1.19094:  89%|████████▉ | 25/28 [01:09<00:08,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6751[0m
[32m  eval_f1 = 0.3903[0m
[32m  eval_mcc = 0.6568[0m
[32m  eval_precision = 0.502[0m
[32m  eval_recall = 0.358[0m
[32m  ********************[0m
[32m  Best MCC:0.6568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19094:  93%|█████████▎| 26/28 [01:14<00:06,  3.49s/it]epoch 4 loss 1.188:  93%|█████████▎| 26/28 [01:14<00:06,  3.49s/it]  epoch 4 loss 1.188:  96%|█████████▋| 27/28 [01:14<00:02,  2.57s/it]epoch 4 loss 1.18334:  96%|█████████▋| 27/28 [01:14<00:02,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6752[0m
[32m  eval_f1 = 0.3904[0m
[32m  eval_mcc = 0.6569[0m
[32m  eval_precision = 0.5022[0m
[32m  eval_recall = 0.358[0m
[32m  ********************[0m
[32m  Best f1:0.3904[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6569[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18334: 100%|██████████| 28/28 [01:20<00:00,  3.51s/it]epoch 4 loss 1.18334: 100%|██████████| 28/28 [01:20<00:00,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.70it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6752[0m
[32m  eval_f1 = 0.3904[0m
[32m  eval_mcc = 0.6569[0m
[32m  eval_precision = 0.5022[0m
[32m  eval_recall = 0.358[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.2999[0m
[32m  eval_mcc = 0.6345[0m
[32m  eval_precision = 0.3965[0m
[32m  eval_recall = 0.2805[0m

