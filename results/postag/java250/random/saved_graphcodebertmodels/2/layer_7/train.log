[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=7, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.73121:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.73121:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.72377:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0112[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = 0.0049[0m
[32m  eval_precision = 0.002[0m
[32m  eval_recall = 0.0033[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.72377:   7%|▋         | 2/28 [00:06<01:30,  3.50s/it]epoch 0 loss 5.71834:   7%|▋         | 2/28 [00:06<01:30,  3.50s/it]epoch 0 loss 5.71834:  11%|█         | 3/28 [00:06<00:52,  2.08s/it]epoch 0 loss 5.70157:  11%|█         | 3/28 [00:06<00:52,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0152[0m
[32m  eval_f1 = 0.0022[0m
[32m  eval_mcc = 0.0044[0m
[32m  eval_precision = 0.0027[0m
[32m  eval_recall = 0.0044[0m
[32m  ********************[0m
[32m  Best f1:0.0022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.70157:  14%|█▍        | 4/28 [00:11<01:19,  3.32s/it]epoch 0 loss 5.67997:  14%|█▍        | 4/28 [00:12<01:19,  3.32s/it]epoch 0 loss 5.67997:  18%|█▊        | 5/28 [00:12<00:52,  2.27s/it]epoch 0 loss 5.65233:  18%|█▊        | 5/28 [00:12<00:52,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0287[0m
[32m  eval_f1 = 0.0036[0m
[32m  eval_mcc = 0.0065[0m
[32m  eval_precision = 0.0038[0m
[32m  eval_recall = 0.0083[0m
[32m  ********************[0m
[32m  Best f1:0.0036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.65233:  21%|██▏       | 6/28 [00:18<01:21,  3.69s/it]epoch 0 loss 5.61459:  21%|██▏       | 6/28 [00:19<01:21,  3.69s/it]epoch 0 loss 5.61459:  25%|██▌       | 7/28 [00:19<00:55,  2.62s/it]epoch 0 loss 5.56891:  25%|██▌       | 7/28 [00:19<00:55,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0483[0m
[32m  eval_f1 = 0.0055[0m
[32m  eval_mcc = 0.0137[0m
[32m  eval_precision = 0.0086[0m
[32m  eval_recall = 0.0108[0m
[32m  ********************[0m
[32m  Best f1:0.0055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.56891:  29%|██▊       | 8/28 [00:25<01:17,  3.86s/it]epoch 0 loss 5.51738:  29%|██▊       | 8/28 [00:25<01:17,  3.86s/it]epoch 0 loss 5.51738:  32%|███▏      | 9/28 [00:25<00:52,  2.79s/it]epoch 0 loss 5.46188:  32%|███▏      | 9/28 [00:26<00:52,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0615[0m
[32m  eval_f1 = 0.0135[0m
[32m  eval_mcc = 0.0206[0m
[32m  eval_precision = 0.0172[0m
[32m  eval_recall = 0.0179[0m
[32m  ********************[0m
[32m  Best f1:0.0135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.46188:  36%|███▌      | 10/28 [00:32<01:10,  3.93s/it]epoch 0 loss 5.39784:  36%|███▌      | 10/28 [00:32<01:10,  3.93s/it]epoch 0 loss 5.39784:  39%|███▉      | 11/28 [00:32<00:48,  2.86s/it]epoch 0 loss 5.33099:  39%|███▉      | 11/28 [00:33<00:48,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0718[0m
[32m  eval_f1 = 0.0169[0m
[32m  eval_mcc = 0.0293[0m
[32m  eval_precision = 0.023[0m
[32m  eval_recall = 0.0202[0m
[32m  ********************[0m
[32m  Best f1:0.0169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.33099:  43%|████▎     | 12/28 [00:38<00:59,  3.71s/it]epoch 0 loss 5.25944:  43%|████▎     | 12/28 [00:39<00:59,  3.71s/it]epoch 0 loss 5.25944:  46%|████▋     | 13/28 [00:39<00:40,  2.71s/it]epoch 0 loss 5.18595:  46%|████▋     | 13/28 [00:39<00:40,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.086[0m
[32m  eval_f1 = 0.0192[0m
[32m  eval_mcc = 0.0424[0m
[32m  eval_precision = 0.0289[0m
[32m  eval_recall = 0.0226[0m
[32m  ********************[0m
[32m  Best f1:0.0192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.18595:  50%|█████     | 14/28 [00:45<00:54,  3.87s/it]epoch 0 loss 5.10709:  50%|█████     | 14/28 [00:45<00:54,  3.87s/it]epoch 0 loss 5.10709:  54%|█████▎    | 15/28 [00:45<00:36,  2.84s/it]epoch 0 loss 5.02445:  54%|█████▎    | 15/28 [00:46<00:36,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1161[0m
[32m  eval_f1 = 0.0244[0m
[32m  eval_mcc = 0.0707[0m
[32m  eval_precision = 0.0433[0m
[32m  eval_recall = 0.0275[0m
[32m  ********************[0m
[32m  Best f1:0.0244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0707[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.02445:  57%|█████▋    | 16/28 [00:53<00:52,  4.37s/it]epoch 0 loss 4.95037:  57%|█████▋    | 16/28 [00:54<00:52,  4.37s/it]epoch 0 loss 4.95037:  61%|██████    | 17/28 [00:54<00:35,  3.19s/it]epoch 0 loss 4.87435:  61%|██████    | 17/28 [00:54<00:35,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1878[0m
[32m  eval_f1 = 0.0391[0m
[32m  eval_mcc = 0.1429[0m
[32m  eval_precision = 0.0633[0m
[32m  eval_recall = 0.0409[0m
[32m  ********************[0m
[32m  Best f1:0.0391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1429[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.87435:  64%|██████▍   | 18/28 [01:00<00:41,  4.18s/it]epoch 0 loss 4.79511:  64%|██████▍   | 18/28 [01:01<00:41,  4.18s/it]epoch 0 loss 4.79511:  68%|██████▊   | 19/28 [01:01<00:27,  3.05s/it]epoch 0 loss 4.72666:  68%|██████▊   | 19/28 [01:01<00:27,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.243[0m
[32m  eval_f1 = 0.0431[0m
[32m  eval_mcc = 0.2017[0m
[32m  eval_precision = 0.074[0m
[32m  eval_recall = 0.0454[0m
[32m  ********************[0m
[32m  Best f1:0.0431[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.72666:  71%|███████▏  | 20/28 [01:09<00:37,  4.73s/it]epoch 0 loss 4.65099:  71%|███████▏  | 20/28 [01:10<00:37,  4.73s/it]epoch 0 loss 4.65099:  75%|███████▌  | 21/28 [01:10<00:24,  3.43s/it]epoch 0 loss 4.57816:  75%|███████▌  | 21/28 [01:10<00:24,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2979[0m
[32m  eval_f1 = 0.0484[0m
[32m  eval_mcc = 0.2563[0m
[32m  eval_precision = 0.0984[0m
[32m  eval_recall = 0.051[0m
[32m  ********************[0m
[32m  Best f1:0.0484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.57816:  79%|███████▊  | 22/28 [01:16<00:26,  4.36s/it]epoch 0 loss 4.50914:  79%|███████▊  | 22/28 [01:17<00:26,  4.36s/it]epoch 0 loss 4.50914:  82%|████████▏ | 23/28 [01:17<00:15,  3.18s/it]epoch 0 loss 4.43896:  82%|████████▏ | 23/28 [01:17<00:15,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3537[0m
[32m  eval_f1 = 0.0651[0m
[32m  eval_mcc = 0.3084[0m
[32m  eval_precision = 0.1504[0m
[32m  eval_recall = 0.0658[0m
[32m  ********************[0m
[32m  Best f1:0.0651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.43896:  86%|████████▌ | 24/28 [01:26<00:19,  4.92s/it]epoch 0 loss 4.37552:  86%|████████▌ | 24/28 [01:26<00:19,  4.92s/it]epoch 0 loss 4.37552:  89%|████████▉ | 25/28 [01:26<00:10,  3.57s/it]epoch 0 loss 4.31296:  89%|████████▉ | 25/28 [01:27<00:10,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3944[0m
[32m  eval_f1 = 0.0911[0m
[32m  eval_mcc = 0.3539[0m
[32m  eval_precision = 0.1565[0m
[32m  eval_recall = 0.0838[0m
[32m  ********************[0m
[32m  Best f1:0.0911[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3539[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.31296:  93%|█████████▎| 26/28 [01:33<00:08,  4.46s/it]epoch 0 loss 4.25346:  93%|█████████▎| 26/28 [01:33<00:08,  4.46s/it]epoch 0 loss 4.25346:  96%|█████████▋| 27/28 [01:33<00:03,  3.25s/it]epoch 0 loss 4.19766:  96%|█████████▋| 27/28 [01:33<00:03,  3.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4198[0m
[32m  eval_f1 = 0.1112[0m
[32m  eval_mcc = 0.3885[0m
[32m  eval_precision = 0.1732[0m
[32m  eval_recall = 0.1006[0m
[32m  ********************[0m
[32m  Best f1:0.1112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3885[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.19766: 100%|██████████| 28/28 [01:39<00:00,  4.16s/it]epoch 0 loss 4.19766: 100%|██████████| 28/28 [01:39<00:00,  3.57s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.50118:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.50118:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s]epoch 1 loss 2.41636:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4613[0m
[32m  eval_f1 = 0.1287[0m
[32m  eval_mcc = 0.4351[0m
[32m  eval_precision = 0.1756[0m
[32m  eval_recall = 0.1181[0m
[32m  ********************[0m
[32m  Best f1:0.1287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.41636:   7%|▋         | 2/28 [00:06<01:44,  4.02s/it]epoch 1 loss 2.38897:   7%|▋         | 2/28 [00:07<01:44,  4.02s/it]epoch 1 loss 2.38897:  11%|█         | 3/28 [00:07<00:59,  2.38s/it]epoch 1 loss 2.36006:  11%|█         | 3/28 [00:07<00:59,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5086[0m
[32m  eval_f1 = 0.1423[0m
[32m  eval_mcc = 0.4829[0m
[32m  eval_precision = 0.1989[0m
[32m  eval_recall = 0.1374[0m
[32m  ********************[0m
[32m  Best f1:0.1423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.36006:  14%|█▍        | 4/28 [00:13<01:37,  4.05s/it]epoch 1 loss 2.33591:  14%|█▍        | 4/28 [00:14<01:37,  4.05s/it]epoch 1 loss 2.33591:  18%|█▊        | 5/28 [00:14<01:03,  2.74s/it]epoch 1 loss 2.32304:  18%|█▊        | 5/28 [00:14<01:03,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5479[0m
[32m  eval_f1 = 0.1657[0m
[32m  eval_mcc = 0.5214[0m
[32m  eval_precision = 0.216[0m
[32m  eval_recall = 0.1598[0m
[32m  ********************[0m
[32m  Best f1:0.1657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32304:  21%|██▏       | 6/28 [00:23<01:46,  4.85s/it]epoch 1 loss 2.30498:  21%|██▏       | 6/28 [00:23<01:46,  4.85s/it]epoch 1 loss 2.30498:  25%|██▌       | 7/28 [00:23<01:11,  3.40s/it]epoch 1 loss 2.27576:  25%|██▌       | 7/28 [00:24<01:11,  3.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5666[0m
[32m  eval_f1 = 0.1777[0m
[32m  eval_mcc = 0.5397[0m
[32m  eval_precision = 0.2176[0m
[32m  eval_recall = 0.1733[0m
[32m  ********************[0m
[32m  Best f1:0.1777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5397[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27576:  29%|██▊       | 8/28 [00:32<01:40,  5.01s/it]epoch 1 loss 2.24114:  29%|██▊       | 8/28 [00:32<01:40,  5.01s/it]epoch 1 loss 2.24114:  32%|███▏      | 9/28 [00:32<01:07,  3.58s/it]epoch 1 loss 2.20405:  32%|███▏      | 9/28 [00:33<01:07,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5761[0m
[32m  eval_f1 = 0.1825[0m
[32m  eval_mcc = 0.5501[0m
[32m  eval_precision = 0.2291[0m
[32m  eval_recall = 0.1771[0m
[32m  ********************[0m
[32m  Best f1:0.1825[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5501[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20405:  36%|███▌      | 10/28 [00:41<01:31,  5.10s/it]epoch 1 loss 2.17902:  36%|███▌      | 10/28 [00:41<01:31,  5.10s/it]epoch 1 loss 2.17902:  39%|███▉      | 11/28 [00:41<01:02,  3.67s/it]epoch 1 loss 2.16714:  39%|███▉      | 11/28 [00:41<01:02,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5815[0m
[32m  eval_f1 = 0.1847[0m
[32m  eval_mcc = 0.5568[0m
[32m  eval_precision = 0.2277[0m
[32m  eval_recall = 0.1775[0m
[32m  ********************[0m
[32m  Best f1:0.1847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16714:  43%|████▎     | 12/28 [00:49<01:19,  4.97s/it]epoch 1 loss 2.14885:  43%|████▎     | 12/28 [00:49<01:19,  4.97s/it]epoch 1 loss 2.14885:  46%|████▋     | 13/28 [00:49<00:53,  3.60s/it]epoch 1 loss 2.11909:  46%|████▋     | 13/28 [00:50<00:53,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5859[0m
[32m  eval_f1 = 0.1877[0m
[32m  eval_mcc = 0.5627[0m
[32m  eval_precision = 0.248[0m
[32m  eval_recall = 0.179[0m
[32m  ********************[0m
[32m  Best f1:0.1877[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11909:  50%|█████     | 14/28 [00:58<01:11,  5.13s/it]epoch 1 loss 2.09724:  50%|█████     | 14/28 [00:59<01:11,  5.13s/it]epoch 1 loss 2.09724:  54%|█████▎    | 15/28 [00:59<00:48,  3.71s/it]epoch 1 loss 2.0825:  54%|█████▎    | 15/28 [00:59<00:48,  3.71s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5925[0m
[32m  eval_f1 = 0.1976[0m
[32m  eval_mcc = 0.5703[0m
[32m  eval_precision = 0.2683[0m
[32m  eval_recall = 0.186[0m
[32m  ********************[0m
[32m  Best f1:0.1976[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5703[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0825:  57%|█████▋    | 16/28 [01:07<01:02,  5.23s/it]epoch 1 loss 2.06428:  57%|█████▋    | 16/28 [01:08<01:02,  5.23s/it]epoch 1 loss 2.06428:  61%|██████    | 17/28 [01:08<00:41,  3.78s/it]epoch 1 loss 2.04156:  61%|██████    | 17/28 [01:08<00:41,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5966[0m
[32m  eval_f1 = 0.2162[0m
[32m  eval_mcc = 0.574[0m
[32m  eval_precision = 0.307[0m
[32m  eval_recall = 0.2026[0m
[32m  ********************[0m
[32m  Best f1:0.2162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04156:  64%|██████▍   | 18/28 [01:18<00:56,  5.62s/it]epoch 1 loss 2.026:  64%|██████▍   | 18/28 [01:18<00:56,  5.62s/it]  epoch 1 loss 2.026:  68%|██████▊   | 19/28 [01:18<00:36,  4.05s/it]epoch 1 loss 2.01742:  68%|██████▊   | 19/28 [01:18<00:36,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6004[0m
[32m  eval_f1 = 0.235[0m
[32m  eval_mcc = 0.5774[0m
[32m  eval_precision = 0.3195[0m
[32m  eval_recall = 0.2214[0m
[32m  ********************[0m
[32m  Best f1:0.235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5774[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01742:  71%|███████▏  | 20/28 [01:28<00:46,  5.86s/it]epoch 1 loss 1.99875:  71%|███████▏  | 20/28 [01:29<00:46,  5.86s/it]epoch 1 loss 1.99875:  75%|███████▌  | 21/28 [01:29<00:29,  4.22s/it]epoch 1 loss 1.98308:  75%|███████▌  | 21/28 [01:29<00:29,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6037[0m
[32m  eval_f1 = 0.2398[0m
[32m  eval_mcc = 0.581[0m
[32m  eval_precision = 0.3201[0m
[32m  eval_recall = 0.2268[0m
[32m  ********************[0m
[32m  Best f1:0.2398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98308:  79%|███████▊  | 22/28 [01:39<00:36,  6.13s/it]epoch 1 loss 1.96442:  79%|███████▊  | 22/28 [01:40<00:36,  6.13s/it]epoch 1 loss 1.96442:  82%|████████▏ | 23/28 [01:40<00:22,  4.42s/it]epoch 1 loss 1.95303:  82%|████████▏ | 23/28 [01:40<00:22,  4.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6057[0m
[32m  eval_f1 = 0.2434[0m
[32m  eval_mcc = 0.5832[0m
[32m  eval_precision = 0.328[0m
[32m  eval_recall = 0.2305[0m
[32m  ********************[0m
[32m  Best f1:0.2434[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95303:  86%|████████▌ | 24/28 [01:48<00:22,  5.63s/it]epoch 1 loss 1.93968:  86%|████████▌ | 24/28 [01:48<00:22,  5.63s/it]epoch 1 loss 1.93968:  89%|████████▉ | 25/28 [01:48<00:12,  4.06s/it]epoch 1 loss 1.93064:  89%|████████▉ | 25/28 [01:49<00:12,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6079[0m
[32m  eval_f1 = 0.2454[0m
[32m  eval_mcc = 0.5863[0m
[32m  eval_precision = 0.3176[0m
[32m  eval_recall = 0.2317[0m
[32m  ********************[0m
[32m  Best f1:0.2454[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5863[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93064:  93%|█████████▎| 26/28 [02:01<00:13,  6.56s/it]epoch 1 loss 1.9157:  93%|█████████▎| 26/28 [02:01<00:13,  6.56s/it] epoch 1 loss 1.9157:  96%|█████████▋| 27/28 [02:01<00:04,  4.72s/it]epoch 1 loss 1.89884:  96%|█████████▋| 27/28 [02:01<00:04,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6112[0m
[32m  eval_f1 = 0.248[0m
[32m  eval_mcc = 0.5901[0m
[32m  eval_precision = 0.3291[0m
[32m  eval_recall = 0.2332[0m
[32m  ********************[0m
[32m  Best f1:0.248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5901[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89884: 100%|██████████| 28/28 [02:11<00:00,  6.13s/it]epoch 1 loss 1.89884: 100%|██████████| 28/28 [02:11<00:00,  4.68s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.43791:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.43791:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 2 loss 1.43211:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6139[0m
[32m  eval_f1 = 0.2528[0m
[32m  eval_mcc = 0.5931[0m
[32m  eval_precision = 0.338[0m
[32m  eval_recall = 0.2354[0m
[32m  ********************[0m
[32m  Best f1:0.2528[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5931[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43211:   7%|▋         | 2/28 [00:09<02:18,  5.31s/it]epoch 2 loss 1.4487:   7%|▋         | 2/28 [00:09<02:18,  5.31s/it] epoch 2 loss 1.4487:  11%|█         | 3/28 [00:09<01:16,  3.08s/it]epoch 2 loss 1.45273:  11%|█         | 3/28 [00:09<01:16,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6163[0m
[32m  eval_f1 = 0.2552[0m
[32m  eval_mcc = 0.5954[0m
[32m  eval_precision = 0.3485[0m
[32m  eval_recall = 0.2389[0m
[32m  ********************[0m
[32m  Best f1:0.2552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5954[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45273:  14%|█▍        | 4/28 [00:19<02:21,  5.90s/it]epoch 2 loss 1.46529:  14%|█▍        | 4/28 [00:20<02:21,  5.90s/it]epoch 2 loss 1.46529:  18%|█▊        | 5/28 [00:20<01:30,  3.93s/it]epoch 2 loss 1.4605:  18%|█▊        | 5/28 [00:20<01:30,  3.93s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6182[0m
[32m  eval_f1 = 0.2609[0m
[32m  eval_mcc = 0.5972[0m
[32m  eval_precision = 0.3654[0m
[32m  eval_recall = 0.2433[0m
[32m  ********************[0m
[32m  Best f1:0.2609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5972[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4605:  21%|██▏       | 6/28 [00:31<02:19,  6.36s/it]epoch 2 loss 1.47475:  21%|██▏       | 6/28 [00:31<02:19,  6.36s/it]epoch 2 loss 1.47475:  25%|██▌       | 7/28 [00:31<01:32,  4.42s/it]epoch 2 loss 1.46263:  25%|██▌       | 7/28 [00:32<01:32,  4.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6203[0m
[32m  eval_f1 = 0.2643[0m
[32m  eval_mcc = 0.5993[0m
[32m  eval_precision = 0.3718[0m
[32m  eval_recall = 0.2458[0m
[32m  ********************[0m
[32m  Best f1:0.2643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5993[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46263:  29%|██▊       | 8/28 [00:41<02:02,  6.12s/it]epoch 2 loss 1.46346:  29%|██▊       | 8/28 [00:41<02:02,  6.12s/it]epoch 2 loss 1.46346:  32%|███▏      | 9/28 [00:41<01:22,  4.33s/it]epoch 2 loss 1.47964:  32%|███▏      | 9/28 [00:42<01:22,  4.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6231[0m
[32m  eval_f1 = 0.2673[0m
[32m  eval_mcc = 0.6022[0m
[32m  eval_precision = 0.3636[0m
[32m  eval_recall = 0.2489[0m
[32m  ********************[0m
[32m  Best f1:0.2673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47964:  36%|███▌      | 10/28 [00:50<01:43,  5.78s/it]epoch 2 loss 1.47182:  36%|███▌      | 10/28 [00:51<01:43,  5.78s/it]epoch 2 loss 1.47182:  39%|███▉      | 11/28 [00:51<01:10,  4.14s/it]epoch 2 loss 1.47204:  39%|███▉      | 11/28 [00:51<01:10,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.57it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6253[0m
[32m  eval_f1 = 0.272[0m
[32m  eval_mcc = 0.6041[0m
[32m  eval_precision = 0.3712[0m
[32m  eval_recall = 0.2531[0m
[32m  ********************[0m
[32m  Best f1:0.272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47204:  43%|████▎     | 12/28 [01:04<01:49,  6.87s/it]epoch 2 loss 1.46906:  43%|████▎     | 12/28 [01:04<01:49,  6.87s/it]epoch 2 loss 1.46906:  46%|████▋     | 13/28 [01:04<01:13,  4.91s/it]epoch 2 loss 1.47638:  46%|████▋     | 13/28 [01:05<01:13,  4.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6291[0m
[32m  eval_f1 = 0.2756[0m
[32m  eval_mcc = 0.6079[0m
[32m  eval_precision = 0.3693[0m
[32m  eval_recall = 0.2566[0m
[32m  ********************[0m
[32m  Best f1:0.2756[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47638:  50%|█████     | 14/28 [01:14<01:27,  6.26s/it]epoch 2 loss 1.46783:  50%|█████     | 14/28 [01:14<01:27,  6.26s/it]epoch 2 loss 1.46783:  54%|█████▎    | 15/28 [01:14<00:58,  4.49s/it]epoch 2 loss 1.4719:  54%|█████▎    | 15/28 [01:15<00:58,  4.49s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6309[0m
[32m  eval_f1 = 0.2783[0m
[32m  eval_mcc = 0.61[0m
[32m  eval_precision = 0.3674[0m
[32m  eval_recall = 0.2589[0m
[32m  ********************[0m
[32m  Best f1:0.2783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.61[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4719:  57%|█████▋    | 16/28 [01:25<01:15,  6.29s/it]epoch 2 loss 1.47094:  57%|█████▋    | 16/28 [01:25<01:15,  6.29s/it]epoch 2 loss 1.47094:  61%|██████    | 17/28 [01:25<00:49,  4.52s/it]epoch 2 loss 1.46997:  61%|██████    | 17/28 [01:25<00:49,  4.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6341[0m
[32m  eval_f1 = 0.28[0m
[32m  eval_mcc = 0.6138[0m
[32m  eval_precision = 0.3699[0m
[32m  eval_recall = 0.2602[0m
[32m  ********************[0m
[32m  Best f1:0.28[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46997:  64%|██████▍   | 18/28 [01:33<00:54,  5.43s/it]epoch 2 loss 1.47389:  64%|██████▍   | 18/28 [01:33<00:54,  5.43s/it]epoch 2 loss 1.47389:  68%|██████▊   | 19/28 [01:33<00:35,  3.93s/it]epoch 2 loss 1.47492:  68%|██████▊   | 19/28 [01:33<00:35,  3.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6358[0m
[32m  eval_f1 = 0.2828[0m
[32m  eval_mcc = 0.6155[0m
[32m  eval_precision = 0.3787[0m
[32m  eval_recall = 0.2627[0m
[32m  ********************[0m
[32m  Best f1:0.2828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47492:  71%|███████▏  | 20/28 [01:45<00:51,  6.44s/it]epoch 2 loss 1.47315:  71%|███████▏  | 20/28 [01:46<00:51,  6.44s/it]epoch 2 loss 1.47315:  75%|███████▌  | 21/28 [01:46<00:32,  4.64s/it]epoch 2 loss 1.46643:  75%|███████▌  | 21/28 [01:46<00:32,  4.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6371[0m
[32m  eval_f1 = 0.2833[0m
[32m  eval_mcc = 0.6167[0m
[32m  eval_precision = 0.3868[0m
[32m  eval_recall = 0.2634[0m
[32m  ********************[0m
[32m  Best f1:0.2833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46643:  79%|███████▊  | 22/28 [01:51<00:29,  4.94s/it]epoch 2 loss 1.46027:  79%|███████▊  | 22/28 [01:52<00:29,  4.94s/it]epoch 2 loss 1.46027:  82%|████████▏ | 23/28 [01:52<00:17,  3.58s/it]epoch 2 loss 1.46214:  82%|████████▏ | 23/28 [01:52<00:17,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6386[0m
[32m  eval_f1 = 0.2886[0m
[32m  eval_mcc = 0.618[0m
[32m  eval_precision = 0.4034[0m
[32m  eval_recall = 0.2671[0m
[32m  ********************[0m
[32m  Best f1:0.2886[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46214:  86%|████████▌ | 24/28 [01:58<00:17,  4.41s/it]epoch 2 loss 1.46186:  86%|████████▌ | 24/28 [01:59<00:17,  4.41s/it]epoch 2 loss 1.46186:  89%|████████▉ | 25/28 [01:59<00:09,  3.21s/it]epoch 2 loss 1.45709:  89%|████████▉ | 25/28 [01:59<00:09,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6405[0m
[32m  eval_f1 = 0.2909[0m
[32m  eval_mcc = 0.6202[0m
[32m  eval_precision = 0.4112[0m
[32m  eval_recall = 0.2686[0m
[32m  ********************[0m
[32m  Best f1:0.2909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45709:  93%|█████████▎| 26/28 [02:05<00:08,  4.19s/it]epoch 2 loss 1.45175:  93%|█████████▎| 26/28 [02:05<00:08,  4.19s/it]epoch 2 loss 1.45175:  96%|█████████▋| 27/28 [02:05<00:03,  3.06s/it]epoch 2 loss 1.44989:  96%|█████████▋| 27/28 [02:06<00:03,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6405[0m
[32m  eval_f1 = 0.2926[0m
[32m  eval_mcc = 0.6205[0m
[32m  eval_precision = 0.4113[0m
[32m  eval_recall = 0.2691[0m
[32m  ********************[0m
[32m  Best f1:0.2926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44989: 100%|██████████| 28/28 [02:12<00:00,  4.03s/it]epoch 2 loss 1.44989: 100%|██████████| 28/28 [02:12<00:00,  4.72s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.33888:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.33888:   4%|▎         | 1/28 [00:00<00:11,  2.28it/s]epoch 3 loss 1.42322:   4%|▎         | 1/28 [00:00<00:11,  2.28it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6406[0m
[32m  eval_f1 = 0.2956[0m
[32m  eval_mcc = 0.6207[0m
[32m  eval_precision = 0.4106[0m
[32m  eval_recall = 0.2721[0m
[32m  ********************[0m
[32m  Best f1:0.2956[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42322:   7%|▋         | 2/28 [00:06<01:43,  3.98s/it]epoch 3 loss 1.38007:   7%|▋         | 2/28 [00:07<01:43,  3.98s/it]epoch 3 loss 1.38007:  11%|█         | 3/28 [00:07<00:59,  2.36s/it]epoch 3 loss 1.39653:  11%|█         | 3/28 [00:07<00:59,  2.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6412[0m
[32m  eval_f1 = 0.296[0m
[32m  eval_mcc = 0.6216[0m
[32m  eval_precision = 0.4187[0m
[32m  eval_recall = 0.2731[0m
[32m  ********************[0m
[32m  Best f1:0.296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39653:  14%|█▍        | 4/28 [00:12<01:27,  3.65s/it]epoch 3 loss 1.36692:  14%|█▍        | 4/28 [00:13<01:27,  3.65s/it]epoch 3 loss 1.36692:  18%|█▊        | 5/28 [00:13<00:57,  2.49s/it]epoch 3 loss 1.38787:  18%|█▊        | 5/28 [00:13<00:57,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6422[0m
[32m  eval_f1 = 0.2979[0m
[32m  eval_mcc = 0.6227[0m
[32m  eval_precision = 0.4153[0m
[32m  eval_recall = 0.2755[0m
[32m  ********************[0m
[32m  Best f1:0.2979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38787:  21%|██▏       | 6/28 [00:19<01:24,  3.84s/it]epoch 3 loss 1.39404:  21%|██▏       | 6/28 [00:20<01:24,  3.84s/it]epoch 3 loss 1.39404:  25%|██▌       | 7/28 [00:20<00:57,  2.73s/it]epoch 3 loss 1.4086:  25%|██▌       | 7/28 [00:20<00:57,  2.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.3074[0m
[32m  eval_mcc = 0.6234[0m
[32m  eval_precision = 0.4421[0m
[32m  eval_recall = 0.2832[0m
[32m  ********************[0m
[32m  Best f1:0.3074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4086:  29%|██▊       | 8/28 [00:26<01:18,  3.93s/it]epoch 3 loss 1.38897:  29%|██▊       | 8/28 [00:27<01:18,  3.93s/it]epoch 3 loss 1.38897:  32%|███▏      | 9/28 [00:27<00:53,  2.84s/it]epoch 3 loss 1.39279:  32%|███▏      | 9/28 [00:27<00:53,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6436[0m
[32m  eval_f1 = 0.311[0m
[32m  eval_mcc = 0.6241[0m
[32m  eval_precision = 0.437[0m
[32m  eval_recall = 0.287[0m
[32m  ********************[0m
[32m  Best f1:0.311[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39279:  36%|███▌      | 10/28 [00:33<01:11,  3.96s/it]epoch 3 loss 1.40029:  36%|███▌      | 10/28 [00:34<01:11,  3.96s/it]epoch 3 loss 1.40029:  39%|███▉      | 11/28 [00:34<00:48,  2.88s/it]epoch 3 loss 1.39388:  39%|███▉      | 11/28 [00:34<00:48,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6458[0m
[32m  eval_f1 = 0.3137[0m
[32m  eval_mcc = 0.6263[0m
[32m  eval_precision = 0.4418[0m
[32m  eval_recall = 0.2891[0m
[32m  ********************[0m
[32m  Best f1:0.3137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6263[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39388:  43%|████▎     | 12/28 [00:40<01:04,  4.01s/it]epoch 3 loss 1.38408:  43%|████▎     | 12/28 [00:41<01:04,  4.01s/it]epoch 3 loss 1.38408:  46%|████▋     | 13/28 [00:41<00:43,  2.93s/it]epoch 3 loss 1.37284:  46%|████▋     | 13/28 [00:41<00:43,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3095[0m
[32m  eval_mcc = 0.6276[0m
[32m  eval_precision = 0.431[0m
[32m  eval_recall = 0.2882[0m
[32m  ********************[0m
[32m  Best MCC:0.6276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37284:  50%|█████     | 14/28 [00:46<00:49,  3.56s/it]epoch 3 loss 1.36734:  50%|█████     | 14/28 [00:46<00:49,  3.56s/it]epoch 3 loss 1.36734:  54%|█████▎    | 15/28 [00:46<00:33,  2.61s/it]epoch 3 loss 1.36669:  54%|█████▎    | 15/28 [00:47<00:33,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6484[0m
[32m  eval_f1 = 0.309[0m
[32m  eval_mcc = 0.6289[0m
[32m  eval_precision = 0.4279[0m
[32m  eval_recall = 0.2871[0m
[32m  ********************[0m
[32m  Best MCC:0.6289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36669:  57%|█████▋    | 16/28 [00:51<00:40,  3.40s/it]epoch 3 loss 1.36363:  57%|█████▋    | 16/28 [00:52<00:40,  3.40s/it]epoch 3 loss 1.36363:  61%|██████    | 17/28 [00:52<00:27,  2.50s/it]epoch 3 loss 1.36515:  61%|██████    | 17/28 [00:52<00:27,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6507[0m
[32m  eval_f1 = 0.3111[0m
[32m  eval_mcc = 0.631[0m
[32m  eval_precision = 0.4277[0m
[32m  eval_recall = 0.2895[0m
[32m  ********************[0m
[32m  Best MCC:0.631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36515:  64%|██████▍   | 18/28 [00:57<00:32,  3.22s/it]epoch 3 loss 1.3642:  64%|██████▍   | 18/28 [00:57<00:32,  3.22s/it] epoch 3 loss 1.3642:  68%|██████▊   | 19/28 [00:57<00:21,  2.38s/it]epoch 3 loss 1.36:  68%|██████▊   | 19/28 [00:57<00:21,  2.38s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3135[0m
[32m  eval_mcc = 0.6327[0m
[32m  eval_precision = 0.4256[0m
[32m  eval_recall = 0.2924[0m
[32m  ********************[0m
[32m  Best MCC:0.6327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36:  71%|███████▏  | 20/28 [01:02<00:24,  3.11s/it]epoch 3 loss 1.35791:  71%|███████▏  | 20/28 [01:02<00:24,  3.11s/it]epoch 3 loss 1.35791:  75%|███████▌  | 21/28 [01:02<00:16,  2.30s/it]epoch 3 loss 1.35703:  75%|███████▌  | 21/28 [01:03<00:16,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6539[0m
[32m  eval_f1 = 0.3213[0m
[32m  eval_mcc = 0.6341[0m
[32m  eval_precision = 0.4418[0m
[32m  eval_recall = 0.2961[0m
[32m  ********************[0m
[32m  Best f1:0.3213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35703:  79%|███████▊  | 22/28 [01:09<00:21,  3.54s/it]epoch 3 loss 1.35352:  79%|███████▊  | 22/28 [01:09<00:21,  3.54s/it]epoch 3 loss 1.35352:  82%|████████▏ | 23/28 [01:09<00:13,  2.60s/it]epoch 3 loss 1.3523:  82%|████████▏ | 23/28 [01:10<00:13,  2.60s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6535[0m
[32m  eval_f1 = 0.3216[0m
[32m  eval_mcc = 0.6338[0m
[32m  eval_precision = 0.4443[0m
[32m  eval_recall = 0.2957[0m
[32m  ********************[0m
[32m  Best f1:0.3216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.3523:  86%|████████▌ | 24/28 [01:14<00:13,  3.32s/it]epoch 3 loss 1.34803:  86%|████████▌ | 24/28 [01:15<00:13,  3.32s/it]epoch 3 loss 1.34803:  89%|████████▉ | 25/28 [01:15<00:07,  2.45s/it]epoch 3 loss 1.34317:  89%|████████▉ | 25/28 [01:15<00:07,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3196[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4379[0m
[32m  eval_recall = 0.2937[0m

epoch 3 loss 1.34317:  93%|█████████▎| 26/28 [01:18<00:05,  2.85s/it]epoch 3 loss 1.3421:  93%|█████████▎| 26/28 [01:19<00:05,  2.85s/it] epoch 3 loss 1.3421:  96%|█████████▋| 27/28 [01:19<00:02,  2.12s/it]epoch 3 loss 1.35389:  96%|█████████▋| 27/28 [01:19<00:02,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6532[0m
[32m  eval_f1 = 0.32[0m
[32m  eval_mcc = 0.6336[0m
[32m  eval_precision = 0.4382[0m
[32m  eval_recall = 0.2938[0m

epoch 3 loss 1.35389: 100%|██████████| 28/28 [01:22<00:00,  2.56s/it]epoch 3 loss 1.35389: 100%|██████████| 28/28 [01:22<00:00,  2.96s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.26688:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.26688:   4%|▎         | 1/28 [00:00<00:10,  2.50it/s]epoch 4 loss 1.27426:   4%|▎         | 1/28 [00:00<00:10,  2.50it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6539[0m
[32m  eval_f1 = 0.3217[0m
[32m  eval_mcc = 0.6343[0m
[32m  eval_precision = 0.4406[0m
[32m  eval_recall = 0.2949[0m
[32m  ********************[0m
[32m  Best f1:0.3217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27426:   7%|▋         | 2/28 [00:06<01:41,  3.90s/it]epoch 4 loss 1.28346:   7%|▋         | 2/28 [00:07<01:41,  3.90s/it]epoch 4 loss 1.28346:  11%|█         | 3/28 [00:07<00:57,  2.32s/it]epoch 4 loss 1.27292:  11%|█         | 3/28 [00:07<00:57,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6539[0m
[32m  eval_f1 = 0.3218[0m
[32m  eval_mcc = 0.6344[0m
[32m  eval_precision = 0.4398[0m
[32m  eval_recall = 0.2948[0m
[32m  ********************[0m
[32m  Best f1:0.3218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27292:  14%|█▍        | 4/28 [00:13<01:35,  3.98s/it]epoch 4 loss 1.27905:  14%|█▍        | 4/28 [00:14<01:35,  3.98s/it]epoch 4 loss 1.27905:  18%|█▊        | 5/28 [00:14<01:02,  2.70s/it]epoch 4 loss 1.31557:  18%|█▊        | 5/28 [00:14<01:02,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6547[0m
[32m  eval_f1 = 0.3218[0m
[32m  eval_mcc = 0.6353[0m
[32m  eval_precision = 0.4404[0m
[32m  eval_recall = 0.2945[0m
[32m  ********************[0m
[32m  Best f1:0.3218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31557:  21%|██▏       | 6/28 [00:20<01:28,  4.03s/it]epoch 4 loss 1.30364:  21%|██▏       | 6/28 [00:21<01:28,  4.03s/it]epoch 4 loss 1.30364:  25%|██▌       | 7/28 [00:21<00:59,  2.85s/it]epoch 4 loss 1.30244:  25%|██▌       | 7/28 [00:21<00:59,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3265[0m
[32m  eval_mcc = 0.6366[0m
[32m  eval_precision = 0.4503[0m
[32m  eval_recall = 0.2975[0m
[32m  ********************[0m
[32m  Best f1:0.3265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.30244:  29%|██▊       | 8/28 [00:26<01:15,  3.75s/it]epoch 4 loss 1.31591:  29%|██▊       | 8/28 [00:27<01:15,  3.75s/it]epoch 4 loss 1.31591:  32%|███▏      | 9/28 [00:27<00:51,  2.71s/it]epoch 4 loss 1.31122:  32%|███▏      | 9/28 [00:27<00:51,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6565[0m
[32m  eval_f1 = 0.3336[0m
[32m  eval_mcc = 0.6374[0m
[32m  eval_precision = 0.4604[0m
[32m  eval_recall = 0.3028[0m
[32m  ********************[0m
[32m  Best f1:0.3336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31122:  36%|███▌      | 10/28 [00:33<01:10,  3.91s/it]epoch 4 loss 1.31208:  36%|███▌      | 10/28 [00:34<01:10,  3.91s/it]epoch 4 loss 1.31208:  39%|███▉      | 11/28 [00:34<00:48,  2.84s/it]epoch 4 loss 1.3193:  39%|███▉      | 11/28 [00:34<00:48,  2.84s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3348[0m
[32m  eval_mcc = 0.638[0m
[32m  eval_precision = 0.4599[0m
[32m  eval_recall = 0.3041[0m
[32m  ********************[0m
[32m  Best f1:0.3348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3193:  43%|████▎     | 12/28 [00:40<01:00,  3.75s/it]epoch 4 loss 1.32062:  43%|████▎     | 12/28 [00:40<01:00,  3.75s/it]epoch 4 loss 1.32062:  46%|████▋     | 13/28 [00:40<00:41,  2.74s/it]epoch 4 loss 1.32052:  46%|████▋     | 13/28 [00:40<00:41,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6572[0m
[32m  eval_f1 = 0.336[0m
[32m  eval_mcc = 0.6382[0m
[32m  eval_precision = 0.462[0m
[32m  eval_recall = 0.3052[0m
[32m  ********************[0m
[32m  Best f1:0.336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32052:  50%|█████     | 14/28 [00:47<00:54,  3.88s/it]epoch 4 loss 1.32002:  50%|█████     | 14/28 [00:47<00:54,  3.88s/it]epoch 4 loss 1.32002:  54%|█████▎    | 15/28 [00:47<00:36,  2.84s/it]epoch 4 loss 1.32074:  54%|█████▎    | 15/28 [00:47<00:36,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6573[0m
[32m  eval_f1 = 0.3363[0m
[32m  eval_mcc = 0.6382[0m
[32m  eval_precision = 0.4626[0m
[32m  eval_recall = 0.3054[0m
[32m  ********************[0m
[32m  Best f1:0.3363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32074:  57%|█████▋    | 16/28 [00:54<00:47,  3.94s/it]epoch 4 loss 1.3198:  57%|█████▋    | 16/28 [00:54<00:47,  3.94s/it] epoch 4 loss 1.3198:  61%|██████    | 17/28 [00:54<00:31,  2.89s/it]epoch 4 loss 1.31803:  61%|██████    | 17/28 [00:54<00:31,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6576[0m
[32m  eval_f1 = 0.3353[0m
[32m  eval_mcc = 0.6385[0m
[32m  eval_precision = 0.4605[0m
[32m  eval_recall = 0.3049[0m
[32m  ********************[0m
[32m  Best MCC:0.6385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31803:  64%|██████▍   | 18/28 [00:59<00:35,  3.56s/it]epoch 4 loss 1.3183:  64%|██████▍   | 18/28 [00:59<00:35,  3.56s/it] epoch 4 loss 1.3183:  68%|██████▊   | 19/28 [00:59<00:23,  2.61s/it]epoch 4 loss 1.31644:  68%|██████▊   | 19/28 [01:00<00:23,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3357[0m
[32m  eval_mcc = 0.6387[0m
[32m  eval_precision = 0.457[0m
[32m  eval_recall = 0.3054[0m
[32m  ********************[0m
[32m  Best MCC:0.6387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31644:  71%|███████▏  | 20/28 [01:07<00:33,  4.19s/it]epoch 4 loss 1.31912:  71%|███████▏  | 20/28 [01:08<00:33,  4.19s/it]epoch 4 loss 1.31912:  75%|███████▌  | 21/28 [01:08<00:21,  3.06s/it]epoch 4 loss 1.32319:  75%|███████▌  | 21/28 [01:08<00:21,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6572[0m
[32m  eval_f1 = 0.3367[0m
[32m  eval_mcc = 0.6381[0m
[32m  eval_precision = 0.4654[0m
[32m  eval_recall = 0.3058[0m
[32m  ********************[0m
[32m  Best f1:0.3367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.32319:  79%|███████▊  | 22/28 [01:13<00:22,  3.69s/it]epoch 4 loss 1.31825:  79%|███████▊  | 22/28 [01:13<00:22,  3.69s/it]epoch 4 loss 1.31825:  82%|████████▏ | 23/28 [01:13<00:13,  2.70s/it]epoch 4 loss 1.31695:  82%|████████▏ | 23/28 [01:14<00:13,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3367[0m
[32m  eval_mcc = 0.6379[0m
[32m  eval_precision = 0.4655[0m
[32m  eval_recall = 0.3059[0m
[32m  ********************[0m
[32m  Best f1:0.3367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.31695:  86%|████████▌ | 24/28 [01:21<00:16,  4.18s/it]epoch 4 loss 1.31463:  86%|████████▌ | 24/28 [01:21<00:16,  4.18s/it]epoch 4 loss 1.31463:  89%|████████▉ | 25/28 [01:21<00:09,  3.05s/it]epoch 4 loss 1.31079:  89%|████████▉ | 25/28 [01:22<00:09,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3368[0m
[32m  eval_mcc = 0.6379[0m
[32m  eval_precision = 0.4657[0m
[32m  eval_recall = 0.3061[0m
[32m  ********************[0m
[32m  Best f1:0.3368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.31079:  93%|█████████▎| 26/28 [01:26<00:07,  3.63s/it]epoch 4 loss 1.30872:  93%|█████████▎| 26/28 [01:27<00:07,  3.63s/it]epoch 4 loss 1.30872:  96%|█████████▋| 27/28 [01:27<00:02,  2.66s/it]epoch 4 loss 1.30516:  96%|█████████▋| 27/28 [01:27<00:02,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3368[0m
[32m  eval_mcc = 0.6378[0m
[32m  eval_precision = 0.4659[0m
[32m  eval_recall = 0.3061[0m
[32m  ********************[0m
[32m  Best f1:0.3368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.30516: 100%|██████████| 28/28 [01:32<00:00,  3.34s/it]epoch 4 loss 1.30516: 100%|██████████| 28/28 [01:32<00:00,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3368[0m
[32m  eval_mcc = 0.6378[0m
[32m  eval_precision = 0.4659[0m
[32m  eval_recall = 0.3061[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6336[0m
[32m  eval_f1 = 0.2658[0m
[32m  eval_mcc = 0.6142[0m
[32m  eval_precision = 0.3631[0m
[32m  eval_recall = 0.2464[0m

