[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.81225:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.81225:   4%|▎         | 1/28 [00:00<00:21,  1.28it/s]epoch 0 loss 5.80533:   4%|▎         | 1/28 [00:01<00:21,  1.28it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0067[0m
[32m  eval_f1 = 0.0017[0m
[32m  eval_mcc = 0.0012[0m
[32m  eval_precision = 0.0019[0m
[32m  eval_recall = 0.0034[0m
[32m  ********************[0m
[32m  Best f1:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.80533:   7%|▋         | 2/28 [00:06<01:31,  3.50s/it]epoch 0 loss 5.79798:   7%|▋         | 2/28 [00:06<01:31,  3.50s/it]epoch 0 loss 5.79798:  11%|█         | 3/28 [00:06<00:52,  2.09s/it]epoch 0 loss 5.77948:  11%|█         | 3/28 [00:06<00:52,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.01[0m
[32m  eval_f1 = 0.0015[0m
[32m  eval_mcc = 0.0002[0m
[32m  eval_precision = 0.0033[0m
[32m  eval_recall = 0.0022[0m

epoch 0 loss 5.77948:  14%|█▍        | 4/28 [00:10<01:06,  2.75s/it]epoch 0 loss 5.75441:  14%|█▍        | 4/28 [00:10<01:06,  2.75s/it]epoch 0 loss 5.75441:  18%|█▊        | 5/28 [00:10<00:43,  1.90s/it]epoch 0 loss 5.72594:  18%|█▊        | 5/28 [00:11<00:43,  1.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0318[0m
[32m  eval_f1 = 0.002[0m
[32m  eval_mcc = 0.0114[0m
[32m  eval_precision = 0.0045[0m
[32m  eval_recall = 0.0063[0m
[32m  ********************[0m
[32m  Best f1:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.72594:  21%|██▏       | 6/28 [00:19<01:35,  4.32s/it]epoch 0 loss 5.68667:  21%|██▏       | 6/28 [00:20<01:35,  4.32s/it]epoch 0 loss 5.68667:  25%|██▌       | 7/28 [00:20<01:03,  3.05s/it]epoch 0 loss 5.64062:  25%|██▌       | 7/28 [00:20<01:03,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0498[0m
[32m  eval_f1 = 0.0041[0m
[32m  eval_mcc = 0.0186[0m
[32m  eval_precision = 0.0053[0m
[32m  eval_recall = 0.0122[0m
[32m  ********************[0m
[32m  Best f1:0.0041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.64062:  29%|██▊       | 8/28 [00:29<01:40,  5.00s/it]epoch 0 loss 5.58702:  29%|██▊       | 8/28 [00:29<01:40,  5.00s/it]epoch 0 loss 5.58702:  32%|███▏      | 9/28 [00:29<01:07,  3.57s/it]epoch 0 loss 5.53011:  32%|███▏      | 9/28 [00:30<01:07,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0618[0m
[32m  eval_f1 = 0.011[0m
[32m  eval_mcc = 0.0277[0m
[32m  eval_precision = 0.0122[0m
[32m  eval_recall = 0.0206[0m
[32m  ********************[0m
[32m  Best f1:0.011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.53011:  36%|███▌      | 10/28 [00:39<01:37,  5.43s/it]epoch 0 loss 5.4648:  36%|███▌      | 10/28 [00:39<01:37,  5.43s/it] epoch 0 loss 5.4648:  39%|███▉      | 11/28 [00:39<01:06,  3.89s/it]epoch 0 loss 5.39538:  39%|███▉      | 11/28 [00:40<01:06,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0663[0m
[32m  eval_f1 = 0.0144[0m
[32m  eval_mcc = 0.0286[0m
[32m  eval_precision = 0.0178[0m
[32m  eval_recall = 0.0214[0m
[32m  ********************[0m
[32m  Best f1:0.0144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.39538:  43%|████▎     | 12/28 [00:48<01:25,  5.35s/it]epoch 0 loss 5.32103:  43%|████▎     | 12/28 [00:48<01:25,  5.35s/it]epoch 0 loss 5.32103:  46%|████▋     | 13/28 [00:48<00:57,  3.85s/it]epoch 0 loss 5.24514:  46%|████▋     | 13/28 [00:49<00:57,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0745[0m
[32m  eval_f1 = 0.0184[0m
[32m  eval_mcc = 0.0328[0m
[32m  eval_precision = 0.0255[0m
[32m  eval_recall = 0.0221[0m
[32m  ********************[0m
[32m  Best f1:0.0184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.24514:  50%|█████     | 14/28 [00:57<01:14,  5.33s/it]epoch 0 loss 5.16384:  50%|█████     | 14/28 [00:58<01:14,  5.33s/it]epoch 0 loss 5.16384:  54%|█████▎    | 15/28 [00:58<00:50,  3.85s/it]epoch 0 loss 5.07958:  54%|█████▎    | 15/28 [00:58<00:50,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1024[0m
[32m  eval_f1 = 0.0243[0m
[32m  eval_mcc = 0.0577[0m
[32m  eval_precision = 0.0409[0m
[32m  eval_recall = 0.0278[0m
[32m  ********************[0m
[32m  Best f1:0.0243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.07958:  57%|█████▋    | 16/28 [01:05<00:59,  4.97s/it]epoch 0 loss 5.00396:  57%|█████▋    | 16/28 [01:06<00:59,  4.97s/it]epoch 0 loss 5.00396:  61%|██████    | 17/28 [01:06<00:39,  3.60s/it]epoch 0 loss 4.92651:  61%|██████    | 17/28 [01:06<00:39,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1521[0m
[32m  eval_f1 = 0.0295[0m
[32m  eval_mcc = 0.1063[0m
[32m  eval_precision = 0.0589[0m
[32m  eval_recall = 0.0339[0m
[32m  ********************[0m
[32m  Best f1:0.0295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.92651:  64%|██████▍   | 18/28 [01:14<00:51,  5.18s/it]epoch 0 loss 4.84667:  64%|██████▍   | 18/28 [01:15<00:51,  5.18s/it]epoch 0 loss 4.84667:  68%|██████▊   | 19/28 [01:15<00:33,  3.75s/it]epoch 0 loss 4.77818:  68%|██████▊   | 19/28 [01:15<00:33,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2121[0m
[32m  eval_f1 = 0.0367[0m
[32m  eval_mcc = 0.1737[0m
[32m  eval_precision = 0.061[0m
[32m  eval_recall = 0.0403[0m
[32m  ********************[0m
[32m  Best f1:0.0367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1737[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.77818:  71%|███████▏  | 20/28 [01:23<00:40,  5.02s/it]epoch 0 loss 4.7026:  71%|███████▏  | 20/28 [01:23<00:40,  5.02s/it] epoch 0 loss 4.7026:  75%|███████▌  | 21/28 [01:23<00:25,  3.64s/it]epoch 0 loss 4.63053:  75%|███████▌  | 21/28 [01:24<00:25,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2702[0m
[32m  eval_f1 = 0.0433[0m
[32m  eval_mcc = 0.2262[0m
[32m  eval_precision = 0.0858[0m
[32m  eval_recall = 0.0455[0m
[32m  ********************[0m
[32m  Best f1:0.0433[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.63053:  79%|███████▊  | 22/28 [01:32<00:30,  5.15s/it]epoch 0 loss 4.5619:  79%|███████▊  | 22/28 [01:32<00:30,  5.15s/it] epoch 0 loss 4.5619:  82%|████████▏ | 23/28 [01:32<00:18,  3.73s/it]epoch 0 loss 4.49247:  82%|████████▏ | 23/28 [01:33<00:18,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3227[0m
[32m  eval_f1 = 0.0493[0m
[32m  eval_mcc = 0.273[0m
[32m  eval_precision = 0.0963[0m
[32m  eval_recall = 0.0512[0m
[32m  ********************[0m
[32m  Best f1:0.0493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.49247:  86%|████████▌ | 24/28 [01:40<00:19,  4.91s/it]epoch 0 loss 4.4298:  86%|████████▌ | 24/28 [01:40<00:19,  4.91s/it] epoch 0 loss 4.4298:  89%|████████▉ | 25/28 [01:40<00:10,  3.56s/it]epoch 0 loss 4.36819:  89%|████████▉ | 25/28 [01:41<00:10,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3506[0m
[32m  eval_f1 = 0.0716[0m
[32m  eval_mcc = 0.3053[0m
[32m  eval_precision = 0.1357[0m
[32m  eval_recall = 0.0679[0m
[32m  ********************[0m
[32m  Best f1:0.0716[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.36819:  93%|█████████▎| 26/28 [01:49<00:10,  5.13s/it]epoch 0 loss 4.31017:  93%|█████████▎| 26/28 [01:50<00:10,  5.13s/it]epoch 0 loss 4.31017:  96%|█████████▋| 27/28 [01:50<00:03,  3.72s/it]epoch 0 loss 4.25562:  96%|█████████▋| 27/28 [01:50<00:03,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3695[0m
[32m  eval_f1 = 0.0917[0m
[32m  eval_mcc = 0.3372[0m
[32m  eval_precision = 0.1477[0m
[32m  eval_recall = 0.0845[0m
[32m  ********************[0m
[32m  Best f1:0.0917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.25562: 100%|██████████| 28/28 [01:58<00:00,  5.23s/it]epoch 0 loss 4.25562: 100%|██████████| 28/28 [01:58<00:00,  4.25s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.60911:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.60911:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.52395:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4216[0m
[32m  eval_f1 = 0.12[0m
[32m  eval_mcc = 0.4012[0m
[32m  eval_precision = 0.1708[0m
[32m  eval_recall = 0.1092[0m
[32m  ********************[0m
[32m  Best f1:0.12[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.52395:   7%|▋         | 2/28 [00:07<01:59,  4.59s/it]epoch 1 loss 2.49715:   7%|▋         | 2/28 [00:08<01:59,  4.59s/it]epoch 1 loss 2.49715:  11%|█         | 3/28 [00:08<01:07,  2.69s/it]epoch 1 loss 2.47205:  11%|█         | 3/28 [00:08<01:07,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4716[0m
[32m  eval_f1 = 0.136[0m
[32m  eval_mcc = 0.4485[0m
[32m  eval_precision = 0.1874[0m
[32m  eval_recall = 0.1278[0m
[32m  ********************[0m
[32m  Best f1:0.136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.47205:  14%|█▍        | 4/28 [00:17<02:03,  5.16s/it]epoch 1 loss 2.44882:  14%|█▍        | 4/28 [00:17<02:03,  5.16s/it]epoch 1 loss 2.44882:  18%|█▊        | 5/28 [00:17<01:19,  3.45s/it]epoch 1 loss 2.43678:  18%|█▊        | 5/28 [00:18<01:19,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5278[0m
[32m  eval_f1 = 0.1485[0m
[32m  eval_mcc = 0.5006[0m
[32m  eval_precision = 0.1919[0m
[32m  eval_recall = 0.146[0m
[32m  ********************[0m
[32m  Best f1:0.1485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.43678:  21%|██▏       | 6/28 [00:26<01:58,  5.39s/it]epoch 1 loss 2.4181:  21%|██▏       | 6/28 [00:27<01:58,  5.39s/it] epoch 1 loss 2.4181:  25%|██▌       | 7/28 [00:27<01:19,  3.77s/it]epoch 1 loss 2.3897:  25%|██▌       | 7/28 [00:27<01:19,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.559[0m
[32m  eval_f1 = 0.1711[0m
[32m  eval_mcc = 0.5315[0m
[32m  eval_precision = 0.2128[0m
[32m  eval_recall = 0.1652[0m
[32m  ********************[0m
[32m  Best f1:0.1711[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.3897:  29%|██▊       | 8/28 [00:38<02:02,  6.11s/it]epoch 1 loss 2.35464:  29%|██▊       | 8/28 [00:38<02:02,  6.11s/it]epoch 1 loss 2.35464:  32%|███▏      | 9/28 [00:38<01:22,  4.33s/it]epoch 1 loss 2.31651:  32%|███▏      | 9/28 [00:39<01:22,  4.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5754[0m
[32m  eval_f1 = 0.1799[0m
[32m  eval_mcc = 0.5494[0m
[32m  eval_precision = 0.2197[0m
[32m  eval_recall = 0.1727[0m
[32m  ********************[0m
[32m  Best f1:0.1799[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.31651:  36%|███▌      | 10/28 [00:48<01:48,  6.04s/it]epoch 1 loss 2.29029:  36%|███▌      | 10/28 [00:49<01:48,  6.04s/it]epoch 1 loss 2.29029:  39%|███▉      | 11/28 [00:49<01:13,  4.32s/it]epoch 1 loss 2.27783:  39%|███▉      | 11/28 [00:49<01:13,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.58[0m
[32m  eval_f1 = 0.1821[0m
[32m  eval_mcc = 0.5558[0m
[32m  eval_precision = 0.2185[0m
[32m  eval_recall = 0.1745[0m
[32m  ********************[0m
[32m  Best f1:0.1821[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27783:  43%|████▎     | 12/28 [01:02<01:51,  6.98s/it]epoch 1 loss 2.25844:  43%|████▎     | 12/28 [01:02<01:51,  6.98s/it]epoch 1 loss 2.25844:  46%|████▋     | 13/28 [01:02<01:14,  5.00s/it]epoch 1 loss 2.22827:  46%|████▋     | 13/28 [01:03<01:14,  5.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5843[0m
[32m  eval_f1 = 0.1836[0m
[32m  eval_mcc = 0.5617[0m
[32m  eval_precision = 0.2208[0m
[32m  eval_recall = 0.1752[0m
[32m  ********************[0m
[32m  Best f1:0.1836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.22827:  50%|█████     | 14/28 [01:12<01:31,  6.53s/it]epoch 1 loss 2.20513:  50%|█████     | 14/28 [01:13<01:31,  6.53s/it]epoch 1 loss 2.20513:  54%|█████▎    | 15/28 [01:13<01:00,  4.69s/it]epoch 1 loss 2.18914:  54%|█████▎    | 15/28 [01:13<01:00,  4.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5902[0m
[32m  eval_f1 = 0.1863[0m
[32m  eval_mcc = 0.5678[0m
[32m  eval_precision = 0.2283[0m
[32m  eval_recall = 0.178[0m
[32m  ********************[0m
[32m  Best f1:0.1863[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5678[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.18914:  57%|█████▋    | 16/28 [01:25<01:23,  6.92s/it]epoch 1 loss 2.17029:  57%|█████▋    | 16/28 [01:25<01:23,  6.92s/it]epoch 1 loss 2.17029:  61%|██████    | 17/28 [01:25<00:54,  4.97s/it]epoch 1 loss 2.14676:  61%|██████    | 17/28 [01:26<00:54,  4.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5922[0m
[32m  eval_f1 = 0.1917[0m
[32m  eval_mcc = 0.5685[0m
[32m  eval_precision = 0.2563[0m
[32m  eval_recall = 0.1836[0m
[32m  ********************[0m
[32m  Best f1:0.1917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.14676:  64%|██████▍   | 18/28 [01:35<01:05,  6.56s/it]epoch 1 loss 2.13021:  64%|██████▍   | 18/28 [01:36<01:05,  6.56s/it]epoch 1 loss 2.13021:  68%|██████▊   | 19/28 [01:36<00:42,  4.72s/it]epoch 1 loss 2.12078:  68%|██████▊   | 19/28 [01:36<00:42,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5937[0m
[32m  eval_f1 = 0.2045[0m
[32m  eval_mcc = 0.5695[0m
[32m  eval_precision = 0.2715[0m
[32m  eval_recall = 0.1942[0m
[32m  ********************[0m
[32m  Best f1:0.2045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5695[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12078:  71%|███████▏  | 20/28 [01:48<00:54,  6.84s/it]epoch 1 loss 2.10117:  71%|███████▏  | 20/28 [01:48<00:54,  6.84s/it]epoch 1 loss 2.10117:  75%|███████▌  | 21/28 [01:48<00:34,  4.92s/it]epoch 1 loss 2.08423:  75%|███████▌  | 21/28 [01:48<00:34,  4.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5978[0m
[32m  eval_f1 = 0.208[0m
[32m  eval_mcc = 0.5743[0m
[32m  eval_precision = 0.2867[0m
[32m  eval_recall = 0.1988[0m
[32m  ********************[0m
[32m  Best f1:0.208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08423:  79%|███████▊  | 22/28 [01:58<00:38,  6.46s/it]epoch 1 loss 2.0649:  79%|███████▊  | 22/28 [01:59<00:38,  6.46s/it] epoch 1 loss 2.0649:  82%|████████▏ | 23/28 [01:59<00:23,  4.65s/it]epoch 1 loss 2.05301:  82%|████████▏ | 23/28 [01:59<00:23,  4.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6006[0m
[32m  eval_f1 = 0.2289[0m
[32m  eval_mcc = 0.578[0m
[32m  eval_precision = 0.3204[0m
[32m  eval_recall = 0.2184[0m
[32m  ********************[0m
[32m  Best f1:0.2289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05301:  86%|████████▌ | 24/28 [02:11<00:28,  7.14s/it]epoch 1 loss 2.03902:  86%|████████▌ | 24/28 [02:12<00:28,  7.14s/it]epoch 1 loss 2.03902:  89%|████████▉ | 25/28 [02:12<00:15,  5.12s/it]epoch 1 loss 2.02891:  89%|████████▉ | 25/28 [02:12<00:15,  5.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6056[0m
[32m  eval_f1 = 0.2323[0m
[32m  eval_mcc = 0.5848[0m
[32m  eval_precision = 0.3222[0m
[32m  eval_recall = 0.2201[0m
[32m  ********************[0m
[32m  Best f1:0.2323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02891:  93%|█████████▎| 26/28 [02:22<00:13,  6.68s/it]epoch 1 loss 2.01313:  93%|█████████▎| 26/28 [02:23<00:13,  6.68s/it]epoch 1 loss 2.01313:  96%|█████████▋| 27/28 [02:23<00:04,  4.80s/it]epoch 1 loss 1.99518:  96%|█████████▋| 27/28 [02:23<00:04,  4.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6089[0m
[32m  eval_f1 = 0.2349[0m
[32m  eval_mcc = 0.5888[0m
[32m  eval_precision = 0.3271[0m
[32m  eval_recall = 0.2212[0m
[32m  ********************[0m
[32m  Best f1:0.2349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5888[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99518: 100%|██████████| 28/28 [02:34<00:00,  6.87s/it]epoch 1 loss 1.99518: 100%|██████████| 28/28 [02:34<00:00,  5.53s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.51438:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.51438:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 2 loss 1.50328:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.61[0m
[32m  eval_f1 = 0.2359[0m
[32m  eval_mcc = 0.5897[0m
[32m  eval_precision = 0.3194[0m
[32m  eval_recall = 0.2208[0m
[32m  ********************[0m
[32m  Best f1:0.2359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50328:   7%|▋         | 2/28 [00:13<03:19,  7.67s/it]epoch 2 loss 1.51965:   7%|▋         | 2/28 [00:13<03:19,  7.67s/it]epoch 2 loss 1.51965:  11%|█         | 3/28 [00:13<01:49,  4.36s/it]epoch 2 loss 1.52764:  11%|█         | 3/28 [00:13<01:49,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6114[0m
[32m  eval_f1 = 0.2399[0m
[32m  eval_mcc = 0.5904[0m
[32m  eval_precision = 0.3468[0m
[32m  eval_recall = 0.2232[0m
[32m  ********************[0m
[32m  Best f1:0.2399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5904[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52764:  14%|█▍        | 4/28 [00:25<02:51,  7.15s/it]epoch 2 loss 1.53715:  14%|█▍        | 4/28 [00:25<02:51,  7.15s/it]epoch 2 loss 1.53715:  18%|█▊        | 5/28 [00:25<01:48,  4.72s/it]epoch 2 loss 1.53079:  18%|█▊        | 5/28 [00:25<01:48,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6136[0m
[32m  eval_f1 = 0.2453[0m
[32m  eval_mcc = 0.592[0m
[32m  eval_precision = 0.3438[0m
[32m  eval_recall = 0.2273[0m
[32m  ********************[0m
[32m  Best f1:0.2453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53079:  21%|██▏       | 6/28 [00:33<02:10,  5.94s/it]epoch 2 loss 1.54468:  21%|██▏       | 6/28 [00:34<02:10,  5.94s/it]epoch 2 loss 1.54468:  25%|██▌       | 7/28 [00:34<01:26,  4.14s/it]epoch 2 loss 1.53212:  25%|██▌       | 7/28 [00:34<01:26,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6143[0m
[32m  eval_f1 = 0.2495[0m
[32m  eval_mcc = 0.5926[0m
[32m  eval_precision = 0.3528[0m
[32m  eval_recall = 0.2317[0m
[32m  ********************[0m
[32m  Best f1:0.2495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53212:  29%|██▊       | 8/28 [00:43<01:55,  5.76s/it]epoch 2 loss 1.53208:  29%|██▊       | 8/28 [00:43<01:55,  5.76s/it]epoch 2 loss 1.53208:  32%|███▏      | 9/28 [00:43<01:17,  4.10s/it]epoch 2 loss 1.54772:  32%|███▏      | 9/28 [00:44<01:17,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6149[0m
[32m  eval_f1 = 0.2538[0m
[32m  eval_mcc = 0.5932[0m
[32m  eval_precision = 0.3457[0m
[32m  eval_recall = 0.2376[0m
[32m  ********************[0m
[32m  Best f1:0.2538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5932[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54772:  36%|███▌      | 10/28 [00:53<01:42,  5.68s/it]epoch 2 loss 1.5393:  36%|███▌      | 10/28 [00:53<01:42,  5.68s/it] epoch 2 loss 1.5393:  39%|███▉      | 11/28 [00:53<01:09,  4.07s/it]epoch 2 loss 1.53957:  39%|███▉      | 11/28 [00:53<01:09,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.60it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6177[0m
[32m  eval_f1 = 0.2602[0m
[32m  eval_mcc = 0.5959[0m
[32m  eval_precision = 0.3434[0m
[32m  eval_recall = 0.2435[0m
[32m  ********************[0m
[32m  Best f1:0.2602[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53957:  43%|████▎     | 12/28 [01:04<01:41,  6.33s/it]epoch 2 loss 1.53637:  43%|████▎     | 12/28 [01:05<01:41,  6.33s/it]epoch 2 loss 1.53637:  46%|████▋     | 13/28 [01:05<01:08,  4.54s/it]epoch 2 loss 1.54375:  46%|████▋     | 13/28 [01:05<01:08,  4.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6206[0m
[32m  eval_f1 = 0.2649[0m
[32m  eval_mcc = 0.5991[0m
[32m  eval_precision = 0.342[0m
[32m  eval_recall = 0.2486[0m
[32m  ********************[0m
[32m  Best f1:0.2649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54375:  50%|█████     | 14/28 [01:19<01:42,  7.31s/it]epoch 2 loss 1.53435:  50%|█████     | 14/28 [01:19<01:42,  7.31s/it]epoch 2 loss 1.53435:  54%|█████▎    | 15/28 [01:19<01:08,  5.24s/it]epoch 2 loss 1.5377:  54%|█████▎    | 15/28 [01:19<01:08,  5.24s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6229[0m
[32m  eval_f1 = 0.2667[0m
[32m  eval_mcc = 0.6021[0m
[32m  eval_precision = 0.35[0m
[32m  eval_recall = 0.25[0m
[32m  ********************[0m
[32m  Best f1:0.2667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5377:  57%|█████▋    | 16/28 [01:30<01:24,  7.02s/it]epoch 2 loss 1.53621:  57%|█████▋    | 16/28 [01:31<01:24,  7.02s/it]epoch 2 loss 1.53621:  61%|██████    | 17/28 [01:31<00:55,  5.04s/it]epoch 2 loss 1.535:  61%|██████    | 17/28 [01:31<00:55,  5.04s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.625[0m
[32m  eval_f1 = 0.2674[0m
[32m  eval_mcc = 0.6048[0m
[32m  eval_precision = 0.3515[0m
[32m  eval_recall = 0.2506[0m
[32m  ********************[0m
[32m  Best f1:0.2674[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.535:  64%|██████▍   | 18/28 [01:39<01:00,  6.05s/it]epoch 2 loss 1.53876:  64%|██████▍   | 18/28 [01:39<01:00,  6.05s/it]epoch 2 loss 1.53876:  68%|██████▊   | 19/28 [01:39<00:39,  4.36s/it]epoch 2 loss 1.53946:  68%|██████▊   | 19/28 [01:40<00:39,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.626[0m
[32m  eval_f1 = 0.2671[0m
[32m  eval_mcc = 0.6055[0m
[32m  eval_precision = 0.362[0m
[32m  eval_recall = 0.2508[0m
[32m  ********************[0m
[32m  Best MCC:0.6055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53946:  71%|███████▏  | 20/28 [01:45<00:36,  4.59s/it]epoch 2 loss 1.53747:  71%|███████▏  | 20/28 [01:45<00:36,  4.59s/it]epoch 2 loss 1.53747:  75%|███████▌  | 21/28 [01:45<00:23,  3.34s/it]epoch 2 loss 1.53081:  75%|███████▌  | 21/28 [01:45<00:23,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6279[0m
[32m  eval_f1 = 0.2696[0m
[32m  eval_mcc = 0.6071[0m
[32m  eval_precision = 0.3623[0m
[32m  eval_recall = 0.2529[0m
[32m  ********************[0m
[32m  Best f1:0.2696[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53081:  79%|███████▊  | 22/28 [01:56<00:33,  5.64s/it]epoch 2 loss 1.52426:  79%|███████▊  | 22/28 [01:56<00:33,  5.64s/it]epoch 2 loss 1.52426:  82%|████████▏ | 23/28 [01:56<00:20,  4.08s/it]epoch 2 loss 1.5259:  82%|████████▏ | 23/28 [01:57<00:20,  4.08s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6311[0m
[32m  eval_f1 = 0.2745[0m
[32m  eval_mcc = 0.6102[0m
[32m  eval_precision = 0.3775[0m
[32m  eval_recall = 0.2562[0m
[32m  ********************[0m
[32m  Best f1:0.2745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5259:  86%|████████▌ | 24/28 [02:05<00:22,  5.50s/it]epoch 2 loss 1.52537:  86%|████████▌ | 24/28 [02:06<00:22,  5.50s/it]epoch 2 loss 1.52537:  89%|████████▉ | 25/28 [02:06<00:11,  3.98s/it]epoch 2 loss 1.52047:  89%|████████▉ | 25/28 [02:06<00:11,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6319[0m
[32m  eval_f1 = 0.2764[0m
[32m  eval_mcc = 0.6111[0m
[32m  eval_precision = 0.3768[0m
[32m  eval_recall = 0.2576[0m
[32m  ********************[0m
[32m  Best f1:0.2764[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52047:  93%|█████████▎| 26/28 [02:14<00:10,  5.37s/it]epoch 2 loss 1.51487:  93%|█████████▎| 26/28 [02:15<00:10,  5.37s/it]epoch 2 loss 1.51487:  96%|█████████▋| 27/28 [02:15<00:03,  3.88s/it]epoch 2 loss 1.51279:  96%|█████████▋| 27/28 [02:15<00:03,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6329[0m
[32m  eval_f1 = 0.2786[0m
[32m  eval_mcc = 0.6125[0m
[32m  eval_precision = 0.3815[0m
[32m  eval_recall = 0.2587[0m
[32m  ********************[0m
[32m  Best f1:0.2786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51279: 100%|██████████| 28/28 [02:26<00:00,  5.98s/it]epoch 2 loss 1.51279: 100%|██████████| 28/28 [02:26<00:00,  5.22s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.39193:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.39193:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 3 loss 1.48223:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6317[0m
[32m  eval_f1 = 0.2794[0m
[32m  eval_mcc = 0.6113[0m
[32m  eval_precision = 0.3799[0m
[32m  eval_recall = 0.2598[0m
[32m  ********************[0m
[32m  Best f1:0.2794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.48223:   7%|▋         | 2/28 [00:05<01:22,  3.18s/it]epoch 3 loss 1.43594:   7%|▋         | 2/28 [00:05<01:22,  3.18s/it]epoch 3 loss 1.43594:  11%|█         | 3/28 [00:05<00:47,  1.91s/it]epoch 3 loss 1.45209:  11%|█         | 3/28 [00:06<00:47,  1.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6314[0m
[32m  eval_f1 = 0.2815[0m
[32m  eval_mcc = 0.6114[0m
[32m  eval_precision = 0.3849[0m
[32m  eval_recall = 0.2621[0m
[32m  ********************[0m
[32m  Best f1:0.2815[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.45209:  14%|█▍        | 4/28 [00:10<01:13,  3.05s/it]epoch 3 loss 1.42244:  14%|█▍        | 4/28 [00:11<01:13,  3.05s/it]epoch 3 loss 1.42244:  18%|█▊        | 5/28 [00:11<00:48,  2.10s/it]epoch 3 loss 1.44315:  18%|█▊        | 5/28 [00:11<00:48,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6325[0m
[32m  eval_f1 = 0.2832[0m
[32m  eval_mcc = 0.6128[0m
[32m  eval_precision = 0.3847[0m
[32m  eval_recall = 0.2647[0m
[32m  ********************[0m
[32m  Best f1:0.2832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44315:  21%|██▏       | 6/28 [00:18<01:23,  3.79s/it]epoch 3 loss 1.449:  21%|██▏       | 6/28 [00:18<01:23,  3.79s/it]  epoch 3 loss 1.449:  25%|██▌       | 7/28 [00:18<00:56,  2.68s/it]epoch 3 loss 1.46424:  25%|██▌       | 7/28 [00:19<00:56,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6335[0m
[32m  eval_f1 = 0.2866[0m
[32m  eval_mcc = 0.6139[0m
[32m  eval_precision = 0.3893[0m
[32m  eval_recall = 0.2676[0m
[32m  ********************[0m
[32m  Best f1:0.2866[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6139[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46424:  29%|██▊       | 8/28 [00:27<01:32,  4.62s/it]epoch 3 loss 1.44386:  29%|██▊       | 8/28 [00:27<01:32,  4.62s/it]epoch 3 loss 1.44386:  32%|███▏      | 9/28 [00:27<01:02,  3.31s/it]epoch 3 loss 1.44808:  32%|███▏      | 9/28 [00:28<01:02,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6352[0m
[32m  eval_f1 = 0.2871[0m
[32m  eval_mcc = 0.6154[0m
[32m  eval_precision = 0.3955[0m
[32m  eval_recall = 0.2683[0m
[32m  ********************[0m
[32m  Best f1:0.2871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44808:  36%|███▌      | 10/28 [00:35<01:23,  4.66s/it]epoch 3 loss 1.45591:  36%|███▌      | 10/28 [00:35<01:23,  4.66s/it]epoch 3 loss 1.45591:  39%|███▉      | 11/28 [00:35<00:57,  3.36s/it]epoch 3 loss 1.44953:  39%|███▉      | 11/28 [00:36<00:57,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6365[0m
[32m  eval_f1 = 0.2871[0m
[32m  eval_mcc = 0.6166[0m
[32m  eval_precision = 0.3938[0m
[32m  eval_recall = 0.2686[0m
[32m  ********************[0m
[32m  Best MCC:0.6166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44953:  43%|████▎     | 12/28 [00:40<01:01,  3.82s/it]epoch 3 loss 1.43911:  43%|████▎     | 12/28 [00:41<01:01,  3.82s/it]epoch 3 loss 1.43911:  46%|████▋     | 13/28 [00:41<00:41,  2.79s/it]epoch 3 loss 1.42851:  46%|████▋     | 13/28 [00:41<00:41,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6381[0m
[32m  eval_f1 = 0.2882[0m
[32m  eval_mcc = 0.6184[0m
[32m  eval_precision = 0.3961[0m
[32m  eval_recall = 0.2695[0m
[32m  ********************[0m
[32m  Best f1:0.2882[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42851:  50%|█████     | 14/28 [00:52<01:16,  5.46s/it]epoch 3 loss 1.42257:  50%|█████     | 14/28 [00:53<01:16,  5.46s/it]epoch 3 loss 1.42257:  54%|█████▎    | 15/28 [00:53<00:51,  3.94s/it]epoch 3 loss 1.42202:  54%|█████▎    | 15/28 [00:53<00:51,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6401[0m
[32m  eval_f1 = 0.2892[0m
[32m  eval_mcc = 0.6202[0m
[32m  eval_precision = 0.4054[0m
[32m  eval_recall = 0.2696[0m
[32m  ********************[0m
[32m  Best f1:0.2892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42202:  57%|█████▋    | 16/28 [01:02<01:05,  5.47s/it]epoch 3 loss 1.41895:  57%|█████▋    | 16/28 [01:02<01:05,  5.47s/it]epoch 3 loss 1.41895:  61%|██████    | 17/28 [01:02<00:43,  3.95s/it]epoch 3 loss 1.42034:  61%|██████    | 17/28 [01:03<00:43,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6426[0m
[32m  eval_f1 = 0.2914[0m
[32m  eval_mcc = 0.6224[0m
[32m  eval_precision = 0.4039[0m
[32m  eval_recall = 0.2726[0m
[32m  ********************[0m
[32m  Best f1:0.2914[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6224[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42034:  64%|██████▍   | 18/28 [01:08<00:45,  4.53s/it]epoch 3 loss 1.41983:  64%|██████▍   | 18/28 [01:08<00:45,  4.53s/it]epoch 3 loss 1.41983:  68%|██████▊   | 19/28 [01:08<00:29,  3.30s/it]epoch 3 loss 1.41548:  68%|██████▊   | 19/28 [01:09<00:29,  3.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6436[0m
[32m  eval_f1 = 0.2914[0m
[32m  eval_mcc = 0.6232[0m
[32m  eval_precision = 0.4014[0m
[32m  eval_recall = 0.2733[0m
[32m  ********************[0m
[32m  Best f1:0.2914[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41548:  71%|███████▏  | 20/28 [01:15<00:34,  4.26s/it]epoch 3 loss 1.41388:  71%|███████▏  | 20/28 [01:15<00:34,  4.26s/it]epoch 3 loss 1.41388:  75%|███████▌  | 21/28 [01:15<00:21,  3.11s/it]epoch 3 loss 1.41287:  75%|███████▌  | 21/28 [01:16<00:21,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6434[0m
[32m  eval_f1 = 0.293[0m
[32m  eval_mcc = 0.6231[0m
[32m  eval_precision = 0.4079[0m
[32m  eval_recall = 0.2742[0m
[32m  ********************[0m
[32m  Best f1:0.293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.41287:  79%|███████▊  | 22/28 [01:20<00:22,  3.67s/it]epoch 3 loss 1.40909:  79%|███████▊  | 22/28 [01:21<00:22,  3.67s/it]epoch 3 loss 1.40909:  82%|████████▏ | 23/28 [01:21<00:13,  2.69s/it]epoch 3 loss 1.40822:  82%|████████▏ | 23/28 [01:21<00:13,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.643[0m
[32m  eval_f1 = 0.2939[0m
[32m  eval_mcc = 0.6226[0m
[32m  eval_precision = 0.4111[0m
[32m  eval_recall = 0.2743[0m
[32m  ********************[0m
[32m  Best f1:0.2939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.40822:  86%|████████▌ | 24/28 [01:26<00:13,  3.32s/it]epoch 3 loss 1.40348:  86%|████████▌ | 24/28 [01:26<00:13,  3.32s/it]epoch 3 loss 1.40348:  89%|████████▉ | 25/28 [01:26<00:07,  2.44s/it]epoch 3 loss 1.39854:  89%|████████▉ | 25/28 [01:26<00:07,  2.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6437[0m
[32m  eval_f1 = 0.294[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.4112[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best f1:0.294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39854:  93%|█████████▎| 26/28 [01:32<00:07,  3.66s/it]epoch 3 loss 1.3975:  93%|█████████▎| 26/28 [01:33<00:07,  3.66s/it] epoch 3 loss 1.3975:  96%|█████████▋| 27/28 [01:33<00:02,  2.69s/it]epoch 3 loss 1.40961:  96%|█████████▋| 27/28 [01:33<00:02,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6435[0m
[32m  eval_f1 = 0.2976[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.4177[0m
[32m  eval_recall = 0.2754[0m
[32m  ********************[0m
[32m  Best f1:0.2976[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.40961: 100%|██████████| 28/28 [01:38<00:00,  3.36s/it]epoch 3 loss 1.40961: 100%|██████████| 28/28 [01:38<00:00,  3.51s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.31167:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.31167:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s]epoch 4 loss 1.32494:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.643[0m
[32m  eval_f1 = 0.2977[0m
[32m  eval_mcc = 0.6229[0m
[32m  eval_precision = 0.4152[0m
[32m  eval_recall = 0.2754[0m
[32m  ********************[0m
[32m  Best f1:0.2977[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.32494:   7%|▋         | 2/28 [00:08<02:13,  5.14s/it]epoch 4 loss 1.33548:   7%|▋         | 2/28 [00:09<02:13,  5.14s/it]epoch 4 loss 1.33548:  11%|█         | 3/28 [00:09<01:14,  2.99s/it]epoch 4 loss 1.32682:  11%|█         | 3/28 [00:09<01:14,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6436[0m
[32m  eval_f1 = 0.2992[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.418[0m
[32m  eval_recall = 0.2761[0m
[32m  ********************[0m
[32m  Best f1:0.2992[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.32682:  14%|█▍        | 4/28 [00:14<01:32,  3.84s/it]epoch 4 loss 1.33245:  14%|█▍        | 4/28 [00:14<01:32,  3.84s/it]epoch 4 loss 1.33245:  18%|█▊        | 5/28 [00:14<00:59,  2.60s/it]epoch 4 loss 1.36865:  18%|█▊        | 5/28 [00:15<00:59,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.52it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.66it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6434[0m
[32m  eval_f1 = 0.2995[0m
[32m  eval_mcc = 0.6234[0m
[32m  eval_precision = 0.4147[0m
[32m  eval_recall = 0.2764[0m
[32m  ********************[0m
[32m  Best f1:0.2995[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.36865:  21%|██▏       | 6/28 [00:26<02:04,  5.66s/it]epoch 4 loss 1.35555:  21%|██▏       | 6/28 [00:26<02:04,  5.66s/it]epoch 4 loss 1.35555:  25%|██▌       | 7/28 [00:26<01:23,  3.96s/it]epoch 4 loss 1.35394:  25%|██▌       | 7/28 [00:27<01:23,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.644[0m
[32m  eval_f1 = 0.3003[0m
[32m  eval_mcc = 0.6242[0m
[32m  eval_precision = 0.4154[0m
[32m  eval_recall = 0.2771[0m
[32m  ********************[0m
[32m  Best f1:0.3003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35394:  29%|██▊       | 8/28 [00:36<01:52,  5.63s/it]epoch 4 loss 1.36795:  29%|██▊       | 8/28 [00:36<01:52,  5.63s/it]epoch 4 loss 1.36795:  32%|███▏      | 9/28 [00:36<01:15,  4.00s/it]epoch 4 loss 1.36298:  32%|███▏      | 9/28 [00:36<01:15,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.50it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.65it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6449[0m
[32m  eval_f1 = 0.3015[0m
[32m  eval_mcc = 0.6253[0m
[32m  eval_precision = 0.4169[0m
[32m  eval_recall = 0.278[0m
[32m  ********************[0m
[32m  Best f1:0.3015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36298:  36%|███▌      | 10/28 [00:47<01:49,  6.10s/it]epoch 4 loss 1.36335:  36%|███▌      | 10/28 [00:47<01:49,  6.10s/it]epoch 4 loss 1.36335:  39%|███▉      | 11/28 [00:47<01:14,  4.36s/it]epoch 4 loss 1.37184:  39%|███▉      | 11/28 [00:48<01:14,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6456[0m
[32m  eval_f1 = 0.3034[0m
[32m  eval_mcc = 0.626[0m
[32m  eval_precision = 0.4184[0m
[32m  eval_recall = 0.2794[0m
[32m  ********************[0m
[32m  Best f1:0.3034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.626[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37184:  43%|████▎     | 12/28 [00:56<01:31,  5.72s/it]epoch 4 loss 1.37399:  43%|████▎     | 12/28 [00:56<01:31,  5.72s/it]epoch 4 loss 1.37399:  46%|████▋     | 13/28 [00:56<01:01,  4.11s/it]epoch 4 loss 1.37428:  46%|████▋     | 13/28 [00:57<01:01,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6464[0m
[32m  eval_f1 = 0.3033[0m
[32m  eval_mcc = 0.6268[0m
[32m  eval_precision = 0.4186[0m
[32m  eval_recall = 0.2794[0m
[32m  ********************[0m
[32m  Best MCC:0.6268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37428:  50%|█████     | 14/28 [01:03<01:08,  4.91s/it]epoch 4 loss 1.37381:  50%|█████     | 14/28 [01:04<01:08,  4.91s/it]epoch 4 loss 1.37381:  54%|█████▎    | 15/28 [01:04<00:46,  3.55s/it]epoch 4 loss 1.37441:  54%|█████▎    | 15/28 [01:04<00:46,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6464[0m
[32m  eval_f1 = 0.3032[0m
[32m  eval_mcc = 0.6269[0m
[32m  eval_precision = 0.4179[0m
[32m  eval_recall = 0.2793[0m
[32m  ********************[0m
[32m  Best MCC:0.6269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37441:  57%|█████▋    | 16/28 [01:11<00:57,  4.78s/it]epoch 4 loss 1.37324:  57%|█████▋    | 16/28 [01:12<00:57,  4.78s/it]epoch 4 loss 1.37324:  61%|██████    | 17/28 [01:12<00:38,  3.47s/it]epoch 4 loss 1.37112:  61%|██████    | 17/28 [01:12<00:38,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6466[0m
[32m  eval_f1 = 0.3029[0m
[32m  eval_mcc = 0.627[0m
[32m  eval_precision = 0.4168[0m
[32m  eval_recall = 0.279[0m
[32m  ********************[0m
[32m  Best MCC:0.627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37112:  64%|██████▍   | 18/28 [01:17<00:39,  3.96s/it]epoch 4 loss 1.37106:  64%|██████▍   | 18/28 [01:17<00:39,  3.96s/it]epoch 4 loss 1.37106:  68%|██████▊   | 19/28 [01:17<00:26,  2.89s/it]epoch 4 loss 1.36938:  68%|██████▊   | 19/28 [01:18<00:26,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3032[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.4174[0m
[32m  eval_recall = 0.2793[0m
[32m  ********************[0m
[32m  Best MCC:0.6274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36938:  71%|███████▏  | 20/28 [01:22<00:28,  3.53s/it]epoch 4 loss 1.37236:  71%|███████▏  | 20/28 [01:23<00:28,  3.53s/it]epoch 4 loss 1.37236:  75%|███████▌  | 21/28 [01:23<00:18,  2.59s/it]epoch 4 loss 1.3766:  75%|███████▌  | 21/28 [01:23<00:18,  2.59s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6469[0m
[32m  eval_f1 = 0.3027[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.417[0m
[32m  eval_recall = 0.2789[0m

epoch 4 loss 1.3766:  79%|███████▊  | 22/28 [01:26<00:17,  2.95s/it]epoch 4 loss 1.37184:  79%|███████▊  | 22/28 [01:27<00:17,  2.95s/it]epoch 4 loss 1.37184:  82%|████████▏ | 23/28 [01:27<00:10,  2.18s/it]epoch 4 loss 1.37023:  82%|████████▏ | 23/28 [01:27<00:10,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6471[0m
[32m  eval_f1 = 0.3024[0m
[32m  eval_mcc = 0.6275[0m
[32m  eval_precision = 0.4171[0m
[32m  eval_recall = 0.2788[0m
[32m  ********************[0m
[32m  Best MCC:0.6275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37023:  86%|████████▌ | 24/28 [01:32<00:12,  3.06s/it]epoch 4 loss 1.3676:  86%|████████▌ | 24/28 [01:32<00:12,  3.06s/it] epoch 4 loss 1.3676:  89%|████████▉ | 25/28 [01:32<00:06,  2.27s/it]epoch 4 loss 1.36374:  89%|████████▉ | 25/28 [01:33<00:06,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3023[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.417[0m
[32m  eval_recall = 0.2789[0m

epoch 4 loss 1.36374:  93%|█████████▎| 26/28 [01:36<00:05,  2.72s/it]epoch 4 loss 1.3618:  93%|█████████▎| 26/28 [01:37<00:05,  2.72s/it] epoch 4 loss 1.3618:  96%|█████████▋| 27/28 [01:37<00:02,  2.03s/it]epoch 4 loss 1.35806:  96%|█████████▋| 27/28 [01:37<00:02,  2.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3023[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.417[0m
[32m  eval_recall = 0.2788[0m

epoch 4 loss 1.35806: 100%|██████████| 28/28 [01:40<00:00,  2.50s/it]epoch 4 loss 1.35806: 100%|██████████| 28/28 [01:40<00:00,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6456[0m
[32m  eval_f1 = 0.3034[0m
[32m  eval_mcc = 0.626[0m
[32m  eval_precision = 0.4184[0m
[32m  eval_recall = 0.2794[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.626[0m
[32m  eval_f1 = 0.2413[0m
[32m  eval_mcc = 0.6062[0m
[32m  eval_precision = 0.3333[0m
[32m  eval_recall = 0.2251[0m

