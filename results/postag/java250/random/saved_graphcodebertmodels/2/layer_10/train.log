[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.74135:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.74135:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.74026:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0122[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = 0.0033[0m
[32m  eval_precision = 0.0052[0m
[32m  eval_recall = 0.0028[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.74026:   7%|▋         | 2/28 [00:06<01:30,  3.48s/it]epoch 0 loss 5.72857:   7%|▋         | 2/28 [00:06<01:30,  3.48s/it]epoch 0 loss 5.72857:  11%|█         | 3/28 [00:06<00:51,  2.07s/it]epoch 0 loss 5.70713:  11%|█         | 3/28 [00:06<00:51,  2.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0182[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = 0.0042[0m
[32m  eval_precision = 0.0037[0m
[32m  eval_recall = 0.0037[0m
[32m  ********************[0m
[32m  Best f1:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.70713:  14%|█▍        | 4/28 [00:14<01:48,  4.51s/it]epoch 0 loss 5.68026:  14%|█▍        | 4/28 [00:15<01:48,  4.51s/it]epoch 0 loss 5.68026:  18%|█▊        | 5/28 [00:15<01:09,  3.04s/it]epoch 0 loss 5.65277:  18%|█▊        | 5/28 [00:15<01:09,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0338[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = 0.0098[0m
[32m  eval_precision = 0.0038[0m
[32m  eval_recall = 0.0052[0m
[32m  ********************[0m
[32m  Best MCC:0.0098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.65277:  21%|██▏       | 6/28 [00:20<01:21,  3.70s/it]epoch 0 loss 5.61245:  21%|██▏       | 6/28 [00:20<01:21,  3.70s/it]epoch 0 loss 5.61245:  25%|██▌       | 7/28 [00:20<00:55,  2.62s/it]epoch 0 loss 5.56769:  25%|██▌       | 7/28 [00:21<00:55,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0443[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = 0.0102[0m
[32m  eval_precision = 0.0037[0m
[32m  eval_recall = 0.0078[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.56769:  29%|██▊       | 8/28 [00:28<01:24,  4.24s/it]epoch 0 loss 5.51599:  29%|██▊       | 8/28 [00:28<01:24,  4.24s/it]epoch 0 loss 5.51599:  32%|███▏      | 9/28 [00:28<00:57,  3.05s/it]epoch 0 loss 5.45995:  32%|███▏      | 9/28 [00:29<00:57,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0518[0m
[32m  eval_f1 = 0.0048[0m
[32m  eval_mcc = 0.0154[0m
[32m  eval_precision = 0.0059[0m
[32m  eval_recall = 0.0116[0m
[32m  ********************[0m
[32m  Best f1:0.0048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.45995:  36%|███▌      | 10/28 [00:36<01:21,  4.50s/it]epoch 0 loss 5.39464:  36%|███▌      | 10/28 [00:36<01:21,  4.50s/it]epoch 0 loss 5.39464:  39%|███▉      | 11/28 [00:36<00:55,  3.25s/it]epoch 0 loss 5.3249:  39%|███▉      | 11/28 [00:37<00:55,  3.25s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0607[0m
[32m  eval_f1 = 0.0074[0m
[32m  eval_mcc = 0.0247[0m
[32m  eval_precision = 0.0114[0m
[32m  eval_recall = 0.0143[0m
[32m  ********************[0m
[32m  Best f1:0.0074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.3249:  43%|████▎     | 12/28 [00:43<01:07,  4.19s/it]epoch 0 loss 5.251:  43%|████▎     | 12/28 [00:43<01:07,  4.19s/it] epoch 0 loss 5.251:  46%|████▋     | 13/28 [00:43<00:45,  3.05s/it]epoch 0 loss 5.17467:  46%|████▋     | 13/28 [00:44<00:45,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0714[0m
[32m  eval_f1 = 0.0094[0m
[32m  eval_mcc = 0.0323[0m
[32m  eval_precision = 0.0152[0m
[32m  eval_recall = 0.0161[0m
[32m  ********************[0m
[32m  Best f1:0.0094[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.17467:  50%|█████     | 14/28 [00:50<00:57,  4.11s/it]epoch 0 loss 5.09295:  50%|█████     | 14/28 [00:50<00:57,  4.11s/it]epoch 0 loss 5.09295:  54%|█████▎    | 15/28 [00:50<00:38,  3.00s/it]epoch 0 loss 5.00987:  54%|█████▎    | 15/28 [00:51<00:38,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0958[0m
[32m  eval_f1 = 0.0129[0m
[32m  eval_mcc = 0.0503[0m
[32m  eval_precision = 0.0395[0m
[32m  eval_recall = 0.0198[0m
[32m  ********************[0m
[32m  Best f1:0.0129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.00987:  57%|█████▋    | 16/28 [00:57<00:48,  4.06s/it]epoch 0 loss 4.93655:  57%|█████▋    | 16/28 [00:57<00:48,  4.06s/it]epoch 0 loss 4.93655:  61%|██████    | 17/28 [00:57<00:32,  2.96s/it]epoch 0 loss 4.86099:  61%|██████    | 17/28 [00:57<00:32,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1562[0m
[32m  eval_f1 = 0.0238[0m
[32m  eval_mcc = 0.1042[0m
[32m  eval_precision = 0.0523[0m
[32m  eval_recall = 0.0299[0m
[32m  ********************[0m
[32m  Best f1:0.0238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.86099:  64%|██████▍   | 18/28 [01:04<00:40,  4.05s/it]epoch 0 loss 4.78286:  64%|██████▍   | 18/28 [01:04<00:40,  4.05s/it]epoch 0 loss 4.78286:  68%|██████▊   | 19/28 [01:04<00:26,  2.96s/it]epoch 0 loss 4.7172:  68%|██████▊   | 19/28 [01:04<00:26,  2.96s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1993[0m
[32m  eval_f1 = 0.026[0m
[32m  eval_mcc = 0.148[0m
[32m  eval_precision = 0.043[0m
[32m  eval_recall = 0.0307[0m
[32m  ********************[0m
[32m  Best f1:0.026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.7172:  71%|███████▏  | 20/28 [01:10<00:30,  3.76s/it]epoch 0 loss 4.64418:  71%|███████▏  | 20/28 [01:10<00:30,  3.76s/it]epoch 0 loss 4.64418:  75%|███████▌  | 21/28 [01:10<00:19,  2.76s/it]epoch 0 loss 4.57505:  75%|███████▌  | 21/28 [01:11<00:19,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2526[0m
[32m  eval_f1 = 0.0344[0m
[32m  eval_mcc = 0.2[0m
[32m  eval_precision = 0.0618[0m
[32m  eval_recall = 0.0385[0m
[32m  ********************[0m
[32m  Best f1:0.0344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.57505:  79%|███████▊  | 22/28 [01:17<00:23,  3.86s/it]epoch 0 loss 4.50959:  79%|███████▊  | 22/28 [01:17<00:23,  3.86s/it]epoch 0 loss 4.50959:  82%|████████▏ | 23/28 [01:17<00:14,  2.83s/it]epoch 0 loss 4.4433:  82%|████████▏ | 23/28 [01:17<00:14,  2.83s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3161[0m
[32m  eval_f1 = 0.0417[0m
[32m  eval_mcc = 0.2622[0m
[32m  eval_precision = 0.0654[0m
[32m  eval_recall = 0.0455[0m
[32m  ********************[0m
[32m  Best f1:0.0417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.4433:  86%|████████▌ | 24/28 [01:26<00:19,  4.80s/it]epoch 0 loss 4.38377:  86%|████████▌ | 24/28 [01:27<00:19,  4.80s/it]epoch 0 loss 4.38377:  89%|████████▉ | 25/28 [01:27<00:10,  3.48s/it]epoch 0 loss 4.32515:  89%|████████▉ | 25/28 [01:27<00:10,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3341[0m
[32m  eval_f1 = 0.0573[0m
[32m  eval_mcc = 0.2906[0m
[32m  eval_precision = 0.1075[0m
[32m  eval_recall = 0.0582[0m
[32m  ********************[0m
[32m  Best f1:0.0573[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2906[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.32515:  93%|█████████▎| 26/28 [01:36<00:10,  5.16s/it]epoch 0 loss 4.26956:  93%|█████████▎| 26/28 [01:36<00:10,  5.16s/it]epoch 0 loss 4.26956:  96%|█████████▋| 27/28 [01:36<00:03,  3.74s/it]epoch 0 loss 4.21694:  96%|█████████▋| 27/28 [01:36<00:03,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.61it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3622[0m
[32m  eval_f1 = 0.0868[0m
[32m  eval_mcc = 0.344[0m
[32m  eval_precision = 0.1475[0m
[32m  eval_recall = 0.0808[0m
[32m  ********************[0m
[32m  Best f1:0.0868[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.21694: 100%|██████████| 28/28 [01:48<00:00,  6.01s/it]epoch 0 loss 4.21694: 100%|██████████| 28/28 [01:48<00:00,  3.86s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.63275:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.63275:   4%|▎         | 1/28 [00:00<00:11,  2.44it/s]epoch 1 loss 2.54814:   4%|▎         | 1/28 [00:00<00:11,  2.44it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4204[0m
[32m  eval_f1 = 0.1197[0m
[32m  eval_mcc = 0.4107[0m
[32m  eval_precision = 0.1809[0m
[32m  eval_recall = 0.1091[0m
[32m  ********************[0m
[32m  Best f1:0.1197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.54814:   7%|▋         | 2/28 [00:09<02:24,  5.56s/it]epoch 1 loss 2.52138:   7%|▋         | 2/28 [00:10<02:24,  5.56s/it]epoch 1 loss 2.52138:  11%|█         | 3/28 [00:10<01:20,  3.22s/it]epoch 1 loss 2.49754:  11%|█         | 3/28 [00:10<01:20,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.62it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4757[0m
[32m  eval_f1 = 0.1381[0m
[32m  eval_mcc = 0.4547[0m
[32m  eval_precision = 0.1828[0m
[32m  eval_recall = 0.1313[0m
[32m  ********************[0m
[32m  Best f1:0.1381[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.49754:  14%|█▍        | 4/28 [00:21<02:32,  6.35s/it]epoch 1 loss 2.47431:  14%|█▍        | 4/28 [00:21<02:32,  6.35s/it]epoch 1 loss 2.47431:  18%|█▊        | 5/28 [00:21<01:36,  4.21s/it]epoch 1 loss 2.46325:  18%|█▊        | 5/28 [00:21<01:36,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5342[0m
[32m  eval_f1 = 0.1579[0m
[32m  eval_mcc = 0.5062[0m
[32m  eval_precision = 0.2015[0m
[32m  eval_recall = 0.1534[0m
[32m  ********************[0m
[32m  Best f1:0.1579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.46325:  21%|██▏       | 6/28 [00:30<02:09,  5.88s/it]epoch 1 loss 2.44482:  21%|██▏       | 6/28 [00:31<02:09,  5.88s/it]epoch 1 loss 2.44482:  25%|██▌       | 7/28 [00:31<01:26,  4.10s/it]epoch 1 loss 2.41756:  25%|██▌       | 7/28 [00:31<01:26,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.50it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.65it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5625[0m
[32m  eval_f1 = 0.17[0m
[32m  eval_mcc = 0.5355[0m
[32m  eval_precision = 0.218[0m
[32m  eval_recall = 0.1633[0m
[32m  ********************[0m
[32m  Best f1:0.17[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.41756:  29%|██▊       | 8/28 [00:42<02:08,  6.40s/it]epoch 1 loss 2.3827:  29%|██▊       | 8/28 [00:42<02:08,  6.40s/it] epoch 1 loss 2.3827:  32%|███▏      | 9/28 [00:42<01:26,  4.54s/it]epoch 1 loss 2.34465:  32%|███▏      | 9/28 [00:43<01:26,  4.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5731[0m
[32m  eval_f1 = 0.1783[0m
[32m  eval_mcc = 0.5482[0m
[32m  eval_precision = 0.224[0m
[32m  eval_recall = 0.1695[0m
[32m  ********************[0m
[32m  Best f1:0.1783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5482[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.34465:  36%|███▌      | 10/28 [00:51<01:45,  5.85s/it]epoch 1 loss 2.31851:  36%|███▌      | 10/28 [00:52<01:45,  5.85s/it]epoch 1 loss 2.31851:  39%|███▉      | 11/28 [00:52<01:11,  4.18s/it]epoch 1 loss 2.30617:  39%|███▉      | 11/28 [00:52<01:11,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5753[0m
[32m  eval_f1 = 0.1795[0m
[32m  eval_mcc = 0.5516[0m
[32m  eval_precision = 0.2203[0m
[32m  eval_recall = 0.1713[0m
[32m  ********************[0m
[32m  Best f1:0.1795[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.30617:  43%|████▎     | 12/28 [01:02<01:35,  5.99s/it]epoch 1 loss 2.28677:  43%|████▎     | 12/28 [01:02<01:35,  5.99s/it]epoch 1 loss 2.28677:  46%|████▋     | 13/28 [01:02<01:04,  4.31s/it]epoch 1 loss 2.25736:  46%|████▋     | 13/28 [01:03<01:04,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5831[0m
[32m  eval_f1 = 0.1831[0m
[32m  eval_mcc = 0.5603[0m
[32m  eval_precision = 0.221[0m
[32m  eval_recall = 0.1748[0m
[32m  ********************[0m
[32m  Best f1:0.1831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5603[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.25736:  50%|█████     | 14/28 [01:10<01:16,  5.43s/it]epoch 1 loss 2.23399:  50%|█████     | 14/28 [01:11<01:16,  5.43s/it]epoch 1 loss 2.23399:  54%|█████▎    | 15/28 [01:11<00:50,  3.92s/it]epoch 1 loss 2.21808:  54%|█████▎    | 15/28 [01:11<00:50,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5885[0m
[32m  eval_f1 = 0.1857[0m
[32m  eval_mcc = 0.5647[0m
[32m  eval_precision = 0.2178[0m
[32m  eval_recall = 0.1783[0m
[32m  ********************[0m
[32m  Best f1:0.1857[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.21808:  57%|█████▋    | 16/28 [01:19<01:04,  5.34s/it]epoch 1 loss 2.1991:  57%|█████▋    | 16/28 [01:20<01:04,  5.34s/it] epoch 1 loss 2.1991:  61%|██████    | 17/28 [01:20<00:42,  3.86s/it]epoch 1 loss 2.17524:  61%|██████    | 17/28 [01:20<00:42,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5865[0m
[32m  eval_f1 = 0.1894[0m
[32m  eval_mcc = 0.5612[0m
[32m  eval_precision = 0.2427[0m
[32m  eval_recall = 0.1827[0m
[32m  ********************[0m
[32m  Best f1:0.1894[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.17524:  64%|██████▍   | 18/28 [01:25<00:43,  4.37s/it]epoch 1 loss 2.15876:  64%|██████▍   | 18/28 [01:26<00:43,  4.37s/it]epoch 1 loss 2.15876:  68%|██████▊   | 19/28 [01:26<00:28,  3.18s/it]epoch 1 loss 2.14944:  68%|██████▊   | 19/28 [01:26<00:28,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5872[0m
[32m  eval_f1 = 0.1973[0m
[32m  eval_mcc = 0.562[0m
[32m  eval_precision = 0.2602[0m
[32m  eval_recall = 0.189[0m
[32m  ********************[0m
[32m  Best f1:0.1973[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.14944:  71%|███████▏  | 20/28 [01:31<00:29,  3.70s/it]epoch 1 loss 2.12996:  71%|███████▏  | 20/28 [01:31<00:29,  3.70s/it]epoch 1 loss 2.12996:  75%|███████▌  | 21/28 [01:31<00:18,  2.71s/it]epoch 1 loss 2.11312:  75%|███████▌  | 21/28 [01:31<00:18,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5937[0m
[32m  eval_f1 = 0.2029[0m
[32m  eval_mcc = 0.5695[0m
[32m  eval_precision = 0.2823[0m
[32m  eval_recall = 0.194[0m
[32m  ********************[0m
[32m  Best f1:0.2029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5695[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11312:  79%|███████▊  | 22/28 [01:42<00:31,  5.24s/it]epoch 1 loss 2.09363:  79%|███████▊  | 22/28 [01:43<00:31,  5.24s/it]epoch 1 loss 2.09363:  82%|████████▏ | 23/28 [01:43<00:18,  3.80s/it]epoch 1 loss 2.08175:  82%|████████▏ | 23/28 [01:43<00:18,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5979[0m
[32m  eval_f1 = 0.2166[0m
[32m  eval_mcc = 0.5752[0m
[32m  eval_precision = 0.3025[0m
[32m  eval_recall = 0.2053[0m
[32m  ********************[0m
[32m  Best f1:0.2166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08175:  86%|████████▌ | 24/28 [01:49<00:18,  4.59s/it]epoch 1 loss 2.0676:  86%|████████▌ | 24/28 [01:49<00:18,  4.59s/it] epoch 1 loss 2.0676:  89%|████████▉ | 25/28 [01:49<00:10,  3.34s/it]epoch 1 loss 2.0574:  89%|████████▉ | 25/28 [01:50<00:10,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6031[0m
[32m  eval_f1 = 0.229[0m
[32m  eval_mcc = 0.5829[0m
[32m  eval_precision = 0.3142[0m
[32m  eval_recall = 0.2138[0m
[32m  ********************[0m
[32m  Best f1:0.229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0574:  93%|█████████▎| 26/28 [01:56<00:08,  4.28s/it]epoch 1 loss 2.04175:  93%|█████████▎| 26/28 [01:56<00:08,  4.28s/it]epoch 1 loss 2.04175:  96%|█████████▋| 27/28 [01:56<00:03,  3.13s/it]epoch 1 loss 2.02363:  96%|█████████▋| 27/28 [01:56<00:03,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6054[0m
[32m  eval_f1 = 0.2329[0m
[32m  eval_mcc = 0.5856[0m
[32m  eval_precision = 0.3183[0m
[32m  eval_recall = 0.2174[0m
[32m  ********************[0m
[32m  Best f1:0.2329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5856[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02363: 100%|██████████| 28/28 [02:05<00:00,  4.94s/it]epoch 1 loss 2.02363: 100%|██████████| 28/28 [02:05<00:00,  4.50s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.53475:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.53475:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 2 loss 1.52513:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6069[0m
[32m  eval_f1 = 0.2346[0m
[32m  eval_mcc = 0.5863[0m
[32m  eval_precision = 0.3221[0m
[32m  eval_recall = 0.2178[0m
[32m  ********************[0m
[32m  Best f1:0.2346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5863[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52513:   7%|▋         | 2/28 [00:14<03:35,  8.28s/it]epoch 2 loss 1.54315:   7%|▋         | 2/28 [00:14<03:35,  8.28s/it]epoch 2 loss 1.54315:  11%|█         | 3/28 [00:14<01:57,  4.69s/it]epoch 2 loss 1.5522:  11%|█         | 3/28 [00:15<01:57,  4.69s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6077[0m
[32m  eval_f1 = 0.2357[0m
[32m  eval_mcc = 0.586[0m
[32m  eval_precision = 0.3212[0m
[32m  eval_recall = 0.2186[0m
[32m  ********************[0m
[32m  Best f1:0.2357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.5522:  14%|█▍        | 4/28 [00:19<01:56,  4.87s/it]epoch 2 loss 1.56158:  14%|█▍        | 4/28 [00:20<01:56,  4.87s/it]epoch 2 loss 1.56158:  18%|█▊        | 5/28 [00:20<01:14,  3.26s/it]epoch 2 loss 1.55609:  18%|█▊        | 5/28 [00:20<01:14,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6092[0m
[32m  eval_f1 = 0.2404[0m
[32m  eval_mcc = 0.5866[0m
[32m  eval_precision = 0.3338[0m
[32m  eval_recall = 0.2228[0m
[32m  ********************[0m
[32m  Best f1:0.2404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5866[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55609:  21%|██▏       | 6/28 [00:32<02:16,  6.21s/it]epoch 2 loss 1.56988:  21%|██▏       | 6/28 [00:32<02:16,  6.21s/it]epoch 2 loss 1.56988:  25%|██▌       | 7/28 [00:32<01:30,  4.32s/it]epoch 2 loss 1.55747:  25%|██▌       | 7/28 [00:32<01:30,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6122[0m
[32m  eval_f1 = 0.2459[0m
[32m  eval_mcc = 0.5896[0m
[32m  eval_precision = 0.3463[0m
[32m  eval_recall = 0.2284[0m
[32m  ********************[0m
[32m  Best f1:0.2459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5896[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55747:  29%|██▊       | 8/28 [00:40<01:46,  5.34s/it]epoch 2 loss 1.55762:  29%|██▊       | 8/28 [00:40<01:46,  5.34s/it]epoch 2 loss 1.55762:  32%|███▏      | 9/28 [00:40<01:12,  3.80s/it]epoch 2 loss 1.57319:  32%|███▏      | 9/28 [00:40<01:12,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6123[0m
[32m  eval_f1 = 0.25[0m
[32m  eval_mcc = 0.5899[0m
[32m  eval_precision = 0.3429[0m
[32m  eval_recall = 0.2332[0m
[32m  ********************[0m
[32m  Best f1:0.25[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5899[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57319:  36%|███▌      | 10/28 [00:49<01:37,  5.42s/it]epoch 2 loss 1.56478:  36%|███▌      | 10/28 [00:49<01:37,  5.42s/it]epoch 2 loss 1.56478:  39%|███▉      | 11/28 [00:49<01:06,  3.89s/it]epoch 2 loss 1.56515:  39%|███▉      | 11/28 [00:50<01:06,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.614[0m
[32m  eval_f1 = 0.255[0m
[32m  eval_mcc = 0.5918[0m
[32m  eval_precision = 0.348[0m
[32m  eval_recall = 0.2382[0m
[32m  ********************[0m
[32m  Best f1:0.255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5918[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56515:  43%|████▎     | 12/28 [00:58<01:22,  5.18s/it]epoch 2 loss 1.56194:  43%|████▎     | 12/28 [00:58<01:22,  5.18s/it]epoch 2 loss 1.56194:  46%|████▋     | 13/28 [00:58<00:56,  3.74s/it]epoch 2 loss 1.56918:  46%|████▋     | 13/28 [00:58<00:56,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6173[0m
[32m  eval_f1 = 0.2583[0m
[32m  eval_mcc = 0.5956[0m
[32m  eval_precision = 0.3517[0m
[32m  eval_recall = 0.2419[0m
[32m  ********************[0m
[32m  Best f1:0.2583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5956[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56918:  50%|█████     | 14/28 [01:07<01:14,  5.29s/it]epoch 2 loss 1.55991:  50%|█████     | 14/28 [01:07<01:14,  5.29s/it]epoch 2 loss 1.55991:  54%|█████▎    | 15/28 [01:07<00:49,  3.83s/it]epoch 2 loss 1.56346:  54%|█████▎    | 15/28 [01:08<00:49,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6187[0m
[32m  eval_f1 = 0.2614[0m
[32m  eval_mcc = 0.5977[0m
[32m  eval_precision = 0.3529[0m
[32m  eval_recall = 0.2441[0m
[32m  ********************[0m
[32m  Best f1:0.2614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5977[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56346:  57%|█████▋    | 16/28 [01:16<01:02,  5.21s/it]epoch 2 loss 1.56178:  57%|█████▋    | 16/28 [01:16<01:02,  5.21s/it]epoch 2 loss 1.56178:  61%|██████    | 17/28 [01:16<00:41,  3.76s/it]epoch 2 loss 1.56064:  61%|██████    | 17/28 [01:17<00:41,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6206[0m
[32m  eval_f1 = 0.2612[0m
[32m  eval_mcc = 0.6001[0m
[32m  eval_precision = 0.3527[0m
[32m  eval_recall = 0.2441[0m
[32m  ********************[0m
[32m  Best MCC:0.6001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56064:  64%|██████▍   | 18/28 [01:21<00:41,  4.17s/it]epoch 2 loss 1.56432:  64%|██████▍   | 18/28 [01:22<00:41,  4.17s/it]epoch 2 loss 1.56432:  68%|██████▊   | 19/28 [01:22<00:27,  3.04s/it]epoch 2 loss 1.56523:  68%|██████▊   | 19/28 [01:22<00:27,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6224[0m
[32m  eval_f1 = 0.2628[0m
[32m  eval_mcc = 0.6014[0m
[32m  eval_precision = 0.3551[0m
[32m  eval_recall = 0.2465[0m
[32m  ********************[0m
[32m  Best f1:0.2628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56523:  71%|███████▏  | 20/28 [01:31<00:38,  4.82s/it]epoch 2 loss 1.5632:  71%|███████▏  | 20/28 [01:31<00:38,  4.82s/it] epoch 2 loss 1.5632:  75%|███████▌  | 21/28 [01:31<00:24,  3.50s/it]epoch 2 loss 1.55657:  75%|███████▌  | 21/28 [01:31<00:24,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6247[0m
[32m  eval_f1 = 0.2672[0m
[32m  eval_mcc = 0.6033[0m
[32m  eval_precision = 0.3659[0m
[32m  eval_recall = 0.2505[0m
[32m  ********************[0m
[32m  Best f1:0.2672[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55657:  79%|███████▊  | 22/28 [01:42<00:35,  5.85s/it]epoch 2 loss 1.54987:  79%|███████▊  | 22/28 [01:43<00:35,  5.85s/it]epoch 2 loss 1.54987:  82%|████████▏ | 23/28 [01:43<00:21,  4.22s/it]epoch 2 loss 1.55171:  82%|████████▏ | 23/28 [01:43<00:21,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6269[0m
[32m  eval_f1 = 0.2691[0m
[32m  eval_mcc = 0.6053[0m
[32m  eval_precision = 0.3752[0m
[32m  eval_recall = 0.2519[0m
[32m  ********************[0m
[32m  Best f1:0.2691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55171:  86%|████████▌ | 24/28 [01:52<00:22,  5.62s/it]epoch 2 loss 1.55107:  86%|████████▌ | 24/28 [01:52<00:22,  5.62s/it]epoch 2 loss 1.55107:  89%|████████▉ | 25/28 [01:52<00:12,  4.06s/it]epoch 2 loss 1.54592:  89%|████████▉ | 25/28 [01:52<00:12,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6278[0m
[32m  eval_f1 = 0.2699[0m
[32m  eval_mcc = 0.6064[0m
[32m  eval_precision = 0.3784[0m
[32m  eval_recall = 0.2527[0m
[32m  ********************[0m
[32m  Best f1:0.2699[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54592:  93%|█████████▎| 26/28 [02:02<00:11,  5.84s/it]epoch 2 loss 1.54035:  93%|█████████▎| 26/28 [02:02<00:11,  5.84s/it]epoch 2 loss 1.54035:  96%|█████████▋| 27/28 [02:02<00:04,  4.22s/it]epoch 2 loss 1.53825:  96%|█████████▋| 27/28 [02:03<00:04,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6274[0m
[32m  eval_f1 = 0.27[0m
[32m  eval_mcc = 0.6064[0m
[32m  eval_precision = 0.3849[0m
[32m  eval_recall = 0.2523[0m
[32m  ********************[0m
[32m  Best f1:0.27[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53825: 100%|██████████| 28/28 [02:13<00:00,  6.03s/it]epoch 2 loss 1.53825: 100%|██████████| 28/28 [02:13<00:00,  4.76s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.41618:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.41618:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s]epoch 3 loss 1.50794:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.59it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6271[0m
[32m  eval_f1 = 0.2744[0m
[32m  eval_mcc = 0.6063[0m
[32m  eval_precision = 0.3865[0m
[32m  eval_recall = 0.2554[0m
[32m  ********************[0m
[32m  Best f1:0.2744[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.50794:   7%|▋         | 2/28 [00:07<01:50,  4.24s/it]epoch 3 loss 1.46298:   7%|▋         | 2/28 [00:07<01:50,  4.24s/it]epoch 3 loss 1.46298:  11%|█         | 3/28 [00:07<01:02,  2.48s/it]epoch 3 loss 1.47783:  11%|█         | 3/28 [00:08<01:02,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6278[0m
[32m  eval_f1 = 0.2781[0m
[32m  eval_mcc = 0.6074[0m
[32m  eval_precision = 0.3873[0m
[32m  eval_recall = 0.2585[0m
[32m  ********************[0m
[32m  Best f1:0.2781[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47783:  14%|█▍        | 4/28 [00:16<01:59,  4.98s/it]epoch 3 loss 1.44721:  14%|█▍        | 4/28 [00:16<01:59,  4.98s/it]epoch 3 loss 1.44721:  18%|█▊        | 5/28 [00:16<01:16,  3.34s/it]epoch 3 loss 1.46825:  18%|█▊        | 5/28 [00:17<01:16,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6293[0m
[32m  eval_f1 = 0.2801[0m
[32m  eval_mcc = 0.6093[0m
[32m  eval_precision = 0.3805[0m
[32m  eval_recall = 0.2612[0m
[32m  ********************[0m
[32m  Best f1:0.2801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46825:  21%|██▏       | 6/28 [00:25<01:54,  5.21s/it]epoch 3 loss 1.47441:  21%|██▏       | 6/28 [00:26<01:54,  5.21s/it]epoch 3 loss 1.47441:  25%|██▌       | 7/28 [00:26<01:16,  3.64s/it]epoch 3 loss 1.49013:  25%|██▌       | 7/28 [00:26<01:16,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6302[0m
[32m  eval_f1 = 0.2826[0m
[32m  eval_mcc = 0.6103[0m
[32m  eval_precision = 0.3869[0m
[32m  eval_recall = 0.2642[0m
[32m  ********************[0m
[32m  Best f1:0.2826[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.49013:  29%|██▊       | 8/28 [00:35<01:49,  5.47s/it]epoch 3 loss 1.46962:  29%|██▊       | 8/28 [00:36<01:49,  5.47s/it]epoch 3 loss 1.46962:  32%|███▏      | 9/28 [00:36<01:13,  3.89s/it]epoch 3 loss 1.47429:  32%|███▏      | 9/28 [00:36<01:13,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6323[0m
[32m  eval_f1 = 0.2841[0m
[32m  eval_mcc = 0.6122[0m
[32m  eval_precision = 0.3861[0m
[32m  eval_recall = 0.266[0m
[32m  ********************[0m
[32m  Best f1:0.2841[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47429:  36%|███▌      | 10/28 [00:46<01:47,  5.97s/it]epoch 3 loss 1.48227:  36%|███▌      | 10/28 [00:47<01:47,  5.97s/it]epoch 3 loss 1.48227:  39%|███▉      | 11/28 [00:47<01:12,  4.28s/it]epoch 3 loss 1.47592:  39%|███▉      | 11/28 [00:47<01:12,  4.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6343[0m
[32m  eval_f1 = 0.2842[0m
[32m  eval_mcc = 0.6141[0m
[32m  eval_precision = 0.3921[0m
[32m  eval_recall = 0.266[0m
[32m  ********************[0m
[32m  Best f1:0.2842[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47592:  43%|████▎     | 12/28 [00:54<01:24,  5.29s/it]epoch 3 loss 1.4656:  43%|████▎     | 12/28 [00:55<01:24,  5.29s/it] epoch 3 loss 1.4656:  46%|████▋     | 13/28 [00:55<00:57,  3.82s/it]epoch 3 loss 1.45464:  46%|████▋     | 13/28 [00:55<00:57,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6355[0m
[32m  eval_f1 = 0.2854[0m
[32m  eval_mcc = 0.6154[0m
[32m  eval_precision = 0.3921[0m
[32m  eval_recall = 0.2672[0m
[32m  ********************[0m
[32m  Best f1:0.2854[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45464:  50%|█████     | 14/28 [01:03<01:13,  5.25s/it]epoch 3 loss 1.44896:  50%|█████     | 14/28 [01:04<01:13,  5.25s/it]epoch 3 loss 1.44896:  54%|█████▎    | 15/28 [01:04<00:49,  3.79s/it]epoch 3 loss 1.44843:  54%|█████▎    | 15/28 [01:04<00:49,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6371[0m
[32m  eval_f1 = 0.2865[0m
[32m  eval_mcc = 0.6169[0m
[32m  eval_precision = 0.3908[0m
[32m  eval_recall = 0.268[0m
[32m  ********************[0m
[32m  Best f1:0.2865[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44843:  57%|█████▋    | 16/28 [01:11<00:57,  4.82s/it]epoch 3 loss 1.44515:  57%|█████▋    | 16/28 [01:11<00:57,  4.82s/it]epoch 3 loss 1.44515:  61%|██████    | 17/28 [01:11<00:38,  3.50s/it]epoch 3 loss 1.4467:  61%|██████    | 17/28 [01:12<00:38,  3.50s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.2868[0m
[32m  eval_mcc = 0.6167[0m
[32m  eval_precision = 0.3892[0m
[32m  eval_recall = 0.2682[0m
[32m  ********************[0m
[32m  Best f1:0.2868[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.4467:  64%|██████▍   | 18/28 [01:16<00:39,  3.94s/it]epoch 3 loss 1.44643:  64%|██████▍   | 18/28 [01:17<00:39,  3.94s/it]epoch 3 loss 1.44643:  68%|██████▊   | 19/28 [01:17<00:25,  2.88s/it]epoch 3 loss 1.44201:  68%|██████▊   | 19/28 [01:17<00:25,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.639[0m
[32m  eval_f1 = 0.2879[0m
[32m  eval_mcc = 0.6182[0m
[32m  eval_precision = 0.3875[0m
[32m  eval_recall = 0.2698[0m
[32m  ********************[0m
[32m  Best f1:0.2879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44201:  71%|███████▏  | 20/28 [01:25<00:36,  4.55s/it]epoch 3 loss 1.44037:  71%|███████▏  | 20/28 [01:25<00:36,  4.55s/it]epoch 3 loss 1.44037:  75%|███████▌  | 21/28 [01:25<00:23,  3.31s/it]epoch 3 loss 1.43924:  75%|███████▌  | 21/28 [01:26<00:23,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.2868[0m
[32m  eval_mcc = 0.6179[0m
[32m  eval_precision = 0.3881[0m
[32m  eval_recall = 0.2689[0m

epoch 3 loss 1.43924:  79%|███████▊  | 22/28 [01:29<00:20,  3.45s/it]epoch 3 loss 1.43539:  79%|███████▊  | 22/28 [01:30<00:20,  3.45s/it]epoch 3 loss 1.43539:  82%|████████▏ | 23/28 [01:30<00:12,  2.54s/it]epoch 3 loss 1.43428:  82%|████████▏ | 23/28 [01:30<00:12,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.291[0m
[32m  eval_mcc = 0.6183[0m
[32m  eval_precision = 0.3969[0m
[32m  eval_recall = 0.2712[0m
[32m  ********************[0m
[32m  Best f1:0.291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43428:  86%|████████▌ | 24/28 [01:37<00:15,  3.91s/it]epoch 3 loss 1.42925:  86%|████████▌ | 24/28 [01:37<00:15,  3.91s/it]epoch 3 loss 1.42925:  89%|████████▉ | 25/28 [01:37<00:08,  2.87s/it]epoch 3 loss 1.42423:  89%|████████▉ | 25/28 [01:38<00:08,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6401[0m
[32m  eval_f1 = 0.2917[0m
[32m  eval_mcc = 0.6195[0m
[32m  eval_precision = 0.3971[0m
[32m  eval_recall = 0.2713[0m
[32m  ********************[0m
[32m  Best f1:0.2917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42423:  93%|█████████▎| 26/28 [01:46<00:09,  4.58s/it]epoch 3 loss 1.42294:  93%|█████████▎| 26/28 [01:46<00:09,  4.58s/it]epoch 3 loss 1.42294:  96%|█████████▋| 27/28 [01:46<00:03,  3.33s/it]epoch 3 loss 1.4348:  96%|█████████▋| 27/28 [01:46<00:03,  3.33s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.64[0m
[32m  eval_f1 = 0.2919[0m
[32m  eval_mcc = 0.6196[0m
[32m  eval_precision = 0.3962[0m
[32m  eval_recall = 0.2712[0m
[32m  ********************[0m
[32m  Best f1:0.2919[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4348: 100%|██████████| 28/28 [01:53<00:00,  4.43s/it]epoch 3 loss 1.4348: 100%|██████████| 28/28 [01:53<00:00,  4.06s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.34163:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.34163:   4%|▎         | 1/28 [00:00<00:11,  2.43it/s]epoch 4 loss 1.35216:   4%|▎         | 1/28 [00:00<00:11,  2.43it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6401[0m
[32m  eval_f1 = 0.2925[0m
[32m  eval_mcc = 0.6197[0m
[32m  eval_precision = 0.3956[0m
[32m  eval_recall = 0.2718[0m
[32m  ********************[0m
[32m  Best f1:0.2925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35216:   7%|▋         | 2/28 [00:09<02:15,  5.22s/it]epoch 4 loss 1.36167:   7%|▋         | 2/28 [00:09<02:15,  5.22s/it]epoch 4 loss 1.36167:  11%|█         | 3/28 [00:09<01:15,  3.03s/it]epoch 4 loss 1.35279:  11%|█         | 3/28 [00:09<01:15,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6404[0m
[32m  eval_f1 = 0.2935[0m
[32m  eval_mcc = 0.62[0m
[32m  eval_precision = 0.3968[0m
[32m  eval_recall = 0.2725[0m
[32m  ********************[0m
[32m  Best f1:0.2935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.62[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35279:  14%|█▍        | 4/28 [00:17<01:57,  4.90s/it]epoch 4 loss 1.35831:  14%|█▍        | 4/28 [00:17<01:57,  4.90s/it]epoch 4 loss 1.35831:  18%|█▊        | 5/28 [00:17<01:15,  3.28s/it]epoch 4 loss 1.3934:  18%|█▊        | 5/28 [00:17<01:15,  3.28s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6399[0m
[32m  eval_f1 = 0.2941[0m
[32m  eval_mcc = 0.6196[0m
[32m  eval_precision = 0.4054[0m
[32m  eval_recall = 0.2726[0m
[32m  ********************[0m
[32m  Best f1:0.2941[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.3934:  21%|██▏       | 6/28 [00:22<01:24,  3.84s/it]epoch 4 loss 1.37934:  21%|██▏       | 6/28 [00:22<01:24,  3.84s/it]epoch 4 loss 1.37934:  25%|██▌       | 7/28 [00:22<00:57,  2.71s/it]epoch 4 loss 1.37808:  25%|██▌       | 7/28 [00:23<00:57,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6401[0m
[32m  eval_f1 = 0.2945[0m
[32m  eval_mcc = 0.6199[0m
[32m  eval_precision = 0.4046[0m
[32m  eval_recall = 0.2729[0m
[32m  ********************[0m
[32m  Best f1:0.2945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.37808:  29%|██▊       | 8/28 [00:27<01:08,  3.44s/it]epoch 4 loss 1.39208:  29%|██▊       | 8/28 [00:28<01:08,  3.44s/it]epoch 4 loss 1.39208:  32%|███▏      | 9/28 [00:28<00:47,  2.49s/it]epoch 4 loss 1.3871:  32%|███▏      | 9/28 [00:28<00:47,  2.49s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6406[0m
[32m  eval_f1 = 0.2954[0m
[32m  eval_mcc = 0.6206[0m
[32m  eval_precision = 0.4035[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best f1:0.2954[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3871:  36%|███▌      | 10/28 [00:37<01:19,  4.42s/it]epoch 4 loss 1.38796:  36%|███▌      | 10/28 [00:37<01:19,  4.42s/it]epoch 4 loss 1.38796:  39%|███▉      | 11/28 [00:37<00:54,  3.20s/it]epoch 4 loss 1.39708:  39%|███▉      | 11/28 [00:37<00:54,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6412[0m
[32m  eval_f1 = 0.2954[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.403[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best MCC:0.6212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39708:  43%|████▎     | 12/28 [00:42<00:59,  3.75s/it]epoch 4 loss 1.39899:  43%|████▎     | 12/28 [00:42<00:59,  3.75s/it]epoch 4 loss 1.39899:  46%|████▋     | 13/28 [00:42<00:41,  2.74s/it]epoch 4 loss 1.39936:  46%|████▋     | 13/28 [00:43<00:41,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6419[0m
[32m  eval_f1 = 0.2958[0m
[32m  eval_mcc = 0.622[0m
[32m  eval_precision = 0.4026[0m
[32m  eval_recall = 0.2743[0m
[32m  ********************[0m
[32m  Best f1:0.2958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39936:  50%|█████     | 14/28 [00:49<00:53,  3.80s/it]epoch 4 loss 1.39844:  50%|█████     | 14/28 [00:49<00:53,  3.80s/it]epoch 4 loss 1.39844:  54%|█████▎    | 15/28 [00:49<00:36,  2.78s/it]epoch 4 loss 1.39896:  54%|█████▎    | 15/28 [00:49<00:36,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6422[0m
[32m  eval_f1 = 0.2966[0m
[32m  eval_mcc = 0.6223[0m
[32m  eval_precision = 0.4039[0m
[32m  eval_recall = 0.2747[0m
[32m  ********************[0m
[32m  Best f1:0.2966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39896:  57%|█████▋    | 16/28 [00:56<00:46,  3.90s/it]epoch 4 loss 1.39738:  57%|█████▋    | 16/28 [00:56<00:46,  3.90s/it]epoch 4 loss 1.39738:  61%|██████    | 17/28 [00:56<00:31,  2.86s/it]epoch 4 loss 1.39526:  61%|██████    | 17/28 [00:56<00:31,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6425[0m
[32m  eval_f1 = 0.296[0m
[32m  eval_mcc = 0.6226[0m
[32m  eval_precision = 0.4035[0m
[32m  eval_recall = 0.2742[0m
[32m  ********************[0m
[32m  Best MCC:0.6226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39526:  64%|██████▍   | 18/28 [01:01<00:34,  3.42s/it]epoch 4 loss 1.39529:  64%|██████▍   | 18/28 [01:01<00:34,  3.42s/it]epoch 4 loss 1.39529:  68%|██████▊   | 19/28 [01:01<00:22,  2.52s/it]epoch 4 loss 1.394:  68%|██████▊   | 19/28 [01:02<00:22,  2.52s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6426[0m
[32m  eval_f1 = 0.2958[0m
[32m  eval_mcc = 0.6226[0m
[32m  eval_precision = 0.4036[0m
[32m  eval_recall = 0.2741[0m
[32m  ********************[0m
[32m  Best MCC:0.6226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.394:  71%|███████▏  | 20/28 [01:06<00:26,  3.27s/it]epoch 4 loss 1.39695:  71%|███████▏  | 20/28 [01:07<00:26,  3.27s/it]epoch 4 loss 1.39695:  75%|███████▌  | 21/28 [01:07<00:16,  2.41s/it]epoch 4 loss 1.40107:  75%|███████▌  | 21/28 [01:07<00:16,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6425[0m
[32m  eval_f1 = 0.2956[0m
[32m  eval_mcc = 0.6226[0m
[32m  eval_precision = 0.4039[0m
[32m  eval_recall = 0.2739[0m

epoch 4 loss 1.40107:  79%|███████▊  | 22/28 [01:10<00:16,  2.82s/it]epoch 4 loss 1.39633:  79%|███████▊  | 22/28 [01:11<00:16,  2.82s/it]epoch 4 loss 1.39633:  82%|████████▏ | 23/28 [01:11<00:10,  2.09s/it]epoch 4 loss 1.3946:  82%|████████▏ | 23/28 [01:11<00:10,  2.09s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.2953[0m
[32m  eval_mcc = 0.6227[0m
[32m  eval_precision = 0.4026[0m
[32m  eval_recall = 0.2739[0m
[32m  ********************[0m
[32m  Best MCC:0.6227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3946:  86%|████████▌ | 24/28 [01:16<00:11,  2.97s/it]epoch 4 loss 1.39189:  86%|████████▌ | 24/28 [01:16<00:11,  2.97s/it]epoch 4 loss 1.39189:  89%|████████▉ | 25/28 [01:16<00:06,  2.20s/it]epoch 4 loss 1.3881:  89%|████████▉ | 25/28 [01:17<00:06,  2.20s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.2952[0m
[32m  eval_mcc = 0.6227[0m
[32m  eval_precision = 0.403[0m
[32m  eval_recall = 0.2737[0m
[32m  ********************[0m
[32m  Best MCC:0.6227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3881:  93%|█████████▎| 26/28 [01:21<00:05,  3.00s/it]epoch 4 loss 1.38602:  93%|█████████▎| 26/28 [01:21<00:05,  3.00s/it]epoch 4 loss 1.38602:  96%|█████████▋| 27/28 [01:21<00:02,  2.22s/it]epoch 4 loss 1.38202:  96%|█████████▋| 27/28 [01:22<00:02,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6429[0m
[32m  eval_f1 = 0.2953[0m
[32m  eval_mcc = 0.623[0m
[32m  eval_precision = 0.4035[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best MCC:0.623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38202: 100%|██████████| 28/28 [01:26<00:00,  3.00s/it]epoch 4 loss 1.38202: 100%|██████████| 28/28 [01:26<00:00,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6422[0m
[32m  eval_f1 = 0.2966[0m
[32m  eval_mcc = 0.6223[0m
[32m  eval_precision = 0.4039[0m
[32m  eval_recall = 0.2747[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6222[0m
[32m  eval_f1 = 0.2364[0m
[32m  eval_mcc = 0.602[0m
[32m  eval_precision = 0.3221[0m
[32m  eval_recall = 0.2215[0m

