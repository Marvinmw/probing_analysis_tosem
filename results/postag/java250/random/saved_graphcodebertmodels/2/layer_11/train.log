[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=11, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.72648:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.72648:   4%|▎         | 1/28 [00:00<00:21,  1.26it/s]epoch 0 loss 5.72048:   4%|▎         | 1/28 [00:01<00:21,  1.26it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0007[0m
[32m  eval_f1 = 0.0017[0m
[32m  eval_mcc = -0.0017[0m
[32m  eval_precision = 0.0052[0m
[32m  eval_recall = 0.0012[0m
[32m  ********************[0m
[32m  Best f1:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.72048:   7%|▋         | 2/28 [00:05<01:21,  3.12s/it]epoch 0 loss 5.70854:   7%|▋         | 2/28 [00:05<01:21,  3.12s/it]epoch 0 loss 5.70854:  11%|█         | 3/28 [00:05<00:46,  1.88s/it]epoch 0 loss 5.68642:  11%|█         | 3/28 [00:06<00:46,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0062[0m
[32m  eval_f1 = 0.0023[0m
[32m  eval_mcc = 0.0011[0m
[32m  eval_precision = 0.0058[0m
[32m  eval_recall = 0.0022[0m
[32m  ********************[0m
[32m  Best f1:0.0023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.68642:  14%|█▍        | 4/28 [00:11<01:22,  3.43s/it]epoch 0 loss 5.66019:  14%|█▍        | 4/28 [00:12<01:22,  3.43s/it]epoch 0 loss 5.66019:  18%|█▊        | 5/28 [00:12<00:53,  2.35s/it]epoch 0 loss 5.62829:  18%|█▊        | 5/28 [00:12<00:53,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0185[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = 0.0034[0m
[32m  eval_precision = 0.0033[0m
[32m  eval_recall = 0.0032[0m
[32m  ********************[0m
[32m  Best MCC:0.0034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.62829:  21%|██▏       | 6/28 [00:17<01:12,  3.30s/it]epoch 0 loss 5.5868:  21%|██▏       | 6/28 [00:17<01:12,  3.30s/it] epoch 0 loss 5.5868:  25%|██▌       | 7/28 [00:17<00:49,  2.35s/it]epoch 0 loss 5.54054:  25%|██▌       | 7/28 [00:18<00:49,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0443[0m
[32m  eval_f1 = 0.004[0m
[32m  eval_mcc = 0.0099[0m
[32m  eval_precision = 0.0046[0m
[32m  eval_recall = 0.0083[0m
[32m  ********************[0m
[32m  Best f1:0.004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.54054:  29%|██▊       | 8/28 [00:26<01:26,  4.31s/it]epoch 0 loss 5.48725:  29%|██▊       | 8/28 [00:26<01:26,  4.31s/it]epoch 0 loss 5.48725:  32%|███▏      | 9/28 [00:26<00:58,  3.10s/it]epoch 0 loss 5.42913:  32%|███▏      | 9/28 [00:27<00:58,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.055[0m
[32m  eval_f1 = 0.0056[0m
[32m  eval_mcc = 0.0126[0m
[32m  eval_precision = 0.0091[0m
[32m  eval_recall = 0.0116[0m
[32m  ********************[0m
[32m  Best f1:0.0056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0126[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.42913:  36%|███▌      | 10/28 [00:34<01:19,  4.41s/it]epoch 0 loss 5.36126:  36%|███▌      | 10/28 [00:34<01:19,  4.41s/it]epoch 0 loss 5.36126:  39%|███▉      | 11/28 [00:34<00:54,  3.19s/it]epoch 0 loss 5.28911:  39%|███▉      | 11/28 [00:34<00:54,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0631[0m
[32m  eval_f1 = 0.008[0m
[32m  eval_mcc = 0.0183[0m
[32m  eval_precision = 0.0147[0m
[32m  eval_recall = 0.014[0m
[32m  ********************[0m
[32m  Best f1:0.008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.28911:  43%|████▎     | 12/28 [00:43<01:17,  4.83s/it]epoch 0 loss 5.21466:  43%|████▎     | 12/28 [00:43<01:17,  4.83s/it]epoch 0 loss 5.21466:  46%|████▋     | 13/28 [00:43<00:52,  3.50s/it]epoch 0 loss 5.13695:  46%|████▋     | 13/28 [00:43<00:52,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0744[0m
[32m  eval_f1 = 0.0096[0m
[32m  eval_mcc = 0.0269[0m
[32m  eval_precision = 0.0177[0m
[32m  eval_recall = 0.0153[0m
[32m  ********************[0m
[32m  Best f1:0.0096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.13695:  50%|█████     | 14/28 [00:51<01:07,  4.81s/it]epoch 0 loss 5.05401:  50%|█████     | 14/28 [00:51<01:07,  4.81s/it]epoch 0 loss 5.05401:  54%|█████▎    | 15/28 [00:51<00:45,  3.49s/it]epoch 0 loss 4.96987:  54%|█████▎    | 15/28 [00:52<00:45,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.099[0m
[32m  eval_f1 = 0.0115[0m
[32m  eval_mcc = 0.0469[0m
[32m  eval_precision = 0.0255[0m
[32m  eval_recall = 0.0175[0m
[32m  ********************[0m
[32m  Best f1:0.0115[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.96987:  57%|█████▋    | 16/28 [00:58<00:54,  4.52s/it]epoch 0 loss 4.89738:  57%|█████▋    | 16/28 [00:59<00:54,  4.52s/it]epoch 0 loss 4.89738:  61%|██████    | 17/28 [00:59<00:36,  3.29s/it]epoch 0 loss 4.82231:  61%|██████    | 17/28 [00:59<00:36,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1584[0m
[32m  eval_f1 = 0.0151[0m
[32m  eval_mcc = 0.1025[0m
[32m  eval_precision = 0.0351[0m
[32m  eval_recall = 0.0222[0m
[32m  ********************[0m
[32m  Best f1:0.0151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.82231:  64%|██████▍   | 18/28 [01:06<00:44,  4.43s/it]epoch 0 loss 4.74495:  64%|██████▍   | 18/28 [01:06<00:44,  4.43s/it]epoch 0 loss 4.74495:  68%|██████▊   | 19/28 [01:06<00:29,  3.23s/it]epoch 0 loss 4.68088:  68%|██████▊   | 19/28 [01:06<00:29,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2061[0m
[32m  eval_f1 = 0.0216[0m
[32m  eval_mcc = 0.1502[0m
[32m  eval_precision = 0.0352[0m
[32m  eval_recall = 0.0265[0m
[32m  ********************[0m
[32m  Best f1:0.0216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.68088:  71%|███████▏  | 20/28 [01:13<00:33,  4.22s/it]epoch 0 loss 4.60964:  71%|███████▏  | 20/28 [01:13<00:33,  4.22s/it]epoch 0 loss 4.60964:  75%|███████▌  | 21/28 [01:13<00:21,  3.08s/it]epoch 0 loss 4.54209:  75%|███████▌  | 21/28 [01:13<00:21,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2587[0m
[32m  eval_f1 = 0.0245[0m
[32m  eval_mcc = 0.2001[0m
[32m  eval_precision = 0.0399[0m
[32m  eval_recall = 0.0308[0m
[32m  ********************[0m
[32m  Best f1:0.0245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.54209:  79%|███████▊  | 22/28 [01:19<00:23,  3.88s/it]epoch 0 loss 4.47876:  79%|███████▊  | 22/28 [01:19<00:23,  3.88s/it]epoch 0 loss 4.47876:  82%|████████▏ | 23/28 [01:19<00:14,  2.84s/it]epoch 0 loss 4.41469:  82%|████████▏ | 23/28 [01:20<00:14,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2956[0m
[32m  eval_f1 = 0.0285[0m
[32m  eval_mcc = 0.2391[0m
[32m  eval_precision = 0.0608[0m
[32m  eval_recall = 0.0349[0m
[32m  ********************[0m
[32m  Best f1:0.0285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.41469:  86%|████████▌ | 24/28 [01:26<00:16,  4.02s/it]epoch 0 loss 4.35747:  86%|████████▌ | 24/28 [01:26<00:16,  4.02s/it]epoch 0 loss 4.35747:  89%|████████▉ | 25/28 [01:26<00:08,  2.95s/it]epoch 0 loss 4.30125:  89%|████████▉ | 25/28 [01:27<00:08,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3116[0m
[32m  eval_f1 = 0.0463[0m
[32m  eval_mcc = 0.2698[0m
[32m  eval_precision = 0.0845[0m
[32m  eval_recall = 0.0501[0m
[32m  ********************[0m
[32m  Best f1:0.0463[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.30125:  93%|█████████▎| 26/28 [01:33<00:07,  3.97s/it]epoch 0 loss 4.2476:  93%|█████████▎| 26/28 [01:33<00:07,  3.97s/it] epoch 0 loss 4.2476:  96%|█████████▋| 27/28 [01:33<00:02,  2.90s/it]epoch 0 loss 4.19695:  96%|█████████▋| 27/28 [01:33<00:02,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3542[0m
[32m  eval_f1 = 0.081[0m
[32m  eval_mcc = 0.3345[0m
[32m  eval_precision = 0.1367[0m
[32m  eval_recall = 0.0769[0m
[32m  ********************[0m
[32m  Best f1:0.081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.19695: 100%|██████████| 28/28 [01:42<00:00,  4.71s/it]epoch 0 loss 4.19695: 100%|██████████| 28/28 [01:42<00:00,  3.66s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.66765:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.66765:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 1 loss 2.58299:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.432[0m
[32m  eval_f1 = 0.1217[0m
[32m  eval_mcc = 0.4154[0m
[32m  eval_precision = 0.1684[0m
[32m  eval_recall = 0.1108[0m
[32m  ********************[0m
[32m  Best f1:0.1217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.58299:   7%|▋         | 2/28 [00:08<02:15,  5.20s/it]epoch 1 loss 2.55559:   7%|▋         | 2/28 [00:09<02:15,  5.20s/it]epoch 1 loss 2.55559:  11%|█         | 3/28 [00:09<01:15,  3.02s/it]epoch 1 loss 2.53103:  11%|█         | 3/28 [00:09<01:15,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5009[0m
[32m  eval_f1 = 0.1444[0m
[32m  eval_mcc = 0.4734[0m
[32m  eval_precision = 0.1852[0m
[32m  eval_recall = 0.139[0m
[32m  ********************[0m
[32m  Best f1:0.1444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.53103:  14%|█▍        | 4/28 [00:18<02:11,  5.46s/it]epoch 1 loss 2.50989:  14%|█▍        | 4/28 [00:19<02:11,  5.46s/it]epoch 1 loss 2.50989:  18%|█▊        | 5/28 [00:19<01:23,  3.64s/it]epoch 1 loss 2.49935:  18%|█▊        | 5/28 [00:19<01:23,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5475[0m
[32m  eval_f1 = 0.1621[0m
[32m  eval_mcc = 0.5192[0m
[32m  eval_precision = 0.193[0m
[32m  eval_recall = 0.1569[0m
[32m  ********************[0m
[32m  Best f1:0.1621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.49935:  21%|██▏       | 6/28 [00:26<01:50,  5.03s/it]epoch 1 loss 2.48068:  21%|██▏       | 6/28 [00:27<01:50,  5.03s/it]epoch 1 loss 2.48068:  25%|██▌       | 7/28 [00:27<01:14,  3.52s/it]epoch 1 loss 2.4538:  25%|██▌       | 7/28 [00:27<01:14,  3.52s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5599[0m
[32m  eval_f1 = 0.1665[0m
[32m  eval_mcc = 0.533[0m
[32m  eval_precision = 0.2165[0m
[32m  eval_recall = 0.1594[0m
[32m  ********************[0m
[32m  Best f1:0.1665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.4538:  29%|██▊       | 8/28 [00:35<01:44,  5.20s/it]epoch 1 loss 2.41986:  29%|██▊       | 8/28 [00:36<01:44,  5.20s/it]epoch 1 loss 2.41986:  32%|███▏      | 9/28 [00:36<01:10,  3.71s/it]epoch 1 loss 2.38202:  32%|███▏      | 9/28 [00:36<01:10,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5662[0m
[32m  eval_f1 = 0.1715[0m
[32m  eval_mcc = 0.5409[0m
[32m  eval_precision = 0.2226[0m
[32m  eval_recall = 0.1613[0m
[32m  ********************[0m
[32m  Best f1:0.1715[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.38202:  36%|███▌      | 10/28 [00:45<01:36,  5.36s/it]epoch 1 loss 2.3558:  36%|███▌      | 10/28 [00:45<01:36,  5.36s/it] epoch 1 loss 2.3558:  39%|███▉      | 11/28 [00:45<01:05,  3.85s/it]epoch 1 loss 2.34302:  39%|███▉      | 11/28 [00:46<01:05,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5716[0m
[32m  eval_f1 = 0.1771[0m
[32m  eval_mcc = 0.5476[0m
[32m  eval_precision = 0.2233[0m
[32m  eval_recall = 0.1674[0m
[32m  ********************[0m
[32m  Best f1:0.1771[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.34302:  43%|████▎     | 12/28 [00:55<01:28,  5.55s/it]epoch 1 loss 2.32427:  43%|████▎     | 12/28 [00:55<01:28,  5.55s/it]epoch 1 loss 2.32427:  46%|████▋     | 13/28 [00:55<00:59,  4.00s/it]epoch 1 loss 2.29483:  46%|████▋     | 13/28 [00:56<00:59,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5782[0m
[32m  eval_f1 = 0.1803[0m
[32m  eval_mcc = 0.5544[0m
[32m  eval_precision = 0.221[0m
[32m  eval_recall = 0.1723[0m
[32m  ********************[0m
[32m  Best f1:0.1803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29483:  50%|█████     | 14/28 [01:03<01:11,  5.10s/it]epoch 1 loss 2.27163:  50%|█████     | 14/28 [01:03<01:11,  5.10s/it]epoch 1 loss 2.27163:  54%|█████▎    | 15/28 [01:03<00:47,  3.69s/it]epoch 1 loss 2.25504:  54%|█████▎    | 15/28 [01:04<00:47,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5816[0m
[32m  eval_f1 = 0.1837[0m
[32m  eval_mcc = 0.5565[0m
[32m  eval_precision = 0.2167[0m
[32m  eval_recall = 0.1769[0m
[32m  ********************[0m
[32m  Best f1:0.1837[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.25504:  57%|█████▋    | 16/28 [01:12<01:03,  5.26s/it]epoch 1 loss 2.23603:  57%|█████▋    | 16/28 [01:13<01:03,  5.26s/it]epoch 1 loss 2.23603:  61%|██████    | 17/28 [01:13<00:41,  3.81s/it]epoch 1 loss 2.21192:  61%|██████    | 17/28 [01:13<00:41,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5829[0m
[32m  eval_f1 = 0.1882[0m
[32m  eval_mcc = 0.5571[0m
[32m  eval_precision = 0.233[0m
[32m  eval_recall = 0.1817[0m
[32m  ********************[0m
[32m  Best f1:0.1882[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5571[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.21192:  64%|██████▍   | 18/28 [01:20<00:50,  5.00s/it]epoch 1 loss 2.19532:  64%|██████▍   | 18/28 [01:21<00:50,  5.00s/it]epoch 1 loss 2.19532:  68%|██████▊   | 19/28 [01:21<00:32,  3.63s/it]epoch 1 loss 2.18575:  68%|██████▊   | 19/28 [01:21<00:32,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.584[0m
[32m  eval_f1 = 0.1933[0m
[32m  eval_mcc = 0.5585[0m
[32m  eval_precision = 0.2451[0m
[32m  eval_recall = 0.1859[0m
[32m  ********************[0m
[32m  Best f1:0.1933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.18575:  71%|███████▏  | 20/28 [01:29<00:40,  5.10s/it]epoch 1 loss 2.16636:  71%|███████▏  | 20/28 [01:30<00:40,  5.10s/it]epoch 1 loss 2.16636:  75%|███████▌  | 21/28 [01:30<00:25,  3.69s/it]epoch 1 loss 2.14959:  75%|███████▌  | 21/28 [01:30<00:25,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5918[0m
[32m  eval_f1 = 0.1982[0m
[32m  eval_mcc = 0.5676[0m
[32m  eval_precision = 0.2512[0m
[32m  eval_recall = 0.1898[0m
[32m  ********************[0m
[32m  Best f1:0.1982[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5676[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.14959:  79%|███████▊  | 22/28 [01:37<00:29,  4.86s/it]epoch 1 loss 2.1302:  79%|███████▊  | 22/28 [01:38<00:29,  4.86s/it] epoch 1 loss 2.1302:  82%|████████▏ | 23/28 [01:38<00:17,  3.53s/it]epoch 1 loss 2.11844:  82%|████████▏ | 23/28 [01:38<00:17,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5963[0m
[32m  eval_f1 = 0.2081[0m
[32m  eval_mcc = 0.5742[0m
[32m  eval_precision = 0.2954[0m
[32m  eval_recall = 0.1962[0m
[32m  ********************[0m
[32m  Best f1:0.2081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5742[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11844:  86%|████████▌ | 24/28 [01:46<00:20,  5.06s/it]epoch 1 loss 2.1041:  86%|████████▌ | 24/28 [01:47<00:20,  5.06s/it] epoch 1 loss 2.1041:  89%|████████▉ | 25/28 [01:47<00:11,  3.67s/it]epoch 1 loss 2.09379:  89%|████████▉ | 25/28 [01:47<00:11,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6008[0m
[32m  eval_f1 = 0.2153[0m
[32m  eval_mcc = 0.5812[0m
[32m  eval_precision = 0.3076[0m
[32m  eval_recall = 0.2019[0m
[32m  ********************[0m
[32m  Best f1:0.2153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5812[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09379:  93%|█████████▎| 26/28 [01:55<00:09,  4.98s/it]epoch 1 loss 2.07787:  93%|█████████▎| 26/28 [01:55<00:09,  4.98s/it]epoch 1 loss 2.07787:  96%|█████████▋| 27/28 [01:55<00:03,  3.61s/it]epoch 1 loss 2.05956:  96%|█████████▋| 27/28 [01:55<00:03,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6054[0m
[32m  eval_f1 = 0.2291[0m
[32m  eval_mcc = 0.5854[0m
[32m  eval_precision = 0.3199[0m
[32m  eval_recall = 0.2124[0m
[32m  ********************[0m
[32m  Best f1:0.2291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5854[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05956: 100%|██████████| 28/28 [02:04<00:00,  5.04s/it]epoch 1 loss 2.05956: 100%|██████████| 28/28 [02:04<00:00,  4.43s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.58095:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.58095:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.56805:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.606[0m
[32m  eval_f1 = 0.2313[0m
[32m  eval_mcc = 0.5849[0m
[32m  eval_precision = 0.3244[0m
[32m  eval_recall = 0.2145[0m
[32m  ********************[0m
[32m  Best f1:0.2313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.56805:   7%|▋         | 2/28 [00:05<01:20,  3.10s/it]epoch 2 loss 1.58629:   7%|▋         | 2/28 [00:05<01:20,  3.10s/it]epoch 2 loss 1.58629:  11%|█         | 3/28 [00:05<00:46,  1.87s/it]epoch 2 loss 1.59342:  11%|█         | 3/28 [00:06<00:46,  1.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6066[0m
[32m  eval_f1 = 0.2331[0m
[32m  eval_mcc = 0.5843[0m
[32m  eval_precision = 0.3249[0m
[32m  eval_recall = 0.2155[0m
[32m  ********************[0m
[32m  Best f1:0.2331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.59342:  14%|█▍        | 4/28 [00:10<01:12,  3.03s/it]epoch 2 loss 1.60067:  14%|█▍        | 4/28 [00:11<01:12,  3.03s/it]epoch 2 loss 1.60067:  18%|█▊        | 5/28 [00:11<00:47,  2.08s/it]epoch 2 loss 1.59539:  18%|█▊        | 5/28 [00:11<00:47,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6079[0m
[32m  eval_f1 = 0.2387[0m
[32m  eval_mcc = 0.5849[0m
[32m  eval_precision = 0.3287[0m
[32m  eval_recall = 0.221[0m
[32m  ********************[0m
[32m  Best f1:0.2387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.59539:  21%|██▏       | 6/28 [00:18<01:25,  3.88s/it]epoch 2 loss 1.60848:  21%|██▏       | 6/28 [00:18<01:25,  3.88s/it]epoch 2 loss 1.60848:  25%|██▌       | 7/28 [00:18<00:57,  2.75s/it]epoch 2 loss 1.59476:  25%|██▌       | 7/28 [00:19<00:57,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6092[0m
[32m  eval_f1 = 0.2415[0m
[32m  eval_mcc = 0.5864[0m
[32m  eval_precision = 0.3414[0m
[32m  eval_recall = 0.2244[0m
[32m  ********************[0m
[32m  Best f1:0.2415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5864[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59476:  29%|██▊       | 8/28 [00:24<01:15,  3.77s/it]epoch 2 loss 1.59435:  29%|██▊       | 8/28 [00:25<01:15,  3.77s/it]epoch 2 loss 1.59435:  32%|███▏      | 9/28 [00:25<00:51,  2.72s/it]epoch 2 loss 1.61006:  32%|███▏      | 9/28 [00:25<00:51,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6111[0m
[32m  eval_f1 = 0.2442[0m
[32m  eval_mcc = 0.5889[0m
[32m  eval_precision = 0.3392[0m
[32m  eval_recall = 0.2273[0m
[32m  ********************[0m
[32m  Best f1:0.2442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5889[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61006:  36%|███▌      | 10/28 [00:30<01:05,  3.66s/it]epoch 2 loss 1.60089:  36%|███▌      | 10/28 [00:31<01:05,  3.66s/it]epoch 2 loss 1.60089:  39%|███▉      | 11/28 [00:31<00:45,  2.67s/it]epoch 2 loss 1.60139:  39%|███▉      | 11/28 [00:31<00:45,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6131[0m
[32m  eval_f1 = 0.248[0m
[32m  eval_mcc = 0.5911[0m
[32m  eval_precision = 0.3363[0m
[32m  eval_recall = 0.231[0m
[32m  ********************[0m
[32m  Best f1:0.248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5911[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60139:  43%|████▎     | 12/28 [00:37<01:00,  3.77s/it]epoch 2 loss 1.59827:  43%|████▎     | 12/28 [00:38<01:00,  3.77s/it]epoch 2 loss 1.59827:  46%|████▋     | 13/28 [00:38<00:41,  2.75s/it]epoch 2 loss 1.60525:  46%|████▋     | 13/28 [00:38<00:41,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6153[0m
[32m  eval_f1 = 0.2522[0m
[32m  eval_mcc = 0.5937[0m
[32m  eval_precision = 0.3352[0m
[32m  eval_recall = 0.2354[0m
[32m  ********************[0m
[32m  Best f1:0.2522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60525:  50%|█████     | 14/28 [00:44<00:54,  3.86s/it]epoch 2 loss 1.59552:  50%|█████     | 14/28 [00:44<00:54,  3.86s/it]epoch 2 loss 1.59552:  54%|█████▎    | 15/28 [00:44<00:36,  2.83s/it]epoch 2 loss 1.59898:  54%|█████▎    | 15/28 [00:45<00:36,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6171[0m
[32m  eval_f1 = 0.2545[0m
[32m  eval_mcc = 0.5962[0m
[32m  eval_precision = 0.3365[0m
[32m  eval_recall = 0.2384[0m
[32m  ********************[0m
[32m  Best f1:0.2545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5962[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59898:  57%|█████▋    | 16/28 [00:51<00:47,  3.94s/it]epoch 2 loss 1.59694:  57%|█████▋    | 16/28 [00:51<00:47,  3.94s/it]epoch 2 loss 1.59694:  61%|██████    | 17/28 [00:51<00:31,  2.88s/it]epoch 2 loss 1.59607:  61%|██████    | 17/28 [00:52<00:31,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6196[0m
[32m  eval_f1 = 0.2565[0m
[32m  eval_mcc = 0.5992[0m
[32m  eval_precision = 0.3377[0m
[32m  eval_recall = 0.24[0m
[32m  ********************[0m
[32m  Best f1:0.2565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5992[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59607:  64%|██████▍   | 18/28 [00:57<00:37,  3.71s/it]epoch 2 loss 1.60009:  64%|██████▍   | 18/28 [00:57<00:37,  3.71s/it]epoch 2 loss 1.60009:  68%|██████▊   | 19/28 [00:57<00:24,  2.72s/it]epoch 2 loss 1.60107:  68%|██████▊   | 19/28 [00:58<00:24,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6218[0m
[32m  eval_f1 = 0.2593[0m
[32m  eval_mcc = 0.6007[0m
[32m  eval_precision = 0.3391[0m
[32m  eval_recall = 0.2427[0m
[32m  ********************[0m
[32m  Best f1:0.2593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60107:  71%|███████▏  | 20/28 [01:04<00:30,  3.83s/it]epoch 2 loss 1.59915:  71%|███████▏  | 20/28 [01:04<00:30,  3.83s/it]epoch 2 loss 1.59915:  75%|███████▌  | 21/28 [01:04<00:19,  2.81s/it]epoch 2 loss 1.59231:  75%|███████▌  | 21/28 [01:05<00:19,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6235[0m
[32m  eval_f1 = 0.2623[0m
[32m  eval_mcc = 0.6018[0m
[32m  eval_precision = 0.3483[0m
[32m  eval_recall = 0.2455[0m
[32m  ********************[0m
[32m  Best f1:0.2623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59231:  79%|███████▊  | 22/28 [01:11<00:23,  3.90s/it]epoch 2 loss 1.58555:  79%|███████▊  | 22/28 [01:11<00:23,  3.90s/it]epoch 2 loss 1.58555:  82%|████████▏ | 23/28 [01:11<00:14,  2.86s/it]epoch 2 loss 1.58744:  82%|████████▏ | 23/28 [01:12<00:14,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6257[0m
[32m  eval_f1 = 0.2646[0m
[32m  eval_mcc = 0.6039[0m
[32m  eval_precision = 0.3537[0m
[32m  eval_recall = 0.2484[0m
[32m  ********************[0m
[32m  Best f1:0.2646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58744:  86%|████████▌ | 24/28 [01:18<00:15,  3.94s/it]epoch 2 loss 1.58674:  86%|████████▌ | 24/28 [01:18<00:15,  3.94s/it]epoch 2 loss 1.58674:  89%|████████▉ | 25/28 [01:18<00:08,  2.89s/it]epoch 2 loss 1.5815:  89%|████████▉ | 25/28 [01:18<00:08,  2.89s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6258[0m
[32m  eval_f1 = 0.2646[0m
[32m  eval_mcc = 0.6042[0m
[32m  eval_precision = 0.354[0m
[32m  eval_recall = 0.2482[0m
[32m  ********************[0m
[32m  Best f1:0.2646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5815:  93%|█████████▎| 26/28 [01:25<00:07,  3.96s/it]epoch 2 loss 1.57588:  93%|█████████▎| 26/28 [01:25<00:07,  3.96s/it]epoch 2 loss 1.57588:  96%|█████████▋| 27/28 [01:25<00:02,  2.90s/it]epoch 2 loss 1.57383:  96%|█████████▋| 27/28 [01:25<00:02,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6253[0m
[32m  eval_f1 = 0.2653[0m
[32m  eval_mcc = 0.6042[0m
[32m  eval_precision = 0.3649[0m
[32m  eval_recall = 0.2482[0m
[32m  ********************[0m
[32m  Best f1:0.2653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57383: 100%|██████████| 28/28 [01:34<00:00,  4.75s/it]epoch 2 loss 1.57383: 100%|██████████| 28/28 [01:34<00:00,  3.37s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.44847:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.44847:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 3 loss 1.5433:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6241[0m
[32m  eval_f1 = 0.2656[0m
[32m  eval_mcc = 0.6032[0m
[32m  eval_precision = 0.3665[0m
[32m  eval_recall = 0.2484[0m
[32m  ********************[0m
[32m  Best f1:0.2656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.5433:   7%|▋         | 2/28 [00:07<01:57,  4.54s/it]epoch 3 loss 1.49779:   7%|▋         | 2/28 [00:08<01:57,  4.54s/it]epoch 3 loss 1.49779:  11%|█         | 3/28 [00:08<01:06,  2.67s/it]epoch 3 loss 1.51379:  11%|█         | 3/28 [00:08<01:06,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6249[0m
[32m  eval_f1 = 0.268[0m
[32m  eval_mcc = 0.6045[0m
[32m  eval_precision = 0.3599[0m
[32m  eval_recall = 0.2511[0m
[32m  ********************[0m
[32m  Best f1:0.268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.51379:  14%|█▍        | 4/28 [00:17<02:05,  5.21s/it]epoch 3 loss 1.48338:  14%|█▍        | 4/28 [00:17<02:05,  5.21s/it]epoch 3 loss 1.48338:  18%|█▊        | 5/28 [00:17<01:20,  3.48s/it]epoch 3 loss 1.50519:  18%|█▊        | 5/28 [00:18<01:20,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6254[0m
[32m  eval_f1 = 0.2695[0m
[32m  eval_mcc = 0.6053[0m
[32m  eval_precision = 0.3587[0m
[32m  eval_recall = 0.2531[0m
[32m  ********************[0m
[32m  Best f1:0.2695[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50519:  21%|██▏       | 6/28 [00:24<01:43,  4.72s/it]epoch 3 loss 1.51074:  21%|██▏       | 6/28 [00:25<01:43,  4.72s/it]epoch 3 loss 1.51074:  25%|██▌       | 7/28 [00:25<01:09,  3.31s/it]epoch 3 loss 1.52611:  25%|██▌       | 7/28 [00:25<01:09,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6265[0m
[32m  eval_f1 = 0.2734[0m
[32m  eval_mcc = 0.6065[0m
[32m  eval_precision = 0.3636[0m
[32m  eval_recall = 0.2562[0m
[32m  ********************[0m
[32m  Best f1:0.2734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.52611:  29%|██▊       | 8/28 [00:34<01:41,  5.05s/it]epoch 3 loss 1.50539:  29%|██▊       | 8/28 [00:34<01:41,  5.05s/it]epoch 3 loss 1.50539:  32%|███▏      | 9/28 [00:34<01:08,  3.61s/it]epoch 3 loss 1.51033:  32%|███▏      | 9/28 [00:34<01:08,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6278[0m
[32m  eval_f1 = 0.2764[0m
[32m  eval_mcc = 0.6075[0m
[32m  eval_precision = 0.3664[0m
[32m  eval_recall = 0.2589[0m
[32m  ********************[0m
[32m  Best f1:0.2764[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.51033:  36%|███▌      | 10/28 [00:42<01:28,  4.91s/it]epoch 3 loss 1.5176:  36%|███▌      | 10/28 [00:42<01:28,  4.91s/it] epoch 3 loss 1.5176:  39%|███▉      | 11/28 [00:42<01:00,  3.54s/it]epoch 3 loss 1.51096:  39%|███▉      | 11/28 [00:43<01:00,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6287[0m
[32m  eval_f1 = 0.277[0m
[32m  eval_mcc = 0.6082[0m
[32m  eval_precision = 0.3658[0m
[32m  eval_recall = 0.2597[0m
[32m  ********************[0m
[32m  Best f1:0.277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.51096:  43%|████▎     | 12/28 [00:51<01:20,  5.04s/it]epoch 3 loss 1.50037:  43%|████▎     | 12/28 [00:51<01:20,  5.04s/it]epoch 3 loss 1.50037:  46%|████▋     | 13/28 [00:51<00:54,  3.64s/it]epoch 3 loss 1.48967:  46%|████▋     | 13/28 [00:52<00:54,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6304[0m
[32m  eval_f1 = 0.2775[0m
[32m  eval_mcc = 0.6101[0m
[32m  eval_precision = 0.3648[0m
[32m  eval_recall = 0.2599[0m
[32m  ********************[0m
[32m  Best f1:0.2775[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48967:  50%|█████     | 14/28 [00:59<01:07,  4.82s/it]epoch 3 loss 1.48375:  50%|█████     | 14/28 [00:59<01:07,  4.82s/it]epoch 3 loss 1.48375:  54%|█████▎    | 15/28 [00:59<00:45,  3.49s/it]epoch 3 loss 1.48297:  54%|█████▎    | 15/28 [01:00<00:45,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6327[0m
[32m  eval_f1 = 0.2804[0m
[32m  eval_mcc = 0.6123[0m
[32m  eval_precision = 0.374[0m
[32m  eval_recall = 0.2625[0m
[32m  ********************[0m
[32m  Best f1:0.2804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48297:  57%|█████▋    | 16/28 [01:08<00:59,  4.96s/it]epoch 3 loss 1.4795:  57%|█████▋    | 16/28 [01:08<00:59,  4.96s/it] epoch 3 loss 1.4795:  61%|██████    | 17/28 [01:08<00:39,  3.59s/it]epoch 3 loss 1.48132:  61%|██████    | 17/28 [01:08<00:39,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6348[0m
[32m  eval_f1 = 0.2818[0m
[32m  eval_mcc = 0.6139[0m
[32m  eval_precision = 0.3716[0m
[32m  eval_recall = 0.2643[0m
[32m  ********************[0m
[32m  Best f1:0.2818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6139[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48132:  64%|██████▍   | 18/28 [01:16<00:49,  4.98s/it]epoch 3 loss 1.48109:  64%|██████▍   | 18/28 [01:17<00:49,  4.98s/it]epoch 3 loss 1.48109:  68%|██████▊   | 19/28 [01:17<00:32,  3.61s/it]epoch 3 loss 1.47633:  68%|██████▊   | 19/28 [01:17<00:32,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6356[0m
[32m  eval_f1 = 0.2823[0m
[32m  eval_mcc = 0.6145[0m
[32m  eval_precision = 0.37[0m
[32m  eval_recall = 0.2652[0m
[32m  ********************[0m
[32m  Best f1:0.2823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47633:  71%|███████▏  | 20/28 [01:24<00:37,  4.66s/it]epoch 3 loss 1.47469:  71%|███████▏  | 20/28 [01:24<00:37,  4.66s/it]epoch 3 loss 1.47469:  75%|███████▌  | 21/28 [01:24<00:23,  3.39s/it]epoch 3 loss 1.47347:  75%|███████▌  | 21/28 [01:25<00:23,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6364[0m
[32m  eval_f1 = 0.2828[0m
[32m  eval_mcc = 0.6154[0m
[32m  eval_precision = 0.3812[0m
[32m  eval_recall = 0.2654[0m
[32m  ********************[0m
[32m  Best f1:0.2828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47347:  79%|███████▊  | 22/28 [01:33<00:29,  4.94s/it]epoch 3 loss 1.46955:  79%|███████▊  | 22/28 [01:33<00:29,  4.94s/it]epoch 3 loss 1.46955:  82%|████████▏ | 23/28 [01:33<00:17,  3.58s/it]epoch 3 loss 1.4684:  82%|████████▏ | 23/28 [01:33<00:17,  3.58s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6351[0m
[32m  eval_f1 = 0.2825[0m
[32m  eval_mcc = 0.6141[0m
[32m  eval_precision = 0.3727[0m
[32m  eval_recall = 0.2648[0m

epoch 3 loss 1.4684:  86%|████████▌ | 24/28 [01:37<00:14,  3.64s/it]epoch 3 loss 1.46332:  86%|████████▌ | 24/28 [01:37<00:14,  3.64s/it]epoch 3 loss 1.46332:  89%|████████▉ | 25/28 [01:37<00:08,  2.67s/it]epoch 3 loss 1.45835:  89%|████████▉ | 25/28 [01:38<00:08,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6354[0m
[32m  eval_f1 = 0.2827[0m
[32m  eval_mcc = 0.6146[0m
[32m  eval_precision = 0.3735[0m
[32m  eval_recall = 0.2643[0m

epoch 3 loss 1.45835:  93%|█████████▎| 26/28 [01:41<00:06,  3.00s/it]epoch 3 loss 1.457:  93%|█████████▎| 26/28 [01:41<00:06,  3.00s/it]  epoch 3 loss 1.457:  96%|█████████▋| 27/28 [01:41<00:02,  2.22s/it]epoch 3 loss 1.46911:  96%|█████████▋| 27/28 [01:42<00:02,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6349[0m
[32m  eval_f1 = 0.2831[0m
[32m  eval_mcc = 0.6142[0m
[32m  eval_precision = 0.3712[0m
[32m  eval_recall = 0.2642[0m
[32m  ********************[0m
[32m  Best f1:0.2831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.46911: 100%|██████████| 28/28 [01:46<00:00,  3.03s/it]epoch 3 loss 1.46911: 100%|██████████| 28/28 [01:46<00:00,  3.82s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.38117:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.38117:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s]epoch 4 loss 1.38866:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6355[0m
[32m  eval_f1 = 0.2835[0m
[32m  eval_mcc = 0.6147[0m
[32m  eval_precision = 0.3603[0m
[32m  eval_recall = 0.2644[0m
[32m  ********************[0m
[32m  Best f1:0.2835[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.38866:   7%|▋         | 2/28 [00:05<01:19,  3.05s/it]epoch 4 loss 1.39647:   7%|▋         | 2/28 [00:05<01:19,  3.05s/it]epoch 4 loss 1.39647:  11%|█         | 3/28 [00:05<00:46,  1.84s/it]epoch 4 loss 1.38614:  11%|█         | 3/28 [00:06<00:46,  1.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6355[0m
[32m  eval_f1 = 0.2871[0m
[32m  eval_mcc = 0.6148[0m
[32m  eval_precision = 0.3696[0m
[32m  eval_recall = 0.2664[0m
[32m  ********************[0m
[32m  Best f1:0.2871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.38614:  14%|█▍        | 4/28 [00:10<01:12,  3.01s/it]epoch 4 loss 1.3925:  14%|█▍        | 4/28 [00:10<01:12,  3.01s/it] epoch 4 loss 1.3925:  18%|█▊        | 5/28 [00:10<00:47,  2.07s/it]epoch 4 loss 1.42726:  18%|█▊        | 5/28 [00:11<00:47,  2.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6359[0m
[32m  eval_f1 = 0.2869[0m
[32m  eval_mcc = 0.6153[0m
[32m  eval_precision = 0.3696[0m
[32m  eval_recall = 0.2662[0m

epoch 4 loss 1.42726:  21%|██▏       | 6/28 [00:14<00:58,  2.65s/it]epoch 4 loss 1.413:  21%|██▏       | 6/28 [00:15<00:58,  2.65s/it]  epoch 4 loss 1.413:  25%|██▌       | 7/28 [00:15<00:40,  1.92s/it]epoch 4 loss 1.41169:  25%|██▌       | 7/28 [00:15<00:40,  1.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.636[0m
[32m  eval_f1 = 0.2872[0m
[32m  eval_mcc = 0.6156[0m
[32m  eval_precision = 0.3679[0m
[32m  eval_recall = 0.2662[0m
[32m  ********************[0m
[32m  Best f1:0.2872[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6156[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41169:  29%|██▊       | 8/28 [00:23<01:20,  4.03s/it]epoch 4 loss 1.42567:  29%|██▊       | 8/28 [00:24<01:20,  4.03s/it]epoch 4 loss 1.42567:  32%|███▏      | 9/28 [00:24<00:55,  2.91s/it]epoch 4 loss 1.42024:  32%|███▏      | 9/28 [00:24<00:55,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6375[0m
[32m  eval_f1 = 0.2891[0m
[32m  eval_mcc = 0.6173[0m
[32m  eval_precision = 0.3698[0m
[32m  eval_recall = 0.2678[0m
[32m  ********************[0m
[32m  Best f1:0.2891[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42024:  36%|███▌      | 10/28 [00:32<01:24,  4.71s/it]epoch 4 loss 1.42103:  36%|███▌      | 10/28 [00:33<01:24,  4.71s/it]epoch 4 loss 1.42103:  39%|███▉      | 11/28 [00:33<00:57,  3.40s/it]epoch 4 loss 1.43063:  39%|███▉      | 11/28 [00:33<00:57,  3.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6375[0m
[32m  eval_f1 = 0.289[0m
[32m  eval_mcc = 0.6173[0m
[32m  eval_precision = 0.3688[0m
[32m  eval_recall = 0.2679[0m

epoch 4 loss 1.43063:  43%|████▎     | 12/28 [00:37<00:56,  3.52s/it]epoch 4 loss 1.43288:  43%|████▎     | 12/28 [00:37<00:56,  3.52s/it]epoch 4 loss 1.43288:  46%|████▋     | 13/28 [00:37<00:38,  2.57s/it]epoch 4 loss 1.43332:  46%|████▋     | 13/28 [00:37<00:38,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6382[0m
[32m  eval_f1 = 0.2898[0m
[32m  eval_mcc = 0.618[0m
[32m  eval_precision = 0.3863[0m
[32m  eval_recall = 0.2685[0m
[32m  ********************[0m
[32m  Best f1:0.2898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.43332:  50%|█████     | 14/28 [00:43<00:52,  3.73s/it]epoch 4 loss 1.43249:  50%|█████     | 14/28 [00:44<00:52,  3.73s/it]epoch 4 loss 1.43249:  54%|█████▎    | 15/28 [00:44<00:35,  2.74s/it]epoch 4 loss 1.4334:  54%|█████▎    | 15/28 [00:44<00:35,  2.74s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6387[0m
[32m  eval_f1 = 0.2903[0m
[32m  eval_mcc = 0.6185[0m
[32m  eval_precision = 0.3867[0m
[32m  eval_recall = 0.269[0m
[32m  ********************[0m
[32m  Best f1:0.2903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.4334:  57%|█████▋    | 16/28 [00:50<00:46,  3.86s/it]epoch 4 loss 1.43167:  57%|█████▋    | 16/28 [00:51<00:46,  3.86s/it]epoch 4 loss 1.43167:  61%|██████    | 17/28 [00:51<00:31,  2.83s/it]epoch 4 loss 1.42931:  61%|██████    | 17/28 [00:51<00:31,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6389[0m
[32m  eval_f1 = 0.2902[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.386[0m
[32m  eval_recall = 0.2691[0m
[32m  ********************[0m
[32m  Best MCC:0.6187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42931:  64%|██████▍   | 18/28 [00:55<00:33,  3.39s/it]epoch 4 loss 1.42938:  64%|██████▍   | 18/28 [00:56<00:33,  3.39s/it]epoch 4 loss 1.42938:  68%|██████▊   | 19/28 [00:56<00:22,  2.50s/it]epoch 4 loss 1.42818:  68%|██████▊   | 19/28 [00:56<00:22,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6387[0m
[32m  eval_f1 = 0.2908[0m
[32m  eval_mcc = 0.6185[0m
[32m  eval_precision = 0.3957[0m
[32m  eval_recall = 0.2697[0m
[32m  ********************[0m
[32m  Best f1:0.2908[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.42818:  71%|███████▏  | 20/28 [01:01<00:25,  3.21s/it]epoch 4 loss 1.4312:  71%|███████▏  | 20/28 [01:01<00:25,  3.21s/it] epoch 4 loss 1.4312:  75%|███████▌  | 21/28 [01:01<00:16,  2.37s/it]epoch 4 loss 1.43506:  75%|███████▌  | 21/28 [01:02<00:16,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.2911[0m
[32m  eval_mcc = 0.6192[0m
[32m  eval_precision = 0.3959[0m
[32m  eval_recall = 0.27[0m
[32m  ********************[0m
[32m  Best f1:0.2911[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.43506:  79%|███████▊  | 22/28 [01:07<00:21,  3.56s/it]epoch 4 loss 1.43021:  79%|███████▊  | 22/28 [01:08<00:21,  3.56s/it]epoch 4 loss 1.43021:  82%|████████▏ | 23/28 [01:08<00:13,  2.61s/it]epoch 4 loss 1.42885:  82%|████████▏ | 23/28 [01:08<00:13,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6393[0m
[32m  eval_f1 = 0.2911[0m
[32m  eval_mcc = 0.6191[0m
[32m  eval_precision = 0.3959[0m
[32m  eval_recall = 0.2701[0m

epoch 4 loss 1.42885:  86%|████████▌ | 24/28 [01:12<00:11,  2.97s/it]epoch 4 loss 1.42626:  86%|████████▌ | 24/28 [01:12<00:11,  2.97s/it]epoch 4 loss 1.42626:  89%|████████▉ | 25/28 [01:12<00:06,  2.20s/it]epoch 4 loss 1.42219:  89%|████████▉ | 25/28 [01:12<00:06,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6396[0m
[32m  eval_f1 = 0.291[0m
[32m  eval_mcc = 0.6194[0m
[32m  eval_precision = 0.3958[0m
[32m  eval_recall = 0.27[0m
[32m  ********************[0m
[32m  Best MCC:0.6194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42219:  93%|█████████▎| 26/28 [01:17<00:06,  3.05s/it]epoch 4 loss 1.42011:  93%|█████████▎| 26/28 [01:17<00:06,  3.05s/it]epoch 4 loss 1.42011:  96%|█████████▋| 27/28 [01:17<00:02,  2.25s/it]epoch 4 loss 1.41596:  96%|█████████▋| 27/28 [01:18<00:02,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.2908[0m
[32m  eval_mcc = 0.6193[0m
[32m  eval_precision = 0.3958[0m
[32m  eval_recall = 0.2698[0m

epoch 4 loss 1.41596: 100%|██████████| 28/28 [01:21<00:00,  2.66s/it]epoch 4 loss 1.41596: 100%|██████████| 28/28 [01:21<00:00,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.2911[0m
[32m  eval_mcc = 0.6192[0m
[32m  eval_precision = 0.3959[0m
[32m  eval_recall = 0.27[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.71it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6175[0m
[32m  eval_f1 = 0.2322[0m
[32m  eval_mcc = 0.5971[0m
[32m  eval_precision = 0.3075[0m
[32m  eval_recall = 0.2173[0m

