[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.75061:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.75061:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.744:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0116[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = 0.0045[0m
[32m  eval_precision = 0.0015[0m
[32m  eval_recall = 0.0028[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.744:   7%|▋         | 2/28 [00:06<01:30,  3.50s/it]epoch 0 loss 5.73613:   7%|▋         | 2/28 [00:06<01:30,  3.50s/it]epoch 0 loss 5.73613:  11%|█         | 3/28 [00:06<00:52,  2.08s/it]epoch 0 loss 5.71911:  11%|█         | 3/28 [00:06<00:52,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0143[0m
[32m  eval_f1 = 0.002[0m
[32m  eval_mcc = 0.0028[0m
[32m  eval_precision = 0.0028[0m
[32m  eval_recall = 0.0032[0m
[32m  ********************[0m
[32m  Best f1:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.71911:  14%|█▍        | 4/28 [00:11<01:18,  3.28s/it]epoch 0 loss 5.69604:  14%|█▍        | 4/28 [00:12<01:18,  3.28s/it]epoch 0 loss 5.69604:  18%|█▊        | 5/28 [00:12<00:51,  2.24s/it]epoch 0 loss 5.66787:  18%|█▊        | 5/28 [00:12<00:51,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0257[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = 0.0036[0m
[32m  eval_precision = 0.002[0m
[32m  eval_recall = 0.004[0m

epoch 0 loss 5.66787:  21%|██▏       | 6/28 [00:17<01:13,  3.36s/it]epoch 0 loss 5.62804:  21%|██▏       | 6/28 [00:18<01:13,  3.36s/it]epoch 0 loss 5.62804:  25%|██▌       | 7/28 [00:18<00:50,  2.39s/it]epoch 0 loss 5.58236:  25%|██▌       | 7/28 [00:18<00:50,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0405[0m
[32m  eval_f1 = 0.005[0m
[32m  eval_mcc = 0.0076[0m
[32m  eval_precision = 0.0052[0m
[32m  eval_recall = 0.01[0m
[32m  ********************[0m
[32m  Best f1:0.005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.58236:  29%|██▊       | 8/28 [00:25<01:20,  4.01s/it]epoch 0 loss 5.53065:  29%|██▊       | 8/28 [00:25<01:20,  4.01s/it]epoch 0 loss 5.53065:  32%|███▏      | 9/28 [00:25<00:54,  2.89s/it]epoch 0 loss 5.47451:  32%|███▏      | 9/28 [00:26<00:54,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0488[0m
[32m  eval_f1 = 0.0085[0m
[32m  eval_mcc = 0.0121[0m
[32m  eval_precision = 0.0099[0m
[32m  eval_recall = 0.0153[0m
[32m  ********************[0m
[32m  Best f1:0.0085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.47451:  36%|███▌      | 10/28 [00:34<01:23,  4.62s/it]epoch 0 loss 5.40956:  36%|███▌      | 10/28 [00:34<01:23,  4.62s/it]epoch 0 loss 5.40956:  39%|███▉      | 11/28 [00:34<00:56,  3.33s/it]epoch 0 loss 5.34156:  39%|███▉      | 11/28 [00:35<00:56,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0582[0m
[32m  eval_f1 = 0.016[0m
[32m  eval_mcc = 0.0235[0m
[32m  eval_precision = 0.0213[0m
[32m  eval_recall = 0.0207[0m
[32m  ********************[0m
[32m  Best f1:0.016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.34156:  43%|████▎     | 12/28 [00:42<01:14,  4.64s/it]epoch 0 loss 5.26853:  43%|████▎     | 12/28 [00:42<01:14,  4.64s/it]epoch 0 loss 5.26853:  46%|████▋     | 13/28 [00:42<00:50,  3.37s/it]epoch 0 loss 5.19372:  46%|████▋     | 13/28 [00:43<00:50,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0717[0m
[32m  eval_f1 = 0.0215[0m
[32m  eval_mcc = 0.0369[0m
[32m  eval_precision = 0.035[0m
[32m  eval_recall = 0.0242[0m
[32m  ********************[0m
[32m  Best f1:0.0215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.19372:  50%|█████     | 14/28 [00:51<01:09,  4.93s/it]epoch 0 loss 5.1134:  50%|█████     | 14/28 [00:51<01:09,  4.93s/it] epoch 0 loss 5.1134:  54%|█████▎    | 15/28 [00:51<00:46,  3.57s/it]epoch 0 loss 5.0297:  54%|█████▎    | 15/28 [00:52<00:46,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1035[0m
[32m  eval_f1 = 0.027[0m
[32m  eval_mcc = 0.0643[0m
[32m  eval_precision = 0.0452[0m
[32m  eval_recall = 0.0291[0m
[32m  ********************[0m
[32m  Best f1:0.027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.0297:  57%|█████▋    | 16/28 [00:59<00:57,  4.77s/it]epoch 0 loss 4.9556:  57%|█████▋    | 16/28 [00:59<00:57,  4.77s/it]epoch 0 loss 4.9556:  61%|██████    | 17/28 [00:59<00:38,  3.46s/it]epoch 0 loss 4.87921:  61%|██████    | 17/28 [01:00<00:38,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1853[0m
[32m  eval_f1 = 0.0373[0m
[32m  eval_mcc = 0.1391[0m
[32m  eval_precision = 0.0554[0m
[32m  eval_recall = 0.0408[0m
[32m  ********************[0m
[32m  Best f1:0.0373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.87921:  64%|██████▍   | 18/28 [01:08<00:50,  5.01s/it]epoch 0 loss 4.79985:  64%|██████▍   | 18/28 [01:08<00:50,  5.01s/it]epoch 0 loss 4.79985:  68%|██████▊   | 19/28 [01:08<00:32,  3.63s/it]epoch 0 loss 4.73203:  68%|██████▊   | 19/28 [01:09<00:32,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2456[0m
[32m  eval_f1 = 0.0454[0m
[32m  eval_mcc = 0.2016[0m
[32m  eval_precision = 0.0791[0m
[32m  eval_recall = 0.0476[0m
[32m  ********************[0m
[32m  Best f1:0.0454[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.73203:  71%|███████▏  | 20/28 [01:16<00:38,  4.87s/it]epoch 0 loss 4.65708:  71%|███████▏  | 20/28 [01:17<00:38,  4.87s/it]epoch 0 loss 4.65708:  75%|███████▌  | 21/28 [01:17<00:24,  3.54s/it]epoch 0 loss 4.5851:  75%|███████▌  | 21/28 [01:17<00:24,  3.54s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2927[0m
[32m  eval_f1 = 0.0474[0m
[32m  eval_mcc = 0.2466[0m
[32m  eval_precision = 0.1023[0m
[32m  eval_recall = 0.0497[0m
[32m  ********************[0m
[32m  Best f1:0.0474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.5851:  79%|███████▊  | 22/28 [01:25<00:30,  5.05s/it]epoch 0 loss 4.51709:  79%|███████▊  | 22/28 [01:26<00:30,  5.05s/it]epoch 0 loss 4.51709:  82%|████████▏ | 23/28 [01:26<00:18,  3.66s/it]epoch 0 loss 4.44819:  82%|████████▏ | 23/28 [01:26<00:18,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3335[0m
[32m  eval_f1 = 0.0567[0m
[32m  eval_mcc = 0.2832[0m
[32m  eval_precision = 0.121[0m
[32m  eval_recall = 0.059[0m
[32m  ********************[0m
[32m  Best f1:0.0567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.44819:  86%|████████▌ | 24/28 [01:33<00:19,  4.89s/it]epoch 0 loss 4.3861:  86%|████████▌ | 24/28 [01:34<00:19,  4.89s/it] epoch 0 loss 4.3861:  89%|████████▉ | 25/28 [01:34<00:10,  3.55s/it]epoch 0 loss 4.325:  89%|████████▉ | 25/28 [01:34<00:10,  3.55s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3628[0m
[32m  eval_f1 = 0.0768[0m
[32m  eval_mcc = 0.3185[0m
[32m  eval_precision = 0.1396[0m
[32m  eval_recall = 0.0736[0m
[32m  ********************[0m
[32m  Best f1:0.0768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.325:  93%|█████████▎| 26/28 [01:42<00:10,  5.07s/it]epoch 0 loss 4.26711:  93%|█████████▎| 26/28 [01:43<00:10,  5.07s/it]epoch 0 loss 4.26711:  96%|█████████▋| 27/28 [01:43<00:03,  3.67s/it]epoch 0 loss 4.21272:  96%|█████████▋| 27/28 [01:43<00:03,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3968[0m
[32m  eval_f1 = 0.1064[0m
[32m  eval_mcc = 0.3653[0m
[32m  eval_precision = 0.1872[0m
[32m  eval_recall = 0.0959[0m
[32m  ********************[0m
[32m  Best f1:0.1064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.21272: 100%|██████████| 28/28 [01:51<00:00,  4.94s/it]epoch 0 loss 4.21272: 100%|██████████| 28/28 [01:51<00:00,  3.97s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.5581:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.5581:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.47237:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4508[0m
[32m  eval_f1 = 0.1267[0m
[32m  eval_mcc = 0.426[0m
[32m  eval_precision = 0.1844[0m
[32m  eval_recall = 0.1164[0m
[32m  ********************[0m
[32m  Best f1:0.1267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.426[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.47237:   7%|▋         | 2/28 [00:09<02:18,  5.31s/it]epoch 1 loss 2.44197:   7%|▋         | 2/28 [00:09<02:18,  5.31s/it]epoch 1 loss 2.44197:  11%|█         | 3/28 [00:09<01:16,  3.08s/it]epoch 1 loss 2.41398:  11%|█         | 3/28 [00:09<01:16,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5003[0m
[32m  eval_f1 = 0.1412[0m
[32m  eval_mcc = 0.4737[0m
[32m  eval_precision = 0.1933[0m
[32m  eval_recall = 0.1361[0m
[32m  ********************[0m
[32m  Best f1:0.1412[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4737[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.41398:  14%|█▍        | 4/28 [00:16<01:51,  4.65s/it]epoch 1 loss 2.39105:  14%|█▍        | 4/28 [00:17<01:51,  4.65s/it]epoch 1 loss 2.39105:  18%|█▊        | 5/28 [00:17<01:11,  3.13s/it]epoch 1 loss 2.37878:  18%|█▊        | 5/28 [00:17<01:11,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5408[0m
[32m  eval_f1 = 0.159[0m
[32m  eval_mcc = 0.513[0m
[32m  eval_precision = 0.2012[0m
[32m  eval_recall = 0.1542[0m
[32m  ********************[0m
[32m  Best f1:0.159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.37878:  21%|██▏       | 6/28 [00:23<01:33,  4.27s/it]epoch 1 loss 2.3602:  21%|██▏       | 6/28 [00:23<01:33,  4.27s/it] epoch 1 loss 2.3602:  25%|██▌       | 7/28 [00:23<01:03,  3.01s/it]epoch 1 loss 2.33112:  25%|██▌       | 7/28 [00:24<01:03,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5657[0m
[32m  eval_f1 = 0.1777[0m
[32m  eval_mcc = 0.5388[0m
[32m  eval_precision = 0.2272[0m
[32m  eval_recall = 0.172[0m
[32m  ********************[0m
[32m  Best f1:0.1777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.33112:  29%|██▊       | 8/28 [00:30<01:22,  4.14s/it]epoch 1 loss 2.29593:  29%|██▊       | 8/28 [00:30<01:22,  4.14s/it]epoch 1 loss 2.29593:  32%|███▏      | 9/28 [00:30<00:56,  2.98s/it]epoch 1 loss 2.25787:  32%|███▏      | 9/28 [00:31<00:56,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5746[0m
[32m  eval_f1 = 0.1817[0m
[32m  eval_mcc = 0.5489[0m
[32m  eval_precision = 0.2256[0m
[32m  eval_recall = 0.1749[0m
[32m  ********************[0m
[32m  Best f1:0.1817[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.25787:  36%|███▌      | 10/28 [00:37<01:13,  4.07s/it]epoch 1 loss 2.23206:  36%|███▌      | 10/28 [00:37<01:13,  4.07s/it]epoch 1 loss 2.23206:  39%|███▉      | 11/28 [00:37<00:50,  2.96s/it]epoch 1 loss 2.21948:  39%|███▉      | 11/28 [00:38<00:50,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5804[0m
[32m  eval_f1 = 0.1828[0m
[32m  eval_mcc = 0.5562[0m
[32m  eval_precision = 0.2314[0m
[32m  eval_recall = 0.175[0m
[32m  ********************[0m
[32m  Best f1:0.1828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5562[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.21948:  43%|████▎     | 12/28 [00:44<01:04,  4.05s/it]epoch 1 loss 2.2006:  43%|████▎     | 12/28 [00:44<01:04,  4.05s/it] epoch 1 loss 2.2006:  46%|████▋     | 13/28 [00:44<00:44,  2.95s/it]epoch 1 loss 2.17063:  46%|████▋     | 13/28 [00:45<00:44,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5849[0m
[32m  eval_f1 = 0.1846[0m
[32m  eval_mcc = 0.562[0m
[32m  eval_precision = 0.228[0m
[32m  eval_recall = 0.1764[0m
[32m  ********************[0m
[32m  Best f1:0.1846[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.562[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17063:  50%|█████     | 14/28 [00:52<01:01,  4.41s/it]epoch 1 loss 2.14818:  50%|█████     | 14/28 [00:53<01:01,  4.41s/it]epoch 1 loss 2.14818:  54%|█████▎    | 15/28 [00:53<00:41,  3.21s/it]epoch 1 loss 2.13298:  54%|█████▎    | 15/28 [00:53<00:41,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5892[0m
[32m  eval_f1 = 0.1893[0m
[32m  eval_mcc = 0.5663[0m
[32m  eval_precision = 0.2436[0m
[32m  eval_recall = 0.1803[0m
[32m  ********************[0m
[32m  Best f1:0.1893[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5663[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13298:  57%|█████▋    | 16/28 [01:01<00:58,  4.91s/it]epoch 1 loss 2.11434:  57%|█████▋    | 16/28 [01:02<00:58,  4.91s/it]epoch 1 loss 2.11434:  61%|██████    | 17/28 [01:02<00:39,  3.56s/it]epoch 1 loss 2.09113:  61%|██████    | 17/28 [01:02<00:39,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5916[0m
[32m  eval_f1 = 0.2044[0m
[32m  eval_mcc = 0.5676[0m
[32m  eval_precision = 0.2845[0m
[32m  eval_recall = 0.1921[0m
[32m  ********************[0m
[32m  Best f1:0.2044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5676[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09113:  64%|██████▍   | 18/28 [01:12<00:54,  5.47s/it]epoch 1 loss 2.07503:  64%|██████▍   | 18/28 [01:12<00:54,  5.47s/it]epoch 1 loss 2.07503:  68%|██████▊   | 19/28 [01:12<00:35,  3.95s/it]epoch 1 loss 2.0661:  68%|██████▊   | 19/28 [01:13<00:35,  3.95s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5947[0m
[32m  eval_f1 = 0.2154[0m
[32m  eval_mcc = 0.5704[0m
[32m  eval_precision = 0.306[0m
[32m  eval_recall = 0.2031[0m
[32m  ********************[0m
[32m  Best f1:0.2154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0661:  71%|███████▏  | 20/28 [01:22<00:46,  5.81s/it]epoch 1 loss 2.04712:  71%|███████▏  | 20/28 [01:23<00:46,  5.81s/it]epoch 1 loss 2.04712:  75%|███████▌  | 21/28 [01:23<00:29,  4.19s/it]epoch 1 loss 2.03085:  75%|███████▌  | 21/28 [01:23<00:29,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5981[0m
[32m  eval_f1 = 0.2302[0m
[32m  eval_mcc = 0.5745[0m
[32m  eval_precision = 0.3172[0m
[32m  eval_recall = 0.2195[0m
[32m  ********************[0m
[32m  Best f1:0.2302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03085:  79%|███████▊  | 22/28 [01:33<00:36,  6.06s/it]epoch 1 loss 2.01154:  79%|███████▊  | 22/28 [01:34<00:36,  6.06s/it]epoch 1 loss 2.01154:  82%|████████▏ | 23/28 [01:34<00:21,  4.37s/it]epoch 1 loss 1.99995:  82%|████████▏ | 23/28 [01:34<00:21,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6008[0m
[32m  eval_f1 = 0.2313[0m
[32m  eval_mcc = 0.5781[0m
[32m  eval_precision = 0.3199[0m
[32m  eval_recall = 0.2205[0m
[32m  ********************[0m
[32m  Best f1:0.2313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5781[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99995:  86%|████████▌ | 24/28 [01:42<00:22,  5.70s/it]epoch 1 loss 1.98636:  86%|████████▌ | 24/28 [01:43<00:22,  5.70s/it]epoch 1 loss 1.98636:  89%|████████▉ | 25/28 [01:43<00:12,  4.12s/it]epoch 1 loss 1.97682:  89%|████████▉ | 25/28 [01:43<00:12,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6042[0m
[32m  eval_f1 = 0.2347[0m
[32m  eval_mcc = 0.5831[0m
[32m  eval_precision = 0.3276[0m
[32m  eval_recall = 0.2225[0m
[32m  ********************[0m
[32m  Best f1:0.2347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97682:  93%|█████████▎| 26/28 [01:52<00:11,  5.54s/it]epoch 1 loss 1.96146:  93%|█████████▎| 26/28 [01:52<00:11,  5.54s/it]epoch 1 loss 1.96146:  96%|█████████▋| 27/28 [01:52<00:04,  4.01s/it]epoch 1 loss 1.94411:  96%|█████████▋| 27/28 [01:52<00:04,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.606[0m
[32m  eval_f1 = 0.2381[0m
[32m  eval_mcc = 0.5855[0m
[32m  eval_precision = 0.3395[0m
[32m  eval_recall = 0.2238[0m
[32m  ********************[0m
[32m  Best f1:0.2381[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5855[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94411: 100%|██████████| 28/28 [02:01<00:00,  5.37s/it]epoch 1 loss 1.94411: 100%|██████████| 28/28 [02:01<00:00,  4.33s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.47589:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.47589:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 2 loss 1.46849:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.608[0m
[32m  eval_f1 = 0.2408[0m
[32m  eval_mcc = 0.5873[0m
[32m  eval_precision = 0.3453[0m
[32m  eval_recall = 0.2247[0m
[32m  ********************[0m
[32m  Best f1:0.2408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46849:   7%|▋         | 2/28 [00:08<02:00,  4.64s/it]epoch 2 loss 1.48412:   7%|▋         | 2/28 [00:08<02:00,  4.64s/it]epoch 2 loss 1.48412:  11%|█         | 3/28 [00:08<01:07,  2.71s/it]epoch 2 loss 1.4906:  11%|█         | 3/28 [00:08<01:07,  2.71s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6102[0m
[32m  eval_f1 = 0.2452[0m
[32m  eval_mcc = 0.5889[0m
[32m  eval_precision = 0.3454[0m
[32m  eval_recall = 0.2277[0m
[32m  ********************[0m
[32m  Best f1:0.2452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5889[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4906:  14%|█▍        | 4/28 [00:16<01:59,  4.99s/it]epoch 2 loss 1.50127:  14%|█▍        | 4/28 [00:17<01:59,  4.99s/it]epoch 2 loss 1.50127:  18%|█▊        | 5/28 [00:17<01:16,  3.34s/it]epoch 2 loss 1.49562:  18%|█▊        | 5/28 [00:17<01:16,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6136[0m
[32m  eval_f1 = 0.2508[0m
[32m  eval_mcc = 0.5918[0m
[32m  eval_precision = 0.3536[0m
[32m  eval_recall = 0.2331[0m
[32m  ********************[0m
[32m  Best f1:0.2508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5918[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49562:  21%|██▏       | 6/28 [00:25<01:49,  4.96s/it]epoch 2 loss 1.50972:  21%|██▏       | 6/28 [00:25<01:49,  4.96s/it]epoch 2 loss 1.50972:  25%|██▌       | 7/28 [00:25<01:13,  3.48s/it]epoch 2 loss 1.4976:  25%|██▌       | 7/28 [00:26<01:13,  3.48s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6168[0m
[32m  eval_f1 = 0.2579[0m
[32m  eval_mcc = 0.595[0m
[32m  eval_precision = 0.3541[0m
[32m  eval_recall = 0.2398[0m
[32m  ********************[0m
[32m  Best f1:0.2579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4976:  29%|██▊       | 8/28 [00:34<01:42,  5.15s/it]epoch 2 loss 1.49872:  29%|██▊       | 8/28 [00:34<01:42,  5.15s/it]epoch 2 loss 1.49872:  32%|███▏      | 9/28 [00:34<01:09,  3.67s/it]epoch 2 loss 1.51452:  32%|███▏      | 9/28 [00:35<01:09,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.618[0m
[32m  eval_f1 = 0.2609[0m
[32m  eval_mcc = 0.5963[0m
[32m  eval_precision = 0.3512[0m
[32m  eval_recall = 0.2435[0m
[32m  ********************[0m
[32m  Best f1:0.2609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5963[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51452:  36%|███▌      | 10/28 [00:42<01:27,  4.88s/it]epoch 2 loss 1.50649:  36%|███▌      | 10/28 [00:43<01:27,  4.88s/it]epoch 2 loss 1.50649:  39%|███▉      | 11/28 [00:43<00:59,  3.52s/it]epoch 2 loss 1.50654:  39%|███▉      | 11/28 [00:43<00:59,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6202[0m
[32m  eval_f1 = 0.2662[0m
[32m  eval_mcc = 0.5983[0m
[32m  eval_precision = 0.3608[0m
[32m  eval_recall = 0.2484[0m
[32m  ********************[0m
[32m  Best f1:0.2662[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50654:  43%|████▎     | 12/28 [00:51<01:21,  5.07s/it]epoch 2 loss 1.50339:  43%|████▎     | 12/28 [00:52<01:21,  5.07s/it]epoch 2 loss 1.50339:  46%|████▋     | 13/28 [00:52<00:54,  3.66s/it]epoch 2 loss 1.51087:  46%|████▋     | 13/28 [00:52<00:54,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6231[0m
[32m  eval_f1 = 0.2666[0m
[32m  eval_mcc = 0.6016[0m
[32m  eval_precision = 0.3504[0m
[32m  eval_recall = 0.25[0m
[32m  ********************[0m
[32m  Best f1:0.2666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51087:  50%|█████     | 14/28 [01:00<01:09,  4.96s/it]epoch 2 loss 1.50178:  50%|█████     | 14/28 [01:00<01:09,  4.96s/it]epoch 2 loss 1.50178:  54%|█████▎    | 15/28 [01:00<00:46,  3.59s/it]epoch 2 loss 1.50537:  54%|█████▎    | 15/28 [01:00<00:46,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6257[0m
[32m  eval_f1 = 0.2697[0m
[32m  eval_mcc = 0.6047[0m
[32m  eval_precision = 0.3494[0m
[32m  eval_recall = 0.2526[0m
[32m  ********************[0m
[32m  Best f1:0.2697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50537:  57%|█████▋    | 16/28 [01:09<01:02,  5.18s/it]epoch 2 loss 1.50426:  57%|█████▋    | 16/28 [01:09<01:02,  5.18s/it]epoch 2 loss 1.50426:  61%|██████    | 17/28 [01:09<00:41,  3.74s/it]epoch 2 loss 1.50328:  61%|██████    | 17/28 [01:10<00:41,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6283[0m
[32m  eval_f1 = 0.274[0m
[32m  eval_mcc = 0.6079[0m
[32m  eval_precision = 0.3592[0m
[32m  eval_recall = 0.2555[0m
[32m  ********************[0m
[32m  Best f1:0.274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50328:  64%|██████▍   | 18/28 [01:17<00:49,  4.94s/it]epoch 2 loss 1.50718:  64%|██████▍   | 18/28 [01:17<00:49,  4.94s/it]epoch 2 loss 1.50718:  68%|██████▊   | 19/28 [01:17<00:32,  3.58s/it]epoch 2 loss 1.50786:  68%|██████▊   | 19/28 [01:18<00:32,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6309[0m
[32m  eval_f1 = 0.2743[0m
[32m  eval_mcc = 0.6105[0m
[32m  eval_precision = 0.3674[0m
[32m  eval_recall = 0.2564[0m
[32m  ********************[0m
[32m  Best f1:0.2743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6105[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50786:  71%|███████▏  | 20/28 [01:26<00:41,  5.16s/it]epoch 2 loss 1.50603:  71%|███████▏  | 20/28 [01:27<00:41,  5.16s/it]epoch 2 loss 1.50603:  75%|███████▌  | 21/28 [01:27<00:26,  3.73s/it]epoch 2 loss 1.49934:  75%|███████▌  | 21/28 [01:27<00:26,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6317[0m
[32m  eval_f1 = 0.2753[0m
[32m  eval_mcc = 0.6109[0m
[32m  eval_precision = 0.3675[0m
[32m  eval_recall = 0.2572[0m
[32m  ********************[0m
[32m  Best f1:0.2753[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49934:  79%|███████▊  | 22/28 [01:34<00:29,  4.92s/it]epoch 2 loss 1.49291:  79%|███████▊  | 22/28 [01:35<00:29,  4.92s/it]epoch 2 loss 1.49291:  82%|████████▏ | 23/28 [01:35<00:17,  3.57s/it]epoch 2 loss 1.49483:  82%|████████▏ | 23/28 [01:35<00:17,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6332[0m
[32m  eval_f1 = 0.2779[0m
[32m  eval_mcc = 0.6123[0m
[32m  eval_precision = 0.3766[0m
[32m  eval_recall = 0.2593[0m
[32m  ********************[0m
[32m  Best f1:0.2779[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49483:  86%|████████▌ | 24/28 [01:44<00:20,  5.17s/it]epoch 2 loss 1.49441:  86%|████████▌ | 24/28 [01:44<00:20,  5.17s/it]epoch 2 loss 1.49441:  89%|████████▉ | 25/28 [01:44<00:11,  3.74s/it]epoch 2 loss 1.48958:  89%|████████▉ | 25/28 [01:44<00:11,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6349[0m
[32m  eval_f1 = 0.2787[0m
[32m  eval_mcc = 0.6142[0m
[32m  eval_precision = 0.3857[0m
[32m  eval_recall = 0.2597[0m
[32m  ********************[0m
[32m  Best f1:0.2787[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48958:  93%|█████████▎| 26/28 [01:51<00:09,  4.65s/it]epoch 2 loss 1.48405:  93%|█████████▎| 26/28 [01:51<00:09,  4.65s/it]epoch 2 loss 1.48405:  96%|█████████▋| 27/28 [01:51<00:03,  3.38s/it]epoch 2 loss 1.48223:  96%|█████████▋| 27/28 [01:51<00:03,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6347[0m
[32m  eval_f1 = 0.2787[0m
[32m  eval_mcc = 0.6143[0m
[32m  eval_precision = 0.3794[0m
[32m  eval_recall = 0.2595[0m
[32m  ********************[0m
[32m  Best MCC:0.6143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48223: 100%|██████████| 28/28 [01:56<00:00,  3.78s/it]epoch 2 loss 1.48223: 100%|██████████| 28/28 [01:56<00:00,  4.16s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.36318:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.36318:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s]epoch 3 loss 1.45396:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6356[0m
[32m  eval_f1 = 0.2855[0m
[32m  eval_mcc = 0.6153[0m
[32m  eval_precision = 0.3887[0m
[32m  eval_recall = 0.2649[0m
[32m  ********************[0m
[32m  Best f1:0.2855[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45396:   7%|▋         | 2/28 [00:09<02:21,  5.46s/it]epoch 3 loss 1.41022:   7%|▋         | 2/28 [00:09<02:21,  5.46s/it]epoch 3 loss 1.41022:  11%|█         | 3/28 [00:09<01:19,  3.16s/it]epoch 3 loss 1.42698:  11%|█         | 3/28 [00:10<01:19,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6361[0m
[32m  eval_f1 = 0.2864[0m
[32m  eval_mcc = 0.616[0m
[32m  eval_precision = 0.377[0m
[32m  eval_recall = 0.2667[0m
[32m  ********************[0m
[32m  Best f1:0.2864[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.616[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42698:  14%|█▍        | 4/28 [00:18<02:06,  5.25s/it]epoch 3 loss 1.39719:  14%|█▍        | 4/28 [00:18<02:06,  5.25s/it]epoch 3 loss 1.39719:  18%|█▊        | 5/28 [00:18<01:20,  3.51s/it]epoch 3 loss 1.41815:  18%|█▊        | 5/28 [00:19<01:20,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6369[0m
[32m  eval_f1 = 0.2872[0m
[32m  eval_mcc = 0.6171[0m
[32m  eval_precision = 0.3878[0m
[32m  eval_recall = 0.2681[0m
[32m  ********************[0m
[32m  Best f1:0.2872[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41815:  21%|██▏       | 6/28 [00:27<01:55,  5.25s/it]epoch 3 loss 1.42399:  21%|██▏       | 6/28 [00:27<01:55,  5.25s/it]epoch 3 loss 1.42399:  25%|██▌       | 7/28 [00:27<01:17,  3.68s/it]epoch 3 loss 1.43914:  25%|██▌       | 7/28 [00:28<01:17,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6381[0m
[32m  eval_f1 = 0.2911[0m
[32m  eval_mcc = 0.6184[0m
[32m  eval_precision = 0.4043[0m
[32m  eval_recall = 0.271[0m
[32m  ********************[0m
[32m  Best f1:0.2911[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43914:  29%|██▊       | 8/28 [00:36<01:45,  5.26s/it]epoch 3 loss 1.41934:  29%|██▊       | 8/28 [00:36<01:45,  5.26s/it]epoch 3 loss 1.41934:  32%|███▏      | 9/28 [00:36<01:11,  3.75s/it]epoch 3 loss 1.42323:  32%|███▏      | 9/28 [00:37<01:11,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.2946[0m
[32m  eval_mcc = 0.619[0m
[32m  eval_precision = 0.4018[0m
[32m  eval_recall = 0.274[0m
[32m  ********************[0m
[32m  Best f1:0.2946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.619[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42323:  36%|███▌      | 10/28 [00:44<01:28,  4.91s/it]epoch 3 loss 1.4305:  36%|███▌      | 10/28 [00:44<01:28,  4.91s/it] epoch 3 loss 1.4305:  39%|███▉      | 11/28 [00:44<01:00,  3.53s/it]epoch 3 loss 1.42402:  39%|███▉      | 11/28 [00:45<01:00,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6404[0m
[32m  eval_f1 = 0.2989[0m
[32m  eval_mcc = 0.6206[0m
[32m  eval_precision = 0.4086[0m
[32m  eval_recall = 0.2775[0m
[32m  ********************[0m
[32m  Best f1:0.2989[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42402:  43%|████▎     | 12/28 [00:53<01:21,  5.08s/it]epoch 3 loss 1.41415:  43%|████▎     | 12/28 [00:53<01:21,  5.08s/it]epoch 3 loss 1.41415:  46%|████▋     | 13/28 [00:53<00:55,  3.67s/it]epoch 3 loss 1.40318:  46%|████▋     | 13/28 [00:54<00:55,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6417[0m
[32m  eval_f1 = 0.3002[0m
[32m  eval_mcc = 0.6221[0m
[32m  eval_precision = 0.4075[0m
[32m  eval_recall = 0.2786[0m
[32m  ********************[0m
[32m  Best f1:0.3002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40318:  50%|█████     | 14/28 [01:01<01:08,  4.90s/it]epoch 3 loss 1.39736:  50%|█████     | 14/28 [01:01<01:08,  4.90s/it]epoch 3 loss 1.39736:  54%|█████▎    | 15/28 [01:01<00:46,  3.55s/it]epoch 3 loss 1.39686:  54%|█████▎    | 15/28 [01:02<00:46,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6434[0m
[32m  eval_f1 = 0.3005[0m
[32m  eval_mcc = 0.6236[0m
[32m  eval_precision = 0.4164[0m
[32m  eval_recall = 0.2787[0m
[32m  ********************[0m
[32m  Best f1:0.3005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39686:  57%|█████▋    | 16/28 [01:10<01:00,  5.06s/it]epoch 3 loss 1.39363:  57%|█████▋    | 16/28 [01:10<01:00,  5.06s/it]epoch 3 loss 1.39363:  61%|██████    | 17/28 [01:10<00:40,  3.66s/it]epoch 3 loss 1.39497:  61%|██████    | 17/28 [01:11<00:40,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6464[0m
[32m  eval_f1 = 0.3032[0m
[32m  eval_mcc = 0.6264[0m
[32m  eval_precision = 0.421[0m
[32m  eval_recall = 0.2814[0m
[32m  ********************[0m
[32m  Best f1:0.3032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39497:  64%|██████▍   | 18/28 [01:19<00:50,  5.03s/it]epoch 3 loss 1.39432:  64%|██████▍   | 18/28 [01:19<00:50,  5.03s/it]epoch 3 loss 1.39432:  68%|██████▊   | 19/28 [01:19<00:32,  3.64s/it]epoch 3 loss 1.39003:  68%|██████▊   | 19/28 [01:19<00:32,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6476[0m
[32m  eval_f1 = 0.304[0m
[32m  eval_mcc = 0.6275[0m
[32m  eval_precision = 0.4186[0m
[32m  eval_recall = 0.2827[0m
[32m  ********************[0m
[32m  Best f1:0.304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39003:  71%|███████▏  | 20/28 [01:28<00:41,  5.13s/it]epoch 3 loss 1.38844:  71%|███████▏  | 20/28 [01:28<00:41,  5.13s/it]epoch 3 loss 1.38844:  75%|███████▌  | 21/28 [01:28<00:26,  3.72s/it]epoch 3 loss 1.3875:  75%|███████▌  | 21/28 [01:29<00:26,  3.72s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6478[0m
[32m  eval_f1 = 0.3044[0m
[32m  eval_mcc = 0.6276[0m
[32m  eval_precision = 0.4182[0m
[32m  eval_recall = 0.283[0m
[32m  ********************[0m
[32m  Best f1:0.3044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3875:  79%|███████▊  | 22/28 [01:37<00:31,  5.19s/it]epoch 3 loss 1.38357:  79%|███████▊  | 22/28 [01:37<00:31,  5.19s/it]epoch 3 loss 1.38357:  82%|████████▏ | 23/28 [01:37<00:18,  3.75s/it]epoch 3 loss 1.38261:  82%|████████▏ | 23/28 [01:38<00:18,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6476[0m
[32m  eval_f1 = 0.3051[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.4236[0m
[32m  eval_recall = 0.2831[0m
[32m  ********************[0m
[32m  Best f1:0.3051[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.38261:  86%|████████▌ | 24/28 [01:42<00:16,  4.17s/it]epoch 3 loss 1.37804:  86%|████████▌ | 24/28 [01:43<00:16,  4.17s/it]epoch 3 loss 1.37804:  89%|████████▉ | 25/28 [01:43<00:09,  3.04s/it]epoch 3 loss 1.37335:  89%|████████▉ | 25/28 [01:43<00:09,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3054[0m
[32m  eval_mcc = 0.6268[0m
[32m  eval_precision = 0.4294[0m
[32m  eval_recall = 0.2828[0m
[32m  ********************[0m
[32m  Best f1:0.3054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.37335:  93%|█████████▎| 26/28 [01:49<00:07,  3.97s/it]epoch 3 loss 1.37221:  93%|█████████▎| 26/28 [01:49<00:07,  3.97s/it]epoch 3 loss 1.37221:  96%|█████████▋| 27/28 [01:49<00:02,  2.90s/it]epoch 3 loss 1.38403:  96%|█████████▋| 27/28 [01:49<00:02,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6465[0m
[32m  eval_f1 = 0.3056[0m
[32m  eval_mcc = 0.6265[0m
[32m  eval_precision = 0.4302[0m
[32m  eval_recall = 0.2824[0m
[32m  ********************[0m
[32m  Best f1:0.3056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.38403: 100%|██████████| 28/28 [01:54<00:00,  3.35s/it]epoch 3 loss 1.38403: 100%|██████████| 28/28 [01:54<00:00,  4.08s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.29292:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.29292:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s]epoch 4 loss 1.30279:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6467[0m
[32m  eval_f1 = 0.3057[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.429[0m
[32m  eval_recall = 0.2821[0m
[32m  ********************[0m
[32m  Best f1:0.3057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.30279:   7%|▋         | 2/28 [00:05<01:19,  3.06s/it]epoch 4 loss 1.31134:   7%|▋         | 2/28 [00:05<01:19,  3.06s/it]epoch 4 loss 1.31134:  11%|█         | 3/28 [00:05<00:46,  1.84s/it]epoch 4 loss 1.30254:  11%|█         | 3/28 [00:06<00:46,  1.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6466[0m
[32m  eval_f1 = 0.3062[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.4312[0m
[32m  eval_recall = 0.2825[0m
[32m  ********************[0m
[32m  Best f1:0.3062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.30254:  14%|█▍        | 4/28 [00:10<01:13,  3.05s/it]epoch 4 loss 1.30785:  14%|█▍        | 4/28 [00:11<01:13,  3.05s/it]epoch 4 loss 1.30785:  18%|█▊        | 5/28 [00:11<00:48,  2.10s/it]epoch 4 loss 1.34465:  18%|█▊        | 5/28 [00:11<00:48,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6472[0m
[32m  eval_f1 = 0.3076[0m
[32m  eval_mcc = 0.6273[0m
[32m  eval_precision = 0.4325[0m
[32m  eval_recall = 0.2834[0m
[32m  ********************[0m
[32m  Best f1:0.3076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.34465:  21%|██▏       | 6/28 [00:15<01:05,  2.99s/it]epoch 4 loss 1.33193:  21%|██▏       | 6/28 [00:16<01:05,  2.99s/it]epoch 4 loss 1.33193:  25%|██▌       | 7/28 [00:16<00:45,  2.15s/it]epoch 4 loss 1.33059:  25%|██▌       | 7/28 [00:16<00:45,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6478[0m
[32m  eval_f1 = 0.308[0m
[32m  eval_mcc = 0.6281[0m
[32m  eval_precision = 0.4339[0m
[32m  eval_recall = 0.2836[0m
[32m  ********************[0m
[32m  Best f1:0.308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33059:  29%|██▊       | 8/28 [00:22<01:10,  3.55s/it]epoch 4 loss 1.34424:  29%|██▊       | 8/28 [00:23<01:10,  3.55s/it]epoch 4 loss 1.34424:  32%|███▏      | 9/28 [00:23<00:48,  2.57s/it]epoch 4 loss 1.33968:  32%|███▏      | 9/28 [00:23<00:48,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.649[0m
[32m  eval_f1 = 0.3149[0m
[32m  eval_mcc = 0.6295[0m
[32m  eval_precision = 0.4424[0m
[32m  eval_recall = 0.2888[0m
[32m  ********************[0m
[32m  Best f1:0.3149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33968:  36%|███▌      | 10/28 [00:31<01:18,  4.35s/it]epoch 4 loss 1.34028:  36%|███▌      | 10/28 [00:31<01:18,  4.35s/it]epoch 4 loss 1.34028:  39%|███▉      | 11/28 [00:31<00:53,  3.14s/it]epoch 4 loss 1.34816:  39%|███▉      | 11/28 [00:32<00:53,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6496[0m
[32m  eval_f1 = 0.3157[0m
[32m  eval_mcc = 0.6302[0m
[32m  eval_precision = 0.4452[0m
[32m  eval_recall = 0.2894[0m
[32m  ********************[0m
[32m  Best f1:0.3157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34816:  43%|████▎     | 12/28 [00:38<01:06,  4.17s/it]epoch 4 loss 1.34983:  43%|████▎     | 12/28 [00:38<01:06,  4.17s/it]epoch 4 loss 1.34983:  46%|████▋     | 13/28 [00:38<00:45,  3.04s/it]epoch 4 loss 1.35004:  46%|████▋     | 13/28 [00:39<00:45,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6501[0m
[32m  eval_f1 = 0.317[0m
[32m  eval_mcc = 0.6306[0m
[32m  eval_precision = 0.4411[0m
[32m  eval_recall = 0.2904[0m
[32m  ********************[0m
[32m  Best f1:0.317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35004:  50%|█████     | 14/28 [00:47<01:08,  4.88s/it]epoch 4 loss 1.34959:  50%|█████     | 14/28 [00:48<01:08,  4.88s/it]epoch 4 loss 1.34959:  54%|█████▎    | 15/28 [00:48<00:45,  3.54s/it]epoch 4 loss 1.35032:  54%|█████▎    | 15/28 [00:48<00:45,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6506[0m
[32m  eval_f1 = 0.3171[0m
[32m  eval_mcc = 0.6312[0m
[32m  eval_precision = 0.4397[0m
[32m  eval_recall = 0.2906[0m
[32m  ********************[0m
[32m  Best f1:0.3171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35032:  57%|█████▋    | 16/28 [00:54<00:52,  4.36s/it]epoch 4 loss 1.34925:  57%|█████▋    | 16/28 [00:55<00:52,  4.36s/it]epoch 4 loss 1.34925:  61%|██████    | 17/28 [00:55<00:34,  3.18s/it]epoch 4 loss 1.34708:  61%|██████    | 17/28 [00:55<00:34,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6506[0m
[32m  eval_f1 = 0.3179[0m
[32m  eval_mcc = 0.6311[0m
[32m  eval_precision = 0.442[0m
[32m  eval_recall = 0.291[0m
[32m  ********************[0m
[32m  Best f1:0.3179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.34708:  64%|██████▍   | 18/28 [01:00<00:37,  3.76s/it]epoch 4 loss 1.34715:  64%|██████▍   | 18/28 [01:00<00:37,  3.76s/it]epoch 4 loss 1.34715:  68%|██████▊   | 19/28 [01:00<00:24,  2.75s/it]epoch 4 loss 1.34534:  68%|██████▊   | 19/28 [01:01<00:24,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.3176[0m
[32m  eval_mcc = 0.6314[0m
[32m  eval_precision = 0.4416[0m
[32m  eval_recall = 0.2909[0m
[32m  ********************[0m
[32m  Best MCC:0.6314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34534:  71%|███████▏  | 20/28 [01:05<00:26,  3.37s/it]epoch 4 loss 1.34817:  71%|███████▏  | 20/28 [01:05<00:26,  3.37s/it]epoch 4 loss 1.34817:  75%|███████▌  | 21/28 [01:05<00:17,  2.48s/it]epoch 4 loss 1.35219:  75%|███████▌  | 21/28 [01:06<00:17,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6508[0m
[32m  eval_f1 = 0.3185[0m
[32m  eval_mcc = 0.6313[0m
[32m  eval_precision = 0.443[0m
[32m  eval_recall = 0.2915[0m
[32m  ********************[0m
[32m  Best f1:0.3185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.35219:  79%|███████▊  | 22/28 [01:10<00:19,  3.21s/it]epoch 4 loss 1.34727:  79%|███████▊  | 22/28 [01:11<00:19,  3.21s/it]epoch 4 loss 1.34727:  82%|████████▏ | 23/28 [01:11<00:11,  2.37s/it]epoch 4 loss 1.34579:  82%|████████▏ | 23/28 [01:11<00:11,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6507[0m
[32m  eval_f1 = 0.3184[0m
[32m  eval_mcc = 0.6311[0m
[32m  eval_precision = 0.4439[0m
[32m  eval_recall = 0.2914[0m

epoch 4 loss 1.34579:  86%|████████▌ | 24/28 [01:14<00:11,  2.79s/it]epoch 4 loss 1.34323:  86%|████████▌ | 24/28 [01:15<00:11,  2.79s/it]epoch 4 loss 1.34323:  89%|████████▉ | 25/28 [01:15<00:06,  2.07s/it]epoch 4 loss 1.33939:  89%|████████▉ | 25/28 [01:15<00:06,  2.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6507[0m
[32m  eval_f1 = 0.3183[0m
[32m  eval_mcc = 0.6311[0m
[32m  eval_precision = 0.4441[0m
[32m  eval_recall = 0.2913[0m

epoch 4 loss 1.33939:  93%|█████████▎| 26/28 [01:19<00:05,  2.59s/it]epoch 4 loss 1.33726:  93%|█████████▎| 26/28 [01:19<00:05,  2.59s/it]epoch 4 loss 1.33726:  96%|█████████▋| 27/28 [01:19<00:01,  1.93s/it]epoch 4 loss 1.33381:  96%|█████████▋| 27/28 [01:19<00:01,  1.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6507[0m
[32m  eval_f1 = 0.3177[0m
[32m  eval_mcc = 0.6312[0m
[32m  eval_precision = 0.442[0m
[32m  eval_recall = 0.291[0m

epoch 4 loss 1.33381: 100%|██████████| 28/28 [01:23<00:00,  2.43s/it]epoch 4 loss 1.33381: 100%|██████████| 28/28 [01:23<00:00,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6508[0m
[32m  eval_f1 = 0.3185[0m
[32m  eval_mcc = 0.6313[0m
[32m  eval_precision = 0.443[0m
[32m  eval_recall = 0.2915[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6274[0m
[32m  eval_f1 = 0.2505[0m
[32m  eval_mcc = 0.6076[0m
[32m  eval_precision = 0.3399[0m
[32m  eval_recall = 0.2334[0m

