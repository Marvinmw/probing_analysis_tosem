[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=1, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.57431:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.57431:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.57311:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0047[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = -0.0022[0m
[32m  eval_precision = 0.0033[0m
[32m  eval_recall = 0.0019[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.57311:   7%|▋         | 2/28 [00:05<01:21,  3.12s/it]epoch 0 loss 5.56842:   7%|▋         | 2/28 [00:05<01:21,  3.12s/it]epoch 0 loss 5.56842:  11%|█         | 3/28 [00:05<00:46,  1.88s/it]epoch 0 loss 5.55312:  11%|█         | 3/28 [00:06<00:46,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0076[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = -0.0035[0m
[32m  eval_precision = 0.003[0m
[32m  eval_recall = 0.0021[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.55312:  14%|█▍        | 4/28 [00:11<01:16,  3.17s/it]epoch 0 loss 5.53414:  14%|█▍        | 4/28 [00:11<01:16,  3.17s/it]epoch 0 loss 5.53414:  18%|█▊        | 5/28 [00:11<00:50,  2.17s/it]epoch 0 loss 5.50918:  18%|█▊        | 5/28 [00:11<00:50,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.42it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.61it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.67it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.024[0m
[32m  eval_f1 = 0.0037[0m
[32m  eval_mcc = 0.0012[0m
[32m  eval_precision = 0.0048[0m
[32m  eval_recall = 0.0054[0m
[32m  ********************[0m
[32m  Best f1:0.0037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.50918:  21%|██▏       | 6/28 [00:19<01:31,  4.15s/it]epoch 0 loss 5.47462:  21%|██▏       | 6/28 [00:19<01:31,  4.15s/it]epoch 0 loss 5.47462:  25%|██▌       | 7/28 [00:19<01:01,  2.93s/it]epoch 0 loss 5.43467:  25%|██▌       | 7/28 [00:20<01:01,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0491[0m
[32m  eval_f1 = 0.0066[0m
[32m  eval_mcc = 0.0102[0m
[32m  eval_precision = 0.0072[0m
[32m  eval_recall = 0.0114[0m
[32m  ********************[0m
[32m  Best f1:0.0066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.43467:  29%|██▊       | 8/28 [00:28<01:37,  4.89s/it]epoch 0 loss 5.39072:  29%|██▊       | 8/28 [00:29<01:37,  4.89s/it]epoch 0 loss 5.39072:  32%|███▏      | 9/28 [00:29<01:06,  3.49s/it]epoch 0 loss 5.34235:  32%|███▏      | 9/28 [00:29<01:06,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0785[0m
[32m  eval_f1 = 0.0119[0m
[32m  eval_mcc = 0.0309[0m
[32m  eval_precision = 0.0127[0m
[32m  eval_recall = 0.0175[0m
[32m  ********************[0m
[32m  Best f1:0.0119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.34235:  36%|███▌      | 10/28 [00:38<01:33,  5.19s/it]epoch 0 loss 5.28368:  36%|███▌      | 10/28 [00:38<01:33,  5.19s/it]epoch 0 loss 5.28368:  39%|███▉      | 11/28 [00:38<01:03,  3.73s/it]epoch 0 loss 5.22194:  39%|███▉      | 11/28 [00:39<01:03,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.112[0m
[32m  eval_f1 = 0.027[0m
[32m  eval_mcc = 0.064[0m
[32m  eval_precision = 0.0308[0m
[32m  eval_recall = 0.0327[0m
[32m  ********************[0m
[32m  Best f1:0.027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.22194:  43%|████▎     | 12/28 [00:48<01:26,  5.43s/it]epoch 0 loss 5.15615:  43%|████▎     | 12/28 [00:48<01:26,  5.43s/it]epoch 0 loss 5.15615:  46%|████▋     | 13/28 [00:48<00:58,  3.91s/it]epoch 0 loss 5.08755:  46%|████▋     | 13/28 [00:48<00:58,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1477[0m
[32m  eval_f1 = 0.0401[0m
[32m  eval_mcc = 0.1032[0m
[32m  eval_precision = 0.0474[0m
[32m  eval_recall = 0.0439[0m
[32m  ********************[0m
[32m  Best f1:0.0401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.08755:  50%|█████     | 14/28 [00:55<01:09,  4.95s/it]epoch 0 loss 5.01242:  50%|█████     | 14/28 [00:56<01:09,  4.95s/it]epoch 0 loss 5.01242:  54%|█████▎    | 15/28 [00:56<00:46,  3.58s/it]epoch 0 loss 4.93379:  54%|█████▎    | 15/28 [00:56<00:46,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1972[0m
[32m  eval_f1 = 0.06[0m
[32m  eval_mcc = 0.1584[0m
[32m  eval_precision = 0.077[0m
[32m  eval_recall = 0.0598[0m
[32m  ********************[0m
[32m  Best f1:0.06[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93379:  57%|█████▋    | 16/28 [01:03<00:56,  4.68s/it]epoch 0 loss 4.86111:  57%|█████▋    | 16/28 [01:03<00:56,  4.68s/it]epoch 0 loss 4.86111:  61%|██████    | 17/28 [01:03<00:37,  3.41s/it]epoch 0 loss 4.78589:  61%|██████    | 17/28 [01:04<00:37,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2614[0m
[32m  eval_f1 = 0.0776[0m
[32m  eval_mcc = 0.2275[0m
[32m  eval_precision = 0.1[0m
[32m  eval_recall = 0.0759[0m
[32m  ********************[0m
[32m  Best f1:0.0776[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.78589:  64%|██████▍   | 18/28 [01:12<00:50,  5.04s/it]epoch 0 loss 4.70548:  64%|██████▍   | 18/28 [01:13<00:50,  5.04s/it]epoch 0 loss 4.70548:  68%|██████▊   | 19/28 [01:13<00:32,  3.65s/it]epoch 0 loss 4.63546:  68%|██████▊   | 19/28 [01:13<00:32,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3153[0m
[32m  eval_f1 = 0.0887[0m
[32m  eval_mcc = 0.2814[0m
[32m  eval_precision = 0.1237[0m
[32m  eval_recall = 0.0849[0m
[32m  ********************[0m
[32m  Best f1:0.0887[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2814[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.63546:  71%|███████▏  | 20/28 [01:20<00:38,  4.81s/it]epoch 0 loss 4.55634:  71%|███████▏  | 20/28 [01:21<00:38,  4.81s/it]epoch 0 loss 4.55634:  75%|███████▌  | 21/28 [01:21<00:24,  3.49s/it]epoch 0 loss 4.47958:  75%|███████▌  | 21/28 [01:21<00:24,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3821[0m
[32m  eval_f1 = 0.1016[0m
[32m  eval_mcc = 0.3452[0m
[32m  eval_precision = 0.1472[0m
[32m  eval_recall = 0.0946[0m
[32m  ********************[0m
[32m  Best f1:0.1016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.47958:  79%|███████▊  | 22/28 [01:29<00:30,  5.02s/it]epoch 0 loss 4.40524:  79%|███████▊  | 22/28 [01:30<00:30,  5.02s/it]epoch 0 loss 4.40524:  82%|████████▏ | 23/28 [01:30<00:18,  3.64s/it]epoch 0 loss 4.32955:  82%|████████▏ | 23/28 [01:30<00:18,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4353[0m
[32m  eval_f1 = 0.109[0m
[32m  eval_mcc = 0.3973[0m
[32m  eval_precision = 0.1613[0m
[32m  eval_recall = 0.1015[0m
[32m  ********************[0m
[32m  Best f1:0.109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3973[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.32955:  86%|████████▌ | 24/28 [01:37<00:19,  4.89s/it]epoch 0 loss 4.25979:  86%|████████▌ | 24/28 [01:38<00:19,  4.89s/it]epoch 0 loss 4.25979:  89%|████████▉ | 25/28 [01:38<00:10,  3.55s/it]epoch 0 loss 4.19098:  89%|████████▉ | 25/28 [01:38<00:10,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4828[0m
[32m  eval_f1 = 0.1297[0m
[32m  eval_mcc = 0.4483[0m
[32m  eval_precision = 0.1781[0m
[32m  eval_recall = 0.1193[0m
[32m  ********************[0m
[32m  Best f1:0.1297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.19098:  93%|█████████▎| 26/28 [01:47<00:10,  5.24s/it]epoch 0 loss 4.12485:  93%|█████████▎| 26/28 [01:48<00:10,  5.24s/it]epoch 0 loss 4.12485:  96%|█████████▋| 27/28 [01:48<00:03,  3.79s/it]epoch 0 loss 4.06349:  96%|█████████▋| 27/28 [01:48<00:03,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5071[0m
[32m  eval_f1 = 0.1368[0m
[32m  eval_mcc = 0.4761[0m
[32m  eval_precision = 0.184[0m
[32m  eval_recall = 0.1284[0m
[32m  ********************[0m
[32m  Best f1:0.1368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4761[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.06349: 100%|██████████| 28/28 [01:56<00:00,  5.08s/it]epoch 0 loss 4.06349: 100%|██████████| 28/28 [01:56<00:00,  4.15s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.17696:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.17696:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 1 loss 2.09766:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5317[0m
[32m  eval_f1 = 0.1511[0m
[32m  eval_mcc = 0.5035[0m
[32m  eval_precision = 0.2003[0m
[32m  eval_recall = 0.1436[0m
[32m  ********************[0m
[32m  Best f1:0.1511[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09766:   7%|▋         | 2/28 [00:09<02:18,  5.32s/it]epoch 1 loss 2.07537:   7%|▋         | 2/28 [00:09<02:18,  5.32s/it]epoch 1 loss 2.07537:  11%|█         | 3/28 [00:09<01:17,  3.09s/it]epoch 1 loss 2.05081:  11%|█         | 3/28 [00:09<01:17,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5631[0m
[32m  eval_f1 = 0.17[0m
[32m  eval_mcc = 0.5372[0m
[32m  eval_precision = 0.2044[0m
[32m  eval_recall = 0.1653[0m
[32m  ********************[0m
[32m  Best f1:0.17[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05081:  14%|█▍        | 4/28 [00:17<01:56,  4.87s/it]epoch 1 loss 2.02782:  14%|█▍        | 4/28 [00:17<01:56,  4.87s/it]epoch 1 loss 2.02782:  18%|█▊        | 5/28 [00:17<01:15,  3.26s/it]epoch 1 loss 2.01758:  18%|█▊        | 5/28 [00:18<01:15,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5787[0m
[32m  eval_f1 = 0.1813[0m
[32m  eval_mcc = 0.555[0m
[32m  eval_precision = 0.2118[0m
[32m  eval_recall = 0.1766[0m
[32m  ********************[0m
[32m  Best f1:0.1813[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01758:  21%|██▏       | 6/28 [00:26<01:53,  5.15s/it]epoch 1 loss 2.00209:  21%|██▏       | 6/28 [00:26<01:53,  5.15s/it]epoch 1 loss 2.00209:  25%|██▌       | 7/28 [00:26<01:15,  3.60s/it]epoch 1 loss 1.97537:  25%|██▌       | 7/28 [00:27<01:15,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5879[0m
[32m  eval_f1 = 0.1851[0m
[32m  eval_mcc = 0.5651[0m
[32m  eval_precision = 0.2506[0m
[32m  eval_recall = 0.1806[0m
[32m  ********************[0m
[32m  Best f1:0.1851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97537:  29%|██▊       | 8/28 [00:33<01:30,  4.53s/it]epoch 1 loss 1.94369:  29%|██▊       | 8/28 [00:33<01:30,  4.53s/it]epoch 1 loss 1.94369:  32%|███▏      | 9/28 [00:33<01:01,  3.24s/it]epoch 1 loss 1.91041:  32%|███▏      | 9/28 [00:34<01:01,  3.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5951[0m
[32m  eval_f1 = 0.192[0m
[32m  eval_mcc = 0.5734[0m
[32m  eval_precision = 0.265[0m
[32m  eval_recall = 0.1852[0m
[32m  ********************[0m
[32m  Best f1:0.192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91041:  36%|███▌      | 10/28 [00:40<01:16,  4.23s/it]epoch 1 loss 1.88963:  36%|███▌      | 10/28 [00:40<01:16,  4.23s/it]epoch 1 loss 1.88963:  39%|███▉      | 11/28 [00:40<00:52,  3.07s/it]epoch 1 loss 1.88141:  39%|███▉      | 11/28 [00:41<00:52,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5995[0m
[32m  eval_f1 = 0.203[0m
[32m  eval_mcc = 0.5783[0m
[32m  eval_precision = 0.2932[0m
[32m  eval_recall = 0.1926[0m
[32m  ********************[0m
[32m  Best f1:0.203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88141:  43%|████▎     | 12/28 [00:47<01:05,  4.12s/it]epoch 1 loss 1.86713:  43%|████▎     | 12/28 [00:47<01:05,  4.12s/it]epoch 1 loss 1.86713:  46%|████▋     | 13/28 [00:47<00:45,  3.00s/it]epoch 1 loss 1.84016:  46%|████▋     | 13/28 [00:48<00:45,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6056[0m
[32m  eval_f1 = 0.2122[0m
[32m  eval_mcc = 0.5845[0m
[32m  eval_precision = 0.3015[0m
[32m  eval_recall = 0.199[0m
[32m  ********************[0m
[32m  Best f1:0.2122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5845[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84016:  50%|█████     | 14/28 [00:54<00:57,  4.07s/it]epoch 1 loss 1.82307:  50%|█████     | 14/28 [00:54<00:57,  4.07s/it]epoch 1 loss 1.82307:  54%|█████▎    | 15/28 [00:54<00:38,  2.97s/it]epoch 1 loss 1.81088:  54%|█████▎    | 15/28 [00:54<00:38,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6109[0m
[32m  eval_f1 = 0.2296[0m
[32m  eval_mcc = 0.5894[0m
[32m  eval_precision = 0.3204[0m
[32m  eval_recall = 0.2128[0m
[32m  ********************[0m
[32m  Best f1:0.2296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5894[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81088:  57%|█████▋    | 16/28 [01:01<00:48,  4.05s/it]epoch 1 loss 1.796:  57%|█████▋    | 16/28 [01:01<00:48,  4.05s/it]  epoch 1 loss 1.796:  61%|██████    | 17/28 [01:01<00:32,  2.96s/it]epoch 1 loss 1.7767:  61%|██████    | 17/28 [01:01<00:32,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6169[0m
[32m  eval_f1 = 0.2516[0m
[32m  eval_mcc = 0.595[0m
[32m  eval_precision = 0.335[0m
[32m  eval_recall = 0.2336[0m
[32m  ********************[0m
[32m  Best f1:0.2516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7767:  64%|██████▍   | 18/28 [01:07<00:38,  3.82s/it]epoch 1 loss 1.76363:  64%|██████▍   | 18/28 [01:07<00:38,  3.82s/it]epoch 1 loss 1.76363:  68%|██████▊   | 19/28 [01:07<00:25,  2.80s/it]epoch 1 loss 1.75754:  68%|██████▊   | 19/28 [01:08<00:25,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6209[0m
[32m  eval_f1 = 0.261[0m
[32m  eval_mcc = 0.5989[0m
[32m  eval_precision = 0.3427[0m
[32m  eval_recall = 0.2445[0m
[32m  ********************[0m
[32m  Best f1:0.261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5989[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75754:  71%|███████▏  | 20/28 [01:14<00:31,  3.91s/it]epoch 1 loss 1.74185:  71%|███████▏  | 20/28 [01:14<00:31,  3.91s/it]epoch 1 loss 1.74185:  75%|███████▌  | 21/28 [01:14<00:20,  2.87s/it]epoch 1 loss 1.72923:  75%|███████▌  | 21/28 [01:15<00:20,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6272[0m
[32m  eval_f1 = 0.2722[0m
[32m  eval_mcc = 0.6058[0m
[32m  eval_precision = 0.3581[0m
[32m  eval_recall = 0.2546[0m
[32m  ********************[0m
[32m  Best f1:0.2722[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72923:  79%|███████▊  | 22/28 [01:21<00:23,  3.97s/it]epoch 1 loss 1.71346:  79%|███████▊  | 22/28 [01:21<00:23,  3.97s/it]epoch 1 loss 1.71346:  82%|████████▏ | 23/28 [01:21<00:14,  2.91s/it]epoch 1 loss 1.70408:  82%|████████▏ | 23/28 [01:22<00:14,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6323[0m
[32m  eval_f1 = 0.2843[0m
[32m  eval_mcc = 0.6115[0m
[32m  eval_precision = 0.37[0m
[32m  eval_recall = 0.266[0m
[32m  ********************[0m
[32m  Best f1:0.2843[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6115[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.70408:  86%|████████▌ | 24/28 [01:28<00:15,  3.97s/it]epoch 1 loss 1.69257:  86%|████████▌ | 24/28 [01:28<00:15,  3.97s/it]epoch 1 loss 1.69257:  89%|████████▉ | 25/28 [01:28<00:08,  2.91s/it]epoch 1 loss 1.68579:  89%|████████▉ | 25/28 [01:28<00:08,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6358[0m
[32m  eval_f1 = 0.2864[0m
[32m  eval_mcc = 0.616[0m
[32m  eval_precision = 0.3717[0m
[32m  eval_recall = 0.2678[0m
[32m  ********************[0m
[32m  Best f1:0.2864[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.616[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.68579:  93%|█████████▎| 26/28 [01:35<00:07,  3.99s/it]epoch 1 loss 1.67288:  93%|█████████▎| 26/28 [01:35<00:07,  3.99s/it]epoch 1 loss 1.67288:  96%|█████████▋| 27/28 [01:35<00:02,  2.92s/it]epoch 1 loss 1.65865:  96%|█████████▋| 27/28 [01:35<00:02,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6409[0m
[32m  eval_f1 = 0.2922[0m
[32m  eval_mcc = 0.6218[0m
[32m  eval_precision = 0.3828[0m
[32m  eval_recall = 0.2712[0m
[32m  ********************[0m
[32m  Best f1:0.2922[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.65865: 100%|██████████| 28/28 [01:41<00:00,  3.94s/it]epoch 1 loss 1.65865: 100%|██████████| 28/28 [01:41<00:00,  3.64s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.24416:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.24416:   4%|▎         | 1/28 [00:00<00:11,  2.28it/s]epoch 2 loss 1.24907:   4%|▎         | 1/28 [00:00<00:11,  2.28it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6438[0m
[32m  eval_f1 = 0.2956[0m
[32m  eval_mcc = 0.6252[0m
[32m  eval_precision = 0.3956[0m
[32m  eval_recall = 0.2729[0m
[32m  ********************[0m
[32m  Best f1:0.2956[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24907:   7%|▋         | 2/28 [00:09<02:26,  5.64s/it]epoch 2 loss 1.26972:   7%|▋         | 2/28 [00:10<02:26,  5.64s/it]epoch 2 loss 1.26972:  11%|█         | 3/28 [00:10<01:21,  3.26s/it]epoch 2 loss 1.27208:  11%|█         | 3/28 [00:10<01:21,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6466[0m
[32m  eval_f1 = 0.3024[0m
[32m  eval_mcc = 0.628[0m
[32m  eval_precision = 0.4023[0m
[32m  eval_recall = 0.2789[0m
[32m  ********************[0m
[32m  Best f1:0.3024[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27208:  14%|█▍        | 4/28 [00:16<01:48,  4.52s/it]epoch 2 loss 1.28615:  14%|█▍        | 4/28 [00:17<01:48,  4.52s/it]epoch 2 loss 1.28615:  18%|█▊        | 5/28 [00:17<01:10,  3.05s/it]epoch 2 loss 1.28066:  18%|█▊        | 5/28 [00:17<01:10,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6496[0m
[32m  eval_f1 = 0.3083[0m
[32m  eval_mcc = 0.6307[0m
[32m  eval_precision = 0.4007[0m
[32m  eval_recall = 0.2866[0m
[32m  ********************[0m
[32m  Best f1:0.3083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6307[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28066:  21%|██▏       | 6/28 [00:26<01:53,  5.15s/it]epoch 2 loss 1.29458:  21%|██▏       | 6/28 [00:26<01:53,  5.15s/it]epoch 2 loss 1.29458:  25%|██▌       | 7/28 [00:26<01:15,  3.61s/it]epoch 2 loss 1.28334:  25%|██▌       | 7/28 [00:27<01:15,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6516[0m
[32m  eval_f1 = 0.3153[0m
[32m  eval_mcc = 0.6325[0m
[32m  eval_precision = 0.4111[0m
[32m  eval_recall = 0.2923[0m
[32m  ********************[0m
[32m  Best f1:0.3153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28334:  29%|██▊       | 8/28 [00:36<01:49,  5.48s/it]epoch 2 loss 1.28553:  29%|██▊       | 8/28 [00:36<01:49,  5.48s/it]epoch 2 loss 1.28553:  32%|███▏      | 9/28 [00:36<01:14,  3.90s/it]epoch 2 loss 1.30256:  32%|███▏      | 9/28 [00:37<01:14,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.51it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.66it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6518[0m
[32m  eval_f1 = 0.3168[0m
[32m  eval_mcc = 0.6325[0m
[32m  eval_precision = 0.4165[0m
[32m  eval_recall = 0.2952[0m
[32m  ********************[0m
[32m  Best f1:0.3168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.30256:  36%|███▌      | 10/28 [00:43<01:29,  4.95s/it]epoch 2 loss 1.29599:  36%|███▌      | 10/28 [00:44<01:29,  4.95s/it]epoch 2 loss 1.29599:  39%|███▉      | 11/28 [00:44<01:00,  3.56s/it]epoch 2 loss 1.29687:  39%|███▉      | 11/28 [00:44<01:00,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6535[0m
[32m  eval_f1 = 0.3215[0m
[32m  eval_mcc = 0.6338[0m
[32m  eval_precision = 0.4221[0m
[32m  eval_recall = 0.2993[0m
[32m  ********************[0m
[32m  Best f1:0.3215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29687:  43%|████▎     | 12/28 [00:53<01:23,  5.20s/it]epoch 2 loss 1.29439:  43%|████▎     | 12/28 [00:53<01:23,  5.20s/it]epoch 2 loss 1.29439:  46%|████▋     | 13/28 [00:53<00:56,  3.75s/it]epoch 2 loss 1.30213:  46%|████▋     | 13/28 [00:54<00:56,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3244[0m
[32m  eval_mcc = 0.6355[0m
[32m  eval_precision = 0.4294[0m
[32m  eval_recall = 0.302[0m
[32m  ********************[0m
[32m  Best f1:0.3244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30213:  50%|█████     | 14/28 [01:01<01:11,  5.13s/it]epoch 2 loss 1.29533:  50%|█████     | 14/28 [01:02<01:11,  5.13s/it]epoch 2 loss 1.29533:  54%|█████▎    | 15/28 [01:02<00:48,  3.71s/it]epoch 2 loss 1.30041:  54%|█████▎    | 15/28 [01:02<00:48,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6568[0m
[32m  eval_f1 = 0.3338[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4481[0m
[32m  eval_recall = 0.3092[0m
[32m  ********************[0m
[32m  Best f1:0.3338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30041:  57%|█████▋    | 16/28 [01:11<01:03,  5.26s/it]epoch 2 loss 1.3005:  57%|█████▋    | 16/28 [01:11<01:03,  5.26s/it] epoch 2 loss 1.3005:  61%|██████    | 17/28 [01:11<00:41,  3.81s/it]epoch 2 loss 1.30021:  61%|██████    | 17/28 [01:12<00:41,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.335[0m
[32m  eval_mcc = 0.6387[0m
[32m  eval_precision = 0.4507[0m
[32m  eval_recall = 0.31[0m
[32m  ********************[0m
[32m  Best f1:0.335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30021:  64%|██████▍   | 18/28 [01:21<00:55,  5.58s/it]epoch 2 loss 1.30498:  64%|██████▍   | 18/28 [01:21<00:55,  5.58s/it]epoch 2 loss 1.30498:  68%|██████▊   | 19/28 [01:21<00:36,  4.03s/it]epoch 2 loss 1.30599:  68%|██████▊   | 19/28 [01:22<00:36,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6594[0m
[32m  eval_f1 = 0.3399[0m
[32m  eval_mcc = 0.6402[0m
[32m  eval_precision = 0.4594[0m
[32m  eval_recall = 0.3135[0m
[32m  ********************[0m
[32m  Best f1:0.3399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30599:  71%|███████▏  | 20/28 [01:28<00:38,  4.87s/it]epoch 2 loss 1.30431:  71%|███████▏  | 20/28 [01:29<00:38,  4.87s/it]epoch 2 loss 1.30431:  75%|███████▌  | 21/28 [01:29<00:24,  3.53s/it]epoch 2 loss 1.2983:  75%|███████▌  | 21/28 [01:29<00:24,  3.53s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6618[0m
[32m  eval_f1 = 0.3416[0m
[32m  eval_mcc = 0.6427[0m
[32m  eval_precision = 0.46[0m
[32m  eval_recall = 0.315[0m
[32m  ********************[0m
[32m  Best f1:0.3416[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2983:  79%|███████▊  | 22/28 [01:35<00:27,  4.53s/it]epoch 2 loss 1.29245:  79%|███████▊  | 22/28 [01:36<00:27,  4.53s/it]epoch 2 loss 1.29245:  82%|████████▏ | 23/28 [01:36<00:16,  3.30s/it]epoch 2 loss 1.29536:  82%|████████▏ | 23/28 [01:36<00:16,  3.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6631[0m
[32m  eval_f1 = 0.3471[0m
[32m  eval_mcc = 0.6441[0m
[32m  eval_precision = 0.4693[0m
[32m  eval_recall = 0.3188[0m
[32m  ********************[0m
[32m  Best f1:0.3471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29536:  86%|████████▌ | 24/28 [01:43<00:17,  4.36s/it]epoch 2 loss 1.29556:  86%|████████▌ | 24/28 [01:43<00:17,  4.36s/it]epoch 2 loss 1.29556:  89%|████████▉ | 25/28 [01:43<00:09,  3.19s/it]epoch 2 loss 1.29127:  89%|████████▉ | 25/28 [01:44<00:09,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.664[0m
[32m  eval_f1 = 0.3471[0m
[32m  eval_mcc = 0.6452[0m
[32m  eval_precision = 0.4695[0m
[32m  eval_recall = 0.319[0m
[32m  ********************[0m
[32m  Best MCC:0.6452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29127:  93%|█████████▎| 26/28 [01:48<00:07,  3.76s/it]epoch 2 loss 1.28627:  93%|█████████▎| 26/28 [01:49<00:07,  3.76s/it]epoch 2 loss 1.28627:  96%|█████████▋| 27/28 [01:49<00:02,  2.75s/it]epoch 2 loss 1.28476:  96%|█████████▋| 27/28 [01:49<00:02,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6639[0m
[32m  eval_f1 = 0.3497[0m
[32m  eval_mcc = 0.6454[0m
[32m  eval_precision = 0.4697[0m
[32m  eval_recall = 0.3205[0m
[32m  ********************[0m
[32m  Best f1:0.3497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6454[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28476: 100%|██████████| 28/28 [01:59<00:00,  4.89s/it]epoch 2 loss 1.28476: 100%|██████████| 28/28 [01:59<00:00,  4.25s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.2044:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.2044:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 3 loss 1.27735:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6638[0m
[32m  eval_f1 = 0.3516[0m
[32m  eval_mcc = 0.6454[0m
[32m  eval_precision = 0.4691[0m
[32m  eval_recall = 0.3225[0m
[32m  ********************[0m
[32m  Best f1:0.3516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.27735:   7%|▋         | 2/28 [00:05<01:27,  3.36s/it]epoch 3 loss 1.23302:   7%|▋         | 2/28 [00:06<01:27,  3.36s/it]epoch 3 loss 1.23302:  11%|█         | 3/28 [00:06<00:50,  2.01s/it]epoch 3 loss 1.24469:  11%|█         | 3/28 [00:06<00:50,  2.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6649[0m
[32m  eval_f1 = 0.3554[0m
[32m  eval_mcc = 0.6466[0m
[32m  eval_precision = 0.4684[0m
[32m  eval_recall = 0.3254[0m
[32m  ********************[0m
[32m  Best f1:0.3554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24469:  14%|█▍        | 4/28 [00:14<01:47,  4.48s/it]epoch 3 loss 1.21208:  14%|█▍        | 4/28 [00:14<01:47,  4.48s/it]epoch 3 loss 1.21208:  18%|█▊        | 5/28 [00:14<01:09,  3.01s/it]epoch 3 loss 1.23183:  18%|█▊        | 5/28 [00:15<01:09,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6659[0m
[32m  eval_f1 = 0.3593[0m
[32m  eval_mcc = 0.6477[0m
[32m  eval_precision = 0.4705[0m
[32m  eval_recall = 0.3291[0m
[32m  ********************[0m
[32m  Best f1:0.3593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6477[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23183:  21%|██▏       | 6/28 [00:22<01:39,  4.53s/it]epoch 3 loss 1.2378:  21%|██▏       | 6/28 [00:22<01:39,  4.53s/it] epoch 3 loss 1.2378:  25%|██▌       | 7/28 [00:22<01:06,  3.19s/it]epoch 3 loss 1.25246:  25%|██▌       | 7/28 [00:23<01:06,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3607[0m
[32m  eval_mcc = 0.6486[0m
[32m  eval_precision = 0.4691[0m
[32m  eval_recall = 0.3302[0m
[32m  ********************[0m
[32m  Best f1:0.3607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6486[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25246:  29%|██▊       | 8/28 [00:31<01:38,  4.91s/it]epoch 3 loss 1.23419:  29%|██▊       | 8/28 [00:31<01:38,  4.91s/it]epoch 3 loss 1.23419:  32%|███▏      | 9/28 [00:31<01:06,  3.50s/it]epoch 3 loss 1.23691:  32%|███▏      | 9/28 [00:32<01:06,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6678[0m
[32m  eval_f1 = 0.3624[0m
[32m  eval_mcc = 0.6496[0m
[32m  eval_precision = 0.4658[0m
[32m  eval_recall = 0.3319[0m
[32m  ********************[0m
[32m  Best f1:0.3624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6496[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23691:  36%|███▌      | 10/28 [00:39<01:28,  4.93s/it]epoch 3 loss 1.24396:  36%|███▌      | 10/28 [00:40<01:28,  4.93s/it]epoch 3 loss 1.24396:  39%|███▉      | 11/28 [00:40<01:00,  3.54s/it]epoch 3 loss 1.23867:  39%|███▉      | 11/28 [00:40<01:00,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6682[0m
[32m  eval_f1 = 0.3642[0m
[32m  eval_mcc = 0.6499[0m
[32m  eval_precision = 0.4673[0m
[32m  eval_recall = 0.3336[0m
[32m  ********************[0m
[32m  Best f1:0.3642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6499[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23867:  43%|████▎     | 12/28 [00:48<01:19,  4.99s/it]epoch 3 loss 1.23017:  43%|████▎     | 12/28 [00:49<01:19,  4.99s/it]epoch 3 loss 1.23017:  46%|████▋     | 13/28 [00:49<00:54,  3.60s/it]epoch 3 loss 1.21888:  46%|████▋     | 13/28 [00:49<00:54,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6682[0m
[32m  eval_f1 = 0.364[0m
[32m  eval_mcc = 0.6499[0m
[32m  eval_precision = 0.4662[0m
[32m  eval_recall = 0.3334[0m

epoch 3 loss 1.21888:  50%|█████     | 14/28 [00:52<00:51,  3.66s/it]epoch 3 loss 1.214:  50%|█████     | 14/28 [00:53<00:51,  3.66s/it]  epoch 3 loss 1.214:  54%|█████▎    | 15/28 [00:53<00:34,  2.67s/it]epoch 3 loss 1.21321:  54%|█████▎    | 15/28 [00:53<00:34,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6695[0m
[32m  eval_f1 = 0.3667[0m
[32m  eval_mcc = 0.6512[0m
[32m  eval_precision = 0.4691[0m
[32m  eval_recall = 0.3365[0m
[32m  ********************[0m
[32m  Best f1:0.3667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21321:  57%|█████▋    | 16/28 [01:01<00:52,  4.37s/it]epoch 3 loss 1.21108:  57%|█████▋    | 16/28 [01:01<00:52,  4.37s/it]epoch 3 loss 1.21108:  61%|██████    | 17/28 [01:01<00:34,  3.18s/it]epoch 3 loss 1.21203:  61%|██████    | 17/28 [01:02<00:34,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6711[0m
[32m  eval_f1 = 0.3657[0m
[32m  eval_mcc = 0.6527[0m
[32m  eval_precision = 0.4637[0m
[32m  eval_recall = 0.3366[0m
[32m  ********************[0m
[32m  Best MCC:0.6527[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21203:  64%|██████▍   | 18/28 [01:06<00:37,  3.73s/it]epoch 3 loss 1.2114:  64%|██████▍   | 18/28 [01:07<00:37,  3.73s/it] epoch 3 loss 1.2114:  68%|██████▊   | 19/28 [01:07<00:24,  2.73s/it]epoch 3 loss 1.209:  68%|██████▊   | 19/28 [01:07<00:24,  2.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6726[0m
[32m  eval_f1 = 0.3664[0m
[32m  eval_mcc = 0.654[0m
[32m  eval_precision = 0.4622[0m
[32m  eval_recall = 0.3381[0m
[32m  ********************[0m
[32m  Best MCC:0.654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.209:  71%|███████▏  | 20/28 [01:12<00:26,  3.32s/it]epoch 3 loss 1.20654:  71%|███████▏  | 20/28 [01:12<00:26,  3.32s/it]epoch 3 loss 1.20654:  75%|███████▌  | 21/28 [01:12<00:17,  2.45s/it]epoch 3 loss 1.2053:  75%|███████▌  | 21/28 [01:12<00:17,  2.45s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6739[0m
[32m  eval_f1 = 0.3695[0m
[32m  eval_mcc = 0.6555[0m
[32m  eval_precision = 0.4691[0m
[32m  eval_recall = 0.341[0m
[32m  ********************[0m
[32m  Best f1:0.3695[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2053:  79%|███████▊  | 22/28 [01:18<00:21,  3.61s/it]epoch 3 loss 1.20238:  79%|███████▊  | 22/28 [01:19<00:21,  3.61s/it]epoch 3 loss 1.20238:  82%|████████▏ | 23/28 [01:19<00:13,  2.65s/it]epoch 3 loss 1.20081:  82%|████████▏ | 23/28 [01:19<00:13,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6734[0m
[32m  eval_f1 = 0.3689[0m
[32m  eval_mcc = 0.655[0m
[32m  eval_precision = 0.4704[0m
[32m  eval_recall = 0.3409[0m

epoch 3 loss 1.20081:  86%|████████▌ | 24/28 [01:22<00:11,  2.99s/it]epoch 3 loss 1.19675:  86%|████████▌ | 24/28 [01:23<00:11,  2.99s/it]epoch 3 loss 1.19675:  89%|████████▉ | 25/28 [01:23<00:06,  2.22s/it]epoch 3 loss 1.19214:  89%|████████▉ | 25/28 [01:23<00:06,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6737[0m
[32m  eval_f1 = 0.3687[0m
[32m  eval_mcc = 0.6553[0m
[32m  eval_precision = 0.4708[0m
[32m  eval_recall = 0.3405[0m

epoch 3 loss 1.19214:  93%|█████████▎| 26/28 [01:27<00:05,  2.69s/it]epoch 3 loss 1.19128:  93%|█████████▎| 26/28 [01:27<00:05,  2.69s/it]epoch 3 loss 1.19128:  96%|█████████▋| 27/28 [01:27<00:02,  2.00s/it]epoch 3 loss 1.20295:  96%|█████████▋| 27/28 [01:27<00:02,  2.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.674[0m
[32m  eval_f1 = 0.3734[0m
[32m  eval_mcc = 0.6558[0m
[32m  eval_precision = 0.4828[0m
[32m  eval_recall = 0.3427[0m
[32m  ********************[0m
[32m  Best f1:0.3734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20295: 100%|██████████| 28/28 [01:33<00:00,  3.29s/it]epoch 3 loss 1.20295: 100%|██████████| 28/28 [01:33<00:00,  3.35s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.11445:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.11445:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.12111:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6738[0m
[32m  eval_f1 = 0.3738[0m
[32m  eval_mcc = 0.6555[0m
[32m  eval_precision = 0.4862[0m
[32m  eval_recall = 0.3422[0m
[32m  ********************[0m
[32m  Best f1:0.3738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.12111:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 4 loss 1.13341:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 4 loss 1.13341:  11%|█         | 3/28 [00:05<00:47,  1.88s/it]epoch 4 loss 1.12296:  11%|█         | 3/28 [00:06<00:47,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6738[0m
[32m  eval_f1 = 0.3741[0m
[32m  eval_mcc = 0.6556[0m
[32m  eval_precision = 0.4859[0m
[32m  eval_recall = 0.3422[0m
[32m  ********************[0m
[32m  Best f1:0.3741[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.12296:  14%|█▍        | 4/28 [00:10<01:12,  3.00s/it]epoch 4 loss 1.12965:  14%|█▍        | 4/28 [00:10<01:12,  3.00s/it]epoch 4 loss 1.12965:  18%|█▊        | 5/28 [00:10<00:47,  2.07s/it]epoch 4 loss 1.1671:  18%|█▊        | 5/28 [00:11<00:47,  2.07s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6747[0m
[32m  eval_f1 = 0.3777[0m
[32m  eval_mcc = 0.6565[0m
[32m  eval_precision = 0.4864[0m
[32m  eval_recall = 0.3458[0m
[32m  ********************[0m
[32m  Best f1:0.3777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1671:  21%|██▏       | 6/28 [00:17<01:18,  3.58s/it]epoch 4 loss 1.15641:  21%|██▏       | 6/28 [00:17<01:18,  3.58s/it]epoch 4 loss 1.15641:  25%|██▌       | 7/28 [00:17<00:53,  2.55s/it]epoch 4 loss 1.15713:  25%|██▌       | 7/28 [00:18<00:53,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6758[0m
[32m  eval_f1 = 0.38[0m
[32m  eval_mcc = 0.6578[0m
[32m  eval_precision = 0.4866[0m
[32m  eval_recall = 0.3477[0m
[32m  ********************[0m
[32m  Best f1:0.38[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15713:  29%|██▊       | 8/28 [00:24<01:15,  3.80s/it]epoch 4 loss 1.16796:  29%|██▊       | 8/28 [00:24<01:15,  3.80s/it]epoch 4 loss 1.16796:  32%|███▏      | 9/28 [00:24<00:52,  2.74s/it]epoch 4 loss 1.16428:  32%|███▏      | 9/28 [00:25<00:52,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6761[0m
[32m  eval_f1 = 0.3815[0m
[32m  eval_mcc = 0.6581[0m
[32m  eval_precision = 0.4876[0m
[32m  eval_recall = 0.3492[0m
[32m  ********************[0m
[32m  Best f1:0.3815[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16428:  36%|███▌      | 10/28 [00:31<01:10,  3.91s/it]epoch 4 loss 1.16501:  36%|███▌      | 10/28 [00:31<01:10,  3.91s/it]epoch 4 loss 1.16501:  39%|███▉      | 11/28 [00:31<00:48,  2.85s/it]epoch 4 loss 1.17011:  39%|███▉      | 11/28 [00:32<00:48,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6765[0m
[32m  eval_f1 = 0.3808[0m
[32m  eval_mcc = 0.6585[0m
[32m  eval_precision = 0.4858[0m
[32m  eval_recall = 0.3492[0m
[32m  ********************[0m
[32m  Best MCC:0.6585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17011:  43%|████▎     | 12/28 [00:36<00:56,  3.51s/it]epoch 4 loss 1.17233:  43%|████▎     | 12/28 [00:37<00:56,  3.51s/it]epoch 4 loss 1.17233:  46%|████▋     | 13/28 [00:37<00:38,  2.57s/it]epoch 4 loss 1.17141:  46%|████▋     | 13/28 [00:37<00:38,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6768[0m
[32m  eval_f1 = 0.3818[0m
[32m  eval_mcc = 0.6588[0m
[32m  eval_precision = 0.4872[0m
[32m  eval_recall = 0.3495[0m
[32m  ********************[0m
[32m  Best f1:0.3818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17141:  50%|█████     | 14/28 [00:42<00:48,  3.46s/it]epoch 4 loss 1.17074:  50%|█████     | 14/28 [00:43<00:48,  3.46s/it]epoch 4 loss 1.17074:  54%|█████▎    | 15/28 [00:43<00:33,  2.54s/it]epoch 4 loss 1.17077:  54%|█████▎    | 15/28 [00:43<00:33,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6768[0m
[32m  eval_f1 = 0.3819[0m
[32m  eval_mcc = 0.6589[0m
[32m  eval_precision = 0.4873[0m
[32m  eval_recall = 0.3497[0m
[32m  ********************[0m
[32m  Best f1:0.3819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17077:  57%|█████▋    | 16/28 [00:48<00:41,  3.47s/it]epoch 4 loss 1.17044:  57%|█████▋    | 16/28 [00:49<00:41,  3.47s/it]epoch 4 loss 1.17044:  61%|██████    | 17/28 [00:49<00:28,  2.55s/it]epoch 4 loss 1.16899:  61%|██████    | 17/28 [00:49<00:28,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6769[0m
[32m  eval_f1 = 0.382[0m
[32m  eval_mcc = 0.659[0m
[32m  eval_precision = 0.4888[0m
[32m  eval_recall = 0.3495[0m
[32m  ********************[0m
[32m  Best f1:0.382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16899:  64%|██████▍   | 18/28 [00:55<00:37,  3.74s/it]epoch 4 loss 1.16957:  64%|██████▍   | 18/28 [00:56<00:37,  3.74s/it]epoch 4 loss 1.16957:  68%|██████▊   | 19/28 [00:56<00:24,  2.75s/it]epoch 4 loss 1.16729:  68%|██████▊   | 19/28 [00:56<00:24,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6769[0m
[32m  eval_f1 = 0.3819[0m
[32m  eval_mcc = 0.659[0m
[32m  eval_precision = 0.4889[0m
[32m  eval_recall = 0.3495[0m

epoch 4 loss 1.16729:  71%|███████▏  | 20/28 [00:59<00:24,  3.06s/it]epoch 4 loss 1.16998:  71%|███████▏  | 20/28 [01:00<00:24,  3.06s/it]epoch 4 loss 1.16998:  75%|███████▌  | 21/28 [01:00<00:15,  2.26s/it]epoch 4 loss 1.17378:  75%|███████▌  | 21/28 [01:00<00:15,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6769[0m
[32m  eval_f1 = 0.3819[0m
[32m  eval_mcc = 0.659[0m
[32m  eval_precision = 0.4892[0m
[32m  eval_recall = 0.3495[0m

epoch 4 loss 1.17378:  79%|███████▊  | 22/28 [01:04<00:16,  2.72s/it]epoch 4 loss 1.1697:  79%|███████▊  | 22/28 [01:04<00:16,  2.72s/it] epoch 4 loss 1.1697:  82%|████████▏ | 23/28 [01:04<00:10,  2.03s/it]epoch 4 loss 1.16819:  82%|████████▏ | 23/28 [01:04<00:10,  2.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.677[0m
[32m  eval_f1 = 0.3819[0m
[32m  eval_mcc = 0.659[0m
[32m  eval_precision = 0.489[0m
[32m  eval_recall = 0.3495[0m

epoch 4 loss 1.16819:  86%|████████▌ | 24/28 [01:08<00:10,  2.56s/it]epoch 4 loss 1.16691:  86%|████████▌ | 24/28 [01:08<00:10,  2.56s/it]epoch 4 loss 1.16691:  89%|████████▉ | 25/28 [01:08<00:05,  1.91s/it]epoch 4 loss 1.16334:  89%|████████▉ | 25/28 [01:09<00:05,  1.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6768[0m
[32m  eval_f1 = 0.3818[0m
[32m  eval_mcc = 0.6588[0m
[32m  eval_precision = 0.4888[0m
[32m  eval_recall = 0.3494[0m

epoch 4 loss 1.16334:  93%|█████████▎| 26/28 [01:12<00:04,  2.48s/it]epoch 4 loss 1.16138:  93%|█████████▎| 26/28 [01:12<00:04,  2.48s/it]epoch 4 loss 1.16138:  96%|█████████▋| 27/28 [01:12<00:01,  1.86s/it]epoch 4 loss 1.15897:  96%|█████████▋| 27/28 [01:13<00:01,  1.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6768[0m
[32m  eval_f1 = 0.3818[0m
[32m  eval_mcc = 0.6589[0m
[32m  eval_precision = 0.4888[0m
[32m  eval_recall = 0.3494[0m

epoch 4 loss 1.15897: 100%|██████████| 28/28 [01:16<00:00,  2.38s/it]epoch 4 loss 1.15897: 100%|██████████| 28/28 [01:16<00:00,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6769[0m
[32m  eval_f1 = 0.382[0m
[32m  eval_mcc = 0.659[0m
[32m  eval_precision = 0.4888[0m
[32m  eval_recall = 0.3495[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.297[0m
[32m  eval_mcc = 0.6388[0m
[32m  eval_precision = 0.3794[0m
[32m  eval_recall = 0.2778[0m

