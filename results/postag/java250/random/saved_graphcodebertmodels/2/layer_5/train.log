[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=5, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.73985:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.73985:   4%|▎         | 1/28 [00:00<00:21,  1.23it/s]epoch 0 loss 5.7394:   4%|▎         | 1/28 [00:01<00:21,  1.23it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0013[0m
[32m  eval_f1 = 0.0004[0m
[32m  eval_mcc = -0.0006[0m
[32m  eval_precision = 0.0011[0m
[32m  eval_recall = 0.002[0m
[32m  ********************[0m
[32m  Best f1:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.7394:   7%|▋         | 2/28 [00:05<01:21,  3.12s/it]epoch 0 loss 5.73622:   7%|▋         | 2/28 [00:05<01:21,  3.12s/it]epoch 0 loss 5.73622:  11%|█         | 3/28 [00:05<00:46,  1.88s/it]epoch 0 loss 5.72046:  11%|█         | 3/28 [00:06<00:46,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0046[0m
[32m  eval_f1 = 0.001[0m
[32m  eval_mcc = 0.0011[0m
[32m  eval_precision = 0.0021[0m
[32m  eval_recall = 0.0024[0m
[32m  ********************[0m
[32m  Best f1:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.72046:  14%|█▍        | 4/28 [00:11<01:22,  3.44s/it]epoch 0 loss 5.69797:  14%|█▍        | 4/28 [00:12<01:22,  3.44s/it]epoch 0 loss 5.69797:  18%|█▊        | 5/28 [00:12<00:53,  2.35s/it]epoch 0 loss 5.66934:  18%|█▊        | 5/28 [00:12<00:53,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0141[0m
[32m  eval_f1 = 0.0025[0m
[32m  eval_mcc = 0.0047[0m
[32m  eval_precision = 0.0035[0m
[32m  eval_recall = 0.0033[0m
[32m  ********************[0m
[32m  Best f1:0.0025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.66934:  21%|██▏       | 6/28 [00:19<01:26,  3.91s/it]epoch 0 loss 5.63239:  21%|██▏       | 6/28 [00:19<01:26,  3.91s/it]epoch 0 loss 5.63239:  25%|██▌       | 7/28 [00:19<00:58,  2.78s/it]epoch 0 loss 5.58721:  25%|██▌       | 7/28 [00:19<00:58,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0469[0m
[32m  eval_f1 = 0.0074[0m
[32m  eval_mcc = 0.0222[0m
[32m  eval_precision = 0.0068[0m
[32m  eval_recall = 0.0127[0m
[32m  ********************[0m
[32m  Best f1:0.0074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.58721:  29%|██▊       | 8/28 [00:28<01:31,  4.59s/it]epoch 0 loss 5.53734:  29%|██▊       | 8/28 [00:28<01:31,  4.59s/it]epoch 0 loss 5.53734:  32%|███▏      | 9/28 [00:28<01:02,  3.29s/it]epoch 0 loss 5.48391:  32%|███▏      | 9/28 [00:28<01:02,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0906[0m
[32m  eval_f1 = 0.0145[0m
[32m  eval_mcc = 0.0531[0m
[32m  eval_precision = 0.0129[0m
[32m  eval_recall = 0.0271[0m
[32m  ********************[0m
[32m  Best f1:0.0145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.48391:  36%|███▌      | 10/28 [00:35<01:20,  4.47s/it]epoch 0 loss 5.42167:  36%|███▌      | 10/28 [00:36<01:20,  4.47s/it]epoch 0 loss 5.42167:  39%|███▉      | 11/28 [00:36<00:54,  3.23s/it]epoch 0 loss 5.35556:  39%|███▉      | 11/28 [00:36<00:54,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1147[0m
[32m  eval_f1 = 0.0243[0m
[32m  eval_mcc = 0.0715[0m
[32m  eval_precision = 0.0275[0m
[32m  eval_recall = 0.0367[0m
[32m  ********************[0m
[32m  Best f1:0.0243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0715[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.35556:  43%|████▎     | 12/28 [00:44<01:18,  4.89s/it]epoch 0 loss 5.28489:  43%|████▎     | 12/28 [00:45<01:18,  4.89s/it]epoch 0 loss 5.28489:  46%|████▋     | 13/28 [00:45<00:52,  3.53s/it]epoch 0 loss 5.21095:  46%|████▋     | 13/28 [00:45<00:52,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1384[0m
[32m  eval_f1 = 0.0298[0m
[32m  eval_mcc = 0.093[0m
[32m  eval_precision = 0.0399[0m
[32m  eval_recall = 0.0398[0m
[32m  ********************[0m
[32m  Best f1:0.0298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.21095:  50%|█████     | 14/28 [00:53<01:08,  4.89s/it]epoch 0 loss 5.13169:  50%|█████     | 14/28 [00:53<01:08,  4.89s/it]epoch 0 loss 5.13169:  54%|█████▎    | 15/28 [00:53<00:46,  3.54s/it]epoch 0 loss 5.04953:  54%|█████▎    | 15/28 [00:53<00:46,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1833[0m
[32m  eval_f1 = 0.0453[0m
[32m  eval_mcc = 0.1388[0m
[32m  eval_precision = 0.0698[0m
[32m  eval_recall = 0.0509[0m
[32m  ********************[0m
[32m  Best f1:0.0453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04953:  57%|█████▋    | 16/28 [01:02<01:00,  5.02s/it]epoch 0 loss 4.97445:  57%|█████▋    | 16/28 [01:02<01:00,  5.02s/it]epoch 0 loss 4.97445:  61%|██████    | 17/28 [01:02<00:40,  3.64s/it]epoch 0 loss 4.89746:  61%|██████    | 17/28 [01:02<00:40,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2191[0m
[32m  eval_f1 = 0.0498[0m
[32m  eval_mcc = 0.1755[0m
[32m  eval_precision = 0.0818[0m
[32m  eval_recall = 0.0529[0m
[32m  ********************[0m
[32m  Best f1:0.0498[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1755[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.89746:  64%|██████▍   | 18/28 [01:10<00:49,  4.91s/it]epoch 0 loss 4.817:  64%|██████▍   | 18/28 [01:10<00:49,  4.91s/it]  epoch 0 loss 4.817:  68%|██████▊   | 19/28 [01:10<00:32,  3.56s/it]epoch 0 loss 4.74711:  68%|██████▊   | 19/28 [01:11<00:32,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2558[0m
[32m  eval_f1 = 0.0562[0m
[32m  eval_mcc = 0.2143[0m
[32m  eval_precision = 0.1118[0m
[32m  eval_recall = 0.0564[0m
[32m  ********************[0m
[32m  Best f1:0.0562[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.74711:  71%|███████▏  | 20/28 [01:17<00:37,  4.63s/it]epoch 0 loss 4.66911:  71%|███████▏  | 20/28 [01:18<00:37,  4.63s/it]epoch 0 loss 4.66911:  75%|███████▌  | 21/28 [01:18<00:23,  3.36s/it]epoch 0 loss 4.59407:  75%|███████▌  | 21/28 [01:18<00:23,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3047[0m
[32m  eval_f1 = 0.0713[0m
[32m  eval_mcc = 0.2661[0m
[32m  eval_precision = 0.139[0m
[32m  eval_recall = 0.0684[0m
[32m  ********************[0m
[32m  Best f1:0.0713[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2661[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.59407:  79%|███████▊  | 22/28 [01:23<00:24,  4.05s/it]epoch 0 loss 4.52188:  79%|███████▊  | 22/28 [01:24<00:24,  4.05s/it]epoch 0 loss 4.52188:  82%|████████▏ | 23/28 [01:24<00:14,  2.96s/it]epoch 0 loss 4.44867:  82%|████████▏ | 23/28 [01:24<00:14,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3723[0m
[32m  eval_f1 = 0.0919[0m
[32m  eval_mcc = 0.333[0m
[32m  eval_precision = 0.1692[0m
[32m  eval_recall = 0.0843[0m
[32m  ********************[0m
[32m  Best f1:0.0919[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.44867:  86%|████████▌ | 24/28 [01:30<00:16,  4.02s/it]epoch 0 loss 4.38188:  86%|████████▌ | 24/28 [01:31<00:16,  4.02s/it]epoch 0 loss 4.38188:  89%|████████▉ | 25/28 [01:31<00:08,  2.94s/it]epoch 0 loss 4.31594:  89%|████████▉ | 25/28 [01:31<00:08,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4484[0m
[32m  eval_f1 = 0.1099[0m
[32m  eval_mcc = 0.4112[0m
[32m  eval_precision = 0.1741[0m
[32m  eval_recall = 0.1012[0m
[32m  ********************[0m
[32m  Best f1:0.1099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.31594:  93%|█████████▎| 26/28 [01:37<00:08,  4.02s/it]epoch 0 loss 4.25298:  93%|█████████▎| 26/28 [01:38<00:08,  4.02s/it]epoch 0 loss 4.25298:  96%|█████████▋| 27/28 [01:38<00:02,  2.94s/it]epoch 0 loss 4.19389:  96%|█████████▋| 27/28 [01:38<00:02,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.469[0m
[32m  eval_f1 = 0.1253[0m
[32m  eval_mcc = 0.4378[0m
[32m  eval_precision = 0.1965[0m
[32m  eval_recall = 0.1142[0m
[32m  ********************[0m
[32m  Best f1:0.1253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.19389: 100%|██████████| 28/28 [01:44<00:00,  3.95s/it]epoch 0 loss 4.19389: 100%|██████████| 28/28 [01:44<00:00,  3.73s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.37758:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.37758:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 1 loss 2.29727:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4871[0m
[32m  eval_f1 = 0.1372[0m
[32m  eval_mcc = 0.4628[0m
[32m  eval_precision = 0.1911[0m
[32m  eval_recall = 0.1271[0m
[32m  ********************[0m
[32m  Best f1:0.1372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29727:   7%|▋         | 2/28 [00:06<01:42,  3.95s/it]epoch 1 loss 2.27225:   7%|▋         | 2/28 [00:07<01:42,  3.95s/it]epoch 1 loss 2.27225:  11%|█         | 3/28 [00:07<00:58,  2.34s/it]epoch 1 loss 2.24473:  11%|█         | 3/28 [00:07<00:58,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5199[0m
[32m  eval_f1 = 0.1537[0m
[32m  eval_mcc = 0.4964[0m
[32m  eval_precision = 0.2078[0m
[32m  eval_recall = 0.1455[0m
[32m  ********************[0m
[32m  Best f1:0.1537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4964[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.24473:  14%|█▍        | 4/28 [00:13<01:29,  3.71s/it]epoch 1 loss 2.22122:  14%|█▍        | 4/28 [00:13<01:29,  3.71s/it]epoch 1 loss 2.22122:  18%|█▊        | 5/28 [00:13<00:58,  2.53s/it]epoch 1 loss 2.20875:  18%|█▊        | 5/28 [00:13<00:58,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5571[0m
[32m  eval_f1 = 0.1739[0m
[32m  eval_mcc = 0.5325[0m
[32m  eval_precision = 0.2185[0m
[32m  eval_recall = 0.1677[0m
[32m  ********************[0m
[32m  Best f1:0.1739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20875:  21%|██▏       | 6/28 [00:20<01:25,  3.90s/it]epoch 1 loss 2.19091:  21%|██▏       | 6/28 [00:20<01:25,  3.90s/it]epoch 1 loss 2.19091:  25%|██▌       | 7/28 [00:20<00:58,  2.76s/it]epoch 1 loss 2.16222:  25%|██▌       | 7/28 [00:20<00:58,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5765[0m
[32m  eval_f1 = 0.1807[0m
[32m  eval_mcc = 0.5517[0m
[32m  eval_precision = 0.2179[0m
[32m  eval_recall = 0.1771[0m
[32m  ********************[0m
[32m  Best f1:0.1807[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5517[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16222:  29%|██▊       | 8/28 [00:27<01:19,  3.96s/it]epoch 1 loss 2.1276:  29%|██▊       | 8/28 [00:27<01:19,  3.96s/it] epoch 1 loss 2.1276:  32%|███▏      | 9/28 [00:27<00:54,  2.86s/it]epoch 1 loss 2.09122:  32%|███▏      | 9/28 [00:27<00:54,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5862[0m
[32m  eval_f1 = 0.1875[0m
[32m  eval_mcc = 0.5625[0m
[32m  eval_precision = 0.2361[0m
[32m  eval_recall = 0.1816[0m
[32m  ********************[0m
[32m  Best f1:0.1875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09122:  36%|███▌      | 10/28 [00:33<01:11,  3.97s/it]epoch 1 loss 2.06737:  36%|███▌      | 10/28 [00:34<01:11,  3.97s/it]epoch 1 loss 2.06737:  39%|███▉      | 11/28 [00:34<00:49,  2.89s/it]epoch 1 loss 2.05657:  39%|███▉      | 11/28 [00:34<00:49,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5892[0m
[32m  eval_f1 = 0.1883[0m
[32m  eval_mcc = 0.5662[0m
[32m  eval_precision = 0.2364[0m
[32m  eval_recall = 0.1814[0m
[32m  ********************[0m
[32m  Best f1:0.1883[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5662[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05657:  43%|████▎     | 12/28 [00:40<01:04,  4.01s/it]epoch 1 loss 2.03956:  43%|████▎     | 12/28 [00:41<01:04,  4.01s/it]epoch 1 loss 2.03956:  46%|████▋     | 13/28 [00:41<00:43,  2.92s/it]epoch 1 loss 2.01081:  46%|████▋     | 13/28 [00:41<00:43,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5946[0m
[32m  eval_f1 = 0.1934[0m
[32m  eval_mcc = 0.5725[0m
[32m  eval_precision = 0.251[0m
[32m  eval_recall = 0.1844[0m
[32m  ********************[0m
[32m  Best f1:0.1934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5725[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01081:  50%|█████     | 14/28 [00:47<00:55,  3.99s/it]epoch 1 loss 1.99088:  50%|█████     | 14/28 [00:48<00:55,  3.99s/it]epoch 1 loss 1.99088:  54%|█████▎    | 15/28 [00:48<00:37,  2.92s/it]epoch 1 loss 1.97713:  54%|█████▎    | 15/28 [00:48<00:37,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5999[0m
[32m  eval_f1 = 0.2069[0m
[32m  eval_mcc = 0.578[0m
[32m  eval_precision = 0.2995[0m
[32m  eval_recall = 0.1934[0m
[32m  ********************[0m
[32m  Best f1:0.2069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97713:  57%|█████▋    | 16/28 [00:54<00:48,  4.00s/it]epoch 1 loss 1.96021:  57%|█████▋    | 16/28 [00:55<00:48,  4.00s/it]epoch 1 loss 1.96021:  61%|██████    | 17/28 [00:55<00:32,  2.93s/it]epoch 1 loss 1.93885:  61%|██████    | 17/28 [00:55<00:32,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6036[0m
[32m  eval_f1 = 0.222[0m
[32m  eval_mcc = 0.581[0m
[32m  eval_precision = 0.3139[0m
[32m  eval_recall = 0.2066[0m
[32m  ********************[0m
[32m  Best f1:0.222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93885:  64%|██████▍   | 18/28 [01:01<00:38,  3.82s/it]epoch 1 loss 1.92402:  64%|██████▍   | 18/28 [01:01<00:38,  3.82s/it]epoch 1 loss 1.92402:  68%|██████▊   | 19/28 [01:01<00:25,  2.80s/it]epoch 1 loss 1.91637:  68%|██████▊   | 19/28 [01:01<00:25,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6081[0m
[32m  eval_f1 = 0.2414[0m
[32m  eval_mcc = 0.5854[0m
[32m  eval_precision = 0.3287[0m
[32m  eval_recall = 0.2268[0m
[32m  ********************[0m
[32m  Best f1:0.2414[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5854[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91637:  71%|███████▏  | 20/28 [01:10<00:38,  4.81s/it]epoch 1 loss 1.89855:  71%|███████▏  | 20/28 [01:11<00:38,  4.81s/it]epoch 1 loss 1.89855:  75%|███████▌  | 21/28 [01:11<00:24,  3.49s/it]epoch 1 loss 1.88393:  75%|███████▌  | 21/28 [01:11<00:24,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6103[0m
[32m  eval_f1 = 0.2493[0m
[32m  eval_mcc = 0.588[0m
[32m  eval_precision = 0.3437[0m
[32m  eval_recall = 0.2335[0m
[32m  ********************[0m
[32m  Best f1:0.2493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88393:  79%|███████▊  | 22/28 [01:22<00:34,  5.82s/it]epoch 1 loss 1.86626:  79%|███████▊  | 22/28 [01:23<00:34,  5.82s/it]epoch 1 loss 1.86626:  82%|████████▏ | 23/28 [01:23<00:21,  4.20s/it]epoch 1 loss 1.8556:  82%|████████▏ | 23/28 [01:23<00:21,  4.20s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6144[0m
[32m  eval_f1 = 0.2593[0m
[32m  eval_mcc = 0.5928[0m
[32m  eval_precision = 0.351[0m
[32m  eval_recall = 0.2442[0m
[32m  ********************[0m
[32m  Best f1:0.2593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8556:  86%|████████▌ | 24/28 [01:31<00:22,  5.55s/it]epoch 1 loss 1.84267:  86%|████████▌ | 24/28 [01:32<00:22,  5.55s/it]epoch 1 loss 1.84267:  89%|████████▉ | 25/28 [01:32<00:12,  4.01s/it]epoch 1 loss 1.83438:  89%|████████▉ | 25/28 [01:32<00:12,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6169[0m
[32m  eval_f1 = 0.262[0m
[32m  eval_mcc = 0.5964[0m
[32m  eval_precision = 0.3482[0m
[32m  eval_recall = 0.2455[0m
[32m  ********************[0m
[32m  Best f1:0.262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5964[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83438:  93%|█████████▎| 26/28 [01:43<00:12,  6.12s/it]epoch 1 loss 1.82011:  93%|█████████▎| 26/28 [01:43<00:12,  6.12s/it]epoch 1 loss 1.82011:  96%|█████████▋| 27/28 [01:43<00:04,  4.41s/it]epoch 1 loss 1.80388:  96%|█████████▋| 27/28 [01:43<00:04,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6206[0m
[32m  eval_f1 = 0.2637[0m
[32m  eval_mcc = 0.6007[0m
[32m  eval_precision = 0.3415[0m
[32m  eval_recall = 0.2467[0m
[32m  ********************[0m
[32m  Best f1:0.2637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80388: 100%|██████████| 28/28 [01:50<00:00,  5.25s/it]epoch 1 loss 1.80388: 100%|██████████| 28/28 [01:50<00:00,  3.96s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.35821:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.35821:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 2 loss 1.35768:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6247[0m
[32m  eval_f1 = 0.2671[0m
[32m  eval_mcc = 0.605[0m
[32m  eval_precision = 0.3482[0m
[32m  eval_recall = 0.249[0m
[32m  ********************[0m
[32m  Best f1:0.2671[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35768:   7%|▋         | 2/28 [00:09<02:19,  5.38s/it]epoch 2 loss 1.37591:   7%|▋         | 2/28 [00:09<02:19,  5.38s/it]epoch 2 loss 1.37591:  11%|█         | 3/28 [00:09<01:17,  3.12s/it]epoch 2 loss 1.37824:  11%|█         | 3/28 [00:10<01:17,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6271[0m
[32m  eval_f1 = 0.2691[0m
[32m  eval_mcc = 0.6072[0m
[32m  eval_precision = 0.3686[0m
[32m  eval_recall = 0.2506[0m
[32m  ********************[0m
[32m  Best f1:0.2691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37824:  14%|█▍        | 4/28 [00:17<01:54,  4.77s/it]epoch 2 loss 1.39233:  14%|█▍        | 4/28 [00:17<01:54,  4.77s/it]epoch 2 loss 1.39233:  18%|█▊        | 5/28 [00:17<01:13,  3.20s/it]epoch 2 loss 1.38681:  18%|█▊        | 5/28 [00:17<01:13,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6298[0m
[32m  eval_f1 = 0.2726[0m
[32m  eval_mcc = 0.6095[0m
[32m  eval_precision = 0.3668[0m
[32m  eval_recall = 0.2536[0m
[32m  ********************[0m
[32m  Best f1:0.2726[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6095[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38681:  21%|██▏       | 6/28 [00:26<01:51,  5.08s/it]epoch 2 loss 1.40017:  21%|██▏       | 6/28 [00:26<01:51,  5.08s/it]epoch 2 loss 1.40017:  25%|██▌       | 7/28 [00:26<01:14,  3.55s/it]epoch 2 loss 1.38892:  25%|██▌       | 7/28 [00:26<01:14,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6331[0m
[32m  eval_f1 = 0.2764[0m
[32m  eval_mcc = 0.6126[0m
[32m  eval_precision = 0.3623[0m
[32m  eval_recall = 0.2582[0m
[32m  ********************[0m
[32m  Best f1:0.2764[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6126[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38892:  29%|██▊       | 8/28 [00:35<01:42,  5.11s/it]epoch 2 loss 1.3903:  29%|██▊       | 8/28 [00:35<01:42,  5.11s/it] epoch 2 loss 1.3903:  32%|███▏      | 9/28 [00:35<01:09,  3.65s/it]epoch 2 loss 1.40689:  32%|███▏      | 9/28 [00:35<01:09,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6339[0m
[32m  eval_f1 = 0.2823[0m
[32m  eval_mcc = 0.6134[0m
[32m  eval_precision = 0.3765[0m
[32m  eval_recall = 0.2626[0m
[32m  ********************[0m
[32m  Best f1:0.2823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6134[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40689:  36%|███▌      | 10/28 [00:45<01:42,  5.69s/it]epoch 2 loss 1.39943:  36%|███▌      | 10/28 [00:46<01:42,  5.69s/it]epoch 2 loss 1.39943:  39%|███▉      | 11/28 [00:46<01:09,  4.08s/it]epoch 2 loss 1.40036:  39%|███▉      | 11/28 [00:46<01:09,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6364[0m
[32m  eval_f1 = 0.2897[0m
[32m  eval_mcc = 0.6157[0m
[32m  eval_precision = 0.3812[0m
[32m  eval_recall = 0.2688[0m
[32m  ********************[0m
[32m  Best f1:0.2897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40036:  43%|████▎     | 12/28 [00:52<01:14,  4.63s/it]epoch 2 loss 1.39742:  43%|████▎     | 12/28 [00:52<01:14,  4.63s/it]epoch 2 loss 1.39742:  46%|████▋     | 13/28 [00:52<00:50,  3.36s/it]epoch 2 loss 1.40498:  46%|████▋     | 13/28 [00:52<00:50,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6404[0m
[32m  eval_f1 = 0.295[0m
[32m  eval_mcc = 0.6199[0m
[32m  eval_precision = 0.3848[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best f1:0.295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40498:  50%|█████     | 14/28 [00:58<00:59,  4.27s/it]epoch 2 loss 1.39703:  50%|█████     | 14/28 [00:59<00:59,  4.27s/it]epoch 2 loss 1.39703:  54%|█████▎    | 15/28 [00:59<00:40,  3.11s/it]epoch 2 loss 1.40139:  54%|█████▎    | 15/28 [00:59<00:40,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.2993[0m
[32m  eval_mcc = 0.6227[0m
[32m  eval_precision = 0.3828[0m
[32m  eval_recall = 0.2787[0m
[32m  ********************[0m
[32m  Best f1:0.2993[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40139:  57%|█████▋    | 16/28 [01:08<00:58,  4.87s/it]epoch 2 loss 1.4006:  57%|█████▋    | 16/28 [01:08<00:58,  4.87s/it] epoch 2 loss 1.4006:  61%|██████    | 17/28 [01:08<00:38,  3.53s/it]epoch 2 loss 1.39999:  61%|██████    | 17/28 [01:09<00:38,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6451[0m
[32m  eval_f1 = 0.3039[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.3871[0m
[32m  eval_recall = 0.2825[0m
[32m  ********************[0m
[32m  Best f1:0.3039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39999:  64%|██████▍   | 18/28 [01:17<00:52,  5.25s/it]epoch 2 loss 1.40421:  64%|██████▍   | 18/28 [01:18<00:52,  5.25s/it]epoch 2 loss 1.40421:  68%|██████▊   | 19/28 [01:18<00:34,  3.80s/it]epoch 2 loss 1.40556:  68%|██████▊   | 19/28 [01:18<00:34,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.58it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6462[0m
[32m  eval_f1 = 0.3044[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.393[0m
[32m  eval_recall = 0.2829[0m
[32m  ********************[0m
[32m  Best f1:0.3044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40556:  71%|███████▏  | 20/28 [01:29<00:48,  6.02s/it]epoch 2 loss 1.40359:  71%|███████▏  | 20/28 [01:29<00:48,  6.02s/it]epoch 2 loss 1.40359:  75%|███████▌  | 21/28 [01:29<00:30,  4.34s/it]epoch 2 loss 1.39723:  75%|███████▌  | 21/28 [01:30<00:30,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6486[0m
[32m  eval_f1 = 0.3078[0m
[32m  eval_mcc = 0.629[0m
[32m  eval_precision = 0.4151[0m
[32m  eval_recall = 0.285[0m
[32m  ********************[0m
[32m  Best f1:0.3078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.629[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39723:  79%|███████▊  | 22/28 [01:40<00:37,  6.29s/it]epoch 2 loss 1.39094:  79%|███████▊  | 22/28 [01:41<00:37,  6.29s/it]epoch 2 loss 1.39094:  82%|████████▏ | 23/28 [01:41<00:22,  4.53s/it]epoch 2 loss 1.39324:  82%|████████▏ | 23/28 [01:41<00:22,  4.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6487[0m
[32m  eval_f1 = 0.3109[0m
[32m  eval_mcc = 0.6288[0m
[32m  eval_precision = 0.4418[0m
[32m  eval_recall = 0.2873[0m
[32m  ********************[0m
[32m  Best f1:0.3109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.39324:  86%|████████▌ | 24/28 [01:46<00:18,  4.71s/it]epoch 2 loss 1.39306:  86%|████████▌ | 24/28 [01:46<00:18,  4.71s/it]epoch 2 loss 1.39306:  89%|████████▉ | 25/28 [01:46<00:10,  3.42s/it]epoch 2 loss 1.38863:  89%|████████▉ | 25/28 [01:47<00:10,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.649[0m
[32m  eval_f1 = 0.3138[0m
[32m  eval_mcc = 0.6293[0m
[32m  eval_precision = 0.4446[0m
[32m  eval_recall = 0.2892[0m
[32m  ********************[0m
[32m  Best f1:0.3138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38863:  93%|█████████▎| 26/28 [01:57<00:11,  5.65s/it]epoch 2 loss 1.38342:  93%|█████████▎| 26/28 [01:58<00:11,  5.65s/it]epoch 2 loss 1.38342:  96%|█████████▋| 27/28 [01:58<00:04,  4.09s/it]epoch 2 loss 1.38164:  96%|█████████▋| 27/28 [01:58<00:04,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6484[0m
[32m  eval_f1 = 0.3148[0m
[32m  eval_mcc = 0.6289[0m
[32m  eval_precision = 0.4432[0m
[32m  eval_recall = 0.2895[0m
[32m  ********************[0m
[32m  Best f1:0.3148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.38164: 100%|██████████| 28/28 [02:02<00:00,  4.34s/it]epoch 2 loss 1.38164: 100%|██████████| 28/28 [02:02<00:00,  4.39s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.28248:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.28248:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s]epoch 3 loss 1.36351:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6491[0m
[32m  eval_f1 = 0.3176[0m
[32m  eval_mcc = 0.6297[0m
[32m  eval_precision = 0.4469[0m
[32m  eval_recall = 0.2922[0m
[32m  ********************[0m
[32m  Best f1:0.3176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36351:   7%|▋         | 2/28 [00:09<02:18,  5.31s/it]epoch 3 loss 1.31936:   7%|▋         | 2/28 [00:09<02:18,  5.31s/it]epoch 3 loss 1.31936:  11%|█         | 3/28 [00:09<01:17,  3.08s/it]epoch 3 loss 1.3349:  11%|█         | 3/28 [00:09<01:17,  3.08s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6496[0m
[32m  eval_f1 = 0.3245[0m
[32m  eval_mcc = 0.6303[0m
[32m  eval_precision = 0.454[0m
[32m  eval_recall = 0.2983[0m
[32m  ********************[0m
[32m  Best f1:0.3245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3349:  14%|█▍        | 4/28 [00:19<02:14,  5.62s/it]epoch 3 loss 1.30416:  14%|█▍        | 4/28 [00:19<02:14,  5.62s/it]epoch 3 loss 1.30416:  18%|█▊        | 5/28 [00:19<01:26,  3.74s/it]epoch 3 loss 1.32454:  18%|█▊        | 5/28 [00:19<01:26,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6503[0m
[32m  eval_f1 = 0.3275[0m
[32m  eval_mcc = 0.6312[0m
[32m  eval_precision = 0.4518[0m
[32m  eval_recall = 0.302[0m
[32m  ********************[0m
[32m  Best f1:0.3275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32454:  21%|██▏       | 6/28 [00:27<01:55,  5.26s/it]epoch 3 loss 1.33081:  21%|██▏       | 6/28 [00:28<01:55,  5.26s/it]epoch 3 loss 1.33081:  25%|██▌       | 7/28 [00:28<01:17,  3.69s/it]epoch 3 loss 1.34554:  25%|██▌       | 7/28 [00:28<01:17,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.651[0m
[32m  eval_f1 = 0.3287[0m
[32m  eval_mcc = 0.632[0m
[32m  eval_precision = 0.4416[0m
[32m  eval_recall = 0.3032[0m
[32m  ********************[0m
[32m  Best f1:0.3287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34554:  29%|██▊       | 8/28 [00:37<01:46,  5.34s/it]epoch 3 loss 1.32627:  29%|██▊       | 8/28 [00:37<01:46,  5.34s/it]epoch 3 loss 1.32627:  32%|███▏      | 9/28 [00:37<01:12,  3.80s/it]epoch 3 loss 1.32949:  32%|███▏      | 9/28 [00:37<01:12,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3291[0m
[32m  eval_mcc = 0.6337[0m
[32m  eval_precision = 0.4441[0m
[32m  eval_recall = 0.3032[0m
[32m  ********************[0m
[32m  Best f1:0.3291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32949:  36%|███▌      | 10/28 [00:44<01:28,  4.92s/it]epoch 3 loss 1.33687:  36%|███▌      | 10/28 [00:45<01:28,  4.92s/it]epoch 3 loss 1.33687:  39%|███▉      | 11/28 [00:45<01:00,  3.55s/it]epoch 3 loss 1.33108:  39%|███▉      | 11/28 [00:45<01:00,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.654[0m
[32m  eval_f1 = 0.3296[0m
[32m  eval_mcc = 0.6349[0m
[32m  eval_precision = 0.4435[0m
[32m  eval_recall = 0.3042[0m
[32m  ********************[0m
[32m  Best f1:0.3296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33108:  43%|████▎     | 12/28 [00:52<01:14,  4.65s/it]epoch 3 loss 1.32167:  43%|████▎     | 12/28 [00:52<01:14,  4.65s/it]epoch 3 loss 1.32167:  46%|████▋     | 13/28 [00:52<00:50,  3.37s/it]epoch 3 loss 1.31013:  46%|████▋     | 13/28 [00:53<00:50,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6555[0m
[32m  eval_f1 = 0.33[0m
[32m  eval_mcc = 0.6365[0m
[32m  eval_precision = 0.4444[0m
[32m  eval_recall = 0.3045[0m
[32m  ********************[0m
[32m  Best f1:0.33[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31013:  50%|█████     | 14/28 [01:01<01:09,  4.99s/it]epoch 3 loss 1.30474:  50%|█████     | 14/28 [01:02<01:09,  4.99s/it]epoch 3 loss 1.30474:  54%|█████▎    | 15/28 [01:02<00:46,  3.61s/it]epoch 3 loss 1.30399:  54%|█████▎    | 15/28 [01:02<00:46,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3302[0m
[32m  eval_mcc = 0.6361[0m
[32m  eval_precision = 0.4438[0m
[32m  eval_recall = 0.3048[0m
[32m  ********************[0m
[32m  Best f1:0.3302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.30399:  57%|█████▋    | 16/28 [01:07<00:48,  4.03s/it]epoch 3 loss 1.30164:  57%|█████▋    | 16/28 [01:07<00:48,  4.03s/it]epoch 3 loss 1.30164:  61%|██████    | 17/28 [01:07<00:32,  2.94s/it]epoch 3 loss 1.30296:  61%|██████    | 17/28 [01:07<00:32,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6575[0m
[32m  eval_f1 = 0.3324[0m
[32m  eval_mcc = 0.6382[0m
[32m  eval_precision = 0.4435[0m
[32m  eval_recall = 0.3071[0m
[32m  ********************[0m
[32m  Best f1:0.3324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30296:  64%|██████▍   | 18/28 [01:17<00:49,  4.93s/it]epoch 3 loss 1.30213:  64%|██████▍   | 18/28 [01:17<00:49,  4.93s/it]epoch 3 loss 1.30213:  68%|██████▊   | 19/28 [01:17<00:32,  3.58s/it]epoch 3 loss 1.29859:  68%|██████▊   | 19/28 [01:17<00:32,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3347[0m
[32m  eval_mcc = 0.6395[0m
[32m  eval_precision = 0.4489[0m
[32m  eval_recall = 0.3091[0m
[32m  ********************[0m
[32m  Best f1:0.3347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29859:  71%|███████▏  | 20/28 [01:23<00:35,  4.47s/it]epoch 3 loss 1.29603:  71%|███████▏  | 20/28 [01:24<00:35,  4.47s/it]epoch 3 loss 1.29603:  75%|███████▌  | 21/28 [01:24<00:22,  3.25s/it]epoch 3 loss 1.29481:  75%|███████▌  | 21/28 [01:24<00:22,  3.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6606[0m
[32m  eval_f1 = 0.3416[0m
[32m  eval_mcc = 0.6413[0m
[32m  eval_precision = 0.4505[0m
[32m  eval_recall = 0.3153[0m
[32m  ********************[0m
[32m  Best f1:0.3416[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29481:  79%|███████▊  | 22/28 [01:30<00:25,  4.25s/it]epoch 3 loss 1.29169:  79%|███████▊  | 22/28 [01:31<00:25,  4.25s/it]epoch 3 loss 1.29169:  82%|████████▏ | 23/28 [01:31<00:15,  3.10s/it]epoch 3 loss 1.29047:  82%|████████▏ | 23/28 [01:31<00:15,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6617[0m
[32m  eval_f1 = 0.3442[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.4514[0m
[32m  eval_recall = 0.3173[0m
[32m  ********************[0m
[32m  Best f1:0.3442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29047:  86%|████████▌ | 24/28 [01:37<00:16,  4.13s/it]epoch 3 loss 1.28634:  86%|████████▌ | 24/28 [01:38<00:16,  4.13s/it]epoch 3 loss 1.28634:  89%|████████▉ | 25/28 [01:38<00:09,  3.02s/it]epoch 3 loss 1.28168:  89%|████████▉ | 25/28 [01:38<00:09,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6618[0m
[32m  eval_f1 = 0.3453[0m
[32m  eval_mcc = 0.6427[0m
[32m  eval_precision = 0.4545[0m
[32m  eval_recall = 0.3175[0m
[32m  ********************[0m
[32m  Best f1:0.3453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28168:  93%|█████████▎| 26/28 [01:49<00:10,  5.38s/it]epoch 3 loss 1.28082:  93%|█████████▎| 26/28 [01:49<00:10,  5.38s/it]epoch 3 loss 1.28082:  96%|█████████▋| 27/28 [01:49<00:03,  3.90s/it]epoch 3 loss 1.29259:  96%|█████████▋| 27/28 [01:49<00:03,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6619[0m
[32m  eval_f1 = 0.3492[0m
[32m  eval_mcc = 0.6428[0m
[32m  eval_precision = 0.4626[0m
[32m  eval_recall = 0.3198[0m
[32m  ********************[0m
[32m  Best f1:0.3492[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29259: 100%|██████████| 28/28 [01:58<00:00,  5.25s/it]epoch 3 loss 1.29259: 100%|██████████| 28/28 [01:58<00:00,  4.22s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.20409:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.20409:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 4 loss 1.21336:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6631[0m
[32m  eval_f1 = 0.3519[0m
[32m  eval_mcc = 0.644[0m
[32m  eval_precision = 0.4712[0m
[32m  eval_recall = 0.3222[0m
[32m  ********************[0m
[32m  Best f1:0.3519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21336:   7%|▋         | 2/28 [00:09<02:20,  5.40s/it]epoch 4 loss 1.22345:   7%|▋         | 2/28 [00:09<02:20,  5.40s/it]epoch 4 loss 1.22345:  11%|█         | 3/28 [00:09<01:18,  3.13s/it]epoch 4 loss 1.2118:  11%|█         | 3/28 [00:10<01:18,  3.13s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6633[0m
[32m  eval_f1 = 0.3522[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4697[0m
[32m  eval_recall = 0.3225[0m
[32m  ********************[0m
[32m  Best f1:0.3522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2118:  14%|█▍        | 4/28 [00:18<02:05,  5.23s/it]epoch 4 loss 1.21831:  14%|█▍        | 4/28 [00:18<02:05,  5.23s/it]epoch 4 loss 1.21831:  18%|█▊        | 5/28 [00:18<01:20,  3.50s/it]epoch 4 loss 1.25642:  18%|█▊        | 5/28 [00:19<01:20,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6635[0m
[32m  eval_f1 = 0.3532[0m
[32m  eval_mcc = 0.6446[0m
[32m  eval_precision = 0.4759[0m
[32m  eval_recall = 0.3228[0m
[32m  ********************[0m
[32m  Best f1:0.3532[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6446[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25642:  21%|██▏       | 6/28 [00:27<01:55,  5.24s/it]epoch 4 loss 1.2453:  21%|██▏       | 6/28 [00:27<01:55,  5.24s/it] epoch 4 loss 1.2453:  25%|██▌       | 7/28 [00:27<01:17,  3.67s/it]epoch 4 loss 1.24371:  25%|██▌       | 7/28 [00:28<01:17,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6639[0m
[32m  eval_f1 = 0.3559[0m
[32m  eval_mcc = 0.6451[0m
[32m  eval_precision = 0.4848[0m
[32m  eval_recall = 0.3246[0m
[32m  ********************[0m
[32m  Best f1:0.3559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24371:  29%|██▊       | 8/28 [00:36<01:43,  5.20s/it]epoch 4 loss 1.25631:  29%|██▊       | 8/28 [00:36<01:43,  5.20s/it]epoch 4 loss 1.25631:  32%|███▏      | 9/28 [00:36<01:10,  3.71s/it]epoch 4 loss 1.25218:  32%|███▏      | 9/28 [00:36<01:10,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.3565[0m
[32m  eval_mcc = 0.6462[0m
[32m  eval_precision = 0.4866[0m
[32m  eval_recall = 0.3251[0m
[32m  ********************[0m
[32m  Best f1:0.3565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25218:  36%|███▌      | 10/28 [00:44<01:31,  5.10s/it]epoch 4 loss 1.25268:  36%|███▌      | 10/28 [00:45<01:31,  5.10s/it]epoch 4 loss 1.25268:  39%|███▉      | 11/28 [00:45<01:02,  3.67s/it]epoch 4 loss 1.25841:  39%|███▉      | 11/28 [00:45<01:02,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6645[0m
[32m  eval_f1 = 0.3578[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.4837[0m
[32m  eval_recall = 0.3262[0m
[32m  ********************[0m
[32m  Best f1:0.3578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.25841:  43%|████▎     | 12/28 [00:50<01:05,  4.08s/it]epoch 4 loss 1.25994:  43%|████▎     | 12/28 [00:50<01:05,  4.08s/it]epoch 4 loss 1.25994:  46%|████▋     | 13/28 [00:50<00:44,  2.96s/it]epoch 4 loss 1.2593:  46%|████▋     | 13/28 [00:51<00:44,  2.96s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6647[0m
[32m  eval_f1 = 0.3611[0m
[32m  eval_mcc = 0.646[0m
[32m  eval_precision = 0.4912[0m
[32m  eval_recall = 0.3284[0m
[32m  ********************[0m
[32m  Best f1:0.3611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.2593:  50%|█████     | 14/28 [00:55<00:49,  3.55s/it]epoch 4 loss 1.25888:  50%|█████     | 14/28 [00:55<00:49,  3.55s/it]epoch 4 loss 1.25888:  54%|█████▎    | 15/28 [00:55<00:33,  2.60s/it]epoch 4 loss 1.25971:  54%|█████▎    | 15/28 [00:56<00:33,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6651[0m
[32m  eval_f1 = 0.3622[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.4922[0m
[32m  eval_recall = 0.3296[0m
[32m  ********************[0m
[32m  Best f1:0.3622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25971:  57%|█████▋    | 16/28 [01:02<00:46,  3.87s/it]epoch 4 loss 1.2592:  57%|█████▋    | 16/28 [01:03<00:46,  3.87s/it] epoch 4 loss 1.2592:  61%|██████    | 17/28 [01:03<00:31,  2.83s/it]epoch 4 loss 1.25756:  61%|██████    | 17/28 [01:03<00:31,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6655[0m
[32m  eval_f1 = 0.3623[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.492[0m
[32m  eval_recall = 0.3297[0m
[32m  ********************[0m
[32m  Best f1:0.3623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25756:  64%|██████▍   | 18/28 [01:10<00:41,  4.18s/it]epoch 4 loss 1.25821:  64%|██████▍   | 18/28 [01:10<00:41,  4.18s/it]epoch 4 loss 1.25821:  68%|██████▊   | 19/28 [01:10<00:27,  3.05s/it]epoch 4 loss 1.25615:  68%|██████▊   | 19/28 [01:11<00:27,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6653[0m
[32m  eval_f1 = 0.362[0m
[32m  eval_mcc = 0.6466[0m
[32m  eval_precision = 0.4923[0m
[32m  eval_recall = 0.3295[0m

epoch 4 loss 1.25615:  71%|███████▏  | 20/28 [01:14<00:26,  3.27s/it]epoch 4 loss 1.25872:  71%|███████▏  | 20/28 [01:15<00:26,  3.27s/it]epoch 4 loss 1.25872:  75%|███████▌  | 21/28 [01:15<00:16,  2.41s/it]epoch 4 loss 1.26253:  75%|███████▌  | 21/28 [01:15<00:16,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6655[0m
[32m  eval_f1 = 0.3618[0m
[32m  eval_mcc = 0.6469[0m
[32m  eval_precision = 0.4913[0m
[32m  eval_recall = 0.3294[0m
[32m  ********************[0m
[32m  Best MCC:0.6469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26253:  79%|███████▊  | 22/28 [01:19<00:18,  3.16s/it]epoch 4 loss 1.25778:  79%|███████▊  | 22/28 [01:20<00:18,  3.16s/it]epoch 4 loss 1.25778:  82%|████████▏ | 23/28 [01:20<00:11,  2.33s/it]epoch 4 loss 1.25631:  82%|████████▏ | 23/28 [01:20<00:11,  2.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3619[0m
[32m  eval_mcc = 0.6471[0m
[32m  eval_precision = 0.4916[0m
[32m  eval_recall = 0.3295[0m
[32m  ********************[0m
[32m  Best MCC:0.6471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25631:  86%|████████▌ | 24/28 [01:25<00:12,  3.07s/it]epoch 4 loss 1.2546:  86%|████████▌ | 24/28 [01:25<00:12,  3.07s/it] epoch 4 loss 1.2546:  89%|████████▉ | 25/28 [01:25<00:06,  2.27s/it]epoch 4 loss 1.25077:  89%|████████▉ | 25/28 [01:25<00:06,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3618[0m
[32m  eval_mcc = 0.6471[0m
[32m  eval_precision = 0.4918[0m
[32m  eval_recall = 0.3295[0m

epoch 4 loss 1.25077:  93%|█████████▎| 26/28 [01:29<00:05,  2.73s/it]epoch 4 loss 1.24875:  93%|█████████▎| 26/28 [01:29<00:05,  2.73s/it]epoch 4 loss 1.24875:  96%|█████████▋| 27/28 [01:29<00:02,  2.03s/it]epoch 4 loss 1.24554:  96%|█████████▋| 27/28 [01:29<00:02,  2.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6658[0m
[32m  eval_f1 = 0.362[0m
[32m  eval_mcc = 0.6471[0m
[32m  eval_precision = 0.4919[0m
[32m  eval_recall = 0.3297[0m
[32m  ********************[0m
[32m  Best MCC:0.6471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24554: 100%|██████████| 28/28 [01:34<00:00,  2.91s/it]epoch 4 loss 1.24554: 100%|██████████| 28/28 [01:34<00:00,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6655[0m
[32m  eval_f1 = 0.3623[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.492[0m
[32m  eval_recall = 0.3297[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.2817[0m
[32m  eval_mcc = 0.6237[0m
[32m  eval_precision = 0.3712[0m
[32m  eval_recall = 0.2621[0m

