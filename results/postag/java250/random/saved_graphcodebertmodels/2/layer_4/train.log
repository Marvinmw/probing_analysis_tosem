[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.69595:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.69595:   4%|▎         | 1/28 [00:00<00:21,  1.28it/s]epoch 0 loss 5.69577:   4%|▎         | 1/28 [00:01<00:21,  1.28it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0041[0m
[32m  eval_f1 = 0.0006[0m
[32m  eval_mcc = -0.0029[0m
[32m  eval_precision = 0.0011[0m
[32m  eval_recall = 0.0015[0m
[32m  ********************[0m
[32m  Best f1:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.69577:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 0 loss 5.69065:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 0 loss 5.69065:  11%|█         | 3/28 [00:05<00:47,  1.88s/it]epoch 0 loss 5.67471:  11%|█         | 3/28 [00:06<00:47,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0082[0m
[32m  eval_f1 = 0.0008[0m
[32m  eval_mcc = -0.0034[0m
[32m  eval_precision = 0.0014[0m
[32m  eval_recall = 0.0016[0m
[32m  ********************[0m
[32m  Best f1:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.67471:  14%|█▍        | 4/28 [00:11<01:16,  3.18s/it]epoch 0 loss 5.65228:  14%|█▍        | 4/28 [00:11<01:16,  3.18s/it]epoch 0 loss 5.65228:  18%|█▊        | 5/28 [00:11<00:50,  2.18s/it]epoch 0 loss 5.62515:  18%|█▊        | 5/28 [00:11<00:50,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0277[0m
[32m  eval_f1 = 0.0031[0m
[32m  eval_mcc = 0.004[0m
[32m  eval_precision = 0.0062[0m
[32m  eval_recall = 0.0041[0m
[32m  ********************[0m
[32m  Best f1:0.0031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.62515:  21%|██▏       | 6/28 [00:18<01:27,  3.96s/it]epoch 0 loss 5.58922:  21%|██▏       | 6/28 [00:19<01:27,  3.96s/it]epoch 0 loss 5.58922:  25%|██▌       | 7/28 [00:19<00:58,  2.80s/it]epoch 0 loss 5.54638:  25%|██▌       | 7/28 [00:19<00:58,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0701[0m
[32m  eval_f1 = 0.0093[0m
[32m  eval_mcc = 0.0286[0m
[32m  eval_precision = 0.0103[0m
[32m  eval_recall = 0.0122[0m
[32m  ********************[0m
[32m  Best f1:0.0093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.54638:  29%|██▊       | 8/28 [00:27<01:31,  4.57s/it]epoch 0 loss 5.49929:  29%|██▊       | 8/28 [00:28<01:31,  4.57s/it]epoch 0 loss 5.49929:  32%|███▏      | 9/28 [00:28<01:02,  3.27s/it]epoch 0 loss 5.44642:  32%|███▏      | 9/28 [00:28<01:02,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0991[0m
[32m  eval_f1 = 0.0131[0m
[32m  eval_mcc = 0.049[0m
[32m  eval_precision = 0.0145[0m
[32m  eval_recall = 0.0186[0m
[32m  ********************[0m
[32m  Best f1:0.0131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.44642:  36%|███▌      | 10/28 [00:36<01:27,  4.87s/it]epoch 0 loss 5.38492:  36%|███▌      | 10/28 [00:37<01:27,  4.87s/it]epoch 0 loss 5.38492:  39%|███▉      | 11/28 [00:37<00:59,  3.51s/it]epoch 0 loss 5.3191:  39%|███▉      | 11/28 [00:37<00:59,  3.51s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1247[0m
[32m  eval_f1 = 0.0279[0m
[32m  eval_mcc = 0.0798[0m
[32m  eval_precision = 0.0325[0m
[32m  eval_recall = 0.0333[0m
[32m  ********************[0m
[32m  Best f1:0.0279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0798[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.3191:  43%|████▎     | 12/28 [00:45<01:19,  4.99s/it]epoch 0 loss 5.2504:  43%|████▎     | 12/28 [00:45<01:19,  4.99s/it]epoch 0 loss 5.2504:  46%|████▋     | 13/28 [00:45<00:54,  3.61s/it]epoch 0 loss 5.17793:  46%|████▋     | 13/28 [00:46<00:54,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1454[0m
[32m  eval_f1 = 0.0369[0m
[32m  eval_mcc = 0.1074[0m
[32m  eval_precision = 0.0499[0m
[32m  eval_recall = 0.0406[0m
[32m  ********************[0m
[32m  Best f1:0.0369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.17793:  50%|█████     | 14/28 [00:54<01:11,  5.11s/it]epoch 0 loss 5.0998:  50%|█████     | 14/28 [00:54<01:11,  5.11s/it] epoch 0 loss 5.0998:  54%|█████▎    | 15/28 [00:54<00:48,  3.70s/it]epoch 0 loss 5.0185:  54%|█████▎    | 15/28 [00:55<00:48,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1733[0m
[32m  eval_f1 = 0.0438[0m
[32m  eval_mcc = 0.1431[0m
[32m  eval_precision = 0.0706[0m
[32m  eval_recall = 0.0458[0m
[32m  ********************[0m
[32m  Best f1:0.0438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1431[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.0185:  57%|█████▋    | 16/28 [01:02<00:58,  4.90s/it]epoch 0 loss 4.944:  57%|█████▋    | 16/28 [01:02<00:58,  4.90s/it] epoch 0 loss 4.944:  61%|██████    | 17/28 [01:02<00:39,  3.56s/it]epoch 0 loss 4.86798:  61%|██████    | 17/28 [01:03<00:39,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2054[0m
[32m  eval_f1 = 0.0515[0m
[32m  eval_mcc = 0.1786[0m
[32m  eval_precision = 0.0905[0m
[32m  eval_recall = 0.0522[0m
[32m  ********************[0m
[32m  Best f1:0.0515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.86798:  64%|██████▍   | 18/28 [01:09<00:45,  4.60s/it]epoch 0 loss 4.78723:  64%|██████▍   | 18/28 [01:10<00:45,  4.60s/it]epoch 0 loss 4.78723:  68%|██████▊   | 19/28 [01:10<00:30,  3.35s/it]epoch 0 loss 4.71715:  68%|██████▊   | 19/28 [01:10<00:30,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.254[0m
[32m  eval_f1 = 0.0617[0m
[32m  eval_mcc = 0.2246[0m
[32m  eval_precision = 0.1164[0m
[32m  eval_recall = 0.062[0m
[32m  ********************[0m
[32m  Best f1:0.0617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.71715:  71%|███████▏  | 20/28 [01:18<00:38,  4.87s/it]epoch 0 loss 4.63891:  71%|███████▏  | 20/28 [01:19<00:38,  4.87s/it]epoch 0 loss 4.63891:  75%|███████▌  | 21/28 [01:19<00:24,  3.53s/it]epoch 0 loss 4.56365:  75%|███████▌  | 21/28 [01:19<00:24,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3289[0m
[32m  eval_f1 = 0.0849[0m
[32m  eval_mcc = 0.2927[0m
[32m  eval_precision = 0.1497[0m
[32m  eval_recall = 0.0794[0m
[32m  ********************[0m
[32m  Best f1:0.0849[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.56365:  79%|███████▊  | 22/28 [01:26<00:27,  4.60s/it]epoch 0 loss 4.49118:  79%|███████▊  | 22/28 [01:26<00:27,  4.60s/it]epoch 0 loss 4.49118:  82%|████████▏ | 23/28 [01:26<00:16,  3.35s/it]epoch 0 loss 4.41733:  82%|████████▏ | 23/28 [01:27<00:16,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4185[0m
[32m  eval_f1 = 0.1062[0m
[32m  eval_mcc = 0.3799[0m
[32m  eval_precision = 0.169[0m
[32m  eval_recall = 0.0978[0m
[32m  ********************[0m
[32m  Best f1:0.1062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3799[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.41733:  86%|████████▌ | 24/28 [01:35<00:19,  4.88s/it]epoch 0 loss 4.34966:  86%|████████▌ | 24/28 [01:35<00:19,  4.88s/it]epoch 0 loss 4.34966:  89%|████████▉ | 25/28 [01:35<00:10,  3.54s/it]epoch 0 loss 4.283:  89%|████████▉ | 25/28 [01:36<00:10,  3.54s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4596[0m
[32m  eval_f1 = 0.1134[0m
[32m  eval_mcc = 0.4246[0m
[32m  eval_precision = 0.1882[0m
[32m  eval_recall = 0.1046[0m
[32m  ********************[0m
[32m  Best f1:0.1134[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.283:  93%|█████████▎| 26/28 [01:43<00:09,  4.99s/it]epoch 0 loss 4.21913:  93%|█████████▎| 26/28 [01:44<00:09,  4.99s/it]epoch 0 loss 4.21913:  96%|█████████▋| 27/28 [01:44<00:03,  3.62s/it]epoch 0 loss 4.15938:  96%|█████████▋| 27/28 [01:44<00:03,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4771[0m
[32m  eval_f1 = 0.1287[0m
[32m  eval_mcc = 0.4466[0m
[32m  eval_precision = 0.1847[0m
[32m  eval_recall = 0.1182[0m
[32m  ********************[0m
[32m  Best f1:0.1287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.15938: 100%|██████████| 28/28 [01:51<00:00,  4.56s/it]epoch 0 loss 4.15938: 100%|██████████| 28/28 [01:51<00:00,  3.97s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.32309:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.32309:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 1 loss 2.24533:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5031[0m
[32m  eval_f1 = 0.1417[0m
[32m  eval_mcc = 0.4771[0m
[32m  eval_precision = 0.1808[0m
[32m  eval_recall = 0.1328[0m
[32m  ********************[0m
[32m  Best f1:0.1417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4771[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.24533:   7%|▋         | 2/28 [00:07<01:50,  4.24s/it]epoch 1 loss 2.21993:   7%|▋         | 2/28 [00:07<01:50,  4.24s/it]epoch 1 loss 2.21993:  11%|█         | 3/28 [00:07<01:02,  2.50s/it]epoch 1 loss 2.19398:  11%|█         | 3/28 [00:08<01:02,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5342[0m
[32m  eval_f1 = 0.1576[0m
[32m  eval_mcc = 0.5089[0m
[32m  eval_precision = 0.199[0m
[32m  eval_recall = 0.1502[0m
[32m  ********************[0m
[32m  Best f1:0.1576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.19398:  14%|█▍        | 4/28 [00:14<01:37,  4.08s/it]epoch 1 loss 2.17026:  14%|█▍        | 4/28 [00:14<01:37,  4.08s/it]epoch 1 loss 2.17026:  18%|█▊        | 5/28 [00:14<01:03,  2.76s/it]epoch 1 loss 2.15854:  18%|█▊        | 5/28 [00:15<01:03,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5655[0m
[32m  eval_f1 = 0.1688[0m
[32m  eval_mcc = 0.5401[0m
[32m  eval_precision = 0.2033[0m
[32m  eval_recall = 0.1652[0m
[32m  ********************[0m
[32m  Best f1:0.1688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15854:  21%|██▏       | 6/28 [00:21<01:28,  4.03s/it]epoch 1 loss 2.14069:  21%|██▏       | 6/28 [00:21<01:28,  4.03s/it]epoch 1 loss 2.14069:  25%|██▌       | 7/28 [00:21<00:59,  2.85s/it]epoch 1 loss 2.11215:  25%|██▌       | 7/28 [00:22<00:59,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5811[0m
[32m  eval_f1 = 0.1827[0m
[32m  eval_mcc = 0.5564[0m
[32m  eval_precision = 0.2228[0m
[32m  eval_recall = 0.1789[0m
[32m  ********************[0m
[32m  Best f1:0.1827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5564[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11215:  29%|██▊       | 8/28 [00:28<01:20,  4.01s/it]epoch 1 loss 2.07787:  29%|██▊       | 8/28 [00:28<01:20,  4.01s/it]epoch 1 loss 2.07787:  32%|███▏      | 9/28 [00:28<00:54,  2.89s/it]epoch 1 loss 2.0426:  32%|███▏      | 9/28 [00:28<00:54,  2.89s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5883[0m
[32m  eval_f1 = 0.1854[0m
[32m  eval_mcc = 0.5648[0m
[32m  eval_precision = 0.2295[0m
[32m  eval_recall = 0.1807[0m
[32m  ********************[0m
[32m  Best f1:0.1854[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0426:  36%|███▌      | 10/28 [00:34<01:11,  3.95s/it]epoch 1 loss 2.01883:  36%|███▌      | 10/28 [00:35<01:11,  3.95s/it]epoch 1 loss 2.01883:  39%|███▉      | 11/28 [00:35<00:48,  2.87s/it]epoch 1 loss 2.0088:  39%|███▉      | 11/28 [00:35<00:48,  2.87s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.592[0m
[32m  eval_f1 = 0.1889[0m
[32m  eval_mcc = 0.5695[0m
[32m  eval_precision = 0.2555[0m
[32m  eval_recall = 0.1824[0m
[32m  ********************[0m
[32m  Best f1:0.1889[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5695[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0088:  43%|████▎     | 12/28 [00:41<01:00,  3.78s/it]epoch 1 loss 1.99265:  43%|████▎     | 12/28 [00:41<01:00,  3.78s/it]epoch 1 loss 1.99265:  46%|████▋     | 13/28 [00:41<00:41,  2.76s/it]epoch 1 loss 1.9642:  46%|████▋     | 13/28 [00:41<00:41,  2.76s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5982[0m
[32m  eval_f1 = 0.1979[0m
[32m  eval_mcc = 0.5766[0m
[32m  eval_precision = 0.2809[0m
[32m  eval_recall = 0.1877[0m
[32m  ********************[0m
[32m  Best f1:0.1979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5766[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9642:  50%|█████     | 14/28 [00:48<00:54,  3.92s/it]epoch 1 loss 1.945:  50%|█████     | 14/28 [00:48<00:54,  3.92s/it] epoch 1 loss 1.945:  54%|█████▎    | 15/28 [00:48<00:37,  2.87s/it]epoch 1 loss 1.93146:  54%|█████▎    | 15/28 [00:48<00:37,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6029[0m
[32m  eval_f1 = 0.21[0m
[32m  eval_mcc = 0.581[0m
[32m  eval_precision = 0.3155[0m
[32m  eval_recall = 0.196[0m
[32m  ********************[0m
[32m  Best f1:0.21[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93146:  57%|█████▋    | 16/28 [00:55<00:47,  3.97s/it]epoch 1 loss 1.91494:  57%|█████▋    | 16/28 [00:55<00:47,  3.97s/it]epoch 1 loss 1.91494:  61%|██████    | 17/28 [00:55<00:31,  2.91s/it]epoch 1 loss 1.89402:  61%|██████    | 17/28 [00:55<00:31,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6068[0m
[32m  eval_f1 = 0.2339[0m
[32m  eval_mcc = 0.584[0m
[32m  eval_precision = 0.3182[0m
[32m  eval_recall = 0.2169[0m
[32m  ********************[0m
[32m  Best f1:0.2339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89402:  64%|██████▍   | 18/28 [01:04<00:48,  4.83s/it]epoch 1 loss 1.87956:  64%|██████▍   | 18/28 [01:05<00:48,  4.83s/it]epoch 1 loss 1.87956:  68%|██████▊   | 19/28 [01:05<00:31,  3.50s/it]epoch 1 loss 1.87219:  68%|██████▊   | 19/28 [01:05<00:31,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6106[0m
[32m  eval_f1 = 0.244[0m
[32m  eval_mcc = 0.5878[0m
[32m  eval_precision = 0.3173[0m
[32m  eval_recall = 0.2288[0m
[32m  ********************[0m
[32m  Best f1:0.244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87219:  71%|███████▏  | 20/28 [01:16<00:46,  5.80s/it]epoch 1 loss 1.85485:  71%|███████▏  | 20/28 [01:16<00:46,  5.80s/it]epoch 1 loss 1.85485:  75%|███████▌  | 21/28 [01:16<00:29,  4.18s/it]epoch 1 loss 1.84076:  75%|███████▌  | 21/28 [01:17<00:29,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6143[0m
[32m  eval_f1 = 0.2563[0m
[32m  eval_mcc = 0.5918[0m
[32m  eval_precision = 0.325[0m
[32m  eval_recall = 0.2419[0m
[32m  ********************[0m
[32m  Best f1:0.2563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5918[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84076:  79%|███████▊  | 22/28 [01:25<00:33,  5.61s/it]epoch 1 loss 1.82378:  79%|███████▊  | 22/28 [01:26<00:33,  5.61s/it]epoch 1 loss 1.82378:  82%|████████▏ | 23/28 [01:26<00:20,  4.05s/it]epoch 1 loss 1.81345:  82%|████████▏ | 23/28 [01:26<00:20,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.617[0m
[32m  eval_f1 = 0.26[0m
[32m  eval_mcc = 0.5951[0m
[32m  eval_precision = 0.3233[0m
[32m  eval_recall = 0.2457[0m
[32m  ********************[0m
[32m  Best f1:0.26[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5951[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81345:  86%|████████▌ | 24/28 [01:36<00:23,  5.80s/it]epoch 1 loss 1.80096:  86%|████████▌ | 24/28 [01:36<00:23,  5.80s/it]epoch 1 loss 1.80096:  89%|████████▉ | 25/28 [01:36<00:12,  4.19s/it]epoch 1 loss 1.79272:  89%|████████▉ | 25/28 [01:36<00:12,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6223[0m
[32m  eval_f1 = 0.2653[0m
[32m  eval_mcc = 0.6018[0m
[32m  eval_precision = 0.3392[0m
[32m  eval_recall = 0.2494[0m
[32m  ********************[0m
[32m  Best f1:0.2653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.79272:  93%|█████████▎| 26/28 [01:44<00:10,  5.47s/it]epoch 1 loss 1.77854:  93%|█████████▎| 26/28 [01:45<00:10,  5.47s/it]epoch 1 loss 1.77854:  96%|█████████▋| 27/28 [01:45<00:03,  3.96s/it]epoch 1 loss 1.76281:  96%|█████████▋| 27/28 [01:45<00:03,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6256[0m
[32m  eval_f1 = 0.267[0m
[32m  eval_mcc = 0.6056[0m
[32m  eval_precision = 0.3435[0m
[32m  eval_recall = 0.2502[0m
[32m  ********************[0m
[32m  Best f1:0.267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76281: 100%|██████████| 28/28 [01:53<00:00,  5.24s/it]epoch 1 loss 1.76281: 100%|██████████| 28/28 [01:53<00:00,  4.06s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.3267:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.3267:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 2 loss 1.32517:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6295[0m
[32m  eval_f1 = 0.2738[0m
[32m  eval_mcc = 0.6099[0m
[32m  eval_precision = 0.3626[0m
[32m  eval_recall = 0.2544[0m
[32m  ********************[0m
[32m  Best f1:0.2738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32517:   7%|▋         | 2/28 [00:08<02:14,  5.16s/it]epoch 2 loss 1.34365:   7%|▋         | 2/28 [00:09<02:14,  5.16s/it]epoch 2 loss 1.34365:  11%|█         | 3/28 [00:09<01:15,  3.00s/it]epoch 2 loss 1.34624:  11%|█         | 3/28 [00:09<01:15,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6323[0m
[32m  eval_f1 = 0.2773[0m
[32m  eval_mcc = 0.6124[0m
[32m  eval_precision = 0.3644[0m
[32m  eval_recall = 0.2571[0m
[32m  ********************[0m
[32m  Best f1:0.2773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6124[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34624:  14%|█▍        | 4/28 [00:19<02:23,  6.00s/it]epoch 2 loss 1.36117:  14%|█▍        | 4/28 [00:20<02:23,  6.00s/it]epoch 2 loss 1.36117:  18%|█▊        | 5/28 [00:20<01:31,  3.99s/it]epoch 2 loss 1.35565:  18%|█▊        | 5/28 [00:20<01:31,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6355[0m
[32m  eval_f1 = 0.2822[0m
[32m  eval_mcc = 0.6154[0m
[32m  eval_precision = 0.371[0m
[32m  eval_recall = 0.2616[0m
[32m  ********************[0m
[32m  Best f1:0.2822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35565:  21%|██▏       | 6/28 [00:27<01:49,  4.98s/it]epoch 2 loss 1.36886:  21%|██▏       | 6/28 [00:27<01:49,  4.98s/it]epoch 2 loss 1.36886:  25%|██▌       | 7/28 [00:27<01:13,  3.50s/it]epoch 2 loss 1.35771:  25%|██▌       | 7/28 [00:28<01:13,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6383[0m
[32m  eval_f1 = 0.2907[0m
[32m  eval_mcc = 0.6181[0m
[32m  eval_precision = 0.3846[0m
[32m  eval_recall = 0.2695[0m
[32m  ********************[0m
[32m  Best f1:0.2907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35771:  29%|██▊       | 8/28 [00:34<01:29,  4.47s/it]epoch 2 loss 1.35993:  29%|██▊       | 8/28 [00:34<01:29,  4.47s/it]epoch 2 loss 1.35993:  32%|███▏      | 9/28 [00:34<01:00,  3.21s/it]epoch 2 loss 1.37703:  32%|███▏      | 9/28 [00:35<01:00,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6392[0m
[32m  eval_f1 = 0.2927[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.3819[0m
[32m  eval_recall = 0.2719[0m
[32m  ********************[0m
[32m  Best f1:0.2927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37703:  36%|███▌      | 10/28 [00:41<01:19,  4.40s/it]epoch 2 loss 1.37029:  36%|███▌      | 10/28 [00:42<01:19,  4.40s/it]epoch 2 loss 1.37029:  39%|███▉      | 11/28 [00:42<00:54,  3.18s/it]epoch 2 loss 1.37167:  39%|███▉      | 11/28 [00:42<00:54,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6419[0m
[32m  eval_f1 = 0.3015[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.3923[0m
[32m  eval_recall = 0.2787[0m
[32m  ********************[0m
[32m  Best f1:0.3015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37167:  43%|████▎     | 12/28 [00:48<01:06,  4.14s/it]epoch 2 loss 1.36868:  43%|████▎     | 12/28 [00:48<01:06,  4.14s/it]epoch 2 loss 1.36868:  46%|████▋     | 13/28 [00:48<00:45,  3.02s/it]epoch 2 loss 1.37612:  46%|████▋     | 13/28 [00:49<00:45,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.644[0m
[32m  eval_f1 = 0.3079[0m
[32m  eval_mcc = 0.6234[0m
[32m  eval_precision = 0.393[0m
[32m  eval_recall = 0.2853[0m
[32m  ********************[0m
[32m  Best f1:0.3079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37612:  50%|█████     | 14/28 [00:57<01:06,  4.77s/it]epoch 2 loss 1.36861:  50%|█████     | 14/28 [00:58<01:06,  4.77s/it]epoch 2 loss 1.36861:  54%|█████▎    | 15/28 [00:58<00:44,  3.46s/it]epoch 2 loss 1.37294:  54%|█████▎    | 15/28 [00:58<00:44,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6463[0m
[32m  eval_f1 = 0.3102[0m
[32m  eval_mcc = 0.6261[0m
[32m  eval_precision = 0.3978[0m
[32m  eval_recall = 0.2876[0m
[32m  ********************[0m
[32m  Best f1:0.3102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37294:  57%|█████▋    | 16/28 [01:04<00:52,  4.36s/it]epoch 2 loss 1.37239:  57%|█████▋    | 16/28 [01:05<00:52,  4.36s/it]epoch 2 loss 1.37239:  61%|██████    | 17/28 [01:05<00:34,  3.18s/it]epoch 2 loss 1.37187:  61%|██████    | 17/28 [01:05<00:34,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6478[0m
[32m  eval_f1 = 0.3095[0m
[32m  eval_mcc = 0.628[0m
[32m  eval_precision = 0.3955[0m
[32m  eval_recall = 0.2872[0m
[32m  ********************[0m
[32m  Best MCC:0.628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37187:  64%|██████▍   | 18/28 [01:10<00:37,  3.76s/it]epoch 2 loss 1.37631:  64%|██████▍   | 18/28 [01:10<00:37,  3.76s/it]epoch 2 loss 1.37631:  68%|██████▊   | 19/28 [01:10<00:24,  2.75s/it]epoch 2 loss 1.37769:  68%|██████▊   | 19/28 [01:11<00:24,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6494[0m
[32m  eval_f1 = 0.3103[0m
[32m  eval_mcc = 0.6297[0m
[32m  eval_precision = 0.408[0m
[32m  eval_recall = 0.2883[0m
[32m  ********************[0m
[32m  Best f1:0.3103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37769:  71%|███████▏  | 20/28 [01:16<00:30,  3.78s/it]epoch 2 loss 1.3758:  71%|███████▏  | 20/28 [01:17<00:30,  3.78s/it] epoch 2 loss 1.3758:  75%|███████▌  | 21/28 [01:17<00:19,  2.77s/it]epoch 2 loss 1.3696:  75%|███████▌  | 21/28 [01:17<00:19,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.3125[0m
[32m  eval_mcc = 0.6312[0m
[32m  eval_precision = 0.4173[0m
[32m  eval_recall = 0.2904[0m
[32m  ********************[0m
[32m  Best f1:0.3125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3696:  79%|███████▊  | 22/28 [01:26<00:28,  4.74s/it]epoch 2 loss 1.36325:  79%|███████▊  | 22/28 [01:26<00:28,  4.74s/it]epoch 2 loss 1.36325:  82%|████████▏ | 23/28 [01:26<00:17,  3.45s/it]epoch 2 loss 1.36591:  82%|████████▏ | 23/28 [01:27<00:17,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6521[0m
[32m  eval_f1 = 0.321[0m
[32m  eval_mcc = 0.6324[0m
[32m  eval_precision = 0.4391[0m
[32m  eval_recall = 0.2962[0m
[32m  ********************[0m
[32m  Best f1:0.321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36591:  86%|████████▌ | 24/28 [01:35<00:19,  4.94s/it]epoch 2 loss 1.36615:  86%|████████▌ | 24/28 [01:35<00:19,  4.94s/it]epoch 2 loss 1.36615:  89%|████████▉ | 25/28 [01:35<00:10,  3.59s/it]epoch 2 loss 1.36162:  89%|████████▉ | 25/28 [01:36<00:10,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3225[0m
[32m  eval_mcc = 0.6331[0m
[32m  eval_precision = 0.4406[0m
[32m  eval_recall = 0.298[0m
[32m  ********************[0m
[32m  Best f1:0.3225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36162:  93%|█████████▎| 26/28 [01:44<00:10,  5.08s/it]epoch 2 loss 1.35645:  93%|█████████▎| 26/28 [01:44<00:10,  5.08s/it]epoch 2 loss 1.35645:  96%|█████████▋| 27/28 [01:44<00:03,  3.68s/it]epoch 2 loss 1.35485:  96%|█████████▋| 27/28 [01:45<00:03,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.652[0m
[32m  eval_f1 = 0.3234[0m
[32m  eval_mcc = 0.6326[0m
[32m  eval_precision = 0.4523[0m
[32m  eval_recall = 0.2982[0m
[32m  ********************[0m
[32m  Best f1:0.3234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.35485: 100%|██████████| 28/28 [01:49<00:00,  4.09s/it]epoch 2 loss 1.35485: 100%|██████████| 28/28 [01:49<00:00,  3.92s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.25938:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.25938:   4%|▎         | 1/28 [00:00<00:10,  2.50it/s]epoch 3 loss 1.33779:   4%|▎         | 1/28 [00:00<00:10,  2.50it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6527[0m
[32m  eval_f1 = 0.3252[0m
[32m  eval_mcc = 0.6334[0m
[32m  eval_precision = 0.4403[0m
[32m  eval_recall = 0.3007[0m
[32m  ********************[0m
[32m  Best f1:0.3252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33779:   7%|▋         | 2/28 [00:10<02:34,  5.95s/it]epoch 3 loss 1.29484:   7%|▋         | 2/28 [00:10<02:34,  5.95s/it]epoch 3 loss 1.29484:  11%|█         | 3/28 [00:10<01:25,  3.43s/it]epoch 3 loss 1.30905:  11%|█         | 3/28 [00:11<01:25,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6527[0m
[32m  eval_f1 = 0.3276[0m
[32m  eval_mcc = 0.6334[0m
[32m  eval_precision = 0.4553[0m
[32m  eval_recall = 0.3028[0m
[32m  ********************[0m
[32m  Best f1:0.3276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30905:  14%|█▍        | 4/28 [00:19<02:15,  5.63s/it]epoch 3 loss 1.27774:  14%|█▍        | 4/28 [00:20<02:15,  5.63s/it]epoch 3 loss 1.27774:  18%|█▊        | 5/28 [00:20<01:26,  3.76s/it]epoch 3 loss 1.29849:  18%|█▊        | 5/28 [00:20<01:26,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6538[0m
[32m  eval_f1 = 0.3313[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4534[0m
[32m  eval_recall = 0.3066[0m
[32m  ********************[0m
[32m  Best f1:0.3313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29849:  21%|██▏       | 6/28 [00:28<02:00,  5.47s/it]epoch 3 loss 1.30418:  21%|██▏       | 6/28 [00:29<02:00,  5.47s/it]epoch 3 loss 1.30418:  25%|██▌       | 7/28 [00:29<01:20,  3.82s/it]epoch 3 loss 1.31964:  25%|██▌       | 7/28 [00:29<01:20,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6542[0m
[32m  eval_f1 = 0.3337[0m
[32m  eval_mcc = 0.6351[0m
[32m  eval_precision = 0.452[0m
[32m  eval_recall = 0.3091[0m
[32m  ********************[0m
[32m  Best f1:0.3337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31964:  29%|██▊       | 8/28 [00:38<01:48,  5.44s/it]epoch 3 loss 1.30054:  29%|██▊       | 8/28 [00:38<01:48,  5.44s/it]epoch 3 loss 1.30054:  32%|███▏      | 9/28 [00:38<01:13,  3.87s/it]epoch 3 loss 1.30381:  32%|███▏      | 9/28 [00:39<01:13,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.656[0m
[32m  eval_f1 = 0.336[0m
[32m  eval_mcc = 0.6368[0m
[32m  eval_precision = 0.4478[0m
[32m  eval_recall = 0.3112[0m
[32m  ********************[0m
[32m  Best f1:0.336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30381:  36%|███▌      | 10/28 [00:46<01:31,  5.06s/it]epoch 3 loss 1.31129:  36%|███▌      | 10/28 [00:46<01:31,  5.06s/it]epoch 3 loss 1.31129:  39%|███▉      | 11/28 [00:46<01:01,  3.64s/it]epoch 3 loss 1.30549:  39%|███▉      | 11/28 [00:47<01:01,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6574[0m
[32m  eval_f1 = 0.339[0m
[32m  eval_mcc = 0.6382[0m
[32m  eval_precision = 0.4573[0m
[32m  eval_recall = 0.3128[0m
[32m  ********************[0m
[32m  Best f1:0.339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30549:  43%|████▎     | 12/28 [00:57<01:34,  5.94s/it]epoch 3 loss 1.2963:  43%|████▎     | 12/28 [00:58<01:34,  5.94s/it] epoch 3 loss 1.2963:  46%|████▋     | 13/28 [00:58<01:03,  4.27s/it]epoch 3 loss 1.28515:  46%|████▋     | 13/28 [00:58<01:03,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6579[0m
[32m  eval_f1 = 0.3414[0m
[32m  eval_mcc = 0.6388[0m
[32m  eval_precision = 0.4526[0m
[32m  eval_recall = 0.3144[0m
[32m  ********************[0m
[32m  Best f1:0.3414[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28515:  50%|█████     | 14/28 [01:05<01:12,  5.19s/it]epoch 3 loss 1.28001:  50%|█████     | 14/28 [01:06<01:12,  5.19s/it]epoch 3 loss 1.28001:  54%|█████▎    | 15/28 [01:06<00:48,  3.76s/it]epoch 3 loss 1.2791:  54%|█████▎    | 15/28 [01:06<00:48,  3.76s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3425[0m
[32m  eval_mcc = 0.6398[0m
[32m  eval_precision = 0.4528[0m
[32m  eval_recall = 0.3152[0m
[32m  ********************[0m
[32m  Best f1:0.3425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2791:  57%|█████▋    | 16/28 [01:14<01:03,  5.26s/it]epoch 3 loss 1.27702:  57%|█████▋    | 16/28 [01:15<01:03,  5.26s/it]epoch 3 loss 1.27702:  61%|██████    | 17/28 [01:15<00:41,  3.81s/it]epoch 3 loss 1.2785:  61%|██████    | 17/28 [01:15<00:41,  3.81s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6606[0m
[32m  eval_f1 = 0.3432[0m
[32m  eval_mcc = 0.6414[0m
[32m  eval_precision = 0.4552[0m
[32m  eval_recall = 0.3157[0m
[32m  ********************[0m
[32m  Best f1:0.3432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6414[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2785:  64%|██████▍   | 18/28 [01:23<00:51,  5.15s/it]epoch 3 loss 1.27767:  64%|██████▍   | 18/28 [01:24<00:51,  5.15s/it]epoch 3 loss 1.27767:  68%|██████▊   | 19/28 [01:24<00:33,  3.73s/it]epoch 3 loss 1.27444:  68%|██████▊   | 19/28 [01:24<00:33,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6624[0m
[32m  eval_f1 = 0.3506[0m
[32m  eval_mcc = 0.643[0m
[32m  eval_precision = 0.4642[0m
[32m  eval_recall = 0.322[0m
[32m  ********************[0m
[32m  Best f1:0.3506[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27444:  71%|███████▏  | 20/28 [01:31<00:37,  4.72s/it]epoch 3 loss 1.27201:  71%|███████▏  | 20/28 [01:31<00:37,  4.72s/it]epoch 3 loss 1.27201:  75%|███████▌  | 21/28 [01:31<00:24,  3.43s/it]epoch 3 loss 1.2708:  75%|███████▌  | 21/28 [01:31<00:24,  3.43s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6632[0m
[32m  eval_f1 = 0.3515[0m
[32m  eval_mcc = 0.644[0m
[32m  eval_precision = 0.4663[0m
[32m  eval_recall = 0.323[0m
[32m  ********************[0m
[32m  Best f1:0.3515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2708:  79%|███████▊  | 22/28 [01:40<00:29,  5.00s/it]epoch 3 loss 1.26761:  79%|███████▊  | 22/28 [01:40<00:29,  5.00s/it]epoch 3 loss 1.26761:  82%|████████▏ | 23/28 [01:40<00:18,  3.63s/it]epoch 3 loss 1.26619:  82%|████████▏ | 23/28 [01:40<00:18,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6636[0m
[32m  eval_f1 = 0.3531[0m
[32m  eval_mcc = 0.6444[0m
[32m  eval_precision = 0.4648[0m
[32m  eval_recall = 0.3242[0m
[32m  ********************[0m
[32m  Best f1:0.3531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26619:  86%|████████▌ | 24/28 [01:47<00:18,  4.70s/it]epoch 3 loss 1.26214:  86%|████████▌ | 24/28 [01:48<00:18,  4.70s/it]epoch 3 loss 1.26214:  89%|████████▉ | 25/28 [01:48<00:10,  3.42s/it]epoch 3 loss 1.25747:  89%|████████▉ | 25/28 [01:48<00:10,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6647[0m
[32m  eval_f1 = 0.3518[0m
[32m  eval_mcc = 0.6456[0m
[32m  eval_precision = 0.4627[0m
[32m  eval_recall = 0.3238[0m
[32m  ********************[0m
[32m  Best MCC:0.6456[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25747:  93%|█████████▎| 26/28 [01:53<00:07,  3.93s/it]epoch 3 loss 1.25661:  93%|█████████▎| 26/28 [01:53<00:07,  3.93s/it]epoch 3 loss 1.25661:  96%|█████████▋| 27/28 [01:53<00:02,  2.87s/it]epoch 3 loss 1.26829:  96%|█████████▋| 27/28 [01:53<00:02,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.3525[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.4652[0m
[32m  eval_recall = 0.3235[0m
[32m  ********************[0m
[32m  Best MCC:0.6459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26829: 100%|██████████| 28/28 [02:01<00:00,  4.26s/it]epoch 3 loss 1.26829: 100%|██████████| 28/28 [02:01<00:00,  4.33s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.18112:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.18112:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 4 loss 1.18568:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.665[0m
[32m  eval_f1 = 0.3527[0m
[32m  eval_mcc = 0.646[0m
[32m  eval_precision = 0.4648[0m
[32m  eval_recall = 0.3234[0m
[32m  ********************[0m
[32m  Best MCC:0.646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18568:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 4 loss 1.19673:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 4 loss 1.19673:  11%|█         | 3/28 [00:05<00:47,  1.88s/it]epoch 4 loss 1.18575:  11%|█         | 3/28 [00:06<00:47,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.665[0m
[32m  eval_f1 = 0.3527[0m
[32m  eval_mcc = 0.646[0m
[32m  eval_precision = 0.4646[0m
[32m  eval_recall = 0.3232[0m
[32m  ********************[0m
[32m  Best MCC:0.646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18575:  14%|█▍        | 4/28 [00:10<01:13,  3.07s/it]epoch 4 loss 1.19201:  14%|█▍        | 4/28 [00:11<01:13,  3.07s/it]epoch 4 loss 1.19201:  18%|█▊        | 5/28 [00:11<00:48,  2.11s/it]epoch 4 loss 1.23055:  18%|█▊        | 5/28 [00:11<00:48,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6655[0m
[32m  eval_f1 = 0.355[0m
[32m  eval_mcc = 0.6466[0m
[32m  eval_precision = 0.4651[0m
[32m  eval_recall = 0.3251[0m
[32m  ********************[0m
[32m  Best f1:0.355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23055:  21%|██▏       | 6/28 [00:17<01:19,  3.63s/it]epoch 4 loss 1.2193:  21%|██▏       | 6/28 [00:18<01:19,  3.63s/it] epoch 4 loss 1.2193:  25%|██▌       | 7/28 [00:18<00:54,  2.59s/it]epoch 4 loss 1.21876:  25%|██▌       | 7/28 [00:18<00:54,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3575[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.4667[0m
[32m  eval_recall = 0.327[0m
[32m  ********************[0m
[32m  Best f1:0.3575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21876:  29%|██▊       | 8/28 [00:24<01:16,  3.81s/it]epoch 4 loss 1.23164:  29%|██▊       | 8/28 [00:25<01:16,  3.81s/it]epoch 4 loss 1.23164:  32%|███▏      | 9/28 [00:25<00:52,  2.76s/it]epoch 4 loss 1.22755:  32%|███▏      | 9/28 [00:25<00:52,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6665[0m
[32m  eval_f1 = 0.3632[0m
[32m  eval_mcc = 0.6477[0m
[32m  eval_precision = 0.4751[0m
[32m  eval_recall = 0.3309[0m
[32m  ********************[0m
[32m  Best f1:0.3632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6477[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22755:  36%|███▌      | 10/28 [00:31<01:10,  3.93s/it]epoch 4 loss 1.22824:  36%|███▌      | 10/28 [00:32<01:10,  3.93s/it]epoch 4 loss 1.22824:  39%|███▉      | 11/28 [00:32<00:48,  2.86s/it]epoch 4 loss 1.23415:  39%|███▉      | 11/28 [00:32<00:48,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6664[0m
[32m  eval_f1 = 0.3638[0m
[32m  eval_mcc = 0.6476[0m
[32m  eval_precision = 0.4744[0m
[32m  eval_recall = 0.3317[0m
[32m  ********************[0m
[32m  Best f1:0.3638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.23415:  43%|████▎     | 12/28 [00:37<00:56,  3.51s/it]epoch 4 loss 1.23576:  43%|████▎     | 12/28 [00:37<00:56,  3.51s/it]epoch 4 loss 1.23576:  46%|████▋     | 13/28 [00:37<00:38,  2.57s/it]epoch 4 loss 1.23541:  46%|████▋     | 13/28 [00:37<00:38,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6664[0m
[32m  eval_f1 = 0.3675[0m
[32m  eval_mcc = 0.6476[0m
[32m  eval_precision = 0.4835[0m
[32m  eval_recall = 0.334[0m
[32m  ********************[0m
[32m  Best f1:0.3675[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.23541:  50%|█████     | 14/28 [00:42<00:46,  3.31s/it]epoch 4 loss 1.23493:  50%|█████     | 14/28 [00:42<00:46,  3.31s/it]epoch 4 loss 1.23493:  54%|█████▎    | 15/28 [00:42<00:31,  2.44s/it]epoch 4 loss 1.23584:  54%|█████▎    | 15/28 [00:43<00:31,  2.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6666[0m
[32m  eval_f1 = 0.3675[0m
[32m  eval_mcc = 0.6478[0m
[32m  eval_precision = 0.4819[0m
[32m  eval_recall = 0.3341[0m
[32m  ********************[0m
[32m  Best f1:0.3675[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23584:  57%|█████▋    | 16/28 [00:49<00:44,  3.68s/it]epoch 4 loss 1.23524:  57%|█████▋    | 16/28 [00:49<00:44,  3.68s/it]epoch 4 loss 1.23524:  61%|██████    | 17/28 [00:49<00:29,  2.70s/it]epoch 4 loss 1.23368:  61%|██████    | 17/28 [00:50<00:29,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6671[0m
[32m  eval_f1 = 0.3692[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.4848[0m
[32m  eval_recall = 0.3357[0m
[32m  ********************[0m
[32m  Best f1:0.3692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23368:  64%|██████▍   | 18/28 [00:56<00:38,  3.83s/it]epoch 4 loss 1.23442:  64%|██████▍   | 18/28 [00:56<00:38,  3.83s/it]epoch 4 loss 1.23442:  68%|██████▊   | 19/28 [00:56<00:25,  2.81s/it]epoch 4 loss 1.23225:  68%|██████▊   | 19/28 [00:57<00:25,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6671[0m
[32m  eval_f1 = 0.3686[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.4845[0m
[32m  eval_recall = 0.3352[0m
[32m  ********************[0m
[32m  Best MCC:0.6484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23225:  71%|███████▏  | 20/28 [01:01<00:27,  3.44s/it]epoch 4 loss 1.23481:  71%|███████▏  | 20/28 [01:02<00:27,  3.44s/it]epoch 4 loss 1.23481:  75%|███████▌  | 21/28 [01:02<00:17,  2.53s/it]epoch 4 loss 1.23857:  75%|███████▌  | 21/28 [01:02<00:17,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6672[0m
[32m  eval_f1 = 0.3697[0m
[32m  eval_mcc = 0.6485[0m
[32m  eval_precision = 0.4845[0m
[32m  eval_recall = 0.3362[0m
[32m  ********************[0m
[32m  Best f1:0.3697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23857:  79%|███████▊  | 22/28 [01:07<00:20,  3.48s/it]epoch 4 loss 1.23372:  79%|███████▊  | 22/28 [01:08<00:20,  3.48s/it]epoch 4 loss 1.23372:  82%|████████▏ | 23/28 [01:08<00:12,  2.57s/it]epoch 4 loss 1.23218:  82%|████████▏ | 23/28 [01:08<00:12,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6672[0m
[32m  eval_f1 = 0.3696[0m
[32m  eval_mcc = 0.6485[0m
[32m  eval_precision = 0.4845[0m
[32m  eval_recall = 0.3363[0m

epoch 4 loss 1.23218:  86%|████████▌ | 24/28 [01:11<00:11,  2.94s/it]epoch 4 loss 1.23052:  86%|████████▌ | 24/28 [01:12<00:11,  2.94s/it]epoch 4 loss 1.23052:  89%|████████▉ | 25/28 [01:12<00:06,  2.17s/it]epoch 4 loss 1.22677:  89%|████████▉ | 25/28 [01:12<00:06,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6671[0m
[32m  eval_f1 = 0.3693[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.4844[0m
[32m  eval_recall = 0.336[0m

epoch 4 loss 1.22677:  93%|█████████▎| 26/28 [01:16<00:05,  2.66s/it]epoch 4 loss 1.22464:  93%|█████████▎| 26/28 [01:16<00:05,  2.66s/it]epoch 4 loss 1.22464:  96%|█████████▋| 27/28 [01:16<00:01,  1.98s/it]epoch 4 loss 1.22211:  96%|█████████▋| 27/28 [01:16<00:01,  1.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6671[0m
[32m  eval_f1 = 0.3697[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.4849[0m
[32m  eval_recall = 0.3363[0m

epoch 4 loss 1.22211: 100%|██████████| 28/28 [01:20<00:00,  2.47s/it]epoch 4 loss 1.22211: 100%|██████████| 28/28 [01:20<00:00,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6672[0m
[32m  eval_f1 = 0.3697[0m
[32m  eval_mcc = 0.6485[0m
[32m  eval_precision = 0.4845[0m
[32m  eval_recall = 0.3362[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6467[0m
[32m  eval_f1 = 0.2875[0m
[32m  eval_mcc = 0.6277[0m
[32m  eval_precision = 0.3751[0m
[32m  eval_recall = 0.2676[0m

