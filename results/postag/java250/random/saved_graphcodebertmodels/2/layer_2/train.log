[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=2, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.5907:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.5907:   4%|▎         | 1/28 [00:00<00:21,  1.24it/s]epoch 0 loss 5.58748:   4%|▎         | 1/28 [00:01<00:21,  1.24it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0037[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = -0.0021[0m
[32m  eval_precision = 0.0016[0m
[32m  eval_recall = 0.0014[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.58748:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 0 loss 5.58142:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 0 loss 5.58142:  11%|█         | 3/28 [00:05<00:47,  1.88s/it]epoch 0 loss 5.56379:  11%|█         | 3/28 [00:06<00:47,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0065[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = -0.0022[0m
[32m  eval_precision = 0.0035[0m
[32m  eval_recall = 0.0016[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.56379:  14%|█▍        | 4/28 [00:11<01:16,  3.18s/it]epoch 0 loss 5.54324:  14%|█▍        | 4/28 [00:11<01:16,  3.18s/it]epoch 0 loss 5.54324:  18%|█▊        | 5/28 [00:11<00:50,  2.18s/it]epoch 0 loss 5.5183:  18%|█▊        | 5/28 [00:11<00:50,  2.18s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0252[0m
[32m  eval_f1 = 0.0044[0m
[32m  eval_mcc = 0.0064[0m
[32m  eval_precision = 0.0079[0m
[32m  eval_recall = 0.0045[0m
[32m  ********************[0m
[32m  Best f1:0.0044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.5183:  21%|██▏       | 6/28 [00:17<01:13,  3.34s/it]epoch 0 loss 5.48332:  21%|██▏       | 6/28 [00:17<01:13,  3.34s/it]epoch 0 loss 5.48332:  25%|██▌       | 7/28 [00:17<00:50,  2.38s/it]epoch 0 loss 5.4424:  25%|██▌       | 7/28 [00:17<00:50,  2.38s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0662[0m
[32m  eval_f1 = 0.0117[0m
[32m  eval_mcc = 0.0301[0m
[32m  eval_precision = 0.0181[0m
[32m  eval_recall = 0.0158[0m
[32m  ********************[0m
[32m  Best f1:0.0117[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.4424:  29%|██▊       | 8/28 [00:25<01:25,  4.28s/it]epoch 0 loss 5.39779:  29%|██▊       | 8/28 [00:26<01:25,  4.28s/it]epoch 0 loss 5.39779:  32%|███▏      | 9/28 [00:26<00:58,  3.07s/it]epoch 0 loss 5.34763:  32%|███▏      | 9/28 [00:26<00:58,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0982[0m
[32m  eval_f1 = 0.0189[0m
[32m  eval_mcc = 0.0526[0m
[32m  eval_precision = 0.0195[0m
[32m  eval_recall = 0.0252[0m
[32m  ********************[0m
[32m  Best f1:0.0189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0526[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.34763:  36%|███▌      | 10/28 [00:34<01:25,  4.76s/it]epoch 0 loss 5.288:  36%|███▌      | 10/28 [00:35<01:25,  4.76s/it]  epoch 0 loss 5.288:  39%|███▉      | 11/28 [00:35<00:58,  3.43s/it]epoch 0 loss 5.22543:  39%|███▉      | 11/28 [00:35<00:58,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.126[0m
[32m  eval_f1 = 0.0334[0m
[32m  eval_mcc = 0.0792[0m
[32m  eval_precision = 0.0367[0m
[32m  eval_recall = 0.0385[0m
[32m  ********************[0m
[32m  Best f1:0.0334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0792[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.22543:  43%|████▎     | 12/28 [00:42<01:11,  4.49s/it]epoch 0 loss 5.15883:  43%|████▎     | 12/28 [00:42<01:11,  4.49s/it]epoch 0 loss 5.15883:  46%|████▋     | 13/28 [00:42<00:48,  3.26s/it]epoch 0 loss 5.08961:  46%|████▋     | 13/28 [00:42<00:48,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1632[0m
[32m  eval_f1 = 0.0452[0m
[32m  eval_mcc = 0.1207[0m
[32m  eval_precision = 0.0527[0m
[32m  eval_recall = 0.0475[0m
[32m  ********************[0m
[32m  Best f1:0.0452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.08961:  50%|█████     | 14/28 [00:51<01:07,  4.82s/it]epoch 0 loss 5.01401:  50%|█████     | 14/28 [00:51<01:07,  4.82s/it]epoch 0 loss 5.01401:  54%|█████▎    | 15/28 [00:51<00:45,  3.49s/it]epoch 0 loss 4.93493:  54%|█████▎    | 15/28 [00:51<00:45,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1983[0m
[32m  eval_f1 = 0.0525[0m
[32m  eval_mcc = 0.1597[0m
[32m  eval_precision = 0.0662[0m
[32m  eval_recall = 0.0532[0m
[32m  ********************[0m
[32m  Best f1:0.0525[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93493:  57%|█████▋    | 16/28 [00:59<00:56,  4.73s/it]epoch 0 loss 4.86165:  57%|█████▋    | 16/28 [00:59<00:56,  4.73s/it]epoch 0 loss 4.86165:  61%|██████    | 17/28 [00:59<00:37,  3.44s/it]epoch 0 loss 4.78616:  61%|██████    | 17/28 [00:59<00:37,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2495[0m
[32m  eval_f1 = 0.0684[0m
[32m  eval_mcc = 0.214[0m
[32m  eval_precision = 0.1008[0m
[32m  eval_recall = 0.0665[0m
[32m  ********************[0m
[32m  Best f1:0.0684[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.78616:  64%|██████▍   | 18/28 [01:05<00:41,  4.11s/it]epoch 0 loss 4.70589:  64%|██████▍   | 18/28 [01:05<00:41,  4.11s/it]epoch 0 loss 4.70589:  68%|██████▊   | 19/28 [01:05<00:27,  3.00s/it]epoch 0 loss 4.63595:  68%|██████▊   | 19/28 [01:05<00:27,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2985[0m
[32m  eval_f1 = 0.079[0m
[32m  eval_mcc = 0.2624[0m
[32m  eval_precision = 0.1195[0m
[32m  eval_recall = 0.076[0m
[32m  ********************[0m
[32m  Best f1:0.079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.63595:  71%|███████▏  | 20/28 [01:11<00:30,  3.80s/it]epoch 0 loss 4.55704:  71%|███████▏  | 20/28 [01:11<00:30,  3.80s/it]epoch 0 loss 4.55704:  75%|███████▌  | 21/28 [01:11<00:19,  2.79s/it]epoch 0 loss 4.48082:  75%|███████▌  | 21/28 [01:12<00:19,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3761[0m
[32m  eval_f1 = 0.0903[0m
[32m  eval_mcc = 0.3385[0m
[32m  eval_precision = 0.1361[0m
[32m  eval_recall = 0.0873[0m
[32m  ********************[0m
[32m  Best f1:0.0903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.48082:  79%|███████▊  | 22/28 [01:17<00:22,  3.67s/it]epoch 0 loss 4.40709:  79%|███████▊  | 22/28 [01:17<00:22,  3.67s/it]epoch 0 loss 4.40709:  82%|████████▏ | 23/28 [01:17<00:13,  2.70s/it]epoch 0 loss 4.33208:  82%|████████▏ | 23/28 [01:18<00:13,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.432[0m
[32m  eval_f1 = 0.0989[0m
[32m  eval_mcc = 0.3933[0m
[32m  eval_precision = 0.1669[0m
[32m  eval_recall = 0.0946[0m
[32m  ********************[0m
[32m  Best f1:0.0989[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.33208:  86%|████████▌ | 24/28 [01:24<00:15,  3.87s/it]epoch 0 loss 4.26314:  86%|████████▌ | 24/28 [01:24<00:15,  3.87s/it]epoch 0 loss 4.26314:  89%|████████▉ | 25/28 [01:24<00:08,  2.84s/it]epoch 0 loss 4.19521:  89%|████████▉ | 25/28 [01:25<00:08,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4723[0m
[32m  eval_f1 = 0.1214[0m
[32m  eval_mcc = 0.437[0m
[32m  eval_precision = 0.1789[0m
[32m  eval_recall = 0.1125[0m
[32m  ********************[0m
[32m  Best f1:0.1214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.19521:  93%|█████████▎| 26/28 [01:31<00:07,  3.95s/it]epoch 0 loss 4.12992:  93%|█████████▎| 26/28 [01:31<00:07,  3.95s/it]epoch 0 loss 4.12992:  96%|█████████▋| 27/28 [01:31<00:02,  2.89s/it]epoch 0 loss 4.0693:  96%|█████████▋| 27/28 [01:32<00:02,  2.89s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5031[0m
[32m  eval_f1 = 0.1347[0m
[32m  eval_mcc = 0.4723[0m
[32m  eval_precision = 0.1823[0m
[32m  eval_recall = 0.1257[0m
[32m  ********************[0m
[32m  Best f1:0.1347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.0693: 100%|██████████| 28/28 [01:38<00:00,  3.91s/it]epoch 0 loss 4.0693: 100%|██████████| 28/28 [01:38<00:00,  3.50s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.20697:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.20697:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 1 loss 2.12513:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5257[0m
[32m  eval_f1 = 0.1492[0m
[32m  eval_mcc = 0.4972[0m
[32m  eval_precision = 0.1937[0m
[32m  eval_recall = 0.1407[0m
[32m  ********************[0m
[32m  Best f1:0.1492[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4972[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12513:   7%|▋         | 2/28 [00:07<01:46,  4.10s/it]epoch 1 loss 2.10367:   7%|▋         | 2/28 [00:07<01:46,  4.10s/it]epoch 1 loss 2.10367:  11%|█         | 3/28 [00:07<01:00,  2.42s/it]epoch 1 loss 2.07833:  11%|█         | 3/28 [00:07<01:00,  2.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5573[0m
[32m  eval_f1 = 0.1661[0m
[32m  eval_mcc = 0.531[0m
[32m  eval_precision = 0.2041[0m
[32m  eval_recall = 0.1606[0m
[32m  ********************[0m
[32m  Best f1:0.1661[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07833:  14%|█▍        | 4/28 [00:14<01:36,  4.04s/it]epoch 1 loss 2.05471:  14%|█▍        | 4/28 [00:14<01:36,  4.04s/it]epoch 1 loss 2.05471:  18%|█▊        | 5/28 [00:14<01:02,  2.74s/it]epoch 1 loss 2.04359:  18%|█▊        | 5/28 [00:14<01:02,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.579[0m
[32m  eval_f1 = 0.1795[0m
[32m  eval_mcc = 0.5554[0m
[32m  eval_precision = 0.2134[0m
[32m  eval_recall = 0.1755[0m
[32m  ********************[0m
[32m  Best f1:0.1795[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04359:  21%|██▏       | 6/28 [00:20<01:28,  4.01s/it]epoch 1 loss 2.02814:  21%|██▏       | 6/28 [00:21<01:28,  4.01s/it]epoch 1 loss 2.02814:  25%|██▌       | 7/28 [00:21<00:59,  2.84s/it]epoch 1 loss 2.00089:  25%|██▌       | 7/28 [00:21<00:59,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.588[0m
[32m  eval_f1 = 0.1853[0m
[32m  eval_mcc = 0.5652[0m
[32m  eval_precision = 0.2253[0m
[32m  eval_recall = 0.181[0m
[32m  ********************[0m
[32m  Best f1:0.1853[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00089:  29%|██▊       | 8/28 [00:28<01:24,  4.23s/it]epoch 1 loss 1.96902:  29%|██▊       | 8/28 [00:29<01:24,  4.23s/it]epoch 1 loss 1.96902:  32%|███▏      | 9/28 [00:29<00:57,  3.05s/it]epoch 1 loss 1.93563:  32%|███▏      | 9/28 [00:29<00:57,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5952[0m
[32m  eval_f1 = 0.1912[0m
[32m  eval_mcc = 0.5734[0m
[32m  eval_precision = 0.2545[0m
[32m  eval_recall = 0.1851[0m
[32m  ********************[0m
[32m  Best f1:0.1912[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93563:  36%|███▌      | 10/28 [00:35<01:15,  4.18s/it]epoch 1 loss 1.91496:  36%|███▌      | 10/28 [00:36<01:15,  4.18s/it]epoch 1 loss 1.91496:  39%|███▉      | 11/28 [00:36<00:51,  3.03s/it]epoch 1 loss 1.90632:  39%|███▉      | 11/28 [00:36<00:51,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5993[0m
[32m  eval_f1 = 0.2018[0m
[32m  eval_mcc = 0.5781[0m
[32m  eval_precision = 0.3043[0m
[32m  eval_recall = 0.1917[0m
[32m  ********************[0m
[32m  Best f1:0.2018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5781[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90632:  43%|████▎     | 12/28 [00:45<01:18,  4.91s/it]epoch 1 loss 1.89175:  43%|████▎     | 12/28 [00:45<01:18,  4.91s/it]epoch 1 loss 1.89175:  46%|████▋     | 13/28 [00:45<00:53,  3.55s/it]epoch 1 loss 1.86465:  46%|████▋     | 13/28 [00:46<00:53,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.606[0m
[32m  eval_f1 = 0.2108[0m
[32m  eval_mcc = 0.5852[0m
[32m  eval_precision = 0.3048[0m
[32m  eval_recall = 0.1979[0m
[32m  ********************[0m
[32m  Best f1:0.2108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5852[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86465:  50%|█████     | 14/28 [00:54<01:12,  5.16s/it]epoch 1 loss 1.84724:  50%|█████     | 14/28 [00:55<01:12,  5.16s/it]epoch 1 loss 1.84724:  54%|█████▎    | 15/28 [00:55<00:48,  3.73s/it]epoch 1 loss 1.83502:  54%|█████▎    | 15/28 [00:55<00:48,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6108[0m
[32m  eval_f1 = 0.2206[0m
[32m  eval_mcc = 0.5896[0m
[32m  eval_precision = 0.3198[0m
[32m  eval_recall = 0.2051[0m
[32m  ********************[0m
[32m  Best f1:0.2206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5896[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83502:  57%|█████▋    | 16/28 [01:03<01:01,  5.17s/it]epoch 1 loss 1.8198:  57%|█████▋    | 16/28 [01:04<01:01,  5.17s/it] epoch 1 loss 1.8198:  61%|██████    | 17/28 [01:04<00:41,  3.74s/it]epoch 1 loss 1.80022:  61%|██████    | 17/28 [01:04<00:41,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6169[0m
[32m  eval_f1 = 0.2466[0m
[32m  eval_mcc = 0.595[0m
[32m  eval_precision = 0.3228[0m
[32m  eval_recall = 0.2303[0m
[32m  ********************[0m
[32m  Best f1:0.2466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80022:  64%|██████▍   | 18/28 [01:12<00:51,  5.17s/it]epoch 1 loss 1.78694:  64%|██████▍   | 18/28 [01:12<00:51,  5.17s/it]epoch 1 loss 1.78694:  68%|██████▊   | 19/28 [01:12<00:33,  3.74s/it]epoch 1 loss 1.78068:  68%|██████▊   | 19/28 [01:13<00:33,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6196[0m
[32m  eval_f1 = 0.257[0m
[32m  eval_mcc = 0.5976[0m
[32m  eval_precision = 0.3355[0m
[32m  eval_recall = 0.2412[0m
[32m  ********************[0m
[32m  Best f1:0.257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5976[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.78068:  71%|███████▏  | 20/28 [01:22<00:42,  5.37s/it]epoch 1 loss 1.76489:  71%|███████▏  | 20/28 [01:22<00:42,  5.37s/it]epoch 1 loss 1.76489:  75%|███████▌  | 21/28 [01:22<00:27,  3.88s/it]epoch 1 loss 1.75196:  75%|███████▌  | 21/28 [01:22<00:27,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6234[0m
[32m  eval_f1 = 0.2622[0m
[32m  eval_mcc = 0.6017[0m
[32m  eval_precision = 0.3469[0m
[32m  eval_recall = 0.2459[0m
[32m  ********************[0m
[32m  Best f1:0.2622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75196:  79%|███████▊  | 22/28 [01:33<00:35,  5.96s/it]epoch 1 loss 1.73602:  79%|███████▊  | 22/28 [01:33<00:35,  5.96s/it]epoch 1 loss 1.73602:  82%|████████▏ | 23/28 [01:33<00:21,  4.30s/it]epoch 1 loss 1.72651:  82%|████████▏ | 23/28 [01:34<00:21,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6287[0m
[32m  eval_f1 = 0.2795[0m
[32m  eval_mcc = 0.6076[0m
[32m  eval_precision = 0.3671[0m
[32m  eval_recall = 0.261[0m
[32m  ********************[0m
[32m  Best f1:0.2795[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72651:  86%|████████▌ | 24/28 [01:41<00:21,  5.49s/it]epoch 1 loss 1.71485:  86%|████████▌ | 24/28 [01:42<00:21,  5.49s/it]epoch 1 loss 1.71485:  89%|████████▉ | 25/28 [01:42<00:11,  3.97s/it]epoch 1 loss 1.70758:  89%|████████▉ | 25/28 [01:42<00:11,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.633[0m
[32m  eval_f1 = 0.2836[0m
[32m  eval_mcc = 0.613[0m
[32m  eval_precision = 0.3752[0m
[32m  eval_recall = 0.2648[0m
[32m  ********************[0m
[32m  Best f1:0.2836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.70758:  93%|█████████▎| 26/28 [01:51<00:10,  5.45s/it]epoch 1 loss 1.69453:  93%|█████████▎| 26/28 [01:51<00:10,  5.45s/it]epoch 1 loss 1.69453:  96%|█████████▋| 27/28 [01:51<00:03,  3.94s/it]epoch 1 loss 1.68034:  96%|█████████▋| 27/28 [01:51<00:03,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6375[0m
[32m  eval_f1 = 0.2848[0m
[32m  eval_mcc = 0.6182[0m
[32m  eval_precision = 0.376[0m
[32m  eval_recall = 0.2658[0m
[32m  ********************[0m
[32m  Best f1:0.2848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.68034: 100%|██████████| 28/28 [01:59<00:00,  5.20s/it]epoch 1 loss 1.68034: 100%|██████████| 28/28 [01:59<00:00,  4.28s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.26547:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.26547:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s]epoch 2 loss 1.26995:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.64[0m
[32m  eval_f1 = 0.2875[0m
[32m  eval_mcc = 0.6211[0m
[32m  eval_precision = 0.3785[0m
[32m  eval_recall = 0.267[0m
[32m  ********************[0m
[32m  Best f1:0.2875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26995:   7%|▋         | 2/28 [00:09<02:24,  5.57s/it]epoch 2 loss 1.28969:   7%|▋         | 2/28 [00:10<02:24,  5.57s/it]epoch 2 loss 1.28969:  11%|█         | 3/28 [00:10<01:20,  3.22s/it]epoch 2 loss 1.2918:  11%|█         | 3/28 [00:10<01:20,  3.22s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6426[0m
[32m  eval_f1 = 0.2894[0m
[32m  eval_mcc = 0.6236[0m
[32m  eval_precision = 0.3812[0m
[32m  eval_recall = 0.2687[0m
[32m  ********************[0m
[32m  Best f1:0.2894[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2918:  14%|█▍        | 4/28 [00:17<01:56,  4.86s/it]epoch 2 loss 1.30578:  14%|█▍        | 4/28 [00:17<01:56,  4.86s/it]epoch 2 loss 1.30578:  18%|█▊        | 5/28 [00:17<01:14,  3.26s/it]epoch 2 loss 1.29983:  18%|█▊        | 5/28 [00:18<01:14,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6451[0m
[32m  eval_f1 = 0.2976[0m
[32m  eval_mcc = 0.6258[0m
[32m  eval_precision = 0.3929[0m
[32m  eval_recall = 0.2755[0m
[32m  ********************[0m
[32m  Best f1:0.2976[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29983:  21%|██▏       | 6/28 [00:26<01:52,  5.13s/it]epoch 2 loss 1.31317:  21%|██▏       | 6/28 [00:26<01:52,  5.13s/it]epoch 2 loss 1.31317:  25%|██▌       | 7/28 [00:26<01:15,  3.59s/it]epoch 2 loss 1.30272:  25%|██▌       | 7/28 [00:27<01:15,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6471[0m
[32m  eval_f1 = 0.3047[0m
[32m  eval_mcc = 0.6276[0m
[32m  eval_precision = 0.3951[0m
[32m  eval_recall = 0.2828[0m
[32m  ********************[0m
[32m  Best f1:0.3047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30272:  29%|██▊       | 8/28 [00:34<01:39,  4.96s/it]epoch 2 loss 1.30516:  29%|██▊       | 8/28 [00:35<01:39,  4.96s/it]epoch 2 loss 1.30516:  32%|███▏      | 9/28 [00:35<01:07,  3.54s/it]epoch 2 loss 1.32237:  32%|███▏      | 9/28 [00:35<01:07,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6485[0m
[32m  eval_f1 = 0.3098[0m
[32m  eval_mcc = 0.6288[0m
[32m  eval_precision = 0.4004[0m
[32m  eval_recall = 0.2886[0m
[32m  ********************[0m
[32m  Best f1:0.3098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6288[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32237:  36%|███▌      | 10/28 [00:43<01:32,  5.13s/it]epoch 2 loss 1.31567:  36%|███▌      | 10/28 [00:44<01:32,  5.13s/it]epoch 2 loss 1.31567:  39%|███▉      | 11/28 [00:44<01:02,  3.68s/it]epoch 2 loss 1.31695:  39%|███▉      | 11/28 [00:44<01:02,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6505[0m
[32m  eval_f1 = 0.3191[0m
[32m  eval_mcc = 0.6305[0m
[32m  eval_precision = 0.4244[0m
[32m  eval_recall = 0.2961[0m
[32m  ********************[0m
[32m  Best f1:0.3191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31695:  43%|████▎     | 12/28 [00:53<01:22,  5.19s/it]epoch 2 loss 1.31428:  43%|████▎     | 12/28 [00:53<01:22,  5.19s/it]epoch 2 loss 1.31428:  46%|████▋     | 13/28 [00:53<00:56,  3.74s/it]epoch 2 loss 1.32218:  46%|████▋     | 13/28 [00:53<00:56,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6519[0m
[32m  eval_f1 = 0.3215[0m
[32m  eval_mcc = 0.6319[0m
[32m  eval_precision = 0.4219[0m
[32m  eval_recall = 0.2983[0m
[32m  ********************[0m
[32m  Best f1:0.3215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32218:  50%|█████     | 14/28 [01:04<01:21,  5.85s/it]epoch 2 loss 1.31526:  50%|█████     | 14/28 [01:04<01:21,  5.85s/it]epoch 2 loss 1.31526:  54%|█████▎    | 15/28 [01:04<00:54,  4.22s/it]epoch 2 loss 1.32041:  54%|█████▎    | 15/28 [01:04<00:54,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6541[0m
[32m  eval_f1 = 0.3255[0m
[32m  eval_mcc = 0.6344[0m
[32m  eval_precision = 0.421[0m
[32m  eval_recall = 0.3025[0m
[32m  ********************[0m
[32m  Best f1:0.3255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32041:  57%|█████▋    | 16/28 [01:12<01:03,  5.29s/it]epoch 2 loss 1.32021:  57%|█████▋    | 16/28 [01:12<01:03,  5.29s/it]epoch 2 loss 1.32021:  61%|██████    | 17/28 [01:12<00:42,  3.83s/it]epoch 2 loss 1.32003:  61%|██████    | 17/28 [01:13<00:42,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3284[0m
[32m  eval_mcc = 0.6364[0m
[32m  eval_precision = 0.4395[0m
[32m  eval_recall = 0.304[0m
[32m  ********************[0m
[32m  Best f1:0.3284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6364[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32003:  64%|██████▍   | 18/28 [01:21<00:53,  5.30s/it]epoch 2 loss 1.3248:  64%|██████▍   | 18/28 [01:21<00:53,  5.30s/it] epoch 2 loss 1.3248:  68%|██████▊   | 19/28 [01:21<00:34,  3.83s/it]epoch 2 loss 1.32594:  68%|██████▊   | 19/28 [01:22<00:34,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3289[0m
[32m  eval_mcc = 0.6384[0m
[32m  eval_precision = 0.4388[0m
[32m  eval_recall = 0.3045[0m
[32m  ********************[0m
[32m  Best f1:0.3289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32594:  71%|███████▏  | 20/28 [01:29<00:39,  4.89s/it]epoch 2 loss 1.32418:  71%|███████▏  | 20/28 [01:29<00:39,  4.89s/it]epoch 2 loss 1.32418:  75%|███████▌  | 21/28 [01:29<00:24,  3.55s/it]epoch 2 loss 1.31807:  75%|███████▌  | 21/28 [01:30<00:24,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6582[0m
[32m  eval_f1 = 0.3296[0m
[32m  eval_mcc = 0.6389[0m
[32m  eval_precision = 0.4414[0m
[32m  eval_recall = 0.3049[0m
[32m  ********************[0m
[32m  Best f1:0.3296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31807:  79%|███████▊  | 22/28 [01:38<00:30,  5.14s/it]epoch 2 loss 1.31209:  79%|███████▊  | 22/28 [01:38<00:30,  5.14s/it]epoch 2 loss 1.31209:  82%|████████▏ | 23/28 [01:38<00:18,  3.72s/it]epoch 2 loss 1.31493:  82%|████████▏ | 23/28 [01:39<00:18,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6593[0m
[32m  eval_f1 = 0.3318[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.4448[0m
[32m  eval_recall = 0.3062[0m
[32m  ********************[0m
[32m  Best f1:0.3318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.64[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31493:  86%|████████▌ | 24/28 [01:50<00:23,  5.96s/it]epoch 2 loss 1.31494:  86%|████████▌ | 24/28 [01:50<00:23,  5.96s/it]epoch 2 loss 1.31494:  89%|████████▉ | 25/28 [01:50<00:12,  4.30s/it]epoch 2 loss 1.3106:  89%|████████▉ | 25/28 [01:50<00:12,  4.30s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6596[0m
[32m  eval_f1 = 0.3327[0m
[32m  eval_mcc = 0.6405[0m
[32m  eval_precision = 0.4448[0m
[32m  eval_recall = 0.3072[0m
[32m  ********************[0m
[32m  Best f1:0.3327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3106:  93%|█████████▎| 26/28 [01:57<00:09,  4.99s/it]epoch 2 loss 1.3058:  93%|█████████▎| 26/28 [01:57<00:09,  4.99s/it]epoch 2 loss 1.3058:  96%|█████████▋| 27/28 [01:57<00:03,  3.63s/it]epoch 2 loss 1.30448:  96%|█████████▋| 27/28 [01:57<00:03,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6595[0m
[32m  eval_f1 = 0.3358[0m
[32m  eval_mcc = 0.6406[0m
[32m  eval_precision = 0.4541[0m
[32m  eval_recall = 0.3095[0m
[32m  ********************[0m
[32m  Best f1:0.3358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30448: 100%|██████████| 28/28 [02:03<00:00,  4.17s/it]epoch 2 loss 1.30448: 100%|██████████| 28/28 [02:03<00:00,  4.40s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.21723:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.21723:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 3 loss 1.29393:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6608[0m
[32m  eval_f1 = 0.3386[0m
[32m  eval_mcc = 0.642[0m
[32m  eval_precision = 0.4573[0m
[32m  eval_recall = 0.3121[0m
[32m  ********************[0m
[32m  Best f1:0.3386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29393:   7%|▋         | 2/28 [00:06<01:44,  4.01s/it]epoch 3 loss 1.25046:   7%|▋         | 2/28 [00:07<01:44,  4.01s/it]epoch 3 loss 1.25046:  11%|█         | 3/28 [00:07<00:59,  2.37s/it]epoch 3 loss 1.26234:  11%|█         | 3/28 [00:07<00:59,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6621[0m
[32m  eval_f1 = 0.3547[0m
[32m  eval_mcc = 0.6435[0m
[32m  eval_precision = 0.4726[0m
[32m  eval_recall = 0.3244[0m
[32m  ********************[0m
[32m  Best f1:0.3547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26234:  14%|█▍        | 4/28 [00:13<01:35,  4.00s/it]epoch 3 loss 1.2303:  14%|█▍        | 4/28 [00:14<01:35,  4.00s/it] epoch 3 loss 1.2303:  18%|█▊        | 5/28 [00:14<01:02,  2.71s/it]epoch 3 loss 1.25163:  18%|█▊        | 5/28 [00:14<01:02,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6624[0m
[32m  eval_f1 = 0.3557[0m
[32m  eval_mcc = 0.6439[0m
[32m  eval_precision = 0.4712[0m
[32m  eval_recall = 0.3254[0m
[32m  ********************[0m
[32m  Best f1:0.3557[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25163:  21%|██▏       | 6/28 [00:23<01:48,  4.95s/it]epoch 3 loss 1.25779:  21%|██▏       | 6/28 [00:23<01:48,  4.95s/it]epoch 3 loss 1.25779:  25%|██▌       | 7/28 [00:23<01:12,  3.46s/it]epoch 3 loss 1.27312:  25%|██▌       | 7/28 [00:24<01:12,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6638[0m
[32m  eval_f1 = 0.3578[0m
[32m  eval_mcc = 0.6453[0m
[32m  eval_precision = 0.47[0m
[32m  eval_recall = 0.3275[0m
[32m  ********************[0m
[32m  Best f1:0.3578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27312:  29%|██▊       | 8/28 [00:35<02:00,  6.02s/it]epoch 3 loss 1.2547:  29%|██▊       | 8/28 [00:35<02:00,  6.02s/it] epoch 3 loss 1.2547:  32%|███▏      | 9/28 [00:35<01:21,  4.27s/it]epoch 3 loss 1.25764:  32%|███▏      | 9/28 [00:36<01:21,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.664[0m
[32m  eval_f1 = 0.3617[0m
[32m  eval_mcc = 0.6454[0m
[32m  eval_precision = 0.4678[0m
[32m  eval_recall = 0.3314[0m
[32m  ********************[0m
[32m  Best f1:0.3617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6454[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25764:  36%|███▌      | 10/28 [00:45<01:44,  5.81s/it]epoch 3 loss 1.26444:  36%|███▌      | 10/28 [00:45<01:44,  5.81s/it]epoch 3 loss 1.26444:  39%|███▉      | 11/28 [00:45<01:10,  4.16s/it]epoch 3 loss 1.25863:  39%|███▉      | 11/28 [00:45<01:10,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6649[0m
[32m  eval_f1 = 0.3618[0m
[32m  eval_mcc = 0.6463[0m
[32m  eval_precision = 0.4672[0m
[32m  eval_recall = 0.3321[0m
[32m  ********************[0m
[32m  Best f1:0.3618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6463[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25863:  43%|████▎     | 12/28 [00:55<01:33,  5.87s/it]epoch 3 loss 1.24997:  43%|████▎     | 12/28 [00:55<01:33,  5.87s/it]epoch 3 loss 1.24997:  46%|████▋     | 13/28 [00:55<01:03,  4.22s/it]epoch 3 loss 1.23853:  46%|████▋     | 13/28 [00:56<01:03,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6655[0m
[32m  eval_f1 = 0.3616[0m
[32m  eval_mcc = 0.6469[0m
[32m  eval_precision = 0.4674[0m
[32m  eval_recall = 0.3316[0m
[32m  ********************[0m
[32m  Best MCC:0.6469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23853:  50%|█████     | 14/28 [01:02<01:10,  5.01s/it]epoch 3 loss 1.23322:  50%|█████     | 14/28 [01:03<01:10,  5.01s/it]epoch 3 loss 1.23322:  54%|█████▎    | 15/28 [01:03<00:47,  3.62s/it]epoch 3 loss 1.23252:  54%|█████▎    | 15/28 [01:03<00:47,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6663[0m
[32m  eval_f1 = 0.3621[0m
[32m  eval_mcc = 0.6477[0m
[32m  eval_precision = 0.4687[0m
[32m  eval_recall = 0.332[0m
[32m  ********************[0m
[32m  Best f1:0.3621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6477[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23252:  57%|█████▋    | 16/28 [01:12<01:02,  5.24s/it]epoch 3 loss 1.23067:  57%|█████▋    | 16/28 [01:12<01:02,  5.24s/it]epoch 3 loss 1.23067:  61%|██████    | 17/28 [01:12<00:41,  3.79s/it]epoch 3 loss 1.23171:  61%|██████    | 17/28 [01:12<00:41,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6681[0m
[32m  eval_f1 = 0.3663[0m
[32m  eval_mcc = 0.6494[0m
[32m  eval_precision = 0.4768[0m
[32m  eval_recall = 0.3353[0m
[32m  ********************[0m
[32m  Best f1:0.3663[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23171:  64%|██████▍   | 18/28 [01:21<00:53,  5.37s/it]epoch 3 loss 1.23069:  64%|██████▍   | 18/28 [01:21<00:53,  5.37s/it]epoch 3 loss 1.23069:  68%|██████▊   | 19/28 [01:21<00:34,  3.89s/it]epoch 3 loss 1.22794:  68%|██████▊   | 19/28 [01:22<00:34,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6701[0m
[32m  eval_f1 = 0.3677[0m
[32m  eval_mcc = 0.6514[0m
[32m  eval_precision = 0.4771[0m
[32m  eval_recall = 0.3371[0m
[32m  ********************[0m
[32m  Best f1:0.3677[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22794:  71%|███████▏  | 20/28 [01:31<00:45,  5.70s/it]epoch 3 loss 1.22568:  71%|███████▏  | 20/28 [01:32<00:45,  5.70s/it]epoch 3 loss 1.22568:  75%|███████▌  | 21/28 [01:32<00:28,  4.11s/it]epoch 3 loss 1.22461:  75%|███████▌  | 21/28 [01:32<00:28,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6703[0m
[32m  eval_f1 = 0.3683[0m
[32m  eval_mcc = 0.6515[0m
[32m  eval_precision = 0.4816[0m
[32m  eval_recall = 0.3378[0m
[32m  ********************[0m
[32m  Best f1:0.3683[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22461:  79%|███████▊  | 22/28 [01:40<00:31,  5.30s/it]epoch 3 loss 1.22156:  79%|███████▊  | 22/28 [01:40<00:31,  5.30s/it]epoch 3 loss 1.22156:  82%|████████▏ | 23/28 [01:40<00:19,  3.84s/it]epoch 3 loss 1.22004:  82%|████████▏ | 23/28 [01:41<00:19,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6703[0m
[32m  eval_f1 = 0.37[0m
[32m  eval_mcc = 0.6516[0m
[32m  eval_precision = 0.4821[0m
[32m  eval_recall = 0.339[0m
[32m  ********************[0m
[32m  Best f1:0.37[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22004:  86%|████████▌ | 24/28 [01:49<00:21,  5.44s/it]epoch 3 loss 1.21599:  86%|████████▌ | 24/28 [01:50<00:21,  5.44s/it]epoch 3 loss 1.21599:  89%|████████▉ | 25/28 [01:50<00:11,  3.93s/it]epoch 3 loss 1.21135:  89%|████████▉ | 25/28 [01:50<00:11,  3.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6705[0m
[32m  eval_f1 = 0.3701[0m
[32m  eval_mcc = 0.6519[0m
[32m  eval_precision = 0.4818[0m
[32m  eval_recall = 0.339[0m
[32m  ********************[0m
[32m  Best f1:0.3701[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21135:  93%|█████████▎| 26/28 [01:58<00:10,  5.12s/it]epoch 3 loss 1.21079:  93%|█████████▎| 26/28 [01:58<00:10,  5.12s/it]epoch 3 loss 1.21079:  96%|█████████▋| 27/28 [01:58<00:03,  3.71s/it]epoch 3 loss 1.22249:  96%|█████████▋| 27/28 [01:58<00:03,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6709[0m
[32m  eval_f1 = 0.3704[0m
[32m  eval_mcc = 0.6524[0m
[32m  eval_precision = 0.4829[0m
[32m  eval_recall = 0.3391[0m
[32m  ********************[0m
[32m  Best f1:0.3704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6524[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22249: 100%|██████████| 28/28 [02:07<00:00,  5.23s/it]epoch 3 loss 1.22249: 100%|██████████| 28/28 [02:07<00:00,  4.55s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.1329:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.1329:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 4 loss 1.13845:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6707[0m
[32m  eval_f1 = 0.3703[0m
[32m  eval_mcc = 0.6521[0m
[32m  eval_precision = 0.4828[0m
[32m  eval_recall = 0.3389[0m

epoch 4 loss 1.13845:   7%|▋         | 2/28 [00:04<01:02,  2.40s/it]epoch 4 loss 1.14985:   7%|▋         | 2/28 [00:04<01:02,  2.40s/it]epoch 4 loss 1.14985:  11%|█         | 3/28 [00:04<00:37,  1.48s/it]epoch 4 loss 1.13776:  11%|█         | 3/28 [00:04<00:37,  1.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6715[0m
[32m  eval_f1 = 0.3709[0m
[32m  eval_mcc = 0.6529[0m
[32m  eval_precision = 0.4836[0m
[32m  eval_recall = 0.3391[0m
[32m  ********************[0m
[32m  Best f1:0.3709[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.13776:  14%|█▍        | 4/28 [00:14<01:59,  4.99s/it]epoch 4 loss 1.14519:  14%|█▍        | 4/28 [00:15<01:59,  4.99s/it]epoch 4 loss 1.14519:  18%|█▊        | 5/28 [00:15<01:16,  3.34s/it]epoch 4 loss 1.1835:  18%|█▊        | 5/28 [00:15<01:16,  3.34s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6726[0m
[32m  eval_f1 = 0.3716[0m
[32m  eval_mcc = 0.6542[0m
[32m  eval_precision = 0.4843[0m
[32m  eval_recall = 0.3396[0m
[32m  ********************[0m
[32m  Best f1:0.3716[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1835:  21%|██▏       | 6/28 [00:24<01:59,  5.43s/it]epoch 4 loss 1.17319:  21%|██▏       | 6/28 [00:25<01:59,  5.43s/it]epoch 4 loss 1.17319:  25%|██▌       | 7/28 [00:25<01:19,  3.80s/it]epoch 4 loss 1.17375:  25%|██▌       | 7/28 [00:25<01:19,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6726[0m
[32m  eval_f1 = 0.3715[0m
[32m  eval_mcc = 0.6542[0m
[32m  eval_precision = 0.4835[0m
[32m  eval_recall = 0.3391[0m
[32m  ********************[0m
[32m  Best MCC:0.6542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17375:  29%|██▊       | 8/28 [00:30<01:24,  4.23s/it]epoch 4 loss 1.18545:  29%|██▊       | 8/28 [00:30<01:24,  4.23s/it]epoch 4 loss 1.18545:  32%|███▏      | 9/28 [00:30<00:57,  3.03s/it]epoch 4 loss 1.18191:  32%|███▏      | 9/28 [00:31<00:57,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.673[0m
[32m  eval_f1 = 0.3725[0m
[32m  eval_mcc = 0.6547[0m
[32m  eval_precision = 0.4839[0m
[32m  eval_recall = 0.3398[0m
[32m  ********************[0m
[32m  Best f1:0.3725[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18191:  36%|███▌      | 10/28 [00:39<01:25,  4.73s/it]epoch 4 loss 1.18277:  36%|███▌      | 10/28 [00:39<01:25,  4.73s/it]epoch 4 loss 1.18277:  39%|███▉      | 11/28 [00:39<00:57,  3.41s/it]epoch 4 loss 1.18817:  39%|███▉      | 11/28 [00:40<00:57,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6732[0m
[32m  eval_f1 = 0.3737[0m
[32m  eval_mcc = 0.6549[0m
[32m  eval_precision = 0.4859[0m
[32m  eval_recall = 0.3406[0m
[32m  ********************[0m
[32m  Best f1:0.3737[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18817:  43%|████▎     | 12/28 [00:46<01:09,  4.35s/it]epoch 4 loss 1.19045:  43%|████▎     | 12/28 [00:46<01:09,  4.35s/it]epoch 4 loss 1.19045:  46%|████▋     | 13/28 [00:46<00:47,  3.16s/it]epoch 4 loss 1.18939:  46%|████▋     | 13/28 [00:47<00:47,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.3736[0m
[32m  eval_mcc = 0.655[0m
[32m  eval_precision = 0.486[0m
[32m  eval_recall = 0.3405[0m
[32m  ********************[0m
[32m  Best MCC:0.655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18939:  50%|█████     | 14/28 [00:51<00:52,  3.72s/it]epoch 4 loss 1.18882:  50%|█████     | 14/28 [00:52<00:52,  3.72s/it]epoch 4 loss 1.18882:  54%|█████▎    | 15/28 [00:52<00:35,  2.72s/it]epoch 4 loss 1.18936:  54%|█████▎    | 15/28 [00:52<00:35,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.3733[0m
[32m  eval_mcc = 0.655[0m
[32m  eval_precision = 0.4855[0m
[32m  eval_recall = 0.3403[0m
[32m  ********************[0m
[32m  Best MCC:0.655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18936:  57%|█████▋    | 16/28 [00:57<00:41,  3.47s/it]epoch 4 loss 1.18897:  57%|█████▋    | 16/28 [00:57<00:41,  3.47s/it]epoch 4 loss 1.18897:  61%|██████    | 17/28 [00:57<00:28,  2.55s/it]epoch 4 loss 1.18784:  61%|██████    | 17/28 [00:58<00:28,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6734[0m
[32m  eval_f1 = 0.3733[0m
[32m  eval_mcc = 0.6552[0m
[32m  eval_precision = 0.485[0m
[32m  eval_recall = 0.3404[0m
[32m  ********************[0m
[32m  Best MCC:0.6552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18784:  64%|██████▍   | 18/28 [01:02<00:32,  3.27s/it]epoch 4 loss 1.1885:  64%|██████▍   | 18/28 [01:03<00:32,  3.27s/it] epoch 4 loss 1.1885:  68%|██████▊   | 19/28 [01:03<00:21,  2.41s/it]epoch 4 loss 1.18614:  68%|██████▊   | 19/28 [01:03<00:21,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.3733[0m
[32m  eval_mcc = 0.655[0m
[32m  eval_precision = 0.4856[0m
[32m  eval_recall = 0.3405[0m

epoch 4 loss 1.18614:  71%|███████▏  | 20/28 [01:06<00:22,  2.82s/it]epoch 4 loss 1.18903:  71%|███████▏  | 20/28 [01:07<00:22,  2.82s/it]epoch 4 loss 1.18903:  75%|███████▌  | 21/28 [01:07<00:14,  2.09s/it]epoch 4 loss 1.19296:  75%|███████▌  | 21/28 [01:07<00:14,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6735[0m
[32m  eval_f1 = 0.3732[0m
[32m  eval_mcc = 0.6552[0m
[32m  eval_precision = 0.4857[0m
[32m  eval_recall = 0.3406[0m

epoch 4 loss 1.19296:  79%|███████▊  | 22/28 [01:11<00:15,  2.60s/it]epoch 4 loss 1.18883:  79%|███████▊  | 22/28 [01:11<00:15,  2.60s/it]epoch 4 loss 1.18883:  82%|████████▏ | 23/28 [01:11<00:09,  1.94s/it]epoch 4 loss 1.18732:  82%|████████▏ | 23/28 [01:11<00:09,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6734[0m
[32m  eval_f1 = 0.3729[0m
[32m  eval_mcc = 0.6551[0m
[32m  eval_precision = 0.4853[0m
[32m  eval_recall = 0.3404[0m

epoch 4 loss 1.18732:  86%|████████▌ | 24/28 [01:15<00:09,  2.50s/it]epoch 4 loss 1.18582:  86%|████████▌ | 24/28 [01:15<00:09,  2.50s/it]epoch 4 loss 1.18582:  89%|████████▉ | 25/28 [01:15<00:05,  1.87s/it]epoch 4 loss 1.18227:  89%|████████▉ | 25/28 [01:16<00:05,  1.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3723[0m
[32m  eval_mcc = 0.6548[0m
[32m  eval_precision = 0.4831[0m
[32m  eval_recall = 0.34[0m

epoch 4 loss 1.18227:  93%|█████████▎| 26/28 [01:19<00:04,  2.44s/it]epoch 4 loss 1.18027:  93%|█████████▎| 26/28 [01:19<00:04,  2.44s/it]epoch 4 loss 1.18027:  96%|█████████▋| 27/28 [01:19<00:01,  1.83s/it]epoch 4 loss 1.17789:  96%|█████████▋| 27/28 [01:20<00:01,  1.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3722[0m
[32m  eval_mcc = 0.6548[0m
[32m  eval_precision = 0.483[0m
[32m  eval_recall = 0.34[0m

epoch 4 loss 1.17789: 100%|██████████| 28/28 [01:23<00:00,  2.36s/it]epoch 4 loss 1.17789: 100%|██████████| 28/28 [01:23<00:00,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6732[0m
[32m  eval_f1 = 0.3737[0m
[32m  eval_mcc = 0.6549[0m
[32m  eval_precision = 0.4859[0m
[32m  eval_recall = 0.3406[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6541[0m
[32m  eval_f1 = 0.2915[0m
[32m  eval_mcc = 0.6357[0m
[32m  eval_precision = 0.3656[0m
[32m  eval_recall = 0.2731[0m

