[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.69943:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.69943:   4%|▎         | 1/28 [00:00<00:21,  1.26it/s]epoch 0 loss 5.69648:   4%|▎         | 1/28 [00:01<00:21,  1.26it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0014[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = -0.0019[0m
[32m  eval_precision = 0.0073[0m
[32m  eval_recall = 0.0025[0m
[32m  ********************[0m
[32m  Best f1:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.69648:   7%|▋         | 2/28 [00:05<01:25,  3.29s/it]epoch 0 loss 5.68197:   7%|▋         | 2/28 [00:06<01:25,  3.29s/it]epoch 0 loss 5.68197:  11%|█         | 3/28 [00:06<00:49,  1.97s/it]epoch 0 loss 5.66366:  11%|█         | 3/28 [00:06<00:49,  1.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0051[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = -0.0016[0m
[32m  eval_precision = 0.004[0m
[32m  eval_recall = 0.0022[0m

epoch 0 loss 5.66366:  14%|█▍        | 4/28 [00:10<01:04,  2.68s/it]epoch 0 loss 5.63633:  14%|█▍        | 4/28 [00:10<01:04,  2.68s/it]epoch 0 loss 5.63633:  18%|█▊        | 5/28 [00:10<00:42,  1.86s/it]epoch 0 loss 5.6013:  18%|█▊        | 5/28 [00:10<00:42,  1.86s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0212[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = 0.0026[0m
[32m  eval_precision = 0.0099[0m
[32m  eval_recall = 0.0043[0m
[32m  ********************[0m
[32m  Best MCC:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.6013:  21%|██▏       | 6/28 [00:14<01:00,  2.74s/it]epoch 0 loss 5.56048:  21%|██▏       | 6/28 [00:15<01:00,  2.74s/it]epoch 0 loss 5.56048:  25%|██▌       | 7/28 [00:15<00:41,  1.98s/it]epoch 0 loss 5.51459:  25%|██▌       | 7/28 [00:15<00:41,  1.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0411[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = 0.0048[0m
[32m  eval_precision = 0.0082[0m
[32m  eval_recall = 0.0073[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.51459:  29%|██▊       | 8/28 [00:22<01:12,  3.62s/it]epoch 0 loss 5.46135:  29%|██▊       | 8/28 [00:22<01:12,  3.62s/it]epoch 0 loss 5.46135:  32%|███▏      | 9/28 [00:22<00:49,  2.62s/it]epoch 0 loss 5.40347:  32%|███▏      | 9/28 [00:23<00:49,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0532[0m
[32m  eval_f1 = 0.0054[0m
[32m  eval_mcc = 0.0116[0m
[32m  eval_precision = 0.0116[0m
[32m  eval_recall = 0.0105[0m
[32m  ********************[0m
[32m  Best f1:0.0054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.40347:  36%|███▌      | 10/28 [00:31<01:20,  4.45s/it]epoch 0 loss 5.33531:  36%|███▌      | 10/28 [00:31<01:20,  4.45s/it]epoch 0 loss 5.33531:  39%|███▉      | 11/28 [00:31<00:54,  3.22s/it]epoch 0 loss 5.2625:  39%|███▉      | 11/28 [00:32<00:54,  3.22s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0648[0m
[32m  eval_f1 = 0.0086[0m
[32m  eval_mcc = 0.0224[0m
[32m  eval_precision = 0.0157[0m
[32m  eval_recall = 0.0131[0m
[32m  ********************[0m
[32m  Best f1:0.0086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0224[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.2625:  43%|████▎     | 12/28 [00:38<01:10,  4.40s/it]epoch 0 loss 5.18876:  43%|████▎     | 12/28 [00:39<01:10,  4.40s/it]epoch 0 loss 5.18876:  46%|████▋     | 13/28 [00:39<00:47,  3.20s/it]epoch 0 loss 5.11208:  46%|████▋     | 13/28 [00:39<00:47,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0812[0m
[32m  eval_f1 = 0.0113[0m
[32m  eval_mcc = 0.0374[0m
[32m  eval_precision = 0.0235[0m
[32m  eval_recall = 0.0152[0m
[32m  ********************[0m
[32m  Best f1:0.0113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.11208:  50%|█████     | 14/28 [00:48<01:08,  4.89s/it]epoch 0 loss 5.03043:  50%|█████     | 14/28 [00:48<01:08,  4.89s/it]epoch 0 loss 5.03043:  54%|█████▎    | 15/28 [00:48<00:46,  3.55s/it]epoch 0 loss 4.94698:  54%|█████▎    | 15/28 [00:48<00:46,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.104[0m
[32m  eval_f1 = 0.0115[0m
[32m  eval_mcc = 0.0542[0m
[32m  eval_precision = 0.0244[0m
[32m  eval_recall = 0.0162[0m
[32m  ********************[0m
[32m  Best f1:0.0115[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94698:  57%|█████▋    | 16/28 [00:56<00:59,  4.99s/it]epoch 0 loss 4.8754:  57%|█████▋    | 16/28 [00:57<00:59,  4.99s/it] epoch 0 loss 4.8754:  61%|██████    | 17/28 [00:57<00:39,  3.62s/it]epoch 0 loss 4.80116:  61%|██████    | 17/28 [00:57<00:39,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1713[0m
[32m  eval_f1 = 0.0173[0m
[32m  eval_mcc = 0.1152[0m
[32m  eval_precision = 0.0251[0m
[32m  eval_recall = 0.0229[0m
[32m  ********************[0m
[32m  Best f1:0.0173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1152[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.80116:  64%|██████▍   | 18/28 [01:03<00:44,  4.44s/it]epoch 0 loss 4.72475:  64%|██████▍   | 18/28 [01:04<00:44,  4.44s/it]epoch 0 loss 4.72475:  68%|██████▊   | 19/28 [01:04<00:29,  3.23s/it]epoch 0 loss 4.6615:  68%|██████▊   | 19/28 [01:04<00:29,  3.23s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2346[0m
[32m  eval_f1 = 0.0239[0m
[32m  eval_mcc = 0.1788[0m
[32m  eval_precision = 0.0423[0m
[32m  eval_recall = 0.0284[0m
[32m  ********************[0m
[32m  Best f1:0.0239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.6615:  71%|███████▏  | 20/28 [01:10<00:33,  4.23s/it]epoch 0 loss 4.59105:  71%|███████▏  | 20/28 [01:11<00:33,  4.23s/it]epoch 0 loss 4.59105:  75%|███████▌  | 21/28 [01:11<00:21,  3.09s/it]epoch 0 loss 4.52422:  75%|███████▌  | 21/28 [01:11<00:21,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2549[0m
[32m  eval_f1 = 0.0216[0m
[32m  eval_mcc = 0.1938[0m
[32m  eval_precision = 0.0522[0m
[32m  eval_recall = 0.028[0m
[32m  ********************[0m
[32m  Best MCC:0.1938[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.52422:  79%|███████▊  | 22/28 [01:16<00:21,  3.67s/it]epoch 0 loss 4.46224:  79%|███████▊  | 22/28 [01:16<00:21,  3.67s/it]epoch 0 loss 4.46224:  82%|████████▏ | 23/28 [01:16<00:13,  2.69s/it]epoch 0 loss 4.39964:  82%|████████▏ | 23/28 [01:16<00:13,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2627[0m
[32m  eval_f1 = 0.0229[0m
[32m  eval_mcc = 0.2044[0m
[32m  eval_precision = 0.0521[0m
[32m  eval_recall = 0.0288[0m
[32m  ********************[0m
[32m  Best MCC:0.2044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.39964:  86%|████████▌ | 24/28 [01:21<00:13,  3.35s/it]epoch 0 loss 4.34404:  86%|████████▌ | 24/28 [01:21<00:13,  3.35s/it]epoch 0 loss 4.34404:  89%|████████▉ | 25/28 [01:21<00:07,  2.47s/it]epoch 0 loss 4.28957:  89%|████████▉ | 25/28 [01:22<00:07,  2.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2972[0m
[32m  eval_f1 = 0.0422[0m
[32m  eval_mcc = 0.2475[0m
[32m  eval_precision = 0.0966[0m
[32m  eval_recall = 0.046[0m
[32m  ********************[0m
[32m  Best f1:0.0422[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2475[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.28957:  93%|█████████▎| 26/28 [01:28<00:07,  3.64s/it]epoch 0 loss 4.23736:  93%|█████████▎| 26/28 [01:28<00:07,  3.64s/it]epoch 0 loss 4.23736:  96%|█████████▋| 27/28 [01:28<00:02,  2.68s/it]epoch 0 loss 4.18814:  96%|█████████▋| 27/28 [01:28<00:02,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.366[0m
[32m  eval_f1 = 0.0801[0m
[32m  eval_mcc = 0.33[0m
[32m  eval_precision = 0.1539[0m
[32m  eval_recall = 0.0764[0m
[32m  ********************[0m
[32m  Best f1:0.0801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.33[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.18814: 100%|██████████| 28/28 [01:34<00:00,  3.76s/it]epoch 0 loss 4.18814: 100%|██████████| 28/28 [01:34<00:00,  3.39s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.68449:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.68449:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s]epoch 1 loss 2.60395:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4616[0m
[32m  eval_f1 = 0.1271[0m
[32m  eval_mcc = 0.4315[0m
[32m  eval_precision = 0.1695[0m
[32m  eval_recall = 0.1156[0m
[32m  ********************[0m
[32m  Best f1:0.1271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.60395:   7%|▋         | 2/28 [00:06<01:40,  3.86s/it]epoch 1 loss 2.57723:   7%|▋         | 2/28 [00:07<01:40,  3.86s/it]epoch 1 loss 2.57723:  11%|█         | 3/28 [00:07<00:57,  2.29s/it]epoch 1 loss 2.55268:  11%|█         | 3/28 [00:07<00:57,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5219[0m
[32m  eval_f1 = 0.1479[0m
[32m  eval_mcc = 0.4919[0m
[32m  eval_precision = 0.1887[0m
[32m  eval_recall = 0.1414[0m
[32m  ********************[0m
[32m  Best f1:0.1479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4919[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.55268:  14%|█▍        | 4/28 [00:13<01:33,  3.89s/it]epoch 1 loss 2.53103:  14%|█▍        | 4/28 [00:13<01:33,  3.89s/it]epoch 1 loss 2.53103:  18%|█▊        | 5/28 [00:13<01:00,  2.64s/it]epoch 1 loss 2.52125:  18%|█▊        | 5/28 [00:14<01:00,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5452[0m
[32m  eval_f1 = 0.1613[0m
[32m  eval_mcc = 0.5169[0m
[32m  eval_precision = 0.195[0m
[32m  eval_recall = 0.1547[0m
[32m  ********************[0m
[32m  Best f1:0.1613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.52125:  21%|██▏       | 6/28 [00:22<01:46,  4.83s/it]epoch 1 loss 2.5041:  21%|██▏       | 6/28 [00:23<01:46,  4.83s/it] epoch 1 loss 2.5041:  25%|██▌       | 7/28 [00:23<01:11,  3.39s/it]epoch 1 loss 2.47751:  25%|██▌       | 7/28 [00:23<01:11,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5517[0m
[32m  eval_f1 = 0.1645[0m
[32m  eval_mcc = 0.5242[0m
[32m  eval_precision = 0.2106[0m
[32m  eval_recall = 0.1572[0m
[32m  ********************[0m
[32m  Best f1:0.1645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.47751:  29%|██▊       | 8/28 [00:32<01:44,  5.23s/it]epoch 1 loss 2.44434:  29%|██▊       | 8/28 [00:32<01:44,  5.23s/it]epoch 1 loss 2.44434:  32%|███▏      | 9/28 [00:32<01:10,  3.73s/it]epoch 1 loss 2.40722:  32%|███▏      | 9/28 [00:33<01:10,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.63it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5565[0m
[32m  eval_f1 = 0.1655[0m
[32m  eval_mcc = 0.5302[0m
[32m  eval_precision = 0.211[0m
[32m  eval_recall = 0.1564[0m
[32m  ********************[0m
[32m  Best f1:0.1655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.40722:  36%|███▌      | 10/28 [00:44<01:49,  6.07s/it]epoch 1 loss 2.38079:  36%|███▌      | 10/28 [00:44<01:49,  6.07s/it]epoch 1 loss 2.38079:  39%|███▉      | 11/28 [00:44<01:13,  4.34s/it]epoch 1 loss 2.36758:  39%|███▉      | 11/28 [00:45<01:13,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5604[0m
[32m  eval_f1 = 0.167[0m
[32m  eval_mcc = 0.5353[0m
[32m  eval_precision = 0.2231[0m
[32m  eval_recall = 0.1571[0m
[32m  ********************[0m
[32m  Best f1:0.167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.36758:  43%|████▎     | 12/28 [00:53<01:33,  5.84s/it]epoch 1 loss 2.34952:  43%|████▎     | 12/28 [00:54<01:33,  5.84s/it]epoch 1 loss 2.34952:  46%|████▋     | 13/28 [00:54<01:02,  4.19s/it]epoch 1 loss 2.32029:  46%|████▋     | 13/28 [00:54<01:02,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5704[0m
[32m  eval_f1 = 0.1768[0m
[32m  eval_mcc = 0.5461[0m
[32m  eval_precision = 0.2225[0m
[32m  eval_recall = 0.1659[0m
[32m  ********************[0m
[32m  Best f1:0.1768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32029:  50%|█████     | 14/28 [01:05<01:27,  6.27s/it]epoch 1 loss 2.29722:  50%|█████     | 14/28 [01:05<01:27,  6.27s/it]epoch 1 loss 2.29722:  54%|█████▎    | 15/28 [01:05<00:58,  4.51s/it]epoch 1 loss 2.28054:  54%|█████▎    | 15/28 [01:06<00:58,  4.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5784[0m
[32m  eval_f1 = 0.1829[0m
[32m  eval_mcc = 0.5535[0m
[32m  eval_precision = 0.2183[0m
[32m  eval_recall = 0.1744[0m
[32m  ********************[0m
[32m  Best f1:0.1829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.28054:  57%|█████▋    | 16/28 [01:15<01:11,  5.93s/it]epoch 1 loss 2.26142:  57%|█████▋    | 16/28 [01:15<01:11,  5.93s/it]epoch 1 loss 2.26142:  61%|██████    | 17/28 [01:15<00:47,  4.28s/it]epoch 1 loss 2.23739:  61%|██████    | 17/28 [01:15<00:47,  4.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.57it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5804[0m
[32m  eval_f1 = 0.1859[0m
[32m  eval_mcc = 0.5545[0m
[32m  eval_precision = 0.2251[0m
[32m  eval_recall = 0.1792[0m
[32m  ********************[0m
[32m  Best f1:0.1859[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23739:  64%|██████▍   | 18/28 [01:26<01:02,  6.28s/it]epoch 1 loss 2.22076:  64%|██████▍   | 18/28 [01:26<01:02,  6.28s/it]epoch 1 loss 2.22076:  68%|██████▊   | 19/28 [01:26<00:40,  4.52s/it]epoch 1 loss 2.2112:  68%|██████▊   | 19/28 [01:27<00:40,  4.52s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5797[0m
[32m  eval_f1 = 0.191[0m
[32m  eval_mcc = 0.5539[0m
[32m  eval_precision = 0.2558[0m
[32m  eval_recall = 0.1833[0m
[32m  ********************[0m
[32m  Best f1:0.191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.2112:  71%|███████▏  | 20/28 [01:33<00:40,  5.07s/it]epoch 1 loss 2.19159:  71%|███████▏  | 20/28 [01:33<00:40,  5.07s/it]epoch 1 loss 2.19159:  75%|███████▌  | 21/28 [01:33<00:25,  3.67s/it]epoch 1 loss 2.17502:  75%|███████▌  | 21/28 [01:34<00:25,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5887[0m
[32m  eval_f1 = 0.2058[0m
[32m  eval_mcc = 0.5645[0m
[32m  eval_precision = 0.2699[0m
[32m  eval_recall = 0.1964[0m
[32m  ********************[0m
[32m  Best f1:0.2058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17502:  79%|███████▊  | 22/28 [01:45<00:36,  6.11s/it]epoch 1 loss 2.15585:  79%|███████▊  | 22/28 [01:45<00:36,  6.11s/it]epoch 1 loss 2.15585:  82%|████████▏ | 23/28 [01:45<00:22,  4.40s/it]epoch 1 loss 2.14416:  82%|████████▏ | 23/28 [01:46<00:22,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5941[0m
[32m  eval_f1 = 0.2085[0m
[32m  eval_mcc = 0.5722[0m
[32m  eval_precision = 0.2872[0m
[32m  eval_recall = 0.1989[0m
[32m  ********************[0m
[32m  Best f1:0.2085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5722[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.14416:  86%|████████▌ | 24/28 [01:54<00:23,  5.77s/it]epoch 1 loss 2.12993:  86%|████████▌ | 24/28 [01:55<00:23,  5.77s/it]epoch 1 loss 2.12993:  89%|████████▉ | 25/28 [01:55<00:12,  4.16s/it]epoch 1 loss 2.11948:  89%|████████▉ | 25/28 [01:55<00:12,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5979[0m
[32m  eval_f1 = 0.2141[0m
[32m  eval_mcc = 0.5786[0m
[32m  eval_precision = 0.3008[0m
[32m  eval_recall = 0.2014[0m
[32m  ********************[0m
[32m  Best f1:0.2141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11948:  93%|█████████▎| 26/28 [02:04<00:11,  5.59s/it]epoch 1 loss 2.10373:  93%|█████████▎| 26/28 [02:04<00:11,  5.59s/it]epoch 1 loss 2.10373:  96%|█████████▋| 27/28 [02:04<00:04,  4.04s/it]epoch 1 loss 2.08548:  96%|█████████▋| 27/28 [02:04<00:04,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6013[0m
[32m  eval_f1 = 0.2258[0m
[32m  eval_mcc = 0.5816[0m
[32m  eval_precision = 0.312[0m
[32m  eval_recall = 0.2118[0m
[32m  ********************[0m
[32m  Best f1:0.2258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5816[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08548: 100%|██████████| 28/28 [02:12<00:00,  5.12s/it]epoch 1 loss 2.08548: 100%|██████████| 28/28 [02:12<00:00,  4.72s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.61071:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.61071:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 2 loss 1.59477:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6036[0m
[32m  eval_f1 = 0.2274[0m
[32m  eval_mcc = 0.5827[0m
[32m  eval_precision = 0.3151[0m
[32m  eval_recall = 0.2126[0m
[32m  ********************[0m
[32m  Best f1:0.2274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59477:   7%|▋         | 2/28 [00:09<02:17,  5.30s/it]epoch 2 loss 1.61141:   7%|▋         | 2/28 [00:09<02:17,  5.30s/it]epoch 2 loss 1.61141:  11%|█         | 3/28 [00:09<01:16,  3.07s/it]epoch 2 loss 1.61855:  11%|█         | 3/28 [00:09<01:16,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6038[0m
[32m  eval_f1 = 0.2297[0m
[32m  eval_mcc = 0.5815[0m
[32m  eval_precision = 0.3164[0m
[32m  eval_recall = 0.2142[0m
[32m  ********************[0m
[32m  Best f1:0.2297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.61855:  14%|█▍        | 4/28 [00:15<01:42,  4.29s/it]epoch 2 loss 1.62666:  14%|█▍        | 4/28 [00:16<01:42,  4.29s/it]epoch 2 loss 1.62666:  18%|█▊        | 5/28 [00:16<01:06,  2.89s/it]epoch 2 loss 1.62163:  18%|█▊        | 5/28 [00:16<01:06,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6035[0m
[32m  eval_f1 = 0.234[0m
[32m  eval_mcc = 0.5803[0m
[32m  eval_precision = 0.3279[0m
[32m  eval_recall = 0.2184[0m
[32m  ********************[0m
[32m  Best f1:0.234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.62163:  21%|██▏       | 6/28 [00:20<01:17,  3.54s/it]epoch 2 loss 1.63486:  21%|██▏       | 6/28 [00:21<01:17,  3.54s/it]epoch 2 loss 1.63486:  25%|██▌       | 7/28 [00:21<00:52,  2.51s/it]epoch 2 loss 1.62141:  25%|██▌       | 7/28 [00:21<00:52,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6045[0m
[32m  eval_f1 = 0.2407[0m
[32m  eval_mcc = 0.5815[0m
[32m  eval_precision = 0.3432[0m
[32m  eval_recall = 0.2243[0m
[32m  ********************[0m
[32m  Best f1:0.2407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.62141:  29%|██▊       | 8/28 [00:28<01:20,  4.03s/it]epoch 2 loss 1.62088:  29%|██▊       | 8/28 [00:29<01:20,  4.03s/it]epoch 2 loss 1.62088:  32%|███▏      | 9/28 [00:29<00:55,  2.90s/it]epoch 2 loss 1.63651:  32%|███▏      | 9/28 [00:29<00:55,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6061[0m
[32m  eval_f1 = 0.2415[0m
[32m  eval_mcc = 0.5837[0m
[32m  eval_precision = 0.341[0m
[32m  eval_recall = 0.2253[0m
[32m  ********************[0m
[32m  Best f1:0.2415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5837[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63651:  36%|███▌      | 10/28 [00:36<01:16,  4.28s/it]epoch 2 loss 1.62702:  36%|███▌      | 10/28 [00:36<01:16,  4.28s/it]epoch 2 loss 1.62702:  39%|███▉      | 11/28 [00:36<00:52,  3.10s/it]epoch 2 loss 1.62785:  39%|███▉      | 11/28 [00:37<00:52,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6074[0m
[32m  eval_f1 = 0.2436[0m
[32m  eval_mcc = 0.5852[0m
[32m  eval_precision = 0.3408[0m
[32m  eval_recall = 0.2271[0m
[32m  ********************[0m
[32m  Best f1:0.2436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5852[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62785:  43%|████▎     | 12/28 [00:45<01:16,  4.81s/it]epoch 2 loss 1.62476:  43%|████▎     | 12/28 [00:45<01:16,  4.81s/it]epoch 2 loss 1.62476:  46%|████▋     | 13/28 [00:45<00:52,  3.48s/it]epoch 2 loss 1.63148:  46%|████▋     | 13/28 [00:46<00:52,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6095[0m
[32m  eval_f1 = 0.246[0m
[32m  eval_mcc = 0.5879[0m
[32m  eval_precision = 0.3422[0m
[32m  eval_recall = 0.2298[0m
[32m  ********************[0m
[32m  Best f1:0.246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63148:  50%|█████     | 14/28 [00:52<01:02,  4.48s/it]epoch 2 loss 1.62145:  50%|█████     | 14/28 [00:53<01:02,  4.48s/it]epoch 2 loss 1.62145:  54%|█████▎    | 15/28 [00:53<00:42,  3.26s/it]epoch 2 loss 1.62501:  54%|█████▎    | 15/28 [00:53<00:42,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6123[0m
[32m  eval_f1 = 0.2487[0m
[32m  eval_mcc = 0.5915[0m
[32m  eval_precision = 0.3432[0m
[32m  eval_recall = 0.2321[0m
[32m  ********************[0m
[32m  Best f1:0.2487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5915[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62501:  57%|█████▋    | 16/28 [00:59<00:50,  4.24s/it]epoch 2 loss 1.62307:  57%|█████▋    | 16/28 [01:00<00:50,  4.24s/it]epoch 2 loss 1.62307:  61%|██████    | 17/28 [01:00<00:34,  3.10s/it]epoch 2 loss 1.62188:  61%|██████    | 17/28 [01:00<00:34,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.614[0m
[32m  eval_f1 = 0.2503[0m
[32m  eval_mcc = 0.5936[0m
[32m  eval_precision = 0.3401[0m
[32m  eval_recall = 0.2338[0m
[32m  ********************[0m
[32m  Best f1:0.2503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5936[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62188:  64%|██████▍   | 18/28 [01:10<00:51,  5.19s/it]epoch 2 loss 1.626:  64%|██████▍   | 18/28 [01:10<00:51,  5.19s/it]  epoch 2 loss 1.626:  68%|██████▊   | 19/28 [01:10<00:33,  3.76s/it]epoch 2 loss 1.62691:  68%|██████▊   | 19/28 [01:11<00:33,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6171[0m
[32m  eval_f1 = 0.2556[0m
[32m  eval_mcc = 0.596[0m
[32m  eval_precision = 0.3315[0m
[32m  eval_recall = 0.2387[0m
[32m  ********************[0m
[32m  Best f1:0.2556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62691:  71%|███████▏  | 20/28 [01:19<00:43,  5.41s/it]epoch 2 loss 1.62513:  71%|███████▏  | 20/28 [01:20<00:43,  5.41s/it]epoch 2 loss 1.62513:  75%|███████▌  | 21/28 [01:20<00:27,  3.91s/it]epoch 2 loss 1.61851:  75%|███████▌  | 21/28 [01:20<00:27,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.61it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6191[0m
[32m  eval_f1 = 0.2577[0m
[32m  eval_mcc = 0.5974[0m
[32m  eval_precision = 0.33[0m
[32m  eval_recall = 0.2409[0m
[32m  ********************[0m
[32m  Best f1:0.2577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5974[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61851:  79%|███████▊  | 22/28 [01:31<00:37,  6.17s/it]epoch 2 loss 1.61195:  79%|███████▊  | 22/28 [01:32<00:37,  6.17s/it]epoch 2 loss 1.61195:  82%|████████▏ | 23/28 [01:32<00:22,  4.45s/it]epoch 2 loss 1.61337:  82%|████████▏ | 23/28 [01:32<00:22,  4.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6201[0m
[32m  eval_f1 = 0.2592[0m
[32m  eval_mcc = 0.598[0m
[32m  eval_precision = 0.3392[0m
[32m  eval_recall = 0.2426[0m
[32m  ********************[0m
[32m  Best f1:0.2592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61337:  86%|████████▌ | 24/28 [01:44<00:27,  6.81s/it]epoch 2 loss 1.61297:  86%|████████▌ | 24/28 [01:44<00:27,  6.81s/it]epoch 2 loss 1.61297:  89%|████████▉ | 25/28 [01:44<00:14,  4.89s/it]epoch 2 loss 1.60768:  89%|████████▉ | 25/28 [01:45<00:14,  4.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6209[0m
[32m  eval_f1 = 0.2592[0m
[32m  eval_mcc = 0.5991[0m
[32m  eval_precision = 0.3474[0m
[32m  eval_recall = 0.2426[0m
[32m  ********************[0m
[32m  Best f1:0.2592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60768:  93%|█████████▎| 26/28 [01:53<00:12,  6.14s/it]epoch 2 loss 1.60209:  93%|█████████▎| 26/28 [01:54<00:12,  6.14s/it]epoch 2 loss 1.60209:  96%|█████████▋| 27/28 [01:54<00:04,  4.43s/it]epoch 2 loss 1.60021:  96%|█████████▋| 27/28 [01:54<00:04,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6196[0m
[32m  eval_f1 = 0.2596[0m
[32m  eval_mcc = 0.5983[0m
[32m  eval_precision = 0.3508[0m
[32m  eval_recall = 0.2428[0m
[32m  ********************[0m
[32m  Best f1:0.2596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.60021: 100%|██████████| 28/28 [02:01<00:00,  5.16s/it]epoch 2 loss 1.60021: 100%|██████████| 28/28 [02:01<00:00,  4.33s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.47038:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.47038:   4%|▎         | 1/28 [00:00<00:10,  2.50it/s]epoch 3 loss 1.56541:   4%|▎         | 1/28 [00:00<00:10,  2.50it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6187[0m
[32m  eval_f1 = 0.2603[0m
[32m  eval_mcc = 0.5976[0m
[32m  eval_precision = 0.3689[0m
[32m  eval_recall = 0.2437[0m
[32m  ********************[0m
[32m  Best f1:0.2603[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.56541:   7%|▋         | 2/28 [00:07<01:49,  4.20s/it]epoch 3 loss 1.51999:   7%|▋         | 2/28 [00:07<01:49,  4.20s/it]epoch 3 loss 1.51999:  11%|█         | 3/28 [00:07<01:01,  2.48s/it]epoch 3 loss 1.53899:  11%|█         | 3/28 [00:08<01:01,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6184[0m
[32m  eval_f1 = 0.2638[0m
[32m  eval_mcc = 0.5977[0m
[32m  eval_precision = 0.3627[0m
[32m  eval_recall = 0.2465[0m
[32m  ********************[0m
[32m  Best f1:0.2638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.53899:  14%|█▍        | 4/28 [00:12<01:24,  3.52s/it]epoch 3 loss 1.50843:  14%|█▍        | 4/28 [00:13<01:24,  3.52s/it]epoch 3 loss 1.50843:  18%|█▊        | 5/28 [00:13<00:55,  2.40s/it]epoch 3 loss 1.52924:  18%|█▊        | 5/28 [00:13<00:55,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.619[0m
[32m  eval_f1 = 0.267[0m
[32m  eval_mcc = 0.5987[0m
[32m  eval_precision = 0.3652[0m
[32m  eval_recall = 0.2497[0m
[32m  ********************[0m
[32m  Best f1:0.267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.52924:  21%|██▏       | 6/28 [00:21<01:33,  4.27s/it]epoch 3 loss 1.53579:  21%|██▏       | 6/28 [00:21<01:33,  4.27s/it]epoch 3 loss 1.53579:  25%|██▌       | 7/28 [00:21<01:03,  3.01s/it]epoch 3 loss 1.55167:  25%|██▌       | 7/28 [00:21<01:03,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6212[0m
[32m  eval_f1 = 0.2691[0m
[32m  eval_mcc = 0.6011[0m
[32m  eval_precision = 0.3611[0m
[32m  eval_recall = 0.2529[0m
[32m  ********************[0m
[32m  Best f1:0.2691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.55167:  29%|██▊       | 8/28 [00:30<01:37,  4.87s/it]epoch 3 loss 1.53039:  29%|██▊       | 8/28 [00:30<01:37,  4.87s/it]epoch 3 loss 1.53039:  32%|███▏      | 9/28 [00:30<01:06,  3.48s/it]epoch 3 loss 1.53549:  32%|███▏      | 9/28 [00:31<01:06,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.623[0m
[32m  eval_f1 = 0.2703[0m
[32m  eval_mcc = 0.6026[0m
[32m  eval_precision = 0.3605[0m
[32m  eval_recall = 0.254[0m
[32m  ********************[0m
[32m  Best f1:0.2703[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.53549:  36%|███▌      | 10/28 [00:39<01:30,  5.04s/it]epoch 3 loss 1.543:  36%|███▌      | 10/28 [00:39<01:30,  5.04s/it]  epoch 3 loss 1.543:  39%|███▉      | 11/28 [00:39<01:01,  3.63s/it]epoch 3 loss 1.53614:  39%|███▉      | 11/28 [00:40<01:01,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.625[0m
[32m  eval_f1 = 0.2742[0m
[32m  eval_mcc = 0.6045[0m
[32m  eval_precision = 0.3667[0m
[32m  eval_recall = 0.2571[0m
[32m  ********************[0m
[32m  Best f1:0.2742[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.53614:  43%|████▎     | 12/28 [00:48<01:23,  5.21s/it]epoch 3 loss 1.52542:  43%|████▎     | 12/28 [00:49<01:23,  5.21s/it]epoch 3 loss 1.52542:  46%|████▋     | 13/28 [00:49<00:56,  3.76s/it]epoch 3 loss 1.51489:  46%|████▋     | 13/28 [00:49<00:56,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.627[0m
[32m  eval_f1 = 0.2761[0m
[32m  eval_mcc = 0.6067[0m
[32m  eval_precision = 0.3691[0m
[32m  eval_recall = 0.2585[0m
[32m  ********************[0m
[32m  Best f1:0.2761[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.51489:  50%|█████     | 14/28 [00:57<01:10,  5.04s/it]epoch 3 loss 1.50898:  50%|█████     | 14/28 [00:57<01:10,  5.04s/it]epoch 3 loss 1.50898:  54%|█████▎    | 15/28 [00:57<00:47,  3.65s/it]epoch 3 loss 1.50817:  54%|█████▎    | 15/28 [00:57<00:47,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6288[0m
[32m  eval_f1 = 0.2759[0m
[32m  eval_mcc = 0.6083[0m
[32m  eval_precision = 0.3668[0m
[32m  eval_recall = 0.2579[0m
[32m  ********************[0m
[32m  Best MCC:0.6083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50817:  57%|█████▋    | 16/28 [01:02<00:48,  4.03s/it]epoch 3 loss 1.505:  57%|█████▋    | 16/28 [01:02<00:48,  4.03s/it]  epoch 3 loss 1.505:  61%|██████    | 17/28 [01:02<00:32,  2.94s/it]epoch 3 loss 1.50703:  61%|██████    | 17/28 [01:03<00:32,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6304[0m
[32m  eval_f1 = 0.2776[0m
[32m  eval_mcc = 0.6093[0m
[32m  eval_precision = 0.3741[0m
[32m  eval_recall = 0.2604[0m
[32m  ********************[0m
[32m  Best f1:0.2776[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50703:  64%|██████▍   | 18/28 [01:11<00:47,  4.77s/it]epoch 3 loss 1.5072:  64%|██████▍   | 18/28 [01:12<00:47,  4.77s/it] epoch 3 loss 1.5072:  68%|██████▊   | 19/28 [01:12<00:31,  3.46s/it]epoch 3 loss 1.50267:  68%|██████▊   | 19/28 [01:12<00:31,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6318[0m
[32m  eval_f1 = 0.2784[0m
[32m  eval_mcc = 0.6106[0m
[32m  eval_precision = 0.3794[0m
[32m  eval_recall = 0.2617[0m
[32m  ********************[0m
[32m  Best f1:0.2784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50267:  71%|███████▏  | 20/28 [01:18<00:34,  4.34s/it]epoch 3 loss 1.50118:  71%|███████▏  | 20/28 [01:19<00:34,  4.34s/it]epoch 3 loss 1.50118:  75%|███████▌  | 21/28 [01:19<00:22,  3.17s/it]epoch 3 loss 1.50018:  75%|███████▌  | 21/28 [01:19<00:22,  3.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6312[0m
[32m  eval_f1 = 0.2785[0m
[32m  eval_mcc = 0.61[0m
[32m  eval_precision = 0.3796[0m
[32m  eval_recall = 0.2618[0m
[32m  ********************[0m
[32m  Best f1:0.2785[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.50018:  79%|███████▊  | 22/28 [01:24<00:22,  3.73s/it]epoch 3 loss 1.49629:  79%|███████▊  | 22/28 [01:24<00:22,  3.73s/it]epoch 3 loss 1.49629:  82%|████████▏ | 23/28 [01:24<00:13,  2.73s/it]epoch 3 loss 1.49528:  82%|████████▏ | 23/28 [01:24<00:13,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6306[0m
[32m  eval_f1 = 0.2784[0m
[32m  eval_mcc = 0.6095[0m
[32m  eval_precision = 0.3801[0m
[32m  eval_recall = 0.2612[0m

epoch 3 loss 1.49528:  86%|████████▌ | 24/28 [01:28<00:12,  3.05s/it]epoch 3 loss 1.49009:  86%|████████▌ | 24/28 [01:28<00:12,  3.05s/it]epoch 3 loss 1.49009:  89%|████████▉ | 25/28 [01:28<00:06,  2.25s/it]epoch 3 loss 1.48526:  89%|████████▉ | 25/28 [01:29<00:06,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6296[0m
[32m  eval_f1 = 0.2782[0m
[32m  eval_mcc = 0.6085[0m
[32m  eval_precision = 0.3806[0m
[32m  eval_recall = 0.2602[0m

epoch 3 loss 1.48526:  93%|█████████▎| 26/28 [01:32<00:05,  2.71s/it]epoch 3 loss 1.48392:  93%|█████████▎| 26/28 [01:32<00:05,  2.71s/it]epoch 3 loss 1.48392:  96%|█████████▋| 27/28 [01:32<00:02,  2.02s/it]epoch 3 loss 1.4959:  96%|█████████▋| 27/28 [01:33<00:02,  2.02s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6291[0m
[32m  eval_f1 = 0.2777[0m
[32m  eval_mcc = 0.608[0m
[32m  eval_precision = 0.3805[0m
[32m  eval_recall = 0.2595[0m

epoch 3 loss 1.4959: 100%|██████████| 28/28 [01:36<00:00,  2.49s/it]epoch 3 loss 1.4959: 100%|██████████| 28/28 [01:36<00:00,  3.44s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.40751:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.40751:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s]epoch 4 loss 1.41343:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6295[0m
[32m  eval_f1 = 0.2788[0m
[32m  eval_mcc = 0.6084[0m
[32m  eval_precision = 0.3812[0m
[32m  eval_recall = 0.2601[0m
[32m  ********************[0m
[32m  Best f1:0.2788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.41343:   7%|▋         | 2/28 [00:05<01:22,  3.18s/it]epoch 4 loss 1.4209:   7%|▋         | 2/28 [00:05<01:22,  3.18s/it] epoch 4 loss 1.4209:  11%|█         | 3/28 [00:05<00:47,  1.91s/it]epoch 4 loss 1.41109:  11%|█         | 3/28 [00:06<00:47,  1.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.58it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6297[0m
[32m  eval_f1 = 0.2793[0m
[32m  eval_mcc = 0.6086[0m
[32m  eval_precision = 0.3805[0m
[32m  eval_recall = 0.2604[0m
[32m  ********************[0m
[32m  Best f1:0.2793[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.41109:  14%|█▍        | 4/28 [00:13<01:35,  4.00s/it]epoch 4 loss 1.41801:  14%|█▍        | 4/28 [00:13<01:35,  4.00s/it]epoch 4 loss 1.41801:  18%|█▊        | 5/28 [00:13<01:02,  2.70s/it]epoch 4 loss 1.45308:  18%|█▊        | 5/28 [00:13<01:02,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6306[0m
[32m  eval_f1 = 0.2796[0m
[32m  eval_mcc = 0.6097[0m
[32m  eval_precision = 0.382[0m
[32m  eval_recall = 0.2605[0m
[32m  ********************[0m
[32m  Best f1:0.2796[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.45308:  21%|██▏       | 6/28 [00:21<01:38,  4.50s/it]epoch 4 loss 1.43904:  21%|██▏       | 6/28 [00:21<01:38,  4.50s/it]epoch 4 loss 1.43904:  25%|██▌       | 7/28 [00:21<01:06,  3.17s/it]epoch 4 loss 1.43786:  25%|██▌       | 7/28 [00:22<01:06,  3.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6314[0m
[32m  eval_f1 = 0.28[0m
[32m  eval_mcc = 0.6108[0m
[32m  eval_precision = 0.3825[0m
[32m  eval_recall = 0.2608[0m
[32m  ********************[0m
[32m  Best f1:0.28[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.43786:  29%|██▊       | 8/28 [00:31<01:45,  5.28s/it]epoch 4 loss 1.45168:  29%|██▊       | 8/28 [00:32<01:45,  5.28s/it]epoch 4 loss 1.45168:  32%|███▏      | 9/28 [00:32<01:11,  3.77s/it]epoch 4 loss 1.44647:  32%|███▏      | 9/28 [00:32<01:11,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6325[0m
[32m  eval_f1 = 0.2806[0m
[32m  eval_mcc = 0.6121[0m
[32m  eval_precision = 0.3824[0m
[32m  eval_recall = 0.2613[0m
[32m  ********************[0m
[32m  Best f1:0.2806[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.44647:  36%|███▌      | 10/28 [00:41<01:40,  5.58s/it]epoch 4 loss 1.44703:  36%|███▌      | 10/28 [00:42<01:40,  5.58s/it]epoch 4 loss 1.44703:  39%|███▉      | 11/28 [00:42<01:08,  4.00s/it]epoch 4 loss 1.45653:  39%|███▉      | 11/28 [00:42<01:08,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.633[0m
[32m  eval_f1 = 0.2812[0m
[32m  eval_mcc = 0.6127[0m
[32m  eval_precision = 0.3837[0m
[32m  eval_recall = 0.2617[0m
[32m  ********************[0m
[32m  Best f1:0.2812[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6127[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45653:  43%|████▎     | 12/28 [00:52<01:32,  5.75s/it]epoch 4 loss 1.45806:  43%|████▎     | 12/28 [00:52<01:32,  5.75s/it]epoch 4 loss 1.45806:  46%|████▋     | 13/28 [00:52<01:02,  4.14s/it]epoch 4 loss 1.45907:  46%|████▋     | 13/28 [00:52<01:02,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6335[0m
[32m  eval_f1 = 0.2822[0m
[32m  eval_mcc = 0.6131[0m
[32m  eval_precision = 0.3852[0m
[32m  eval_recall = 0.2626[0m
[32m  ********************[0m
[32m  Best f1:0.2822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45907:  50%|█████     | 14/28 [01:03<01:27,  6.22s/it]epoch 4 loss 1.45853:  50%|█████     | 14/28 [01:03<01:27,  6.22s/it]epoch 4 loss 1.45853:  54%|█████▎    | 15/28 [01:03<00:58,  4.48s/it]epoch 4 loss 1.45948:  54%|█████▎    | 15/28 [01:04<00:58,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6338[0m
[32m  eval_f1 = 0.2816[0m
[32m  eval_mcc = 0.6136[0m
[32m  eval_precision = 0.3835[0m
[32m  eval_recall = 0.2622[0m
[32m  ********************[0m
[32m  Best MCC:0.6136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45948:  57%|█████▋    | 16/28 [01:08<00:55,  4.64s/it]epoch 4 loss 1.45755:  57%|█████▋    | 16/28 [01:09<00:55,  4.64s/it]epoch 4 loss 1.45755:  61%|██████    | 17/28 [01:09<00:37,  3.37s/it]epoch 4 loss 1.45533:  61%|██████    | 17/28 [01:09<00:37,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6346[0m
[32m  eval_f1 = 0.2827[0m
[32m  eval_mcc = 0.6144[0m
[32m  eval_precision = 0.3838[0m
[32m  eval_recall = 0.2633[0m
[32m  ********************[0m
[32m  Best f1:0.2827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45533:  64%|██████▍   | 18/28 [01:16<00:44,  4.48s/it]epoch 4 loss 1.45547:  64%|██████▍   | 18/28 [01:16<00:44,  4.48s/it]epoch 4 loss 1.45547:  68%|██████▊   | 19/28 [01:16<00:29,  3.26s/it]epoch 4 loss 1.45425:  68%|██████▊   | 19/28 [01:17<00:29,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6346[0m
[32m  eval_f1 = 0.2825[0m
[32m  eval_mcc = 0.6144[0m
[32m  eval_precision = 0.3837[0m
[32m  eval_recall = 0.2633[0m

epoch 4 loss 1.45425:  71%|███████▏  | 20/28 [01:20<00:27,  3.42s/it]epoch 4 loss 1.45726:  71%|███████▏  | 20/28 [01:20<00:27,  3.42s/it]epoch 4 loss 1.45726:  75%|███████▌  | 21/28 [01:20<00:17,  2.51s/it]epoch 4 loss 1.46149:  75%|███████▌  | 21/28 [01:21<00:17,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6347[0m
[32m  eval_f1 = 0.2824[0m
[32m  eval_mcc = 0.6145[0m
[32m  eval_precision = 0.3827[0m
[32m  eval_recall = 0.2634[0m
[32m  ********************[0m
[32m  Best MCC:0.6145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.46149:  79%|███████▊  | 22/28 [01:26<00:19,  3.29s/it]epoch 4 loss 1.45661:  79%|███████▊  | 22/28 [01:26<00:19,  3.29s/it]epoch 4 loss 1.45661:  82%|████████▏ | 23/28 [01:26<00:12,  2.43s/it]epoch 4 loss 1.45513:  82%|████████▏ | 23/28 [01:26<00:12,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6347[0m
[32m  eval_f1 = 0.2823[0m
[32m  eval_mcc = 0.6145[0m
[32m  eval_precision = 0.3824[0m
[32m  eval_recall = 0.2633[0m
[32m  ********************[0m
[32m  Best MCC:0.6145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.45513:  86%|████████▌ | 24/28 [01:31<00:12,  3.14s/it]epoch 4 loss 1.4523:  86%|████████▌ | 24/28 [01:31<00:12,  3.14s/it] epoch 4 loss 1.4523:  89%|████████▉ | 25/28 [01:31<00:06,  2.32s/it]epoch 4 loss 1.44822:  89%|████████▉ | 25/28 [01:32<00:06,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.635[0m
[32m  eval_f1 = 0.2822[0m
[32m  eval_mcc = 0.6148[0m
[32m  eval_precision = 0.3823[0m
[32m  eval_recall = 0.2632[0m
[32m  ********************[0m
[32m  Best MCC:0.6148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.44822:  93%|█████████▎| 26/28 [01:39<00:07,  3.92s/it]epoch 4 loss 1.44648:  93%|█████████▎| 26/28 [01:39<00:07,  3.92s/it]epoch 4 loss 1.44648:  96%|█████████▋| 27/28 [01:39<00:02,  2.87s/it]epoch 4 loss 1.44206:  96%|█████████▋| 27/28 [01:40<00:02,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.635[0m
[32m  eval_f1 = 0.282[0m
[32m  eval_mcc = 0.6148[0m
[32m  eval_precision = 0.3822[0m
[32m  eval_recall = 0.2631[0m
[32m  ********************[0m
[32m  Best MCC:0.6148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.44206: 100%|██████████| 28/28 [01:44<00:00,  3.49s/it]epoch 4 loss 1.44206: 100%|██████████| 28/28 [01:44<00:00,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6346[0m
[32m  eval_f1 = 0.2827[0m
[32m  eval_mcc = 0.6144[0m
[32m  eval_precision = 0.3838[0m
[32m  eval_recall = 0.2633[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6147[0m
[32m  eval_f1 = 0.2245[0m
[32m  eval_mcc = 0.5942[0m
[32m  eval_precision = 0.3059[0m
[32m  eval_recall = 0.2104[0m

