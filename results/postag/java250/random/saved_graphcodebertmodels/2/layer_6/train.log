[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=6, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.69414:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.69414:   4%|▎         | 1/28 [00:00<00:20,  1.29it/s]epoch 0 loss 5.69036:   4%|▎         | 1/28 [00:01<00:20,  1.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0011[0m
[32m  eval_f1 = 0.0003[0m
[32m  eval_mcc = -0.0013[0m
[32m  eval_precision = 0.0017[0m
[32m  eval_recall = 0.0017[0m
[32m  ********************[0m
[32m  Best f1:0.0003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.69036:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 0 loss 5.68683:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 0 loss 5.68683:  11%|█         | 3/28 [00:05<00:47,  1.88s/it]epoch 0 loss 5.67051:  11%|█         | 3/28 [00:06<00:47,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0038[0m
[32m  eval_f1 = 0.0008[0m
[32m  eval_mcc = -0.0007[0m
[32m  eval_precision = 0.0036[0m
[32m  eval_recall = 0.0019[0m
[32m  ********************[0m
[32m  Best f1:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.67051:  14%|█▍        | 4/28 [00:11<01:15,  3.16s/it]epoch 0 loss 5.64866:  14%|█▍        | 4/28 [00:11<01:15,  3.16s/it]epoch 0 loss 5.64866:  18%|█▊        | 5/28 [00:11<00:49,  2.17s/it]epoch 0 loss 5.62053:  18%|█▊        | 5/28 [00:11<00:49,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0185[0m
[32m  eval_f1 = 0.0038[0m
[32m  eval_mcc = 0.0075[0m
[32m  eval_precision = 0.006[0m
[32m  eval_recall = 0.0064[0m
[32m  ********************[0m
[32m  Best f1:0.0038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.62053:  21%|██▏       | 6/28 [00:17<01:15,  3.41s/it]epoch 0 loss 5.5829:  21%|██▏       | 6/28 [00:17<01:15,  3.41s/it] epoch 0 loss 5.5829:  25%|██▌       | 7/28 [00:17<00:51,  2.43s/it]epoch 0 loss 5.53755:  25%|██▌       | 7/28 [00:18<00:51,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0463[0m
[32m  eval_f1 = 0.0091[0m
[32m  eval_mcc = 0.0182[0m
[32m  eval_precision = 0.0115[0m
[32m  eval_recall = 0.0119[0m
[32m  ********************[0m
[32m  Best f1:0.0091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.53755:  29%|██▊       | 8/28 [00:24<01:19,  3.96s/it]epoch 0 loss 5.48652:  29%|██▊       | 8/28 [00:25<01:19,  3.96s/it]epoch 0 loss 5.48652:  32%|███▏      | 9/28 [00:25<00:54,  2.85s/it]epoch 0 loss 5.43157:  32%|███▏      | 9/28 [00:25<00:54,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0756[0m
[32m  eval_f1 = 0.0155[0m
[32m  eval_mcc = 0.0312[0m
[32m  eval_precision = 0.0162[0m
[32m  eval_recall = 0.0214[0m
[32m  ********************[0m
[32m  Best f1:0.0155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.43157:  36%|███▌      | 10/28 [00:34<01:24,  4.67s/it]epoch 0 loss 5.3681:  36%|███▌      | 10/28 [00:34<01:24,  4.67s/it] epoch 0 loss 5.3681:  39%|███▉      | 11/28 [00:34<00:57,  3.37s/it]epoch 0 loss 5.30155:  39%|███▉      | 11/28 [00:34<00:57,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0971[0m
[32m  eval_f1 = 0.0226[0m
[32m  eval_mcc = 0.0489[0m
[32m  eval_precision = 0.032[0m
[32m  eval_recall = 0.0278[0m
[32m  ********************[0m
[32m  Best f1:0.0226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.30155:  43%|████▎     | 12/28 [00:41<01:12,  4.53s/it]epoch 0 loss 5.23037:  43%|████▎     | 12/28 [00:42<01:12,  4.53s/it]epoch 0 loss 5.23037:  46%|████▋     | 13/28 [00:42<00:49,  3.28s/it]epoch 0 loss 5.15705:  46%|████▋     | 13/28 [00:42<00:49,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1256[0m
[32m  eval_f1 = 0.0292[0m
[32m  eval_mcc = 0.0777[0m
[32m  eval_precision = 0.0472[0m
[32m  eval_recall = 0.0332[0m
[32m  ********************[0m
[32m  Best f1:0.0292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15705:  50%|█████     | 14/28 [00:51<01:10,  5.00s/it]epoch 0 loss 5.07808:  50%|█████     | 14/28 [00:51<01:10,  5.00s/it]epoch 0 loss 5.07808:  54%|█████▎    | 15/28 [00:51<00:47,  3.62s/it]epoch 0 loss 4.99542:  54%|█████▎    | 15/28 [00:51<00:47,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1532[0m
[32m  eval_f1 = 0.035[0m
[32m  eval_mcc = 0.1064[0m
[32m  eval_precision = 0.0592[0m
[32m  eval_recall = 0.0375[0m
[32m  ********************[0m
[32m  Best f1:0.035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.99542:  57%|█████▋    | 16/28 [00:59<01:00,  5.06s/it]epoch 0 loss 4.92111:  57%|█████▋    | 16/28 [01:00<01:00,  5.06s/it]epoch 0 loss 4.92111:  61%|██████    | 17/28 [01:00<00:40,  3.67s/it]epoch 0 loss 4.8449:  61%|██████    | 17/28 [01:00<00:40,  3.67s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2024[0m
[32m  eval_f1 = 0.0443[0m
[32m  eval_mcc = 0.1591[0m
[32m  eval_precision = 0.065[0m
[32m  eval_recall = 0.0454[0m
[32m  ********************[0m
[32m  Best f1:0.0443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.8449:  64%|██████▍   | 18/28 [01:07<00:47,  4.72s/it]epoch 0 loss 4.76494:  64%|██████▍   | 18/28 [01:07<00:47,  4.72s/it]epoch 0 loss 4.76494:  68%|██████▊   | 19/28 [01:07<00:30,  3.44s/it]epoch 0 loss 4.69592:  68%|██████▊   | 19/28 [01:08<00:30,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2589[0m
[32m  eval_f1 = 0.0552[0m
[32m  eval_mcc = 0.2196[0m
[32m  eval_precision = 0.0981[0m
[32m  eval_recall = 0.0543[0m
[32m  ********************[0m
[32m  Best f1:0.0552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.69592:  71%|███████▏  | 20/28 [01:16<00:40,  5.06s/it]epoch 0 loss 4.61927:  71%|███████▏  | 20/28 [01:17<00:40,  5.06s/it]epoch 0 loss 4.61927:  75%|███████▌  | 21/28 [01:17<00:25,  3.66s/it]epoch 0 loss 4.54558:  75%|███████▌  | 21/28 [01:17<00:25,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3278[0m
[32m  eval_f1 = 0.0629[0m
[32m  eval_mcc = 0.2886[0m
[32m  eval_precision = 0.1242[0m
[32m  eval_recall = 0.0611[0m
[32m  ********************[0m
[32m  Best f1:0.0629[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2886[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.54558:  79%|███████▊  | 22/28 [01:25<00:30,  5.10s/it]epoch 0 loss 4.47536:  79%|███████▊  | 22/28 [01:26<00:30,  5.10s/it]epoch 0 loss 4.47536:  82%|████████▏ | 23/28 [01:26<00:18,  3.70s/it]epoch 0 loss 4.40408:  82%|████████▏ | 23/28 [01:26<00:18,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3917[0m
[32m  eval_f1 = 0.0833[0m
[32m  eval_mcc = 0.3501[0m
[32m  eval_precision = 0.1461[0m
[32m  eval_recall = 0.0793[0m
[32m  ********************[0m
[32m  Best f1:0.0833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3501[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.40408:  86%|████████▌ | 24/28 [01:34<00:20,  5.21s/it]epoch 0 loss 4.33933:  86%|████████▌ | 24/28 [01:35<00:20,  5.21s/it]epoch 0 loss 4.33933:  89%|████████▉ | 25/28 [01:35<00:11,  3.78s/it]epoch 0 loss 4.27553:  89%|████████▉ | 25/28 [01:35<00:11,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4261[0m
[32m  eval_f1 = 0.0995[0m
[32m  eval_mcc = 0.3879[0m
[32m  eval_precision = 0.1575[0m
[32m  eval_recall = 0.0923[0m
[32m  ********************[0m
[32m  Best f1:0.0995[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.27553:  93%|█████████▎| 26/28 [01:43<00:10,  5.06s/it]epoch 0 loss 4.21459:  93%|█████████▎| 26/28 [01:43<00:10,  5.06s/it]epoch 0 loss 4.21459:  96%|█████████▋| 27/28 [01:43<00:03,  3.67s/it]epoch 0 loss 4.15763:  96%|█████████▋| 27/28 [01:43<00:03,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4536[0m
[32m  eval_f1 = 0.1209[0m
[32m  eval_mcc = 0.4241[0m
[32m  eval_precision = 0.1804[0m
[32m  eval_recall = 0.1105[0m
[32m  ********************[0m
[32m  Best f1:0.1209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.15763: 100%|██████████| 28/28 [01:52<00:00,  5.19s/it]epoch 0 loss 4.15763: 100%|██████████| 28/28 [01:52<00:00,  4.02s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.41947:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.41947:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 1 loss 2.33766:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4886[0m
[32m  eval_f1 = 0.1356[0m
[32m  eval_mcc = 0.4632[0m
[32m  eval_precision = 0.1839[0m
[32m  eval_recall = 0.126[0m
[32m  ********************[0m
[32m  Best f1:0.1356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.33766:   7%|▋         | 2/28 [00:06<01:43,  3.98s/it]epoch 1 loss 2.30821:   7%|▋         | 2/28 [00:07<01:43,  3.98s/it]epoch 1 loss 2.30821:  11%|█         | 3/28 [00:07<00:58,  2.36s/it]epoch 1 loss 2.27966:  11%|█         | 3/28 [00:07<00:58,  2.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5262[0m
[32m  eval_f1 = 0.1508[0m
[32m  eval_mcc = 0.5008[0m
[32m  eval_precision = 0.1979[0m
[32m  eval_recall = 0.1453[0m
[32m  ********************[0m
[32m  Best f1:0.1508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27966:  14%|█▍        | 4/28 [00:13<01:36,  4.00s/it]epoch 1 loss 2.25586:  14%|█▍        | 4/28 [00:14<01:36,  4.00s/it]epoch 1 loss 2.25586:  18%|█▊        | 5/28 [00:14<01:02,  2.72s/it]epoch 1 loss 2.24378:  18%|█▊        | 5/28 [00:14<01:02,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.558[0m
[32m  eval_f1 = 0.165[0m
[32m  eval_mcc = 0.5324[0m
[32m  eval_precision = 0.2062[0m
[32m  eval_recall = 0.1607[0m
[32m  ********************[0m
[32m  Best f1:0.165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.24378:  21%|██▏       | 6/28 [00:20<01:28,  4.03s/it]epoch 1 loss 2.2261:  21%|██▏       | 6/28 [00:21<01:28,  4.03s/it] epoch 1 loss 2.2261:  25%|██▌       | 7/28 [00:21<00:59,  2.85s/it]epoch 1 loss 2.19783:  25%|██▌       | 7/28 [00:21<00:59,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.574[0m
[32m  eval_f1 = 0.1799[0m
[32m  eval_mcc = 0.5483[0m
[32m  eval_precision = 0.2149[0m
[32m  eval_recall = 0.1756[0m
[32m  ********************[0m
[32m  Best f1:0.1799[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.19783:  29%|██▊       | 8/28 [00:31<01:42,  5.13s/it]epoch 1 loss 2.16379:  29%|██▊       | 8/28 [00:31<01:42,  5.13s/it]epoch 1 loss 2.16379:  32%|███▏      | 9/28 [00:31<01:09,  3.66s/it]epoch 1 loss 2.12779:  32%|███▏      | 9/28 [00:32<01:09,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5826[0m
[32m  eval_f1 = 0.1863[0m
[32m  eval_mcc = 0.5576[0m
[32m  eval_precision = 0.2332[0m
[32m  eval_recall = 0.18[0m
[32m  ********************[0m
[32m  Best f1:0.1863[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12779:  36%|███▌      | 10/28 [00:48<02:18,  7.71s/it]epoch 1 loss 2.10361:  36%|███▌      | 10/28 [00:48<02:18,  7.71s/it]epoch 1 loss 2.10361:  39%|███▉      | 11/28 [00:48<01:33,  5.48s/it]epoch 1 loss 2.09296:  39%|███▉      | 11/28 [00:49<01:33,  5.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5847[0m
[32m  eval_f1 = 0.1909[0m
[32m  eval_mcc = 0.5605[0m
[32m  eval_precision = 0.2471[0m
[32m  eval_recall = 0.1819[0m
[32m  ********************[0m
[32m  Best f1:0.1909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09296:  43%|████▎     | 12/28 [01:04<02:15,  8.46s/it]epoch 1 loss 2.07605:  43%|████▎     | 12/28 [01:04<02:15,  8.46s/it]epoch 1 loss 2.07605:  46%|████▋     | 13/28 [01:04<01:30,  6.02s/it]epoch 1 loss 2.0474:  46%|████▋     | 13/28 [01:05<01:30,  6.02s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5887[0m
[32m  eval_f1 = 0.1936[0m
[32m  eval_mcc = 0.5658[0m
[32m  eval_precision = 0.2503[0m
[32m  eval_recall = 0.1832[0m
[32m  ********************[0m
[32m  Best f1:0.1936[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0474:  50%|█████     | 14/28 [01:16<01:50,  7.93s/it]epoch 1 loss 2.02667:  50%|█████     | 14/28 [01:17<01:50,  7.93s/it]epoch 1 loss 2.02667:  54%|█████▎    | 15/28 [01:17<01:13,  5.67s/it]epoch 1 loss 2.013:  54%|█████▎    | 15/28 [01:17<01:13,  5.67s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5952[0m
[32m  eval_f1 = 0.2051[0m
[32m  eval_mcc = 0.5733[0m
[32m  eval_precision = 0.2993[0m
[32m  eval_recall = 0.1919[0m
[32m  ********************[0m
[32m  Best f1:0.2051[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5733[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.013:  57%|█████▋    | 16/28 [01:26<01:21,  6.76s/it]epoch 1 loss 1.99608:  57%|█████▋    | 16/28 [01:27<01:21,  6.76s/it]epoch 1 loss 1.99608:  61%|██████    | 17/28 [01:27<00:53,  4.86s/it]epoch 1 loss 1.97421:  61%|██████    | 17/28 [01:27<00:53,  4.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.55it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5999[0m
[32m  eval_f1 = 0.2184[0m
[32m  eval_mcc = 0.5773[0m
[32m  eval_precision = 0.3104[0m
[32m  eval_recall = 0.2035[0m
[32m  ********************[0m
[32m  Best f1:0.2184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97421:  64%|██████▍   | 18/28 [01:38<01:07,  6.78s/it]epoch 1 loss 1.95914:  64%|██████▍   | 18/28 [01:38<01:07,  6.78s/it]epoch 1 loss 1.95914:  68%|██████▊   | 19/28 [01:38<00:43,  4.87s/it]epoch 1 loss 1.95149:  68%|██████▊   | 19/28 [01:39<00:43,  4.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6046[0m
[32m  eval_f1 = 0.2422[0m
[32m  eval_mcc = 0.5818[0m
[32m  eval_precision = 0.3238[0m
[32m  eval_recall = 0.2268[0m
[32m  ********************[0m
[32m  Best f1:0.2422[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95149:  71%|███████▏  | 20/28 [01:48<00:49,  6.19s/it]epoch 1 loss 1.93355:  71%|███████▏  | 20/28 [01:48<00:49,  6.19s/it]epoch 1 loss 1.93355:  75%|███████▌  | 21/28 [01:48<00:31,  4.46s/it]epoch 1 loss 1.9186:  75%|███████▌  | 21/28 [01:48<00:31,  4.46s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6083[0m
[32m  eval_f1 = 0.2474[0m
[32m  eval_mcc = 0.5859[0m
[32m  eval_precision = 0.3349[0m
[32m  eval_recall = 0.2333[0m
[32m  ********************[0m
[32m  Best f1:0.2474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5859[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9186:  79%|███████▊  | 22/28 [01:59<00:37,  6.32s/it]epoch 1 loss 1.90072:  79%|███████▊  | 22/28 [01:59<00:37,  6.32s/it]epoch 1 loss 1.90072:  82%|████████▏ | 23/28 [01:59<00:22,  4.56s/it]epoch 1 loss 1.89011:  82%|████████▏ | 23/28 [01:59<00:22,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6109[0m
[32m  eval_f1 = 0.2518[0m
[32m  eval_mcc = 0.589[0m
[32m  eval_precision = 0.3532[0m
[32m  eval_recall = 0.2372[0m
[32m  ********************[0m
[32m  Best f1:0.2518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89011:  86%|████████▌ | 24/28 [02:08<00:23,  5.77s/it]epoch 1 loss 1.87736:  86%|████████▌ | 24/28 [02:08<00:23,  5.77s/it]epoch 1 loss 1.87736:  89%|████████▉ | 25/28 [02:08<00:12,  4.16s/it]epoch 1 loss 1.86896:  89%|████████▉ | 25/28 [02:09<00:12,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6152[0m
[32m  eval_f1 = 0.256[0m
[32m  eval_mcc = 0.5945[0m
[32m  eval_precision = 0.3421[0m
[32m  eval_recall = 0.2402[0m
[32m  ********************[0m
[32m  Best f1:0.256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86896:  93%|█████████▎| 26/28 [02:19<00:12,  6.23s/it]epoch 1 loss 1.85473:  93%|█████████▎| 26/28 [02:20<00:12,  6.23s/it]epoch 1 loss 1.85473:  96%|█████████▋| 27/28 [02:20<00:04,  4.49s/it]epoch 1 loss 1.83832:  96%|█████████▋| 27/28 [02:20<00:04,  4.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6187[0m
[32m  eval_f1 = 0.2574[0m
[32m  eval_mcc = 0.5984[0m
[32m  eval_precision = 0.3487[0m
[32m  eval_recall = 0.2415[0m
[32m  ********************[0m
[32m  Best f1:0.2574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83832: 100%|██████████| 28/28 [02:27<00:00,  5.29s/it]epoch 1 loss 1.83832: 100%|██████████| 28/28 [02:27<00:00,  5.26s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.38955:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.38955:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 2 loss 1.38936:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6192[0m
[32m  eval_f1 = 0.2578[0m
[32m  eval_mcc = 0.5991[0m
[32m  eval_precision = 0.3443[0m
[32m  eval_recall = 0.2413[0m
[32m  ********************[0m
[32m  Best f1:0.2578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38936:   7%|▋         | 2/28 [00:09<02:18,  5.32s/it]epoch 2 loss 1.40775:   7%|▋         | 2/28 [00:09<02:18,  5.32s/it]epoch 2 loss 1.40775:  11%|█         | 3/28 [00:09<01:16,  3.08s/it]epoch 2 loss 1.41136:  11%|█         | 3/28 [00:09<01:16,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6214[0m
[32m  eval_f1 = 0.2641[0m
[32m  eval_mcc = 0.601[0m
[32m  eval_precision = 0.3655[0m
[32m  eval_recall = 0.2461[0m
[32m  ********************[0m
[32m  Best f1:0.2641[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41136:  14%|█▍        | 4/28 [00:16<01:54,  4.78s/it]epoch 2 loss 1.42485:  14%|█▍        | 4/28 [00:17<01:54,  4.78s/it]epoch 2 loss 1.42485:  18%|█▊        | 5/28 [00:17<01:13,  3.21s/it]epoch 2 loss 1.41933:  18%|█▊        | 5/28 [00:17<01:13,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6231[0m
[32m  eval_f1 = 0.267[0m
[32m  eval_mcc = 0.6023[0m
[32m  eval_precision = 0.3691[0m
[32m  eval_recall = 0.2484[0m
[32m  ********************[0m
[32m  Best f1:0.267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41933:  21%|██▏       | 6/28 [00:26<01:53,  5.14s/it]epoch 2 loss 1.43275:  21%|██▏       | 6/28 [00:26<01:53,  5.14s/it]epoch 2 loss 1.43275:  25%|██▌       | 7/28 [00:26<01:15,  3.60s/it]epoch 2 loss 1.42124:  25%|██▌       | 7/28 [00:27<01:15,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6258[0m
[32m  eval_f1 = 0.2718[0m
[32m  eval_mcc = 0.605[0m
[32m  eval_precision = 0.3671[0m
[32m  eval_recall = 0.2531[0m
[32m  ********************[0m
[32m  Best f1:0.2718[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42124:  29%|██▊       | 8/28 [00:35<01:47,  5.37s/it]epoch 2 loss 1.4226:  29%|██▊       | 8/28 [00:36<01:47,  5.37s/it] epoch 2 loss 1.4226:  32%|███▏      | 9/28 [00:36<01:12,  3.82s/it]epoch 2 loss 1.43901:  32%|███▏      | 9/28 [00:36<01:12,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6288[0m
[32m  eval_f1 = 0.2748[0m
[32m  eval_mcc = 0.6081[0m
[32m  eval_precision = 0.3702[0m
[32m  eval_recall = 0.2562[0m
[32m  ********************[0m
[32m  Best f1:0.2748[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43901:  36%|███▌      | 10/28 [00:43<01:28,  4.92s/it]epoch 2 loss 1.43123:  36%|███▌      | 10/28 [00:44<01:28,  4.92s/it]epoch 2 loss 1.43123:  39%|███▉      | 11/28 [00:44<01:00,  3.55s/it]epoch 2 loss 1.4316:  39%|███▉      | 11/28 [00:44<01:00,  3.55s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.63[0m
[32m  eval_f1 = 0.2773[0m
[32m  eval_mcc = 0.609[0m
[32m  eval_precision = 0.3599[0m
[32m  eval_recall = 0.2588[0m
[32m  ********************[0m
[32m  Best f1:0.2773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4316:  43%|████▎     | 12/28 [00:53<01:22,  5.18s/it]epoch 2 loss 1.42887:  43%|████▎     | 12/28 [00:53<01:22,  5.18s/it]epoch 2 loss 1.42887:  46%|████▋     | 13/28 [00:53<00:56,  3.74s/it]epoch 2 loss 1.43613:  46%|████▋     | 13/28 [00:53<00:56,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6352[0m
[32m  eval_f1 = 0.2813[0m
[32m  eval_mcc = 0.6145[0m
[32m  eval_precision = 0.3661[0m
[32m  eval_recall = 0.2626[0m
[32m  ********************[0m
[32m  Best f1:0.2813[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43613:  50%|█████     | 14/28 [01:00<01:07,  4.84s/it]epoch 2 loss 1.42804:  50%|█████     | 14/28 [01:01<01:07,  4.84s/it]epoch 2 loss 1.42804:  54%|█████▎    | 15/28 [01:01<00:45,  3.51s/it]epoch 2 loss 1.4323:  54%|█████▎    | 15/28 [01:01<00:45,  3.51s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6385[0m
[32m  eval_f1 = 0.2888[0m
[32m  eval_mcc = 0.6183[0m
[32m  eval_precision = 0.3743[0m
[32m  eval_recall = 0.2684[0m
[32m  ********************[0m
[32m  Best f1:0.2888[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4323:  57%|█████▋    | 16/28 [01:09<01:00,  5.03s/it]epoch 2 loss 1.43131:  57%|█████▋    | 16/28 [01:10<01:00,  5.03s/it]epoch 2 loss 1.43131:  61%|██████    | 17/28 [01:10<00:40,  3.64s/it]epoch 2 loss 1.4305:  61%|██████    | 17/28 [01:10<00:40,  3.64s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6401[0m
[32m  eval_f1 = 0.2899[0m
[32m  eval_mcc = 0.6203[0m
[32m  eval_precision = 0.3855[0m
[32m  eval_recall = 0.2692[0m
[32m  ********************[0m
[32m  Best f1:0.2899[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4305:  64%|██████▍   | 18/28 [01:18<00:49,  4.93s/it]epoch 2 loss 1.43466:  64%|██████▍   | 18/28 [01:18<00:49,  4.93s/it]epoch 2 loss 1.43466:  68%|██████▊   | 19/28 [01:18<00:32,  3.58s/it]epoch 2 loss 1.43572:  68%|██████▊   | 19/28 [01:18<00:32,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6419[0m
[32m  eval_f1 = 0.2907[0m
[32m  eval_mcc = 0.6221[0m
[32m  eval_precision = 0.3862[0m
[32m  eval_recall = 0.2699[0m
[32m  ********************[0m
[32m  Best f1:0.2907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43572:  71%|███████▏  | 20/28 [01:27<00:41,  5.13s/it]epoch 2 loss 1.43395:  71%|███████▏  | 20/28 [01:27<00:41,  5.13s/it]epoch 2 loss 1.43395:  75%|███████▌  | 21/28 [01:27<00:26,  3.72s/it]epoch 2 loss 1.42756:  75%|███████▌  | 21/28 [01:28<00:26,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6434[0m
[32m  eval_f1 = 0.2918[0m
[32m  eval_mcc = 0.6234[0m
[32m  eval_precision = 0.3884[0m
[32m  eval_recall = 0.2709[0m
[32m  ********************[0m
[32m  Best f1:0.2918[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42756:  79%|███████▊  | 22/28 [01:38<00:35,  5.84s/it]epoch 2 loss 1.42141:  79%|███████▊  | 22/28 [01:38<00:35,  5.84s/it]epoch 2 loss 1.42141:  82%|████████▏ | 23/28 [01:38<00:21,  4.22s/it]epoch 2 loss 1.42362:  82%|████████▏ | 23/28 [01:39<00:21,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6441[0m
[32m  eval_f1 = 0.298[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.4089[0m
[32m  eval_recall = 0.2751[0m
[32m  ********************[0m
[32m  Best f1:0.298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42362:  86%|████████▌ | 24/28 [01:45<00:19,  4.92s/it]epoch 2 loss 1.42355:  86%|████████▌ | 24/28 [01:45<00:19,  4.92s/it]epoch 2 loss 1.42355:  89%|████████▉ | 25/28 [01:45<00:10,  3.57s/it]epoch 2 loss 1.41901:  89%|████████▉ | 25/28 [01:46<00:10,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6473[0m
[32m  eval_f1 = 0.3[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.4178[0m
[32m  eval_recall = 0.2771[0m
[32m  ********************[0m
[32m  Best f1:0.3[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41901:  93%|█████████▎| 26/28 [01:51<00:08,  4.22s/it]epoch 2 loss 1.41362:  93%|█████████▎| 26/28 [01:52<00:08,  4.22s/it]epoch 2 loss 1.41362:  96%|█████████▋| 27/28 [01:52<00:03,  3.08s/it]epoch 2 loss 1.41197:  96%|█████████▋| 27/28 [01:52<00:03,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3022[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.422[0m
[32m  eval_recall = 0.2783[0m
[32m  ********************[0m
[32m  Best f1:0.3022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.41197: 100%|██████████| 28/28 [01:56<00:00,  3.61s/it]epoch 2 loss 1.41197: 100%|██████████| 28/28 [01:56<00:00,  4.18s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.30425:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.30425:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s]epoch 3 loss 1.38784:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6473[0m
[32m  eval_f1 = 0.3046[0m
[32m  eval_mcc = 0.6277[0m
[32m  eval_precision = 0.4211[0m
[32m  eval_recall = 0.2802[0m
[32m  ********************[0m
[32m  Best f1:0.3046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38784:   7%|▋         | 2/28 [00:06<01:35,  3.68s/it]epoch 3 loss 1.3452:   7%|▋         | 2/28 [00:06<01:35,  3.68s/it] epoch 3 loss 1.3452:  11%|█         | 3/28 [00:06<00:54,  2.19s/it]epoch 3 loss 1.36134:  11%|█         | 3/28 [00:07<00:54,  2.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6479[0m
[32m  eval_f1 = 0.3061[0m
[32m  eval_mcc = 0.6285[0m
[32m  eval_precision = 0.417[0m
[32m  eval_recall = 0.2819[0m
[32m  ********************[0m
[32m  Best f1:0.3061[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36134:  14%|█▍        | 4/28 [00:13<01:31,  3.83s/it]epoch 3 loss 1.33061:  14%|█▍        | 4/28 [00:13<01:31,  3.83s/it]epoch 3 loss 1.33061:  18%|█▊        | 5/28 [00:13<00:59,  2.60s/it]epoch 3 loss 1.35152:  18%|█▊        | 5/28 [00:13<00:59,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6483[0m
[32m  eval_f1 = 0.3142[0m
[32m  eval_mcc = 0.6291[0m
[32m  eval_precision = 0.434[0m
[32m  eval_recall = 0.2877[0m
[32m  ********************[0m
[32m  Best f1:0.3142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35152:  21%|██▏       | 6/28 [00:22<01:45,  4.80s/it]epoch 3 loss 1.35859:  21%|██▏       | 6/28 [00:23<01:45,  4.80s/it]epoch 3 loss 1.35859:  25%|██▌       | 7/28 [00:23<01:10,  3.37s/it]epoch 3 loss 1.37276:  25%|██▌       | 7/28 [00:23<01:10,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.649[0m
[32m  eval_f1 = 0.3211[0m
[32m  eval_mcc = 0.6299[0m
[32m  eval_precision = 0.4329[0m
[32m  eval_recall = 0.2944[0m
[32m  ********************[0m
[32m  Best f1:0.3211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37276:  29%|██▊       | 8/28 [00:29<01:27,  4.35s/it]epoch 3 loss 1.35344:  29%|██▊       | 8/28 [00:29<01:27,  4.35s/it]epoch 3 loss 1.35344:  32%|███▏      | 9/28 [00:29<00:59,  3.13s/it]epoch 3 loss 1.35715:  32%|███▏      | 9/28 [00:30<00:59,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6502[0m
[32m  eval_f1 = 0.3285[0m
[32m  eval_mcc = 0.631[0m
[32m  eval_precision = 0.4397[0m
[32m  eval_recall = 0.301[0m
[32m  ********************[0m
[32m  Best f1:0.3285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35715:  36%|███▌      | 10/28 [00:37<01:22,  4.57s/it]epoch 3 loss 1.36452:  36%|███▌      | 10/28 [00:38<01:22,  4.57s/it]epoch 3 loss 1.36452:  39%|███▉      | 11/28 [00:38<00:56,  3.30s/it]epoch 3 loss 1.35877:  39%|███▉      | 11/28 [00:38<00:56,  3.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6516[0m
[32m  eval_f1 = 0.3247[0m
[32m  eval_mcc = 0.6325[0m
[32m  eval_precision = 0.4309[0m
[32m  eval_recall = 0.3006[0m
[32m  ********************[0m
[32m  Best MCC:0.6325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35877:  43%|████▎     | 12/28 [00:42<00:59,  3.73s/it]epoch 3 loss 1.34926:  43%|████▎     | 12/28 [00:43<00:59,  3.73s/it]epoch 3 loss 1.34926:  46%|████▋     | 13/28 [00:43<00:40,  2.73s/it]epoch 3 loss 1.3379:  46%|████▋     | 13/28 [00:43<00:40,  2.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6519[0m
[32m  eval_f1 = 0.3254[0m
[32m  eval_mcc = 0.6328[0m
[32m  eval_precision = 0.4296[0m
[32m  eval_recall = 0.3014[0m
[32m  ********************[0m
[32m  Best MCC:0.6328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3379:  50%|█████     | 14/28 [00:48<00:47,  3.42s/it]epoch 3 loss 1.33218:  50%|█████     | 14/28 [00:48<00:47,  3.42s/it]epoch 3 loss 1.33218:  54%|█████▎    | 15/28 [00:48<00:32,  2.51s/it]epoch 3 loss 1.33159:  54%|█████▎    | 15/28 [00:49<00:32,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6536[0m
[32m  eval_f1 = 0.3273[0m
[32m  eval_mcc = 0.6344[0m
[32m  eval_precision = 0.4377[0m
[32m  eval_recall = 0.3027[0m
[32m  ********************[0m
[32m  Best MCC:0.6344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33159:  57%|█████▋    | 16/28 [00:53<00:39,  3.26s/it]epoch 3 loss 1.32892:  57%|█████▋    | 16/28 [00:54<00:39,  3.26s/it]epoch 3 loss 1.32892:  61%|██████    | 17/28 [00:54<00:26,  2.40s/it]epoch 3 loss 1.33032:  61%|██████    | 17/28 [00:54<00:26,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3337[0m
[32m  eval_mcc = 0.6359[0m
[32m  eval_precision = 0.4485[0m
[32m  eval_recall = 0.3085[0m
[32m  ********************[0m
[32m  Best f1:0.3337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33032:  64%|██████▍   | 18/28 [01:00<00:34,  3.44s/it]epoch 3 loss 1.32937:  64%|██████▍   | 18/28 [01:00<00:34,  3.44s/it]epoch 3 loss 1.32937:  68%|██████▊   | 19/28 [01:00<00:22,  2.54s/it]epoch 3 loss 1.32544:  68%|██████▊   | 19/28 [01:00<00:22,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3366[0m
[32m  eval_mcc = 0.6371[0m
[32m  eval_precision = 0.4557[0m
[32m  eval_recall = 0.3114[0m
[32m  ********************[0m
[32m  Best f1:0.3366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32544:  71%|███████▏  | 20/28 [01:07<00:30,  3.77s/it]epoch 3 loss 1.32313:  71%|███████▏  | 20/28 [01:07<00:30,  3.77s/it]epoch 3 loss 1.32313:  75%|███████▌  | 21/28 [01:07<00:19,  2.77s/it]epoch 3 loss 1.32213:  75%|███████▌  | 21/28 [01:07<00:19,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3374[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4579[0m
[32m  eval_recall = 0.312[0m
[32m  ********************[0m
[32m  Best f1:0.3374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32213:  79%|███████▊  | 22/28 [01:13<00:22,  3.83s/it]epoch 3 loss 1.31902:  79%|███████▊  | 22/28 [01:14<00:22,  3.83s/it]epoch 3 loss 1.31902:  82%|████████▏ | 23/28 [01:14<00:14,  2.81s/it]epoch 3 loss 1.3179:  82%|████████▏ | 23/28 [01:14<00:14,  2.81s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6574[0m
[32m  eval_f1 = 0.3425[0m
[32m  eval_mcc = 0.6379[0m
[32m  eval_precision = 0.4581[0m
[32m  eval_recall = 0.3134[0m
[32m  ********************[0m
[32m  Best f1:0.3425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6379[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3179:  86%|████████▌ | 24/28 [01:22<00:18,  4.52s/it]epoch 3 loss 1.3138:  86%|████████▌ | 24/28 [01:23<00:18,  4.52s/it]epoch 3 loss 1.3138:  89%|████████▉ | 25/28 [01:23<00:09,  3.29s/it]epoch 3 loss 1.30906:  89%|████████▉ | 25/28 [01:23<00:09,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6571[0m
[32m  eval_f1 = 0.3384[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.4531[0m
[32m  eval_recall = 0.3102[0m

epoch 3 loss 1.30906:  93%|█████████▎| 26/28 [01:26<00:06,  3.44s/it]epoch 3 loss 1.30819:  93%|█████████▎| 26/28 [01:27<00:06,  3.44s/it]epoch 3 loss 1.30819:  96%|█████████▋| 27/28 [01:27<00:02,  2.53s/it]epoch 3 loss 1.31993:  96%|█████████▋| 27/28 [01:27<00:02,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6574[0m
[32m  eval_f1 = 0.339[0m
[32m  eval_mcc = 0.6381[0m
[32m  eval_precision = 0.4531[0m
[32m  eval_recall = 0.3105[0m
[32m  ********************[0m
[32m  Best MCC:0.6381[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31993: 100%|██████████| 28/28 [01:32<00:00,  3.25s/it]epoch 3 loss 1.31993: 100%|██████████| 28/28 [01:32<00:00,  3.30s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.23125:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.23125:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s]epoch 4 loss 1.24022:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6583[0m
[32m  eval_f1 = 0.3411[0m
[32m  eval_mcc = 0.639[0m
[32m  eval_precision = 0.4638[0m
[32m  eval_recall = 0.3115[0m
[32m  ********************[0m
[32m  Best MCC:0.639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24022:   7%|▋         | 2/28 [00:06<01:43,  3.97s/it]epoch 4 loss 1.25058:   7%|▋         | 2/28 [00:07<01:43,  3.97s/it]epoch 4 loss 1.25058:  11%|█         | 3/28 [00:07<00:58,  2.34s/it]epoch 4 loss 1.23988:  11%|█         | 3/28 [00:07<00:58,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.3452[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.4657[0m
[32m  eval_recall = 0.3138[0m
[32m  ********************[0m
[32m  Best f1:0.3452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23988:  14%|█▍        | 4/28 [00:16<02:02,  5.12s/it]epoch 4 loss 1.24657:  14%|█▍        | 4/28 [00:17<02:02,  5.12s/it]epoch 4 loss 1.24657:  18%|█▊        | 5/28 [00:17<01:18,  3.43s/it]epoch 4 loss 1.28353:  18%|█▊        | 5/28 [00:17<01:18,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6587[0m
[32m  eval_f1 = 0.3469[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.466[0m
[32m  eval_recall = 0.3155[0m
[32m  ********************[0m
[32m  Best f1:0.3469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.28353:  21%|██▏       | 6/28 [00:22<01:28,  4.00s/it]epoch 4 loss 1.27247:  21%|██▏       | 6/28 [00:22<01:28,  4.00s/it]epoch 4 loss 1.27247:  25%|██▌       | 7/28 [00:22<00:59,  2.83s/it]epoch 4 loss 1.27103:  25%|██▌       | 7/28 [00:23<00:59,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6597[0m
[32m  eval_f1 = 0.3502[0m
[32m  eval_mcc = 0.6407[0m
[32m  eval_precision = 0.4662[0m
[32m  eval_recall = 0.3186[0m
[32m  ********************[0m
[32m  Best f1:0.3502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27103:  29%|██▊       | 8/28 [00:31<01:33,  4.66s/it]epoch 4 loss 1.28384:  29%|██▊       | 8/28 [00:31<01:33,  4.66s/it]epoch 4 loss 1.28384:  32%|███▏      | 9/28 [00:31<01:03,  3.34s/it]epoch 4 loss 1.27964:  32%|███▏      | 9/28 [00:32<01:03,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6601[0m
[32m  eval_f1 = 0.3565[0m
[32m  eval_mcc = 0.6412[0m
[32m  eval_precision = 0.4768[0m
[32m  eval_recall = 0.3233[0m
[32m  ********************[0m
[32m  Best f1:0.3565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6412[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27964:  36%|███▌      | 10/28 [00:38<01:21,  4.52s/it]epoch 4 loss 1.28052:  36%|███▌      | 10/28 [00:39<01:21,  4.52s/it]epoch 4 loss 1.28052:  39%|███▉      | 11/28 [00:39<00:55,  3.27s/it]epoch 4 loss 1.28684:  39%|███▉      | 11/28 [00:39<00:55,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6602[0m
[32m  eval_f1 = 0.3559[0m
[32m  eval_mcc = 0.6413[0m
[32m  eval_precision = 0.4735[0m
[32m  eval_recall = 0.3228[0m
[32m  ********************[0m
[32m  Best MCC:0.6413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28684:  43%|████▎     | 12/28 [00:44<01:00,  3.77s/it]epoch 4 loss 1.28828:  43%|████▎     | 12/28 [00:44<01:00,  3.77s/it]epoch 4 loss 1.28828:  46%|████▋     | 13/28 [00:44<00:41,  2.75s/it]epoch 4 loss 1.28774:  46%|████▋     | 13/28 [00:44<00:41,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6608[0m
[32m  eval_f1 = 0.3561[0m
[32m  eval_mcc = 0.6419[0m
[32m  eval_precision = 0.4742[0m
[32m  eval_recall = 0.3231[0m
[32m  ********************[0m
[32m  Best MCC:0.6419[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28774:  50%|█████     | 14/28 [00:49<00:48,  3.43s/it]epoch 4 loss 1.28716:  50%|█████     | 14/28 [00:49<00:48,  3.43s/it]epoch 4 loss 1.28716:  54%|█████▎    | 15/28 [00:49<00:32,  2.52s/it]epoch 4 loss 1.28805:  54%|█████▎    | 15/28 [00:50<00:32,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6608[0m
[32m  eval_f1 = 0.356[0m
[32m  eval_mcc = 0.6419[0m
[32m  eval_precision = 0.4741[0m
[32m  eval_recall = 0.323[0m

epoch 4 loss 1.28805:  57%|█████▋    | 16/28 [00:53<00:34,  2.90s/it]epoch 4 loss 1.28734:  57%|█████▋    | 16/28 [00:54<00:34,  2.90s/it]epoch 4 loss 1.28734:  61%|██████    | 17/28 [00:54<00:23,  2.15s/it]epoch 4 loss 1.28552:  61%|██████    | 17/28 [00:54<00:23,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6607[0m
[32m  eval_f1 = 0.3572[0m
[32m  eval_mcc = 0.6418[0m
[32m  eval_precision = 0.4783[0m
[32m  eval_recall = 0.324[0m
[32m  ********************[0m
[32m  Best f1:0.3572[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.28552:  64%|██████▍   | 18/28 [00:59<00:30,  3.05s/it]epoch 4 loss 1.28604:  64%|██████▍   | 18/28 [00:59<00:30,  3.05s/it]epoch 4 loss 1.28604:  68%|██████▊   | 19/28 [00:59<00:20,  2.25s/it]epoch 4 loss 1.28411:  68%|██████▊   | 19/28 [01:00<00:20,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6608[0m
[32m  eval_f1 = 0.3575[0m
[32m  eval_mcc = 0.6419[0m
[32m  eval_precision = 0.4784[0m
[32m  eval_recall = 0.3246[0m
[32m  ********************[0m
[32m  Best f1:0.3575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6419[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28411:  71%|███████▏  | 20/28 [01:09<00:36,  4.61s/it]epoch 4 loss 1.28671:  71%|███████▏  | 20/28 [01:10<00:36,  4.61s/it]epoch 4 loss 1.28671:  75%|███████▌  | 21/28 [01:10<00:23,  3.36s/it]epoch 4 loss 1.29061:  75%|███████▌  | 21/28 [01:10<00:23,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6612[0m
[32m  eval_f1 = 0.3576[0m
[32m  eval_mcc = 0.6423[0m
[32m  eval_precision = 0.4795[0m
[32m  eval_recall = 0.3249[0m
[32m  ********************[0m
[32m  Best f1:0.3576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29061:  79%|███████▊  | 22/28 [01:18<00:29,  4.92s/it]epoch 4 loss 1.28564:  79%|███████▊  | 22/28 [01:19<00:29,  4.92s/it]epoch 4 loss 1.28564:  82%|████████▏ | 23/28 [01:19<00:17,  3.57s/it]epoch 4 loss 1.28434:  82%|████████▏ | 23/28 [01:19<00:17,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3578[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.4801[0m
[32m  eval_recall = 0.3251[0m
[32m  ********************[0m
[32m  Best f1:0.3578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28434:  86%|████████▌ | 24/28 [01:27<00:20,  5.03s/it]epoch 4 loss 1.28228:  86%|████████▌ | 24/28 [01:28<00:20,  5.03s/it]epoch 4 loss 1.28228:  89%|████████▉ | 25/28 [01:28<00:10,  3.65s/it]epoch 4 loss 1.27844:  89%|████████▉ | 25/28 [01:28<00:10,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6612[0m
[32m  eval_f1 = 0.3576[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.4797[0m
[32m  eval_recall = 0.3249[0m

epoch 4 loss 1.27844:  93%|█████████▎| 26/28 [01:31<00:07,  3.69s/it]epoch 4 loss 1.27634:  93%|█████████▎| 26/28 [01:32<00:07,  3.69s/it]epoch 4 loss 1.27634:  96%|█████████▋| 27/28 [01:32<00:02,  2.70s/it]epoch 4 loss 1.27269:  96%|█████████▋| 27/28 [01:32<00:02,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6612[0m
[32m  eval_f1 = 0.3576[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.4797[0m
[32m  eval_recall = 0.3249[0m

epoch 4 loss 1.27269: 100%|██████████| 28/28 [01:35<00:00,  2.97s/it]epoch 4 loss 1.27269: 100%|██████████| 28/28 [01:35<00:00,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.72it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3578[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.4801[0m
[32m  eval_recall = 0.3251[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6387[0m
[32m  eval_f1 = 0.2777[0m
[32m  eval_mcc = 0.6195[0m
[32m  eval_precision = 0.3683[0m
[32m  eval_recall = 0.257[0m

