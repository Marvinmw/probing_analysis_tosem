[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=0, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.61273:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.61273:   4%|▎         | 1/28 [00:00<00:21,  1.27it/s]epoch 0 loss 5.61688:   4%|▎         | 1/28 [00:01<00:21,  1.27it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0075[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = 0.0035[0m
[32m  eval_precision = 0.0052[0m
[32m  eval_recall = 0.006[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.61688:   7%|▋         | 2/28 [00:06<01:31,  3.51s/it]epoch 0 loss 5.61348:   7%|▋         | 2/28 [00:06<01:31,  3.51s/it]epoch 0 loss 5.61348:  11%|█         | 3/28 [00:06<00:52,  2.09s/it]epoch 0 loss 5.59803:  11%|█         | 3/28 [00:07<00:52,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0088[0m
[32m  eval_f1 = 0.003[0m
[32m  eval_mcc = 0.0028[0m
[32m  eval_precision = 0.0043[0m
[32m  eval_recall = 0.0063[0m
[32m  ********************[0m
[32m  Best f1:0.003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.59803:  14%|█▍        | 4/28 [00:11<01:18,  3.27s/it]epoch 0 loss 5.57564:  14%|█▍        | 4/28 [00:12<01:18,  3.27s/it]epoch 0 loss 5.57564:  18%|█▊        | 5/28 [00:12<00:51,  2.23s/it]epoch 0 loss 5.5487:  18%|█▊        | 5/28 [00:12<00:51,  2.23s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0159[0m
[32m  eval_f1 = 0.0039[0m
[32m  eval_mcc = 0.0035[0m
[32m  eval_precision = 0.0045[0m
[32m  eval_recall = 0.0068[0m
[32m  ********************[0m
[32m  Best f1:0.0039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.5487:  21%|██▏       | 6/28 [00:16<01:09,  3.14s/it]epoch 0 loss 5.51247:  21%|██▏       | 6/28 [00:17<01:09,  3.14s/it]epoch 0 loss 5.51247:  25%|██▌       | 7/28 [00:17<00:47,  2.25s/it]epoch 0 loss 5.47069:  25%|██▌       | 7/28 [00:17<00:47,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0494[0m
[32m  eval_f1 = 0.0093[0m
[32m  eval_mcc = 0.0238[0m
[32m  eval_precision = 0.0087[0m
[32m  eval_recall = 0.0157[0m
[32m  ********************[0m
[32m  Best f1:0.0093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.47069:  29%|██▊       | 8/28 [00:24<01:13,  3.70s/it]epoch 0 loss 5.42413:  29%|██▊       | 8/28 [00:24<01:13,  3.70s/it]epoch 0 loss 5.42413:  32%|███▏      | 9/28 [00:24<00:50,  2.67s/it]epoch 0 loss 5.37523:  32%|███▏      | 9/28 [00:25<00:50,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0855[0m
[32m  eval_f1 = 0.0154[0m
[32m  eval_mcc = 0.0486[0m
[32m  eval_precision = 0.0153[0m
[32m  eval_recall = 0.0243[0m
[32m  ********************[0m
[32m  Best f1:0.0154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0486[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.37523:  36%|███▌      | 10/28 [00:33<01:21,  4.52s/it]epoch 0 loss 5.31421:  36%|███▌      | 10/28 [00:33<01:21,  4.52s/it]epoch 0 loss 5.31421:  39%|███▉      | 11/28 [00:33<00:55,  3.27s/it]epoch 0 loss 5.24952:  39%|███▉      | 11/28 [00:34<00:55,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.125[0m
[32m  eval_f1 = 0.0337[0m
[32m  eval_mcc = 0.0847[0m
[32m  eval_precision = 0.0368[0m
[32m  eval_recall = 0.0426[0m
[32m  ********************[0m
[32m  Best f1:0.0337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.24952:  43%|████▎     | 12/28 [00:40<01:11,  4.45s/it]epoch 0 loss 5.18057:  43%|████▎     | 12/28 [00:41<01:11,  4.45s/it]epoch 0 loss 5.18057:  46%|████▋     | 13/28 [00:41<00:48,  3.23s/it]epoch 0 loss 5.10817:  46%|████▋     | 13/28 [00:41<00:48,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1744[0m
[32m  eval_f1 = 0.0583[0m
[32m  eval_mcc = 0.1342[0m
[32m  eval_precision = 0.0709[0m
[32m  eval_recall = 0.0628[0m
[32m  ********************[0m
[32m  Best f1:0.0583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.10817:  50%|█████     | 14/28 [00:49<01:08,  4.86s/it]epoch 0 loss 5.02939:  50%|█████     | 14/28 [00:50<01:08,  4.86s/it]epoch 0 loss 5.02939:  54%|█████▎    | 15/28 [00:50<00:45,  3.52s/it]epoch 0 loss 4.94771:  54%|█████▎    | 15/28 [00:50<00:45,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2293[0m
[32m  eval_f1 = 0.0787[0m
[32m  eval_mcc = 0.1907[0m
[32m  eval_precision = 0.0993[0m
[32m  eval_recall = 0.0799[0m
[32m  ********************[0m
[32m  Best f1:0.0787[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94771:  57%|█████▋    | 16/28 [00:56<00:52,  4.40s/it]epoch 0 loss 4.8717:  57%|█████▋    | 16/28 [00:57<00:52,  4.40s/it] epoch 0 loss 4.8717:  61%|██████    | 17/28 [00:57<00:35,  3.20s/it]epoch 0 loss 4.79312:  61%|██████    | 17/28 [00:57<00:35,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2865[0m
[32m  eval_f1 = 0.0901[0m
[32m  eval_mcc = 0.249[0m
[32m  eval_precision = 0.1259[0m
[32m  eval_recall = 0.0895[0m
[32m  ********************[0m
[32m  Best f1:0.0901[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.249[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.79312:  64%|██████▍   | 18/28 [01:03<00:42,  4.22s/it]epoch 0 loss 4.71002:  64%|██████▍   | 18/28 [01:04<00:42,  4.22s/it]epoch 0 loss 4.71002:  68%|██████▊   | 19/28 [01:04<00:27,  3.08s/it]epoch 0 loss 4.63709:  68%|██████▊   | 19/28 [01:04<00:27,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3462[0m
[32m  eval_f1 = 0.101[0m
[32m  eval_mcc = 0.3087[0m
[32m  eval_precision = 0.1414[0m
[32m  eval_recall = 0.0972[0m
[32m  ********************[0m
[32m  Best f1:0.101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.63709:  71%|███████▏  | 20/28 [01:10<00:33,  4.13s/it]epoch 0 loss 4.55503:  71%|███████▏  | 20/28 [01:11<00:33,  4.13s/it]epoch 0 loss 4.55503:  75%|███████▌  | 21/28 [01:11<00:21,  3.01s/it]epoch 0 loss 4.47566:  75%|███████▌  | 21/28 [01:11<00:21,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4071[0m
[32m  eval_f1 = 0.1083[0m
[32m  eval_mcc = 0.3686[0m
[32m  eval_precision = 0.1457[0m
[32m  eval_recall = 0.1019[0m
[32m  ********************[0m
[32m  Best f1:0.1083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.47566:  79%|███████▊  | 22/28 [01:20<00:28,  4.83s/it]epoch 0 loss 4.39809:  79%|███████▊  | 22/28 [01:20<00:28,  4.83s/it]epoch 0 loss 4.39809:  82%|████████▏ | 23/28 [01:20<00:17,  3.50s/it]epoch 0 loss 4.31965:  82%|████████▏ | 23/28 [01:21<00:17,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4556[0m
[32m  eval_f1 = 0.1136[0m
[32m  eval_mcc = 0.4188[0m
[32m  eval_precision = 0.1641[0m
[32m  eval_recall = 0.1077[0m
[32m  ********************[0m
[32m  Best f1:0.1136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.31965:  86%|████████▌ | 24/28 [01:30<00:21,  5.45s/it]epoch 0 loss 4.24744:  86%|████████▌ | 24/28 [01:31<00:21,  5.45s/it]epoch 0 loss 4.24744:  89%|████████▉ | 25/28 [01:31<00:11,  3.94s/it]epoch 0 loss 4.1762:  89%|████████▉ | 25/28 [01:31<00:11,  3.94s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4907[0m
[32m  eval_f1 = 0.1321[0m
[32m  eval_mcc = 0.4568[0m
[32m  eval_precision = 0.185[0m
[32m  eval_recall = 0.1222[0m
[32m  ********************[0m
[32m  Best f1:0.1321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.1762:  93%|█████████▎| 26/28 [01:41<00:11,  5.74s/it]epoch 0 loss 4.10784:  93%|█████████▎| 26/28 [01:41<00:11,  5.74s/it]epoch 0 loss 4.10784:  96%|█████████▋| 27/28 [01:41<00:04,  4.14s/it]epoch 0 loss 4.04425:  96%|█████████▋| 27/28 [01:41<00:04,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5084[0m
[32m  eval_f1 = 0.1395[0m
[32m  eval_mcc = 0.477[0m
[32m  eval_precision = 0.202[0m
[32m  eval_recall = 0.1306[0m
[32m  ********************[0m
[32m  Best f1:0.1395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.477[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.04425: 100%|██████████| 28/28 [01:50<00:00,  5.72s/it]epoch 0 loss 4.04425: 100%|██████████| 28/28 [01:50<00:00,  3.96s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.10277:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.10277:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 1 loss 2.02479:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5366[0m
[32m  eval_f1 = 0.1564[0m
[32m  eval_mcc = 0.5082[0m
[32m  eval_precision = 0.1986[0m
[32m  eval_recall = 0.1491[0m
[32m  ********************[0m
[32m  Best f1:0.1564[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02479:   7%|▋         | 2/28 [00:08<02:07,  4.89s/it]epoch 1 loss 2.00227:   7%|▋         | 2/28 [00:08<02:07,  4.89s/it]epoch 1 loss 2.00227:  11%|█         | 3/28 [00:08<01:11,  2.85s/it]epoch 1 loss 1.97838:  11%|█         | 3/28 [00:09<01:11,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.569[0m
[32m  eval_f1 = 0.1789[0m
[32m  eval_mcc = 0.5434[0m
[32m  eval_precision = 0.2127[0m
[32m  eval_recall = 0.173[0m
[32m  ********************[0m
[32m  Best f1:0.1789[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5434[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97838:  14%|█▍        | 4/28 [00:17<01:59,  4.97s/it]epoch 1 loss 1.95782:  14%|█▍        | 4/28 [00:17<01:59,  4.97s/it]epoch 1 loss 1.95782:  18%|█▊        | 5/28 [00:17<01:16,  3.34s/it]epoch 1 loss 1.95018:  18%|█▊        | 5/28 [00:17<01:16,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5831[0m
[32m  eval_f1 = 0.1829[0m
[32m  eval_mcc = 0.5598[0m
[32m  eval_precision = 0.2213[0m
[32m  eval_recall = 0.1781[0m
[32m  ********************[0m
[32m  Best f1:0.1829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95018:  21%|██▏       | 6/28 [00:24<01:44,  4.74s/it]epoch 1 loss 1.93593:  21%|██▏       | 6/28 [00:25<01:44,  4.74s/it]epoch 1 loss 1.93593:  25%|██▌       | 7/28 [00:25<01:09,  3.33s/it]epoch 1 loss 1.91011:  25%|██▌       | 7/28 [00:25<01:09,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5949[0m
[32m  eval_f1 = 0.1899[0m
[32m  eval_mcc = 0.5728[0m
[32m  eval_precision = 0.2651[0m
[32m  eval_recall = 0.1837[0m
[32m  ********************[0m
[32m  Best f1:0.1899[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91011:  29%|██▊       | 8/28 [00:33<01:39,  4.98s/it]epoch 1 loss 1.87949:  29%|██▊       | 8/28 [00:34<01:39,  4.98s/it]epoch 1 loss 1.87949:  32%|███▏      | 9/28 [00:34<01:07,  3.55s/it]epoch 1 loss 1.84759:  32%|███▏      | 9/28 [00:34<01:07,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.603[0m
[32m  eval_f1 = 0.2021[0m
[32m  eval_mcc = 0.5818[0m
[32m  eval_precision = 0.2842[0m
[32m  eval_recall = 0.1924[0m
[32m  ********************[0m
[32m  Best f1:0.2021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84759:  36%|███▌      | 10/28 [00:42<01:27,  4.89s/it]epoch 1 loss 1.82758:  36%|███▌      | 10/28 [00:42<01:27,  4.89s/it]epoch 1 loss 1.82758:  39%|███▉      | 11/28 [00:42<00:59,  3.52s/it]epoch 1 loss 1.82022:  39%|███▉      | 11/28 [00:43<00:59,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6069[0m
[32m  eval_f1 = 0.214[0m
[32m  eval_mcc = 0.586[0m
[32m  eval_precision = 0.3078[0m
[32m  eval_recall = 0.2012[0m
[32m  ********************[0m
[32m  Best f1:0.214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.82022:  43%|████▎     | 12/28 [00:50<01:19,  4.96s/it]epoch 1 loss 1.80683:  43%|████▎     | 12/28 [00:51<01:19,  4.96s/it]epoch 1 loss 1.80683:  46%|████▋     | 13/28 [00:51<00:53,  3.59s/it]epoch 1 loss 1.78046:  46%|████▋     | 13/28 [00:51<00:53,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6118[0m
[32m  eval_f1 = 0.2316[0m
[32m  eval_mcc = 0.5909[0m
[32m  eval_precision = 0.324[0m
[32m  eval_recall = 0.2152[0m
[32m  ********************[0m
[32m  Best f1:0.2316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.78046:  50%|█████     | 14/28 [00:58<01:06,  4.77s/it]epoch 1 loss 1.76429:  50%|█████     | 14/28 [00:59<01:06,  4.77s/it]epoch 1 loss 1.76429:  54%|█████▎    | 15/28 [00:59<00:44,  3.46s/it]epoch 1 loss 1.75287:  54%|█████▎    | 15/28 [00:59<00:44,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6174[0m
[32m  eval_f1 = 0.2497[0m
[32m  eval_mcc = 0.5962[0m
[32m  eval_precision = 0.3354[0m
[32m  eval_recall = 0.233[0m
[32m  ********************[0m
[32m  Best f1:0.2497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5962[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75287:  57%|█████▋    | 16/28 [01:06<00:54,  4.51s/it]epoch 1 loss 1.73846:  57%|█████▋    | 16/28 [01:06<00:54,  4.51s/it]epoch 1 loss 1.73846:  61%|██████    | 17/28 [01:06<00:36,  3.29s/it]epoch 1 loss 1.72013:  61%|██████    | 17/28 [01:07<00:36,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6227[0m
[32m  eval_f1 = 0.2644[0m
[32m  eval_mcc = 0.601[0m
[32m  eval_precision = 0.357[0m
[32m  eval_recall = 0.2464[0m
[32m  ********************[0m
[32m  Best f1:0.2644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72013:  64%|██████▍   | 18/28 [01:13<00:43,  4.38s/it]epoch 1 loss 1.70769:  64%|██████▍   | 18/28 [01:13<00:43,  4.38s/it]epoch 1 loss 1.70769:  68%|██████▊   | 19/28 [01:13<00:28,  3.19s/it]epoch 1 loss 1.70225:  68%|██████▊   | 19/28 [01:14<00:28,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6285[0m
[32m  eval_f1 = 0.2817[0m
[32m  eval_mcc = 0.6069[0m
[32m  eval_precision = 0.3666[0m
[32m  eval_recall = 0.263[0m
[32m  ********************[0m
[32m  Best f1:0.2817[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.70225:  71%|███████▏  | 20/28 [01:22<00:38,  4.81s/it]epoch 1 loss 1.68735:  71%|███████▏  | 20/28 [01:22<00:38,  4.81s/it]epoch 1 loss 1.68735:  75%|███████▌  | 21/28 [01:22<00:24,  3.49s/it]epoch 1 loss 1.67542:  75%|███████▌  | 21/28 [01:23<00:24,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6305[0m
[32m  eval_f1 = 0.2892[0m
[32m  eval_mcc = 0.6092[0m
[32m  eval_precision = 0.3794[0m
[32m  eval_recall = 0.2688[0m
[32m  ********************[0m
[32m  Best f1:0.2892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.67542:  79%|███████▊  | 22/28 [01:30<00:28,  4.67s/it]epoch 1 loss 1.65994:  79%|███████▊  | 22/28 [01:30<00:28,  4.67s/it]epoch 1 loss 1.65994:  82%|████████▏ | 23/28 [01:30<00:16,  3.39s/it]epoch 1 loss 1.65098:  82%|████████▏ | 23/28 [01:31<00:16,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6347[0m
[32m  eval_f1 = 0.2938[0m
[32m  eval_mcc = 0.614[0m
[32m  eval_precision = 0.3795[0m
[32m  eval_recall = 0.2731[0m
[32m  ********************[0m
[32m  Best f1:0.2938[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.65098:  86%|████████▌ | 24/28 [01:39<00:19,  4.91s/it]epoch 1 loss 1.63984:  86%|████████▌ | 24/28 [01:39<00:19,  4.91s/it]epoch 1 loss 1.63984:  89%|████████▉ | 25/28 [01:39<00:10,  3.56s/it]epoch 1 loss 1.63343:  89%|████████▉ | 25/28 [01:40<00:10,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6416[0m
[32m  eval_f1 = 0.3009[0m
[32m  eval_mcc = 0.622[0m
[32m  eval_precision = 0.3876[0m
[32m  eval_recall = 0.2794[0m
[32m  ********************[0m
[32m  Best f1:0.3009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.63343:  93%|█████████▎| 26/28 [01:47<00:09,  4.75s/it]epoch 1 loss 1.62109:  93%|█████████▎| 26/28 [01:47<00:09,  4.75s/it]epoch 1 loss 1.62109:  96%|█████████▋| 27/28 [01:47<00:03,  3.45s/it]epoch 1 loss 1.60716:  96%|█████████▋| 27/28 [01:47<00:03,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6478[0m
[32m  eval_f1 = 0.3066[0m
[32m  eval_mcc = 0.629[0m
[32m  eval_precision = 0.3935[0m
[32m  eval_recall = 0.2836[0m
[32m  ********************[0m
[32m  Best f1:0.3066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.629[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.60716: 100%|██████████| 28/28 [01:53<00:00,  4.26s/it]epoch 1 loss 1.60716: 100%|██████████| 28/28 [01:53<00:00,  4.06s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.20461:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.20461:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s]epoch 2 loss 1.21173:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6507[0m
[32m  eval_f1 = 0.3109[0m
[32m  eval_mcc = 0.6322[0m
[32m  eval_precision = 0.3994[0m
[32m  eval_recall = 0.2881[0m
[32m  ********************[0m
[32m  Best f1:0.3109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6322[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.21173:   7%|▋         | 2/28 [00:06<01:44,  4.01s/it]epoch 2 loss 1.22884:   7%|▋         | 2/28 [00:07<01:44,  4.01s/it]epoch 2 loss 1.22884:  11%|█         | 3/28 [00:07<00:59,  2.38s/it]epoch 2 loss 1.22961:  11%|█         | 3/28 [00:07<00:59,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3186[0m
[32m  eval_mcc = 0.6345[0m
[32m  eval_precision = 0.4119[0m
[32m  eval_recall = 0.2943[0m
[32m  ********************[0m
[32m  Best f1:0.3186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.22961:  14%|█▍        | 4/28 [00:13<01:35,  4.00s/it]epoch 2 loss 1.24444:  14%|█▍        | 4/28 [00:14<01:35,  4.00s/it]epoch 2 loss 1.24444:  18%|█▊        | 5/28 [00:14<01:02,  2.71s/it]epoch 2 loss 1.23949:  18%|█▊        | 5/28 [00:14<01:02,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6544[0m
[32m  eval_f1 = 0.3209[0m
[32m  eval_mcc = 0.6357[0m
[32m  eval_precision = 0.4258[0m
[32m  eval_recall = 0.2972[0m
[32m  ********************[0m
[32m  Best f1:0.3209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.23949:  21%|██▏       | 6/28 [00:20<01:28,  4.00s/it]epoch 2 loss 1.25341:  21%|██▏       | 6/28 [00:21<01:28,  4.00s/it]epoch 2 loss 1.25341:  25%|██▌       | 7/28 [00:21<00:59,  2.83s/it]epoch 2 loss 1.24262:  25%|██▌       | 7/28 [00:21<00:59,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6563[0m
[32m  eval_f1 = 0.3263[0m
[32m  eval_mcc = 0.6374[0m
[32m  eval_precision = 0.4294[0m
[32m  eval_recall = 0.3012[0m
[32m  ********************[0m
[32m  Best f1:0.3263[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24262:  29%|██▊       | 8/28 [00:27<01:16,  3.83s/it]epoch 2 loss 1.24478:  29%|██▊       | 8/28 [00:27<01:16,  3.83s/it]epoch 2 loss 1.24478:  32%|███▏      | 9/28 [00:27<00:52,  2.76s/it]epoch 2 loss 1.26163:  32%|███▏      | 9/28 [00:27<00:52,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3287[0m
[32m  eval_mcc = 0.6378[0m
[32m  eval_precision = 0.4318[0m
[32m  eval_recall = 0.304[0m
[32m  ********************[0m
[32m  Best f1:0.3287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26163:  36%|███▌      | 10/28 [00:33<01:09,  3.86s/it]epoch 2 loss 1.25591:  36%|███▌      | 10/28 [00:34<01:09,  3.86s/it]epoch 2 loss 1.25591:  39%|███▉      | 11/28 [00:34<00:47,  2.81s/it]epoch 2 loss 1.25749:  39%|███▉      | 11/28 [00:34<00:47,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6573[0m
[32m  eval_f1 = 0.3305[0m
[32m  eval_mcc = 0.6378[0m
[32m  eval_precision = 0.4288[0m
[32m  eval_recall = 0.3064[0m
[32m  ********************[0m
[32m  Best f1:0.3305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.25749:  43%|████▎     | 12/28 [00:39<00:56,  3.52s/it]epoch 2 loss 1.25532:  43%|████▎     | 12/28 [00:39<00:56,  3.52s/it]epoch 2 loss 1.25532:  46%|████▋     | 13/28 [00:39<00:38,  2.57s/it]epoch 2 loss 1.26277:  46%|████▋     | 13/28 [00:40<00:38,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.339[0m
[32m  eval_mcc = 0.6393[0m
[32m  eval_precision = 0.4433[0m
[32m  eval_recall = 0.314[0m
[32m  ********************[0m
[32m  Best f1:0.339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26277:  50%|█████     | 14/28 [00:46<00:51,  3.69s/it]epoch 2 loss 1.25592:  50%|█████     | 14/28 [00:46<00:51,  3.69s/it]epoch 2 loss 1.25592:  54%|█████▎    | 15/28 [00:46<00:35,  2.71s/it]epoch 2 loss 1.26101:  54%|█████▎    | 15/28 [00:46<00:35,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6631[0m
[32m  eval_f1 = 0.3437[0m
[32m  eval_mcc = 0.644[0m
[32m  eval_precision = 0.4544[0m
[32m  eval_recall = 0.3178[0m
[32m  ********************[0m
[32m  Best f1:0.3437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26101:  57%|█████▋    | 16/28 [00:54<00:50,  4.23s/it]epoch 2 loss 1.26113:  57%|█████▋    | 16/28 [00:54<00:50,  4.23s/it]epoch 2 loss 1.26113:  61%|██████    | 17/28 [00:54<00:33,  3.08s/it]epoch 2 loss 1.2612:  61%|██████    | 17/28 [00:55<00:33,  3.08s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6643[0m
[32m  eval_f1 = 0.3533[0m
[32m  eval_mcc = 0.6455[0m
[32m  eval_precision = 0.4697[0m
[32m  eval_recall = 0.3246[0m
[32m  ********************[0m
[32m  Best f1:0.3533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2612:  64%|██████▍   | 18/28 [01:06<00:55,  5.58s/it]epoch 2 loss 1.26616:  64%|██████▍   | 18/28 [01:06<00:55,  5.58s/it]epoch 2 loss 1.26616:  68%|██████▊   | 19/28 [01:06<00:36,  4.03s/it]epoch 2 loss 1.26714:  68%|██████▊   | 19/28 [01:06<00:36,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.666[0m
[32m  eval_f1 = 0.3533[0m
[32m  eval_mcc = 0.6472[0m
[32m  eval_precision = 0.4678[0m
[32m  eval_recall = 0.3255[0m
[32m  ********************[0m
[32m  Best MCC:0.6472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26714:  71%|███████▏  | 20/28 [01:11<00:34,  4.36s/it]epoch 2 loss 1.26538:  71%|███████▏  | 20/28 [01:12<00:34,  4.36s/it]epoch 2 loss 1.26538:  75%|███████▌  | 21/28 [01:12<00:22,  3.17s/it]epoch 2 loss 1.25951:  75%|███████▌  | 21/28 [01:12<00:22,  3.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6675[0m
[32m  eval_f1 = 0.3561[0m
[32m  eval_mcc = 0.6488[0m
[32m  eval_precision = 0.4687[0m
[32m  eval_recall = 0.3273[0m
[32m  ********************[0m
[32m  Best f1:0.3561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6488[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25951:  79%|███████▊  | 22/28 [01:20<00:28,  4.74s/it]epoch 2 loss 1.25374:  79%|███████▊  | 22/28 [01:20<00:28,  4.74s/it]epoch 2 loss 1.25374:  82%|████████▏ | 23/28 [01:20<00:17,  3.44s/it]epoch 2 loss 1.25703:  82%|████████▏ | 23/28 [01:21<00:17,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6674[0m
[32m  eval_f1 = 0.3569[0m
[32m  eval_mcc = 0.6487[0m
[32m  eval_precision = 0.4716[0m
[32m  eval_recall = 0.3277[0m
[32m  ********************[0m
[32m  Best f1:0.3569[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.25703:  86%|████████▌ | 24/28 [01:25<00:15,  3.89s/it]epoch 2 loss 1.25732:  86%|████████▌ | 24/28 [01:26<00:15,  3.89s/it]epoch 2 loss 1.25732:  89%|████████▉ | 25/28 [01:26<00:08,  2.84s/it]epoch 2 loss 1.25309:  89%|████████▉ | 25/28 [01:26<00:08,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6675[0m
[32m  eval_f1 = 0.3573[0m
[32m  eval_mcc = 0.6489[0m
[32m  eval_precision = 0.474[0m
[32m  eval_recall = 0.3278[0m
[32m  ********************[0m
[32m  Best f1:0.3573[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25309:  93%|█████████▎| 26/28 [01:34<00:09,  4.59s/it]epoch 2 loss 1.24831:  93%|█████████▎| 26/28 [01:35<00:09,  4.59s/it]epoch 2 loss 1.24831:  96%|█████████▋| 27/28 [01:35<00:03,  3.34s/it]epoch 2 loss 1.24653:  96%|█████████▋| 27/28 [01:35<00:03,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.57it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.67it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6679[0m
[32m  eval_f1 = 0.3583[0m
[32m  eval_mcc = 0.6496[0m
[32m  eval_precision = 0.4766[0m
[32m  eval_recall = 0.3285[0m
[32m  ********************[0m
[32m  Best f1:0.3583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6496[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24653: 100%|██████████| 28/28 [01:46<00:00,  5.61s/it]epoch 2 loss 1.24653: 100%|██████████| 28/28 [01:46<00:00,  3.79s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.17108:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.17108:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 3 loss 1.24366:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6682[0m
[32m  eval_f1 = 0.3621[0m
[32m  eval_mcc = 0.65[0m
[32m  eval_precision = 0.4736[0m
[32m  eval_recall = 0.332[0m
[32m  ********************[0m
[32m  Best f1:0.3621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.65[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24366:   7%|▋         | 2/28 [00:09<02:20,  5.42s/it]epoch 3 loss 1.19961:   7%|▋         | 2/28 [00:09<02:20,  5.42s/it]epoch 3 loss 1.19961:  11%|█         | 3/28 [00:09<01:18,  3.14s/it]epoch 3 loss 1.20969:  11%|█         | 3/28 [00:10<01:18,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6694[0m
[32m  eval_f1 = 0.3665[0m
[32m  eval_mcc = 0.6513[0m
[32m  eval_precision = 0.473[0m
[32m  eval_recall = 0.3361[0m
[32m  ********************[0m
[32m  Best f1:0.3665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20969:  14%|█▍        | 4/28 [00:22<02:47,  6.96s/it]epoch 3 loss 1.17642:  14%|█▍        | 4/28 [00:23<02:47,  6.96s/it]epoch 3 loss 1.17642:  18%|█▊        | 5/28 [00:23<01:45,  4.60s/it]epoch 3 loss 1.19575:  18%|█▊        | 5/28 [00:23<01:45,  4.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6702[0m
[32m  eval_f1 = 0.3672[0m
[32m  eval_mcc = 0.6523[0m
[32m  eval_precision = 0.4705[0m
[32m  eval_recall = 0.3369[0m
[32m  ********************[0m
[32m  Best f1:0.3672[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19575:  21%|██▏       | 6/28 [00:31<02:11,  5.99s/it]epoch 3 loss 1.20263:  21%|██▏       | 6/28 [00:32<02:11,  5.99s/it]epoch 3 loss 1.20263:  25%|██▌       | 7/28 [00:32<01:27,  4.17s/it]epoch 3 loss 1.21659:  25%|██▌       | 7/28 [00:32<01:27,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6698[0m
[32m  eval_f1 = 0.3739[0m
[32m  eval_mcc = 0.6519[0m
[32m  eval_precision = 0.472[0m
[32m  eval_recall = 0.3445[0m
[32m  ********************[0m
[32m  Best f1:0.3739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.21659:  29%|██▊       | 8/28 [00:37<01:28,  4.43s/it]epoch 3 loss 1.19871:  29%|██▊       | 8/28 [00:37<01:28,  4.43s/it]epoch 3 loss 1.19871:  32%|███▏      | 9/28 [00:37<01:00,  3.17s/it]epoch 3 loss 1.2011:  32%|███▏      | 9/28 [00:37<01:00,  3.17s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.59it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6704[0m
[32m  eval_f1 = 0.3748[0m
[32m  eval_mcc = 0.6524[0m
[32m  eval_precision = 0.469[0m
[32m  eval_recall = 0.346[0m
[32m  ********************[0m
[32m  Best f1:0.3748[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6524[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2011:  36%|███▌      | 10/28 [00:46<01:29,  4.98s/it]epoch 3 loss 1.20826:  36%|███▌      | 10/28 [00:46<01:29,  4.98s/it]epoch 3 loss 1.20826:  39%|███▉      | 11/28 [00:46<01:01,  3.59s/it]epoch 3 loss 1.20343:  39%|███▉      | 11/28 [00:47<01:01,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6706[0m
[32m  eval_f1 = 0.3773[0m
[32m  eval_mcc = 0.6524[0m
[32m  eval_precision = 0.4697[0m
[32m  eval_recall = 0.3486[0m
[32m  ********************[0m
[32m  Best f1:0.3773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6524[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20343:  43%|████▎     | 12/28 [00:55<01:21,  5.12s/it]epoch 3 loss 1.19547:  43%|████▎     | 12/28 [00:56<01:21,  5.12s/it]epoch 3 loss 1.19547:  46%|████▋     | 13/28 [00:56<00:55,  3.70s/it]epoch 3 loss 1.18391:  46%|████▋     | 13/28 [00:56<00:55,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6709[0m
[32m  eval_f1 = 0.3763[0m
[32m  eval_mcc = 0.6528[0m
[32m  eval_precision = 0.4692[0m
[32m  eval_recall = 0.3479[0m
[32m  ********************[0m
[32m  Best MCC:0.6528[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18391:  50%|█████     | 14/28 [01:00<00:57,  4.07s/it]epoch 3 loss 1.17913:  50%|█████     | 14/28 [01:01<00:57,  4.07s/it]epoch 3 loss 1.17913:  54%|█████▎    | 15/28 [01:01<00:38,  2.97s/it]epoch 3 loss 1.17853:  54%|█████▎    | 15/28 [01:01<00:38,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6716[0m
[32m  eval_f1 = 0.3771[0m
[32m  eval_mcc = 0.6533[0m
[32m  eval_precision = 0.4716[0m
[32m  eval_recall = 0.3491[0m
[32m  ********************[0m
[32m  Best MCC:0.6533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17853:  57%|█████▋    | 16/28 [01:06<00:42,  3.55s/it]epoch 3 loss 1.17634:  57%|█████▋    | 16/28 [01:06<00:42,  3.55s/it]epoch 3 loss 1.17634:  61%|██████    | 17/28 [01:06<00:28,  2.60s/it]epoch 3 loss 1.17713:  61%|██████    | 17/28 [01:07<00:28,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6739[0m
[32m  eval_f1 = 0.3861[0m
[32m  eval_mcc = 0.6555[0m
[32m  eval_precision = 0.4843[0m
[32m  eval_recall = 0.3579[0m
[32m  ********************[0m
[32m  Best f1:0.3861[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17713:  64%|██████▍   | 18/28 [01:17<00:50,  5.05s/it]epoch 3 loss 1.17618:  64%|██████▍   | 18/28 [01:17<00:50,  5.05s/it]epoch 3 loss 1.17618:  68%|██████▊   | 19/28 [01:17<00:32,  3.66s/it]epoch 3 loss 1.17454:  68%|██████▊   | 19/28 [01:18<00:32,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6756[0m
[32m  eval_f1 = 0.3858[0m
[32m  eval_mcc = 0.6572[0m
[32m  eval_precision = 0.4791[0m
[32m  eval_recall = 0.3589[0m
[32m  ********************[0m
[32m  Best MCC:0.6572[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17454:  71%|███████▏  | 20/28 [01:22<00:32,  4.09s/it]epoch 3 loss 1.17203:  71%|███████▏  | 20/28 [01:23<00:32,  4.09s/it]epoch 3 loss 1.17203:  75%|███████▌  | 21/28 [01:23<00:20,  2.99s/it]epoch 3 loss 1.17048:  75%|███████▌  | 21/28 [01:23<00:20,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6762[0m
[32m  eval_f1 = 0.3865[0m
[32m  eval_mcc = 0.6579[0m
[32m  eval_precision = 0.4797[0m
[32m  eval_recall = 0.3596[0m
[32m  ********************[0m
[32m  Best f1:0.3865[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17048:  79%|███████▊  | 22/28 [01:30<00:24,  4.16s/it]epoch 3 loss 1.16772:  79%|███████▊  | 22/28 [01:30<00:24,  4.16s/it]epoch 3 loss 1.16772:  82%|████████▏ | 23/28 [01:30<00:15,  3.04s/it]epoch 3 loss 1.16594:  82%|████████▏ | 23/28 [01:31<00:15,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6766[0m
[32m  eval_f1 = 0.3883[0m
[32m  eval_mcc = 0.6583[0m
[32m  eval_precision = 0.4799[0m
[32m  eval_recall = 0.3624[0m
[32m  ********************[0m
[32m  Best f1:0.3883[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16594:  86%|████████▌ | 24/28 [01:37<00:16,  4.21s/it]epoch 3 loss 1.16193:  86%|████████▌ | 24/28 [01:38<00:16,  4.21s/it]epoch 3 loss 1.16193:  89%|████████▉ | 25/28 [01:38<00:09,  3.07s/it]epoch 3 loss 1.15757:  89%|████████▉ | 25/28 [01:38<00:09,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6772[0m
[32m  eval_f1 = 0.3914[0m
[32m  eval_mcc = 0.6591[0m
[32m  eval_precision = 0.4896[0m
[32m  eval_recall = 0.3643[0m
[32m  ********************[0m
[32m  Best f1:0.3914[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15757:  93%|█████████▎| 26/28 [01:46<00:09,  4.70s/it]epoch 3 loss 1.15684:  93%|█████████▎| 26/28 [01:46<00:09,  4.70s/it]epoch 3 loss 1.15684:  96%|█████████▋| 27/28 [01:46<00:03,  3.42s/it]epoch 3 loss 1.16874:  96%|█████████▋| 27/28 [01:47<00:03,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6774[0m
[32m  eval_f1 = 0.3918[0m
[32m  eval_mcc = 0.6593[0m
[32m  eval_precision = 0.4912[0m
[32m  eval_recall = 0.3641[0m
[32m  ********************[0m
[32m  Best f1:0.3918[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16874: 100%|██████████| 28/28 [01:53<00:00,  4.47s/it]epoch 3 loss 1.16874: 100%|██████████| 28/28 [01:53<00:00,  4.07s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.08:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.08:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.08802:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6773[0m
[32m  eval_f1 = 0.3911[0m
[32m  eval_mcc = 0.6592[0m
[32m  eval_precision = 0.4906[0m
[32m  eval_recall = 0.3609[0m

epoch 4 loss 1.08802:   7%|▋         | 2/28 [00:04<01:02,  2.40s/it]epoch 4 loss 1.10043:   7%|▋         | 2/28 [00:04<01:02,  2.40s/it]epoch 4 loss 1.10043:  11%|█         | 3/28 [00:04<00:37,  1.49s/it]epoch 4 loss 1.08932:  11%|█         | 3/28 [00:05<00:37,  1.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6777[0m
[32m  eval_f1 = 0.392[0m
[32m  eval_mcc = 0.6597[0m
[32m  eval_precision = 0.4922[0m
[32m  eval_recall = 0.3612[0m
[32m  ********************[0m
[32m  Best f1:0.392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.08932:  14%|█▍        | 4/28 [00:15<02:01,  5.06s/it]epoch 4 loss 1.09608:  14%|█▍        | 4/28 [00:15<02:01,  5.06s/it]epoch 4 loss 1.09608:  18%|█▊        | 5/28 [00:15<01:17,  3.39s/it]epoch 4 loss 1.13387:  18%|█▊        | 5/28 [00:15<01:17,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6781[0m
[32m  eval_f1 = 0.3928[0m
[32m  eval_mcc = 0.6602[0m
[32m  eval_precision = 0.4931[0m
[32m  eval_recall = 0.3621[0m
[32m  ********************[0m
[32m  Best f1:0.3928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6602[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.13387:  21%|██▏       | 6/28 [00:24<01:53,  5.14s/it]epoch 4 loss 1.12338:  21%|██▏       | 6/28 [00:24<01:53,  5.14s/it]epoch 4 loss 1.12338:  25%|██▌       | 7/28 [00:24<01:15,  3.60s/it]epoch 4 loss 1.12363:  25%|██▌       | 7/28 [00:24<01:15,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6783[0m
[32m  eval_f1 = 0.3955[0m
[32m  eval_mcc = 0.6604[0m
[32m  eval_precision = 0.493[0m
[32m  eval_recall = 0.3647[0m
[32m  ********************[0m
[32m  Best f1:0.3955[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12363:  29%|██▊       | 8/28 [00:31<01:30,  4.52s/it]epoch 4 loss 1.13375:  29%|██▊       | 8/28 [00:31<01:30,  4.52s/it]epoch 4 loss 1.13375:  32%|███▏      | 9/28 [00:31<01:01,  3.24s/it]epoch 4 loss 1.13067:  32%|███▏      | 9/28 [00:31<01:01,  3.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6799[0m
[32m  eval_f1 = 0.3953[0m
[32m  eval_mcc = 0.6621[0m
[32m  eval_precision = 0.4919[0m
[32m  eval_recall = 0.365[0m
[32m  ********************[0m
[32m  Best MCC:0.6621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.13067:  36%|███▌      | 10/28 [00:36<01:07,  3.76s/it]epoch 4 loss 1.13186:  36%|███▌      | 10/28 [00:36<01:07,  3.76s/it]epoch 4 loss 1.13186:  39%|███▉      | 11/28 [00:36<00:46,  2.73s/it]epoch 4 loss 1.13697:  39%|███▉      | 11/28 [00:37<00:46,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6803[0m
[32m  eval_f1 = 0.396[0m
[32m  eval_mcc = 0.6625[0m
[32m  eval_precision = 0.4929[0m
[32m  eval_recall = 0.3655[0m
[32m  ********************[0m
[32m  Best f1:0.396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.13697:  43%|████▎     | 12/28 [00:42<01:00,  3.78s/it]epoch 4 loss 1.13889:  43%|████▎     | 12/28 [00:43<01:00,  3.78s/it]epoch 4 loss 1.13889:  46%|████▋     | 13/28 [00:43<00:41,  2.76s/it]epoch 4 loss 1.13747:  46%|████▋     | 13/28 [00:43<00:41,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6805[0m
[32m  eval_f1 = 0.3982[0m
[32m  eval_mcc = 0.6627[0m
[32m  eval_precision = 0.4948[0m
[32m  eval_recall = 0.3673[0m
[32m  ********************[0m
[32m  Best f1:0.3982[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.13747:  50%|█████     | 14/28 [00:49<00:51,  3.68s/it]epoch 4 loss 1.13702:  50%|█████     | 14/28 [00:49<00:51,  3.68s/it]epoch 4 loss 1.13702:  54%|█████▎    | 15/28 [00:49<00:35,  2.70s/it]epoch 4 loss 1.13708:  54%|█████▎    | 15/28 [00:50<00:35,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6802[0m
[32m  eval_f1 = 0.3983[0m
[32m  eval_mcc = 0.6624[0m
[32m  eval_precision = 0.4949[0m
[32m  eval_recall = 0.3676[0m
[32m  ********************[0m
[32m  Best f1:0.3983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.13708:  57%|█████▋    | 16/28 [00:54<00:40,  3.40s/it]epoch 4 loss 1.13703:  57%|█████▋    | 16/28 [00:55<00:40,  3.40s/it]epoch 4 loss 1.13703:  61%|██████    | 17/28 [00:55<00:27,  2.50s/it]epoch 4 loss 1.13569:  61%|██████    | 17/28 [00:55<00:27,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6803[0m
[32m  eval_f1 = 0.3967[0m
[32m  eval_mcc = 0.6625[0m
[32m  eval_precision = 0.4946[0m
[32m  eval_recall = 0.366[0m

epoch 4 loss 1.13569:  64%|██████▍   | 18/28 [00:58<00:28,  2.89s/it]epoch 4 loss 1.13632:  64%|██████▍   | 18/28 [00:59<00:28,  2.89s/it]epoch 4 loss 1.13632:  68%|██████▊   | 19/28 [00:59<00:19,  2.14s/it]epoch 4 loss 1.13397:  68%|██████▊   | 19/28 [00:59<00:19,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6803[0m
[32m  eval_f1 = 0.3971[0m
[32m  eval_mcc = 0.6625[0m
[32m  eval_precision = 0.4943[0m
[32m  eval_recall = 0.3665[0m

epoch 4 loss 1.13397:  71%|███████▏  | 20/28 [01:03<00:21,  2.64s/it]epoch 4 loss 1.13653:  71%|███████▏  | 20/28 [01:03<00:21,  2.64s/it]epoch 4 loss 1.13653:  75%|███████▌  | 21/28 [01:03<00:13,  1.97s/it]epoch 4 loss 1.14043:  75%|███████▌  | 21/28 [01:03<00:13,  1.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6794[0m
[32m  eval_f1 = 0.397[0m
[32m  eval_mcc = 0.6616[0m
[32m  eval_precision = 0.4948[0m
[32m  eval_recall = 0.3662[0m

epoch 4 loss 1.14043:  79%|███████▊  | 22/28 [01:07<00:15,  2.52s/it]epoch 4 loss 1.13641:  79%|███████▊  | 22/28 [01:07<00:15,  2.52s/it]epoch 4 loss 1.13641:  82%|████████▏ | 23/28 [01:07<00:09,  1.88s/it]epoch 4 loss 1.13478:  82%|████████▏ | 23/28 [01:08<00:09,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6791[0m
[32m  eval_f1 = 0.3965[0m
[32m  eval_mcc = 0.6612[0m
[32m  eval_precision = 0.4939[0m
[32m  eval_recall = 0.366[0m

epoch 4 loss 1.13478:  86%|████████▌ | 24/28 [01:11<00:09,  2.46s/it]epoch 4 loss 1.13372:  86%|████████▌ | 24/28 [01:11<00:09,  2.46s/it]epoch 4 loss 1.13372:  89%|████████▉ | 25/28 [01:11<00:05,  1.84s/it]epoch 4 loss 1.13019:  89%|████████▉ | 25/28 [01:12<00:05,  1.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6792[0m
[32m  eval_f1 = 0.3964[0m
[32m  eval_mcc = 0.6613[0m
[32m  eval_precision = 0.4939[0m
[32m  eval_recall = 0.366[0m

epoch 4 loss 1.13019:  93%|█████████▎| 26/28 [01:15<00:04,  2.43s/it]epoch 4 loss 1.1283:  93%|█████████▎| 26/28 [01:16<00:04,  2.43s/it] epoch 4 loss 1.1283:  96%|█████████▋| 27/28 [01:16<00:01,  1.82s/it]epoch 4 loss 1.12554:  96%|█████████▋| 27/28 [01:16<00:01,  1.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6792[0m
[32m  eval_f1 = 0.3964[0m
[32m  eval_mcc = 0.6613[0m
[32m  eval_precision = 0.4939[0m
[32m  eval_recall = 0.366[0m

epoch 4 loss 1.12554: 100%|██████████| 28/28 [01:19<00:00,  2.36s/it]epoch 4 loss 1.12554: 100%|██████████| 28/28 [01:19<00:00,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6802[0m
[32m  eval_f1 = 0.3983[0m
[32m  eval_mcc = 0.6624[0m
[32m  eval_precision = 0.4949[0m
[32m  eval_recall = 0.3676[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6604[0m
[32m  eval_f1 = 0.312[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.3935[0m
[32m  eval_recall = 0.29[0m

