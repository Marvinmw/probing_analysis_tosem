[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=3, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3', posratio=0.5, seed=914, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.60624:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.60624:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.60378:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0027[0m
[32m  eval_f1 = 0.0007[0m
[32m  eval_mcc = -0.0022[0m
[32m  eval_precision = 0.0032[0m
[32m  eval_recall = 0.0017[0m
[32m  ********************[0m
[32m  Best f1:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.60378:   7%|▋         | 2/28 [00:05<01:21,  3.12s/it]epoch 0 loss 5.59851:   7%|▋         | 2/28 [00:05<01:21,  3.12s/it]epoch 0 loss 5.59851:  11%|█         | 3/28 [00:05<00:46,  1.88s/it]epoch 0 loss 5.58069:  11%|█         | 3/28 [00:06<00:46,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0057[0m
[32m  eval_f1 = 0.0013[0m
[32m  eval_mcc = -0.0021[0m
[32m  eval_precision = 0.0038[0m
[32m  eval_recall = 0.0022[0m
[32m  ********************[0m
[32m  Best f1:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.58069:  14%|█▍        | 4/28 [00:11<01:16,  3.17s/it]epoch 0 loss 5.55919:  14%|█▍        | 4/28 [00:11<01:16,  3.17s/it]epoch 0 loss 5.55919:  18%|█▊        | 5/28 [00:11<00:49,  2.17s/it]epoch 0 loss 5.53291:  18%|█▊        | 5/28 [00:11<00:49,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0183[0m
[32m  eval_f1 = 0.0026[0m
[32m  eval_mcc = 0.0015[0m
[32m  eval_precision = 0.0048[0m
[32m  eval_recall = 0.0034[0m
[32m  ********************[0m
[32m  Best f1:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.53291:  21%|██▏       | 6/28 [00:18<01:23,  3.79s/it]epoch 0 loss 5.49641:  21%|██▏       | 6/28 [00:18<01:23,  3.79s/it]epoch 0 loss 5.49641:  25%|██▌       | 7/28 [00:18<00:56,  2.69s/it]epoch 0 loss 5.45455:  25%|██▌       | 7/28 [00:19<00:56,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0653[0m
[32m  eval_f1 = 0.0133[0m
[32m  eval_mcc = 0.0315[0m
[32m  eval_precision = 0.0144[0m
[32m  eval_recall = 0.0187[0m
[32m  ********************[0m
[32m  Best f1:0.0133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.45455:  29%|██▊       | 8/28 [00:25<01:19,  3.99s/it]epoch 0 loss 5.40984:  29%|██▊       | 8/28 [00:26<01:19,  3.99s/it]epoch 0 loss 5.40984:  32%|███▏      | 9/28 [00:26<00:54,  2.87s/it]epoch 0 loss 5.35899:  32%|███▏      | 9/28 [00:26<00:54,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0935[0m
[32m  eval_f1 = 0.0193[0m
[32m  eval_mcc = 0.0469[0m
[32m  eval_precision = 0.0182[0m
[32m  eval_recall = 0.0261[0m
[32m  ********************[0m
[32m  Best f1:0.0193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.35899:  36%|███▌      | 10/28 [00:36<01:32,  5.12s/it]epoch 0 loss 5.29872:  36%|███▌      | 10/28 [00:36<01:32,  5.12s/it]epoch 0 loss 5.29872:  39%|███▉      | 11/28 [00:36<01:02,  3.69s/it]epoch 0 loss 5.23469:  39%|███▉      | 11/28 [00:37<01:02,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1207[0m
[32m  eval_f1 = 0.0325[0m
[32m  eval_mcc = 0.073[0m
[32m  eval_precision = 0.0324[0m
[32m  eval_recall = 0.0388[0m
[32m  ********************[0m
[32m  Best f1:0.0325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.23469:  43%|████▎     | 12/28 [00:44<01:18,  4.88s/it]epoch 0 loss 5.16759:  43%|████▎     | 12/28 [00:44<01:18,  4.88s/it]epoch 0 loss 5.16759:  46%|████▋     | 13/28 [00:44<00:53,  3.53s/it]epoch 0 loss 5.09679:  46%|████▋     | 13/28 [00:45<00:53,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1568[0m
[32m  eval_f1 = 0.0421[0m
[32m  eval_mcc = 0.1137[0m
[32m  eval_precision = 0.0555[0m
[32m  eval_recall = 0.0464[0m
[32m  ********************[0m
[32m  Best f1:0.0421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.09679:  50%|█████     | 14/28 [00:53<01:11,  5.12s/it]epoch 0 loss 5.01992:  50%|█████     | 14/28 [00:53<01:11,  5.12s/it]epoch 0 loss 5.01992:  54%|█████▎    | 15/28 [00:53<00:48,  3.70s/it]epoch 0 loss 4.94072:  54%|█████▎    | 15/28 [00:54<00:48,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.194[0m
[32m  eval_f1 = 0.0501[0m
[32m  eval_mcc = 0.1563[0m
[32m  eval_precision = 0.061[0m
[32m  eval_recall = 0.053[0m
[32m  ********************[0m
[32m  Best f1:0.0501[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94072:  57%|█████▋    | 16/28 [01:00<00:53,  4.47s/it]epoch 0 loss 4.86815:  57%|█████▋    | 16/28 [01:00<00:53,  4.47s/it]epoch 0 loss 4.86815:  61%|██████    | 17/28 [01:00<00:35,  3.26s/it]epoch 0 loss 4.79342:  61%|██████    | 17/28 [01:00<00:35,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2459[0m
[32m  eval_f1 = 0.0607[0m
[32m  eval_mcc = 0.2122[0m
[32m  eval_precision = 0.0987[0m
[32m  eval_recall = 0.0625[0m
[32m  ********************[0m
[32m  Best f1:0.0607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.79342:  64%|██████▍   | 18/28 [01:06<00:39,  3.97s/it]epoch 0 loss 4.71454:  64%|██████▍   | 18/28 [01:06<00:39,  3.97s/it]epoch 0 loss 4.71454:  68%|██████▊   | 19/28 [01:06<00:26,  2.90s/it]epoch 0 loss 4.64634:  68%|██████▊   | 19/28 [01:07<00:26,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2966[0m
[32m  eval_f1 = 0.0754[0m
[32m  eval_mcc = 0.2631[0m
[32m  eval_precision = 0.1153[0m
[32m  eval_recall = 0.0755[0m
[32m  ********************[0m
[32m  Best f1:0.0754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.64634:  71%|███████▏  | 20/28 [01:13<00:31,  3.98s/it]epoch 0 loss 4.56904:  71%|███████▏  | 20/28 [01:13<00:31,  3.98s/it]epoch 0 loss 4.56904:  75%|███████▌  | 21/28 [01:13<00:20,  2.91s/it]epoch 0 loss 4.49436:  75%|███████▌  | 21/28 [01:13<00:20,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3626[0m
[32m  eval_f1 = 0.0935[0m
[32m  eval_mcc = 0.3258[0m
[32m  eval_precision = 0.1577[0m
[32m  eval_recall = 0.0891[0m
[32m  ********************[0m
[32m  Best f1:0.0935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.49436:  79%|███████▊  | 22/28 [01:19<00:23,  3.98s/it]epoch 0 loss 4.42247:  79%|███████▊  | 22/28 [01:20<00:23,  3.98s/it]epoch 0 loss 4.42247:  82%|████████▏ | 23/28 [01:20<00:14,  2.92s/it]epoch 0 loss 4.34922:  82%|████████▏ | 23/28 [01:20<00:14,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4287[0m
[32m  eval_f1 = 0.1021[0m
[32m  eval_mcc = 0.3902[0m
[32m  eval_precision = 0.1685[0m
[32m  eval_recall = 0.0966[0m
[32m  ********************[0m
[32m  Best f1:0.1021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.34922:  86%|████████▌ | 24/28 [01:26<00:15,  3.98s/it]epoch 0 loss 4.28188:  86%|████████▌ | 24/28 [01:27<00:15,  3.98s/it]epoch 0 loss 4.28188:  89%|████████▉ | 25/28 [01:27<00:08,  2.92s/it]epoch 0 loss 4.21569:  89%|████████▉ | 25/28 [01:27<00:08,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4668[0m
[32m  eval_f1 = 0.117[0m
[32m  eval_mcc = 0.4314[0m
[32m  eval_precision = 0.1804[0m
[32m  eval_recall = 0.1085[0m
[32m  ********************[0m
[32m  Best f1:0.117[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.21569:  93%|█████████▎| 26/28 [01:33<00:07,  3.99s/it]epoch 0 loss 4.15185:  93%|█████████▎| 26/28 [01:34<00:07,  3.99s/it]epoch 0 loss 4.15185:  96%|█████████▋| 27/28 [01:34<00:02,  2.92s/it]epoch 0 loss 4.09226:  96%|█████████▋| 27/28 [01:34<00:02,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4941[0m
[32m  eval_f1 = 0.1329[0m
[32m  eval_mcc = 0.4638[0m
[32m  eval_precision = 0.1842[0m
[32m  eval_recall = 0.123[0m
[32m  ********************[0m
[32m  Best f1:0.1329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.09226: 100%|██████████| 28/28 [01:39<00:00,  3.68s/it]epoch 0 loss 4.09226: 100%|██████████| 28/28 [01:39<00:00,  3.56s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.26308:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.26308:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 1 loss 2.18378:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5136[0m
[32m  eval_f1 = 0.1426[0m
[32m  eval_mcc = 0.4859[0m
[32m  eval_precision = 0.1785[0m
[32m  eval_recall = 0.1345[0m
[32m  ********************[0m
[32m  Best f1:0.1426[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4859[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.18378:   7%|▋         | 2/28 [00:09<02:16,  5.26s/it]epoch 1 loss 2.16041:   7%|▋         | 2/28 [00:09<02:16,  5.26s/it]epoch 1 loss 2.16041:  11%|█         | 3/28 [00:09<01:16,  3.05s/it]epoch 1 loss 2.13632:  11%|█         | 3/28 [00:09<01:16,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5491[0m
[32m  eval_f1 = 0.161[0m
[32m  eval_mcc = 0.5228[0m
[32m  eval_precision = 0.2062[0m
[32m  eval_recall = 0.1543[0m
[32m  ********************[0m
[32m  Best f1:0.161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13632:  14%|█▍        | 4/28 [00:17<01:58,  4.94s/it]epoch 1 loss 2.11262:  14%|█▍        | 4/28 [00:17<01:58,  4.94s/it]epoch 1 loss 2.11262:  18%|█▊        | 5/28 [00:17<01:16,  3.32s/it]epoch 1 loss 2.10088:  18%|█▊        | 5/28 [00:18<01:16,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5771[0m
[32m  eval_f1 = 0.1716[0m
[32m  eval_mcc = 0.5528[0m
[32m  eval_precision = 0.2027[0m
[32m  eval_recall = 0.1683[0m
[32m  ********************[0m
[32m  Best f1:0.1716[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5528[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.10088:  21%|██▏       | 6/28 [00:27<01:59,  5.43s/it]epoch 1 loss 2.08399:  21%|██▏       | 6/28 [00:27<01:59,  5.43s/it]epoch 1 loss 2.08399:  25%|██▌       | 7/28 [00:27<01:19,  3.79s/it]epoch 1 loss 2.05585:  25%|██▌       | 7/28 [00:28<01:19,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5871[0m
[32m  eval_f1 = 0.184[0m
[32m  eval_mcc = 0.5638[0m
[32m  eval_precision = 0.2194[0m
[32m  eval_recall = 0.1799[0m
[32m  ********************[0m
[32m  Best f1:0.184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05585:  29%|██▊       | 8/28 [00:39<02:05,  6.27s/it]epoch 1 loss 2.02247:  29%|██▊       | 8/28 [00:39<02:05,  6.27s/it]epoch 1 loss 2.02247:  32%|███▏      | 9/28 [00:39<01:24,  4.44s/it]epoch 1 loss 1.98778:  32%|███▏      | 9/28 [00:40<01:24,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.593[0m
[32m  eval_f1 = 0.1882[0m
[32m  eval_mcc = 0.5709[0m
[32m  eval_precision = 0.2488[0m
[32m  eval_recall = 0.1829[0m
[32m  ********************[0m
[32m  Best f1:0.1882[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5709[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98778:  36%|███▌      | 10/28 [00:48<01:44,  5.82s/it]epoch 1 loss 1.9653:  36%|███▌      | 10/28 [00:49<01:44,  5.82s/it] epoch 1 loss 1.9653:  39%|███▉      | 11/28 [00:49<01:10,  4.17s/it]epoch 1 loss 1.95621:  39%|███▉      | 11/28 [00:49<01:10,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.599[0m
[32m  eval_f1 = 0.1961[0m
[32m  eval_mcc = 0.5777[0m
[32m  eval_precision = 0.2733[0m
[32m  eval_recall = 0.1877[0m
[32m  ********************[0m
[32m  Best f1:0.1961[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95621:  43%|████▎     | 12/28 [00:58<01:30,  5.65s/it]epoch 1 loss 1.94076:  43%|████▎     | 12/28 [00:58<01:30,  5.65s/it]epoch 1 loss 1.94076:  46%|████▋     | 13/28 [00:58<01:00,  4.06s/it]epoch 1 loss 1.91274:  46%|████▋     | 13/28 [00:58<01:00,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6041[0m
[32m  eval_f1 = 0.2044[0m
[32m  eval_mcc = 0.5829[0m
[32m  eval_precision = 0.3028[0m
[32m  eval_recall = 0.1926[0m
[32m  ********************[0m
[32m  Best f1:0.2044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91274:  50%|█████     | 14/28 [01:08<01:23,  5.95s/it]epoch 1 loss 1.89387:  50%|█████     | 14/28 [01:09<01:23,  5.95s/it]epoch 1 loss 1.89387:  54%|█████▎    | 15/28 [01:09<00:55,  4.29s/it]epoch 1 loss 1.88082:  54%|█████▎    | 15/28 [01:09<00:55,  4.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6088[0m
[32m  eval_f1 = 0.2135[0m
[32m  eval_mcc = 0.587[0m
[32m  eval_precision = 0.314[0m
[32m  eval_recall = 0.1996[0m
[32m  ********************[0m
[32m  Best f1:0.2135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88082:  57%|█████▋    | 16/28 [01:22<01:22,  6.91s/it]epoch 1 loss 1.86497:  57%|█████▋    | 16/28 [01:22<01:22,  6.91s/it]epoch 1 loss 1.86497:  61%|██████    | 17/28 [01:22<00:54,  4.96s/it]epoch 1 loss 1.84486:  61%|██████    | 17/28 [01:23<00:54,  4.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6123[0m
[32m  eval_f1 = 0.2341[0m
[32m  eval_mcc = 0.5898[0m
[32m  eval_precision = 0.3166[0m
[32m  eval_recall = 0.2179[0m
[32m  ********************[0m
[32m  Best f1:0.2341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84486:  64%|██████▍   | 18/28 [01:31<01:00,  6.07s/it]epoch 1 loss 1.83099:  64%|██████▍   | 18/28 [01:31<01:00,  6.07s/it]epoch 1 loss 1.83099:  68%|██████▊   | 19/28 [01:31<00:39,  4.37s/it]epoch 1 loss 1.82423:  68%|██████▊   | 19/28 [01:32<00:39,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6151[0m
[32m  eval_f1 = 0.2446[0m
[32m  eval_mcc = 0.5925[0m
[32m  eval_precision = 0.3166[0m
[32m  eval_recall = 0.2286[0m
[32m  ********************[0m
[32m  Best f1:0.2446[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.82423:  71%|███████▏  | 20/28 [01:42<00:49,  6.17s/it]epoch 1 loss 1.80753:  71%|███████▏  | 20/28 [01:42<00:49,  6.17s/it]epoch 1 loss 1.80753:  75%|███████▌  | 21/28 [01:42<00:31,  4.44s/it]epoch 1 loss 1.79408:  75%|███████▌  | 21/28 [01:42<00:31,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6188[0m
[32m  eval_f1 = 0.2589[0m
[32m  eval_mcc = 0.5966[0m
[32m  eval_precision = 0.3296[0m
[32m  eval_recall = 0.2433[0m
[32m  ********************[0m
[32m  Best f1:0.2589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.79408:  79%|███████▊  | 22/28 [01:52<00:35,  5.97s/it]epoch 1 loss 1.77742:  79%|███████▊  | 22/28 [01:52<00:35,  5.97s/it]epoch 1 loss 1.77742:  82%|████████▏ | 23/28 [01:52<00:21,  4.31s/it]epoch 1 loss 1.76752:  82%|████████▏ | 23/28 [01:52<00:21,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6236[0m
[32m  eval_f1 = 0.2684[0m
[32m  eval_mcc = 0.6021[0m
[32m  eval_precision = 0.3506[0m
[32m  eval_recall = 0.2519[0m
[32m  ********************[0m
[32m  Best f1:0.2684[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76752:  86%|████████▌ | 24/28 [02:00<00:21,  5.34s/it]epoch 1 loss 1.75539:  86%|████████▌ | 24/28 [02:00<00:21,  5.34s/it]epoch 1 loss 1.75539:  89%|████████▉ | 25/28 [02:00<00:11,  3.86s/it]epoch 1 loss 1.74761:  89%|████████▉ | 25/28 [02:01<00:11,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6286[0m
[32m  eval_f1 = 0.2761[0m
[32m  eval_mcc = 0.6085[0m
[32m  eval_precision = 0.3673[0m
[32m  eval_recall = 0.2571[0m
[32m  ********************[0m
[32m  Best f1:0.2761[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74761:  93%|█████████▎| 26/28 [02:07<00:09,  4.78s/it]epoch 1 loss 1.73419:  93%|█████████▎| 26/28 [02:07<00:09,  4.78s/it]epoch 1 loss 1.73419:  96%|█████████▋| 27/28 [02:07<00:03,  3.47s/it]epoch 1 loss 1.71931:  96%|█████████▋| 27/28 [02:08<00:03,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6326[0m
[32m  eval_f1 = 0.2788[0m
[32m  eval_mcc = 0.6133[0m
[32m  eval_precision = 0.3573[0m
[32m  eval_recall = 0.2597[0m
[32m  ********************[0m
[32m  Best f1:0.2788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.71931: 100%|██████████| 28/28 [02:14<00:00,  4.50s/it]epoch 1 loss 1.71931: 100%|██████████| 28/28 [02:14<00:00,  4.82s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.29285:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.29285:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 2 loss 1.29458:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6355[0m
[32m  eval_f1 = 0.2816[0m
[32m  eval_mcc = 0.6165[0m
[32m  eval_precision = 0.369[0m
[32m  eval_recall = 0.2613[0m
[32m  ********************[0m
[32m  Best f1:0.2816[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29458:   7%|▋         | 2/28 [00:09<02:15,  5.22s/it]epoch 2 loss 1.31348:   7%|▋         | 2/28 [00:09<02:15,  5.22s/it]epoch 2 loss 1.31348:  11%|█         | 3/28 [00:09<01:15,  3.04s/it]epoch 2 loss 1.316:  11%|█         | 3/28 [00:09<01:15,  3.04s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6386[0m
[32m  eval_f1 = 0.2842[0m
[32m  eval_mcc = 0.6195[0m
[32m  eval_precision = 0.3702[0m
[32m  eval_recall = 0.2636[0m
[32m  ********************[0m
[32m  Best f1:0.2842[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.316:  14%|█▍        | 4/28 [00:16<01:53,  4.75s/it]epoch 2 loss 1.3309:  14%|█▍        | 4/28 [00:17<01:53,  4.75s/it]epoch 2 loss 1.3309:  18%|█▊        | 5/28 [00:17<01:13,  3.19s/it]epoch 2 loss 1.32569:  18%|█▊        | 5/28 [00:17<01:13,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6409[0m
[32m  eval_f1 = 0.2911[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.3867[0m
[32m  eval_recall = 0.2695[0m
[32m  ********************[0m
[32m  Best f1:0.2911[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32569:  21%|██▏       | 6/28 [00:25<01:49,  4.98s/it]epoch 2 loss 1.33957:  21%|██▏       | 6/28 [00:26<01:49,  4.98s/it]epoch 2 loss 1.33957:  25%|██▌       | 7/28 [00:26<01:13,  3.49s/it]epoch 2 loss 1.32858:  25%|██▌       | 7/28 [00:26<01:13,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6439[0m
[32m  eval_f1 = 0.296[0m
[32m  eval_mcc = 0.624[0m
[32m  eval_precision = 0.3889[0m
[32m  eval_recall = 0.2745[0m
[32m  ********************[0m
[32m  Best f1:0.296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32858:  29%|██▊       | 8/28 [00:33<01:35,  4.78s/it]epoch 2 loss 1.33053:  29%|██▊       | 8/28 [00:34<01:35,  4.78s/it]epoch 2 loss 1.33053:  32%|███▏      | 9/28 [00:34<01:04,  3.42s/it]epoch 2 loss 1.34789:  32%|███▏      | 9/28 [00:34<01:04,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.645[0m
[32m  eval_f1 = 0.304[0m
[32m  eval_mcc = 0.6249[0m
[32m  eval_precision = 0.398[0m
[32m  eval_recall = 0.282[0m
[32m  ********************[0m
[32m  Best f1:0.304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6249[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34789:  36%|███▌      | 10/28 [00:42<01:31,  5.08s/it]epoch 2 loss 1.34133:  36%|███▌      | 10/28 [00:43<01:31,  5.08s/it]epoch 2 loss 1.34133:  39%|███▉      | 11/28 [00:43<01:02,  3.65s/it]epoch 2 loss 1.34242:  39%|███▉      | 11/28 [00:43<01:02,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6466[0m
[32m  eval_f1 = 0.3073[0m
[32m  eval_mcc = 0.6263[0m
[32m  eval_precision = 0.4021[0m
[32m  eval_recall = 0.2865[0m
[32m  ********************[0m
[32m  Best f1:0.3073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6263[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34242:  43%|████▎     | 12/28 [00:51<01:21,  5.07s/it]epoch 2 loss 1.33978:  43%|████▎     | 12/28 [00:52<01:21,  5.07s/it]epoch 2 loss 1.33978:  46%|████▋     | 13/28 [00:52<00:54,  3.66s/it]epoch 2 loss 1.34795:  46%|████▋     | 13/28 [00:52<00:54,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6491[0m
[32m  eval_f1 = 0.3109[0m
[32m  eval_mcc = 0.6289[0m
[32m  eval_precision = 0.4029[0m
[32m  eval_recall = 0.2892[0m
[32m  ********************[0m
[32m  Best f1:0.3109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34795:  50%|█████     | 14/28 [01:02<01:21,  5.82s/it]epoch 2 loss 1.34057:  50%|█████     | 14/28 [01:03<01:21,  5.82s/it]epoch 2 loss 1.34057:  54%|█████▎    | 15/28 [01:03<00:54,  4.19s/it]epoch 2 loss 1.34581:  54%|█████▎    | 15/28 [01:03<00:54,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6519[0m
[32m  eval_f1 = 0.3191[0m
[32m  eval_mcc = 0.6321[0m
[32m  eval_precision = 0.4135[0m
[32m  eval_recall = 0.2961[0m
[32m  ********************[0m
[32m  Best f1:0.3191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34581:  57%|█████▋    | 16/28 [01:12<01:09,  5.78s/it]epoch 2 loss 1.34532:  57%|█████▋    | 16/28 [01:13<01:09,  5.78s/it]epoch 2 loss 1.34532:  61%|██████    | 17/28 [01:13<00:45,  4.17s/it]epoch 2 loss 1.34474:  61%|██████    | 17/28 [01:13<00:45,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.3197[0m
[32m  eval_mcc = 0.6331[0m
[32m  eval_precision = 0.4229[0m
[32m  eval_recall = 0.296[0m
[32m  ********************[0m
[32m  Best f1:0.3197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34474:  64%|██████▍   | 18/28 [01:22<00:57,  5.74s/it]epoch 2 loss 1.3494:  64%|██████▍   | 18/28 [01:22<00:57,  5.74s/it] epoch 2 loss 1.3494:  68%|██████▊   | 19/28 [01:22<00:37,  4.14s/it]epoch 2 loss 1.35072:  68%|██████▊   | 19/28 [01:23<00:37,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.55it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6537[0m
[32m  eval_f1 = 0.3189[0m
[32m  eval_mcc = 0.6343[0m
[32m  eval_precision = 0.4247[0m
[32m  eval_recall = 0.2956[0m
[32m  ********************[0m
[32m  Best MCC:0.6343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35072:  71%|███████▏  | 20/28 [01:29<00:40,  5.00s/it]epoch 2 loss 1.34913:  71%|███████▏  | 20/28 [01:30<00:40,  5.00s/it]epoch 2 loss 1.34913:  75%|███████▌  | 21/28 [01:30<00:25,  3.62s/it]epoch 2 loss 1.34292:  75%|███████▌  | 21/28 [01:30<00:25,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6556[0m
[32m  eval_f1 = 0.3207[0m
[32m  eval_mcc = 0.6363[0m
[32m  eval_precision = 0.4268[0m
[32m  eval_recall = 0.2971[0m
[32m  ********************[0m
[32m  Best f1:0.3207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34292:  79%|███████▊  | 22/28 [01:43<00:38,  6.47s/it]epoch 2 loss 1.33674:  79%|███████▊  | 22/28 [01:43<00:38,  6.47s/it]epoch 2 loss 1.33674:  82%|████████▏ | 23/28 [01:43<00:23,  4.65s/it]epoch 2 loss 1.33963:  82%|████████▏ | 23/28 [01:44<00:23,  4.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6571[0m
[32m  eval_f1 = 0.3231[0m
[32m  eval_mcc = 0.6378[0m
[32m  eval_precision = 0.4338[0m
[32m  eval_recall = 0.2992[0m
[32m  ********************[0m
[32m  Best f1:0.3231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33963:  86%|████████▌ | 24/28 [01:56<00:28,  7.14s/it]epoch 2 loss 1.3396:  86%|████████▌ | 24/28 [01:57<00:28,  7.14s/it] epoch 2 loss 1.3396:  89%|████████▉ | 25/28 [01:57<00:15,  5.13s/it]epoch 2 loss 1.33514:  89%|████████▉ | 25/28 [01:57<00:15,  5.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6578[0m
[32m  eval_f1 = 0.3307[0m
[32m  eval_mcc = 0.6386[0m
[32m  eval_precision = 0.455[0m
[32m  eval_recall = 0.3043[0m
[32m  ********************[0m
[32m  Best f1:0.3307[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33514:  93%|█████████▎| 26/28 [02:07<00:13,  6.56s/it]epoch 2 loss 1.33003:  93%|█████████▎| 26/28 [02:07<00:13,  6.56s/it]epoch 2 loss 1.33003:  96%|█████████▋| 27/28 [02:07<00:04,  4.72s/it]epoch 2 loss 1.32869:  96%|█████████▋| 27/28 [02:07<00:04,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6581[0m
[32m  eval_f1 = 0.3312[0m
[32m  eval_mcc = 0.6391[0m
[32m  eval_precision = 0.4527[0m
[32m  eval_recall = 0.305[0m
[32m  ********************[0m
[32m  Best f1:0.3312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32869: 100%|██████████| 28/28 [02:20<00:00,  7.28s/it]epoch 2 loss 1.32869: 100%|██████████| 28/28 [02:20<00:00,  5.03s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.23632:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.23632:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 3 loss 1.31467:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6575[0m
[32m  eval_f1 = 0.3334[0m
[32m  eval_mcc = 0.6385[0m
[32m  eval_precision = 0.45[0m
[32m  eval_recall = 0.3068[0m
[32m  ********************[0m
[32m  Best f1:0.3334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.31467:   7%|▋         | 2/28 [00:05<01:22,  3.19s/it]epoch 3 loss 1.27211:   7%|▋         | 2/28 [00:05<01:22,  3.19s/it]epoch 3 loss 1.27211:  11%|█         | 3/28 [00:05<00:47,  1.91s/it]epoch 3 loss 1.28423:  11%|█         | 3/28 [00:06<00:47,  1.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.659[0m
[32m  eval_f1 = 0.3368[0m
[32m  eval_mcc = 0.6402[0m
[32m  eval_precision = 0.459[0m
[32m  eval_recall = 0.3097[0m
[32m  ********************[0m
[32m  Best f1:0.3368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28423:  14%|█▍        | 4/28 [00:19<02:34,  6.42s/it]epoch 3 loss 1.25211:  14%|█▍        | 4/28 [00:19<02:34,  6.42s/it]epoch 3 loss 1.25211:  18%|█▊        | 5/28 [00:19<01:37,  4.26s/it]epoch 3 loss 1.27308:  18%|█▊        | 5/28 [00:20<01:37,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6597[0m
[32m  eval_f1 = 0.3392[0m
[32m  eval_mcc = 0.641[0m
[32m  eval_precision = 0.4566[0m
[32m  eval_recall = 0.3119[0m
[32m  ********************[0m
[32m  Best f1:0.3392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.641[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27308:  21%|██▏       | 6/28 [00:31<02:33,  6.96s/it]epoch 3 loss 1.27896:  21%|██▏       | 6/28 [00:32<02:33,  6.96s/it]epoch 3 loss 1.27896:  25%|██▌       | 7/28 [00:32<01:41,  4.82s/it]epoch 3 loss 1.294:  25%|██▌       | 7/28 [00:32<01:41,  4.82s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6606[0m
[32m  eval_f1 = 0.3416[0m
[32m  eval_mcc = 0.642[0m
[32m  eval_precision = 0.4522[0m
[32m  eval_recall = 0.3147[0m
[32m  ********************[0m
[32m  Best f1:0.3416[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.294:  29%|██▊       | 8/28 [00:40<01:56,  5.83s/it]epoch 3 loss 1.27548:  29%|██▊       | 8/28 [00:40<01:56,  5.83s/it]epoch 3 loss 1.27548:  32%|███▏      | 9/28 [00:40<01:18,  4.14s/it]epoch 3 loss 1.27865:  32%|███▏      | 9/28 [00:41<01:18,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6612[0m
[32m  eval_f1 = 0.3441[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.4603[0m
[32m  eval_recall = 0.3164[0m
[32m  ********************[0m
[32m  Best f1:0.3441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27865:  36%|███▌      | 10/28 [00:49<01:42,  5.69s/it]epoch 3 loss 1.28606:  36%|███▌      | 10/28 [00:50<01:42,  5.69s/it]epoch 3 loss 1.28606:  39%|███▉      | 11/28 [00:50<01:09,  4.08s/it]epoch 3 loss 1.28079:  39%|███▉      | 11/28 [00:50<01:09,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6616[0m
[32m  eval_f1 = 0.3449[0m
[32m  eval_mcc = 0.6428[0m
[32m  eval_precision = 0.453[0m
[32m  eval_recall = 0.3175[0m
[32m  ********************[0m
[32m  Best f1:0.3449[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28079:  43%|████▎     | 12/28 [00:58<01:23,  5.22s/it]epoch 3 loss 1.2717:  43%|████▎     | 12/28 [00:58<01:23,  5.22s/it] epoch 3 loss 1.2717:  46%|████▋     | 13/28 [00:58<00:56,  3.77s/it]epoch 3 loss 1.26023:  46%|████▋     | 13/28 [00:58<00:56,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6619[0m
[32m  eval_f1 = 0.3542[0m
[32m  eval_mcc = 0.6431[0m
[32m  eval_precision = 0.4706[0m
[32m  eval_recall = 0.3237[0m
[32m  ********************[0m
[32m  Best f1:0.3542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6431[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26023:  50%|█████     | 14/28 [01:10<01:27,  6.22s/it]epoch 3 loss 1.25504:  50%|█████     | 14/28 [01:10<01:27,  6.22s/it]epoch 3 loss 1.25504:  54%|█████▎    | 15/28 [01:10<00:58,  4.47s/it]epoch 3 loss 1.25439:  54%|█████▎    | 15/28 [01:11<00:58,  4.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6628[0m
[32m  eval_f1 = 0.3554[0m
[32m  eval_mcc = 0.644[0m
[32m  eval_precision = 0.468[0m
[32m  eval_recall = 0.3247[0m
[32m  ********************[0m
[32m  Best f1:0.3554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25439:  57%|█████▋    | 16/28 [01:19<01:07,  5.66s/it]epoch 3 loss 1.25237:  57%|█████▋    | 16/28 [01:19<01:07,  5.66s/it]epoch 3 loss 1.25237:  61%|██████    | 17/28 [01:19<00:44,  4.09s/it]epoch 3 loss 1.25363:  61%|██████    | 17/28 [01:20<00:44,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6646[0m
[32m  eval_f1 = 0.357[0m
[32m  eval_mcc = 0.6457[0m
[32m  eval_precision = 0.4681[0m
[32m  eval_recall = 0.3265[0m
[32m  ********************[0m
[32m  Best f1:0.357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25363:  64%|██████▍   | 18/28 [01:28<00:56,  5.60s/it]epoch 3 loss 1.25265:  64%|██████▍   | 18/28 [01:29<00:56,  5.60s/it]epoch 3 loss 1.25265:  68%|██████▊   | 19/28 [01:29<00:36,  4.04s/it]epoch 3 loss 1.24972:  68%|██████▊   | 19/28 [01:29<00:36,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6668[0m
[32m  eval_f1 = 0.3583[0m
[32m  eval_mcc = 0.6478[0m
[32m  eval_precision = 0.4665[0m
[32m  eval_recall = 0.3289[0m
[32m  ********************[0m
[32m  Best f1:0.3583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24972:  71%|███████▏  | 20/28 [01:37<00:42,  5.31s/it]epoch 3 loss 1.24735:  71%|███████▏  | 20/28 [01:37<00:42,  5.31s/it]epoch 3 loss 1.24735:  75%|███████▌  | 21/28 [01:37<00:26,  3.84s/it]epoch 3 loss 1.24627:  75%|███████▌  | 21/28 [01:38<00:26,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6673[0m
[32m  eval_f1 = 0.3597[0m
[32m  eval_mcc = 0.6483[0m
[32m  eval_precision = 0.4688[0m
[32m  eval_recall = 0.3307[0m
[32m  ********************[0m
[32m  Best f1:0.3597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24627:  79%|███████▊  | 22/28 [01:50<00:39,  6.55s/it]epoch 3 loss 1.24323:  79%|███████▊  | 22/28 [01:51<00:39,  6.55s/it]epoch 3 loss 1.24323:  82%|████████▏ | 23/28 [01:51<00:23,  4.71s/it]epoch 3 loss 1.24182:  82%|████████▏ | 23/28 [01:51<00:23,  4.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6668[0m
[32m  eval_f1 = 0.3589[0m
[32m  eval_mcc = 0.6478[0m
[32m  eval_precision = 0.4642[0m
[32m  eval_recall = 0.3302[0m

epoch 3 loss 1.24182:  86%|████████▌ | 24/28 [01:55<00:17,  4.43s/it]epoch 3 loss 1.23772:  86%|████████▌ | 24/28 [01:55<00:17,  4.43s/it]epoch 3 loss 1.23772:  89%|████████▉ | 25/28 [01:55<00:09,  3.22s/it]epoch 3 loss 1.23313:  89%|████████▉ | 25/28 [01:55<00:09,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6668[0m
[32m  eval_f1 = 0.359[0m
[32m  eval_mcc = 0.6478[0m
[32m  eval_precision = 0.4649[0m
[32m  eval_recall = 0.3299[0m

epoch 3 loss 1.23313:  93%|█████████▎| 26/28 [01:59<00:06,  3.39s/it]epoch 3 loss 1.23241:  93%|█████████▎| 26/28 [01:59<00:06,  3.39s/it]epoch 3 loss 1.23241:  96%|█████████▋| 27/28 [01:59<00:02,  2.49s/it]epoch 3 loss 1.24404:  96%|█████████▋| 27/28 [01:59<00:02,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6669[0m
[32m  eval_f1 = 0.3596[0m
[32m  eval_mcc = 0.648[0m
[32m  eval_precision = 0.4679[0m
[32m  eval_recall = 0.3302[0m

epoch 3 loss 1.24404: 100%|██████████| 28/28 [02:03<00:00,  2.82s/it]epoch 3 loss 1.24404: 100%|██████████| 28/28 [02:03<00:00,  4.40s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.15602:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.15602:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s]epoch 4 loss 1.16126:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3597[0m
[32m  eval_mcc = 0.6478[0m
[32m  eval_precision = 0.4691[0m
[32m  eval_recall = 0.3305[0m

epoch 4 loss 1.16126:   7%|▋         | 2/28 [00:04<01:02,  2.39s/it]epoch 4 loss 1.17188:   7%|▋         | 2/28 [00:04<01:02,  2.39s/it]epoch 4 loss 1.17188:  11%|█         | 3/28 [00:04<00:36,  1.48s/it]epoch 4 loss 1.15982:  11%|█         | 3/28 [00:04<00:36,  1.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.667[0m
[32m  eval_f1 = 0.3637[0m
[32m  eval_mcc = 0.6481[0m
[32m  eval_precision = 0.4777[0m
[32m  eval_recall = 0.3328[0m
[32m  ********************[0m
[32m  Best f1:0.3637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.15982:  14%|█▍        | 4/28 [00:09<01:10,  2.92s/it]epoch 4 loss 1.1672:  14%|█▍        | 4/28 [00:10<01:10,  2.92s/it] epoch 4 loss 1.1672:  18%|█▊        | 5/28 [00:10<00:46,  2.01s/it]epoch 4 loss 1.20552:  18%|█▊        | 5/28 [00:10<00:46,  2.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6685[0m
[32m  eval_f1 = 0.3654[0m
[32m  eval_mcc = 0.6497[0m
[32m  eval_precision = 0.4777[0m
[32m  eval_recall = 0.3343[0m
[32m  ********************[0m
[32m  Best f1:0.3654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20552:  21%|██▏       | 6/28 [00:21<01:55,  5.26s/it]epoch 4 loss 1.19479:  21%|██▏       | 6/28 [00:22<01:55,  5.26s/it]epoch 4 loss 1.19479:  25%|██▌       | 7/28 [00:22<01:17,  3.68s/it]epoch 4 loss 1.19463:  25%|██▌       | 7/28 [00:22<01:17,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6698[0m
[32m  eval_f1 = 0.3684[0m
[32m  eval_mcc = 0.6513[0m
[32m  eval_precision = 0.4796[0m
[32m  eval_recall = 0.3371[0m
[32m  ********************[0m
[32m  Best f1:0.3684[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19463:  29%|██▊       | 8/28 [00:31<01:52,  5.61s/it]epoch 4 loss 1.20674:  29%|██▊       | 8/28 [00:32<01:52,  5.61s/it]epoch 4 loss 1.20674:  32%|███▏      | 9/28 [00:32<01:15,  3.98s/it]epoch 4 loss 1.20326:  32%|███▏      | 9/28 [00:32<01:15,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6703[0m
[32m  eval_f1 = 0.3697[0m
[32m  eval_mcc = 0.6518[0m
[32m  eval_precision = 0.4791[0m
[32m  eval_recall = 0.3382[0m
[32m  ********************[0m
[32m  Best f1:0.3697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20326:  36%|███▌      | 10/28 [00:43<01:52,  6.27s/it]epoch 4 loss 1.20385:  36%|███▌      | 10/28 [00:44<01:52,  6.27s/it]epoch 4 loss 1.20385:  39%|███▉      | 11/28 [00:44<01:16,  4.48s/it]epoch 4 loss 1.20947:  39%|███▉      | 11/28 [00:44<01:16,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6709[0m
[32m  eval_f1 = 0.3707[0m
[32m  eval_mcc = 0.6525[0m
[32m  eval_precision = 0.4801[0m
[32m  eval_recall = 0.339[0m
[32m  ********************[0m
[32m  Best f1:0.3707[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6525[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20947:  43%|████▎     | 12/28 [00:54<01:38,  6.15s/it]epoch 4 loss 1.21135:  43%|████▎     | 12/28 [00:54<01:38,  6.15s/it]epoch 4 loss 1.21135:  46%|████▋     | 13/28 [00:54<01:06,  4.41s/it]epoch 4 loss 1.21074:  46%|████▋     | 13/28 [00:54<01:06,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6714[0m
[32m  eval_f1 = 0.3705[0m
[32m  eval_mcc = 0.653[0m
[32m  eval_precision = 0.4798[0m
[32m  eval_recall = 0.3389[0m
[32m  ********************[0m
[32m  Best MCC:0.653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21074:  50%|█████     | 14/28 [01:02<01:16,  5.46s/it]epoch 4 loss 1.21039:  50%|█████     | 14/28 [01:02<01:16,  5.46s/it]epoch 4 loss 1.21039:  54%|█████▎    | 15/28 [01:02<00:51,  3.94s/it]epoch 4 loss 1.21134:  54%|█████▎    | 15/28 [01:03<00:51,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6714[0m
[32m  eval_f1 = 0.3717[0m
[32m  eval_mcc = 0.653[0m
[32m  eval_precision = 0.4794[0m
[32m  eval_recall = 0.3398[0m
[32m  ********************[0m
[32m  Best f1:0.3717[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.21134:  57%|█████▋    | 16/28 [01:07<00:51,  4.29s/it]epoch 4 loss 1.21073:  57%|█████▋    | 16/28 [01:08<00:51,  4.29s/it]epoch 4 loss 1.21073:  61%|██████    | 17/28 [01:08<00:34,  3.12s/it]epoch 4 loss 1.20943:  61%|██████    | 17/28 [01:08<00:34,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.671[0m
[32m  eval_f1 = 0.3713[0m
[32m  eval_mcc = 0.6526[0m
[32m  eval_precision = 0.4789[0m
[32m  eval_recall = 0.3396[0m

epoch 4 loss 1.20943:  64%|██████▍   | 18/28 [01:12<00:33,  3.32s/it]epoch 4 loss 1.21019:  64%|██████▍   | 18/28 [01:12<00:33,  3.32s/it]epoch 4 loss 1.21019:  68%|██████▊   | 19/28 [01:12<00:22,  2.44s/it]epoch 4 loss 1.20784:  68%|██████▊   | 19/28 [01:12<00:22,  2.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6711[0m
[32m  eval_f1 = 0.372[0m
[32m  eval_mcc = 0.6526[0m
[32m  eval_precision = 0.4841[0m
[32m  eval_recall = 0.3399[0m
[32m  ********************[0m
[32m  Best f1:0.372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.20784:  71%|███████▏  | 20/28 [01:17<00:25,  3.25s/it]epoch 4 loss 1.21066:  71%|███████▏  | 20/28 [01:17<00:25,  3.25s/it]epoch 4 loss 1.21066:  75%|███████▌  | 21/28 [01:17<00:16,  2.39s/it]epoch 4 loss 1.21452:  75%|███████▌  | 21/28 [01:18<00:16,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6709[0m
[32m  eval_f1 = 0.3716[0m
[32m  eval_mcc = 0.6524[0m
[32m  eval_precision = 0.4834[0m
[32m  eval_recall = 0.3396[0m

epoch 4 loss 1.21452:  79%|███████▊  | 22/28 [01:21<00:16,  2.81s/it]epoch 4 loss 1.20995:  79%|███████▊  | 22/28 [01:22<00:16,  2.81s/it]epoch 4 loss 1.20995:  82%|████████▏ | 23/28 [01:22<00:10,  2.09s/it]epoch 4 loss 1.20829:  82%|████████▏ | 23/28 [01:22<00:10,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6703[0m
[32m  eval_f1 = 0.3711[0m
[32m  eval_mcc = 0.6517[0m
[32m  eval_precision = 0.4831[0m
[32m  eval_recall = 0.3393[0m

epoch 4 loss 1.20829:  86%|████████▌ | 24/28 [01:25<00:10,  2.60s/it]epoch 4 loss 1.20677:  86%|████████▌ | 24/28 [01:26<00:10,  2.60s/it]epoch 4 loss 1.20677:  89%|████████▉ | 25/28 [01:26<00:05,  1.94s/it]epoch 4 loss 1.20306:  89%|████████▉ | 25/28 [01:26<00:05,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6701[0m
[32m  eval_f1 = 0.3708[0m
[32m  eval_mcc = 0.6515[0m
[32m  eval_precision = 0.482[0m
[32m  eval_recall = 0.3391[0m

epoch 4 loss 1.20306:  93%|█████████▎| 26/28 [01:30<00:04,  2.49s/it]epoch 4 loss 1.201:  93%|█████████▎| 26/28 [01:30<00:04,  2.49s/it]  epoch 4 loss 1.201:  96%|█████████▋| 27/28 [01:30<00:01,  1.87s/it]epoch 4 loss 1.19886:  96%|█████████▋| 27/28 [01:30<00:01,  1.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6701[0m
[32m  eval_f1 = 0.3708[0m
[32m  eval_mcc = 0.6515[0m
[32m  eval_precision = 0.4821[0m
[32m  eval_recall = 0.3391[0m

epoch 4 loss 1.19886: 100%|██████████| 28/28 [01:34<00:00,  2.38s/it]epoch 4 loss 1.19886: 100%|██████████| 28/28 [01:34<00:00,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6711[0m
[32m  eval_f1 = 0.372[0m
[32m  eval_mcc = 0.6526[0m
[32m  eval_precision = 0.4841[0m
[32m  eval_recall = 0.3399[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6504[0m
[32m  eval_f1 = 0.29[0m
[32m  eval_mcc = 0.6318[0m
[32m  eval_precision = 0.3622[0m
[32m  eval_recall = 0.271[0m

