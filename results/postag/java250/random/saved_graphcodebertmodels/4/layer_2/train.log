[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=2, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.76691:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.76691:   4%|▎         | 1/28 [00:00<00:20,  1.29it/s]epoch 0 loss 5.76398:   4%|▎         | 1/28 [00:01<00:20,  1.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0025[0m
[32m  eval_f1 = 0.001[0m
[32m  eval_mcc = 0.0002[0m
[32m  eval_precision = 0.0016[0m
[32m  eval_recall = 0.0014[0m
[32m  ********************[0m
[32m  Best f1:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.76398:   7%|▋         | 2/28 [00:06<01:31,  3.52s/it]epoch 0 loss 5.75773:   7%|▋         | 2/28 [00:06<01:31,  3.52s/it]epoch 0 loss 5.75773:  11%|█         | 3/28 [00:06<00:52,  2.09s/it]epoch 0 loss 5.74591:  11%|█         | 3/28 [00:07<00:52,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.005[0m
[32m  eval_f1 = 0.0013[0m
[32m  eval_mcc = 0.0008[0m
[32m  eval_precision = 0.0026[0m
[32m  eval_recall = 0.0015[0m
[32m  ********************[0m
[32m  Best f1:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.74591:  14%|█▍        | 4/28 [00:16<02:06,  5.26s/it]epoch 0 loss 5.72491:  14%|█▍        | 4/28 [00:17<02:06,  5.26s/it]epoch 0 loss 5.72491:  18%|█▊        | 5/28 [00:17<01:20,  3.51s/it]epoch 0 loss 5.69591:  18%|█▊        | 5/28 [00:17<01:20,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0109[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = 0.0026[0m
[32m  eval_precision = 0.0081[0m
[32m  eval_recall = 0.0028[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.69591:  21%|██▏       | 6/28 [00:25<01:50,  5.01s/it]epoch 0 loss 5.66278:  21%|██▏       | 6/28 [00:25<01:50,  5.01s/it]epoch 0 loss 5.66278:  25%|██▌       | 7/28 [00:25<01:13,  3.51s/it]epoch 0 loss 5.6173:  25%|██▌       | 7/28 [00:25<01:13,  3.51s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0258[0m
[32m  eval_f1 = 0.0037[0m
[32m  eval_mcc = 0.0088[0m
[32m  eval_precision = 0.0133[0m
[32m  eval_recall = 0.0081[0m
[32m  ********************[0m
[32m  Best f1:0.0037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.6173:  29%|██▊       | 8/28 [00:35<01:52,  5.62s/it]epoch 0 loss 5.56797:  29%|██▊       | 8/28 [00:36<01:52,  5.62s/it]epoch 0 loss 5.56797:  32%|███▏      | 9/28 [00:36<01:15,  4.00s/it]epoch 0 loss 5.51281:  32%|███▏      | 9/28 [00:36<01:15,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0414[0m
[32m  eval_f1 = 0.007[0m
[32m  eval_mcc = 0.0152[0m
[32m  eval_precision = 0.0173[0m
[32m  eval_recall = 0.0132[0m
[32m  ********************[0m
[32m  Best f1:0.007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0152[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.51281:  36%|███▌      | 10/28 [00:44<01:36,  5.34s/it]epoch 0 loss 5.45259:  36%|███▌      | 10/28 [00:44<01:36,  5.34s/it]epoch 0 loss 5.45259:  39%|███▉      | 11/28 [00:44<01:05,  3.83s/it]epoch 0 loss 5.38621:  39%|███▉      | 11/28 [00:45<01:05,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0666[0m
[32m  eval_f1 = 0.0257[0m
[32m  eval_mcc = 0.0378[0m
[32m  eval_precision = 0.0414[0m
[32m  eval_recall = 0.0292[0m
[32m  ********************[0m
[32m  Best f1:0.0257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.38621:  43%|████▎     | 12/28 [00:54<01:31,  5.74s/it]epoch 0 loss 5.31527:  43%|████▎     | 12/28 [00:55<01:31,  5.74s/it]epoch 0 loss 5.31527:  46%|████▋     | 13/28 [00:55<01:01,  4.13s/it]epoch 0 loss 5.24085:  46%|████▋     | 13/28 [00:55<01:01,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1019[0m
[32m  eval_f1 = 0.0404[0m
[32m  eval_mcc = 0.0705[0m
[32m  eval_precision = 0.0724[0m
[32m  eval_recall = 0.0411[0m
[32m  ********************[0m
[32m  Best f1:0.0404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.24085:  50%|█████     | 14/28 [01:03<01:15,  5.38s/it]epoch 0 loss 5.16557:  50%|█████     | 14/28 [01:04<01:15,  5.38s/it]epoch 0 loss 5.16557:  54%|█████▎    | 15/28 [01:04<00:50,  3.89s/it]epoch 0 loss 5.08686:  54%|█████▎    | 15/28 [01:04<00:50,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1685[0m
[32m  eval_f1 = 0.0667[0m
[32m  eval_mcc = 0.1309[0m
[32m  eval_precision = 0.1031[0m
[32m  eval_recall = 0.0629[0m
[32m  ********************[0m
[32m  Best f1:0.0667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.08686:  57%|█████▋    | 16/28 [01:14<01:09,  5.83s/it]epoch 0 loss 5.00709:  57%|█████▋    | 16/28 [01:14<01:09,  5.83s/it]epoch 0 loss 5.00709:  61%|██████    | 17/28 [01:14<00:46,  4.21s/it]epoch 0 loss 4.92683:  61%|██████    | 17/28 [01:15<00:46,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2549[0m
[32m  eval_f1 = 0.0819[0m
[32m  eval_mcc = 0.2081[0m
[32m  eval_precision = 0.1151[0m
[32m  eval_recall = 0.078[0m
[32m  ********************[0m
[32m  Best f1:0.0819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.92683:  64%|██████▍   | 18/28 [01:23<00:56,  5.65s/it]epoch 0 loss 4.84164:  64%|██████▍   | 18/28 [01:24<00:56,  5.65s/it]epoch 0 loss 4.84164:  68%|██████▊   | 19/28 [01:24<00:36,  4.09s/it]epoch 0 loss 4.76141:  68%|██████▊   | 19/28 [01:24<00:36,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3321[0m
[32m  eval_f1 = 0.0942[0m
[32m  eval_mcc = 0.2846[0m
[32m  eval_precision = 0.1392[0m
[32m  eval_recall = 0.0878[0m
[32m  ********************[0m
[32m  Best f1:0.0942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2846[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.76141:  71%|███████▏  | 20/28 [01:34<00:47,  5.89s/it]epoch 0 loss 4.68306:  71%|███████▏  | 20/28 [01:34<00:47,  5.89s/it]epoch 0 loss 4.68306:  75%|███████▌  | 21/28 [01:34<00:29,  4.25s/it]epoch 0 loss 4.60748:  75%|███████▌  | 21/28 [01:35<00:29,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.373[0m
[32m  eval_f1 = 0.0955[0m
[32m  eval_mcc = 0.328[0m
[32m  eval_precision = 0.1472[0m
[32m  eval_recall = 0.0895[0m
[32m  ********************[0m
[32m  Best f1:0.0955[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.60748:  79%|███████▊  | 22/28 [01:43<00:33,  5.53s/it]epoch 0 loss 4.52715:  79%|███████▊  | 22/28 [01:43<00:33,  5.53s/it]epoch 0 loss 4.52715:  82%|████████▏ | 23/28 [01:43<00:19,  3.99s/it]epoch 0 loss 4.45302:  82%|████████▏ | 23/28 [01:44<00:19,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3901[0m
[32m  eval_f1 = 0.093[0m
[32m  eval_mcc = 0.3472[0m
[32m  eval_precision = 0.1492[0m
[32m  eval_recall = 0.0885[0m
[32m  ********************[0m
[32m  Best MCC:0.3472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.45302:  86%|████████▌ | 24/28 [01:50<00:19,  4.82s/it]epoch 0 loss 4.38037:  86%|████████▌ | 24/28 [01:50<00:19,  4.82s/it]epoch 0 loss 4.38037:  89%|████████▉ | 25/28 [01:50<00:10,  3.50s/it]epoch 0 loss 4.3073:  89%|████████▉ | 25/28 [01:51<00:10,  3.50s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4138[0m
[32m  eval_f1 = 0.1009[0m
[32m  eval_mcc = 0.3739[0m
[32m  eval_precision = 0.1699[0m
[32m  eval_recall = 0.0944[0m
[32m  ********************[0m
[32m  Best f1:0.1009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.3073:  93%|█████████▎| 26/28 [01:57<00:08,  4.40s/it]epoch 0 loss 4.2388:  93%|█████████▎| 26/28 [01:57<00:08,  4.40s/it]epoch 0 loss 4.2388:  96%|█████████▋| 27/28 [01:57<00:03,  3.21s/it]epoch 0 loss 4.16768:  96%|█████████▋| 27/28 [01:57<00:03,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4691[0m
[32m  eval_f1 = 0.1291[0m
[32m  eval_mcc = 0.4351[0m
[32m  eval_precision = 0.1759[0m
[32m  eval_recall = 0.1225[0m
[32m  ********************[0m
[32m  Best f1:0.1291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.16768: 100%|██████████| 28/28 [02:03<00:00,  4.10s/it]epoch 0 loss 4.16768: 100%|██████████| 28/28 [02:03<00:00,  4.43s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.28349:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.28349:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.27555:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5092[0m
[32m  eval_f1 = 0.1451[0m
[32m  eval_mcc = 0.4784[0m
[32m  eval_precision = 0.1862[0m
[32m  eval_recall = 0.1399[0m
[32m  ********************[0m
[32m  Best f1:0.1451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27555:   7%|▋         | 2/28 [00:09<02:21,  5.44s/it]epoch 1 loss 2.25047:   7%|▋         | 2/28 [00:09<02:21,  5.44s/it]epoch 1 loss 2.25047:  11%|█         | 3/28 [00:09<01:18,  3.15s/it]epoch 1 loss 2.23688:  11%|█         | 3/28 [00:10<01:18,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.539[0m
[32m  eval_f1 = 0.1595[0m
[32m  eval_mcc = 0.5103[0m
[32m  eval_precision = 0.1977[0m
[32m  eval_recall = 0.1547[0m
[32m  ********************[0m
[32m  Best f1:0.1595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23688:  14%|█▍        | 4/28 [00:21<02:39,  6.67s/it]epoch 1 loss 2.17946:  14%|█▍        | 4/28 [00:22<02:39,  6.67s/it]epoch 1 loss 2.17946:  18%|█▊        | 5/28 [00:22<01:41,  4.41s/it]epoch 1 loss 2.12553:  18%|█▊        | 5/28 [00:22<01:41,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5621[0m
[32m  eval_f1 = 0.1691[0m
[32m  eval_mcc = 0.5353[0m
[32m  eval_precision = 0.2049[0m
[32m  eval_recall = 0.1651[0m
[32m  ********************[0m
[32m  Best f1:0.1691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12553:  21%|██▏       | 6/28 [00:38<03:08,  8.56s/it]epoch 1 loss 2.09361:  21%|██▏       | 6/28 [00:39<03:08,  8.56s/it]epoch 1 loss 2.09361:  25%|██▌       | 7/28 [00:39<02:03,  5.90s/it]epoch 1 loss 2.04406:  25%|██▌       | 7/28 [00:39<02:03,  5.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5711[0m
[32m  eval_f1 = 0.179[0m
[32m  eval_mcc = 0.5463[0m
[32m  eval_precision = 0.2389[0m
[32m  eval_recall = 0.172[0m
[32m  ********************[0m
[32m  Best f1:0.179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5463[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04406:  29%|██▊       | 8/28 [00:49<02:25,  7.30s/it]epoch 1 loss 2.00121:  29%|██▊       | 8/28 [00:50<02:25,  7.30s/it]epoch 1 loss 2.00121:  32%|███▏      | 9/28 [00:50<01:37,  5.15s/it]epoch 1 loss 1.98027:  32%|███▏      | 9/28 [00:50<01:37,  5.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5792[0m
[32m  eval_f1 = 0.1899[0m
[32m  eval_mcc = 0.5559[0m
[32m  eval_precision = 0.2537[0m
[32m  eval_recall = 0.1813[0m
[32m  ********************[0m
[32m  Best f1:0.1899[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98027:  36%|███▌      | 10/28 [01:00<02:01,  6.75s/it]epoch 1 loss 1.95948:  36%|███▌      | 10/28 [01:00<02:01,  6.75s/it]epoch 1 loss 1.95948:  39%|███▉      | 11/28 [01:00<01:21,  4.81s/it]epoch 1 loss 1.94368:  39%|███▉      | 11/28 [01:01<01:21,  4.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5871[0m
[32m  eval_f1 = 0.1996[0m
[32m  eval_mcc = 0.5646[0m
[32m  eval_precision = 0.2657[0m
[32m  eval_recall = 0.1877[0m
[32m  ********************[0m
[32m  Best f1:0.1996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94368:  43%|████▎     | 12/28 [01:11<01:45,  6.59s/it]epoch 1 loss 1.91816:  43%|████▎     | 12/28 [01:11<01:45,  6.59s/it]epoch 1 loss 1.91816:  46%|████▋     | 13/28 [01:11<01:10,  4.72s/it]epoch 1 loss 1.90285:  46%|████▋     | 13/28 [01:12<01:10,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.592[0m
[32m  eval_f1 = 0.2103[0m
[32m  eval_mcc = 0.5703[0m
[32m  eval_precision = 0.3039[0m
[32m  eval_recall = 0.1939[0m
[32m  ********************[0m
[32m  Best f1:0.2103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5703[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90285:  50%|█████     | 14/28 [01:22<01:29,  6.39s/it]epoch 1 loss 1.89575:  50%|█████     | 14/28 [01:22<01:29,  6.39s/it]epoch 1 loss 1.89575:  54%|█████▎    | 15/28 [01:22<00:59,  4.59s/it]epoch 1 loss 1.88074:  54%|█████▎    | 15/28 [01:22<00:59,  4.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6008[0m
[32m  eval_f1 = 0.2404[0m
[32m  eval_mcc = 0.579[0m
[32m  eval_precision = 0.3472[0m
[32m  eval_recall = 0.2198[0m
[32m  ********************[0m
[32m  Best f1:0.2404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88074:  57%|█████▋    | 16/28 [01:30<01:09,  5.76s/it]epoch 1 loss 1.86151:  57%|█████▋    | 16/28 [01:31<01:09,  5.76s/it]epoch 1 loss 1.86151:  61%|██████    | 17/28 [01:31<00:45,  4.15s/it]epoch 1 loss 1.8468:  61%|██████    | 17/28 [01:31<00:45,  4.15s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6051[0m
[32m  eval_f1 = 0.2512[0m
[32m  eval_mcc = 0.5828[0m
[32m  eval_precision = 0.351[0m
[32m  eval_recall = 0.23[0m
[32m  ********************[0m
[32m  Best f1:0.2512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8468:  64%|██████▍   | 18/28 [01:41<00:59,  5.96s/it]epoch 1 loss 1.82535:  64%|██████▍   | 18/28 [01:41<00:59,  5.96s/it]epoch 1 loss 1.82535:  68%|██████▊   | 19/28 [01:41<00:38,  4.29s/it]epoch 1 loss 1.81256:  68%|██████▊   | 19/28 [01:42<00:38,  4.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6097[0m
[32m  eval_f1 = 0.2581[0m
[32m  eval_mcc = 0.5873[0m
[32m  eval_precision = 0.3546[0m
[32m  eval_recall = 0.2364[0m
[32m  ********************[0m
[32m  Best f1:0.2581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81256:  71%|███████▏  | 20/28 [01:50<00:44,  5.52s/it]epoch 1 loss 1.79879:  71%|███████▏  | 20/28 [01:50<00:44,  5.52s/it]epoch 1 loss 1.79879:  75%|███████▌  | 21/28 [01:50<00:27,  3.99s/it]epoch 1 loss 1.7936:  75%|███████▌  | 21/28 [01:51<00:27,  3.99s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6142[0m
[32m  eval_f1 = 0.2706[0m
[32m  eval_mcc = 0.5919[0m
[32m  eval_precision = 0.3746[0m
[32m  eval_recall = 0.2475[0m
[32m  ********************[0m
[32m  Best f1:0.2706[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5919[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7936:  79%|███████▊  | 22/28 [02:00<00:34,  5.71s/it]epoch 1 loss 1.77816:  79%|███████▊  | 22/28 [02:00<00:34,  5.71s/it]epoch 1 loss 1.77816:  82%|████████▏ | 23/28 [02:00<00:20,  4.12s/it]epoch 1 loss 1.76494:  82%|████████▏ | 23/28 [02:01<00:20,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6215[0m
[32m  eval_f1 = 0.2818[0m
[32m  eval_mcc = 0.5996[0m
[32m  eval_precision = 0.3709[0m
[32m  eval_recall = 0.2591[0m
[32m  ********************[0m
[32m  Best f1:0.2818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76494:  86%|████████▌ | 24/28 [02:09<00:21,  5.36s/it]epoch 1 loss 1.75614:  86%|████████▌ | 24/28 [02:09<00:21,  5.36s/it]epoch 1 loss 1.75614:  89%|████████▉ | 25/28 [02:09<00:11,  3.88s/it]epoch 1 loss 1.73862:  89%|████████▉ | 25/28 [02:09<00:11,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6243[0m
[32m  eval_f1 = 0.2828[0m
[32m  eval_mcc = 0.603[0m
[32m  eval_precision = 0.3681[0m
[32m  eval_recall = 0.2618[0m
[32m  ********************[0m
[32m  Best f1:0.2828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.603[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.73862:  93%|█████████▎| 26/28 [02:19<00:11,  5.66s/it]epoch 1 loss 1.73191:  93%|█████████▎| 26/28 [02:19<00:11,  5.66s/it]epoch 1 loss 1.73191:  96%|█████████▋| 27/28 [02:19<00:04,  4.09s/it]epoch 1 loss 1.71746:  96%|█████████▋| 27/28 [02:20<00:04,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6259[0m
[32m  eval_f1 = 0.2855[0m
[32m  eval_mcc = 0.6056[0m
[32m  eval_precision = 0.3691[0m
[32m  eval_recall = 0.2647[0m
[32m  ********************[0m
[32m  Best f1:0.2855[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.71746: 100%|██████████| 28/28 [02:27<00:00,  5.25s/it]epoch 1 loss 1.71746: 100%|██████████| 28/28 [02:27<00:00,  5.28s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.3773:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.3773:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 2 loss 1.43616:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6272[0m
[32m  eval_f1 = 0.2877[0m
[32m  eval_mcc = 0.608[0m
[32m  eval_precision = 0.3809[0m
[32m  eval_recall = 0.2664[0m
[32m  ********************[0m
[32m  Best f1:0.2877[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43616:   7%|▋         | 2/28 [00:10<02:36,  6.02s/it]epoch 2 loss 1.4547:   7%|▋         | 2/28 [00:10<02:36,  6.02s/it] epoch 2 loss 1.4547:  11%|█         | 3/28 [00:10<01:26,  3.46s/it]epoch 2 loss 1.42609:  11%|█         | 3/28 [00:11<01:26,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.63[0m
[32m  eval_f1 = 0.2905[0m
[32m  eval_mcc = 0.6113[0m
[32m  eval_precision = 0.3842[0m
[32m  eval_recall = 0.27[0m
[32m  ********************[0m
[32m  Best f1:0.2905[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42609:  14%|█▍        | 4/28 [00:19<02:10,  5.44s/it]epoch 2 loss 1.42353:  14%|█▍        | 4/28 [00:19<02:10,  5.44s/it]epoch 2 loss 1.42353:  18%|█▊        | 5/28 [00:19<01:23,  3.63s/it]epoch 2 loss 1.42097:  18%|█▊        | 5/28 [00:20<01:23,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6356[0m
[32m  eval_f1 = 0.2938[0m
[32m  eval_mcc = 0.6172[0m
[32m  eval_precision = 0.3753[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best f1:0.2938[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42097:  21%|██▏       | 6/28 [00:30<02:10,  5.94s/it]epoch 2 loss 1.40991:  21%|██▏       | 6/28 [00:30<02:10,  5.94s/it]epoch 2 loss 1.40991:  25%|██▌       | 7/28 [00:30<01:26,  4.13s/it]epoch 2 loss 1.39946:  25%|██▌       | 7/28 [00:30<01:26,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6406[0m
[32m  eval_f1 = 0.2963[0m
[32m  eval_mcc = 0.6215[0m
[32m  eval_precision = 0.3761[0m
[32m  eval_recall = 0.2763[0m
[32m  ********************[0m
[32m  Best f1:0.2963[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39946:  29%|██▊       | 8/28 [00:41<02:03,  6.18s/it]epoch 2 loss 1.39834:  29%|██▊       | 8/28 [00:41<02:03,  6.18s/it]epoch 2 loss 1.39834:  32%|███▏      | 9/28 [00:41<01:23,  4.38s/it]epoch 2 loss 1.39283:  32%|███▏      | 9/28 [00:41<01:23,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6422[0m
[32m  eval_f1 = 0.3014[0m
[32m  eval_mcc = 0.622[0m
[32m  eval_precision = 0.387[0m
[32m  eval_recall = 0.2805[0m
[32m  ********************[0m
[32m  Best f1:0.3014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39283:  36%|███▌      | 10/28 [00:50<01:46,  5.93s/it]epoch 2 loss 1.38914:  36%|███▌      | 10/28 [00:51<01:46,  5.93s/it]epoch 2 loss 1.38914:  39%|███▉      | 11/28 [00:51<01:12,  4.24s/it]epoch 2 loss 1.38686:  39%|███▉      | 11/28 [00:51<01:12,  4.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6441[0m
[32m  eval_f1 = 0.3098[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.4075[0m
[32m  eval_recall = 0.2861[0m
[32m  ********************[0m
[32m  Best f1:0.3098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38686:  43%|████▎     | 12/28 [01:01<01:38,  6.17s/it]epoch 2 loss 1.38539:  43%|████▎     | 12/28 [01:02<01:38,  6.17s/it]epoch 2 loss 1.38539:  46%|████▋     | 13/28 [01:02<01:06,  4.43s/it]epoch 2 loss 1.3818:  46%|████▋     | 13/28 [01:02<01:06,  4.43s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6478[0m
[32m  eval_f1 = 0.3142[0m
[32m  eval_mcc = 0.6271[0m
[32m  eval_precision = 0.405[0m
[32m  eval_recall = 0.291[0m
[32m  ********************[0m
[32m  Best f1:0.3142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3818:  50%|█████     | 14/28 [01:10<01:18,  5.58s/it]epoch 2 loss 1.37764:  50%|█████     | 14/28 [01:11<01:18,  5.58s/it]epoch 2 loss 1.37764:  54%|█████▎    | 15/28 [01:11<00:52,  4.03s/it]epoch 2 loss 1.36551:  54%|█████▎    | 15/28 [01:11<00:52,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6492[0m
[32m  eval_f1 = 0.3174[0m
[32m  eval_mcc = 0.6286[0m
[32m  eval_precision = 0.4151[0m
[32m  eval_recall = 0.2944[0m
[32m  ********************[0m
[32m  Best f1:0.3174[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36551:  57%|█████▋    | 16/28 [01:20<01:09,  5.81s/it]epoch 2 loss 1.36069:  57%|█████▋    | 16/28 [01:21<01:09,  5.81s/it]epoch 2 loss 1.36069:  61%|██████    | 17/28 [01:21<00:46,  4.19s/it]epoch 2 loss 1.35883:  61%|██████    | 17/28 [01:21<00:46,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6503[0m
[32m  eval_f1 = 0.3211[0m
[32m  eval_mcc = 0.6299[0m
[32m  eval_precision = 0.4177[0m
[32m  eval_recall = 0.2971[0m
[32m  ********************[0m
[32m  Best f1:0.3211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35883:  64%|██████▍   | 18/28 [01:29<00:54,  5.47s/it]epoch 2 loss 1.3591:  64%|██████▍   | 18/28 [01:30<00:54,  5.47s/it] epoch 2 loss 1.3591:  68%|██████▊   | 19/28 [01:30<00:35,  3.95s/it]epoch 2 loss 1.3574:  68%|██████▊   | 19/28 [01:30<00:35,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3228[0m
[32m  eval_mcc = 0.633[0m
[32m  eval_precision = 0.4172[0m
[32m  eval_recall = 0.299[0m
[32m  ********************[0m
[32m  Best f1:0.3228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3574:  71%|███████▏  | 20/28 [01:40<00:46,  5.86s/it]epoch 2 loss 1.34381:  71%|███████▏  | 20/28 [01:40<00:46,  5.86s/it]epoch 2 loss 1.34381:  75%|███████▌  | 21/28 [01:40<00:29,  4.22s/it]epoch 2 loss 1.33876:  75%|███████▌  | 21/28 [01:41<00:29,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3244[0m
[32m  eval_mcc = 0.6343[0m
[32m  eval_precision = 0.4199[0m
[32m  eval_recall = 0.2995[0m
[32m  ********************[0m
[32m  Best f1:0.3244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33876:  79%|███████▊  | 22/28 [01:51<00:37,  6.17s/it]epoch 2 loss 1.33371:  79%|███████▊  | 22/28 [01:52<00:37,  6.17s/it]epoch 2 loss 1.33371:  82%|████████▏ | 23/28 [01:52<00:22,  4.44s/it]epoch 2 loss 1.33847:  82%|████████▏ | 23/28 [01:52<00:22,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6536[0m
[32m  eval_f1 = 0.3258[0m
[32m  eval_mcc = 0.6357[0m
[32m  eval_precision = 0.4222[0m
[32m  eval_recall = 0.3007[0m
[32m  ********************[0m
[32m  Best f1:0.3258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33847:  86%|████████▌ | 24/28 [02:01<00:23,  5.97s/it]epoch 2 loss 1.33152:  86%|████████▌ | 24/28 [02:02<00:23,  5.97s/it]epoch 2 loss 1.33152:  89%|████████▉ | 25/28 [02:02<00:12,  4.31s/it]epoch 2 loss 1.32834:  89%|████████▉ | 25/28 [02:02<00:12,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3272[0m
[32m  eval_mcc = 0.6369[0m
[32m  eval_precision = 0.4239[0m
[32m  eval_recall = 0.3019[0m
[32m  ********************[0m
[32m  Best f1:0.3272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32834:  93%|█████████▎| 26/28 [02:11<00:11,  5.92s/it]epoch 2 loss 1.33259:  93%|█████████▎| 26/28 [02:12<00:11,  5.92s/it]epoch 2 loss 1.33259:  96%|█████████▋| 27/28 [02:12<00:04,  4.27s/it]epoch 2 loss 1.32852:  96%|█████████▋| 27/28 [02:12<00:04,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6568[0m
[32m  eval_f1 = 0.3297[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.4261[0m
[32m  eval_recall = 0.305[0m
[32m  ********************[0m
[32m  Best f1:0.3297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32852: 100%|██████████| 28/28 [02:20<00:00,  5.56s/it]epoch 2 loss 1.32852: 100%|██████████| 28/28 [02:20<00:00,  5.03s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.12497:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.12497:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 3 loss 1.16245:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6572[0m
[32m  eval_f1 = 0.331[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.4263[0m
[32m  eval_recall = 0.306[0m
[32m  ********************[0m
[32m  Best f1:0.331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16245:   7%|▋         | 2/28 [00:10<02:37,  6.05s/it]epoch 3 loss 1.16738:   7%|▋         | 2/28 [00:10<02:37,  6.05s/it]epoch 3 loss 1.16738:  11%|█         | 3/28 [00:10<01:27,  3.48s/it]epoch 3 loss 1.17872:  11%|█         | 3/28 [00:11<01:27,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6572[0m
[32m  eval_f1 = 0.3403[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4494[0m
[32m  eval_recall = 0.3143[0m
[32m  ********************[0m
[32m  Best f1:0.3403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.17872:  14%|█▍        | 4/28 [00:16<01:47,  4.49s/it]epoch 3 loss 1.2024:  14%|█▍        | 4/28 [00:17<01:47,  4.49s/it] epoch 3 loss 1.2024:  18%|█▊        | 5/28 [00:17<01:09,  3.03s/it]epoch 3 loss 1.20606:  18%|█▊        | 5/28 [00:17<01:09,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3444[0m
[32m  eval_mcc = 0.6382[0m
[32m  eval_precision = 0.4486[0m
[32m  eval_recall = 0.3178[0m
[32m  ********************[0m
[32m  Best f1:0.3444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20606:  21%|██▏       | 6/28 [00:27<01:57,  5.34s/it]epoch 3 loss 1.19555:  21%|██▏       | 6/28 [00:27<01:57,  5.34s/it]epoch 3 loss 1.19555:  25%|██▌       | 7/28 [00:27<01:18,  3.73s/it]epoch 3 loss 1.18519:  25%|██▌       | 7/28 [00:27<01:18,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6587[0m
[32m  eval_f1 = 0.3454[0m
[32m  eval_mcc = 0.6389[0m
[32m  eval_precision = 0.4497[0m
[32m  eval_recall = 0.318[0m
[32m  ********************[0m
[32m  Best f1:0.3454[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18519:  29%|██▊       | 8/28 [00:35<01:41,  5.06s/it]epoch 3 loss 1.20411:  29%|██▊       | 8/28 [00:35<01:41,  5.06s/it]epoch 3 loss 1.20411:  32%|███▏      | 9/28 [00:35<01:08,  3.61s/it]epoch 3 loss 1.21372:  32%|███▏      | 9/28 [00:36<01:08,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6608[0m
[32m  eval_f1 = 0.3424[0m
[32m  eval_mcc = 0.6414[0m
[32m  eval_precision = 0.4426[0m
[32m  eval_recall = 0.3159[0m
[32m  ********************[0m
[32m  Best MCC:0.6414[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21372:  36%|███▌      | 10/28 [00:43<01:25,  4.77s/it]epoch 3 loss 1.22886:  36%|███▌      | 10/28 [00:43<01:25,  4.77s/it]epoch 3 loss 1.22886:  39%|███▉      | 11/28 [00:43<00:58,  3.44s/it]epoch 3 loss 1.2459:  39%|███▉      | 11/28 [00:44<00:58,  3.44s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.663[0m
[32m  eval_f1 = 0.3477[0m
[32m  eval_mcc = 0.6439[0m
[32m  eval_precision = 0.4502[0m
[32m  eval_recall = 0.3206[0m
[32m  ********************[0m
[32m  Best f1:0.3477[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2459:  43%|████▎     | 12/28 [00:52<01:23,  5.23s/it]epoch 3 loss 1.24633:  43%|████▎     | 12/28 [00:53<01:23,  5.23s/it]epoch 3 loss 1.24633:  46%|████▋     | 13/28 [00:53<00:56,  3.77s/it]epoch 3 loss 1.24105:  46%|████▋     | 13/28 [00:53<00:56,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3499[0m
[32m  eval_mcc = 0.647[0m
[32m  eval_precision = 0.4534[0m
[32m  eval_recall = 0.3229[0m
[32m  ********************[0m
[32m  Best f1:0.3499[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24105:  50%|█████     | 14/28 [01:03<01:20,  5.72s/it]epoch 3 loss 1.2404:  50%|█████     | 14/28 [01:04<01:20,  5.72s/it] epoch 3 loss 1.2404:  54%|█████▎    | 15/28 [01:04<00:53,  4.12s/it]epoch 3 loss 1.23573:  54%|█████▎    | 15/28 [01:04<00:53,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6673[0m
[32m  eval_f1 = 0.3515[0m
[32m  eval_mcc = 0.6489[0m
[32m  eval_precision = 0.4519[0m
[32m  eval_recall = 0.3249[0m
[32m  ********************[0m
[32m  Best f1:0.3515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23573:  57%|█████▋    | 16/28 [01:10<00:56,  4.72s/it]epoch 3 loss 1.23678:  57%|█████▋    | 16/28 [01:10<00:56,  4.72s/it]epoch 3 loss 1.23678:  61%|██████    | 17/28 [01:10<00:37,  3.43s/it]epoch 3 loss 1.2412:  61%|██████    | 17/28 [01:10<00:37,  3.43s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6668[0m
[32m  eval_f1 = 0.3533[0m
[32m  eval_mcc = 0.6485[0m
[32m  eval_precision = 0.4497[0m
[32m  eval_recall = 0.3264[0m
[32m  ********************[0m
[32m  Best f1:0.3533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.2412:  64%|██████▍   | 18/28 [01:15<00:39,  3.92s/it]epoch 3 loss 1.2426:  64%|██████▍   | 18/28 [01:16<00:39,  3.92s/it]epoch 3 loss 1.2426:  68%|██████▊   | 19/28 [01:16<00:25,  2.86s/it]epoch 3 loss 1.23976:  68%|██████▊   | 19/28 [01:16<00:25,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6669[0m
[32m  eval_f1 = 0.3553[0m
[32m  eval_mcc = 0.6485[0m
[32m  eval_precision = 0.454[0m
[32m  eval_recall = 0.3281[0m
[32m  ********************[0m
[32m  Best f1:0.3553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.23976:  71%|███████▏  | 20/28 [01:23<00:33,  4.15s/it]epoch 3 loss 1.23628:  71%|███████▏  | 20/28 [01:23<00:33,  4.15s/it]epoch 3 loss 1.23628:  75%|███████▌  | 21/28 [01:23<00:21,  3.04s/it]epoch 3 loss 1.23186:  75%|███████▌  | 21/28 [01:24<00:21,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6666[0m
[32m  eval_f1 = 0.3562[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.4547[0m
[32m  eval_recall = 0.3286[0m
[32m  ********************[0m
[32m  Best f1:0.3562[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.23186:  79%|███████▊  | 22/28 [01:28<00:21,  3.65s/it]epoch 3 loss 1.22865:  79%|███████▊  | 22/28 [01:29<00:21,  3.65s/it]epoch 3 loss 1.22865:  82%|████████▏ | 23/28 [01:29<00:13,  2.67s/it]epoch 3 loss 1.22882:  82%|████████▏ | 23/28 [01:29<00:13,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6666[0m
[32m  eval_f1 = 0.3566[0m
[32m  eval_mcc = 0.6483[0m
[32m  eval_precision = 0.4556[0m
[32m  eval_recall = 0.3289[0m
[32m  ********************[0m
[32m  Best f1:0.3566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.22882:  86%|████████▌ | 24/28 [01:34<00:13,  3.38s/it]epoch 3 loss 1.23017:  86%|████████▌ | 24/28 [01:34<00:13,  3.38s/it]epoch 3 loss 1.23017:  89%|████████▉ | 25/28 [01:34<00:07,  2.49s/it]epoch 3 loss 1.22914:  89%|████████▉ | 25/28 [01:34<00:07,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6665[0m
[32m  eval_f1 = 0.3574[0m
[32m  eval_mcc = 0.648[0m
[32m  eval_precision = 0.4557[0m
[32m  eval_recall = 0.3297[0m
[32m  ********************[0m
[32m  Best f1:0.3574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.22914:  93%|█████████▎| 26/28 [01:39<00:06,  3.25s/it]epoch 3 loss 1.23276:  93%|█████████▎| 26/28 [01:39<00:06,  3.25s/it]epoch 3 loss 1.23276:  96%|█████████▋| 27/28 [01:39<00:02,  2.39s/it]epoch 3 loss 1.22992:  96%|█████████▋| 27/28 [01:40<00:02,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6674[0m
[32m  eval_f1 = 0.3646[0m
[32m  eval_mcc = 0.6489[0m
[32m  eval_precision = 0.4618[0m
[32m  eval_recall = 0.3362[0m
[32m  ********************[0m
[32m  Best f1:0.3646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.22992: 100%|██████████| 28/28 [01:44<00:00,  3.14s/it]epoch 3 loss 1.22992: 100%|██████████| 28/28 [01:44<00:00,  3.74s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.23526:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.23526:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s]epoch 4 loss 1.25974:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6681[0m
[32m  eval_f1 = 0.3648[0m
[32m  eval_mcc = 0.6495[0m
[32m  eval_precision = 0.4603[0m
[32m  eval_recall = 0.3368[0m
[32m  ********************[0m
[32m  Best f1:0.3648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25974:   7%|▋         | 2/28 [00:06<01:42,  3.94s/it]epoch 4 loss 1.24027:   7%|▋         | 2/28 [00:07<01:42,  3.94s/it]epoch 4 loss 1.24027:  11%|█         | 3/28 [00:07<00:58,  2.33s/it]epoch 4 loss 1.22583:  11%|█         | 3/28 [00:07<00:58,  2.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6689[0m
[32m  eval_f1 = 0.3657[0m
[32m  eval_mcc = 0.6503[0m
[32m  eval_precision = 0.46[0m
[32m  eval_recall = 0.3378[0m
[32m  ********************[0m
[32m  Best f1:0.3657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22583:  14%|█▍        | 4/28 [00:13<01:34,  3.94s/it]epoch 4 loss 1.23447:  14%|█▍        | 4/28 [00:14<01:34,  3.94s/it]epoch 4 loss 1.23447:  18%|█▊        | 5/28 [00:14<01:01,  2.67s/it]epoch 4 loss 1.22991:  18%|█▊        | 5/28 [00:14<01:01,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6697[0m
[32m  eval_f1 = 0.3652[0m
[32m  eval_mcc = 0.6512[0m
[32m  eval_precision = 0.4586[0m
[32m  eval_recall = 0.3374[0m
[32m  ********************[0m
[32m  Best MCC:0.6512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22991:  21%|██▏       | 6/28 [00:19<01:17,  3.54s/it]epoch 4 loss 1.22054:  21%|██▏       | 6/28 [00:19<01:17,  3.54s/it]epoch 4 loss 1.22054:  25%|██▌       | 7/28 [00:19<00:52,  2.51s/it]epoch 4 loss 1.21691:  25%|██▌       | 7/28 [00:20<00:52,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6699[0m
[32m  eval_f1 = 0.3653[0m
[32m  eval_mcc = 0.6514[0m
[32m  eval_precision = 0.4586[0m
[32m  eval_recall = 0.3376[0m
[32m  ********************[0m
[32m  Best MCC:0.6514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21691:  29%|██▊       | 8/28 [00:24<01:05,  3.30s/it]epoch 4 loss 1.21439:  29%|██▊       | 8/28 [00:25<01:05,  3.30s/it]epoch 4 loss 1.21439:  32%|███▏      | 9/28 [00:25<00:45,  2.39s/it]epoch 4 loss 1.22105:  32%|███▏      | 9/28 [00:25<00:45,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6703[0m
[32m  eval_f1 = 0.3672[0m
[32m  eval_mcc = 0.6518[0m
[32m  eval_precision = 0.4622[0m
[32m  eval_recall = 0.3399[0m
[32m  ********************[0m
[32m  Best f1:0.3672[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22105:  36%|███▌      | 10/28 [00:35<01:25,  4.78s/it]epoch 4 loss 1.2188:  36%|███▌      | 10/28 [00:35<01:25,  4.78s/it] epoch 4 loss 1.2188:  39%|███▉      | 11/28 [00:35<00:58,  3.45s/it]epoch 4 loss 1.22086:  39%|███▉      | 11/28 [00:36<00:58,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6707[0m
[32m  eval_f1 = 0.3685[0m
[32m  eval_mcc = 0.6522[0m
[32m  eval_precision = 0.464[0m
[32m  eval_recall = 0.3411[0m
[32m  ********************[0m
[32m  Best f1:0.3685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22086:  43%|████▎     | 12/28 [00:45<01:27,  5.46s/it]epoch 4 loss 1.22075:  43%|████▎     | 12/28 [00:46<01:27,  5.46s/it]epoch 4 loss 1.22075:  46%|████▋     | 13/28 [00:46<00:59,  3.94s/it]epoch 4 loss 1.20561:  46%|████▋     | 13/28 [00:46<00:59,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6711[0m
[32m  eval_f1 = 0.3698[0m
[32m  eval_mcc = 0.6525[0m
[32m  eval_precision = 0.4699[0m
[32m  eval_recall = 0.3424[0m
[32m  ********************[0m
[32m  Best f1:0.3698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6525[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20561:  50%|█████     | 14/28 [00:56<01:21,  5.80s/it]epoch 4 loss 1.20045:  50%|█████     | 14/28 [00:56<01:21,  5.80s/it]epoch 4 loss 1.20045:  54%|█████▎    | 15/28 [00:56<00:54,  4.18s/it]epoch 4 loss 1.19538:  54%|█████▎    | 15/28 [00:57<00:54,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6709[0m
[32m  eval_f1 = 0.3694[0m
[32m  eval_mcc = 0.6523[0m
[32m  eval_precision = 0.4698[0m
[32m  eval_recall = 0.3421[0m

epoch 4 loss 1.19538:  57%|█████▋    | 16/28 [01:00<00:48,  4.06s/it]epoch 4 loss 1.1939:  57%|█████▋    | 16/28 [01:00<00:48,  4.06s/it] epoch 4 loss 1.1939:  61%|██████    | 17/28 [01:00<00:32,  2.96s/it]epoch 4 loss 1.19214:  61%|██████    | 17/28 [01:01<00:32,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.671[0m
[32m  eval_f1 = 0.369[0m
[32m  eval_mcc = 0.6524[0m
[32m  eval_precision = 0.4703[0m
[32m  eval_recall = 0.3414[0m

epoch 4 loss 1.19214:  64%|██████▍   | 18/28 [01:04<00:32,  3.21s/it]epoch 4 loss 1.19479:  64%|██████▍   | 18/28 [01:04<00:32,  3.21s/it]epoch 4 loss 1.19479:  68%|██████▊   | 19/28 [01:04<00:21,  2.36s/it]epoch 4 loss 1.1947:  68%|██████▊   | 19/28 [01:05<00:21,  2.36s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6711[0m
[32m  eval_f1 = 0.3699[0m
[32m  eval_mcc = 0.6525[0m
[32m  eval_precision = 0.4705[0m
[32m  eval_recall = 0.3415[0m
[32m  ********************[0m
[32m  Best f1:0.3699[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6525[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1947:  71%|███████▏  | 20/28 [01:15<00:37,  4.74s/it]epoch 4 loss 1.19163:  71%|███████▏  | 20/28 [01:15<00:37,  4.74s/it]epoch 4 loss 1.19163:  75%|███████▌  | 21/28 [01:15<00:24,  3.44s/it]epoch 4 loss 1.19271:  75%|███████▌  | 21/28 [01:16<00:24,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6711[0m
[32m  eval_f1 = 0.3701[0m
[32m  eval_mcc = 0.6525[0m
[32m  eval_precision = 0.4708[0m
[32m  eval_recall = 0.3415[0m
[32m  ********************[0m
[32m  Best f1:0.3701[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6525[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19271:  79%|███████▊  | 22/28 [01:25<00:32,  5.37s/it]epoch 4 loss 1.19195:  79%|███████▊  | 22/28 [01:25<00:32,  5.37s/it]epoch 4 loss 1.19195:  82%|████████▏ | 23/28 [01:25<00:19,  3.89s/it]epoch 4 loss 1.1883:  82%|████████▏ | 23/28 [01:26<00:19,  3.89s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6712[0m
[32m  eval_f1 = 0.3701[0m
[32m  eval_mcc = 0.6527[0m
[32m  eval_precision = 0.471[0m
[32m  eval_recall = 0.3415[0m
[32m  ********************[0m
[32m  Best f1:0.3701[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6527[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1883:  86%|████████▌ | 24/28 [01:36<00:23,  5.81s/it]epoch 4 loss 1.19298:  86%|████████▌ | 24/28 [01:36<00:23,  5.81s/it]epoch 4 loss 1.19298:  89%|████████▉ | 25/28 [01:36<00:12,  4.20s/it]epoch 4 loss 1.19327:  89%|████████▉ | 25/28 [01:37<00:12,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6711[0m
[32m  eval_f1 = 0.3699[0m
[32m  eval_mcc = 0.6526[0m
[32m  eval_precision = 0.4709[0m
[32m  eval_recall = 0.3411[0m

epoch 4 loss 1.19327:  93%|█████████▎| 26/28 [01:40<00:08,  4.07s/it]epoch 4 loss 1.19186:  93%|█████████▎| 26/28 [01:40<00:08,  4.07s/it]epoch 4 loss 1.19186:  96%|█████████▋| 27/28 [01:40<00:02,  2.97s/it]epoch 4 loss 1.19835:  96%|█████████▋| 27/28 [01:41<00:02,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6712[0m
[32m  eval_f1 = 0.3699[0m
[32m  eval_mcc = 0.6527[0m
[32m  eval_precision = 0.4709[0m
[32m  eval_recall = 0.3412[0m
[32m  ********************[0m
[32m  Best MCC:0.6527[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19835: 100%|██████████| 28/28 [01:48<00:00,  4.21s/it]epoch 4 loss 1.19835: 100%|██████████| 28/28 [01:48<00:00,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.62it/s] 20%|██        | 2/10 [00:00<00:02,  2.70it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6712[0m
[32m  eval_f1 = 0.3701[0m
[32m  eval_mcc = 0.6527[0m
[32m  eval_precision = 0.471[0m
[32m  eval_recall = 0.3415[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6496[0m
[32m  eval_f1 = 0.294[0m
[32m  eval_mcc = 0.6308[0m
[32m  eval_precision = 0.3705[0m
[32m  eval_recall = 0.2778[0m

