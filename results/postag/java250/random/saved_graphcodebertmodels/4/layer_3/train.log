[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=3, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.74813:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.74813:   4%|▎         | 1/28 [00:00<00:22,  1.22it/s]epoch 0 loss 5.74704:   4%|▎         | 1/28 [00:01<00:22,  1.22it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0032[0m
[32m  eval_f1 = 0.0014[0m
[32m  eval_mcc = 0.0007[0m
[32m  eval_precision = 0.0019[0m
[32m  eval_recall = 0.0042[0m
[32m  ********************[0m
[32m  Best f1:0.0014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.74704:   7%|▋         | 2/28 [00:06<01:32,  3.54s/it]epoch 0 loss 5.74172:   7%|▋         | 2/28 [00:06<01:32,  3.54s/it]epoch 0 loss 5.74172:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 0 loss 5.73052:  11%|█         | 3/28 [00:07<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0058[0m
[32m  eval_f1 = 0.0018[0m
[32m  eval_mcc = 0.0015[0m
[32m  eval_precision = 0.0025[0m
[32m  eval_recall = 0.0048[0m
[32m  ********************[0m
[32m  Best f1:0.0018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.73052:  14%|█▍        | 4/28 [00:16<02:00,  5.02s/it]epoch 0 loss 5.71036:  14%|█▍        | 4/28 [00:16<02:00,  5.02s/it]epoch 0 loss 5.71036:  18%|█▊        | 5/28 [00:16<01:17,  3.36s/it]epoch 0 loss 5.68145:  18%|█▊        | 5/28 [00:16<01:17,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0119[0m
[32m  eval_f1 = 0.0018[0m
[32m  eval_mcc = 0.003[0m
[32m  eval_precision = 0.0099[0m
[32m  eval_recall = 0.0034[0m
[32m  ********************[0m
[32m  Best f1:0.0018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.68145:  21%|██▏       | 6/28 [00:23<01:40,  4.57s/it]epoch 0 loss 5.64798:  21%|██▏       | 6/28 [00:23<01:40,  4.57s/it]epoch 0 loss 5.64798:  25%|██▌       | 7/28 [00:23<01:07,  3.21s/it]epoch 0 loss 5.60264:  25%|██▌       | 7/28 [00:24<01:07,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0235[0m
[32m  eval_f1 = 0.0029[0m
[32m  eval_mcc = 0.0043[0m
[32m  eval_precision = 0.0101[0m
[32m  eval_recall = 0.0057[0m
[32m  ********************[0m
[32m  Best f1:0.0029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.60264:  29%|██▊       | 8/28 [00:33<01:44,  5.24s/it]epoch 0 loss 5.55329:  29%|██▊       | 8/28 [00:33<01:44,  5.24s/it]epoch 0 loss 5.55329:  32%|███▏      | 9/28 [00:33<01:10,  3.73s/it]epoch 0 loss 5.49761:  32%|███▏      | 9/28 [00:34<01:10,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0447[0m
[32m  eval_f1 = 0.0117[0m
[32m  eval_mcc = 0.0171[0m
[32m  eval_precision = 0.0209[0m
[32m  eval_recall = 0.0163[0m
[32m  ********************[0m
[32m  Best f1:0.0117[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.49761:  36%|███▌      | 10/28 [00:41<01:28,  4.94s/it]epoch 0 loss 5.4373:  36%|███▌      | 10/28 [00:41<01:28,  4.94s/it] epoch 0 loss 5.4373:  39%|███▉      | 11/28 [00:41<01:00,  3.56s/it]epoch 0 loss 5.37076:  39%|███▉      | 11/28 [00:42<01:00,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0602[0m
[32m  eval_f1 = 0.0182[0m
[32m  eval_mcc = 0.0287[0m
[32m  eval_precision = 0.0347[0m
[32m  eval_recall = 0.0228[0m
[32m  ********************[0m
[32m  Best f1:0.0182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.37076:  43%|████▎     | 12/28 [00:49<01:14,  4.63s/it]epoch 0 loss 5.3004:  43%|████▎     | 12/28 [00:49<01:14,  4.63s/it] epoch 0 loss 5.3004:  46%|████▋     | 13/28 [00:49<00:50,  3.35s/it]epoch 0 loss 5.22688:  46%|████▋     | 13/28 [00:49<00:50,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1034[0m
[32m  eval_f1 = 0.0423[0m
[32m  eval_mcc = 0.0692[0m
[32m  eval_precision = 0.0667[0m
[32m  eval_recall = 0.043[0m
[32m  ********************[0m
[32m  Best f1:0.0423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.22688:  50%|█████     | 14/28 [00:57<01:04,  4.62s/it]epoch 0 loss 5.15186:  50%|█████     | 14/28 [00:57<01:04,  4.62s/it]epoch 0 loss 5.15186:  54%|█████▎    | 15/28 [00:57<00:43,  3.35s/it]epoch 0 loss 5.07365:  54%|█████▎    | 15/28 [00:57<00:43,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1744[0m
[32m  eval_f1 = 0.0692[0m
[32m  eval_mcc = 0.1348[0m
[32m  eval_precision = 0.1098[0m
[32m  eval_recall = 0.0662[0m
[32m  ********************[0m
[32m  Best f1:0.0692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.07365:  57%|█████▋    | 16/28 [01:04<00:53,  4.44s/it]epoch 0 loss 4.99451:  57%|█████▋    | 16/28 [01:04<00:53,  4.44s/it]epoch 0 loss 4.99451:  61%|██████    | 17/28 [01:04<00:35,  3.23s/it]epoch 0 loss 4.9152:  61%|██████    | 17/28 [01:05<00:35,  3.23s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2521[0m
[32m  eval_f1 = 0.082[0m
[32m  eval_mcc = 0.2049[0m
[32m  eval_precision = 0.1113[0m
[32m  eval_recall = 0.0776[0m
[32m  ********************[0m
[32m  Best f1:0.082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.9152:  64%|██████▍   | 18/28 [01:14<00:52,  5.25s/it]epoch 0 loss 4.8311:  64%|██████▍   | 18/28 [01:15<00:52,  5.25s/it]epoch 0 loss 4.8311:  68%|██████▊   | 19/28 [01:15<00:34,  3.80s/it]epoch 0 loss 4.752:  68%|██████▊   | 19/28 [01:15<00:34,  3.80s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3207[0m
[32m  eval_f1 = 0.0897[0m
[32m  eval_mcc = 0.2714[0m
[32m  eval_precision = 0.1303[0m
[32m  eval_recall = 0.0831[0m
[32m  ********************[0m
[32m  Best f1:0.0897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.752:  71%|███████▏  | 20/28 [01:23<00:41,  5.14s/it]epoch 0 loss 4.67488:  71%|███████▏  | 20/28 [01:23<00:41,  5.14s/it]epoch 0 loss 4.67488:  75%|███████▌  | 21/28 [01:23<00:26,  3.72s/it]epoch 0 loss 4.60026:  75%|███████▌  | 21/28 [01:24<00:26,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3691[0m
[32m  eval_f1 = 0.0913[0m
[32m  eval_mcc = 0.3233[0m
[32m  eval_precision = 0.1455[0m
[32m  eval_recall = 0.0853[0m
[32m  ********************[0m
[32m  Best f1:0.0913[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.60026:  79%|███████▊  | 22/28 [01:30<00:27,  4.51s/it]epoch 0 loss 4.52102:  79%|███████▊  | 22/28 [01:30<00:27,  4.51s/it]epoch 0 loss 4.52102:  82%|████████▏ | 23/28 [01:30<00:16,  3.29s/it]epoch 0 loss 4.44825:  82%|████████▏ | 23/28 [01:31<00:16,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4018[0m
[32m  eval_f1 = 0.0936[0m
[32m  eval_mcc = 0.3599[0m
[32m  eval_precision = 0.1568[0m
[32m  eval_recall = 0.0889[0m
[32m  ********************[0m
[32m  Best f1:0.0936[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.44825:  86%|████████▌ | 24/28 [01:37<00:16,  4.24s/it]epoch 0 loss 4.37664:  86%|████████▌ | 24/28 [01:37<00:16,  4.24s/it]epoch 0 loss 4.37664:  89%|████████▉ | 25/28 [01:37<00:09,  3.10s/it]epoch 0 loss 4.30489:  89%|████████▉ | 25/28 [01:37<00:09,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4208[0m
[32m  eval_f1 = 0.0979[0m
[32m  eval_mcc = 0.3816[0m
[32m  eval_precision = 0.159[0m
[32m  eval_recall = 0.0928[0m
[32m  ********************[0m
[32m  Best f1:0.0979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3816[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.30489:  93%|█████████▎| 26/28 [01:43<00:08,  4.08s/it]epoch 0 loss 4.23763:  93%|█████████▎| 26/28 [01:44<00:08,  4.08s/it]epoch 0 loss 4.23763:  96%|█████████▋| 27/28 [01:44<00:02,  2.98s/it]epoch 0 loss 4.16757:  96%|█████████▋| 27/28 [01:44<00:02,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4642[0m
[32m  eval_f1 = 0.124[0m
[32m  eval_mcc = 0.4299[0m
[32m  eval_precision = 0.1738[0m
[32m  eval_recall = 0.1169[0m
[32m  ********************[0m
[32m  Best f1:0.124[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.16757: 100%|██████████| 28/28 [01:50<00:00,  3.96s/it]epoch 0 loss 4.16757: 100%|██████████| 28/28 [01:50<00:00,  3.95s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.31101:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.31101:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 1 loss 2.30525:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5098[0m
[32m  eval_f1 = 0.1444[0m
[32m  eval_mcc = 0.4793[0m
[32m  eval_precision = 0.1879[0m
[32m  eval_recall = 0.1382[0m
[32m  ********************[0m
[32m  Best f1:0.1444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4793[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.30525:   7%|▋         | 2/28 [00:07<01:45,  4.05s/it]epoch 1 loss 2.28112:   7%|▋         | 2/28 [00:07<01:45,  4.05s/it]epoch 1 loss 2.28112:  11%|█         | 3/28 [00:07<00:59,  2.39s/it]epoch 1 loss 2.26587:  11%|█         | 3/28 [00:07<00:59,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5384[0m
[32m  eval_f1 = 0.1597[0m
[32m  eval_mcc = 0.5098[0m
[32m  eval_precision = 0.1959[0m
[32m  eval_recall = 0.1546[0m
[32m  ********************[0m
[32m  Best f1:0.1597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26587:  14%|█▍        | 4/28 [00:14<01:37,  4.05s/it]epoch 1 loss 2.20868:  14%|█▍        | 4/28 [00:14<01:37,  4.05s/it]epoch 1 loss 2.20868:  18%|█▊        | 5/28 [00:14<01:03,  2.74s/it]epoch 1 loss 2.1533:  18%|█▊        | 5/28 [00:14<01:03,  2.74s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5611[0m
[32m  eval_f1 = 0.1688[0m
[32m  eval_mcc = 0.5344[0m
[32m  eval_precision = 0.2207[0m
[32m  eval_recall = 0.1651[0m
[32m  ********************[0m
[32m  Best f1:0.1688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1533:  21%|██▏       | 6/28 [00:20<01:27,  3.99s/it]epoch 1 loss 2.12188:  21%|██▏       | 6/28 [00:21<01:27,  3.99s/it]epoch 1 loss 2.12188:  25%|██▌       | 7/28 [00:21<00:59,  2.83s/it]epoch 1 loss 2.07207:  25%|██▌       | 7/28 [00:21<00:59,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5664[0m
[32m  eval_f1 = 0.1732[0m
[32m  eval_mcc = 0.5414[0m
[32m  eval_precision = 0.236[0m
[32m  eval_recall = 0.1683[0m
[32m  ********************[0m
[32m  Best f1:0.1732[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5414[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07207:  29%|██▊       | 8/28 [00:31<01:46,  5.33s/it]epoch 1 loss 2.02866:  29%|██▊       | 8/28 [00:32<01:46,  5.33s/it]epoch 1 loss 2.02866:  32%|███▏      | 9/28 [00:32<01:12,  3.80s/it]epoch 1 loss 2.00774:  32%|███▏      | 9/28 [00:32<01:12,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5752[0m
[32m  eval_f1 = 0.1873[0m
[32m  eval_mcc = 0.5517[0m
[32m  eval_precision = 0.2535[0m
[32m  eval_recall = 0.1785[0m
[32m  ********************[0m
[32m  Best f1:0.1873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5517[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00774:  36%|███▌      | 10/28 [00:42<01:42,  5.72s/it]epoch 1 loss 1.98644:  36%|███▌      | 10/28 [00:42<01:42,  5.72s/it]epoch 1 loss 1.98644:  39%|███▉      | 11/28 [00:42<01:09,  4.09s/it]epoch 1 loss 1.97061:  39%|███▉      | 11/28 [00:43<01:09,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5831[0m
[32m  eval_f1 = 0.1958[0m
[32m  eval_mcc = 0.5603[0m
[32m  eval_precision = 0.2745[0m
[32m  eval_recall = 0.1853[0m
[32m  ********************[0m
[32m  Best f1:0.1958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5603[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97061:  43%|████▎     | 12/28 [00:51<01:30,  5.63s/it]epoch 1 loss 1.94406:  43%|████▎     | 12/28 [00:52<01:30,  5.63s/it]epoch 1 loss 1.94406:  46%|████▋     | 13/28 [00:52<01:00,  4.05s/it]epoch 1 loss 1.92859:  46%|████▋     | 13/28 [00:52<01:00,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5895[0m
[32m  eval_f1 = 0.205[0m
[32m  eval_mcc = 0.5676[0m
[32m  eval_precision = 0.2808[0m
[32m  eval_recall = 0.1911[0m
[32m  ********************[0m
[32m  Best f1:0.205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5676[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92859:  50%|█████     | 14/28 [01:02<01:23,  5.98s/it]epoch 1 loss 1.92151:  50%|█████     | 14/28 [01:03<01:23,  5.98s/it]epoch 1 loss 1.92151:  54%|█████▎    | 15/28 [01:03<00:55,  4.30s/it]epoch 1 loss 1.90589:  54%|█████▎    | 15/28 [01:03<00:55,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5975[0m
[32m  eval_f1 = 0.2332[0m
[32m  eval_mcc = 0.5755[0m
[32m  eval_precision = 0.3552[0m
[32m  eval_recall = 0.2132[0m
[32m  ********************[0m
[32m  Best f1:0.2332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5755[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90589:  57%|█████▋    | 16/28 [01:11<01:04,  5.37s/it]epoch 1 loss 1.88642:  57%|█████▋    | 16/28 [01:11<01:04,  5.37s/it]epoch 1 loss 1.88642:  61%|██████    | 17/28 [01:11<00:42,  3.88s/it]epoch 1 loss 1.87154:  61%|██████    | 17/28 [01:11<00:42,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6026[0m
[32m  eval_f1 = 0.2487[0m
[32m  eval_mcc = 0.5801[0m
[32m  eval_precision = 0.3501[0m
[32m  eval_recall = 0.2285[0m
[32m  ********************[0m
[32m  Best f1:0.2487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87154:  64%|██████▍   | 18/28 [01:19<00:52,  5.24s/it]epoch 1 loss 1.8496:  64%|██████▍   | 18/28 [01:20<00:52,  5.24s/it] epoch 1 loss 1.8496:  68%|██████▊   | 19/28 [01:20<00:34,  3.79s/it]epoch 1 loss 1.83663:  68%|██████▊   | 19/28 [01:20<00:34,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6061[0m
[32m  eval_f1 = 0.2561[0m
[32m  eval_mcc = 0.5834[0m
[32m  eval_precision = 0.3567[0m
[32m  eval_recall = 0.2348[0m
[32m  ********************[0m
[32m  Best f1:0.2561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83663:  71%|███████▏  | 20/28 [01:30<00:45,  5.63s/it]epoch 1 loss 1.8225:  71%|███████▏  | 20/28 [01:30<00:45,  5.63s/it] epoch 1 loss 1.8225:  75%|███████▌  | 21/28 [01:30<00:28,  4.06s/it]epoch 1 loss 1.81692:  75%|███████▌  | 21/28 [01:31<00:28,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6139[0m
[32m  eval_f1 = 0.2678[0m
[32m  eval_mcc = 0.5916[0m
[32m  eval_precision = 0.3618[0m
[32m  eval_recall = 0.2471[0m
[32m  ********************[0m
[32m  Best f1:0.2678[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81692:  79%|███████▊  | 22/28 [01:38<00:31,  5.31s/it]epoch 1 loss 1.80125:  79%|███████▊  | 22/28 [01:39<00:31,  5.31s/it]epoch 1 loss 1.80125:  82%|████████▏ | 23/28 [01:39<00:19,  3.84s/it]epoch 1 loss 1.78798:  82%|████████▏ | 23/28 [01:39<00:19,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6174[0m
[32m  eval_f1 = 0.2736[0m
[32m  eval_mcc = 0.5952[0m
[32m  eval_precision = 0.3647[0m
[32m  eval_recall = 0.2541[0m
[32m  ********************[0m
[32m  Best f1:0.2736[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.78798:  86%|████████▌ | 24/28 [01:49<00:22,  5.64s/it]epoch 1 loss 1.77897:  86%|████████▌ | 24/28 [01:49<00:22,  5.64s/it]epoch 1 loss 1.77897:  89%|████████▉ | 25/28 [01:49<00:12,  4.08s/it]epoch 1 loss 1.76132:  89%|████████▉ | 25/28 [01:49<00:12,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6213[0m
[32m  eval_f1 = 0.2764[0m
[32m  eval_mcc = 0.5997[0m
[32m  eval_precision = 0.3659[0m
[32m  eval_recall = 0.2572[0m
[32m  ********************[0m
[32m  Best f1:0.2764[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5997[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76132:  93%|█████████▎| 26/28 [01:59<00:11,  5.81s/it]epoch 1 loss 1.75447:  93%|█████████▎| 26/28 [01:59<00:11,  5.81s/it]epoch 1 loss 1.75447:  96%|█████████▋| 27/28 [01:59<00:04,  4.20s/it]epoch 1 loss 1.74014:  96%|█████████▋| 27/28 [02:00<00:04,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6235[0m
[32m  eval_f1 = 0.2827[0m
[32m  eval_mcc = 0.603[0m
[32m  eval_precision = 0.3748[0m
[32m  eval_recall = 0.2619[0m
[32m  ********************[0m
[32m  Best f1:0.2827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.603[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74014: 100%|██████████| 28/28 [02:08<00:00,  5.66s/it]epoch 1 loss 1.74014: 100%|██████████| 28/28 [02:08<00:00,  4.61s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.39284:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.39284:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.45157:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6262[0m
[32m  eval_f1 = 0.2848[0m
[32m  eval_mcc = 0.6067[0m
[32m  eval_precision = 0.3802[0m
[32m  eval_recall = 0.2635[0m
[32m  ********************[0m
[32m  Best f1:0.2848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45157:   7%|▋         | 2/28 [00:10<02:33,  5.90s/it]epoch 2 loss 1.47165:   7%|▋         | 2/28 [00:10<02:33,  5.90s/it]epoch 2 loss 1.47165:  11%|█         | 3/28 [00:10<01:24,  3.39s/it]epoch 2 loss 1.44318:  11%|█         | 3/28 [00:10<01:24,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6277[0m
[32m  eval_f1 = 0.2879[0m
[32m  eval_mcc = 0.6087[0m
[32m  eval_precision = 0.3789[0m
[32m  eval_recall = 0.2665[0m
[32m  ********************[0m
[32m  Best f1:0.2879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44318:  14%|█▍        | 4/28 [00:18<02:07,  5.31s/it]epoch 2 loss 1.44097:  14%|█▍        | 4/28 [00:19<02:07,  5.31s/it]epoch 2 loss 1.44097:  18%|█▊        | 5/28 [00:19<01:21,  3.54s/it]epoch 2 loss 1.43913:  18%|█▊        | 5/28 [00:19<01:21,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6332[0m
[32m  eval_f1 = 0.2925[0m
[32m  eval_mcc = 0.6146[0m
[32m  eval_precision = 0.3787[0m
[32m  eval_recall = 0.2716[0m
[32m  ********************[0m
[32m  Best f1:0.2925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43913:  21%|██▏       | 6/28 [00:29<02:06,  5.73s/it]epoch 2 loss 1.42786:  21%|██▏       | 6/28 [00:29<02:06,  5.73s/it]epoch 2 loss 1.42786:  25%|██▌       | 7/28 [00:29<01:23,  4.00s/it]epoch 2 loss 1.41744:  25%|██▌       | 7/28 [00:30<01:23,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6368[0m
[32m  eval_f1 = 0.2974[0m
[32m  eval_mcc = 0.6174[0m
[32m  eval_precision = 0.3841[0m
[32m  eval_recall = 0.2764[0m
[32m  ********************[0m
[32m  Best f1:0.2974[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6174[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41744:  29%|██▊       | 8/28 [00:37<01:45,  5.26s/it]epoch 2 loss 1.41635:  29%|██▊       | 8/28 [00:38<01:45,  5.26s/it]epoch 2 loss 1.41635:  32%|███▏      | 9/28 [00:38<01:11,  3.75s/it]epoch 2 loss 1.41115:  32%|███▏      | 9/28 [00:38<01:11,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.2986[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.3922[0m
[32m  eval_recall = 0.2782[0m
[32m  ********************[0m
[32m  Best f1:0.2986[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41115:  36%|███▌      | 10/28 [00:44<01:22,  4.57s/it]epoch 2 loss 1.40731:  36%|███▌      | 10/28 [00:44<01:22,  4.57s/it]epoch 2 loss 1.40731:  39%|███▉      | 11/28 [00:44<00:56,  3.30s/it]epoch 2 loss 1.40507:  39%|███▉      | 11/28 [00:45<00:56,  3.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6408[0m
[32m  eval_f1 = 0.302[0m
[32m  eval_mcc = 0.62[0m
[32m  eval_precision = 0.4066[0m
[32m  eval_recall = 0.2805[0m
[32m  ********************[0m
[32m  Best f1:0.302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.62[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40507:  43%|████▎     | 12/28 [00:51<01:08,  4.27s/it]epoch 2 loss 1.40327:  43%|████▎     | 12/28 [00:51<01:08,  4.27s/it]epoch 2 loss 1.40327:  46%|████▋     | 13/28 [00:51<00:46,  3.10s/it]epoch 2 loss 1.39986:  46%|████▋     | 13/28 [00:52<00:46,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6448[0m
[32m  eval_f1 = 0.3043[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.3996[0m
[32m  eval_recall = 0.2835[0m
[32m  ********************[0m
[32m  Best f1:0.3043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39986:  50%|█████     | 14/28 [00:58<00:57,  4.10s/it]epoch 2 loss 1.39577:  50%|█████     | 14/28 [00:58<00:57,  4.10s/it]epoch 2 loss 1.39577:  54%|█████▎    | 15/28 [00:58<00:38,  2.99s/it]epoch 2 loss 1.38367:  54%|█████▎    | 15/28 [00:58<00:38,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6463[0m
[32m  eval_f1 = 0.3059[0m
[32m  eval_mcc = 0.6254[0m
[32m  eval_precision = 0.398[0m
[32m  eval_recall = 0.2852[0m
[32m  ********************[0m
[32m  Best f1:0.3059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38367:  57%|█████▋    | 16/28 [01:07<00:56,  4.74s/it]epoch 2 loss 1.37885:  57%|█████▋    | 16/28 [01:07<00:56,  4.74s/it]epoch 2 loss 1.37885:  61%|██████    | 17/28 [01:07<00:37,  3.44s/it]epoch 2 loss 1.37702:  61%|██████    | 17/28 [01:08<00:37,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6468[0m
[32m  eval_f1 = 0.3137[0m
[32m  eval_mcc = 0.6262[0m
[32m  eval_precision = 0.4061[0m
[32m  eval_recall = 0.292[0m
[32m  ********************[0m
[32m  Best f1:0.3137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37702:  64%|██████▍   | 18/28 [01:17<00:54,  5.46s/it]epoch 2 loss 1.3772:  64%|██████▍   | 18/28 [01:18<00:54,  5.46s/it] epoch 2 loss 1.3772:  68%|██████▊   | 19/28 [01:18<00:35,  3.95s/it]epoch 2 loss 1.37547:  68%|██████▊   | 19/28 [01:18<00:35,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6482[0m
[32m  eval_f1 = 0.3207[0m
[32m  eval_mcc = 0.6283[0m
[32m  eval_precision = 0.4238[0m
[32m  eval_recall = 0.296[0m
[32m  ********************[0m
[32m  Best f1:0.3207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37547:  71%|███████▏  | 20/28 [01:28<00:47,  5.93s/it]epoch 2 loss 1.36188:  71%|███████▏  | 20/28 [01:29<00:47,  5.93s/it]epoch 2 loss 1.36188:  75%|███████▌  | 21/28 [01:29<00:29,  4.27s/it]epoch 2 loss 1.35708:  75%|███████▌  | 21/28 [01:29<00:29,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6498[0m
[32m  eval_f1 = 0.3233[0m
[32m  eval_mcc = 0.6313[0m
[32m  eval_precision = 0.4261[0m
[32m  eval_recall = 0.2983[0m
[32m  ********************[0m
[32m  Best f1:0.3233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35708:  79%|███████▊  | 22/28 [01:39<00:36,  6.14s/it]epoch 2 loss 1.35208:  79%|███████▊  | 22/28 [01:40<00:36,  6.14s/it]epoch 2 loss 1.35208:  82%|████████▏ | 23/28 [01:40<00:22,  4.42s/it]epoch 2 loss 1.35688:  82%|████████▏ | 23/28 [01:40<00:22,  4.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.3249[0m
[32m  eval_mcc = 0.6328[0m
[32m  eval_precision = 0.4318[0m
[32m  eval_recall = 0.299[0m
[32m  ********************[0m
[32m  Best f1:0.3249[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35688:  86%|████████▌ | 24/28 [01:50<00:24,  6.15s/it]epoch 2 loss 1.35006:  86%|████████▌ | 24/28 [01:50<00:24,  6.15s/it]epoch 2 loss 1.35006:  89%|████████▉ | 25/28 [01:50<00:13,  4.43s/it]epoch 2 loss 1.34679:  89%|████████▉ | 25/28 [01:51<00:13,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6521[0m
[32m  eval_f1 = 0.3253[0m
[32m  eval_mcc = 0.6335[0m
[32m  eval_precision = 0.4332[0m
[32m  eval_recall = 0.2992[0m
[32m  ********************[0m
[32m  Best f1:0.3253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34679:  93%|█████████▎| 26/28 [02:00<00:12,  6.13s/it]epoch 2 loss 1.35101:  93%|█████████▎| 26/28 [02:01<00:12,  6.13s/it]epoch 2 loss 1.35101:  96%|█████████▋| 27/28 [02:01<00:04,  4.42s/it]epoch 2 loss 1.34692:  96%|█████████▋| 27/28 [02:01<00:04,  4.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6533[0m
[32m  eval_f1 = 0.3293[0m
[32m  eval_mcc = 0.6338[0m
[32m  eval_precision = 0.4402[0m
[32m  eval_recall = 0.3032[0m
[32m  ********************[0m
[32m  Best f1:0.3293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34692: 100%|██████████| 28/28 [02:11<00:00,  6.23s/it]epoch 2 loss 1.34692: 100%|██████████| 28/28 [02:11<00:00,  4.71s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.143:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.143:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 3 loss 1.18117:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6546[0m
[32m  eval_f1 = 0.3322[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4411[0m
[32m  eval_recall = 0.3051[0m
[32m  ********************[0m
[32m  Best f1:0.3322[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18117:   7%|▋         | 2/28 [00:10<02:44,  6.31s/it]epoch 3 loss 1.18613:   7%|▋         | 2/28 [00:11<02:44,  6.31s/it]epoch 3 loss 1.18613:  11%|█         | 3/28 [00:11<01:30,  3.63s/it]epoch 3 loss 1.1974:  11%|█         | 3/28 [00:11<01:30,  3.63s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6556[0m
[32m  eval_f1 = 0.3408[0m
[32m  eval_mcc = 0.6356[0m
[32m  eval_precision = 0.4497[0m
[32m  eval_recall = 0.3122[0m
[32m  ********************[0m
[32m  Best f1:0.3408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1974:  14%|█▍        | 4/28 [00:21<02:27,  6.13s/it]epoch 3 loss 1.22077:  14%|█▍        | 4/28 [00:21<02:27,  6.13s/it]epoch 3 loss 1.22077:  18%|█▊        | 5/28 [00:21<01:33,  4.07s/it]epoch 3 loss 1.22525:  18%|█▊        | 5/28 [00:22<01:33,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6555[0m
[32m  eval_f1 = 0.3415[0m
[32m  eval_mcc = 0.6355[0m
[32m  eval_precision = 0.4479[0m
[32m  eval_recall = 0.314[0m
[32m  ********************[0m
[32m  Best f1:0.3415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.22525:  21%|██▏       | 6/28 [00:27<01:42,  4.67s/it]epoch 3 loss 1.21422:  21%|██▏       | 6/28 [00:27<01:42,  4.67s/it]epoch 3 loss 1.21422:  25%|██▌       | 7/28 [00:27<01:08,  3.28s/it]epoch 3 loss 1.20389:  25%|██▌       | 7/28 [00:28<01:08,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3394[0m
[32m  eval_mcc = 0.6366[0m
[32m  eval_precision = 0.446[0m
[32m  eval_recall = 0.3119[0m
[32m  ********************[0m
[32m  Best MCC:0.6366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20389:  29%|██▊       | 8/28 [00:35<01:31,  4.59s/it]epoch 3 loss 1.22282:  29%|██▊       | 8/28 [00:35<01:31,  4.59s/it]epoch 3 loss 1.22282:  32%|███▏      | 9/28 [00:35<01:02,  3.29s/it]epoch 3 loss 1.23271:  32%|███▏      | 9/28 [00:36<01:02,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6584[0m
[32m  eval_f1 = 0.3433[0m
[32m  eval_mcc = 0.6387[0m
[32m  eval_precision = 0.4546[0m
[32m  eval_recall = 0.3149[0m
[32m  ********************[0m
[32m  Best f1:0.3433[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23271:  36%|███▌      | 10/28 [00:44<01:29,  4.97s/it]epoch 3 loss 1.2475:  36%|███▌      | 10/28 [00:44<01:29,  4.97s/it] epoch 3 loss 1.2475:  39%|███▉      | 11/28 [00:44<01:00,  3.58s/it]epoch 3 loss 1.26493:  39%|███▉      | 11/28 [00:45<01:00,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.66[0m
[32m  eval_f1 = 0.3433[0m
[32m  eval_mcc = 0.6406[0m
[32m  eval_precision = 0.448[0m
[32m  eval_recall = 0.3159[0m
[32m  ********************[0m
[32m  Best MCC:0.6406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26493:  43%|████▎     | 12/28 [00:52<01:15,  4.71s/it]epoch 3 loss 1.26506:  43%|████▎     | 12/28 [00:52<01:15,  4.71s/it]epoch 3 loss 1.26506:  46%|████▋     | 13/28 [00:52<00:51,  3.41s/it]epoch 3 loss 1.2595:  46%|████▋     | 13/28 [00:53<00:51,  3.41s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6618[0m
[32m  eval_f1 = 0.3474[0m
[32m  eval_mcc = 0.6427[0m
[32m  eval_precision = 0.4473[0m
[32m  eval_recall = 0.3206[0m
[32m  ********************[0m
[32m  Best f1:0.3474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2595:  50%|█████     | 14/28 [01:01<01:11,  5.10s/it]epoch 3 loss 1.25879:  50%|█████     | 14/28 [01:02<01:11,  5.10s/it]epoch 3 loss 1.25879:  54%|█████▎    | 15/28 [01:02<00:47,  3.69s/it]epoch 3 loss 1.25431:  54%|█████▎    | 15/28 [01:02<00:47,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6621[0m
[32m  eval_f1 = 0.3489[0m
[32m  eval_mcc = 0.6433[0m
[32m  eval_precision = 0.4482[0m
[32m  eval_recall = 0.3222[0m
[32m  ********************[0m
[32m  Best f1:0.3489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6433[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25431:  57%|█████▋    | 16/28 [01:11<01:05,  5.48s/it]epoch 3 loss 1.25544:  57%|█████▋    | 16/28 [01:12<01:05,  5.48s/it]epoch 3 loss 1.25544:  61%|██████    | 17/28 [01:12<00:43,  3.96s/it]epoch 3 loss 1.2596:  61%|██████    | 17/28 [01:12<00:43,  3.96s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.663[0m
[32m  eval_f1 = 0.3498[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4472[0m
[32m  eval_recall = 0.323[0m
[32m  ********************[0m
[32m  Best f1:0.3498[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2596:  64%|██████▍   | 18/28 [01:20<00:52,  5.23s/it]epoch 3 loss 1.26103:  64%|██████▍   | 18/28 [01:20<00:52,  5.23s/it]epoch 3 loss 1.26103:  68%|██████▊   | 19/28 [01:20<00:34,  3.78s/it]epoch 3 loss 1.25848:  68%|██████▊   | 19/28 [01:21<00:34,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6629[0m
[32m  eval_f1 = 0.3512[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4493[0m
[32m  eval_recall = 0.3238[0m
[32m  ********************[0m
[32m  Best f1:0.3512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25848:  71%|███████▏  | 20/28 [01:30<00:45,  5.66s/it]epoch 3 loss 1.25505:  71%|███████▏  | 20/28 [01:31<00:45,  5.66s/it]epoch 3 loss 1.25505:  75%|███████▌  | 21/28 [01:31<00:28,  4.09s/it]epoch 3 loss 1.25054:  75%|███████▌  | 21/28 [01:31<00:28,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6628[0m
[32m  eval_f1 = 0.3523[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4494[0m
[32m  eval_recall = 0.325[0m
[32m  ********************[0m
[32m  Best f1:0.3523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.25054:  79%|███████▊  | 22/28 [01:37<00:28,  4.76s/it]epoch 3 loss 1.24711:  79%|███████▊  | 22/28 [01:37<00:28,  4.76s/it]epoch 3 loss 1.24711:  82%|████████▏ | 23/28 [01:37<00:17,  3.45s/it]epoch 3 loss 1.24723:  82%|████████▏ | 23/28 [01:38<00:17,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6626[0m
[32m  eval_f1 = 0.3509[0m
[32m  eval_mcc = 0.6439[0m
[32m  eval_precision = 0.4487[0m
[32m  eval_recall = 0.3233[0m

epoch 3 loss 1.24723:  86%|████████▌ | 24/28 [01:41<00:14,  3.55s/it]epoch 3 loss 1.24846:  86%|████████▌ | 24/28 [01:42<00:14,  3.55s/it]epoch 3 loss 1.24846:  89%|████████▉ | 25/28 [01:42<00:07,  2.61s/it]epoch 3 loss 1.24787:  89%|████████▉ | 25/28 [01:42<00:07,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6634[0m
[32m  eval_f1 = 0.3517[0m
[32m  eval_mcc = 0.6447[0m
[32m  eval_precision = 0.4496[0m
[32m  eval_recall = 0.3241[0m
[32m  ********************[0m
[32m  Best MCC:0.6447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24787:  93%|█████████▎| 26/28 [01:49<00:08,  4.04s/it]epoch 3 loss 1.25146:  93%|█████████▎| 26/28 [01:49<00:08,  4.04s/it]epoch 3 loss 1.25146:  96%|█████████▋| 27/28 [01:49<00:02,  2.96s/it]epoch 3 loss 1.24837:  96%|█████████▋| 27/28 [01:50<00:02,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6647[0m
[32m  eval_f1 = 0.3544[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.4512[0m
[32m  eval_recall = 0.3267[0m
[32m  ********************[0m
[32m  Best f1:0.3544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24837: 100%|██████████| 28/28 [01:58<00:00,  4.77s/it]epoch 3 loss 1.24837: 100%|██████████| 28/28 [01:58<00:00,  4.25s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.25937:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.25937:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 4 loss 1.28107:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6651[0m
[32m  eval_f1 = 0.3602[0m
[32m  eval_mcc = 0.6462[0m
[32m  eval_precision = 0.4597[0m
[32m  eval_recall = 0.3322[0m
[32m  ********************[0m
[32m  Best f1:0.3602[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28107:   7%|▋         | 2/28 [00:10<02:42,  6.24s/it]epoch 4 loss 1.26175:   7%|▋         | 2/28 [00:11<02:42,  6.24s/it]epoch 4 loss 1.26175:  11%|█         | 3/28 [00:11<01:29,  3.58s/it]epoch 4 loss 1.24701:  11%|█         | 3/28 [00:11<01:29,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3602[0m
[32m  eval_mcc = 0.6469[0m
[32m  eval_precision = 0.4575[0m
[32m  eval_recall = 0.3326[0m
[32m  ********************[0m
[32m  Best f1:0.3602[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24701:  14%|█▍        | 4/28 [00:17<01:52,  4.68s/it]epoch 4 loss 1.2544:  14%|█▍        | 4/28 [00:17<01:52,  4.68s/it] epoch 4 loss 1.2544:  18%|█▊        | 5/28 [00:17<01:12,  3.15s/it]epoch 4 loss 1.2499:  18%|█▊        | 5/28 [00:18<01:12,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6669[0m
[32m  eval_f1 = 0.3592[0m
[32m  eval_mcc = 0.6482[0m
[32m  eval_precision = 0.4531[0m
[32m  eval_recall = 0.3317[0m
[32m  ********************[0m
[32m  Best MCC:0.6482[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2499:  21%|██▏       | 6/28 [00:23<01:23,  3.80s/it]epoch 4 loss 1.23961:  21%|██▏       | 6/28 [00:23<01:23,  3.80s/it]epoch 4 loss 1.23961:  25%|██▌       | 7/28 [00:23<00:56,  2.69s/it]epoch 4 loss 1.23664:  25%|██▌       | 7/28 [00:23<00:56,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6674[0m
[32m  eval_f1 = 0.3596[0m
[32m  eval_mcc = 0.6487[0m
[32m  eval_precision = 0.4539[0m
[32m  eval_recall = 0.332[0m
[32m  ********************[0m
[32m  Best MCC:0.6487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23664:  29%|██▊       | 8/28 [00:28<01:08,  3.43s/it]epoch 4 loss 1.23378:  29%|██▊       | 8/28 [00:28<01:08,  3.43s/it]epoch 4 loss 1.23378:  32%|███▏      | 9/28 [00:28<00:47,  2.49s/it]epoch 4 loss 1.24077:  32%|███▏      | 9/28 [00:29<00:47,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6678[0m
[32m  eval_f1 = 0.3625[0m
[32m  eval_mcc = 0.649[0m
[32m  eval_precision = 0.4596[0m
[32m  eval_recall = 0.3346[0m
[32m  ********************[0m
[32m  Best f1:0.3625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24077:  36%|███▌      | 10/28 [00:35<01:06,  3.71s/it]epoch 4 loss 1.23823:  36%|███▌      | 10/28 [00:35<01:06,  3.71s/it]epoch 4 loss 1.23823:  39%|███▉      | 11/28 [00:35<00:45,  2.70s/it]epoch 4 loss 1.24018:  39%|███▉      | 11/28 [00:36<00:45,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6677[0m
[32m  eval_f1 = 0.3627[0m
[32m  eval_mcc = 0.6489[0m
[32m  eval_precision = 0.4597[0m
[32m  eval_recall = 0.3348[0m
[32m  ********************[0m
[32m  Best f1:0.3627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24018:  43%|████▎     | 12/28 [00:40<00:55,  3.44s/it]epoch 4 loss 1.24021:  43%|████▎     | 12/28 [00:41<00:55,  3.44s/it]epoch 4 loss 1.24021:  46%|████▋     | 13/28 [00:41<00:37,  2.53s/it]epoch 4 loss 1.22499:  46%|████▋     | 13/28 [00:41<00:37,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6681[0m
[32m  eval_f1 = 0.3631[0m
[32m  eval_mcc = 0.6492[0m
[32m  eval_precision = 0.4605[0m
[32m  eval_recall = 0.3352[0m
[32m  ********************[0m
[32m  Best f1:0.3631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6492[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22499:  50%|█████     | 14/28 [00:47<00:52,  3.72s/it]epoch 4 loss 1.2195:  50%|█████     | 14/28 [00:48<00:52,  3.72s/it] epoch 4 loss 1.2195:  54%|█████▎    | 15/28 [00:48<00:35,  2.73s/it]epoch 4 loss 1.21445:  54%|█████▎    | 15/28 [00:48<00:35,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6682[0m
[32m  eval_f1 = 0.363[0m
[32m  eval_mcc = 0.6493[0m
[32m  eval_precision = 0.4609[0m
[32m  eval_recall = 0.3351[0m
[32m  ********************[0m
[32m  Best MCC:0.6493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21445:  57%|█████▋    | 16/28 [00:53<00:41,  3.43s/it]epoch 4 loss 1.21317:  57%|█████▋    | 16/28 [00:53<00:41,  3.43s/it]epoch 4 loss 1.21317:  61%|██████    | 17/28 [00:53<00:27,  2.52s/it]epoch 4 loss 1.21141:  61%|██████    | 17/28 [00:54<00:27,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6685[0m
[32m  eval_f1 = 0.363[0m
[32m  eval_mcc = 0.6497[0m
[32m  eval_precision = 0.4606[0m
[32m  eval_recall = 0.3352[0m
[32m  ********************[0m
[32m  Best MCC:0.6497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21141:  64%|██████▍   | 18/28 [00:58<00:32,  3.21s/it]epoch 4 loss 1.21385:  64%|██████▍   | 18/28 [00:58<00:32,  3.21s/it]epoch 4 loss 1.21385:  68%|██████▊   | 19/28 [00:58<00:21,  2.37s/it]epoch 4 loss 1.21359:  68%|██████▊   | 19/28 [00:59<00:21,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6682[0m
[32m  eval_f1 = 0.3626[0m
[32m  eval_mcc = 0.6493[0m
[32m  eval_precision = 0.4607[0m
[32m  eval_recall = 0.3349[0m

epoch 4 loss 1.21359:  71%|███████▏  | 20/28 [01:02<00:22,  2.80s/it]epoch 4 loss 1.21067:  71%|███████▏  | 20/28 [01:03<00:22,  2.80s/it]epoch 4 loss 1.21067:  75%|███████▌  | 21/28 [01:03<00:14,  2.08s/it]epoch 4 loss 1.21182:  75%|███████▌  | 21/28 [01:03<00:14,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6682[0m
[32m  eval_f1 = 0.3625[0m
[32m  eval_mcc = 0.6494[0m
[32m  eval_precision = 0.4607[0m
[32m  eval_recall = 0.3348[0m

epoch 4 loss 1.21182:  79%|███████▊  | 22/28 [01:06<00:15,  2.59s/it]epoch 4 loss 1.21139:  79%|███████▊  | 22/28 [01:07<00:15,  2.59s/it]epoch 4 loss 1.21139:  82%|████████▏ | 23/28 [01:07<00:09,  1.93s/it]epoch 4 loss 1.20773:  82%|████████▏ | 23/28 [01:07<00:09,  1.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6683[0m
[32m  eval_f1 = 0.3626[0m
[32m  eval_mcc = 0.6495[0m
[32m  eval_precision = 0.4614[0m
[32m  eval_recall = 0.3348[0m

epoch 4 loss 1.20773:  86%|████████▌ | 24/28 [01:11<00:09,  2.49s/it]epoch 4 loss 1.21227:  86%|████████▌ | 24/28 [01:11<00:09,  2.49s/it]epoch 4 loss 1.21227:  89%|████████▉ | 25/28 [01:11<00:05,  1.86s/it]epoch 4 loss 1.21266:  89%|████████▉ | 25/28 [01:11<00:05,  1.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6684[0m
[32m  eval_f1 = 0.3626[0m
[32m  eval_mcc = 0.6495[0m
[32m  eval_precision = 0.4615[0m
[32m  eval_recall = 0.3348[0m

epoch 4 loss 1.21266:  93%|█████████▎| 26/28 [01:15<00:04,  2.44s/it]epoch 4 loss 1.21117:  93%|█████████▎| 26/28 [01:15<00:04,  2.44s/it]epoch 4 loss 1.21117:  96%|█████████▋| 27/28 [01:15<00:01,  1.83s/it]epoch 4 loss 1.21774:  96%|█████████▋| 27/28 [01:15<00:01,  1.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6684[0m
[32m  eval_f1 = 0.3626[0m
[32m  eval_mcc = 0.6496[0m
[32m  eval_precision = 0.4613[0m
[32m  eval_recall = 0.3349[0m

epoch 4 loss 1.21774: 100%|██████████| 28/28 [01:19<00:00,  2.36s/it]epoch 4 loss 1.21774: 100%|██████████| 28/28 [01:19<00:00,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6681[0m
[32m  eval_f1 = 0.3631[0m
[32m  eval_mcc = 0.6492[0m
[32m  eval_precision = 0.4605[0m
[32m  eval_recall = 0.3352[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.71it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6479[0m
[32m  eval_f1 = 0.2872[0m
[32m  eval_mcc = 0.629[0m
[32m  eval_precision = 0.3583[0m
[32m  eval_recall = 0.2706[0m

