[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=1, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.72244:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.72244:   4%|▎         | 1/28 [00:00<00:21,  1.29it/s]epoch 0 loss 5.72338:   4%|▎         | 1/28 [00:01<00:21,  1.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0031[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = 0.001[0m
[32m  eval_precision = 0.0028[0m
[32m  eval_recall = 0.0035[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.72338:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.71575:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.71575:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 0 loss 5.70418:  11%|█         | 3/28 [00:07<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0048[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = 0.0015[0m
[32m  eval_precision = 0.0033[0m
[32m  eval_recall = 0.0039[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.70418:  14%|█▍        | 4/28 [00:15<01:56,  4.87s/it]epoch 0 loss 5.68233:  14%|█▍        | 4/28 [00:16<01:56,  4.87s/it]epoch 0 loss 5.68233:  18%|█▊        | 5/28 [00:16<01:15,  3.27s/it]epoch 0 loss 5.65456:  18%|█▊        | 5/28 [00:16<01:15,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0103[0m
[32m  eval_f1 = 0.0021[0m
[32m  eval_mcc = 0.0027[0m
[32m  eval_precision = 0.0102[0m
[32m  eval_recall = 0.004[0m
[32m  ********************[0m
[32m  Best f1:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.65456:  21%|██▏       | 6/28 [00:25<01:53,  5.16s/it]epoch 0 loss 5.62237:  21%|██▏       | 6/28 [00:25<01:53,  5.16s/it]epoch 0 loss 5.62237:  25%|██▌       | 7/28 [00:25<01:15,  3.61s/it]epoch 0 loss 5.57718:  25%|██▌       | 7/28 [00:25<01:15,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0242[0m
[32m  eval_f1 = 0.0035[0m
[32m  eval_mcc = 0.0085[0m
[32m  eval_precision = 0.0116[0m
[32m  eval_recall = 0.0063[0m
[32m  ********************[0m
[32m  Best f1:0.0035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.57718:  29%|██▊       | 8/28 [00:32<01:35,  4.79s/it]epoch 0 loss 5.53018:  29%|██▊       | 8/28 [00:33<01:35,  4.79s/it]epoch 0 loss 5.53018:  32%|███▏      | 9/28 [00:33<01:05,  3.43s/it]epoch 0 loss 5.47626:  32%|███▏      | 9/28 [00:33<01:05,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0539[0m
[32m  eval_f1 = 0.0161[0m
[32m  eval_mcc = 0.029[0m
[32m  eval_precision = 0.0246[0m
[32m  eval_recall = 0.0196[0m
[32m  ********************[0m
[32m  Best f1:0.0161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.47626:  36%|███▌      | 10/28 [00:39<01:20,  4.46s/it]epoch 0 loss 5.41756:  36%|███▌      | 10/28 [00:40<01:20,  4.46s/it]epoch 0 loss 5.41756:  39%|███▉      | 11/28 [00:40<00:54,  3.22s/it]epoch 0 loss 5.3524:  39%|███▉      | 11/28 [00:40<00:54,  3.22s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0776[0m
[32m  eval_f1 = 0.0274[0m
[32m  eval_mcc = 0.0485[0m
[32m  eval_precision = 0.0394[0m
[32m  eval_recall = 0.0299[0m
[32m  ********************[0m
[32m  Best f1:0.0274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.3524:  43%|████▎     | 12/28 [00:47<01:11,  4.44s/it]epoch 0 loss 5.28313:  43%|████▎     | 12/28 [00:48<01:11,  4.44s/it]epoch 0 loss 5.28313:  46%|████▋     | 13/28 [00:48<00:48,  3.22s/it]epoch 0 loss 5.20878:  46%|████▋     | 13/28 [00:48<00:48,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1319[0m
[32m  eval_f1 = 0.0511[0m
[32m  eval_mcc = 0.1012[0m
[32m  eval_precision = 0.0787[0m
[32m  eval_recall = 0.0506[0m
[32m  ********************[0m
[32m  Best f1:0.0511[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20878:  50%|█████     | 14/28 [00:54<01:00,  4.30s/it]epoch 0 loss 5.13451:  50%|█████     | 14/28 [00:55<01:00,  4.30s/it]epoch 0 loss 5.13451:  54%|█████▎    | 15/28 [00:55<00:40,  3.13s/it]epoch 0 loss 5.05663:  54%|█████▎    | 15/28 [00:55<00:40,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2045[0m
[32m  eval_f1 = 0.073[0m
[32m  eval_mcc = 0.171[0m
[32m  eval_precision = 0.1032[0m
[32m  eval_recall = 0.0723[0m
[32m  ********************[0m
[32m  Best f1:0.073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.05663:  57%|█████▋    | 16/28 [01:04<01:01,  5.10s/it]epoch 0 loss 4.97702:  57%|█████▋    | 16/28 [01:05<01:01,  5.10s/it]epoch 0 loss 4.97702:  61%|██████    | 17/28 [01:05<00:40,  3.69s/it]epoch 0 loss 4.89785:  61%|██████    | 17/28 [01:05<00:40,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2745[0m
[32m  eval_f1 = 0.0869[0m
[32m  eval_mcc = 0.2359[0m
[32m  eval_precision = 0.1168[0m
[32m  eval_recall = 0.0864[0m
[32m  ********************[0m
[32m  Best f1:0.0869[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.89785:  64%|██████▍   | 18/28 [01:11<00:44,  4.50s/it]epoch 0 loss 4.81335:  64%|██████▍   | 18/28 [01:12<00:44,  4.50s/it]epoch 0 loss 4.81335:  68%|██████▊   | 19/28 [01:12<00:29,  3.28s/it]epoch 0 loss 4.73349:  68%|██████▊   | 19/28 [01:12<00:29,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3234[0m
[32m  eval_f1 = 0.0934[0m
[32m  eval_mcc = 0.2814[0m
[32m  eval_precision = 0.1287[0m
[32m  eval_recall = 0.0901[0m
[32m  ********************[0m
[32m  Best f1:0.0934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2814[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.73349:  71%|███████▏  | 20/28 [01:17<00:32,  4.04s/it]epoch 0 loss 4.65554:  71%|███████▏  | 20/28 [01:18<00:32,  4.04s/it]epoch 0 loss 4.65554:  75%|███████▌  | 21/28 [01:18<00:20,  2.96s/it]epoch 0 loss 4.58012:  75%|███████▌  | 21/28 [01:18<00:20,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3728[0m
[32m  eval_f1 = 0.1004[0m
[32m  eval_mcc = 0.3319[0m
[32m  eval_precision = 0.1561[0m
[32m  eval_recall = 0.0937[0m
[32m  ********************[0m
[32m  Best f1:0.1004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.58012:  79%|███████▊  | 22/28 [01:24<00:24,  4.01s/it]epoch 0 loss 4.49972:  79%|███████▊  | 22/28 [01:25<00:24,  4.01s/it]epoch 0 loss 4.49972:  82%|████████▏ | 23/28 [01:25<00:14,  2.94s/it]epoch 0 loss 4.42487:  82%|████████▏ | 23/28 [01:25<00:14,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4182[0m
[32m  eval_f1 = 0.1064[0m
[32m  eval_mcc = 0.3802[0m
[32m  eval_precision = 0.1648[0m
[32m  eval_recall = 0.1005[0m
[32m  ********************[0m
[32m  Best f1:0.1064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.42487:  86%|████████▌ | 24/28 [01:31<00:15,  3.98s/it]epoch 0 loss 4.35178:  86%|████████▌ | 24/28 [01:32<00:15,  3.98s/it]epoch 0 loss 4.35178:  89%|████████▉ | 25/28 [01:32<00:08,  2.91s/it]epoch 0 loss 4.27792:  89%|████████▉ | 25/28 [01:32<00:08,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4465[0m
[32m  eval_f1 = 0.117[0m
[32m  eval_mcc = 0.4104[0m
[32m  eval_precision = 0.1695[0m
[32m  eval_recall = 0.1093[0m
[32m  ********************[0m
[32m  Best f1:0.117[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.27792:  93%|█████████▎| 26/28 [01:38<00:07,  3.94s/it]epoch 0 loss 4.20876:  93%|█████████▎| 26/28 [01:38<00:07,  3.94s/it]epoch 0 loss 4.20876:  96%|█████████▋| 27/28 [01:38<00:02,  2.89s/it]epoch 0 loss 4.1369:  96%|█████████▋| 27/28 [01:39<00:02,  2.89s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4751[0m
[32m  eval_f1 = 0.1298[0m
[32m  eval_mcc = 0.4417[0m
[32m  eval_precision = 0.1707[0m
[32m  eval_recall = 0.1242[0m
[32m  ********************[0m
[32m  Best f1:0.1298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.1369: 100%|██████████| 28/28 [01:44<00:00,  3.80s/it]epoch 0 loss 4.1369: 100%|██████████| 28/28 [01:44<00:00,  3.74s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.24075:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.24075:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 1 loss 2.23175:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5172[0m
[32m  eval_f1 = 0.1465[0m
[32m  eval_mcc = 0.4876[0m
[32m  eval_precision = 0.1784[0m
[32m  eval_recall = 0.1414[0m
[32m  ********************[0m
[32m  Best f1:0.1465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4876[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23175:   7%|▋         | 2/28 [00:13<03:18,  7.63s/it]epoch 1 loss 2.20752:   7%|▋         | 2/28 [00:13<03:18,  7.63s/it]epoch 1 loss 2.20752:  11%|█         | 3/28 [00:13<01:48,  4.33s/it]epoch 1 loss 2.19597:  11%|█         | 3/28 [00:13<01:48,  4.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.50it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.65it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5405[0m
[32m  eval_f1 = 0.1609[0m
[32m  eval_mcc = 0.5123[0m
[32m  eval_precision = 0.1971[0m
[32m  eval_recall = 0.1556[0m
[32m  ********************[0m
[32m  Best f1:0.1609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.19597:  14%|█▍        | 4/28 [00:27<03:19,  8.33s/it]epoch 1 loss 2.13848:  14%|█▍        | 4/28 [00:28<03:19,  8.33s/it]epoch 1 loss 2.13848:  18%|█▊        | 5/28 [00:28<02:05,  5.48s/it]epoch 1 loss 2.0855:  18%|█▊        | 5/28 [00:28<02:05,  5.48s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5662[0m
[32m  eval_f1 = 0.1704[0m
[32m  eval_mcc = 0.5394[0m
[32m  eval_precision = 0.2125[0m
[32m  eval_recall = 0.1659[0m
[32m  ********************[0m
[32m  Best f1:0.1704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0855:  21%|██▏       | 6/28 [00:37<02:27,  6.70s/it]epoch 1 loss 2.0532:  21%|██▏       | 6/28 [00:37<02:27,  6.70s/it]epoch 1 loss 2.0532:  25%|██▌       | 7/28 [00:37<01:37,  4.65s/it]epoch 1 loss 2.00282:  25%|██▌       | 7/28 [00:38<01:37,  4.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.574[0m
[32m  eval_f1 = 0.1789[0m
[32m  eval_mcc = 0.549[0m
[32m  eval_precision = 0.2337[0m
[32m  eval_recall = 0.1717[0m
[32m  ********************[0m
[32m  Best f1:0.1789[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00282:  29%|██▊       | 8/28 [00:48<02:10,  6.51s/it]epoch 1 loss 1.96041:  29%|██▊       | 8/28 [00:48<02:10,  6.51s/it]epoch 1 loss 1.96041:  32%|███▏      | 9/28 [00:48<01:27,  4.60s/it]epoch 1 loss 1.93955:  32%|███▏      | 9/28 [00:49<01:27,  4.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5807[0m
[32m  eval_f1 = 0.19[0m
[32m  eval_mcc = 0.5577[0m
[32m  eval_precision = 0.2636[0m
[32m  eval_recall = 0.1788[0m
[32m  ********************[0m
[32m  Best f1:0.19[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93955:  36%|███▌      | 10/28 [00:56<01:42,  5.69s/it]epoch 1 loss 1.91936:  36%|███▌      | 10/28 [00:57<01:42,  5.69s/it]epoch 1 loss 1.91936:  39%|███▉      | 11/28 [00:57<01:09,  4.07s/it]epoch 1 loss 1.90459:  39%|███▉      | 11/28 [00:57<01:09,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5878[0m
[32m  eval_f1 = 0.2037[0m
[32m  eval_mcc = 0.5657[0m
[32m  eval_precision = 0.2872[0m
[32m  eval_recall = 0.19[0m
[32m  ********************[0m
[32m  Best f1:0.2037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90459:  43%|████▎     | 12/28 [01:07<01:33,  5.85s/it]epoch 1 loss 1.8798:  43%|████▎     | 12/28 [01:07<01:33,  5.85s/it] epoch 1 loss 1.8798:  46%|████▋     | 13/28 [01:07<01:03,  4.20s/it]epoch 1 loss 1.86502:  46%|████▋     | 13/28 [01:08<01:03,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5957[0m
[32m  eval_f1 = 0.2294[0m
[32m  eval_mcc = 0.5744[0m
[32m  eval_precision = 0.327[0m
[32m  eval_recall = 0.2126[0m
[32m  ********************[0m
[32m  Best f1:0.2294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5744[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86502:  50%|█████     | 14/28 [01:15<01:15,  5.42s/it]epoch 1 loss 1.85861:  50%|█████     | 14/28 [01:16<01:15,  5.42s/it]epoch 1 loss 1.85861:  54%|█████▎    | 15/28 [01:16<00:50,  3.91s/it]epoch 1 loss 1.84354:  54%|█████▎    | 15/28 [01:16<00:50,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6025[0m
[32m  eval_f1 = 0.2444[0m
[32m  eval_mcc = 0.5807[0m
[32m  eval_precision = 0.3347[0m
[32m  eval_recall = 0.2246[0m
[32m  ********************[0m
[32m  Best f1:0.2444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5807[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84354:  57%|█████▋    | 16/28 [01:26<01:09,  5.76s/it]epoch 1 loss 1.82458:  57%|█████▋    | 16/28 [01:26<01:09,  5.76s/it]epoch 1 loss 1.82458:  61%|██████    | 17/28 [01:26<00:45,  4.15s/it]epoch 1 loss 1.81034:  61%|██████    | 17/28 [01:27<00:45,  4.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6092[0m
[32m  eval_f1 = 0.2576[0m
[32m  eval_mcc = 0.5868[0m
[32m  eval_precision = 0.3536[0m
[32m  eval_recall = 0.2362[0m
[32m  ********************[0m
[32m  Best f1:0.2576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5868[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81034:  64%|██████▍   | 18/28 [01:35<00:54,  5.40s/it]epoch 1 loss 1.78897:  64%|██████▍   | 18/28 [01:35<00:54,  5.40s/it]epoch 1 loss 1.78897:  68%|██████▊   | 19/28 [01:35<00:35,  3.90s/it]epoch 1 loss 1.77664:  68%|██████▊   | 19/28 [01:35<00:35,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6129[0m
[32m  eval_f1 = 0.2674[0m
[32m  eval_mcc = 0.5903[0m
[32m  eval_precision = 0.3674[0m
[32m  eval_recall = 0.2443[0m
[32m  ********************[0m
[32m  Best f1:0.2674[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77664:  71%|███████▏  | 20/28 [01:45<00:45,  5.68s/it]epoch 1 loss 1.76306:  71%|███████▏  | 20/28 [01:45<00:45,  5.68s/it]epoch 1 loss 1.76306:  75%|███████▌  | 21/28 [01:45<00:28,  4.10s/it]epoch 1 loss 1.75848:  75%|███████▌  | 21/28 [01:46<00:28,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6197[0m
[32m  eval_f1 = 0.2788[0m
[32m  eval_mcc = 0.5975[0m
[32m  eval_precision = 0.3733[0m
[32m  eval_recall = 0.2556[0m
[32m  ********************[0m
[32m  Best f1:0.2788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75848:  79%|███████▊  | 22/28 [01:53<00:32,  5.35s/it]epoch 1 loss 1.74323:  79%|███████▊  | 22/28 [01:54<00:32,  5.35s/it]epoch 1 loss 1.74323:  82%|████████▏ | 23/28 [01:54<00:19,  3.87s/it]epoch 1 loss 1.73013:  82%|████████▏ | 23/28 [01:54<00:19,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6235[0m
[32m  eval_f1 = 0.2869[0m
[32m  eval_mcc = 0.6015[0m
[32m  eval_precision = 0.3706[0m
[32m  eval_recall = 0.2649[0m
[32m  ********************[0m
[32m  Best f1:0.2869[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.73013:  86%|████████▌ | 24/28 [02:04<00:22,  5.67s/it]epoch 1 loss 1.72175:  86%|████████▌ | 24/28 [02:04<00:22,  5.67s/it]epoch 1 loss 1.72175:  89%|████████▉ | 25/28 [02:04<00:12,  4.09s/it]epoch 1 loss 1.70459:  89%|████████▉ | 25/28 [02:05<00:12,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6268[0m
[32m  eval_f1 = 0.2895[0m
[32m  eval_mcc = 0.6053[0m
[32m  eval_precision = 0.37[0m
[32m  eval_recall = 0.2683[0m
[32m  ********************[0m
[32m  Best f1:0.2895[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.70459:  93%|█████████▎| 26/28 [02:12<00:10,  5.35s/it]epoch 1 loss 1.69793:  93%|█████████▎| 26/28 [02:13<00:10,  5.35s/it]epoch 1 loss 1.69793:  96%|█████████▋| 27/28 [02:13<00:03,  3.87s/it]epoch 1 loss 1.68365:  96%|█████████▋| 27/28 [02:13<00:03,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6284[0m
[32m  eval_f1 = 0.2921[0m
[32m  eval_mcc = 0.6079[0m
[32m  eval_precision = 0.3719[0m
[32m  eval_recall = 0.271[0m
[32m  ********************[0m
[32m  Best f1:0.2921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.68365: 100%|██████████| 28/28 [02:23<00:00,  5.68s/it]epoch 1 loss 1.68365: 100%|██████████| 28/28 [02:23<00:00,  5.12s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.35036:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.35036:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 2 loss 1.41316:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6301[0m
[32m  eval_f1 = 0.2935[0m
[32m  eval_mcc = 0.6106[0m
[32m  eval_precision = 0.3802[0m
[32m  eval_recall = 0.2724[0m
[32m  ********************[0m
[32m  Best f1:0.2935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41316:   7%|▋         | 2/28 [00:08<02:14,  5.19s/it]epoch 2 loss 1.42993:   7%|▋         | 2/28 [00:09<02:14,  5.19s/it]epoch 2 loss 1.42993:  11%|█         | 3/28 [00:09<01:15,  3.01s/it]epoch 2 loss 1.4009:  11%|█         | 3/28 [00:09<01:15,  3.01s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6319[0m
[32m  eval_f1 = 0.2959[0m
[32m  eval_mcc = 0.6128[0m
[32m  eval_precision = 0.3815[0m
[32m  eval_recall = 0.275[0m
[32m  ********************[0m
[32m  Best f1:0.2959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4009:  14%|█▍        | 4/28 [00:15<01:43,  4.30s/it]epoch 2 loss 1.39719:  14%|█▍        | 4/28 [00:16<01:43,  4.30s/it]epoch 2 loss 1.39719:  18%|█▊        | 5/28 [00:16<01:06,  2.91s/it]epoch 2 loss 1.39511:  18%|█▊        | 5/28 [00:16<01:06,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6376[0m
[32m  eval_f1 = 0.307[0m
[32m  eval_mcc = 0.6189[0m
[32m  eval_precision = 0.4039[0m
[32m  eval_recall = 0.284[0m
[32m  ********************[0m
[32m  Best f1:0.307[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39511:  21%|██▏       | 6/28 [00:26<02:02,  5.58s/it]epoch 2 loss 1.38408:  21%|██▏       | 6/28 [00:27<02:02,  5.58s/it]epoch 2 loss 1.38408:  25%|██▌       | 7/28 [00:27<01:21,  3.89s/it]epoch 2 loss 1.37383:  25%|██▌       | 7/28 [00:27<01:21,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6419[0m
[32m  eval_f1 = 0.3087[0m
[32m  eval_mcc = 0.6226[0m
[32m  eval_precision = 0.4012[0m
[32m  eval_recall = 0.287[0m
[32m  ********************[0m
[32m  Best f1:0.3087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37383:  29%|██▊       | 8/28 [00:37<01:57,  5.88s/it]epoch 2 loss 1.37249:  29%|██▊       | 8/28 [00:37<01:57,  5.88s/it]epoch 2 loss 1.37249:  32%|███▏      | 9/28 [00:37<01:19,  4.17s/it]epoch 2 loss 1.36718:  32%|███▏      | 9/28 [00:38<01:19,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6455[0m
[32m  eval_f1 = 0.3085[0m
[32m  eval_mcc = 0.6254[0m
[32m  eval_precision = 0.394[0m
[32m  eval_recall = 0.2882[0m
[32m  ********************[0m
[32m  Best MCC:0.6254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36718:  36%|███▌      | 10/28 [00:45<01:33,  5.18s/it]epoch 2 loss 1.36395:  36%|███▌      | 10/28 [00:45<01:33,  5.18s/it]epoch 2 loss 1.36395:  39%|███▉      | 11/28 [00:45<01:03,  3.72s/it]epoch 2 loss 1.36157:  39%|███▉      | 11/28 [00:46<01:03,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3142[0m
[32m  eval_mcc = 0.6264[0m
[32m  eval_precision = 0.4154[0m
[32m  eval_recall = 0.2927[0m
[32m  ********************[0m
[32m  Best f1:0.3142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36157:  43%|████▎     | 12/28 [00:55<01:30,  5.67s/it]epoch 2 loss 1.3597:  43%|████▎     | 12/28 [00:56<01:30,  5.67s/it] epoch 2 loss 1.3597:  46%|████▋     | 13/28 [00:56<01:01,  4.08s/it]epoch 2 loss 1.35612:  46%|████▋     | 13/28 [00:56<01:01,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.321[0m
[32m  eval_mcc = 0.6303[0m
[32m  eval_precision = 0.4165[0m
[32m  eval_recall = 0.2985[0m
[32m  ********************[0m
[32m  Best f1:0.321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35612:  50%|█████     | 14/28 [01:06<01:21,  5.86s/it]epoch 2 loss 1.352:  50%|█████     | 14/28 [01:06<01:21,  5.86s/it]  epoch 2 loss 1.352:  54%|█████▎    | 15/28 [01:06<00:54,  4.22s/it]epoch 2 loss 1.33985:  54%|█████▎    | 15/28 [01:07<00:54,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.3228[0m
[32m  eval_mcc = 0.6321[0m
[32m  eval_precision = 0.4177[0m
[32m  eval_recall = 0.301[0m
[32m  ********************[0m
[32m  Best f1:0.3228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33985:  57%|█████▋    | 16/28 [01:14<01:04,  5.36s/it]epoch 2 loss 1.33495:  57%|█████▋    | 16/28 [01:15<01:04,  5.36s/it]epoch 2 loss 1.33495:  61%|██████    | 17/28 [01:15<00:42,  3.87s/it]epoch 2 loss 1.33301:  61%|██████    | 17/28 [01:15<00:42,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6554[0m
[32m  eval_f1 = 0.3283[0m
[32m  eval_mcc = 0.6353[0m
[32m  eval_precision = 0.4285[0m
[32m  eval_recall = 0.3057[0m
[32m  ********************[0m
[32m  Best f1:0.3283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33301:  64%|██████▍   | 18/28 [01:24<00:56,  5.66s/it]epoch 2 loss 1.3331:  64%|██████▍   | 18/28 [01:25<00:56,  5.66s/it] epoch 2 loss 1.3331:  68%|██████▊   | 19/28 [01:25<00:36,  4.09s/it]epoch 2 loss 1.33174:  68%|██████▊   | 19/28 [01:25<00:36,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6567[0m
[32m  eval_f1 = 0.3315[0m
[32m  eval_mcc = 0.6372[0m
[32m  eval_precision = 0.4286[0m
[32m  eval_recall = 0.3087[0m
[32m  ********************[0m
[32m  Best f1:0.3315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33174:  71%|███████▏  | 20/28 [01:33<00:42,  5.34s/it]epoch 2 loss 1.31824:  71%|███████▏  | 20/28 [01:33<00:42,  5.34s/it]epoch 2 loss 1.31824:  75%|███████▌  | 21/28 [01:33<00:27,  3.86s/it]epoch 2 loss 1.31329:  75%|███████▌  | 21/28 [01:34<00:27,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3315[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4307[0m
[32m  eval_recall = 0.3076[0m
[32m  ********************[0m
[32m  Best MCC:0.6375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31329:  79%|███████▊  | 22/28 [01:41<00:29,  4.90s/it]epoch 2 loss 1.30828:  79%|███████▊  | 22/28 [01:41<00:29,  4.90s/it]epoch 2 loss 1.30828:  82%|████████▏ | 23/28 [01:41<00:17,  3.56s/it]epoch 2 loss 1.31311:  82%|████████▏ | 23/28 [01:42<00:17,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6574[0m
[32m  eval_f1 = 0.333[0m
[32m  eval_mcc = 0.6394[0m
[32m  eval_precision = 0.4324[0m
[32m  eval_recall = 0.3091[0m
[32m  ********************[0m
[32m  Best f1:0.333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31311:  86%|████████▌ | 24/28 [01:50<00:20,  5.19s/it]epoch 2 loss 1.30626:  86%|████████▌ | 24/28 [01:51<00:20,  5.19s/it]epoch 2 loss 1.30626:  89%|████████▉ | 25/28 [01:51<00:11,  3.76s/it]epoch 2 loss 1.30305:  89%|████████▉ | 25/28 [01:51<00:11,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3334[0m
[32m  eval_mcc = 0.6392[0m
[32m  eval_precision = 0.4328[0m
[32m  eval_recall = 0.3092[0m
[32m  ********************[0m
[32m  Best f1:0.3334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.30305:  93%|█████████▎| 26/28 [01:57<00:09,  4.69s/it]epoch 2 loss 1.30746:  93%|█████████▎| 26/28 [01:58<00:09,  4.69s/it]epoch 2 loss 1.30746:  96%|█████████▋| 27/28 [01:58<00:03,  3.40s/it]epoch 2 loss 1.30359:  96%|█████████▋| 27/28 [01:58<00:03,  3.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6609[0m
[32m  eval_f1 = 0.3385[0m
[32m  eval_mcc = 0.6418[0m
[32m  eval_precision = 0.4436[0m
[32m  eval_recall = 0.3135[0m
[32m  ********************[0m
[32m  Best f1:0.3385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6418[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30359: 100%|██████████| 28/28 [02:07<00:00,  5.16s/it]epoch 2 loss 1.30359: 100%|██████████| 28/28 [02:07<00:00,  4.56s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.09724:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.09724:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 3 loss 1.13755:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6621[0m
[32m  eval_f1 = 0.3399[0m
[32m  eval_mcc = 0.6429[0m
[32m  eval_precision = 0.4439[0m
[32m  eval_recall = 0.3152[0m
[32m  ********************[0m
[32m  Best f1:0.3399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6429[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.13755:   7%|▋         | 2/28 [00:10<02:34,  5.95s/it]epoch 3 loss 1.14407:   7%|▋         | 2/28 [00:10<02:34,  5.95s/it]epoch 3 loss 1.14407:  11%|█         | 3/28 [00:10<01:25,  3.42s/it]epoch 3 loss 1.15501:  11%|█         | 3/28 [00:11<01:25,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6635[0m
[32m  eval_f1 = 0.348[0m
[32m  eval_mcc = 0.6441[0m
[32m  eval_precision = 0.4494[0m
[32m  eval_recall = 0.323[0m
[32m  ********************[0m
[32m  Best f1:0.348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15501:  14%|█▍        | 4/28 [00:18<02:08,  5.36s/it]epoch 3 loss 1.17751:  14%|█▍        | 4/28 [00:19<02:08,  5.36s/it]epoch 3 loss 1.17751:  18%|█▊        | 5/28 [00:19<01:22,  3.58s/it]epoch 3 loss 1.18078:  18%|█▊        | 5/28 [00:19<01:22,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6639[0m
[32m  eval_f1 = 0.3495[0m
[32m  eval_mcc = 0.6444[0m
[32m  eval_precision = 0.4485[0m
[32m  eval_recall = 0.3252[0m
[32m  ********************[0m
[32m  Best f1:0.3495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18078:  21%|██▏       | 6/28 [00:28<02:02,  5.55s/it]epoch 3 loss 1.1707:  21%|██▏       | 6/28 [00:29<02:02,  5.55s/it] epoch 3 loss 1.1707:  25%|██▌       | 7/28 [00:29<01:21,  3.87s/it]epoch 3 loss 1.16059:  25%|██▌       | 7/28 [00:29<01:21,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6653[0m
[32m  eval_f1 = 0.3479[0m
[32m  eval_mcc = 0.646[0m
[32m  eval_precision = 0.4464[0m
[32m  eval_recall = 0.3237[0m
[32m  ********************[0m
[32m  Best MCC:0.646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.16059:  29%|██▊       | 8/28 [00:36<01:36,  4.82s/it]epoch 3 loss 1.17864:  29%|██▊       | 8/28 [00:36<01:36,  4.82s/it]epoch 3 loss 1.17864:  32%|███▏      | 9/28 [00:36<01:05,  3.44s/it]epoch 3 loss 1.18787:  32%|███▏      | 9/28 [00:36<01:05,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6664[0m
[32m  eval_f1 = 0.3523[0m
[32m  eval_mcc = 0.6473[0m
[32m  eval_precision = 0.4551[0m
[32m  eval_recall = 0.3273[0m
[32m  ********************[0m
[32m  Best f1:0.3523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18787:  36%|███▌      | 10/28 [00:46<01:37,  5.41s/it]epoch 3 loss 1.20322:  36%|███▌      | 10/28 [00:46<01:37,  5.41s/it]epoch 3 loss 1.20322:  39%|███▉      | 11/28 [00:46<01:06,  3.88s/it]epoch 3 loss 1.21997:  39%|███▉      | 11/28 [00:47<01:06,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3553[0m
[32m  eval_mcc = 0.6477[0m
[32m  eval_precision = 0.4585[0m
[32m  eval_recall = 0.3292[0m
[32m  ********************[0m
[32m  Best f1:0.3553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6477[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21997:  43%|████▎     | 12/28 [00:53<01:15,  4.71s/it]epoch 3 loss 1.2209:  43%|████▎     | 12/28 [00:53<01:15,  4.71s/it] epoch 3 loss 1.2209:  46%|████▋     | 13/28 [00:53<00:51,  3.41s/it]epoch 3 loss 1.21581:  46%|████▋     | 13/28 [00:54<00:51,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6682[0m
[32m  eval_f1 = 0.3576[0m
[32m  eval_mcc = 0.6494[0m
[32m  eval_precision = 0.4571[0m
[32m  eval_recall = 0.3317[0m
[32m  ********************[0m
[32m  Best f1:0.3576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21581:  50%|█████     | 14/28 [01:00<01:00,  4.35s/it]epoch 3 loss 1.21492:  50%|█████     | 14/28 [01:00<01:00,  4.35s/it]epoch 3 loss 1.21492:  54%|█████▎    | 15/28 [01:00<00:41,  3.16s/it]epoch 3 loss 1.21043:  54%|█████▎    | 15/28 [01:01<00:41,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6688[0m
[32m  eval_f1 = 0.3598[0m
[32m  eval_mcc = 0.6502[0m
[32m  eval_precision = 0.4573[0m
[32m  eval_recall = 0.3338[0m
[32m  ********************[0m
[32m  Best f1:0.3598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21043:  57%|█████▋    | 16/28 [01:06<00:47,  3.93s/it]epoch 3 loss 1.21129:  57%|█████▋    | 16/28 [01:06<00:47,  3.93s/it]epoch 3 loss 1.21129:  61%|██████    | 17/28 [01:06<00:31,  2.88s/it]epoch 3 loss 1.21577:  61%|██████    | 17/28 [01:07<00:31,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6686[0m
[32m  eval_f1 = 0.3599[0m
[32m  eval_mcc = 0.65[0m
[32m  eval_precision = 0.4567[0m
[32m  eval_recall = 0.3337[0m
[32m  ********************[0m
[32m  Best f1:0.3599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.21577:  64%|██████▍   | 18/28 [01:11<00:34,  3.44s/it]epoch 3 loss 1.21709:  64%|██████▍   | 18/28 [01:11<00:34,  3.44s/it]epoch 3 loss 1.21709:  68%|██████▊   | 19/28 [01:11<00:22,  2.53s/it]epoch 3 loss 1.21431:  68%|██████▊   | 19/28 [01:12<00:22,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6693[0m
[32m  eval_f1 = 0.3613[0m
[32m  eval_mcc = 0.6508[0m
[32m  eval_precision = 0.4589[0m
[32m  eval_recall = 0.3346[0m
[32m  ********************[0m
[32m  Best f1:0.3613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21431:  71%|███████▏  | 20/28 [01:18<00:29,  3.67s/it]epoch 3 loss 1.21094:  71%|███████▏  | 20/28 [01:18<00:29,  3.67s/it]epoch 3 loss 1.21094:  75%|███████▌  | 21/28 [01:18<00:18,  2.70s/it]epoch 3 loss 1.20663:  75%|███████▌  | 21/28 [01:19<00:18,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6694[0m
[32m  eval_f1 = 0.3619[0m
[32m  eval_mcc = 0.651[0m
[32m  eval_precision = 0.4598[0m
[32m  eval_recall = 0.3352[0m
[32m  ********************[0m
[32m  Best f1:0.3619[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20663:  79%|███████▊  | 22/28 [01:25<00:22,  3.78s/it]epoch 3 loss 1.20362:  79%|███████▊  | 22/28 [01:25<00:22,  3.78s/it]epoch 3 loss 1.20362:  82%|████████▏ | 23/28 [01:25<00:13,  2.78s/it]epoch 3 loss 1.20412:  82%|████████▏ | 23/28 [01:25<00:13,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6692[0m
[32m  eval_f1 = 0.3615[0m
[32m  eval_mcc = 0.6508[0m
[32m  eval_precision = 0.4571[0m
[32m  eval_recall = 0.3347[0m

epoch 3 loss 1.20412:  86%|████████▌ | 24/28 [01:29<00:12,  3.08s/it]epoch 3 loss 1.20565:  86%|████████▌ | 24/28 [01:29<00:12,  3.08s/it]epoch 3 loss 1.20565:  89%|████████▉ | 25/28 [01:29<00:06,  2.28s/it]epoch 3 loss 1.20502:  89%|████████▉ | 25/28 [01:30<00:06,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6692[0m
[32m  eval_f1 = 0.361[0m
[32m  eval_mcc = 0.6507[0m
[32m  eval_precision = 0.4553[0m
[32m  eval_recall = 0.3347[0m

epoch 3 loss 1.20502:  93%|█████████▎| 26/28 [01:33<00:05,  2.73s/it]epoch 3 loss 1.20845:  93%|█████████▎| 26/28 [01:33<00:05,  2.73s/it]epoch 3 loss 1.20845:  96%|█████████▋| 27/28 [01:33<00:02,  2.03s/it]epoch 3 loss 1.20563:  96%|█████████▋| 27/28 [01:34<00:02,  2.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6702[0m
[32m  eval_f1 = 0.3629[0m
[32m  eval_mcc = 0.6517[0m
[32m  eval_precision = 0.4598[0m
[32m  eval_recall = 0.3363[0m
[32m  ********************[0m
[32m  Best f1:0.3629[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6517[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20563: 100%|██████████| 28/28 [01:40<00:00,  3.29s/it]epoch 3 loss 1.20563: 100%|██████████| 28/28 [01:40<00:00,  3.57s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.20735:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.20735:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 4 loss 1.23458:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6716[0m
[32m  eval_f1 = 0.3639[0m
[32m  eval_mcc = 0.653[0m
[32m  eval_precision = 0.4591[0m
[32m  eval_recall = 0.3376[0m
[32m  ********************[0m
[32m  Best f1:0.3639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23458:   7%|▋         | 2/28 [00:06<01:41,  3.90s/it]epoch 4 loss 1.21772:   7%|▋         | 2/28 [00:07<01:41,  3.90s/it]epoch 4 loss 1.21772:  11%|█         | 3/28 [00:07<00:57,  2.32s/it]epoch 4 loss 1.20362:  11%|█         | 3/28 [00:07<00:57,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6719[0m
[32m  eval_f1 = 0.3649[0m
[32m  eval_mcc = 0.6533[0m
[32m  eval_precision = 0.4605[0m
[32m  eval_recall = 0.3388[0m
[32m  ********************[0m
[32m  Best f1:0.3649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20362:  14%|█▍        | 4/28 [00:13<01:34,  3.96s/it]epoch 4 loss 1.21215:  14%|█▍        | 4/28 [00:14<01:34,  3.96s/it]epoch 4 loss 1.21215:  18%|█▊        | 5/28 [00:14<01:01,  2.69s/it]epoch 4 loss 1.20813:  18%|█▊        | 5/28 [00:14<01:01,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6729[0m
[32m  eval_f1 = 0.3655[0m
[32m  eval_mcc = 0.6545[0m
[32m  eval_precision = 0.4596[0m
[32m  eval_recall = 0.3395[0m
[32m  ********************[0m
[32m  Best f1:0.3655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20813:  21%|██▏       | 6/28 [00:20<01:27,  3.96s/it]epoch 4 loss 1.19857:  21%|██▏       | 6/28 [00:20<01:27,  3.96s/it]epoch 4 loss 1.19857:  25%|██▌       | 7/28 [00:20<00:58,  2.81s/it]epoch 4 loss 1.19481:  25%|██▌       | 7/28 [00:21<00:58,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6734[0m
[32m  eval_f1 = 0.3659[0m
[32m  eval_mcc = 0.655[0m
[32m  eval_precision = 0.4596[0m
[32m  eval_recall = 0.3398[0m
[32m  ********************[0m
[32m  Best f1:0.3659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19481:  29%|██▊       | 8/28 [00:27<01:19,  3.98s/it]epoch 4 loss 1.19235:  29%|██▊       | 8/28 [00:27<01:19,  3.98s/it]epoch 4 loss 1.19235:  32%|███▏      | 9/28 [00:27<00:54,  2.87s/it]epoch 4 loss 1.19876:  32%|███▏      | 9/28 [00:28<00:54,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.3657[0m
[32m  eval_mcc = 0.6548[0m
[32m  eval_precision = 0.4594[0m
[32m  eval_recall = 0.3398[0m

epoch 4 loss 1.19876:  36%|███▌      | 10/28 [00:31<00:56,  3.15s/it]epoch 4 loss 1.19667:  36%|███▌      | 10/28 [00:32<00:56,  3.15s/it]epoch 4 loss 1.19667:  39%|███▉      | 11/28 [00:32<00:39,  2.31s/it]epoch 4 loss 1.19835:  39%|███▉      | 11/28 [00:32<00:39,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6739[0m
[32m  eval_f1 = 0.366[0m
[32m  eval_mcc = 0.6555[0m
[32m  eval_precision = 0.4601[0m
[32m  eval_recall = 0.3401[0m
[32m  ********************[0m
[32m  Best f1:0.366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19835:  43%|████▎     | 12/28 [00:38<00:56,  3.54s/it]epoch 4 loss 1.19796:  43%|████▎     | 12/28 [00:38<00:56,  3.54s/it]epoch 4 loss 1.19796:  46%|████▋     | 13/28 [00:38<00:38,  2.60s/it]epoch 4 loss 1.18253:  46%|████▋     | 13/28 [00:39<00:38,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6743[0m
[32m  eval_f1 = 0.3719[0m
[32m  eval_mcc = 0.6558[0m
[32m  eval_precision = 0.4676[0m
[32m  eval_recall = 0.3449[0m
[32m  ********************[0m
[32m  Best f1:0.3719[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18253:  50%|█████     | 14/28 [00:45<00:51,  3.69s/it]epoch 4 loss 1.1773:  50%|█████     | 14/28 [00:45<00:51,  3.69s/it] epoch 4 loss 1.1773:  54%|█████▎    | 15/28 [00:45<00:35,  2.71s/it]epoch 4 loss 1.17203:  54%|█████▎    | 15/28 [00:45<00:35,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6746[0m
[32m  eval_f1 = 0.3724[0m
[32m  eval_mcc = 0.6561[0m
[32m  eval_precision = 0.4685[0m
[32m  eval_recall = 0.3452[0m
[32m  ********************[0m
[32m  Best f1:0.3724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17203:  57%|█████▋    | 16/28 [00:51<00:45,  3.75s/it]epoch 4 loss 1.17057:  57%|█████▋    | 16/28 [00:52<00:45,  3.75s/it]epoch 4 loss 1.17057:  61%|██████    | 17/28 [00:52<00:30,  2.75s/it]epoch 4 loss 1.16881:  61%|██████    | 17/28 [00:52<00:30,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6744[0m
[32m  eval_f1 = 0.3721[0m
[32m  eval_mcc = 0.6559[0m
[32m  eval_precision = 0.4686[0m
[32m  eval_recall = 0.3448[0m

epoch 4 loss 1.16881:  64%|██████▍   | 18/28 [00:55<00:30,  3.07s/it]epoch 4 loss 1.1715:  64%|██████▍   | 18/28 [00:56<00:30,  3.07s/it] epoch 4 loss 1.1715:  68%|██████▊   | 19/28 [00:56<00:20,  2.26s/it]epoch 4 loss 1.17157:  68%|██████▊   | 19/28 [00:56<00:20,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6744[0m
[32m  eval_f1 = 0.3721[0m
[32m  eval_mcc = 0.6559[0m
[32m  eval_precision = 0.4689[0m
[32m  eval_recall = 0.3448[0m

epoch 4 loss 1.17157:  71%|███████▏  | 20/28 [01:00<00:21,  2.72s/it]epoch 4 loss 1.16824:  71%|███████▏  | 20/28 [01:00<00:21,  2.72s/it]epoch 4 loss 1.16824:  75%|███████▌  | 21/28 [01:00<00:14,  2.03s/it]epoch 4 loss 1.16931:  75%|███████▌  | 21/28 [01:00<00:14,  2.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6745[0m
[32m  eval_f1 = 0.372[0m
[32m  eval_mcc = 0.6559[0m
[32m  eval_precision = 0.4694[0m
[32m  eval_recall = 0.3447[0m

epoch 4 loss 1.16931:  79%|███████▊  | 22/28 [01:04<00:15,  2.56s/it]epoch 4 loss 1.16858:  79%|███████▊  | 22/28 [01:04<00:15,  2.56s/it]epoch 4 loss 1.16858:  82%|████████▏ | 23/28 [01:04<00:09,  1.91s/it]epoch 4 loss 1.16491:  82%|████████▏ | 23/28 [01:05<00:09,  1.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6746[0m
[32m  eval_f1 = 0.3718[0m
[32m  eval_mcc = 0.656[0m
[32m  eval_precision = 0.4695[0m
[32m  eval_recall = 0.3445[0m

epoch 4 loss 1.16491:  86%|████████▌ | 24/28 [01:08<00:09,  2.48s/it]epoch 4 loss 1.16938:  86%|████████▌ | 24/28 [01:08<00:09,  2.48s/it]epoch 4 loss 1.16938:  89%|████████▉ | 25/28 [01:08<00:05,  1.86s/it]epoch 4 loss 1.16981:  89%|████████▉ | 25/28 [01:09<00:05,  1.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6744[0m
[32m  eval_f1 = 0.3717[0m
[32m  eval_mcc = 0.6559[0m
[32m  eval_precision = 0.4694[0m
[32m  eval_recall = 0.3444[0m

epoch 4 loss 1.16981:  93%|█████████▎| 26/28 [01:12<00:04,  2.44s/it]epoch 4 loss 1.16846:  93%|█████████▎| 26/28 [01:13<00:04,  2.44s/it]epoch 4 loss 1.16846:  96%|█████████▋| 27/28 [01:13<00:01,  1.83s/it]epoch 4 loss 1.17482:  96%|█████████▋| 27/28 [01:13<00:01,  1.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6744[0m
[32m  eval_f1 = 0.3716[0m
[32m  eval_mcc = 0.6559[0m
[32m  eval_precision = 0.4694[0m
[32m  eval_recall = 0.3444[0m

epoch 4 loss 1.17482: 100%|██████████| 28/28 [01:16<00:00,  2.36s/it]epoch 4 loss 1.17482: 100%|██████████| 28/28 [01:16<00:00,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6746[0m
[32m  eval_f1 = 0.3724[0m
[32m  eval_mcc = 0.6561[0m
[32m  eval_precision = 0.4685[0m
[32m  eval_recall = 0.3452[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6533[0m
[32m  eval_f1 = 0.2991[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.3778[0m
[32m  eval_recall = 0.2827[0m

