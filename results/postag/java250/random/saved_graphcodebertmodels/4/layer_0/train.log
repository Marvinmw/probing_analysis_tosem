[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=0, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.70285:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.70285:   4%|▎         | 1/28 [00:00<00:21,  1.27it/s]epoch 0 loss 5.70479:   4%|▎         | 1/28 [00:01<00:21,  1.27it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0053[0m
[32m  eval_f1 = 0.0014[0m
[32m  eval_mcc = 0.0021[0m
[32m  eval_precision = 0.0058[0m
[32m  eval_recall = 0.0036[0m
[32m  ********************[0m
[32m  Best f1:0.0014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.70479:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.69762:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.69762:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 0 loss 5.68584:  11%|█         | 3/28 [00:07<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0077[0m
[32m  eval_f1 = 0.0017[0m
[32m  eval_mcc = 0.0029[0m
[32m  eval_precision = 0.0084[0m
[32m  eval_recall = 0.0035[0m
[32m  ********************[0m
[32m  Best f1:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.68584:  14%|█▍        | 4/28 [00:15<01:57,  4.91s/it]epoch 0 loss 5.66357:  14%|█▍        | 4/28 [00:16<01:57,  4.91s/it]epoch 0 loss 5.66357:  18%|█▊        | 5/28 [00:16<01:15,  3.30s/it]epoch 0 loss 5.63393:  18%|█▊        | 5/28 [00:16<01:15,  3.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0135[0m
[32m  eval_f1 = 0.0023[0m
[32m  eval_mcc = 0.0045[0m
[32m  eval_precision = 0.0093[0m
[32m  eval_recall = 0.0044[0m
[32m  ********************[0m
[32m  Best f1:0.0023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.63393:  21%|██▏       | 6/28 [00:25<01:59,  5.43s/it]epoch 0 loss 5.60075:  21%|██▏       | 6/28 [00:26<01:59,  5.43s/it]epoch 0 loss 5.60075:  25%|██▌       | 7/28 [00:26<01:19,  3.79s/it]epoch 0 loss 5.55331:  25%|██▌       | 7/28 [00:26<01:19,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0266[0m
[32m  eval_f1 = 0.0053[0m
[32m  eval_mcc = 0.0096[0m
[32m  eval_precision = 0.011[0m
[32m  eval_recall = 0.0094[0m
[32m  ********************[0m
[32m  Best f1:0.0053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.55331:  29%|██▊       | 8/28 [00:33<01:38,  4.90s/it]epoch 0 loss 5.50497:  29%|██▊       | 8/28 [00:33<01:38,  4.90s/it]epoch 0 loss 5.50497:  32%|███▏      | 9/28 [00:33<01:06,  3.50s/it]epoch 0 loss 5.44979:  32%|███▏      | 9/28 [00:34<01:06,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0509[0m
[32m  eval_f1 = 0.0136[0m
[32m  eval_mcc = 0.0253[0m
[32m  eval_precision = 0.0208[0m
[32m  eval_recall = 0.0173[0m
[32m  ********************[0m
[32m  Best f1:0.0136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.44979:  36%|███▌      | 10/28 [00:39<01:14,  4.15s/it]epoch 0 loss 5.39044:  36%|███▌      | 10/28 [00:39<01:14,  4.15s/it]epoch 0 loss 5.39044:  39%|███▉      | 11/28 [00:39<00:51,  3.01s/it]epoch 0 loss 5.3234:  39%|███▉      | 11/28 [00:40<00:51,  3.01s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0775[0m
[32m  eval_f1 = 0.0235[0m
[32m  eval_mcc = 0.0479[0m
[32m  eval_precision = 0.0344[0m
[32m  eval_recall = 0.0266[0m
[32m  ********************[0m
[32m  Best f1:0.0235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.3234:  43%|████▎     | 12/28 [00:45<01:01,  3.82s/it]epoch 0 loss 5.25268:  43%|████▎     | 12/28 [00:46<01:01,  3.82s/it]epoch 0 loss 5.25268:  46%|████▋     | 13/28 [00:46<00:41,  2.79s/it]epoch 0 loss 5.17582:  46%|████▋     | 13/28 [00:46<00:41,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1333[0m
[32m  eval_f1 = 0.0495[0m
[32m  eval_mcc = 0.1014[0m
[32m  eval_precision = 0.0689[0m
[32m  eval_recall = 0.0501[0m
[32m  ********************[0m
[32m  Best f1:0.0495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.17582:  50%|█████     | 14/28 [00:51<00:51,  3.67s/it]epoch 0 loss 5.09992:  50%|█████     | 14/28 [00:52<00:51,  3.67s/it]epoch 0 loss 5.09992:  54%|█████▎    | 15/28 [00:52<00:34,  2.69s/it]epoch 0 loss 5.02067:  54%|█████▎    | 15/28 [00:52<00:34,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2101[0m
[32m  eval_f1 = 0.0754[0m
[32m  eval_mcc = 0.1746[0m
[32m  eval_precision = 0.1012[0m
[32m  eval_recall = 0.0752[0m
[32m  ********************[0m
[32m  Best f1:0.0754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.02067:  57%|█████▋    | 16/28 [00:58<00:45,  3.83s/it]epoch 0 loss 4.93972:  57%|█████▋    | 16/28 [00:59<00:45,  3.83s/it]epoch 0 loss 4.93972:  61%|██████    | 17/28 [00:59<00:30,  2.81s/it]epoch 0 loss 4.85909:  61%|██████    | 17/28 [00:59<00:30,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2752[0m
[32m  eval_f1 = 0.0884[0m
[32m  eval_mcc = 0.2329[0m
[32m  eval_precision = 0.1175[0m
[32m  eval_recall = 0.0876[0m
[32m  ********************[0m
[32m  Best f1:0.0884[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.85909:  64%|██████▍   | 18/28 [01:05<00:39,  3.95s/it]epoch 0 loss 4.77321:  64%|██████▍   | 18/28 [01:06<00:39,  3.95s/it]epoch 0 loss 4.77321:  68%|██████▊   | 19/28 [01:06<00:26,  2.89s/it]epoch 0 loss 4.69226:  68%|██████▊   | 19/28 [01:06<00:26,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3403[0m
[32m  eval_f1 = 0.0961[0m
[32m  eval_mcc = 0.2957[0m
[32m  eval_precision = 0.1316[0m
[32m  eval_recall = 0.0924[0m
[32m  ********************[0m
[32m  Best f1:0.0961[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.69226:  71%|███████▏  | 20/28 [01:12<00:31,  3.95s/it]epoch 0 loss 4.6125:  71%|███████▏  | 20/28 [01:13<00:31,  3.95s/it] epoch 0 loss 4.6125:  75%|███████▌  | 21/28 [01:13<00:20,  2.89s/it]epoch 0 loss 4.53537:  75%|███████▌  | 21/28 [01:13<00:20,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3745[0m
[32m  eval_f1 = 0.0974[0m
[32m  eval_mcc = 0.3317[0m
[32m  eval_precision = 0.1451[0m
[32m  eval_recall = 0.0927[0m
[32m  ********************[0m
[32m  Best f1:0.0974[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.53537:  79%|███████▊  | 22/28 [01:19<00:23,  4.00s/it]epoch 0 loss 4.45324:  79%|███████▊  | 22/28 [01:20<00:23,  4.00s/it]epoch 0 loss 4.45324:  82%|████████▏ | 23/28 [01:20<00:14,  2.93s/it]epoch 0 loss 4.37712:  82%|████████▏ | 23/28 [01:20<00:14,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4213[0m
[32m  eval_f1 = 0.1104[0m
[32m  eval_mcc = 0.3824[0m
[32m  eval_precision = 0.1626[0m
[32m  eval_recall = 0.1043[0m
[32m  ********************[0m
[32m  Best f1:0.1104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.37712:  86%|████████▌ | 24/28 [01:25<00:14,  3.75s/it]epoch 0 loss 4.30265:  86%|████████▌ | 24/28 [01:26<00:14,  3.75s/it]epoch 0 loss 4.30265:  89%|████████▉ | 25/28 [01:26<00:08,  2.75s/it]epoch 0 loss 4.22768:  89%|████████▉ | 25/28 [01:26<00:08,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4526[0m
[32m  eval_f1 = 0.1221[0m
[32m  eval_mcc = 0.4166[0m
[32m  eval_precision = 0.1691[0m
[32m  eval_recall = 0.1158[0m
[32m  ********************[0m
[32m  Best f1:0.1221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.22768:  93%|█████████▎| 26/28 [01:32<00:07,  3.88s/it]epoch 0 loss 4.15725:  93%|█████████▎| 26/28 [01:33<00:07,  3.88s/it]epoch 0 loss 4.15725:  96%|█████████▋| 27/28 [01:33<00:02,  2.84s/it]epoch 0 loss 4.08401:  96%|█████████▋| 27/28 [01:33<00:02,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4899[0m
[32m  eval_f1 = 0.1345[0m
[32m  eval_mcc = 0.4575[0m
[32m  eval_precision = 0.1785[0m
[32m  eval_recall = 0.131[0m
[32m  ********************[0m
[32m  Best f1:0.1345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.08401: 100%|██████████| 28/28 [01:41<00:00,  4.58s/it]epoch 0 loss 4.08401: 100%|██████████| 28/28 [01:41<00:00,  3.63s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.16213:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.16213:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 1 loss 2.14621:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5291[0m
[32m  eval_f1 = 0.1559[0m
[32m  eval_mcc = 0.4998[0m
[32m  eval_precision = 0.202[0m
[32m  eval_recall = 0.1502[0m
[32m  ********************[0m
[32m  Best f1:0.1559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4998[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.14621:   7%|▋         | 2/28 [00:06<01:44,  4.01s/it]epoch 1 loss 2.12269:   7%|▋         | 2/28 [00:07<01:44,  4.01s/it]epoch 1 loss 2.12269:  11%|█         | 3/28 [00:07<00:59,  2.37s/it]epoch 1 loss 2.10994:  11%|█         | 3/28 [00:07<00:59,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5557[0m
[32m  eval_f1 = 0.1674[0m
[32m  eval_mcc = 0.5284[0m
[32m  eval_precision = 0.2233[0m
[32m  eval_recall = 0.163[0m
[32m  ********************[0m
[32m  Best f1:0.1674[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.10994:  14%|█▍        | 4/28 [00:16<01:57,  4.90s/it]epoch 1 loss 2.05378:  14%|█▍        | 4/28 [00:16<01:57,  4.90s/it]epoch 1 loss 2.05378:  18%|█▊        | 5/28 [00:16<01:15,  3.29s/it]epoch 1 loss 2.0019:  18%|█▊        | 5/28 [00:16<01:15,  3.29s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5721[0m
[32m  eval_f1 = 0.1739[0m
[32m  eval_mcc = 0.5461[0m
[32m  eval_precision = 0.2329[0m
[32m  eval_recall = 0.169[0m
[32m  ********************[0m
[32m  Best f1:0.1739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0019:  21%|██▏       | 6/28 [00:23<01:37,  4.41s/it]epoch 1 loss 1.97001:  21%|██▏       | 6/28 [00:23<01:37,  4.41s/it]epoch 1 loss 1.97001:  25%|██▌       | 7/28 [00:23<01:05,  3.11s/it]epoch 1 loss 1.92293:  25%|██▌       | 7/28 [00:23<01:05,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5798[0m
[32m  eval_f1 = 0.1879[0m
[32m  eval_mcc = 0.5563[0m
[32m  eval_precision = 0.2633[0m
[32m  eval_recall = 0.1777[0m
[32m  ********************[0m
[32m  Best f1:0.1879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92293:  29%|██▊       | 8/28 [00:32<01:37,  4.86s/it]epoch 1 loss 1.88242:  29%|██▊       | 8/28 [00:32<01:37,  4.86s/it]epoch 1 loss 1.88242:  32%|███▏      | 9/28 [00:32<01:05,  3.47s/it]epoch 1 loss 1.86289:  32%|███▏      | 9/28 [00:33<01:05,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5886[0m
[32m  eval_f1 = 0.2121[0m
[32m  eval_mcc = 0.5671[0m
[32m  eval_precision = 0.2822[0m
[32m  eval_recall = 0.1982[0m
[32m  ********************[0m
[32m  Best f1:0.2121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5671[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86289:  36%|███▌      | 10/28 [00:39<01:19,  4.41s/it]epoch 1 loss 1.84365:  36%|███▌      | 10/28 [00:39<01:19,  4.41s/it]epoch 1 loss 1.84365:  39%|███▉      | 11/28 [00:39<00:54,  3.19s/it]epoch 1 loss 1.82994:  39%|███▉      | 11/28 [00:39<00:54,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5974[0m
[32m  eval_f1 = 0.2336[0m
[32m  eval_mcc = 0.5763[0m
[32m  eval_precision = 0.3177[0m
[32m  eval_recall = 0.2173[0m
[32m  ********************[0m
[32m  Best f1:0.2336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5763[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.82994:  43%|████▎     | 12/28 [00:48<01:17,  4.86s/it]epoch 1 loss 1.80644:  43%|████▎     | 12/28 [00:48<01:17,  4.86s/it]epoch 1 loss 1.80644:  46%|████▋     | 13/28 [00:48<00:52,  3.52s/it]epoch 1 loss 1.79295:  46%|████▋     | 13/28 [00:49<00:52,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6051[0m
[32m  eval_f1 = 0.2434[0m
[32m  eval_mcc = 0.5843[0m
[32m  eval_precision = 0.3207[0m
[32m  eval_recall = 0.2256[0m
[32m  ********************[0m
[32m  Best f1:0.2434[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5843[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.79295:  50%|█████     | 14/28 [00:55<01:02,  4.44s/it]epoch 1 loss 1.78735:  50%|█████     | 14/28 [00:55<01:02,  4.44s/it]epoch 1 loss 1.78735:  54%|█████▎    | 15/28 [00:55<00:42,  3.23s/it]epoch 1 loss 1.77353:  54%|█████▎    | 15/28 [00:56<00:42,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6111[0m
[32m  eval_f1 = 0.2585[0m
[32m  eval_mcc = 0.5897[0m
[32m  eval_precision = 0.3443[0m
[32m  eval_recall = 0.2395[0m
[32m  ********************[0m
[32m  Best f1:0.2585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77353:  57%|█████▋    | 16/28 [01:03<00:55,  4.63s/it]epoch 1 loss 1.75592:  57%|█████▋    | 16/28 [01:03<00:55,  4.63s/it]epoch 1 loss 1.75592:  61%|██████    | 17/28 [01:03<00:37,  3.37s/it]epoch 1 loss 1.74272:  61%|██████    | 17/28 [01:04<00:37,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6164[0m
[32m  eval_f1 = 0.2657[0m
[32m  eval_mcc = 0.5944[0m
[32m  eval_precision = 0.3691[0m
[32m  eval_recall = 0.2462[0m
[32m  ********************[0m
[32m  Best f1:0.2657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5944[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74272:  64%|██████▍   | 18/28 [01:15<00:57,  5.73s/it]epoch 1 loss 1.72222:  64%|██████▍   | 18/28 [01:15<00:57,  5.73s/it]epoch 1 loss 1.72222:  68%|██████▊   | 19/28 [01:15<00:37,  4.14s/it]epoch 1 loss 1.71062:  68%|██████▊   | 19/28 [01:16<00:37,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6206[0m
[32m  eval_f1 = 0.2777[0m
[32m  eval_mcc = 0.5986[0m
[32m  eval_precision = 0.3689[0m
[32m  eval_recall = 0.2557[0m
[32m  ********************[0m
[32m  Best f1:0.2777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5986[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.71062:  71%|███████▏  | 20/28 [01:26<00:49,  6.13s/it]epoch 1 loss 1.69824:  71%|███████▏  | 20/28 [01:26<00:49,  6.13s/it]epoch 1 loss 1.69824:  75%|███████▌  | 21/28 [01:26<00:30,  4.42s/it]epoch 1 loss 1.69439:  75%|███████▌  | 21/28 [01:27<00:30,  4.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6272[0m
[32m  eval_f1 = 0.2871[0m
[32m  eval_mcc = 0.6056[0m
[32m  eval_precision = 0.372[0m
[32m  eval_recall = 0.2669[0m
[32m  ********************[0m
[32m  Best f1:0.2871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.69439:  79%|███████▊  | 22/28 [01:36<00:35,  5.92s/it]epoch 1 loss 1.68003:  79%|███████▊  | 22/28 [01:36<00:35,  5.92s/it]epoch 1 loss 1.68003:  82%|████████▏ | 23/28 [01:36<00:21,  4.27s/it]epoch 1 loss 1.66795:  82%|████████▏ | 23/28 [01:37<00:21,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.631[0m
[32m  eval_f1 = 0.2965[0m
[32m  eval_mcc = 0.6097[0m
[32m  eval_precision = 0.3834[0m
[32m  eval_recall = 0.2776[0m
[32m  ********************[0m
[32m  Best f1:0.2965[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6097[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.66795:  86%|████████▌ | 24/28 [01:46<00:24,  6.05s/it]epoch 1 loss 1.66033:  86%|████████▌ | 24/28 [01:47<00:24,  6.05s/it]epoch 1 loss 1.66033:  89%|████████▉ | 25/28 [01:47<00:13,  4.36s/it]epoch 1 loss 1.64398:  89%|████████▉ | 25/28 [01:47<00:13,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6342[0m
[32m  eval_f1 = 0.2979[0m
[32m  eval_mcc = 0.6135[0m
[32m  eval_precision = 0.3835[0m
[32m  eval_recall = 0.2794[0m
[32m  ********************[0m
[32m  Best f1:0.2979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.64398:  93%|█████████▎| 26/28 [01:55<00:11,  5.55s/it]epoch 1 loss 1.638:  93%|█████████▎| 26/28 [01:56<00:11,  5.55s/it]  epoch 1 loss 1.638:  96%|█████████▋| 27/28 [01:56<00:04,  4.01s/it]epoch 1 loss 1.62473:  96%|█████████▋| 27/28 [01:56<00:04,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6355[0m
[32m  eval_f1 = 0.2983[0m
[32m  eval_mcc = 0.6156[0m
[32m  eval_precision = 0.3848[0m
[32m  eval_recall = 0.2798[0m
[32m  ********************[0m
[32m  Best f1:0.2983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6156[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.62473: 100%|██████████| 28/28 [02:06<00:00,  5.86s/it]epoch 1 loss 1.62473: 100%|██████████| 28/28 [02:06<00:00,  4.51s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.30783:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.30783:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 2 loss 1.37323:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.3006[0m
[32m  eval_mcc = 0.6183[0m
[32m  eval_precision = 0.3858[0m
[32m  eval_recall = 0.2809[0m
[32m  ********************[0m
[32m  Best f1:0.3006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37323:   7%|▋         | 2/28 [00:08<02:11,  5.07s/it]epoch 2 loss 1.38852:   7%|▋         | 2/28 [00:09<02:11,  5.07s/it]epoch 2 loss 1.38852:  11%|█         | 3/28 [00:09<01:13,  2.95s/it]epoch 2 loss 1.35934:  11%|█         | 3/28 [00:09<01:13,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6399[0m
[32m  eval_f1 = 0.3013[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.3859[0m
[32m  eval_recall = 0.2813[0m
[32m  ********************[0m
[32m  Best f1:0.3013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35934:  14%|█▍        | 4/28 [00:19<02:21,  5.89s/it]epoch 2 loss 1.35568:  14%|█▍        | 4/28 [00:19<02:21,  5.89s/it]epoch 2 loss 1.35568:  18%|█▊        | 5/28 [00:19<01:30,  3.92s/it]epoch 2 loss 1.35227:  18%|█▊        | 5/28 [00:20<01:30,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6468[0m
[32m  eval_f1 = 0.3118[0m
[32m  eval_mcc = 0.6284[0m
[32m  eval_precision = 0.4002[0m
[32m  eval_recall = 0.2892[0m
[32m  ********************[0m
[32m  Best f1:0.3118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35227:  21%|██▏       | 6/28 [00:28<01:59,  5.45s/it]epoch 2 loss 1.34054:  21%|██▏       | 6/28 [00:28<01:59,  5.45s/it]epoch 2 loss 1.34054:  25%|██▌       | 7/28 [00:28<01:20,  3.81s/it]epoch 2 loss 1.33195:  25%|██▌       | 7/28 [00:29<01:20,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6493[0m
[32m  eval_f1 = 0.3172[0m
[32m  eval_mcc = 0.6302[0m
[32m  eval_precision = 0.4083[0m
[32m  eval_recall = 0.2937[0m
[32m  ********************[0m
[32m  Best f1:0.3172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33195:  29%|██▊       | 8/28 [00:39<01:57,  5.88s/it]epoch 2 loss 1.33061:  29%|██▊       | 8/28 [00:39<01:57,  5.88s/it]epoch 2 loss 1.33061:  32%|███▏      | 9/28 [00:39<01:19,  4.17s/it]epoch 2 loss 1.32512:  32%|███▏      | 9/28 [00:39<01:19,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.3223[0m
[32m  eval_mcc = 0.631[0m
[32m  eval_precision = 0.4211[0m
[32m  eval_recall = 0.2993[0m
[32m  ********************[0m
[32m  Best f1:0.3223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32512:  36%|███▌      | 10/28 [00:49<01:44,  5.80s/it]epoch 2 loss 1.32177:  36%|███▌      | 10/28 [00:49<01:44,  5.80s/it]epoch 2 loss 1.32177:  39%|███▉      | 11/28 [00:49<01:10,  4.16s/it]epoch 2 loss 1.31993:  39%|███▉      | 11/28 [00:49<01:10,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6534[0m
[32m  eval_f1 = 0.3256[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.4375[0m
[32m  eval_recall = 0.3033[0m
[32m  ********************[0m
[32m  Best f1:0.3256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31993:  43%|████▎     | 12/28 [01:00<01:38,  6.18s/it]epoch 2 loss 1.31818:  43%|████▎     | 12/28 [01:00<01:38,  6.18s/it]epoch 2 loss 1.31818:  46%|████▋     | 13/28 [01:00<01:06,  4.43s/it]epoch 2 loss 1.31515:  46%|████▋     | 13/28 [01:01<01:06,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3301[0m
[32m  eval_mcc = 0.6368[0m
[32m  eval_precision = 0.439[0m
[32m  eval_recall = 0.3073[0m
[32m  ********************[0m
[32m  Best f1:0.3301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31515:  50%|█████     | 14/28 [01:11<01:27,  6.25s/it]epoch 2 loss 1.31131:  50%|█████     | 14/28 [01:11<01:27,  6.25s/it]epoch 2 loss 1.31131:  54%|█████▎    | 15/28 [01:11<00:58,  4.49s/it]epoch 2 loss 1.29906:  54%|█████▎    | 15/28 [01:11<00:58,  4.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.66[0m
[32m  eval_f1 = 0.3363[0m
[32m  eval_mcc = 0.6401[0m
[32m  eval_precision = 0.4459[0m
[32m  eval_recall = 0.3128[0m
[32m  ********************[0m
[32m  Best f1:0.3363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29906:  57%|█████▋    | 16/28 [01:17<00:58,  4.88s/it]epoch 2 loss 1.29445:  57%|█████▋    | 16/28 [01:17<00:58,  4.88s/it]epoch 2 loss 1.29445:  61%|██████    | 17/28 [01:17<00:38,  3.54s/it]epoch 2 loss 1.29259:  61%|██████    | 17/28 [01:18<00:38,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6616[0m
[32m  eval_f1 = 0.3389[0m
[32m  eval_mcc = 0.6419[0m
[32m  eval_precision = 0.4461[0m
[32m  eval_recall = 0.3158[0m
[32m  ********************[0m
[32m  Best f1:0.3389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6419[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29259:  64%|██████▍   | 18/28 [01:24<00:44,  4.41s/it]epoch 2 loss 1.29268:  64%|██████▍   | 18/28 [01:24<00:44,  4.41s/it]epoch 2 loss 1.29268:  68%|██████▊   | 19/28 [01:24<00:28,  3.22s/it]epoch 2 loss 1.29146:  68%|██████▊   | 19/28 [01:25<00:28,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6618[0m
[32m  eval_f1 = 0.3405[0m
[32m  eval_mcc = 0.6427[0m
[32m  eval_precision = 0.4476[0m
[32m  eval_recall = 0.3171[0m
[32m  ********************[0m
[32m  Best f1:0.3405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29146:  71%|███████▏  | 20/28 [01:33<00:38,  4.78s/it]epoch 2 loss 1.2782:  71%|███████▏  | 20/28 [01:33<00:38,  4.78s/it] epoch 2 loss 1.2782:  75%|███████▌  | 21/28 [01:33<00:24,  3.48s/it]epoch 2 loss 1.27354:  75%|███████▌  | 21/28 [01:33<00:24,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.662[0m
[32m  eval_f1 = 0.3418[0m
[32m  eval_mcc = 0.644[0m
[32m  eval_precision = 0.4486[0m
[32m  eval_recall = 0.3175[0m
[32m  ********************[0m
[32m  Best f1:0.3418[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27354:  79%|███████▊  | 22/28 [01:39<00:26,  4.37s/it]epoch 2 loss 1.26864:  79%|███████▊  | 22/28 [01:40<00:26,  4.37s/it]epoch 2 loss 1.26864:  82%|████████▏ | 23/28 [01:40<00:15,  3.19s/it]epoch 2 loss 1.27351:  82%|████████▏ | 23/28 [01:40<00:15,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.663[0m
[32m  eval_f1 = 0.3425[0m
[32m  eval_mcc = 0.6453[0m
[32m  eval_precision = 0.4426[0m
[32m  eval_recall = 0.3182[0m
[32m  ********************[0m
[32m  Best f1:0.3425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27351:  86%|████████▌ | 24/28 [01:48<00:19,  4.81s/it]epoch 2 loss 1.26702:  86%|████████▌ | 24/28 [01:49<00:19,  4.81s/it]epoch 2 loss 1.26702:  89%|████████▉ | 25/28 [01:49<00:10,  3.49s/it]epoch 2 loss 1.2641:  89%|████████▉ | 25/28 [01:49<00:10,  3.49s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6646[0m
[32m  eval_f1 = 0.3514[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.4599[0m
[32m  eval_recall = 0.3251[0m
[32m  ********************[0m
[32m  Best f1:0.3514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2641:  93%|█████████▎| 26/28 [01:56<00:08,  4.44s/it]epoch 2 loss 1.2688:  93%|█████████▎| 26/28 [01:56<00:08,  4.44s/it]epoch 2 loss 1.2688:  96%|█████████▋| 27/28 [01:56<00:03,  3.23s/it]epoch 2 loss 1.26519:  96%|█████████▋| 27/28 [01:56<00:03,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6663[0m
[32m  eval_f1 = 0.3581[0m
[32m  eval_mcc = 0.6475[0m
[32m  eval_precision = 0.467[0m
[32m  eval_recall = 0.3304[0m
[32m  ********************[0m
[32m  Best f1:0.3581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6475[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26519: 100%|██████████| 28/28 [02:06<00:00,  5.17s/it]epoch 2 loss 1.26519: 100%|██████████| 28/28 [02:06<00:00,  4.50s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.06513:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.06513:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 3 loss 1.10509:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6675[0m
[32m  eval_f1 = 0.362[0m
[32m  eval_mcc = 0.6485[0m
[32m  eval_precision = 0.4676[0m
[32m  eval_recall = 0.3346[0m
[32m  ********************[0m
[32m  Best f1:0.362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.10509:   7%|▋         | 2/28 [00:09<02:20,  5.39s/it]epoch 3 loss 1.10999:   7%|▋         | 2/28 [00:09<02:20,  5.39s/it]epoch 3 loss 1.10999:  11%|█         | 3/28 [00:09<01:17,  3.12s/it]epoch 3 loss 1.12015:  11%|█         | 3/28 [00:10<01:17,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6685[0m
[32m  eval_f1 = 0.3648[0m
[32m  eval_mcc = 0.6494[0m
[32m  eval_precision = 0.4672[0m
[32m  eval_recall = 0.3377[0m
[32m  ********************[0m
[32m  Best f1:0.3648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.12015:  14%|█▍        | 4/28 [00:16<01:46,  4.43s/it]epoch 3 loss 1.14266:  14%|█▍        | 4/28 [00:16<01:46,  4.43s/it]epoch 3 loss 1.14266:  18%|█▊        | 5/28 [00:16<01:08,  2.98s/it]epoch 3 loss 1.14561:  18%|█▊        | 5/28 [00:16<01:08,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6679[0m
[32m  eval_f1 = 0.3675[0m
[32m  eval_mcc = 0.6487[0m
[32m  eval_precision = 0.4689[0m
[32m  eval_recall = 0.3406[0m
[32m  ********************[0m
[32m  Best f1:0.3675[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.14561:  21%|██▏       | 6/28 [00:23<01:35,  4.36s/it]epoch 3 loss 1.13517:  21%|██▏       | 6/28 [00:24<01:35,  4.36s/it]epoch 3 loss 1.13517:  25%|██▌       | 7/28 [00:24<01:04,  3.07s/it]epoch 3 loss 1.12603:  25%|██▌       | 7/28 [00:24<01:04,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6689[0m
[32m  eval_f1 = 0.37[0m
[32m  eval_mcc = 0.6498[0m
[32m  eval_precision = 0.4723[0m
[32m  eval_recall = 0.3422[0m
[32m  ********************[0m
[32m  Best f1:0.37[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6498[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.12603:  29%|██▊       | 8/28 [00:30<01:20,  4.01s/it]epoch 3 loss 1.14343:  29%|██▊       | 8/28 [00:30<01:20,  4.01s/it]epoch 3 loss 1.14343:  32%|███▏      | 9/28 [00:30<00:54,  2.89s/it]epoch 3 loss 1.15274:  32%|███▏      | 9/28 [00:30<00:54,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6697[0m
[32m  eval_f1 = 0.3688[0m
[32m  eval_mcc = 0.6508[0m
[32m  eval_precision = 0.4744[0m
[32m  eval_recall = 0.3407[0m
[32m  ********************[0m
[32m  Best MCC:0.6508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15274:  36%|███▌      | 10/28 [00:35<01:03,  3.52s/it]epoch 3 loss 1.16826:  36%|███▌      | 10/28 [00:35<01:03,  3.52s/it]epoch 3 loss 1.16826:  39%|███▉      | 11/28 [00:35<00:43,  2.57s/it]epoch 3 loss 1.18514:  39%|███▉      | 11/28 [00:36<00:43,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6707[0m
[32m  eval_f1 = 0.3702[0m
[32m  eval_mcc = 0.6519[0m
[32m  eval_precision = 0.4762[0m
[32m  eval_recall = 0.3424[0m
[32m  ********************[0m
[32m  Best f1:0.3702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18514:  43%|████▎     | 12/28 [00:46<01:18,  4.89s/it]epoch 3 loss 1.18623:  43%|████▎     | 12/28 [00:46<01:18,  4.89s/it]epoch 3 loss 1.18623:  46%|████▋     | 13/28 [00:46<00:53,  3.54s/it]epoch 3 loss 1.18153:  46%|████▋     | 13/28 [00:46<00:53,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6722[0m
[32m  eval_f1 = 0.3658[0m
[32m  eval_mcc = 0.6536[0m
[32m  eval_precision = 0.4668[0m
[32m  eval_recall = 0.3387[0m
[32m  ********************[0m
[32m  Best MCC:0.6536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18153:  50%|█████     | 14/28 [00:51<00:55,  3.99s/it]epoch 3 loss 1.18058:  50%|█████     | 14/28 [00:51<00:55,  3.99s/it]epoch 3 loss 1.18058:  54%|█████▎    | 15/28 [00:51<00:37,  2.91s/it]epoch 3 loss 1.17625:  54%|█████▎    | 15/28 [00:52<00:37,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6735[0m
[32m  eval_f1 = 0.3689[0m
[32m  eval_mcc = 0.6552[0m
[32m  eval_precision = 0.4744[0m
[32m  eval_recall = 0.3409[0m
[32m  ********************[0m
[32m  Best MCC:0.6552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17625:  57%|█████▋    | 16/28 [00:56<00:42,  3.51s/it]epoch 3 loss 1.17679:  57%|█████▋    | 16/28 [00:57<00:42,  3.51s/it]epoch 3 loss 1.17679:  61%|██████    | 17/28 [00:57<00:28,  2.58s/it]epoch 3 loss 1.18162:  61%|██████    | 17/28 [00:57<00:28,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6736[0m
[32m  eval_f1 = 0.3698[0m
[32m  eval_mcc = 0.6553[0m
[32m  eval_precision = 0.4704[0m
[32m  eval_recall = 0.3414[0m
[32m  ********************[0m
[32m  Best MCC:0.6553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18162:  64%|██████▍   | 18/28 [01:01<00:32,  3.22s/it]epoch 3 loss 1.18304:  64%|██████▍   | 18/28 [01:02<00:32,  3.22s/it]epoch 3 loss 1.18304:  68%|██████▊   | 19/28 [01:02<00:21,  2.37s/it]epoch 3 loss 1.18011:  68%|██████▊   | 19/28 [01:02<00:21,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6743[0m
[32m  eval_f1 = 0.3769[0m
[32m  eval_mcc = 0.6561[0m
[32m  eval_precision = 0.4795[0m
[32m  eval_recall = 0.3471[0m
[32m  ********************[0m
[32m  Best f1:0.3769[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18011:  71%|███████▏  | 20/28 [01:08<00:28,  3.60s/it]epoch 3 loss 1.17692:  71%|███████▏  | 20/28 [01:09<00:28,  3.60s/it]epoch 3 loss 1.17692:  75%|███████▌  | 21/28 [01:09<00:18,  2.64s/it]epoch 3 loss 1.17269:  75%|███████▌  | 21/28 [01:09<00:18,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6751[0m
[32m  eval_f1 = 0.3809[0m
[32m  eval_mcc = 0.657[0m
[32m  eval_precision = 0.4825[0m
[32m  eval_recall = 0.3508[0m
[32m  ********************[0m
[32m  Best f1:0.3809[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17269:  79%|███████▊  | 22/28 [01:15<00:22,  3.78s/it]epoch 3 loss 1.16967:  79%|███████▊  | 22/28 [01:16<00:22,  3.78s/it]epoch 3 loss 1.16967:  82%|████████▏ | 23/28 [01:16<00:13,  2.77s/it]epoch 3 loss 1.1703:  82%|████████▏ | 23/28 [01:16<00:13,  2.77s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6756[0m
[32m  eval_f1 = 0.3825[0m
[32m  eval_mcc = 0.6575[0m
[32m  eval_precision = 0.4834[0m
[32m  eval_recall = 0.3522[0m
[32m  ********************[0m
[32m  Best f1:0.3825[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1703:  86%|████████▌ | 24/28 [01:22<00:15,  3.89s/it]epoch 3 loss 1.17205:  86%|████████▌ | 24/28 [01:22<00:15,  3.89s/it]epoch 3 loss 1.17205:  89%|████████▉ | 25/28 [01:22<00:08,  2.85s/it]epoch 3 loss 1.17137:  89%|████████▉ | 25/28 [01:23<00:08,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6755[0m
[32m  eval_f1 = 0.3857[0m
[32m  eval_mcc = 0.6574[0m
[32m  eval_precision = 0.4843[0m
[32m  eval_recall = 0.3565[0m
[32m  ********************[0m
[32m  Best f1:0.3857[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.17137:  93%|█████████▎| 26/28 [01:28<00:07,  3.53s/it]epoch 3 loss 1.17509:  93%|█████████▎| 26/28 [01:28<00:07,  3.53s/it]epoch 3 loss 1.17509:  96%|█████████▋| 27/28 [01:28<00:02,  2.60s/it]epoch 3 loss 1.17253:  96%|█████████▋| 27/28 [01:28<00:02,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6763[0m
[32m  eval_f1 = 0.3862[0m
[32m  eval_mcc = 0.6582[0m
[32m  eval_precision = 0.4844[0m
[32m  eval_recall = 0.3572[0m
[32m  ********************[0m
[32m  Best f1:0.3862[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17253: 100%|██████████| 28/28 [01:34<00:00,  3.50s/it]epoch 3 loss 1.17253: 100%|██████████| 28/28 [01:34<00:00,  3.36s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.1683:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.1683:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.19645:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6769[0m
[32m  eval_f1 = 0.3878[0m
[32m  eval_mcc = 0.6586[0m
[32m  eval_precision = 0.4837[0m
[32m  eval_recall = 0.3587[0m
[32m  ********************[0m
[32m  Best f1:0.3878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19645:   7%|▋         | 2/28 [00:06<01:44,  4.01s/it]epoch 4 loss 1.18:   7%|▋         | 2/28 [00:07<01:44,  4.01s/it]   epoch 4 loss 1.18:  11%|█         | 3/28 [00:07<00:59,  2.38s/it]epoch 4 loss 1.16877:  11%|█         | 3/28 [00:07<00:59,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6778[0m
[32m  eval_f1 = 0.3905[0m
[32m  eval_mcc = 0.6596[0m
[32m  eval_precision = 0.491[0m
[32m  eval_recall = 0.3613[0m
[32m  ********************[0m
[32m  Best f1:0.3905[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16877:  14%|█▍        | 4/28 [00:15<01:52,  4.67s/it]epoch 4 loss 1.17883:  14%|█▍        | 4/28 [00:16<01:52,  4.67s/it]epoch 4 loss 1.17883:  18%|█▊        | 5/28 [00:16<01:12,  3.14s/it]epoch 4 loss 1.17469:  18%|█▊        | 5/28 [00:16<01:12,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6788[0m
[32m  eval_f1 = 0.3909[0m
[32m  eval_mcc = 0.6607[0m
[32m  eval_precision = 0.491[0m
[32m  eval_recall = 0.3619[0m
[32m  ********************[0m
[32m  Best f1:0.3909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17469:  21%|██▏       | 6/28 [00:22<01:34,  4.28s/it]epoch 4 loss 1.16499:  21%|██▏       | 6/28 [00:22<01:34,  4.28s/it]epoch 4 loss 1.16499:  25%|██▌       | 7/28 [00:22<01:03,  3.02s/it]epoch 4 loss 1.16237:  25%|██▌       | 7/28 [00:23<01:03,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.679[0m
[32m  eval_f1 = 0.3906[0m
[32m  eval_mcc = 0.661[0m
[32m  eval_precision = 0.4896[0m
[32m  eval_recall = 0.3618[0m
[32m  ********************[0m
[32m  Best MCC:0.661[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16237:  29%|██▊       | 8/28 [00:30<01:32,  4.62s/it]epoch 4 loss 1.15997:  29%|██▊       | 8/28 [00:31<01:32,  4.62s/it]epoch 4 loss 1.15997:  32%|███▏      | 9/28 [00:31<01:02,  3.31s/it]epoch 4 loss 1.16649:  32%|███▏      | 9/28 [00:31<01:02,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6796[0m
[32m  eval_f1 = 0.3931[0m
[32m  eval_mcc = 0.6615[0m
[32m  eval_precision = 0.4899[0m
[32m  eval_recall = 0.3646[0m
[32m  ********************[0m
[32m  Best f1:0.3931[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6615[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16649:  36%|███▌      | 10/28 [00:37<01:17,  4.33s/it]epoch 4 loss 1.16452:  36%|███▌      | 10/28 [00:38<01:17,  4.33s/it]epoch 4 loss 1.16452:  39%|███▉      | 11/28 [00:38<00:53,  3.14s/it]epoch 4 loss 1.16578:  39%|███▉      | 11/28 [00:38<00:53,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6794[0m
[32m  eval_f1 = 0.393[0m
[32m  eval_mcc = 0.6613[0m
[32m  eval_precision = 0.4904[0m
[32m  eval_recall = 0.3645[0m

epoch 4 loss 1.16578:  43%|████▎     | 12/28 [00:42<00:53,  3.34s/it]epoch 4 loss 1.16505:  43%|████▎     | 12/28 [00:42<00:53,  3.34s/it]epoch 4 loss 1.16505:  46%|████▋     | 13/28 [00:42<00:36,  2.45s/it]epoch 4 loss 1.14966:  46%|████▋     | 13/28 [00:43<00:36,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6791[0m
[32m  eval_f1 = 0.3931[0m
[32m  eval_mcc = 0.6609[0m
[32m  eval_precision = 0.4902[0m
[32m  eval_recall = 0.3645[0m
[32m  ********************[0m
[32m  Best f1:0.3931[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.14966:  50%|█████     | 14/28 [00:47<00:43,  3.14s/it]epoch 4 loss 1.14467:  50%|█████     | 14/28 [00:47<00:43,  3.14s/it]epoch 4 loss 1.14467:  54%|█████▎    | 15/28 [00:47<00:30,  2.32s/it]epoch 4 loss 1.13985:  54%|█████▎    | 15/28 [00:48<00:30,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6791[0m
[32m  eval_f1 = 0.3932[0m
[32m  eval_mcc = 0.6608[0m
[32m  eval_precision = 0.4906[0m
[32m  eval_recall = 0.3645[0m
[32m  ********************[0m
[32m  Best f1:0.3932[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.13985:  57%|█████▋    | 16/28 [00:52<00:37,  3.11s/it]epoch 4 loss 1.13823:  57%|█████▋    | 16/28 [00:53<00:37,  3.11s/it]epoch 4 loss 1.13823:  61%|██████    | 17/28 [00:53<00:25,  2.29s/it]epoch 4 loss 1.13656:  61%|██████    | 17/28 [00:53<00:25,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6791[0m
[32m  eval_f1 = 0.3927[0m
[32m  eval_mcc = 0.6608[0m
[32m  eval_precision = 0.4905[0m
[32m  eval_recall = 0.3641[0m

epoch 4 loss 1.13656:  64%|██████▍   | 18/28 [00:56<00:27,  2.75s/it]epoch 4 loss 1.13928:  64%|██████▍   | 18/28 [00:57<00:27,  2.75s/it]epoch 4 loss 1.13928:  68%|██████▊   | 19/28 [00:57<00:18,  2.04s/it]epoch 4 loss 1.13937:  68%|██████▊   | 19/28 [00:57<00:18,  2.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6791[0m
[32m  eval_f1 = 0.392[0m
[32m  eval_mcc = 0.6608[0m
[32m  eval_precision = 0.4902[0m
[32m  eval_recall = 0.3636[0m

epoch 4 loss 1.13937:  71%|███████▏  | 20/28 [01:01<00:20,  2.57s/it]epoch 4 loss 1.13601:  71%|███████▏  | 20/28 [01:01<00:20,  2.57s/it]epoch 4 loss 1.13601:  75%|███████▌  | 21/28 [01:01<00:13,  1.92s/it]epoch 4 loss 1.13694:  75%|███████▌  | 21/28 [01:01<00:13,  1.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6788[0m
[32m  eval_f1 = 0.3918[0m
[32m  eval_mcc = 0.6605[0m
[32m  eval_precision = 0.4901[0m
[32m  eval_recall = 0.3634[0m

epoch 4 loss 1.13694:  79%|███████▊  | 22/28 [01:05<00:14,  2.48s/it]epoch 4 loss 1.13622:  79%|███████▊  | 22/28 [01:05<00:14,  2.48s/it]epoch 4 loss 1.13622:  82%|████████▏ | 23/28 [01:05<00:09,  1.86s/it]epoch 4 loss 1.13248:  82%|████████▏ | 23/28 [01:06<00:09,  1.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6793[0m
[32m  eval_f1 = 0.392[0m
[32m  eval_mcc = 0.6611[0m
[32m  eval_precision = 0.4909[0m
[32m  eval_recall = 0.3635[0m

epoch 4 loss 1.13248:  86%|████████▌ | 24/28 [01:09<00:09,  2.44s/it]epoch 4 loss 1.13694:  86%|████████▌ | 24/28 [01:09<00:09,  2.44s/it]epoch 4 loss 1.13694:  89%|████████▉ | 25/28 [01:09<00:05,  1.83s/it]epoch 4 loss 1.13769:  89%|████████▉ | 25/28 [01:10<00:05,  1.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6793[0m
[32m  eval_f1 = 0.3922[0m
[32m  eval_mcc = 0.6611[0m
[32m  eval_precision = 0.4911[0m
[32m  eval_recall = 0.3636[0m

epoch 4 loss 1.13769:  93%|█████████▎| 26/28 [01:13<00:04,  2.42s/it]epoch 4 loss 1.13672:  93%|█████████▎| 26/28 [01:14<00:04,  2.42s/it]epoch 4 loss 1.13672:  96%|█████████▋| 27/28 [01:14<00:01,  1.82s/it]epoch 4 loss 1.14315:  96%|█████████▋| 27/28 [01:14<00:01,  1.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6794[0m
[32m  eval_f1 = 0.3922[0m
[32m  eval_mcc = 0.6612[0m
[32m  eval_precision = 0.4911[0m
[32m  eval_recall = 0.3636[0m

epoch 4 loss 1.14315: 100%|██████████| 28/28 [01:17<00:00,  2.36s/it]epoch 4 loss 1.14315: 100%|██████████| 28/28 [01:17<00:00,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6791[0m
[32m  eval_f1 = 0.3932[0m
[32m  eval_mcc = 0.6608[0m
[32m  eval_precision = 0.4906[0m
[32m  eval_recall = 0.3645[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s]100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6578[0m
[32m  eval_f1 = 0.3136[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.3955[0m
[32m  eval_recall = 0.2957[0m

