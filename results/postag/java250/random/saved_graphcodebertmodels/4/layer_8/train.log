[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.70595:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.70595:   4%|▎         | 1/28 [00:00<00:20,  1.29it/s]epoch 0 loss 5.70783:   4%|▎         | 1/28 [00:01<00:20,  1.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0058[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = 0.0022[0m
[32m  eval_precision = 0.0012[0m
[32m  eval_recall = 0.0022[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.70783:   7%|▋         | 2/28 [00:06<01:31,  3.52s/it]epoch 0 loss 5.69697:   7%|▋         | 2/28 [00:06<01:31,  3.52s/it]epoch 0 loss 5.69697:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 0 loss 5.68462:  11%|█         | 3/28 [00:07<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0101[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = 0.0037[0m
[32m  eval_precision = 0.0011[0m
[32m  eval_recall = 0.0032[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.68462:  14%|█▍        | 4/28 [00:16<02:06,  5.27s/it]epoch 0 loss 5.65944:  14%|█▍        | 4/28 [00:17<02:06,  5.27s/it]epoch 0 loss 5.65944:  18%|█▊        | 5/28 [00:17<01:21,  3.52s/it]epoch 0 loss 5.6272:  18%|█▊        | 5/28 [00:17<01:21,  3.52s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0214[0m
[32m  eval_f1 = 0.0018[0m
[32m  eval_mcc = 0.0072[0m
[32m  eval_precision = 0.002[0m
[32m  eval_recall = 0.005[0m
[32m  ********************[0m
[32m  Best f1:0.0018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.6272:  21%|██▏       | 6/28 [00:27<02:07,  5.78s/it]epoch 0 loss 5.59058:  21%|██▏       | 6/28 [00:27<02:07,  5.78s/it]epoch 0 loss 5.59058:  25%|██▌       | 7/28 [00:27<01:24,  4.03s/it]epoch 0 loss 5.54226:  25%|██▌       | 7/28 [00:28<01:24,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0336[0m
[32m  eval_f1 = 0.003[0m
[32m  eval_mcc = 0.0089[0m
[32m  eval_precision = 0.0058[0m
[32m  eval_recall = 0.0082[0m
[32m  ********************[0m
[32m  Best f1:0.003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.54226:  29%|██▊       | 8/28 [00:37<01:58,  5.90s/it]epoch 0 loss 5.49064:  29%|██▊       | 8/28 [00:38<01:58,  5.90s/it]epoch 0 loss 5.49064:  32%|███▏      | 9/28 [00:38<01:19,  4.19s/it]epoch 0 loss 5.43301:  32%|███▏      | 9/28 [00:38<01:19,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0467[0m
[32m  eval_f1 = 0.0052[0m
[32m  eval_mcc = 0.0162[0m
[32m  eval_precision = 0.0126[0m
[32m  eval_recall = 0.0124[0m
[32m  ********************[0m
[32m  Best f1:0.0052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.43301:  36%|███▌      | 10/28 [00:45<01:35,  5.30s/it]epoch 0 loss 5.37014:  36%|███▌      | 10/28 [00:46<01:35,  5.30s/it]epoch 0 loss 5.37014:  39%|███▉      | 11/28 [00:46<01:04,  3.81s/it]epoch 0 loss 5.30075:  39%|███▉      | 11/28 [00:46<01:04,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0613[0m
[32m  eval_f1 = 0.0079[0m
[32m  eval_mcc = 0.0279[0m
[32m  eval_precision = 0.0251[0m
[32m  eval_recall = 0.0156[0m
[32m  ********************[0m
[32m  Best f1:0.0079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.30075:  43%|████▎     | 12/28 [00:53<01:15,  4.74s/it]epoch 0 loss 5.22957:  43%|████▎     | 12/28 [00:53<01:15,  4.74s/it]epoch 0 loss 5.22957:  46%|████▋     | 13/28 [00:53<00:51,  3.43s/it]epoch 0 loss 5.15612:  46%|████▋     | 13/28 [00:54<00:51,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0918[0m
[32m  eval_f1 = 0.0161[0m
[32m  eval_mcc = 0.0523[0m
[32m  eval_precision = 0.0274[0m
[32m  eval_recall = 0.0233[0m
[32m  ********************[0m
[32m  Best f1:0.0161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15612:  50%|█████     | 14/28 [01:00<01:02,  4.48s/it]epoch 0 loss 5.08121:  50%|█████     | 14/28 [01:00<01:02,  4.48s/it]epoch 0 loss 5.08121:  54%|█████▎    | 15/28 [01:00<00:42,  3.25s/it]epoch 0 loss 5.00371:  54%|█████▎    | 15/28 [01:01<00:42,  3.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1312[0m
[32m  eval_f1 = 0.023[0m
[32m  eval_mcc = 0.0806[0m
[32m  eval_precision = 0.041[0m
[32m  eval_recall = 0.0278[0m
[32m  ********************[0m
[32m  Best f1:0.023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0806[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.00371:  57%|█████▋    | 16/28 [01:10<01:02,  5.23s/it]epoch 0 loss 4.92717:  57%|█████▋    | 16/28 [01:11<01:02,  5.23s/it]epoch 0 loss 4.92717:  61%|██████    | 17/28 [01:11<00:41,  3.78s/it]epoch 0 loss 4.8512:  61%|██████    | 17/28 [01:11<00:41,  3.78s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1852[0m
[32m  eval_f1 = 0.0314[0m
[32m  eval_mcc = 0.1232[0m
[32m  eval_precision = 0.0532[0m
[32m  eval_recall = 0.0325[0m
[32m  ********************[0m
[32m  Best f1:0.0314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.8512:  64%|██████▍   | 18/28 [01:19<00:50,  5.02s/it]epoch 0 loss 4.77292:  64%|██████▍   | 18/28 [01:19<00:50,  5.02s/it]epoch 0 loss 4.77292:  68%|██████▊   | 19/28 [01:19<00:32,  3.64s/it]epoch 0 loss 4.6994:  68%|██████▊   | 19/28 [01:19<00:32,  3.64s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2469[0m
[32m  eval_f1 = 0.0346[0m
[32m  eval_mcc = 0.186[0m
[32m  eval_precision = 0.0655[0m
[32m  eval_recall = 0.0355[0m
[32m  ********************[0m
[32m  Best f1:0.0346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.6994:  71%|███████▏  | 20/28 [01:29<00:44,  5.54s/it]epoch 0 loss 4.6296:  71%|███████▏  | 20/28 [01:29<00:44,  5.54s/it]epoch 0 loss 4.6296:  75%|███████▌  | 21/28 [01:29<00:28,  4.00s/it]epoch 0 loss 4.56332:  75%|███████▌  | 21/28 [01:30<00:28,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.279[0m
[32m  eval_f1 = 0.0354[0m
[32m  eval_mcc = 0.2218[0m
[32m  eval_precision = 0.0626[0m
[32m  eval_recall = 0.0383[0m
[32m  ********************[0m
[32m  Best f1:0.0354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.56332:  79%|███████▊  | 22/28 [01:38<00:31,  5.25s/it]epoch 0 loss 4.492:  79%|███████▊  | 22/28 [01:38<00:31,  5.25s/it]  epoch 0 loss 4.492:  82%|████████▏ | 23/28 [01:38<00:18,  3.80s/it]epoch 0 loss 4.42809:  82%|████████▏ | 23/28 [01:38<00:18,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3199[0m
[32m  eval_f1 = 0.0395[0m
[32m  eval_mcc = 0.2681[0m
[32m  eval_precision = 0.0574[0m
[32m  eval_recall = 0.044[0m
[32m  ********************[0m
[32m  Best f1:0.0395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2681[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.42809:  86%|████████▌ | 24/28 [01:48<00:22,  5.61s/it]epoch 0 loss 4.36559:  86%|████████▌ | 24/28 [01:48<00:22,  5.61s/it]epoch 0 loss 4.36559:  89%|████████▉ | 25/28 [01:48<00:12,  4.05s/it]epoch 0 loss 4.30249:  89%|████████▉ | 25/28 [01:49<00:12,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.351[0m
[32m  eval_f1 = 0.0604[0m
[32m  eval_mcc = 0.3048[0m
[32m  eval_precision = 0.0888[0m
[32m  eval_recall = 0.0632[0m
[32m  ********************[0m
[32m  Best f1:0.0604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.30249:  93%|█████████▎| 26/28 [01:56<00:10,  5.30s/it]epoch 0 loss 4.24363:  93%|█████████▎| 26/28 [01:57<00:10,  5.30s/it]epoch 0 loss 4.24363:  96%|█████████▋| 27/28 [01:57<00:03,  3.84s/it]epoch 0 loss 4.18143:  96%|█████████▋| 27/28 [01:57<00:03,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4044[0m
[32m  eval_f1 = 0.1002[0m
[32m  eval_mcc = 0.3665[0m
[32m  eval_precision = 0.1693[0m
[32m  eval_recall = 0.0929[0m
[32m  ********************[0m
[32m  Best f1:0.1002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.18143: 100%|██████████| 28/28 [02:07<00:00,  5.75s/it]epoch 0 loss 4.18143: 100%|██████████| 28/28 [02:07<00:00,  4.56s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.54314:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.54314:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.53584:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4723[0m
[32m  eval_f1 = 0.131[0m
[32m  eval_mcc = 0.4404[0m
[32m  eval_precision = 0.183[0m
[32m  eval_recall = 0.1229[0m
[32m  ********************[0m
[32m  Best f1:0.131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.53584:   7%|▋         | 2/28 [00:07<01:49,  4.23s/it]epoch 1 loss 2.50997:   7%|▋         | 2/28 [00:07<01:49,  4.23s/it]epoch 1 loss 2.50997:  11%|█         | 3/28 [00:07<01:02,  2.49s/it]epoch 1 loss 2.49412:  11%|█         | 3/28 [00:08<01:02,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5203[0m
[32m  eval_f1 = 0.1559[0m
[32m  eval_mcc = 0.4901[0m
[32m  eval_precision = 0.201[0m
[32m  eval_recall = 0.1481[0m
[32m  ********************[0m
[32m  Best f1:0.1559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4901[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.49412:  14%|█▍        | 4/28 [00:18<02:19,  5.82s/it]epoch 1 loss 2.43653:  14%|█▍        | 4/28 [00:19<02:19,  5.82s/it]epoch 1 loss 2.43653:  18%|█▊        | 5/28 [00:19<01:29,  3.87s/it]epoch 1 loss 2.3811:  18%|█▊        | 5/28 [00:19<01:29,  3.87s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5413[0m
[32m  eval_f1 = 0.1638[0m
[32m  eval_mcc = 0.5123[0m
[32m  eval_precision = 0.1955[0m
[32m  eval_recall = 0.1585[0m
[32m  ********************[0m
[32m  Best f1:0.1638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.3811:  21%|██▏       | 6/28 [00:29<02:17,  6.24s/it]epoch 1 loss 2.35162:  21%|██▏       | 6/28 [00:30<02:17,  6.24s/it]epoch 1 loss 2.35162:  25%|██▌       | 7/28 [00:30<01:31,  4.34s/it]epoch 1 loss 2.30249:  25%|██▌       | 7/28 [00:30<01:31,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5494[0m
[32m  eval_f1 = 0.1675[0m
[32m  eval_mcc = 0.5237[0m
[32m  eval_precision = 0.1991[0m
[32m  eval_recall = 0.1612[0m
[32m  ********************[0m
[32m  Best f1:0.1675[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.30249:  29%|██▊       | 8/28 [00:41<02:08,  6.42s/it]epoch 1 loss 2.25879:  29%|██▊       | 8/28 [00:41<02:08,  6.42s/it]epoch 1 loss 2.25879:  32%|███▏      | 9/28 [00:41<01:26,  4.54s/it]epoch 1 loss 2.23785:  32%|███▏      | 9/28 [00:42<01:26,  4.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5604[0m
[32m  eval_f1 = 0.1724[0m
[32m  eval_mcc = 0.5374[0m
[32m  eval_precision = 0.2096[0m
[32m  eval_recall = 0.1637[0m
[32m  ********************[0m
[32m  Best f1:0.1724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23785:  36%|███▌      | 10/28 [00:52<01:55,  6.40s/it]epoch 1 loss 2.21475:  36%|███▌      | 10/28 [00:52<01:55,  6.40s/it]epoch 1 loss 2.21475:  39%|███▉      | 11/28 [00:52<01:17,  4.57s/it]epoch 1 loss 2.19748:  39%|███▉      | 11/28 [00:53<01:17,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5599[0m
[32m  eval_f1 = 0.1715[0m
[32m  eval_mcc = 0.536[0m
[32m  eval_precision = 0.2316[0m
[32m  eval_recall = 0.1619[0m

epoch 1 loss 2.19748:  43%|████▎     | 12/28 [00:56<01:09,  4.33s/it]epoch 1 loss 2.16839:  43%|████▎     | 12/28 [00:56<01:09,  4.33s/it]epoch 1 loss 2.16839:  46%|████▋     | 13/28 [00:56<00:47,  3.14s/it]epoch 1 loss 2.15075:  46%|████▋     | 13/28 [00:57<00:47,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5648[0m
[32m  eval_f1 = 0.1743[0m
[32m  eval_mcc = 0.5402[0m
[32m  eval_precision = 0.2273[0m
[32m  eval_recall = 0.1637[0m
[32m  ********************[0m
[32m  Best f1:0.1743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15075:  50%|█████     | 14/28 [01:06<01:10,  5.04s/it]epoch 1 loss 2.14134:  50%|█████     | 14/28 [01:06<01:10,  5.04s/it]epoch 1 loss 2.14134:  54%|█████▎    | 15/28 [01:06<00:47,  3.65s/it]epoch 1 loss 2.12322:  54%|█████▎    | 15/28 [01:07<00:47,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5721[0m
[32m  eval_f1 = 0.1843[0m
[32m  eval_mcc = 0.5469[0m
[32m  eval_precision = 0.2515[0m
[32m  eval_recall = 0.1717[0m
[32m  ********************[0m
[32m  Best f1:0.1843[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12322:  57%|█████▋    | 16/28 [01:16<01:06,  5.56s/it]epoch 1 loss 2.10178:  57%|█████▋    | 16/28 [01:17<01:06,  5.56s/it]epoch 1 loss 2.10178:  61%|██████    | 17/28 [01:17<00:44,  4.01s/it]epoch 1 loss 2.08541:  61%|██████    | 17/28 [01:17<00:44,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5811[0m
[32m  eval_f1 = 0.1971[0m
[32m  eval_mcc = 0.5561[0m
[32m  eval_precision = 0.3084[0m
[32m  eval_recall = 0.183[0m
[32m  ********************[0m
[32m  Best f1:0.1971[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08541:  64%|██████▍   | 18/28 [01:28<01:01,  6.13s/it]epoch 1 loss 2.06185:  64%|██████▍   | 18/28 [01:28<01:01,  6.13s/it]epoch 1 loss 2.06185:  68%|██████▊   | 19/28 [01:28<00:39,  4.41s/it]epoch 1 loss 2.0468:  68%|██████▊   | 19/28 [01:28<00:39,  4.41s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5871[0m
[32m  eval_f1 = 0.2142[0m
[32m  eval_mcc = 0.5624[0m
[32m  eval_precision = 0.3203[0m
[32m  eval_recall = 0.1985[0m
[32m  ********************[0m
[32m  Best f1:0.2142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0468:  71%|███████▏  | 20/28 [01:38<00:49,  6.22s/it]epoch 1 loss 2.03019:  71%|███████▏  | 20/28 [01:39<00:49,  6.22s/it]epoch 1 loss 2.03019:  75%|███████▌  | 21/28 [01:39<00:31,  4.48s/it]epoch 1 loss 2.02268:  75%|███████▌  | 21/28 [01:39<00:31,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5906[0m
[32m  eval_f1 = 0.2271[0m
[32m  eval_mcc = 0.5663[0m
[32m  eval_precision = 0.3376[0m
[32m  eval_recall = 0.2106[0m
[32m  ********************[0m
[32m  Best f1:0.2271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5663[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02268:  79%|███████▊  | 22/28 [01:50<00:39,  6.61s/it]epoch 1 loss 2.00538:  79%|███████▊  | 22/28 [01:51<00:39,  6.61s/it]epoch 1 loss 2.00538:  82%|████████▏ | 23/28 [01:51<00:23,  4.75s/it]epoch 1 loss 1.9907:  82%|████████▏ | 23/28 [01:51<00:23,  4.75s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5941[0m
[32m  eval_f1 = 0.2327[0m
[32m  eval_mcc = 0.5704[0m
[32m  eval_precision = 0.344[0m
[32m  eval_recall = 0.2154[0m
[32m  ********************[0m
[32m  Best f1:0.2327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9907:  86%|████████▌ | 24/28 [02:01<00:25,  6.36s/it]epoch 1 loss 1.98007:  86%|████████▌ | 24/28 [02:01<00:25,  6.36s/it]epoch 1 loss 1.98007:  89%|████████▉ | 25/28 [02:01<00:13,  4.58s/it]epoch 1 loss 1.9606:  89%|████████▉ | 25/28 [02:02<00:13,  4.58s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5998[0m
[32m  eval_f1 = 0.2372[0m
[32m  eval_mcc = 0.5778[0m
[32m  eval_precision = 0.3426[0m
[32m  eval_recall = 0.22[0m
[32m  ********************[0m
[32m  Best f1:0.2372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5778[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9606:  93%|█████████▎| 26/28 [02:13<00:13,  6.57s/it]epoch 1 loss 1.9526:  93%|█████████▎| 26/28 [02:13<00:13,  6.57s/it]epoch 1 loss 1.9526:  96%|█████████▋| 27/28 [02:13<00:04,  4.72s/it]epoch 1 loss 1.93623:  96%|█████████▋| 27/28 [02:13<00:04,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.604[0m
[32m  eval_f1 = 0.243[0m
[32m  eval_mcc = 0.5841[0m
[32m  eval_precision = 0.344[0m
[32m  eval_recall = 0.2245[0m
[32m  ********************[0m
[32m  Best f1:0.243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5841[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93623: 100%|██████████| 28/28 [02:24<00:00,  6.52s/it]epoch 1 loss 1.93623: 100%|██████████| 28/28 [02:24<00:00,  5.15s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.5477:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.5477:   4%|▎         | 1/28 [00:00<00:11,  2.43it/s]epoch 2 loss 1.59619:   4%|▎         | 1/28 [00:00<00:11,  2.43it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6074[0m
[32m  eval_f1 = 0.2469[0m
[32m  eval_mcc = 0.5886[0m
[32m  eval_precision = 0.3476[0m
[32m  eval_recall = 0.2281[0m
[32m  ********************[0m
[32m  Best f1:0.2469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5886[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59619:   7%|▋         | 2/28 [00:11<02:52,  6.63s/it]epoch 2 loss 1.6181:   7%|▋         | 2/28 [00:11<02:52,  6.63s/it] epoch 2 loss 1.6181:  11%|█         | 3/28 [00:11<01:34,  3.79s/it]epoch 2 loss 1.58907:  11%|█         | 3/28 [00:12<01:34,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6101[0m
[32m  eval_f1 = 0.253[0m
[32m  eval_mcc = 0.5909[0m
[32m  eval_precision = 0.3434[0m
[32m  eval_recall = 0.2344[0m
[32m  ********************[0m
[32m  Best f1:0.253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58907:  14%|█▍        | 4/28 [00:21<02:29,  6.22s/it]epoch 2 loss 1.58862:  14%|█▍        | 4/28 [00:22<02:29,  6.22s/it]epoch 2 loss 1.58862:  18%|█▊        | 5/28 [00:22<01:34,  4.12s/it]epoch 2 loss 1.59094:  18%|█▊        | 5/28 [00:22<01:34,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6147[0m
[32m  eval_f1 = 0.2604[0m
[32m  eval_mcc = 0.5952[0m
[32m  eval_precision = 0.3578[0m
[32m  eval_recall = 0.2409[0m
[32m  ********************[0m
[32m  Best f1:0.2604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59094:  21%|██▏       | 6/28 [00:33<02:24,  6.56s/it]epoch 2 loss 1.57747:  21%|██▏       | 6/28 [00:33<02:24,  6.56s/it]epoch 2 loss 1.57747:  25%|██▌       | 7/28 [00:33<01:35,  4.55s/it]epoch 2 loss 1.56619:  25%|██▌       | 7/28 [00:34<01:35,  4.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6165[0m
[32m  eval_f1 = 0.2662[0m
[32m  eval_mcc = 0.5954[0m
[32m  eval_precision = 0.3708[0m
[32m  eval_recall = 0.2463[0m
[32m  ********************[0m
[32m  Best f1:0.2662[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5954[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56619:  29%|██▊       | 8/28 [00:44<02:11,  6.59s/it]epoch 2 loss 1.56614:  29%|██▊       | 8/28 [00:45<02:11,  6.59s/it]epoch 2 loss 1.56614:  32%|███▏      | 9/28 [00:45<01:28,  4.66s/it]epoch 2 loss 1.5634:  32%|███▏      | 9/28 [00:45<01:28,  4.66s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6176[0m
[32m  eval_f1 = 0.2658[0m
[32m  eval_mcc = 0.5955[0m
[32m  eval_precision = 0.3615[0m
[32m  eval_recall = 0.2468[0m
[32m  ********************[0m
[32m  Best MCC:0.5955[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5634:  36%|███▌      | 10/28 [00:53<01:43,  5.74s/it]epoch 2 loss 1.55978:  36%|███▌      | 10/28 [00:53<01:43,  5.74s/it]epoch 2 loss 1.55978:  39%|███▉      | 11/28 [00:53<01:09,  4.11s/it]epoch 2 loss 1.55806:  39%|███▉      | 11/28 [00:54<01:09,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6207[0m
[32m  eval_f1 = 0.2689[0m
[32m  eval_mcc = 0.5985[0m
[32m  eval_precision = 0.3783[0m
[32m  eval_recall = 0.25[0m
[32m  ********************[0m
[32m  Best f1:0.2689[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5985[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55806:  43%|████▎     | 12/28 [01:04<01:40,  6.25s/it]epoch 2 loss 1.55604:  43%|████▎     | 12/28 [01:05<01:40,  6.25s/it]epoch 2 loss 1.55604:  46%|████▋     | 13/28 [01:05<01:07,  4.48s/it]epoch 2 loss 1.55276:  46%|████▋     | 13/28 [01:05<01:07,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6234[0m
[32m  eval_f1 = 0.273[0m
[32m  eval_mcc = 0.6013[0m
[32m  eval_precision = 0.385[0m
[32m  eval_recall = 0.2537[0m
[32m  ********************[0m
[32m  Best f1:0.273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55276:  50%|█████     | 14/28 [01:12<01:15,  5.37s/it]epoch 2 loss 1.54805:  50%|█████     | 14/28 [01:13<01:15,  5.37s/it]epoch 2 loss 1.54805:  54%|█████▎    | 15/28 [01:13<00:50,  3.88s/it]epoch 2 loss 1.53552:  54%|█████▎    | 15/28 [01:13<00:50,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6261[0m
[32m  eval_f1 = 0.2777[0m
[32m  eval_mcc = 0.6043[0m
[32m  eval_precision = 0.3832[0m
[32m  eval_recall = 0.2575[0m
[32m  ********************[0m
[32m  Best f1:0.2777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53552:  57%|█████▋    | 16/28 [01:19<00:55,  4.65s/it]epoch 2 loss 1.53001:  57%|█████▋    | 16/28 [01:20<00:55,  4.65s/it]epoch 2 loss 1.53001:  61%|██████    | 17/28 [01:20<00:37,  3.38s/it]epoch 2 loss 1.52855:  61%|██████    | 17/28 [01:20<00:37,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.628[0m
[32m  eval_f1 = 0.2811[0m
[32m  eval_mcc = 0.6068[0m
[32m  eval_precision = 0.3932[0m
[32m  eval_recall = 0.2599[0m
[32m  ********************[0m
[32m  Best f1:0.2811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52855:  64%|██████▍   | 18/28 [01:25<00:40,  4.09s/it]epoch 2 loss 1.52936:  64%|██████▍   | 18/28 [01:26<00:40,  4.09s/it]epoch 2 loss 1.52936:  68%|██████▊   | 19/28 [01:26<00:26,  2.99s/it]epoch 2 loss 1.5261:  68%|██████▊   | 19/28 [01:26<00:26,  2.99s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6294[0m
[32m  eval_f1 = 0.2802[0m
[32m  eval_mcc = 0.6098[0m
[32m  eval_precision = 0.3874[0m
[32m  eval_recall = 0.2597[0m
[32m  ********************[0m
[32m  Best MCC:0.6098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5261:  71%|███████▏  | 20/28 [01:31<00:28,  3.60s/it]epoch 2 loss 1.51156:  71%|███████▏  | 20/28 [01:31<00:28,  3.60s/it]epoch 2 loss 1.51156:  75%|███████▌  | 21/28 [01:31<00:18,  2.64s/it]epoch 2 loss 1.50605:  75%|███████▌  | 21/28 [01:32<00:18,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6295[0m
[32m  eval_f1 = 0.2792[0m
[32m  eval_mcc = 0.6118[0m
[32m  eval_precision = 0.3732[0m
[32m  eval_recall = 0.2589[0m
[32m  ********************[0m
[32m  Best MCC:0.6118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50605:  79%|███████▊  | 22/28 [01:36<00:20,  3.36s/it]epoch 2 loss 1.50017:  79%|███████▊  | 22/28 [01:37<00:20,  3.36s/it]epoch 2 loss 1.50017:  82%|████████▏ | 23/28 [01:37<00:12,  2.47s/it]epoch 2 loss 1.50464:  82%|████████▏ | 23/28 [01:37<00:12,  2.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6306[0m
[32m  eval_f1 = 0.283[0m
[32m  eval_mcc = 0.6124[0m
[32m  eval_precision = 0.3731[0m
[32m  eval_recall = 0.2624[0m
[32m  ********************[0m
[32m  Best f1:0.283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6124[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50464:  86%|████████▌ | 24/28 [01:43<00:14,  3.66s/it]epoch 2 loss 1.49692:  86%|████████▌ | 24/28 [01:43<00:14,  3.66s/it]epoch 2 loss 1.49692:  89%|████████▉ | 25/28 [01:43<00:08,  2.69s/it]epoch 2 loss 1.49327:  89%|████████▉ | 25/28 [01:44<00:08,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6315[0m
[32m  eval_f1 = 0.2847[0m
[32m  eval_mcc = 0.6115[0m
[32m  eval_precision = 0.3768[0m
[32m  eval_recall = 0.2642[0m
[32m  ********************[0m
[32m  Best f1:0.2847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.49327:  93%|█████████▎| 26/28 [01:49<00:06,  3.42s/it]epoch 2 loss 1.49728:  93%|█████████▎| 26/28 [01:49<00:06,  3.42s/it]epoch 2 loss 1.49728:  96%|█████████▋| 27/28 [01:49<00:02,  2.52s/it]epoch 2 loss 1.49262:  96%|█████████▋| 27/28 [01:49<00:02,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6343[0m
[32m  eval_f1 = 0.2895[0m
[32m  eval_mcc = 0.613[0m
[32m  eval_precision = 0.4006[0m
[32m  eval_recall = 0.2681[0m
[32m  ********************[0m
[32m  Best f1:0.2895[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49262: 100%|██████████| 28/28 [01:58<00:00,  4.52s/it]epoch 2 loss 1.49262: 100%|██████████| 28/28 [01:58<00:00,  4.24s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.264:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.264:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 3 loss 1.30556:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6353[0m
[32m  eval_f1 = 0.292[0m
[32m  eval_mcc = 0.6137[0m
[32m  eval_precision = 0.4015[0m
[32m  eval_recall = 0.27[0m
[32m  ********************[0m
[32m  Best f1:0.292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30556:   7%|▋         | 2/28 [00:12<03:12,  7.40s/it]epoch 3 loss 1.30868:   7%|▋         | 2/28 [00:13<03:12,  7.40s/it]epoch 3 loss 1.30868:  11%|█         | 3/28 [00:13<01:45,  4.21s/it]epoch 3 loss 1.3265:  11%|█         | 3/28 [00:13<01:45,  4.21s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6369[0m
[32m  eval_f1 = 0.2986[0m
[32m  eval_mcc = 0.6153[0m
[32m  eval_precision = 0.4111[0m
[32m  eval_recall = 0.2753[0m
[32m  ********************[0m
[32m  Best f1:0.2986[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3265:  14%|█▍        | 4/28 [00:24<02:46,  6.92s/it]epoch 3 loss 1.35436:  14%|█▍        | 4/28 [00:24<02:46,  6.92s/it]epoch 3 loss 1.35436:  18%|█▊        | 5/28 [00:24<01:45,  4.57s/it]epoch 3 loss 1.36048:  18%|█▊        | 5/28 [00:25<01:45,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6387[0m
[32m  eval_f1 = 0.3004[0m
[32m  eval_mcc = 0.6174[0m
[32m  eval_precision = 0.4231[0m
[32m  eval_recall = 0.2768[0m
[32m  ********************[0m
[32m  Best f1:0.3004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6174[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36048:  21%|██▏       | 6/28 [00:34<02:24,  6.55s/it]epoch 3 loss 1.35037:  21%|██▏       | 6/28 [00:35<02:24,  6.55s/it]epoch 3 loss 1.35037:  25%|██▌       | 7/28 [00:35<01:35,  4.55s/it]epoch 3 loss 1.3387:  25%|██▌       | 7/28 [00:35<01:35,  4.55s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6399[0m
[32m  eval_f1 = 0.3033[0m
[32m  eval_mcc = 0.6189[0m
[32m  eval_precision = 0.4254[0m
[32m  eval_recall = 0.2789[0m
[32m  ********************[0m
[32m  Best f1:0.3033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3387:  29%|██▊       | 8/28 [00:44<02:00,  6.05s/it]epoch 3 loss 1.35842:  29%|██▊       | 8/28 [00:45<02:00,  6.05s/it]epoch 3 loss 1.35842:  32%|███▏      | 9/28 [00:45<01:21,  4.29s/it]epoch 3 loss 1.3683:  32%|███▏      | 9/28 [00:45<01:21,  4.29s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6417[0m
[32m  eval_f1 = 0.308[0m
[32m  eval_mcc = 0.6214[0m
[32m  eval_precision = 0.4287[0m
[32m  eval_recall = 0.283[0m
[32m  ********************[0m
[32m  Best f1:0.308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3683:  36%|███▌      | 10/28 [00:56<01:54,  6.39s/it]epoch 3 loss 1.38375:  36%|███▌      | 10/28 [00:56<01:54,  6.39s/it]epoch 3 loss 1.38375:  39%|███▉      | 11/28 [00:56<01:17,  4.57s/it]epoch 3 loss 1.40013:  39%|███▉      | 11/28 [00:57<01:17,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6431[0m
[32m  eval_f1 = 0.3105[0m
[32m  eval_mcc = 0.6234[0m
[32m  eval_precision = 0.4256[0m
[32m  eval_recall = 0.2866[0m
[32m  ********************[0m
[32m  Best f1:0.3105[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40013:  43%|████▎     | 12/28 [01:07<01:41,  6.34s/it]epoch 3 loss 1.39921:  43%|████▎     | 12/28 [01:07<01:41,  6.34s/it]epoch 3 loss 1.39921:  46%|████▋     | 13/28 [01:07<01:08,  4.54s/it]epoch 3 loss 1.39448:  46%|████▋     | 13/28 [01:07<01:08,  4.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6434[0m
[32m  eval_f1 = 0.3126[0m
[32m  eval_mcc = 0.6243[0m
[32m  eval_precision = 0.433[0m
[32m  eval_recall = 0.2884[0m
[32m  ********************[0m
[32m  Best f1:0.3126[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39448:  50%|█████     | 14/28 [01:16<01:23,  5.98s/it]epoch 3 loss 1.39309:  50%|█████     | 14/28 [01:17<01:23,  5.98s/it]epoch 3 loss 1.39309:  54%|█████▎    | 15/28 [01:17<00:55,  4.30s/it]epoch 3 loss 1.38841:  54%|█████▎    | 15/28 [01:17<00:55,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6445[0m
[32m  eval_f1 = 0.3188[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4374[0m
[32m  eval_recall = 0.2928[0m
[32m  ********************[0m
[32m  Best f1:0.3188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38841:  57%|█████▋    | 16/28 [01:27<01:14,  6.23s/it]epoch 3 loss 1.38842:  57%|█████▋    | 16/28 [01:28<01:14,  6.23s/it]epoch 3 loss 1.38842:  61%|██████    | 17/28 [01:28<00:49,  4.49s/it]epoch 3 loss 1.39263:  61%|██████    | 17/28 [01:28<00:49,  4.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6442[0m
[32m  eval_f1 = 0.316[0m
[32m  eval_mcc = 0.6251[0m
[32m  eval_precision = 0.428[0m
[32m  eval_recall = 0.2908[0m

epoch 3 loss 1.39263:  64%|██████▍   | 18/28 [01:32<00:42,  4.27s/it]epoch 3 loss 1.39464:  64%|██████▍   | 18/28 [01:32<00:42,  4.27s/it]epoch 3 loss 1.39464:  68%|██████▊   | 19/28 [01:32<00:27,  3.11s/it]epoch 3 loss 1.39262:  68%|██████▊   | 19/28 [01:32<00:27,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6456[0m
[32m  eval_f1 = 0.3207[0m
[32m  eval_mcc = 0.6264[0m
[32m  eval_precision = 0.4316[0m
[32m  eval_recall = 0.2973[0m
[32m  ********************[0m
[32m  Best f1:0.3207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39262:  71%|███████▏  | 20/28 [01:42<00:41,  5.19s/it]epoch 3 loss 1.38895:  71%|███████▏  | 20/28 [01:42<00:41,  5.19s/it]epoch 3 loss 1.38895:  75%|███████▌  | 21/28 [01:42<00:26,  3.76s/it]epoch 3 loss 1.38399:  75%|███████▌  | 21/28 [01:43<00:26,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.645[0m
[32m  eval_f1 = 0.3218[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4314[0m
[32m  eval_recall = 0.2988[0m
[32m  ********************[0m
[32m  Best f1:0.3218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.38399:  79%|███████▊  | 22/28 [01:48<00:26,  4.38s/it]epoch 3 loss 1.38001:  79%|███████▊  | 22/28 [01:49<00:26,  4.38s/it]epoch 3 loss 1.38001:  82%|████████▏ | 23/28 [01:49<00:15,  3.19s/it]epoch 3 loss 1.37964:  82%|████████▏ | 23/28 [01:49<00:15,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6451[0m
[32m  eval_f1 = 0.3225[0m
[32m  eval_mcc = 0.6254[0m
[32m  eval_precision = 0.4322[0m
[32m  eval_recall = 0.2994[0m
[32m  ********************[0m
[32m  Best f1:0.3225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.37964:  86%|████████▌ | 24/28 [01:56<00:17,  4.32s/it]epoch 3 loss 1.38071:  86%|████████▌ | 24/28 [01:56<00:17,  4.32s/it]epoch 3 loss 1.38071:  89%|████████▉ | 25/28 [01:56<00:09,  3.15s/it]epoch 3 loss 1.38016:  89%|████████▉ | 25/28 [01:56<00:09,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6453[0m
[32m  eval_f1 = 0.3256[0m
[32m  eval_mcc = 0.6255[0m
[32m  eval_precision = 0.4406[0m
[32m  eval_recall = 0.2984[0m
[32m  ********************[0m
[32m  Best f1:0.3256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.38016:  93%|█████████▎| 26/28 [02:03<00:08,  4.23s/it]epoch 3 loss 1.38353:  93%|█████████▎| 26/28 [02:03<00:08,  4.23s/it]epoch 3 loss 1.38353:  96%|█████████▋| 27/28 [02:03<00:03,  3.09s/it]epoch 3 loss 1.37988:  96%|█████████▋| 27/28 [02:03<00:03,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6462[0m
[32m  eval_f1 = 0.3235[0m
[32m  eval_mcc = 0.6263[0m
[32m  eval_precision = 0.4355[0m
[32m  eval_recall = 0.2971[0m

epoch 3 loss 1.37988: 100%|██████████| 28/28 [02:07<00:00,  3.24s/it]epoch 3 loss 1.37988: 100%|██████████| 28/28 [02:07<00:00,  4.55s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.38041:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.38041:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s]epoch 4 loss 1.41612:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6473[0m
[32m  eval_f1 = 0.3261[0m
[32m  eval_mcc = 0.6273[0m
[32m  eval_precision = 0.4339[0m
[32m  eval_recall = 0.3002[0m
[32m  ********************[0m
[32m  Best f1:0.3261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41612:   7%|▋         | 2/28 [00:10<02:37,  6.07s/it]epoch 4 loss 1.39545:   7%|▋         | 2/28 [00:10<02:37,  6.07s/it]epoch 4 loss 1.39545:  11%|█         | 3/28 [00:10<01:27,  3.49s/it]epoch 4 loss 1.37943:  11%|█         | 3/28 [00:11<01:27,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6485[0m
[32m  eval_f1 = 0.3276[0m
[32m  eval_mcc = 0.6287[0m
[32m  eval_precision = 0.4366[0m
[32m  eval_recall = 0.3016[0m
[32m  ********************[0m
[32m  Best f1:0.3276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37943:  14%|█▍        | 4/28 [00:20<02:22,  5.93s/it]epoch 4 loss 1.38361:  14%|█▍        | 4/28 [00:20<02:22,  5.93s/it]epoch 4 loss 1.38361:  18%|█▊        | 5/28 [00:20<01:30,  3.94s/it]epoch 4 loss 1.38027:  18%|█▊        | 5/28 [00:21<01:30,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6489[0m
[32m  eval_f1 = 0.3281[0m
[32m  eval_mcc = 0.6293[0m
[32m  eval_precision = 0.4361[0m
[32m  eval_recall = 0.3019[0m
[32m  ********************[0m
[32m  Best f1:0.3281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38027:  21%|██▏       | 6/28 [00:27<01:45,  4.81s/it]epoch 4 loss 1.36967:  21%|██▏       | 6/28 [00:27<01:45,  4.81s/it]epoch 4 loss 1.36967:  25%|██▌       | 7/28 [00:27<01:10,  3.37s/it]epoch 4 loss 1.36369:  25%|██▌       | 7/28 [00:28<01:10,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6488[0m
[32m  eval_f1 = 0.3277[0m
[32m  eval_mcc = 0.6293[0m
[32m  eval_precision = 0.4354[0m
[32m  eval_recall = 0.3016[0m

epoch 4 loss 1.36369:  29%|██▊       | 8/28 [00:31<01:10,  3.50s/it]epoch 4 loss 1.36114:  29%|██▊       | 8/28 [00:32<01:10,  3.50s/it]epoch 4 loss 1.36114:  32%|███▏      | 9/28 [00:32<00:48,  2.53s/it]epoch 4 loss 1.36803:  32%|███▏      | 9/28 [00:32<00:48,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6485[0m
[32m  eval_f1 = 0.3273[0m
[32m  eval_mcc = 0.6291[0m
[32m  eval_precision = 0.4345[0m
[32m  eval_recall = 0.3015[0m

epoch 4 loss 1.36803:  36%|███▌      | 10/28 [00:35<00:52,  2.92s/it]epoch 4 loss 1.36518:  36%|███▌      | 10/28 [00:36<00:52,  2.92s/it]epoch 4 loss 1.36518:  39%|███▉      | 11/28 [00:36<00:36,  2.15s/it]epoch 4 loss 1.36746:  39%|███▉      | 11/28 [00:36<00:36,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6485[0m
[32m  eval_f1 = 0.3271[0m
[32m  eval_mcc = 0.6289[0m
[32m  eval_precision = 0.4318[0m
[32m  eval_recall = 0.3015[0m

epoch 4 loss 1.36746:  43%|████▎     | 12/28 [00:40<00:42,  2.65s/it]epoch 4 loss 1.36961:  43%|████▎     | 12/28 [00:40<00:42,  2.65s/it]epoch 4 loss 1.36961:  46%|████▋     | 13/28 [00:40<00:29,  1.97s/it]epoch 4 loss 1.3548:  46%|████▋     | 13/28 [00:40<00:29,  1.97s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6489[0m
[32m  eval_f1 = 0.3272[0m
[32m  eval_mcc = 0.6292[0m
[32m  eval_precision = 0.433[0m
[32m  eval_recall = 0.3019[0m

epoch 4 loss 1.3548:  50%|█████     | 14/28 [00:44<00:35,  2.52s/it]epoch 4 loss 1.34876:  50%|█████     | 14/28 [00:44<00:35,  2.52s/it]epoch 4 loss 1.34876:  54%|█████▎    | 15/28 [00:44<00:24,  1.88s/it]epoch 4 loss 1.34433:  54%|█████▎    | 15/28 [00:45<00:24,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6493[0m
[32m  eval_f1 = 0.3274[0m
[32m  eval_mcc = 0.6296[0m
[32m  eval_precision = 0.4331[0m
[32m  eval_recall = 0.3019[0m
[32m  ********************[0m
[32m  Best MCC:0.6296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34433:  57%|█████▋    | 16/28 [00:49<00:32,  2.74s/it]epoch 4 loss 1.34379:  57%|█████▋    | 16/28 [00:49<00:32,  2.74s/it]epoch 4 loss 1.34379:  61%|██████    | 17/28 [00:49<00:22,  2.04s/it]epoch 4 loss 1.34262:  61%|██████    | 17/28 [00:50<00:22,  2.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.327[0m
[32m  eval_mcc = 0.63[0m
[32m  eval_precision = 0.4337[0m
[32m  eval_recall = 0.3014[0m
[32m  ********************[0m
[32m  Best MCC:0.63[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34262:  64%|██████▍   | 18/28 [00:54<00:28,  2.85s/it]epoch 4 loss 1.34578:  64%|██████▍   | 18/28 [00:54<00:28,  2.85s/it]epoch 4 loss 1.34578:  68%|██████▊   | 19/28 [00:54<00:19,  2.12s/it]epoch 4 loss 1.34533:  68%|██████▊   | 19/28 [00:55<00:19,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6496[0m
[32m  eval_f1 = 0.3266[0m
[32m  eval_mcc = 0.6298[0m
[32m  eval_precision = 0.4336[0m
[32m  eval_recall = 0.3008[0m

epoch 4 loss 1.34533:  71%|███████▏  | 20/28 [00:58<00:20,  2.62s/it]epoch 4 loss 1.34206:  71%|███████▏  | 20/28 [00:59<00:20,  2.62s/it]epoch 4 loss 1.34206:  75%|███████▌  | 21/28 [00:59<00:13,  1.96s/it]epoch 4 loss 1.34324:  75%|███████▌  | 21/28 [00:59<00:13,  1.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6499[0m
[32m  eval_f1 = 0.3267[0m
[32m  eval_mcc = 0.6302[0m
[32m  eval_precision = 0.4338[0m
[32m  eval_recall = 0.3009[0m
[32m  ********************[0m
[32m  Best MCC:0.6302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34324:  79%|███████▊  | 22/28 [01:03<00:16,  2.80s/it]epoch 4 loss 1.34181:  79%|███████▊  | 22/28 [01:04<00:16,  2.80s/it]epoch 4 loss 1.34181:  82%|████████▏ | 23/28 [01:04<00:10,  2.08s/it]epoch 4 loss 1.33857:  82%|████████▏ | 23/28 [01:04<00:10,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.65[0m
[32m  eval_f1 = 0.3271[0m
[32m  eval_mcc = 0.6303[0m
[32m  eval_precision = 0.434[0m
[32m  eval_recall = 0.3012[0m
[32m  ********************[0m
[32m  Best MCC:0.6303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33857:  86%|████████▌ | 24/28 [01:09<00:11,  2.88s/it]epoch 4 loss 1.34334:  86%|████████▌ | 24/28 [01:09<00:11,  2.88s/it]epoch 4 loss 1.34334:  89%|████████▉ | 25/28 [01:09<00:06,  2.14s/it]epoch 4 loss 1.34304:  89%|████████▉ | 25/28 [01:09<00:06,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6501[0m
[32m  eval_f1 = 0.3271[0m
[32m  eval_mcc = 0.6304[0m
[32m  eval_precision = 0.4339[0m
[32m  eval_recall = 0.3012[0m
[32m  ********************[0m
[32m  Best MCC:0.6304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34304:  93%|█████████▎| 26/28 [01:14<00:06,  3.02s/it]epoch 4 loss 1.34079:  93%|█████████▎| 26/28 [01:14<00:06,  3.02s/it]epoch 4 loss 1.34079:  96%|█████████▋| 27/28 [01:14<00:02,  2.23s/it]epoch 4 loss 1.34837:  96%|█████████▋| 27/28 [01:15<00:02,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6502[0m
[32m  eval_f1 = 0.3271[0m
[32m  eval_mcc = 0.6305[0m
[32m  eval_precision = 0.4339[0m
[32m  eval_recall = 0.3012[0m
[32m  ********************[0m
[32m  Best MCC:0.6305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34837: 100%|██████████| 28/28 [01:19<00:00,  3.02s/it]epoch 4 loss 1.34837: 100%|██████████| 28/28 [01:19<00:00,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6489[0m
[32m  eval_f1 = 0.3281[0m
[32m  eval_mcc = 0.6293[0m
[32m  eval_precision = 0.4361[0m
[32m  eval_recall = 0.3019[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6315[0m
[32m  eval_f1 = 0.263[0m
[32m  eval_mcc = 0.6119[0m
[32m  eval_precision = 0.3383[0m
[32m  eval_recall = 0.2467[0m

