[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=5, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.75697:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.75697:   4%|▎         | 1/28 [00:00<00:20,  1.29it/s]epoch 0 loss 5.76003:   4%|▎         | 1/28 [00:01<00:20,  1.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.006[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = 0.001[0m
[32m  eval_precision = 0.0015[0m
[32m  eval_recall = 0.0045[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.76003:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.74995:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.74995:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 0 loss 5.73853:  11%|█         | 3/28 [00:07<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0093[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = 0.0016[0m
[32m  eval_precision = 0.0014[0m
[32m  eval_recall = 0.0051[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.73853:  14%|█▍        | 4/28 [00:17<02:15,  5.63s/it]epoch 0 loss 5.71367:  14%|█▍        | 4/28 [00:18<02:15,  5.63s/it]epoch 0 loss 5.71367:  18%|█▊        | 5/28 [00:18<01:26,  3.75s/it]epoch 0 loss 5.68321:  18%|█▊        | 5/28 [00:18<01:26,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0176[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = 0.004[0m
[32m  eval_precision = 0.0024[0m
[32m  eval_recall = 0.0075[0m
[32m  ********************[0m
[32m  Best f1:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.68321:  21%|██▏       | 6/28 [00:28<02:14,  6.09s/it]epoch 0 loss 5.64885:  21%|██▏       | 6/28 [00:29<02:14,  6.09s/it]epoch 0 loss 5.64885:  25%|██▌       | 7/28 [00:29<01:29,  4.24s/it]epoch 0 loss 5.60251:  25%|██▌       | 7/28 [00:29<01:29,  4.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0277[0m
[32m  eval_f1 = 0.0025[0m
[32m  eval_mcc = 0.0053[0m
[32m  eval_precision = 0.006[0m
[32m  eval_recall = 0.0072[0m
[32m  ********************[0m
[32m  Best f1:0.0025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.60251:  29%|██▊       | 8/28 [00:39<02:02,  6.11s/it]epoch 0 loss 5.55185:  29%|██▊       | 8/28 [00:39<02:02,  6.11s/it]epoch 0 loss 5.55185:  32%|███▏      | 9/28 [00:39<01:22,  4.33s/it]epoch 0 loss 5.4953:  32%|███▏      | 9/28 [00:40<01:22,  4.33s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0396[0m
[32m  eval_f1 = 0.005[0m
[32m  eval_mcc = 0.0127[0m
[32m  eval_precision = 0.0155[0m
[32m  eval_recall = 0.0116[0m
[32m  ********************[0m
[32m  Best f1:0.005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0127[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.4953:  36%|███▌      | 10/28 [00:47<01:39,  5.52s/it]epoch 0 loss 5.43382:  36%|███▌      | 10/28 [00:48<01:39,  5.52s/it]epoch 0 loss 5.43382:  39%|███▉      | 11/28 [00:48<01:07,  3.96s/it]epoch 0 loss 5.36554:  39%|███▉      | 11/28 [00:48<01:07,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0544[0m
[32m  eval_f1 = 0.0138[0m
[32m  eval_mcc = 0.0265[0m
[32m  eval_precision = 0.0283[0m
[32m  eval_recall = 0.0203[0m
[32m  ********************[0m
[32m  Best f1:0.0138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.36554:  43%|████▎     | 12/28 [00:56<01:22,  5.17s/it]epoch 0 loss 5.29457:  43%|████▎     | 12/28 [00:56<01:22,  5.17s/it]epoch 0 loss 5.29457:  46%|████▋     | 13/28 [00:56<00:55,  3.73s/it]epoch 0 loss 5.22067:  46%|████▋     | 13/28 [00:57<00:55,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0772[0m
[32m  eval_f1 = 0.0279[0m
[32m  eval_mcc = 0.0459[0m
[32m  eval_precision = 0.0521[0m
[32m  eval_recall = 0.0307[0m
[32m  ********************[0m
[32m  Best f1:0.0279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.22067:  50%|█████     | 14/28 [01:06<01:18,  5.59s/it]epoch 0 loss 5.14618:  50%|█████     | 14/28 [01:06<01:18,  5.59s/it]epoch 0 loss 5.14618:  54%|█████▎    | 15/28 [01:06<00:52,  4.03s/it]epoch 0 loss 5.06831:  54%|█████▎    | 15/28 [01:07<00:52,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1239[0m
[32m  eval_f1 = 0.0409[0m
[32m  eval_mcc = 0.0847[0m
[32m  eval_precision = 0.0681[0m
[32m  eval_recall = 0.043[0m
[32m  ********************[0m
[32m  Best f1:0.0409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.06831:  57%|█████▋    | 16/28 [01:15<01:03,  5.29s/it]epoch 0 loss 4.98992:  57%|█████▋    | 16/28 [01:15<01:03,  5.29s/it]epoch 0 loss 4.98992:  61%|██████    | 17/28 [01:15<00:42,  3.82s/it]epoch 0 loss 4.91268:  61%|██████    | 17/28 [01:15<00:42,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1877[0m
[32m  eval_f1 = 0.0525[0m
[32m  eval_mcc = 0.1395[0m
[32m  eval_precision = 0.1046[0m
[32m  eval_recall = 0.0497[0m
[32m  ********************[0m
[32m  Best f1:0.0525[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.91268:  64%|██████▍   | 18/28 [01:25<00:57,  5.70s/it]epoch 0 loss 4.83105:  64%|██████▍   | 18/28 [01:26<00:57,  5.70s/it]epoch 0 loss 4.83105:  68%|██████▊   | 19/28 [01:26<00:37,  4.12s/it]epoch 0 loss 4.75426:  68%|██████▊   | 19/28 [01:26<00:37,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2628[0m
[32m  eval_f1 = 0.0677[0m
[32m  eval_mcc = 0.212[0m
[32m  eval_precision = 0.1256[0m
[32m  eval_recall = 0.0604[0m
[32m  ********************[0m
[32m  Best f1:0.0677[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.75426:  71%|███████▏  | 20/28 [01:34<00:42,  5.33s/it]epoch 0 loss 4.68001:  71%|███████▏  | 20/28 [01:34<00:42,  5.33s/it]epoch 0 loss 4.68001:  75%|███████▌  | 21/28 [01:34<00:27,  3.86s/it]epoch 0 loss 4.60884:  75%|███████▌  | 21/28 [01:35<00:27,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3294[0m
[32m  eval_f1 = 0.0673[0m
[32m  eval_mcc = 0.2816[0m
[32m  eval_precision = 0.1232[0m
[32m  eval_recall = 0.0653[0m
[32m  ********************[0m
[32m  Best MCC:0.2816[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.60884:  79%|███████▊  | 22/28 [01:42<00:30,  5.03s/it]epoch 0 loss 4.53277:  79%|███████▊  | 22/28 [01:42<00:30,  5.03s/it]epoch 0 loss 4.53277:  82%|████████▏ | 23/28 [01:42<00:18,  3.65s/it]epoch 0 loss 4.46337:  82%|████████▏ | 23/28 [01:43<00:18,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.385[0m
[32m  eval_f1 = 0.0813[0m
[32m  eval_mcc = 0.3413[0m
[32m  eval_precision = 0.1431[0m
[32m  eval_recall = 0.079[0m
[32m  ********************[0m
[32m  Best f1:0.0813[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.46337:  86%|████████▌ | 24/28 [01:52<00:21,  5.35s/it]epoch 0 loss 4.39528:  86%|████████▌ | 24/28 [01:52<00:21,  5.35s/it]epoch 0 loss 4.39528:  89%|████████▉ | 25/28 [01:52<00:11,  3.87s/it]epoch 0 loss 4.32699:  89%|████████▉ | 25/28 [01:52<00:11,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4005[0m
[32m  eval_f1 = 0.0872[0m
[32m  eval_mcc = 0.3595[0m
[32m  eval_precision = 0.1529[0m
[32m  eval_recall = 0.084[0m
[32m  ********************[0m
[32m  Best f1:0.0872[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.32699:  93%|█████████▎| 26/28 [02:03<00:12,  6.02s/it]epoch 0 loss 4.26321:  93%|█████████▎| 26/28 [02:04<00:12,  6.02s/it]epoch 0 loss 4.26321:  96%|█████████▋| 27/28 [02:04<00:04,  4.34s/it]epoch 0 loss 4.19637:  96%|█████████▋| 27/28 [02:04<00:04,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4279[0m
[32m  eval_f1 = 0.1108[0m
[32m  eval_mcc = 0.3936[0m
[32m  eval_precision = 0.1747[0m
[32m  eval_recall = 0.1035[0m
[32m  ********************[0m
[32m  Best f1:0.1108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3936[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.19637: 100%|██████████| 28/28 [02:14<00:00,  6.05s/it]epoch 0 loss 4.19637: 100%|██████████| 28/28 [02:14<00:00,  4.79s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.42826:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.42826:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 1 loss 2.42307:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4733[0m
[32m  eval_f1 = 0.1326[0m
[32m  eval_mcc = 0.4439[0m
[32m  eval_precision = 0.1791[0m
[32m  eval_recall = 0.1268[0m
[32m  ********************[0m
[32m  Best f1:0.1326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42307:   7%|▋         | 2/28 [00:10<02:39,  6.13s/it]epoch 1 loss 2.39665:   7%|▋         | 2/28 [00:10<02:39,  6.13s/it]epoch 1 loss 2.39665:  11%|█         | 3/28 [00:10<01:27,  3.52s/it]epoch 1 loss 2.38135:  11%|█         | 3/28 [00:11<01:27,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5177[0m
[32m  eval_f1 = 0.1514[0m
[32m  eval_mcc = 0.4893[0m
[32m  eval_precision = 0.1977[0m
[32m  eval_recall = 0.1468[0m
[32m  ********************[0m
[32m  Best f1:0.1514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4893[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.38135:  14%|█▍        | 4/28 [00:21<02:31,  6.30s/it]epoch 1 loss 2.3237:  14%|█▍        | 4/28 [00:21<02:31,  6.30s/it] epoch 1 loss 2.3237:  18%|█▊        | 5/28 [00:21<01:36,  4.18s/it]epoch 1 loss 2.26821:  18%|█▊        | 5/28 [00:22<01:36,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5457[0m
[32m  eval_f1 = 0.1654[0m
[32m  eval_mcc = 0.5178[0m
[32m  eval_precision = 0.1969[0m
[32m  eval_recall = 0.1616[0m
[32m  ********************[0m
[32m  Best f1:0.1654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26821:  21%|██▏       | 6/28 [00:32<02:16,  6.21s/it]epoch 1 loss 2.23619:  21%|██▏       | 6/28 [00:32<02:16,  6.21s/it]epoch 1 loss 2.23619:  25%|██▌       | 7/28 [00:32<01:30,  4.32s/it]epoch 1 loss 2.18595:  25%|██▌       | 7/28 [00:32<01:30,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.558[0m
[32m  eval_f1 = 0.1693[0m
[32m  eval_mcc = 0.5337[0m
[32m  eval_precision = 0.208[0m
[32m  eval_recall = 0.1652[0m
[32m  ********************[0m
[32m  Best f1:0.1693[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.18595:  29%|██▊       | 8/28 [00:41<01:54,  5.73s/it]epoch 1 loss 2.14163:  29%|██▊       | 8/28 [00:41<01:54,  5.73s/it]epoch 1 loss 2.14163:  32%|███▏      | 9/28 [00:41<01:17,  4.07s/it]epoch 1 loss 2.11994:  32%|███▏      | 9/28 [00:42<01:17,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5687[0m
[32m  eval_f1 = 0.1731[0m
[32m  eval_mcc = 0.5469[0m
[32m  eval_precision = 0.2176[0m
[32m  eval_recall = 0.1669[0m
[32m  ********************[0m
[32m  Best f1:0.1731[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11994:  36%|███▌      | 10/28 [00:52<01:48,  6.05s/it]epoch 1 loss 2.09745:  36%|███▌      | 10/28 [00:52<01:48,  6.05s/it]epoch 1 loss 2.09745:  39%|███▉      | 11/28 [00:52<01:13,  4.33s/it]epoch 1 loss 2.08086:  39%|███▉      | 11/28 [00:52<01:13,  4.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5748[0m
[32m  eval_f1 = 0.1811[0m
[32m  eval_mcc = 0.5523[0m
[32m  eval_precision = 0.2518[0m
[32m  eval_recall = 0.1712[0m
[32m  ********************[0m
[32m  Best f1:0.1811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08086:  43%|████▎     | 12/28 [01:00<01:29,  5.57s/it]epoch 1 loss 2.0531:  43%|████▎     | 12/28 [01:01<01:29,  5.57s/it] epoch 1 loss 2.0531:  46%|████▋     | 13/28 [01:01<01:00,  4.01s/it]epoch 1 loss 2.03615:  46%|████▋     | 13/28 [01:01<01:00,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5792[0m
[32m  eval_f1 = 0.1902[0m
[32m  eval_mcc = 0.5557[0m
[32m  eval_precision = 0.2745[0m
[32m  eval_recall = 0.1787[0m
[32m  ********************[0m
[32m  Best f1:0.1902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5557[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03615:  50%|█████     | 14/28 [01:12<01:25,  6.10s/it]epoch 1 loss 2.02713:  50%|█████     | 14/28 [01:12<01:25,  6.10s/it]epoch 1 loss 2.02713:  54%|█████▎    | 15/28 [01:12<00:57,  4.39s/it]epoch 1 loss 2.01008:  54%|█████▎    | 15/28 [01:13<00:57,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5841[0m
[32m  eval_f1 = 0.2015[0m
[32m  eval_mcc = 0.5598[0m
[32m  eval_precision = 0.2932[0m
[32m  eval_recall = 0.1872[0m
[32m  ********************[0m
[32m  Best f1:0.2015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01008:  57%|█████▋    | 16/28 [01:23<01:17,  6.44s/it]epoch 1 loss 1.98909:  57%|█████▋    | 16/28 [01:24<01:17,  6.44s/it]epoch 1 loss 1.98909:  61%|██████    | 17/28 [01:24<00:50,  4.63s/it]epoch 1 loss 1.9732:  61%|██████    | 17/28 [01:24<00:50,  4.63s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5892[0m
[32m  eval_f1 = 0.2264[0m
[32m  eval_mcc = 0.5648[0m
[32m  eval_precision = 0.3243[0m
[32m  eval_recall = 0.2083[0m
[32m  ********************[0m
[32m  Best f1:0.2264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9732:  64%|██████▍   | 18/28 [01:36<01:08,  6.81s/it]epoch 1 loss 1.9499:  64%|██████▍   | 18/28 [01:36<01:08,  6.81s/it]epoch 1 loss 1.9499:  68%|██████▊   | 19/28 [01:36<00:43,  4.89s/it]epoch 1 loss 1.93559:  68%|██████▊   | 19/28 [01:37<00:43,  4.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5948[0m
[32m  eval_f1 = 0.2375[0m
[32m  eval_mcc = 0.5708[0m
[32m  eval_precision = 0.3382[0m
[32m  eval_recall = 0.2195[0m
[32m  ********************[0m
[32m  Best f1:0.2375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5708[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93559:  71%|███████▏  | 20/28 [01:48<00:56,  7.03s/it]epoch 1 loss 1.9202:  71%|███████▏  | 20/28 [01:49<00:56,  7.03s/it] epoch 1 loss 1.9202:  75%|███████▌  | 21/28 [01:49<00:35,  5.04s/it]epoch 1 loss 1.91356:  75%|███████▌  | 21/28 [01:49<00:35,  5.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6033[0m
[32m  eval_f1 = 0.2453[0m
[32m  eval_mcc = 0.5801[0m
[32m  eval_precision = 0.336[0m
[32m  eval_recall = 0.2269[0m
[32m  ********************[0m
[32m  Best f1:0.2453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91356:  79%|███████▊  | 22/28 [01:59<00:40,  6.76s/it]epoch 1 loss 1.89672:  79%|███████▊  | 22/28 [02:00<00:40,  6.76s/it]epoch 1 loss 1.89672:  82%|████████▏ | 23/28 [02:00<00:24,  4.85s/it]epoch 1 loss 1.88249:  82%|████████▏ | 23/28 [02:00<00:24,  4.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6081[0m
[32m  eval_f1 = 0.2534[0m
[32m  eval_mcc = 0.5856[0m
[32m  eval_precision = 0.3427[0m
[32m  eval_recall = 0.2347[0m
[32m  ********************[0m
[32m  Best f1:0.2534[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5856[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88249:  86%|████████▌ | 24/28 [02:10<00:25,  6.50s/it]epoch 1 loss 1.87237:  86%|████████▌ | 24/28 [02:11<00:25,  6.50s/it]epoch 1 loss 1.87237:  89%|████████▉ | 25/28 [02:11<00:14,  4.67s/it]epoch 1 loss 1.85357:  89%|████████▉ | 25/28 [02:11<00:14,  4.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6125[0m
[32m  eval_f1 = 0.2592[0m
[32m  eval_mcc = 0.5912[0m
[32m  eval_precision = 0.3426[0m
[32m  eval_recall = 0.2417[0m
[32m  ********************[0m
[32m  Best f1:0.2592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5912[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.85357:  93%|█████████▎| 26/28 [02:20<00:11,  5.99s/it]epoch 1 loss 1.84561:  93%|█████████▎| 26/28 [02:20<00:11,  5.99s/it]epoch 1 loss 1.84561:  96%|█████████▋| 27/28 [02:20<00:04,  4.32s/it]epoch 1 loss 1.83002:  96%|█████████▋| 27/28 [02:20<00:04,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6158[0m
[32m  eval_f1 = 0.2663[0m
[32m  eval_mcc = 0.5958[0m
[32m  eval_precision = 0.3739[0m
[32m  eval_recall = 0.2464[0m
[32m  ********************[0m
[32m  Best f1:0.2663[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83002: 100%|██████████| 28/28 [02:30<00:00,  5.95s/it]epoch 1 loss 1.83002: 100%|██████████| 28/28 [02:30<00:00,  5.37s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.45141:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.45141:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.5064:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6157[0m
[32m  eval_f1 = 0.2702[0m
[32m  eval_mcc = 0.5963[0m
[32m  eval_precision = 0.3674[0m
[32m  eval_recall = 0.2505[0m
[32m  ********************[0m
[32m  Best f1:0.2702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5963[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5064:   7%|▋         | 2/28 [00:08<02:14,  5.19s/it]epoch 2 loss 1.52752:   7%|▋         | 2/28 [00:09<02:14,  5.19s/it]epoch 2 loss 1.52752:  11%|█         | 3/28 [00:09<01:15,  3.01s/it]epoch 2 loss 1.49865:  11%|█         | 3/28 [00:09<01:15,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6181[0m
[32m  eval_f1 = 0.2734[0m
[32m  eval_mcc = 0.5985[0m
[32m  eval_precision = 0.3648[0m
[32m  eval_recall = 0.2547[0m
[32m  ********************[0m
[32m  Best f1:0.2734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5985[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49865:  14%|█▍        | 4/28 [00:19<02:20,  5.85s/it]epoch 2 loss 1.49828:  14%|█▍        | 4/28 [00:19<02:20,  5.85s/it]epoch 2 loss 1.49828:  18%|█▊        | 5/28 [00:19<01:29,  3.89s/it]epoch 2 loss 1.49851:  18%|█▊        | 5/28 [00:20<01:29,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6231[0m
[32m  eval_f1 = 0.2773[0m
[32m  eval_mcc = 0.6034[0m
[32m  eval_precision = 0.3646[0m
[32m  eval_recall = 0.2591[0m
[32m  ********************[0m
[32m  Best f1:0.2773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49851:  21%|██▏       | 6/28 [00:28<02:00,  5.50s/it]epoch 2 loss 1.48683:  21%|██▏       | 6/28 [00:29<02:00,  5.50s/it]epoch 2 loss 1.48683:  25%|██▌       | 7/28 [00:29<01:20,  3.84s/it]epoch 2 loss 1.47624:  25%|██▌       | 7/28 [00:29<01:20,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6291[0m
[32m  eval_f1 = 0.2815[0m
[32m  eval_mcc = 0.6087[0m
[32m  eval_precision = 0.3746[0m
[32m  eval_recall = 0.2636[0m
[32m  ********************[0m
[32m  Best f1:0.2815[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47624:  29%|██▊       | 8/28 [00:39<01:57,  5.89s/it]epoch 2 loss 1.47553:  29%|██▊       | 8/28 [00:39<01:57,  5.89s/it]epoch 2 loss 1.47553:  32%|███▏      | 9/28 [00:39<01:19,  4.18s/it]epoch 2 loss 1.47148:  32%|███▏      | 9/28 [00:40<01:19,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6322[0m
[32m  eval_f1 = 0.2884[0m
[32m  eval_mcc = 0.6111[0m
[32m  eval_precision = 0.3798[0m
[32m  eval_recall = 0.2699[0m
[32m  ********************[0m
[32m  Best f1:0.2884[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47148:  36%|███▌      | 10/28 [00:51<01:57,  6.55s/it]epoch 2 loss 1.46786:  36%|███▌      | 10/28 [00:52<01:57,  6.55s/it]epoch 2 loss 1.46786:  39%|███▉      | 11/28 [00:52<01:19,  4.68s/it]epoch 2 loss 1.46593:  39%|███▉      | 11/28 [00:52<01:19,  4.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6334[0m
[32m  eval_f1 = 0.2899[0m
[32m  eval_mcc = 0.612[0m
[32m  eval_precision = 0.3971[0m
[32m  eval_recall = 0.2715[0m
[32m  ********************[0m
[32m  Best f1:0.2899[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46593:  43%|████▎     | 12/28 [01:02<01:44,  6.55s/it]epoch 2 loss 1.46407:  43%|████▎     | 12/28 [01:03<01:44,  6.55s/it]epoch 2 loss 1.46407:  46%|████▋     | 13/28 [01:03<01:10,  4.69s/it]epoch 2 loss 1.46067:  46%|████▋     | 13/28 [01:03<01:10,  4.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6355[0m
[32m  eval_f1 = 0.2918[0m
[32m  eval_mcc = 0.6141[0m
[32m  eval_precision = 0.402[0m
[32m  eval_recall = 0.2728[0m
[32m  ********************[0m
[32m  Best f1:0.2918[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46067:  50%|█████     | 14/28 [01:13<01:31,  6.51s/it]epoch 2 loss 1.45625:  50%|█████     | 14/28 [01:14<01:31,  6.51s/it]epoch 2 loss 1.45625:  54%|█████▎    | 15/28 [01:14<01:00,  4.67s/it]epoch 2 loss 1.44409:  54%|█████▎    | 15/28 [01:14<01:00,  4.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.2969[0m
[32m  eval_mcc = 0.6178[0m
[32m  eval_precision = 0.4019[0m
[32m  eval_recall = 0.2765[0m
[32m  ********************[0m
[32m  Best f1:0.2969[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44409:  57%|█████▋    | 16/28 [01:24<01:16,  6.39s/it]epoch 2 loss 1.43908:  57%|█████▋    | 16/28 [01:25<01:16,  6.39s/it]epoch 2 loss 1.43908:  61%|██████    | 17/28 [01:25<00:50,  4.59s/it]epoch 2 loss 1.43761:  61%|██████    | 17/28 [01:25<00:50,  4.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6414[0m
[32m  eval_f1 = 0.2973[0m
[32m  eval_mcc = 0.6209[0m
[32m  eval_precision = 0.4017[0m
[32m  eval_recall = 0.2765[0m
[32m  ********************[0m
[32m  Best f1:0.2973[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43761:  64%|██████▍   | 18/28 [01:34<01:01,  6.15s/it]epoch 2 loss 1.43779:  64%|██████▍   | 18/28 [01:35<01:01,  6.15s/it]epoch 2 loss 1.43779:  68%|██████▊   | 19/28 [01:35<00:39,  4.43s/it]epoch 2 loss 1.43547:  68%|██████▊   | 19/28 [01:35<00:39,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6419[0m
[32m  eval_f1 = 0.2971[0m
[32m  eval_mcc = 0.6225[0m
[32m  eval_precision = 0.4088[0m
[32m  eval_recall = 0.2755[0m
[32m  ********************[0m
[32m  Best MCC:0.6225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43547:  71%|███████▏  | 20/28 [01:43<00:43,  5.44s/it]epoch 2 loss 1.42133:  71%|███████▏  | 20/28 [01:43<00:43,  5.44s/it]epoch 2 loss 1.42133:  75%|███████▌  | 21/28 [01:43<00:27,  3.93s/it]epoch 2 loss 1.41625:  75%|███████▌  | 21/28 [01:43<00:27,  3.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6405[0m
[32m  eval_f1 = 0.2965[0m
[32m  eval_mcc = 0.6226[0m
[32m  eval_precision = 0.4116[0m
[32m  eval_recall = 0.2745[0m
[32m  ********************[0m
[32m  Best MCC:0.6226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41625:  79%|███████▊  | 22/28 [01:51<00:30,  5.08s/it]epoch 2 loss 1.41079:  79%|███████▊  | 22/28 [01:51<00:30,  5.08s/it]epoch 2 loss 1.41079:  82%|████████▏ | 23/28 [01:51<00:18,  3.69s/it]epoch 2 loss 1.41556:  82%|████████▏ | 23/28 [01:52<00:18,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6414[0m
[32m  eval_f1 = 0.3019[0m
[32m  eval_mcc = 0.6232[0m
[32m  eval_precision = 0.4153[0m
[32m  eval_recall = 0.2819[0m
[32m  ********************[0m
[32m  Best f1:0.3019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41556:  86%|████████▌ | 24/28 [02:01<00:22,  5.64s/it]epoch 2 loss 1.4081:  86%|████████▌ | 24/28 [02:02<00:22,  5.64s/it] epoch 2 loss 1.4081:  89%|████████▉ | 25/28 [02:02<00:12,  4.07s/it]epoch 2 loss 1.40461:  89%|████████▉ | 25/28 [02:02<00:12,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6433[0m
[32m  eval_f1 = 0.3041[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.4141[0m
[32m  eval_recall = 0.2841[0m
[32m  ********************[0m
[32m  Best f1:0.3041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40461:  93%|█████████▎| 26/28 [02:12<00:11,  5.84s/it]epoch 2 loss 1.4088:  93%|█████████▎| 26/28 [02:12<00:11,  5.84s/it] epoch 2 loss 1.4088:  96%|█████████▋| 27/28 [02:12<00:04,  4.21s/it]epoch 2 loss 1.40432:  96%|█████████▋| 27/28 [02:12<00:04,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6461[0m
[32m  eval_f1 = 0.3118[0m
[32m  eval_mcc = 0.6257[0m
[32m  eval_precision = 0.4129[0m
[32m  eval_recall = 0.2901[0m
[32m  ********************[0m
[32m  Best f1:0.3118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40432: 100%|██████████| 28/28 [02:22<00:00,  5.88s/it]epoch 2 loss 1.40432: 100%|██████████| 28/28 [02:22<00:00,  5.09s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.18344:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.18344:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 3 loss 1.22154:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6472[0m
[32m  eval_f1 = 0.3184[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.4205[0m
[32m  eval_recall = 0.2961[0m
[32m  ********************[0m
[32m  Best f1:0.3184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22154:   7%|▋         | 2/28 [00:09<02:16,  5.25s/it]epoch 3 loss 1.22692:   7%|▋         | 2/28 [00:09<02:16,  5.25s/it]epoch 3 loss 1.22692:  11%|█         | 3/28 [00:09<01:16,  3.05s/it]epoch 3 loss 1.24272:  11%|█         | 3/28 [00:09<01:16,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6479[0m
[32m  eval_f1 = 0.322[0m
[32m  eval_mcc = 0.6273[0m
[32m  eval_precision = 0.4325[0m
[32m  eval_recall = 0.2987[0m
[32m  ********************[0m
[32m  Best f1:0.322[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24272:  14%|█▍        | 4/28 [00:19<02:17,  5.73s/it]epoch 3 loss 1.26736:  14%|█▍        | 4/28 [00:19<02:17,  5.73s/it]epoch 3 loss 1.26736:  18%|█▊        | 5/28 [00:19<01:27,  3.81s/it]epoch 3 loss 1.27257:  18%|█▊        | 5/28 [00:20<01:27,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.649[0m
[32m  eval_f1 = 0.3246[0m
[32m  eval_mcc = 0.6285[0m
[32m  eval_precision = 0.4354[0m
[32m  eval_recall = 0.3013[0m
[32m  ********************[0m
[32m  Best f1:0.3246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27257:  21%|██▏       | 6/28 [00:27<01:55,  5.27s/it]epoch 3 loss 1.26272:  21%|██▏       | 6/28 [00:28<01:55,  5.27s/it]epoch 3 loss 1.26272:  25%|██▌       | 7/28 [00:28<01:17,  3.68s/it]epoch 3 loss 1.25271:  25%|██▌       | 7/28 [00:28<01:17,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6504[0m
[32m  eval_f1 = 0.3258[0m
[32m  eval_mcc = 0.6301[0m
[32m  eval_precision = 0.446[0m
[32m  eval_recall = 0.302[0m
[32m  ********************[0m
[32m  Best f1:0.3258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25271:  29%|██▊       | 8/28 [00:37<01:51,  5.58s/it]epoch 3 loss 1.2731:  29%|██▊       | 8/28 [00:38<01:51,  5.58s/it] epoch 3 loss 1.2731:  32%|███▏      | 9/28 [00:38<01:15,  3.97s/it]epoch 3 loss 1.28327:  32%|███▏      | 9/28 [00:38<01:15,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6515[0m
[32m  eval_f1 = 0.3276[0m
[32m  eval_mcc = 0.6316[0m
[32m  eval_precision = 0.4469[0m
[32m  eval_recall = 0.3031[0m
[32m  ********************[0m
[32m  Best f1:0.3276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28327:  36%|███▌      | 10/28 [00:47<01:38,  5.46s/it]epoch 3 loss 1.29852:  36%|███▌      | 10/28 [00:47<01:38,  5.46s/it]epoch 3 loss 1.29852:  39%|███▉      | 11/28 [00:47<01:06,  3.92s/it]epoch 3 loss 1.31562:  39%|███▉      | 11/28 [00:47<01:06,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6539[0m
[32m  eval_f1 = 0.3288[0m
[32m  eval_mcc = 0.6346[0m
[32m  eval_precision = 0.4397[0m
[32m  eval_recall = 0.3048[0m
[32m  ********************[0m
[32m  Best f1:0.3288[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31562:  43%|████▎     | 12/28 [00:57<01:32,  5.78s/it]epoch 3 loss 1.31506:  43%|████▎     | 12/28 [00:58<01:32,  5.78s/it]epoch 3 loss 1.31506:  46%|████▋     | 13/28 [00:58<01:02,  4.16s/it]epoch 3 loss 1.31001:  46%|████▋     | 13/28 [00:58<01:02,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6551[0m
[32m  eval_f1 = 0.3321[0m
[32m  eval_mcc = 0.6362[0m
[32m  eval_precision = 0.4396[0m
[32m  eval_recall = 0.3079[0m
[32m  ********************[0m
[32m  Best f1:0.3321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31001:  50%|█████     | 14/28 [01:06<01:15,  5.40s/it]epoch 3 loss 1.30928:  50%|█████     | 14/28 [01:06<01:15,  5.40s/it]epoch 3 loss 1.30928:  54%|█████▎    | 15/28 [01:06<00:50,  3.90s/it]epoch 3 loss 1.30468:  54%|█████▎    | 15/28 [01:07<00:50,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6556[0m
[32m  eval_f1 = 0.334[0m
[32m  eval_mcc = 0.6369[0m
[32m  eval_precision = 0.4374[0m
[32m  eval_recall = 0.3097[0m
[32m  ********************[0m
[32m  Best f1:0.334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30468:  57%|█████▋    | 16/28 [01:16<01:08,  5.73s/it]epoch 3 loss 1.30546:  57%|█████▋    | 16/28 [01:17<01:08,  5.73s/it]epoch 3 loss 1.30546:  61%|██████    | 17/28 [01:17<00:45,  4.13s/it]epoch 3 loss 1.30943:  61%|██████    | 17/28 [01:17<00:45,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6557[0m
[32m  eval_f1 = 0.3366[0m
[32m  eval_mcc = 0.637[0m
[32m  eval_precision = 0.4378[0m
[32m  eval_recall = 0.312[0m
[32m  ********************[0m
[32m  Best f1:0.3366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30943:  64%|██████▍   | 18/28 [01:23<00:48,  4.81s/it]epoch 3 loss 1.3112:  64%|██████▍   | 18/28 [01:23<00:48,  4.81s/it] epoch 3 loss 1.3112:  68%|██████▊   | 19/28 [01:23<00:31,  3.50s/it]epoch 3 loss 1.30914:  68%|██████▊   | 19/28 [01:24<00:31,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6557[0m
[32m  eval_f1 = 0.3378[0m
[32m  eval_mcc = 0.6369[0m
[32m  eval_precision = 0.4381[0m
[32m  eval_recall = 0.3134[0m
[32m  ********************[0m
[32m  Best f1:0.3378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.30914:  71%|███████▏  | 20/28 [01:29<00:31,  3.97s/it]epoch 3 loss 1.30556:  71%|███████▏  | 20/28 [01:29<00:31,  3.97s/it]epoch 3 loss 1.30556:  75%|███████▌  | 21/28 [01:29<00:20,  2.90s/it]epoch 3 loss 1.30091:  75%|███████▌  | 21/28 [01:29<00:20,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6555[0m
[32m  eval_f1 = 0.3384[0m
[32m  eval_mcc = 0.6366[0m
[32m  eval_precision = 0.4388[0m
[32m  eval_recall = 0.3137[0m
[32m  ********************[0m
[32m  Best f1:0.3384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.30091:  79%|███████▊  | 22/28 [01:34<00:21,  3.57s/it]epoch 3 loss 1.29726:  79%|███████▊  | 22/28 [01:34<00:21,  3.57s/it]epoch 3 loss 1.29726:  82%|████████▏ | 23/28 [01:34<00:13,  2.62s/it]epoch 3 loss 1.29705:  82%|████████▏ | 23/28 [01:35<00:13,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3385[0m
[32m  eval_mcc = 0.6368[0m
[32m  eval_precision = 0.4369[0m
[32m  eval_recall = 0.3138[0m
[32m  ********************[0m
[32m  Best f1:0.3385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.29705:  86%|████████▌ | 24/28 [01:42<00:15,  3.98s/it]epoch 3 loss 1.29818:  86%|████████▌ | 24/28 [01:42<00:15,  3.98s/it]epoch 3 loss 1.29818:  89%|████████▉ | 25/28 [01:42<00:08,  2.91s/it]epoch 3 loss 1.29761:  89%|████████▉ | 25/28 [01:42<00:08,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.656[0m
[32m  eval_f1 = 0.3386[0m
[32m  eval_mcc = 0.6368[0m
[32m  eval_precision = 0.4367[0m
[32m  eval_recall = 0.3143[0m
[32m  ********************[0m
[32m  Best f1:0.3386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.29761:  93%|█████████▎| 26/28 [01:49<00:08,  4.12s/it]epoch 3 loss 1.30092:  93%|█████████▎| 26/28 [01:49<00:08,  4.12s/it]epoch 3 loss 1.30092:  96%|█████████▋| 27/28 [01:49<00:03,  3.01s/it]epoch 3 loss 1.2979:  96%|█████████▋| 27/28 [01:50<00:03,  3.01s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6563[0m
[32m  eval_f1 = 0.3388[0m
[32m  eval_mcc = 0.637[0m
[32m  eval_precision = 0.4358[0m
[32m  eval_recall = 0.3147[0m
[32m  ********************[0m
[32m  Best f1:0.3388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2979: 100%|██████████| 28/28 [02:00<00:00,  5.40s/it]epoch 3 loss 1.2979: 100%|██████████| 28/28 [02:00<00:00,  4.32s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.30133:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.30133:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 4 loss 1.33194:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6574[0m
[32m  eval_f1 = 0.3392[0m
[32m  eval_mcc = 0.6379[0m
[32m  eval_precision = 0.4352[0m
[32m  eval_recall = 0.3153[0m
[32m  ********************[0m
[32m  Best f1:0.3392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6379[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33194:   7%|▋         | 2/28 [00:10<02:39,  6.12s/it]epoch 4 loss 1.31194:   7%|▋         | 2/28 [00:10<02:39,  6.12s/it]epoch 4 loss 1.31194:  11%|█         | 3/28 [00:10<01:27,  3.52s/it]epoch 4 loss 1.29638:  11%|█         | 3/28 [00:11<01:27,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3392[0m
[32m  eval_mcc = 0.6387[0m
[32m  eval_precision = 0.4379[0m
[32m  eval_recall = 0.3154[0m
[32m  ********************[0m
[32m  Best MCC:0.6387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29638:  14%|█▍        | 4/28 [00:18<02:02,  5.10s/it]epoch 4 loss 1.30267:  14%|█▍        | 4/28 [00:18<02:02,  5.10s/it]epoch 4 loss 1.30267:  18%|█▊        | 5/28 [00:18<01:18,  3.41s/it]epoch 4 loss 1.29792:  18%|█▊        | 5/28 [00:19<01:18,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6598[0m
[32m  eval_f1 = 0.3464[0m
[32m  eval_mcc = 0.6407[0m
[32m  eval_precision = 0.449[0m
[32m  eval_recall = 0.3213[0m
[32m  ********************[0m
[32m  Best f1:0.3464[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29792:  21%|██▏       | 6/28 [00:29<02:05,  5.71s/it]epoch 4 loss 1.28795:  21%|██▏       | 6/28 [00:29<02:05,  5.71s/it]epoch 4 loss 1.28795:  25%|██▌       | 7/28 [00:29<01:23,  3.98s/it]epoch 4 loss 1.28359:  25%|██▌       | 7/28 [00:29<01:23,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6601[0m
[32m  eval_f1 = 0.3466[0m
[32m  eval_mcc = 0.6411[0m
[32m  eval_precision = 0.4495[0m
[32m  eval_recall = 0.3216[0m
[32m  ********************[0m
[32m  Best f1:0.3466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6411[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28359:  29%|██▊       | 8/28 [00:38<01:49,  5.50s/it]epoch 4 loss 1.27981:  29%|██▊       | 8/28 [00:38<01:49,  5.50s/it]epoch 4 loss 1.27981:  32%|███▏      | 9/28 [00:38<01:14,  3.91s/it]epoch 4 loss 1.28698:  32%|███▏      | 9/28 [00:39<01:14,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6603[0m
[32m  eval_f1 = 0.3474[0m
[32m  eval_mcc = 0.6413[0m
[32m  eval_precision = 0.4512[0m
[32m  eval_recall = 0.3219[0m
[32m  ********************[0m
[32m  Best f1:0.3474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28698:  36%|███▌      | 10/28 [00:48<01:45,  5.83s/it]epoch 4 loss 1.2842:  36%|███▌      | 10/28 [00:49<01:45,  5.83s/it] epoch 4 loss 1.2842:  39%|███▉      | 11/28 [00:49<01:10,  4.18s/it]epoch 4 loss 1.28603:  39%|███▉      | 11/28 [00:49<01:10,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6601[0m
[32m  eval_f1 = 0.3477[0m
[32m  eval_mcc = 0.641[0m
[32m  eval_precision = 0.45[0m
[32m  eval_recall = 0.3223[0m
[32m  ********************[0m
[32m  Best f1:0.3477[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.28603:  43%|████▎     | 12/28 [00:55<01:18,  4.88s/it]epoch 4 loss 1.28734:  43%|████▎     | 12/28 [00:56<01:18,  4.88s/it]epoch 4 loss 1.28734:  46%|████▋     | 13/28 [00:56<00:52,  3.53s/it]epoch 4 loss 1.27285:  46%|████▋     | 13/28 [00:56<00:52,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6604[0m
[32m  eval_f1 = 0.3487[0m
[32m  eval_mcc = 0.6413[0m
[32m  eval_precision = 0.4513[0m
[32m  eval_recall = 0.3232[0m
[32m  ********************[0m
[32m  Best f1:0.3487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27285:  50%|█████     | 14/28 [01:05<01:15,  5.38s/it]epoch 4 loss 1.26738:  50%|█████     | 14/28 [01:06<01:15,  5.38s/it]epoch 4 loss 1.26738:  54%|█████▎    | 15/28 [01:06<00:50,  3.88s/it]epoch 4 loss 1.26243:  54%|█████▎    | 15/28 [01:06<00:50,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6603[0m
[32m  eval_f1 = 0.3487[0m
[32m  eval_mcc = 0.6411[0m
[32m  eval_precision = 0.4548[0m
[32m  eval_recall = 0.3196[0m

epoch 4 loss 1.26243:  57%|█████▋    | 16/28 [01:09<00:46,  3.85s/it]epoch 4 loss 1.26163:  57%|█████▋    | 16/28 [01:10<00:46,  3.85s/it]epoch 4 loss 1.26163:  61%|██████    | 17/28 [01:10<00:30,  2.81s/it]epoch 4 loss 1.2602:  61%|██████    | 17/28 [01:10<00:30,  2.81s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6603[0m
[32m  eval_f1 = 0.3487[0m
[32m  eval_mcc = 0.6411[0m
[32m  eval_precision = 0.4555[0m
[32m  eval_recall = 0.3194[0m

epoch 4 loss 1.2602:  64%|██████▍   | 18/28 [01:14<00:31,  3.11s/it]epoch 4 loss 1.26274:  64%|██████▍   | 18/28 [01:14<00:31,  3.11s/it]epoch 4 loss 1.26274:  68%|██████▊   | 19/28 [01:14<00:20,  2.29s/it]epoch 4 loss 1.26248:  68%|██████▊   | 19/28 [01:14<00:20,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6603[0m
[32m  eval_f1 = 0.349[0m
[32m  eval_mcc = 0.6412[0m
[32m  eval_precision = 0.4554[0m
[32m  eval_recall = 0.3197[0m
[32m  ********************[0m
[32m  Best f1:0.349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.26248:  71%|███████▏  | 20/28 [01:21<00:29,  3.67s/it]epoch 4 loss 1.25948:  71%|███████▏  | 20/28 [01:21<00:29,  3.67s/it]epoch 4 loss 1.25948:  75%|███████▌  | 21/28 [01:21<00:18,  2.70s/it]epoch 4 loss 1.26057:  75%|███████▌  | 21/28 [01:22<00:18,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6606[0m
[32m  eval_f1 = 0.3491[0m
[32m  eval_mcc = 0.6415[0m
[32m  eval_precision = 0.4558[0m
[32m  eval_recall = 0.3198[0m
[32m  ********************[0m
[32m  Best f1:0.3491[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26057:  79%|███████▊  | 22/28 [01:29<00:25,  4.25s/it]epoch 4 loss 1.25968:  79%|███████▊  | 22/28 [01:30<00:25,  4.25s/it]epoch 4 loss 1.25968:  82%|████████▏ | 23/28 [01:30<00:15,  3.10s/it]epoch 4 loss 1.25607:  82%|████████▏ | 23/28 [01:30<00:15,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6606[0m
[32m  eval_f1 = 0.349[0m
[32m  eval_mcc = 0.6415[0m
[32m  eval_precision = 0.456[0m
[32m  eval_recall = 0.3198[0m

epoch 4 loss 1.25607:  86%|████████▌ | 24/28 [01:33<00:13,  3.31s/it]epoch 4 loss 1.26052:  86%|████████▌ | 24/28 [01:34<00:13,  3.31s/it]epoch 4 loss 1.26052:  89%|████████▉ | 25/28 [01:34<00:07,  2.43s/it]epoch 4 loss 1.26048:  89%|████████▉ | 25/28 [01:34<00:07,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6604[0m
[32m  eval_f1 = 0.349[0m
[32m  eval_mcc = 0.6413[0m
[32m  eval_precision = 0.456[0m
[32m  eval_recall = 0.3197[0m

epoch 4 loss 1.26048:  93%|█████████▎| 26/28 [01:38<00:05,  2.84s/it]epoch 4 loss 1.25872:  93%|█████████▎| 26/28 [01:38<00:05,  2.84s/it]epoch 4 loss 1.25872:  96%|█████████▋| 27/28 [01:38<00:02,  2.11s/it]epoch 4 loss 1.26592:  96%|█████████▋| 27/28 [01:38<00:02,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6605[0m
[32m  eval_f1 = 0.349[0m
[32m  eval_mcc = 0.6414[0m
[32m  eval_precision = 0.456[0m
[32m  eval_recall = 0.3197[0m

epoch 4 loss 1.26592: 100%|██████████| 28/28 [01:42<00:00,  2.55s/it]epoch 4 loss 1.26592: 100%|██████████| 28/28 [01:42<00:00,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6606[0m
[32m  eval_f1 = 0.3491[0m
[32m  eval_mcc = 0.6415[0m
[32m  eval_precision = 0.4558[0m
[32m  eval_recall = 0.3198[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.71it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6397[0m
[32m  eval_f1 = 0.2771[0m
[32m  eval_mcc = 0.6204[0m
[32m  eval_precision = 0.3522[0m
[32m  eval_recall = 0.2594[0m

