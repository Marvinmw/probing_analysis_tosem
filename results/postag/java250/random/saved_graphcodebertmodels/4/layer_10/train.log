[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.76058:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.76058:   4%|▎         | 1/28 [00:00<00:20,  1.29it/s]epoch 0 loss 5.76676:   4%|▎         | 1/28 [00:01<00:20,  1.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0098[0m
[32m  eval_f1 = 0.0015[0m
[32m  eval_mcc = 0.0061[0m
[32m  eval_precision = 0.0054[0m
[32m  eval_recall = 0.0044[0m
[32m  ********************[0m
[32m  Best f1:0.0015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0061[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.76676:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.75783:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.75783:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 0 loss 5.74361:  11%|█         | 3/28 [00:07<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0158[0m
[32m  eval_f1 = 0.002[0m
[32m  eval_mcc = 0.0093[0m
[32m  eval_precision = 0.0041[0m
[32m  eval_recall = 0.0061[0m
[32m  ********************[0m
[32m  Best f1:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.74361:  14%|█▍        | 4/28 [00:17<02:09,  5.38s/it]epoch 0 loss 5.71808:  14%|█▍        | 4/28 [00:17<02:09,  5.38s/it]epoch 0 loss 5.71808:  18%|█▊        | 5/28 [00:17<01:22,  3.59s/it]epoch 0 loss 5.68413:  18%|█▊        | 5/28 [00:17<01:22,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0288[0m
[32m  eval_f1 = 0.0031[0m
[32m  eval_mcc = 0.0157[0m
[32m  eval_precision = 0.0055[0m
[32m  eval_recall = 0.0087[0m
[32m  ********************[0m
[32m  Best f1:0.0031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.68413:  21%|██▏       | 6/28 [00:25<01:54,  5.20s/it]epoch 0 loss 5.64841:  21%|██▏       | 6/28 [00:26<01:54,  5.20s/it]epoch 0 loss 5.64841:  25%|██▌       | 7/28 [00:26<01:16,  3.64s/it]epoch 0 loss 5.59891:  25%|██▌       | 7/28 [00:26<01:16,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0421[0m
[32m  eval_f1 = 0.0059[0m
[32m  eval_mcc = 0.0212[0m
[32m  eval_precision = 0.008[0m
[32m  eval_recall = 0.0137[0m
[32m  ********************[0m
[32m  Best f1:0.0059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.59891:  29%|██▊       | 8/28 [00:36<01:54,  5.72s/it]epoch 0 loss 5.54786:  29%|██▊       | 8/28 [00:36<01:54,  5.72s/it]epoch 0 loss 5.54786:  32%|███▏      | 9/28 [00:36<01:17,  4.07s/it]epoch 0 loss 5.4889:  32%|███▏      | 9/28 [00:37<01:17,  4.07s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0519[0m
[32m  eval_f1 = 0.0086[0m
[32m  eval_mcc = 0.0274[0m
[32m  eval_precision = 0.0108[0m
[32m  eval_recall = 0.018[0m
[32m  ********************[0m
[32m  Best f1:0.0086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.4889:  36%|███▌      | 10/28 [00:45<01:37,  5.44s/it]epoch 0 loss 5.424:  36%|███▌      | 10/28 [00:45<01:37,  5.44s/it] epoch 0 loss 5.424:  39%|███▉      | 11/28 [00:45<01:06,  3.90s/it]epoch 0 loss 5.35315:  39%|███▉      | 11/28 [00:46<01:06,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0628[0m
[32m  eval_f1 = 0.0121[0m
[32m  eval_mcc = 0.0354[0m
[32m  eval_precision = 0.0253[0m
[32m  eval_recall = 0.0212[0m
[32m  ********************[0m
[32m  Best f1:0.0121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.35315:  43%|████▎     | 12/28 [00:56<01:34,  5.92s/it]epoch 0 loss 5.27998:  43%|████▎     | 12/28 [00:56<01:34,  5.92s/it]epoch 0 loss 5.27998:  46%|████▋     | 13/28 [00:56<01:03,  4.25s/it]epoch 0 loss 5.20351:  46%|████▋     | 13/28 [00:57<01:03,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0822[0m
[32m  eval_f1 = 0.0156[0m
[32m  eval_mcc = 0.0457[0m
[32m  eval_precision = 0.031[0m
[32m  eval_recall = 0.024[0m
[32m  ********************[0m
[32m  Best f1:0.0156[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20351:  50%|█████     | 14/28 [01:04<01:15,  5.37s/it]epoch 0 loss 5.12743:  50%|█████     | 14/28 [01:05<01:15,  5.37s/it]epoch 0 loss 5.12743:  54%|█████▎    | 15/28 [01:05<00:50,  3.88s/it]epoch 0 loss 5.04849:  54%|█████▎    | 15/28 [01:05<00:50,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.121[0m
[32m  eval_f1 = 0.0221[0m
[32m  eval_mcc = 0.0703[0m
[32m  eval_precision = 0.0386[0m
[32m  eval_recall = 0.0285[0m
[32m  ********************[0m
[32m  Best f1:0.0221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0703[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04849:  57%|█████▋    | 16/28 [01:15<01:08,  5.70s/it]epoch 0 loss 4.97028:  57%|█████▋    | 16/28 [01:15<01:08,  5.70s/it]epoch 0 loss 4.97028:  61%|██████    | 17/28 [01:15<00:45,  4.11s/it]epoch 0 loss 4.89311:  61%|██████    | 17/28 [01:15<00:45,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.186[0m
[32m  eval_f1 = 0.0311[0m
[32m  eval_mcc = 0.1266[0m
[32m  eval_precision = 0.0522[0m
[32m  eval_recall = 0.0328[0m
[32m  ********************[0m
[32m  Best f1:0.0311[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.89311:  64%|██████▍   | 18/28 [01:24<00:54,  5.47s/it]epoch 0 loss 4.81376:  64%|██████▍   | 18/28 [01:24<00:54,  5.47s/it]epoch 0 loss 4.81376:  68%|██████▊   | 19/28 [01:24<00:35,  3.95s/it]epoch 0 loss 4.73968:  68%|██████▊   | 19/28 [01:24<00:35,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2362[0m
[32m  eval_f1 = 0.0326[0m
[32m  eval_mcc = 0.1814[0m
[32m  eval_precision = 0.0567[0m
[32m  eval_recall = 0.0342[0m
[32m  ********************[0m
[32m  Best f1:0.0326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1814[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.73968:  71%|███████▏  | 20/28 [01:34<00:46,  5.86s/it]epoch 0 loss 4.66995:  71%|███████▏  | 20/28 [01:35<00:46,  5.86s/it]epoch 0 loss 4.66995:  75%|███████▌  | 21/28 [01:35<00:29,  4.23s/it]epoch 0 loss 4.60396:  75%|███████▌  | 21/28 [01:35<00:29,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2681[0m
[32m  eval_f1 = 0.0337[0m
[32m  eval_mcc = 0.2144[0m
[32m  eval_precision = 0.0608[0m
[32m  eval_recall = 0.0365[0m
[32m  ********************[0m
[32m  Best f1:0.0337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.60396:  79%|███████▊  | 22/28 [01:43<00:31,  5.32s/it]epoch 0 loss 4.53299:  79%|███████▊  | 22/28 [01:43<00:31,  5.32s/it]epoch 0 loss 4.53299:  82%|████████▏ | 23/28 [01:43<00:19,  3.85s/it]epoch 0 loss 4.46959:  82%|████████▏ | 23/28 [01:43<00:19,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2935[0m
[32m  eval_f1 = 0.0346[0m
[32m  eval_mcc = 0.241[0m
[32m  eval_precision = 0.0743[0m
[32m  eval_recall = 0.0393[0m
[32m  ********************[0m
[32m  Best f1:0.0346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.46959:  86%|████████▌ | 24/28 [01:50<00:19,  4.80s/it]epoch 0 loss 4.40786:  86%|████████▌ | 24/28 [01:50<00:19,  4.80s/it]epoch 0 loss 4.40786:  89%|████████▉ | 25/28 [01:50<00:10,  3.49s/it]epoch 0 loss 4.34579:  89%|████████▉ | 25/28 [01:51<00:10,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3268[0m
[32m  eval_f1 = 0.0566[0m
[32m  eval_mcc = 0.2794[0m
[32m  eval_precision = 0.0893[0m
[32m  eval_recall = 0.059[0m
[32m  ********************[0m
[32m  Best f1:0.0566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.34579:  93%|█████████▎| 26/28 [01:57<00:08,  4.39s/it]epoch 0 loss 4.28831:  93%|█████████▎| 26/28 [01:57<00:08,  4.39s/it]epoch 0 loss 4.28831:  96%|█████████▋| 27/28 [01:57<00:03,  3.20s/it]epoch 0 loss 4.22787:  96%|█████████▋| 27/28 [01:58<00:03,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3691[0m
[32m  eval_f1 = 0.0839[0m
[32m  eval_mcc = 0.3282[0m
[32m  eval_precision = 0.135[0m
[32m  eval_recall = 0.082[0m
[32m  ********************[0m
[32m  Best f1:0.0839[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.22787: 100%|██████████| 28/28 [02:04<00:00,  4.12s/it]epoch 0 loss 4.22787: 100%|██████████| 28/28 [02:04<00:00,  4.43s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.62603:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.62603:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 1 loss 2.62106:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4418[0m
[32m  eval_f1 = 0.1208[0m
[32m  eval_mcc = 0.4074[0m
[32m  eval_precision = 0.1738[0m
[32m  eval_recall = 0.114[0m
[32m  ********************[0m
[32m  Best f1:0.1208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.62106:   7%|▋         | 2/28 [00:06<01:45,  4.04s/it]epoch 1 loss 2.59562:   7%|▋         | 2/28 [00:07<01:45,  4.04s/it]epoch 1 loss 2.59562:  11%|█         | 3/28 [00:07<00:59,  2.39s/it]epoch 1 loss 2.5825:  11%|█         | 3/28 [00:07<00:59,  2.39s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5027[0m
[32m  eval_f1 = 0.1467[0m
[32m  eval_mcc = 0.4711[0m
[32m  eval_precision = 0.1867[0m
[32m  eval_recall = 0.1384[0m
[32m  ********************[0m
[32m  Best f1:0.1467[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4711[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.5825:  14%|█▍        | 4/28 [00:14<01:38,  4.10s/it]epoch 1 loss 2.52573:  14%|█▍        | 4/28 [00:14<01:38,  4.10s/it]epoch 1 loss 2.52573:  18%|█▊        | 5/28 [00:14<01:03,  2.78s/it]epoch 1 loss 2.4717:  18%|█▊        | 5/28 [00:14<01:03,  2.78s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5297[0m
[32m  eval_f1 = 0.1539[0m
[32m  eval_mcc = 0.5026[0m
[32m  eval_precision = 0.192[0m
[32m  eval_recall = 0.1475[0m
[32m  ********************[0m
[32m  Best f1:0.1539[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.4717:  21%|██▏       | 6/28 [00:20<01:23,  3.79s/it]epoch 1 loss 2.44255:  21%|██▏       | 6/28 [00:20<01:23,  3.79s/it]epoch 1 loss 2.44255:  25%|██▌       | 7/28 [00:20<00:56,  2.69s/it]epoch 1 loss 2.39503:  25%|██▌       | 7/28 [00:21<00:56,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5444[0m
[32m  eval_f1 = 0.1652[0m
[32m  eval_mcc = 0.5247[0m
[32m  eval_precision = 0.2046[0m
[32m  eval_recall = 0.1572[0m
[32m  ********************[0m
[32m  Best f1:0.1652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.39503:  29%|██▊       | 8/28 [00:27<01:19,  3.98s/it]epoch 1 loss 2.35193:  29%|██▊       | 8/28 [00:27<01:19,  3.98s/it]epoch 1 loss 2.35193:  32%|███▏      | 9/28 [00:27<00:54,  2.87s/it]epoch 1 loss 2.33141:  32%|███▏      | 9/28 [00:28<00:54,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5525[0m
[32m  eval_f1 = 0.167[0m
[32m  eval_mcc = 0.5337[0m
[32m  eval_precision = 0.2152[0m
[32m  eval_recall = 0.1584[0m
[32m  ********************[0m
[32m  Best f1:0.167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.33141:  36%|███▌      | 10/28 [00:34<01:11,  3.97s/it]epoch 1 loss 2.3085:  36%|███▌      | 10/28 [00:34<01:11,  3.97s/it] epoch 1 loss 2.3085:  39%|███▉      | 11/28 [00:34<00:49,  2.89s/it]epoch 1 loss 2.29123:  39%|███▉      | 11/28 [00:35<00:49,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5508[0m
[32m  eval_f1 = 0.1647[0m
[32m  eval_mcc = 0.5264[0m
[32m  eval_precision = 0.2136[0m
[32m  eval_recall = 0.1573[0m

epoch 1 loss 2.29123:  43%|████▎     | 12/28 [00:38<00:50,  3.16s/it]epoch 1 loss 2.26211:  43%|████▎     | 12/28 [00:38<00:50,  3.16s/it]epoch 1 loss 2.26211:  46%|████▋     | 13/28 [00:38<00:34,  2.32s/it]epoch 1 loss 2.24416:  46%|████▋     | 13/28 [00:39<00:34,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5552[0m
[32m  eval_f1 = 0.171[0m
[32m  eval_mcc = 0.5283[0m
[32m  eval_precision = 0.2382[0m
[32m  eval_recall = 0.1615[0m
[32m  ********************[0m
[32m  Best f1:0.171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.24416:  50%|█████     | 14/28 [00:44<00:44,  3.16s/it]epoch 1 loss 2.23383:  50%|█████     | 14/28 [00:44<00:44,  3.16s/it]epoch 1 loss 2.23383:  54%|█████▎    | 15/28 [00:44<00:30,  2.33s/it]epoch 1 loss 2.21507:  54%|█████▎    | 15/28 [00:44<00:30,  2.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5599[0m
[32m  eval_f1 = 0.1813[0m
[32m  eval_mcc = 0.5326[0m
[32m  eval_precision = 0.2507[0m
[32m  eval_recall = 0.1705[0m
[32m  ********************[0m
[32m  Best f1:0.1813[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.21507:  57%|█████▋    | 16/28 [00:49<00:38,  3.17s/it]epoch 1 loss 2.19317:  57%|█████▋    | 16/28 [00:50<00:38,  3.17s/it]epoch 1 loss 2.19317:  61%|██████    | 17/28 [00:50<00:25,  2.34s/it]epoch 1 loss 2.17708:  61%|██████    | 17/28 [00:50<00:25,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5713[0m
[32m  eval_f1 = 0.1924[0m
[32m  eval_mcc = 0.545[0m
[32m  eval_precision = 0.2642[0m
[32m  eval_recall = 0.1807[0m
[32m  ********************[0m
[32m  Best f1:0.1924[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17708:  64%|██████▍   | 18/28 [00:56<00:36,  3.67s/it]epoch 1 loss 2.15322:  64%|██████▍   | 18/28 [00:57<00:36,  3.67s/it]epoch 1 loss 2.15322:  68%|██████▊   | 19/28 [00:57<00:24,  2.70s/it]epoch 1 loss 2.13755:  68%|██████▊   | 19/28 [00:57<00:24,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5805[0m
[32m  eval_f1 = 0.1973[0m
[32m  eval_mcc = 0.5552[0m
[32m  eval_precision = 0.2753[0m
[32m  eval_recall = 0.1866[0m
[32m  ********************[0m
[32m  Best f1:0.1973[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13755:  71%|███████▏  | 20/28 [01:03<00:30,  3.84s/it]epoch 1 loss 2.12035:  71%|███████▏  | 20/28 [01:04<00:30,  3.84s/it]epoch 1 loss 2.12035:  75%|███████▌  | 21/28 [01:04<00:19,  2.82s/it]epoch 1 loss 2.11232:  75%|███████▌  | 21/28 [01:04<00:19,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5839[0m
[32m  eval_f1 = 0.2014[0m
[32m  eval_mcc = 0.5597[0m
[32m  eval_precision = 0.2807[0m
[32m  eval_recall = 0.1905[0m
[32m  ********************[0m
[32m  Best f1:0.2014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11232:  79%|███████▊  | 22/28 [01:10<00:23,  3.92s/it]epoch 1 loss 2.09424:  79%|███████▊  | 22/28 [01:11<00:23,  3.92s/it]epoch 1 loss 2.09424:  82%|████████▏ | 23/28 [01:11<00:14,  2.87s/it]epoch 1 loss 2.07872:  82%|████████▏ | 23/28 [01:11<00:14,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5907[0m
[32m  eval_f1 = 0.2083[0m
[32m  eval_mcc = 0.568[0m
[32m  eval_precision = 0.2958[0m
[32m  eval_recall = 0.1962[0m
[32m  ********************[0m
[32m  Best f1:0.2083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07872:  86%|████████▌ | 24/28 [01:17<00:15,  3.97s/it]epoch 1 loss 2.06772:  86%|████████▌ | 24/28 [01:18<00:15,  3.97s/it]epoch 1 loss 2.06772:  89%|████████▉ | 25/28 [01:18<00:08,  2.91s/it]epoch 1 loss 2.04762:  89%|████████▉ | 25/28 [01:18<00:08,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5944[0m
[32m  eval_f1 = 0.2133[0m
[32m  eval_mcc = 0.5732[0m
[32m  eval_precision = 0.319[0m
[32m  eval_recall = 0.1999[0m
[32m  ********************[0m
[32m  Best f1:0.2133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5732[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04762:  93%|█████████▎| 26/28 [01:23<00:07,  3.73s/it]epoch 1 loss 2.03893:  93%|█████████▎| 26/28 [01:24<00:07,  3.73s/it]epoch 1 loss 2.03893:  96%|█████████▋| 27/28 [01:24<00:02,  2.74s/it]epoch 1 loss 2.02241:  96%|█████████▋| 27/28 [01:24<00:02,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5994[0m
[32m  eval_f1 = 0.23[0m
[32m  eval_mcc = 0.5798[0m
[32m  eval_precision = 0.3301[0m
[32m  eval_recall = 0.214[0m
[32m  ********************[0m
[32m  Best f1:0.23[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5798[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02241: 100%|██████████| 28/28 [01:30<00:00,  3.81s/it]epoch 1 loss 2.02241: 100%|██████████| 28/28 [01:30<00:00,  3.23s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.60879:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.60879:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 2 loss 1.66062:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6023[0m
[32m  eval_f1 = 0.239[0m
[32m  eval_mcc = 0.5829[0m
[32m  eval_precision = 0.3325[0m
[32m  eval_recall = 0.2214[0m
[32m  ********************[0m
[32m  Best f1:0.239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.66062:   7%|▋         | 2/28 [00:08<02:06,  4.86s/it]epoch 2 loss 1.68487:   7%|▋         | 2/28 [00:08<02:06,  4.86s/it]epoch 2 loss 1.68487:  11%|█         | 3/28 [00:08<01:11,  2.84s/it]epoch 2 loss 1.65436:  11%|█         | 3/28 [00:09<01:11,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.604[0m
[32m  eval_f1 = 0.2452[0m
[32m  eval_mcc = 0.5836[0m
[32m  eval_precision = 0.3295[0m
[32m  eval_recall = 0.2281[0m
[32m  ********************[0m
[32m  Best f1:0.2452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.65436:  14%|█▍        | 4/28 [00:15<01:43,  4.31s/it]epoch 2 loss 1.65519:  14%|█▍        | 4/28 [00:15<01:43,  4.31s/it]epoch 2 loss 1.65519:  18%|█▊        | 5/28 [00:15<01:06,  2.91s/it]epoch 2 loss 1.65789:  18%|█▊        | 5/28 [00:16<01:06,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6066[0m
[32m  eval_f1 = 0.2484[0m
[32m  eval_mcc = 0.5858[0m
[32m  eval_precision = 0.3321[0m
[32m  eval_recall = 0.2309[0m
[32m  ********************[0m
[32m  Best f1:0.2484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5858[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.65789:  21%|██▏       | 6/28 [00:27<02:08,  5.86s/it]epoch 2 loss 1.64476:  21%|██▏       | 6/28 [00:27<02:08,  5.86s/it]epoch 2 loss 1.64476:  25%|██▌       | 7/28 [00:27<01:25,  4.08s/it]epoch 2 loss 1.6329:  25%|██▌       | 7/28 [00:28<01:25,  4.08s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.609[0m
[32m  eval_f1 = 0.2515[0m
[32m  eval_mcc = 0.5871[0m
[32m  eval_precision = 0.3326[0m
[32m  eval_recall = 0.2339[0m
[32m  ********************[0m
[32m  Best f1:0.2515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.6329:  29%|██▊       | 8/28 [00:38<02:03,  6.16s/it]epoch 2 loss 1.63303:  29%|██▊       | 8/28 [00:38<02:03,  6.16s/it]epoch 2 loss 1.63303:  32%|███▏      | 9/28 [00:38<01:22,  4.36s/it]epoch 2 loss 1.6315:  32%|███▏      | 9/28 [00:39<01:22,  4.36s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6123[0m
[32m  eval_f1 = 0.2538[0m
[32m  eval_mcc = 0.5898[0m
[32m  eval_precision = 0.344[0m
[32m  eval_recall = 0.2364[0m
[32m  ********************[0m
[32m  Best f1:0.2538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.6315:  36%|███▌      | 10/28 [00:50<01:56,  6.48s/it]epoch 2 loss 1.62774:  36%|███▌      | 10/28 [00:50<01:56,  6.48s/it]epoch 2 loss 1.62774:  39%|███▉      | 11/28 [00:50<01:18,  4.62s/it]epoch 2 loss 1.62539:  39%|███▉      | 11/28 [00:50<01:18,  4.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6152[0m
[32m  eval_f1 = 0.258[0m
[32m  eval_mcc = 0.5929[0m
[32m  eval_precision = 0.3439[0m
[32m  eval_recall = 0.2403[0m
[32m  ********************[0m
[32m  Best f1:0.258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62539:  43%|████▎     | 12/28 [01:01<01:44,  6.54s/it]epoch 2 loss 1.62282:  43%|████▎     | 12/28 [01:01<01:44,  6.54s/it]epoch 2 loss 1.62282:  46%|████▋     | 13/28 [01:01<01:10,  4.68s/it]epoch 2 loss 1.61964:  46%|████▋     | 13/28 [01:02<01:10,  4.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6165[0m
[32m  eval_f1 = 0.2598[0m
[32m  eval_mcc = 0.5944[0m
[32m  eval_precision = 0.3428[0m
[32m  eval_recall = 0.2426[0m
[32m  ********************[0m
[32m  Best f1:0.2598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5944[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61964:  50%|█████     | 14/28 [01:10<01:23,  5.93s/it]epoch 2 loss 1.6146:  50%|█████     | 14/28 [01:11<01:23,  5.93s/it] epoch 2 loss 1.6146:  54%|█████▎    | 15/28 [01:11<00:55,  4.27s/it]epoch 2 loss 1.60166:  54%|█████▎    | 15/28 [01:11<00:55,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6172[0m
[32m  eval_f1 = 0.2614[0m
[32m  eval_mcc = 0.5954[0m
[32m  eval_precision = 0.3453[0m
[32m  eval_recall = 0.2449[0m
[32m  ********************[0m
[32m  Best f1:0.2614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5954[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60166:  57%|█████▋    | 16/28 [01:21<01:13,  6.09s/it]epoch 2 loss 1.5957:  57%|█████▋    | 16/28 [01:21<01:13,  6.09s/it] epoch 2 loss 1.5957:  61%|██████    | 17/28 [01:21<00:48,  4.38s/it]epoch 2 loss 1.59395:  61%|██████    | 17/28 [01:22<00:48,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6208[0m
[32m  eval_f1 = 0.2667[0m
[32m  eval_mcc = 0.5996[0m
[32m  eval_precision = 0.3593[0m
[32m  eval_recall = 0.2492[0m
[32m  ********************[0m
[32m  Best f1:0.2667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59395:  64%|██████▍   | 18/28 [01:29<00:55,  5.52s/it]epoch 2 loss 1.59478:  64%|██████▍   | 18/28 [01:30<00:55,  5.52s/it]epoch 2 loss 1.59478:  68%|██████▊   | 19/28 [01:30<00:35,  3.99s/it]epoch 2 loss 1.59104:  68%|██████▊   | 19/28 [01:30<00:35,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6218[0m
[32m  eval_f1 = 0.2693[0m
[32m  eval_mcc = 0.6021[0m
[32m  eval_precision = 0.3638[0m
[32m  eval_recall = 0.2507[0m
[32m  ********************[0m
[32m  Best f1:0.2693[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59104:  71%|███████▏  | 20/28 [01:40<00:46,  5.84s/it]epoch 2 loss 1.57585:  71%|███████▏  | 20/28 [01:40<00:46,  5.84s/it]epoch 2 loss 1.57585:  75%|███████▌  | 21/28 [01:40<00:29,  4.21s/it]epoch 2 loss 1.56982:  75%|███████▌  | 21/28 [01:41<00:29,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6211[0m
[32m  eval_f1 = 0.2698[0m
[32m  eval_mcc = 0.6032[0m
[32m  eval_precision = 0.3738[0m
[32m  eval_recall = 0.2508[0m
[32m  ********************[0m
[32m  Best f1:0.2698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56982:  79%|███████▊  | 22/28 [01:49<00:32,  5.37s/it]epoch 2 loss 1.56373:  79%|███████▊  | 22/28 [01:49<00:32,  5.37s/it]epoch 2 loss 1.56373:  82%|████████▏ | 23/28 [01:49<00:19,  3.88s/it]epoch 2 loss 1.56764:  82%|████████▏ | 23/28 [01:49<00:19,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6229[0m
[32m  eval_f1 = 0.2736[0m
[32m  eval_mcc = 0.6042[0m
[32m  eval_precision = 0.3718[0m
[32m  eval_recall = 0.2541[0m
[32m  ********************[0m
[32m  Best f1:0.2736[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56764:  86%|████████▌ | 24/28 [01:59<00:23,  5.80s/it]epoch 2 loss 1.55931:  86%|████████▌ | 24/28 [02:00<00:23,  5.80s/it]epoch 2 loss 1.55931:  89%|████████▉ | 25/28 [02:00<00:12,  4.19s/it]epoch 2 loss 1.55547:  89%|████████▉ | 25/28 [02:00<00:12,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.624[0m
[32m  eval_f1 = 0.2749[0m
[32m  eval_mcc = 0.6033[0m
[32m  eval_precision = 0.3718[0m
[32m  eval_recall = 0.2562[0m
[32m  ********************[0m
[32m  Best f1:0.2749[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.55547:  93%|█████████▎| 26/28 [02:06<00:09,  4.93s/it]epoch 2 loss 1.55943:  93%|█████████▎| 26/28 [02:07<00:09,  4.93s/it]epoch 2 loss 1.55943:  96%|█████████▋| 27/28 [02:07<00:03,  3.58s/it]epoch 2 loss 1.55487:  96%|█████████▋| 27/28 [02:07<00:03,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.626[0m
[32m  eval_f1 = 0.2779[0m
[32m  eval_mcc = 0.604[0m
[32m  eval_precision = 0.3755[0m
[32m  eval_recall = 0.2585[0m
[32m  ********************[0m
[32m  Best f1:0.2779[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.55487: 100%|██████████| 28/28 [02:13<00:00,  4.40s/it]epoch 2 loss 1.55487: 100%|██████████| 28/28 [02:13<00:00,  4.77s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.30346:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.30346:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 3 loss 1.35494:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6277[0m
[32m  eval_f1 = 0.2795[0m
[32m  eval_mcc = 0.6055[0m
[32m  eval_precision = 0.3739[0m
[32m  eval_recall = 0.26[0m
[32m  ********************[0m
[32m  Best f1:0.2795[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35494:   7%|▋         | 2/28 [00:08<02:06,  4.87s/it]epoch 3 loss 1.36198:   7%|▋         | 2/28 [00:08<02:06,  4.87s/it]epoch 3 loss 1.36198:  11%|█         | 3/28 [00:08<01:10,  2.84s/it]epoch 3 loss 1.38403:  11%|█         | 3/28 [00:09<01:10,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6294[0m
[32m  eval_f1 = 0.2851[0m
[32m  eval_mcc = 0.6073[0m
[32m  eval_precision = 0.3844[0m
[32m  eval_recall = 0.2639[0m
[32m  ********************[0m
[32m  Best f1:0.2851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38403:  14%|█▍        | 4/28 [00:18<02:15,  5.67s/it]epoch 3 loss 1.41246:  14%|█▍        | 4/28 [00:19<02:15,  5.67s/it]epoch 3 loss 1.41246:  18%|█▊        | 5/28 [00:19<01:26,  3.78s/it]epoch 3 loss 1.41848:  18%|█▊        | 5/28 [00:19<01:26,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6314[0m
[32m  eval_f1 = 0.2883[0m
[32m  eval_mcc = 0.6096[0m
[32m  eval_precision = 0.3848[0m
[32m  eval_recall = 0.2671[0m
[32m  ********************[0m
[32m  Best f1:0.2883[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41848:  21%|██▏       | 6/28 [00:28<02:02,  5.58s/it]epoch 3 loss 1.40713:  21%|██▏       | 6/28 [00:28<02:02,  5.58s/it]epoch 3 loss 1.40713:  25%|██▌       | 7/28 [00:28<01:21,  3.90s/it]epoch 3 loss 1.39454:  25%|██▌       | 7/28 [00:29<01:21,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6329[0m
[32m  eval_f1 = 0.2881[0m
[32m  eval_mcc = 0.6117[0m
[32m  eval_precision = 0.3864[0m
[32m  eval_recall = 0.2668[0m
[32m  ********************[0m
[32m  Best MCC:0.6117[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39454:  29%|██▊       | 8/28 [00:33<01:25,  4.30s/it]epoch 3 loss 1.41529:  29%|██▊       | 8/28 [00:34<01:25,  4.30s/it]epoch 3 loss 1.41529:  32%|███▏      | 9/28 [00:34<00:58,  3.08s/it]epoch 3 loss 1.42492:  32%|███▏      | 9/28 [00:34<00:58,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6337[0m
[32m  eval_f1 = 0.2881[0m
[32m  eval_mcc = 0.6134[0m
[32m  eval_precision = 0.3865[0m
[32m  eval_recall = 0.2669[0m
[32m  ********************[0m
[32m  Best MCC:0.6134[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42492:  36%|███▌      | 10/28 [00:40<01:11,  3.97s/it]epoch 3 loss 1.44069:  36%|███▌      | 10/28 [00:40<01:11,  3.97s/it]epoch 3 loss 1.44069:  39%|███▉      | 11/28 [00:40<00:48,  2.88s/it]epoch 3 loss 1.45663:  39%|███▉      | 11/28 [00:41<00:48,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6346[0m
[32m  eval_f1 = 0.2888[0m
[32m  eval_mcc = 0.6151[0m
[32m  eval_precision = 0.3866[0m
[32m  eval_recall = 0.2676[0m
[32m  ********************[0m
[32m  Best f1:0.2888[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45663:  43%|████▎     | 12/28 [00:47<01:03,  3.98s/it]epoch 3 loss 1.4555:  43%|████▎     | 12/28 [00:47<01:03,  3.98s/it] epoch 3 loss 1.4555:  46%|████▋     | 13/28 [00:47<00:43,  2.90s/it]epoch 3 loss 1.45039:  46%|████▋     | 13/28 [00:48<00:43,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6349[0m
[32m  eval_f1 = 0.2911[0m
[32m  eval_mcc = 0.6158[0m
[32m  eval_precision = 0.393[0m
[32m  eval_recall = 0.2698[0m
[32m  ********************[0m
[32m  Best f1:0.2911[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45039:  50%|█████     | 14/28 [00:54<00:55,  3.96s/it]epoch 3 loss 1.4492:  50%|█████     | 14/28 [00:54<00:55,  3.96s/it] epoch 3 loss 1.4492:  54%|█████▎    | 15/28 [00:54<00:37,  2.90s/it]epoch 3 loss 1.44457:  54%|█████▎    | 15/28 [00:54<00:37,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6354[0m
[32m  eval_f1 = 0.2921[0m
[32m  eval_mcc = 0.6163[0m
[32m  eval_precision = 0.3911[0m
[32m  eval_recall = 0.2711[0m
[32m  ********************[0m
[32m  Best f1:0.2921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6163[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44457:  57%|█████▋    | 16/28 [01:00<00:44,  3.73s/it]epoch 3 loss 1.44434:  57%|█████▋    | 16/28 [01:00<00:44,  3.73s/it]epoch 3 loss 1.44434:  61%|██████    | 17/28 [01:00<00:30,  2.73s/it]epoch 3 loss 1.44867:  61%|██████    | 17/28 [01:00<00:30,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6356[0m
[32m  eval_f1 = 0.2938[0m
[32m  eval_mcc = 0.6161[0m
[32m  eval_precision = 0.3964[0m
[32m  eval_recall = 0.2725[0m
[32m  ********************[0m
[32m  Best f1:0.2938[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.44867:  64%|██████▍   | 18/28 [01:05<00:34,  3.40s/it]epoch 3 loss 1.45094:  64%|██████▍   | 18/28 [01:05<00:34,  3.40s/it]epoch 3 loss 1.45094:  68%|██████▊   | 19/28 [01:05<00:22,  2.50s/it]epoch 3 loss 1.44944:  68%|██████▊   | 19/28 [01:06<00:22,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6361[0m
[32m  eval_f1 = 0.2954[0m
[32m  eval_mcc = 0.6164[0m
[32m  eval_precision = 0.4087[0m
[32m  eval_recall = 0.2731[0m
[32m  ********************[0m
[32m  Best f1:0.2954[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44944:  71%|███████▏  | 20/28 [01:12<00:29,  3.68s/it]epoch 3 loss 1.44566:  71%|███████▏  | 20/28 [01:12<00:29,  3.68s/it]epoch 3 loss 1.44566:  75%|███████▌  | 21/28 [01:12<00:18,  2.70s/it]epoch 3 loss 1.44044:  75%|███████▌  | 21/28 [01:13<00:18,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6358[0m
[32m  eval_f1 = 0.2968[0m
[32m  eval_mcc = 0.6159[0m
[32m  eval_precision = 0.41[0m
[32m  eval_recall = 0.274[0m
[32m  ********************[0m
[32m  Best f1:0.2968[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.44044:  79%|███████▊  | 22/28 [01:17<00:20,  3.41s/it]epoch 3 loss 1.43662:  79%|███████▊  | 22/28 [01:18<00:20,  3.41s/it]epoch 3 loss 1.43662:  82%|████████▏ | 23/28 [01:18<00:12,  2.51s/it]epoch 3 loss 1.43586:  82%|████████▏ | 23/28 [01:18<00:12,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6365[0m
[32m  eval_f1 = 0.2965[0m
[32m  eval_mcc = 0.6164[0m
[32m  eval_precision = 0.4033[0m
[32m  eval_recall = 0.2733[0m
[32m  ********************[0m
[32m  Best MCC:0.6164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43586:  86%|████████▌ | 24/28 [01:23<00:13,  3.27s/it]epoch 3 loss 1.43715:  86%|████████▌ | 24/28 [01:23<00:13,  3.27s/it]epoch 3 loss 1.43715:  89%|████████▉ | 25/28 [01:23<00:07,  2.41s/it]epoch 3 loss 1.43676:  89%|████████▉ | 25/28 [01:24<00:07,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6368[0m
[32m  eval_f1 = 0.2969[0m
[32m  eval_mcc = 0.6165[0m
[32m  eval_precision = 0.4042[0m
[32m  eval_recall = 0.2736[0m
[32m  ********************[0m
[32m  Best f1:0.2969[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43676:  93%|█████████▎| 26/28 [01:30<00:07,  3.64s/it]epoch 3 loss 1.44007:  93%|█████████▎| 26/28 [01:30<00:07,  3.64s/it]epoch 3 loss 1.44007:  96%|█████████▋| 27/28 [01:30<00:02,  2.67s/it]epoch 3 loss 1.43652:  96%|█████████▋| 27/28 [01:30<00:02,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6381[0m
[32m  eval_f1 = 0.2989[0m
[32m  eval_mcc = 0.6177[0m
[32m  eval_precision = 0.4061[0m
[32m  eval_recall = 0.2753[0m
[32m  ********************[0m
[32m  Best f1:0.2989[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6177[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43652: 100%|██████████| 28/28 [01:36<00:00,  3.77s/it]epoch 3 loss 1.43652: 100%|██████████| 28/28 [01:36<00:00,  3.46s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.44287:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.44287:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s]epoch 4 loss 1.48031:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6392[0m
[32m  eval_f1 = 0.3045[0m
[32m  eval_mcc = 0.6188[0m
[32m  eval_precision = 0.4163[0m
[32m  eval_recall = 0.2803[0m
[32m  ********************[0m
[32m  Best f1:0.3045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.48031:   7%|▋         | 2/28 [00:07<01:45,  4.06s/it]epoch 4 loss 1.45832:   7%|▋         | 2/28 [00:07<01:45,  4.06s/it]epoch 4 loss 1.45832:  11%|█         | 3/28 [00:07<01:00,  2.40s/it]epoch 4 loss 1.4391:  11%|█         | 3/28 [00:07<01:00,  2.40s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6399[0m
[32m  eval_f1 = 0.3074[0m
[32m  eval_mcc = 0.6196[0m
[32m  eval_precision = 0.4161[0m
[32m  eval_recall = 0.2831[0m
[32m  ********************[0m
[32m  Best f1:0.3074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.4391:  14%|█▍        | 4/28 [00:13<01:35,  4.00s/it]epoch 4 loss 1.44147:  14%|█▍        | 4/28 [00:14<01:35,  4.00s/it]epoch 4 loss 1.44147:  18%|█▊        | 5/28 [00:14<01:02,  2.71s/it]epoch 4 loss 1.43789:  18%|█▊        | 5/28 [00:14<01:02,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6403[0m
[32m  eval_f1 = 0.3099[0m
[32m  eval_mcc = 0.6204[0m
[32m  eval_precision = 0.4172[0m
[32m  eval_recall = 0.285[0m
[32m  ********************[0m
[32m  Best f1:0.3099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6204[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.43789:  21%|██▏       | 6/28 [00:20<01:28,  4.02s/it]epoch 4 loss 1.42602:  21%|██▏       | 6/28 [00:21<01:28,  4.02s/it]epoch 4 loss 1.42602:  25%|██▌       | 7/28 [00:21<00:59,  2.84s/it]epoch 4 loss 1.41877:  25%|██▌       | 7/28 [00:21<00:59,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6405[0m
[32m  eval_f1 = 0.3106[0m
[32m  eval_mcc = 0.6207[0m
[32m  eval_precision = 0.414[0m
[32m  eval_recall = 0.2862[0m
[32m  ********************[0m
[32m  Best f1:0.3106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41877:  29%|██▊       | 8/28 [00:27<01:16,  3.80s/it]epoch 4 loss 1.4165:  29%|██▊       | 8/28 [00:27<01:16,  3.80s/it] epoch 4 loss 1.4165:  32%|███▏      | 9/28 [00:27<00:52,  2.75s/it]epoch 4 loss 1.4234:  32%|███▏      | 9/28 [00:27<00:52,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6406[0m
[32m  eval_f1 = 0.3106[0m
[32m  eval_mcc = 0.6208[0m
[32m  eval_precision = 0.4131[0m
[32m  eval_recall = 0.2863[0m
[32m  ********************[0m
[32m  Best MCC:0.6208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.4234:  36%|███▌      | 10/28 [00:32<01:02,  3.46s/it]epoch 4 loss 1.42054:  36%|███▌      | 10/28 [00:33<01:02,  3.46s/it]epoch 4 loss 1.42054:  39%|███▉      | 11/28 [00:33<00:42,  2.53s/it]epoch 4 loss 1.42293:  39%|███▉      | 11/28 [00:33<00:42,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6406[0m
[32m  eval_f1 = 0.311[0m
[32m  eval_mcc = 0.6208[0m
[32m  eval_precision = 0.414[0m
[32m  eval_recall = 0.2866[0m
[32m  ********************[0m
[32m  Best f1:0.311[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.42293:  43%|████▎     | 12/28 [00:38<00:53,  3.32s/it]epoch 4 loss 1.42642:  43%|████▎     | 12/28 [00:38<00:53,  3.32s/it]epoch 4 loss 1.42642:  46%|████▋     | 13/28 [00:38<00:36,  2.44s/it]epoch 4 loss 1.41103:  46%|████▋     | 13/28 [00:39<00:36,  2.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6412[0m
[32m  eval_f1 = 0.3108[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.4213[0m
[32m  eval_recall = 0.2865[0m
[32m  ********************[0m
[32m  Best MCC:0.6212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41103:  50%|█████     | 14/28 [00:43<00:43,  3.14s/it]epoch 4 loss 1.4049:  50%|█████     | 14/28 [00:43<00:43,  3.14s/it] epoch 4 loss 1.4049:  54%|█████▎    | 15/28 [00:43<00:30,  2.31s/it]epoch 4 loss 1.40011:  54%|█████▎    | 15/28 [00:44<00:30,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6412[0m
[32m  eval_f1 = 0.3109[0m
[32m  eval_mcc = 0.6211[0m
[32m  eval_precision = 0.4215[0m
[32m  eval_recall = 0.2865[0m

epoch 4 loss 1.40011:  57%|█████▋    | 16/28 [00:47<00:33,  2.76s/it]epoch 4 loss 1.39946:  57%|█████▋    | 16/28 [00:47<00:33,  2.76s/it]epoch 4 loss 1.39946:  61%|██████    | 17/28 [00:47<00:22,  2.05s/it]epoch 4 loss 1.39819:  61%|██████    | 17/28 [00:48<00:22,  2.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6412[0m
[32m  eval_f1 = 0.3105[0m
[32m  eval_mcc = 0.6211[0m
[32m  eval_precision = 0.4188[0m
[32m  eval_recall = 0.2862[0m

epoch 4 loss 1.39819:  64%|██████▍   | 18/28 [00:51<00:25,  2.58s/it]epoch 4 loss 1.40136:  64%|██████▍   | 18/28 [00:52<00:25,  2.58s/it]epoch 4 loss 1.40136:  68%|██████▊   | 19/28 [00:52<00:17,  1.93s/it]epoch 4 loss 1.40064:  68%|██████▊   | 19/28 [00:52<00:17,  1.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6415[0m
[32m  eval_f1 = 0.3108[0m
[32m  eval_mcc = 0.6214[0m
[32m  eval_precision = 0.4193[0m
[32m  eval_recall = 0.2865[0m
[32m  ********************[0m
[32m  Best MCC:0.6214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40064:  71%|███████▏  | 20/28 [00:56<00:22,  2.78s/it]epoch 4 loss 1.39719:  71%|███████▏  | 20/28 [00:57<00:22,  2.78s/it]epoch 4 loss 1.39719:  75%|███████▌  | 21/28 [00:57<00:14,  2.07s/it]epoch 4 loss 1.39848:  75%|███████▌  | 21/28 [00:57<00:14,  2.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6417[0m
[32m  eval_f1 = 0.3107[0m
[32m  eval_mcc = 0.6215[0m
[32m  eval_precision = 0.4197[0m
[32m  eval_recall = 0.2865[0m
[32m  ********************[0m
[32m  Best MCC:0.6215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39848:  79%|███████▊  | 22/28 [01:02<00:17,  2.94s/it]epoch 4 loss 1.39686:  79%|███████▊  | 22/28 [01:02<00:17,  2.94s/it]epoch 4 loss 1.39686:  82%|████████▏ | 23/28 [01:02<00:10,  2.18s/it]epoch 4 loss 1.39359:  82%|████████▏ | 23/28 [01:03<00:10,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6417[0m
[32m  eval_f1 = 0.3108[0m
[32m  eval_mcc = 0.6216[0m
[32m  eval_precision = 0.4201[0m
[32m  eval_recall = 0.2865[0m
[32m  ********************[0m
[32m  Best MCC:0.6216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39359:  86%|████████▌ | 24/28 [01:07<00:12,  3.02s/it]epoch 4 loss 1.39789:  86%|████████▌ | 24/28 [01:08<00:12,  3.02s/it]epoch 4 loss 1.39789:  89%|████████▉ | 25/28 [01:08<00:06,  2.24s/it]epoch 4 loss 1.39722:  89%|████████▉ | 25/28 [01:08<00:06,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6418[0m
[32m  eval_f1 = 0.3107[0m
[32m  eval_mcc = 0.6217[0m
[32m  eval_precision = 0.4201[0m
[32m  eval_recall = 0.2865[0m
[32m  ********************[0m
[32m  Best MCC:0.6217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39722:  93%|█████████▎| 26/28 [01:12<00:05,  2.99s/it]epoch 4 loss 1.39451:  93%|█████████▎| 26/28 [01:13<00:05,  2.99s/it]epoch 4 loss 1.39451:  96%|█████████▋| 27/28 [01:13<00:02,  2.22s/it]epoch 4 loss 1.40247:  96%|█████████▋| 27/28 [01:13<00:02,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.642[0m
[32m  eval_f1 = 0.3106[0m
[32m  eval_mcc = 0.6219[0m
[32m  eval_precision = 0.4198[0m
[32m  eval_recall = 0.2865[0m
[32m  ********************[0m
[32m  Best MCC:0.6219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40247: 100%|██████████| 28/28 [01:18<00:00,  3.01s/it]epoch 4 loss 1.40247: 100%|██████████| 28/28 [01:18<00:00,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6406[0m
[32m  eval_f1 = 0.311[0m
[32m  eval_mcc = 0.6208[0m
[32m  eval_precision = 0.414[0m
[32m  eval_recall = 0.2866[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.71it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s]100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6228[0m
[32m  eval_f1 = 0.2467[0m
[32m  eval_mcc = 0.6028[0m
[32m  eval_precision = 0.3266[0m
[32m  eval_recall = 0.23[0m

