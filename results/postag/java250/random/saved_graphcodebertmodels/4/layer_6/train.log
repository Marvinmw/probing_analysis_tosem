[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=6, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.79822:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.79822:   4%|▎         | 1/28 [00:00<00:21,  1.26it/s]epoch 0 loss 5.79842:   4%|▎         | 1/28 [00:01<00:21,  1.26it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0047[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = 0.0016[0m
[32m  eval_precision = 0.0014[0m
[32m  eval_recall = 0.0016[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.79842:   7%|▋         | 2/28 [00:06<01:31,  3.52s/it]epoch 0 loss 5.78846:   7%|▋         | 2/28 [00:06<01:31,  3.52s/it]epoch 0 loss 5.78846:  11%|█         | 3/28 [00:06<00:52,  2.11s/it]epoch 0 loss 5.77654:  11%|█         | 3/28 [00:07<00:52,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0081[0m
[32m  eval_f1 = 0.0014[0m
[32m  eval_mcc = 0.0028[0m
[32m  eval_precision = 0.0071[0m
[32m  eval_recall = 0.0025[0m
[32m  ********************[0m
[32m  Best f1:0.0014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.77654:  14%|█▍        | 4/28 [00:13<01:36,  4.02s/it]epoch 0 loss 5.75069:  14%|█▍        | 4/28 [00:14<01:36,  4.02s/it]epoch 0 loss 5.75069:  18%|█▊        | 5/28 [00:14<01:02,  2.72s/it]epoch 0 loss 5.71971:  18%|█▊        | 5/28 [00:14<01:02,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0164[0m
[32m  eval_f1 = 0.0021[0m
[32m  eval_mcc = 0.0046[0m
[32m  eval_precision = 0.008[0m
[32m  eval_recall = 0.0047[0m
[32m  ********************[0m
[32m  Best f1:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.71971:  21%|██▏       | 6/28 [00:20<01:31,  4.14s/it]epoch 0 loss 5.68482:  21%|██▏       | 6/28 [00:21<01:31,  4.14s/it]epoch 0 loss 5.68482:  25%|██▌       | 7/28 [00:21<01:01,  2.93s/it]epoch 0 loss 5.63758:  25%|██▌       | 7/28 [00:21<01:01,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0291[0m
[32m  eval_f1 = 0.0029[0m
[32m  eval_mcc = 0.0083[0m
[32m  eval_precision = 0.0058[0m
[32m  eval_recall = 0.0073[0m
[32m  ********************[0m
[32m  Best f1:0.0029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.63758:  29%|██▊       | 8/28 [00:28<01:23,  4.19s/it]epoch 0 loss 5.58645:  29%|██▊       | 8/28 [00:28<01:23,  4.19s/it]epoch 0 loss 5.58645:  32%|███▏      | 9/28 [00:28<00:57,  3.01s/it]epoch 0 loss 5.52897:  32%|███▏      | 9/28 [00:29<00:57,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0417[0m
[32m  eval_f1 = 0.006[0m
[32m  eval_mcc = 0.0159[0m
[32m  eval_precision = 0.0097[0m
[32m  eval_recall = 0.0125[0m
[32m  ********************[0m
[32m  Best f1:0.006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.52897:  36%|███▌      | 10/28 [00:35<01:15,  4.21s/it]epoch 0 loss 5.46603:  36%|███▌      | 10/28 [00:35<01:15,  4.21s/it]epoch 0 loss 5.46603:  39%|███▉      | 11/28 [00:35<00:51,  3.05s/it]epoch 0 loss 5.39636:  39%|███▉      | 11/28 [00:36<00:51,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0538[0m
[32m  eval_f1 = 0.0114[0m
[32m  eval_mcc = 0.0268[0m
[32m  eval_precision = 0.035[0m
[32m  eval_recall = 0.018[0m
[32m  ********************[0m
[32m  Best f1:0.0114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.39636:  43%|████▎     | 12/28 [00:45<01:22,  5.13s/it]epoch 0 loss 5.32406:  43%|████▎     | 12/28 [00:46<01:22,  5.13s/it]epoch 0 loss 5.32406:  46%|████▋     | 13/28 [00:46<00:55,  3.70s/it]epoch 0 loss 5.24961:  46%|████▋     | 13/28 [00:46<00:55,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0796[0m
[32m  eval_f1 = 0.0262[0m
[32m  eval_mcc = 0.0511[0m
[32m  eval_precision = 0.0549[0m
[32m  eval_recall = 0.0315[0m
[32m  ********************[0m
[32m  Best f1:0.0262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0511[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.24961:  50%|█████     | 14/28 [00:54<01:10,  5.07s/it]epoch 0 loss 5.17363:  50%|█████     | 14/28 [00:54<01:10,  5.07s/it]epoch 0 loss 5.17363:  54%|█████▎    | 15/28 [00:54<00:47,  3.67s/it]epoch 0 loss 5.09457:  54%|█████▎    | 15/28 [00:55<00:47,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.128[0m
[32m  eval_f1 = 0.0438[0m
[32m  eval_mcc = 0.0936[0m
[32m  eval_precision = 0.0667[0m
[32m  eval_recall = 0.0466[0m
[32m  ********************[0m
[32m  Best f1:0.0438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0936[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.09457:  57%|█████▋    | 16/28 [01:03<01:00,  5.07s/it]epoch 0 loss 5.01554:  57%|█████▋    | 16/28 [01:03<01:00,  5.07s/it]epoch 0 loss 5.01554:  61%|██████    | 17/28 [01:03<00:40,  3.67s/it]epoch 0 loss 4.9371:  61%|██████    | 17/28 [01:04<00:40,  3.67s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.198[0m
[32m  eval_f1 = 0.0565[0m
[32m  eval_mcc = 0.1518[0m
[32m  eval_precision = 0.089[0m
[32m  eval_recall = 0.0551[0m
[32m  ********************[0m
[32m  Best f1:0.0565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.9371:  64%|██████▍   | 18/28 [01:14<00:57,  5.70s/it]epoch 0 loss 4.85461:  64%|██████▍   | 18/28 [01:14<00:57,  5.70s/it]epoch 0 loss 4.85461:  68%|██████▊   | 19/28 [01:14<00:37,  4.12s/it]epoch 0 loss 4.77735:  68%|██████▊   | 19/28 [01:14<00:37,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2635[0m
[32m  eval_f1 = 0.0593[0m
[32m  eval_mcc = 0.2086[0m
[32m  eval_precision = 0.0909[0m
[32m  eval_recall = 0.0552[0m
[32m  ********************[0m
[32m  Best f1:0.0593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.77735:  71%|███████▏  | 20/28 [01:24<00:47,  5.90s/it]epoch 0 loss 4.7024:  71%|███████▏  | 20/28 [01:25<00:47,  5.90s/it] epoch 0 loss 4.7024:  75%|███████▌  | 21/28 [01:25<00:29,  4.26s/it]epoch 0 loss 4.63088:  75%|███████▌  | 21/28 [01:25<00:29,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3184[0m
[32m  eval_f1 = 0.06[0m
[32m  eval_mcc = 0.2674[0m
[32m  eval_precision = 0.1102[0m
[32m  eval_recall = 0.0597[0m
[32m  ********************[0m
[32m  Best f1:0.06[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2674[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.63088:  79%|███████▊  | 22/28 [01:33<00:33,  5.60s/it]epoch 0 loss 4.55453:  79%|███████▊  | 22/28 [01:34<00:33,  5.60s/it]epoch 0 loss 4.55453:  82%|████████▏ | 23/28 [01:34<00:20,  4.05s/it]epoch 0 loss 4.48505:  82%|████████▏ | 23/28 [01:34<00:20,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3564[0m
[32m  eval_f1 = 0.0658[0m
[32m  eval_mcc = 0.309[0m
[32m  eval_precision = 0.0998[0m
[32m  eval_recall = 0.0669[0m
[32m  ********************[0m
[32m  Best f1:0.0658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.48505:  86%|████████▌ | 24/28 [01:43<00:23,  5.78s/it]epoch 0 loss 4.41719:  86%|████████▌ | 24/28 [01:44<00:23,  5.78s/it]epoch 0 loss 4.41719:  89%|████████▉ | 25/28 [01:44<00:12,  4.17s/it]epoch 0 loss 4.34939:  89%|████████▉ | 25/28 [01:44<00:12,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3723[0m
[32m  eval_f1 = 0.0745[0m
[32m  eval_mcc = 0.3282[0m
[32m  eval_precision = 0.1246[0m
[32m  eval_recall = 0.0745[0m
[32m  ********************[0m
[32m  Best f1:0.0745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.34939:  93%|█████████▎| 26/28 [01:51<00:10,  5.01s/it]epoch 0 loss 4.28605:  93%|█████████▎| 26/28 [01:51<00:10,  5.01s/it]epoch 0 loss 4.28605:  96%|█████████▋| 27/28 [01:51<00:03,  3.63s/it]epoch 0 loss 4.22008:  96%|█████████▋| 27/28 [01:51<00:03,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4184[0m
[32m  eval_f1 = 0.107[0m
[32m  eval_mcc = 0.3827[0m
[32m  eval_precision = 0.1667[0m
[32m  eval_recall = 0.0996[0m
[32m  ********************[0m
[32m  Best f1:0.107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.22008: 100%|██████████| 28/28 [01:58<00:00,  4.42s/it]epoch 0 loss 4.22008: 100%|██████████| 28/28 [01:58<00:00,  4.22s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.47103:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.47103:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 1 loss 2.46518:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4658[0m
[32m  eval_f1 = 0.1288[0m
[32m  eval_mcc = 0.4343[0m
[32m  eval_precision = 0.1706[0m
[32m  eval_recall = 0.123[0m
[32m  ********************[0m
[32m  Best f1:0.1288[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.46518:   7%|▋         | 2/28 [00:06<01:44,  4.04s/it]epoch 1 loss 2.43853:   7%|▋         | 2/28 [00:07<01:44,  4.04s/it]epoch 1 loss 2.43853:  11%|█         | 3/28 [00:07<00:59,  2.39s/it]epoch 1 loss 2.42441:  11%|█         | 3/28 [00:07<00:59,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5169[0m
[32m  eval_f1 = 0.1506[0m
[32m  eval_mcc = 0.4876[0m
[32m  eval_precision = 0.1885[0m
[32m  eval_recall = 0.1461[0m
[32m  ********************[0m
[32m  Best f1:0.1506[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4876[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42441:  14%|█▍        | 4/28 [00:18<02:17,  5.73s/it]epoch 1 loss 2.36627:  14%|█▍        | 4/28 [00:18<02:17,  5.73s/it]epoch 1 loss 2.36627:  18%|█▊        | 5/28 [00:18<01:27,  3.82s/it]epoch 1 loss 2.31035:  18%|█▊        | 5/28 [00:19<01:27,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5422[0m
[32m  eval_f1 = 0.1641[0m
[32m  eval_mcc = 0.5136[0m
[32m  eval_precision = 0.1945[0m
[32m  eval_recall = 0.1595[0m
[32m  ********************[0m
[32m  Best f1:0.1641[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.31035:  21%|██▏       | 6/28 [00:29<02:14,  6.11s/it]epoch 1 loss 2.27883:  21%|██▏       | 6/28 [00:29<02:14,  6.11s/it]epoch 1 loss 2.27883:  25%|██▌       | 7/28 [00:29<01:29,  4.25s/it]epoch 1 loss 2.22842:  25%|██▌       | 7/28 [00:30<01:29,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5579[0m
[32m  eval_f1 = 0.1692[0m
[32m  eval_mcc = 0.5339[0m
[32m  eval_precision = 0.1954[0m
[32m  eval_recall = 0.1648[0m
[32m  ********************[0m
[32m  Best f1:0.1692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.22842:  29%|██▊       | 8/28 [00:39<01:58,  5.95s/it]epoch 1 loss 2.18431:  29%|██▊       | 8/28 [00:39<01:58,  5.95s/it]epoch 1 loss 2.18431:  32%|███▏      | 9/28 [00:39<01:20,  4.22s/it]epoch 1 loss 2.16257:  32%|███▏      | 9/28 [00:40<01:20,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5653[0m
[32m  eval_f1 = 0.1729[0m
[32m  eval_mcc = 0.5438[0m
[32m  eval_precision = 0.2159[0m
[32m  eval_recall = 0.1662[0m
[32m  ********************[0m
[32m  Best f1:0.1729[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16257:  36%|███▌      | 10/28 [00:49<01:49,  6.08s/it]epoch 1 loss 2.1403:  36%|███▌      | 10/28 [00:50<01:49,  6.08s/it] epoch 1 loss 2.1403:  39%|███▉      | 11/28 [00:50<01:13,  4.35s/it]epoch 1 loss 2.12355:  39%|███▉      | 11/28 [00:50<01:13,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5704[0m
[32m  eval_f1 = 0.176[0m
[32m  eval_mcc = 0.5476[0m
[32m  eval_precision = 0.2343[0m
[32m  eval_recall = 0.1677[0m
[32m  ********************[0m
[32m  Best f1:0.176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12355:  43%|████▎     | 12/28 [00:58<01:26,  5.43s/it]epoch 1 loss 2.09552:  43%|████▎     | 12/28 [00:58<01:26,  5.43s/it]epoch 1 loss 2.09552:  46%|████▋     | 13/28 [00:58<00:58,  3.91s/it]epoch 1 loss 2.07856:  46%|████▋     | 13/28 [00:59<00:58,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5774[0m
[32m  eval_f1 = 0.1864[0m
[32m  eval_mcc = 0.554[0m
[32m  eval_precision = 0.2463[0m
[32m  eval_recall = 0.1746[0m
[32m  ********************[0m
[32m  Best f1:0.1864[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07856:  50%|█████     | 14/28 [01:08<01:20,  5.77s/it]epoch 1 loss 2.07026:  50%|█████     | 14/28 [01:09<01:20,  5.77s/it]epoch 1 loss 2.07026:  54%|█████▎    | 15/28 [01:09<00:54,  4.16s/it]epoch 1 loss 2.0528:  54%|█████▎    | 15/28 [01:09<00:54,  4.16s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5813[0m
[32m  eval_f1 = 0.1985[0m
[32m  eval_mcc = 0.5567[0m
[32m  eval_precision = 0.2832[0m
[32m  eval_recall = 0.1845[0m
[32m  ********************[0m
[32m  Best f1:0.1985[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0528:  57%|█████▋    | 16/28 [01:17<01:04,  5.35s/it]epoch 1 loss 2.03175:  57%|█████▋    | 16/28 [01:17<01:04,  5.35s/it]epoch 1 loss 2.03175:  61%|██████    | 17/28 [01:17<00:42,  3.87s/it]epoch 1 loss 2.01558:  61%|██████    | 17/28 [01:18<00:42,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5846[0m
[32m  eval_f1 = 0.216[0m
[32m  eval_mcc = 0.5597[0m
[32m  eval_precision = 0.324[0m
[32m  eval_recall = 0.2003[0m
[32m  ********************[0m
[32m  Best f1:0.216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01558:  64%|██████▍   | 18/28 [01:27<00:57,  5.70s/it]epoch 1 loss 1.99236:  64%|██████▍   | 18/28 [01:28<00:57,  5.70s/it]epoch 1 loss 1.99236:  68%|██████▊   | 19/28 [01:28<00:37,  4.12s/it]epoch 1 loss 1.978:  68%|██████▊   | 19/28 [01:28<00:37,  4.12s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5909[0m
[32m  eval_f1 = 0.231[0m
[32m  eval_mcc = 0.5665[0m
[32m  eval_precision = 0.3263[0m
[32m  eval_recall = 0.2138[0m
[32m  ********************[0m
[32m  Best f1:0.231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.978:  71%|███████▏  | 20/28 [01:36<00:42,  5.37s/it]epoch 1 loss 1.96195:  71%|███████▏  | 20/28 [01:36<00:42,  5.37s/it]epoch 1 loss 1.96195:  75%|███████▌  | 21/28 [01:36<00:27,  3.88s/it]epoch 1 loss 1.9547:  75%|███████▌  | 21/28 [01:37<00:27,  3.88s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5963[0m
[32m  eval_f1 = 0.2337[0m
[32m  eval_mcc = 0.5727[0m
[32m  eval_precision = 0.3248[0m
[32m  eval_recall = 0.2173[0m
[32m  ********************[0m
[32m  Best f1:0.2337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9547:  79%|███████▊  | 22/28 [01:46<00:34,  5.71s/it]epoch 1 loss 1.93756:  79%|███████▊  | 22/28 [01:47<00:34,  5.71s/it]epoch 1 loss 1.93756:  82%|████████▏ | 23/28 [01:47<00:20,  4.12s/it]epoch 1 loss 1.92305:  82%|████████▏ | 23/28 [01:47<00:20,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6045[0m
[32m  eval_f1 = 0.2444[0m
[32m  eval_mcc = 0.5818[0m
[32m  eval_precision = 0.3392[0m
[32m  eval_recall = 0.2271[0m
[32m  ********************[0m
[32m  Best f1:0.2444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92305:  86%|████████▌ | 24/28 [01:56<00:22,  5.60s/it]epoch 1 loss 1.91266:  86%|████████▌ | 24/28 [01:56<00:22,  5.60s/it]epoch 1 loss 1.91266:  89%|████████▉ | 25/28 [01:56<00:12,  4.04s/it]epoch 1 loss 1.89351:  89%|████████▉ | 25/28 [01:57<00:12,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6088[0m
[32m  eval_f1 = 0.2507[0m
[32m  eval_mcc = 0.5874[0m
[32m  eval_precision = 0.3388[0m
[32m  eval_recall = 0.2341[0m
[32m  ********************[0m
[32m  Best f1:0.2507[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5874[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89351:  93%|█████████▎| 26/28 [02:06<00:11,  5.84s/it]epoch 1 loss 1.88573:  93%|█████████▎| 26/28 [02:07<00:11,  5.84s/it]epoch 1 loss 1.88573:  96%|█████████▋| 27/28 [02:07<00:04,  4.22s/it]epoch 1 loss 1.86983:  96%|█████████▋| 27/28 [02:07<00:04,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6125[0m
[32m  eval_f1 = 0.2567[0m
[32m  eval_mcc = 0.5925[0m
[32m  eval_precision = 0.3498[0m
[32m  eval_recall = 0.2383[0m
[32m  ********************[0m
[32m  Best f1:0.2567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86983: 100%|██████████| 28/28 [02:16<00:00,  5.71s/it]epoch 1 loss 1.86983: 100%|██████████| 28/28 [02:16<00:00,  4.87s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.48255:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.48255:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 2 loss 1.53602:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6154[0m
[32m  eval_f1 = 0.2611[0m
[32m  eval_mcc = 0.5964[0m
[32m  eval_precision = 0.3557[0m
[32m  eval_recall = 0.242[0m
[32m  ********************[0m
[32m  Best f1:0.2611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5964[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53602:   7%|▋         | 2/28 [00:08<02:12,  5.08s/it]epoch 2 loss 1.5608:   7%|▋         | 2/28 [00:09<02:12,  5.08s/it] epoch 2 loss 1.5608:  11%|█         | 3/28 [00:09<01:13,  2.95s/it]epoch 2 loss 1.53214:  11%|█         | 3/28 [00:09<01:13,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6174[0m
[32m  eval_f1 = 0.2654[0m
[32m  eval_mcc = 0.5981[0m
[32m  eval_precision = 0.3508[0m
[32m  eval_recall = 0.2467[0m
[32m  ********************[0m
[32m  Best f1:0.2654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5981[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53214:  14%|█▍        | 4/28 [00:15<01:43,  4.31s/it]epoch 2 loss 1.5323:  14%|█▍        | 4/28 [00:16<01:43,  4.31s/it] epoch 2 loss 1.5323:  18%|█▊        | 5/28 [00:16<01:06,  2.91s/it]epoch 2 loss 1.53305:  18%|█▊        | 5/28 [00:16<01:06,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6227[0m
[32m  eval_f1 = 0.2692[0m
[32m  eval_mcc = 0.6032[0m
[32m  eval_precision = 0.3561[0m
[32m  eval_recall = 0.2505[0m
[32m  ********************[0m
[32m  Best f1:0.2692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53305:  21%|██▏       | 6/28 [00:24<01:43,  4.69s/it]epoch 2 loss 1.5207:  21%|██▏       | 6/28 [00:24<01:43,  4.69s/it] epoch 2 loss 1.5207:  25%|██▌       | 7/28 [00:24<01:09,  3.29s/it]epoch 2 loss 1.50971:  25%|██▌       | 7/28 [00:24<01:09,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.628[0m
[32m  eval_f1 = 0.2759[0m
[32m  eval_mcc = 0.6075[0m
[32m  eval_precision = 0.3618[0m
[32m  eval_recall = 0.2572[0m
[32m  ********************[0m
[32m  Best f1:0.2759[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50971:  29%|██▊       | 8/28 [00:30<01:25,  4.29s/it]epoch 2 loss 1.50934:  29%|██▊       | 8/28 [00:31<01:25,  4.29s/it]epoch 2 loss 1.50934:  32%|███▏      | 9/28 [00:31<00:58,  3.08s/it]epoch 2 loss 1.50599:  32%|███▏      | 9/28 [00:31<00:58,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6293[0m
[32m  eval_f1 = 0.279[0m
[32m  eval_mcc = 0.608[0m
[32m  eval_precision = 0.3808[0m
[32m  eval_recall = 0.2613[0m
[32m  ********************[0m
[32m  Best f1:0.279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50599:  36%|███▌      | 10/28 [00:40<01:26,  4.79s/it]epoch 2 loss 1.50216:  36%|███▌      | 10/28 [00:40<01:26,  4.79s/it]epoch 2 loss 1.50216:  39%|███▉      | 11/28 [00:40<00:58,  3.45s/it]epoch 2 loss 1.50017:  39%|███▉      | 11/28 [00:40<00:58,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6329[0m
[32m  eval_f1 = 0.2811[0m
[32m  eval_mcc = 0.6114[0m
[32m  eval_precision = 0.3798[0m
[32m  eval_recall = 0.2636[0m
[32m  ********************[0m
[32m  Best f1:0.2811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50017:  43%|████▎     | 12/28 [00:46<01:09,  4.34s/it]epoch 2 loss 1.49774:  43%|████▎     | 12/28 [00:47<01:09,  4.34s/it]epoch 2 loss 1.49774:  46%|████▋     | 13/28 [00:47<00:47,  3.15s/it]epoch 2 loss 1.49415:  46%|████▋     | 13/28 [00:47<00:47,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6353[0m
[32m  eval_f1 = 0.284[0m
[32m  eval_mcc = 0.6139[0m
[32m  eval_precision = 0.3836[0m
[32m  eval_recall = 0.2657[0m
[32m  ********************[0m
[32m  Best f1:0.284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6139[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49415:  50%|█████     | 14/28 [00:56<01:11,  5.09s/it]epoch 2 loss 1.48945:  50%|█████     | 14/28 [00:57<01:11,  5.09s/it]epoch 2 loss 1.48945:  54%|█████▎    | 15/28 [00:57<00:47,  3.69s/it]epoch 2 loss 1.47688:  54%|█████▎    | 15/28 [00:57<00:47,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6367[0m
[32m  eval_f1 = 0.2903[0m
[32m  eval_mcc = 0.6155[0m
[32m  eval_precision = 0.3907[0m
[32m  eval_recall = 0.2701[0m
[32m  ********************[0m
[32m  Best f1:0.2903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47688:  57%|█████▋    | 16/28 [01:03<00:54,  4.50s/it]epoch 2 loss 1.47167:  57%|█████▋    | 16/28 [01:04<00:54,  4.50s/it]epoch 2 loss 1.47167:  61%|██████    | 17/28 [01:04<00:36,  3.28s/it]epoch 2 loss 1.47009:  61%|██████    | 17/28 [01:04<00:36,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6373[0m
[32m  eval_f1 = 0.29[0m
[32m  eval_mcc = 0.6165[0m
[32m  eval_precision = 0.3894[0m
[32m  eval_recall = 0.27[0m
[32m  ********************[0m
[32m  Best MCC:0.6165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47009:  64%|██████▍   | 18/28 [01:11<00:45,  4.58s/it]epoch 2 loss 1.47072:  64%|██████▍   | 18/28 [01:12<00:45,  4.58s/it]epoch 2 loss 1.47072:  68%|██████▊   | 19/28 [01:12<00:29,  3.33s/it]epoch 2 loss 1.46799:  68%|██████▊   | 19/28 [01:12<00:29,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.2891[0m
[32m  eval_mcc = 0.6179[0m
[32m  eval_precision = 0.3899[0m
[32m  eval_recall = 0.269[0m
[32m  ********************[0m
[32m  Best MCC:0.6179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46799:  71%|███████▏  | 20/28 [01:16<00:30,  3.77s/it]epoch 2 loss 1.45359:  71%|███████▏  | 20/28 [01:17<00:30,  3.77s/it]epoch 2 loss 1.45359:  75%|███████▌  | 21/28 [01:17<00:19,  2.76s/it]epoch 2 loss 1.44859:  75%|███████▌  | 21/28 [01:17<00:19,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6378[0m
[32m  eval_f1 = 0.2896[0m
[32m  eval_mcc = 0.6199[0m
[32m  eval_precision = 0.3874[0m
[32m  eval_recall = 0.2692[0m
[32m  ********************[0m
[32m  Best MCC:0.6199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44859:  79%|███████▊  | 22/28 [01:22<00:20,  3.44s/it]epoch 2 loss 1.44314:  79%|███████▊  | 22/28 [01:22<00:20,  3.44s/it]epoch 2 loss 1.44314:  82%|████████▏ | 23/28 [01:22<00:12,  2.53s/it]epoch 2 loss 1.44769:  82%|████████▏ | 23/28 [01:23<00:12,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6385[0m
[32m  eval_f1 = 0.292[0m
[32m  eval_mcc = 0.6203[0m
[32m  eval_precision = 0.3952[0m
[32m  eval_recall = 0.271[0m
[32m  ********************[0m
[32m  Best f1:0.292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44769:  86%|████████▌ | 24/28 [01:28<00:14,  3.61s/it]epoch 2 loss 1.44002:  86%|████████▌ | 24/28 [01:29<00:14,  3.61s/it]epoch 2 loss 1.44002:  89%|████████▉ | 25/28 [01:29<00:07,  2.65s/it]epoch 2 loss 1.43615:  89%|████████▉ | 25/28 [01:29<00:07,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6407[0m
[32m  eval_f1 = 0.2934[0m
[32m  eval_mcc = 0.6211[0m
[32m  eval_precision = 0.3968[0m
[32m  eval_recall = 0.2729[0m
[32m  ********************[0m
[32m  Best f1:0.2934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43615:  93%|█████████▎| 26/28 [01:35<00:07,  3.76s/it]epoch 2 loss 1.44047:  93%|█████████▎| 26/28 [01:36<00:07,  3.76s/it]epoch 2 loss 1.44047:  96%|█████████▋| 27/28 [01:36<00:02,  2.76s/it]epoch 2 loss 1.43612:  96%|█████████▋| 27/28 [01:36<00:02,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6435[0m
[32m  eval_f1 = 0.3003[0m
[32m  eval_mcc = 0.6228[0m
[32m  eval_precision = 0.4122[0m
[32m  eval_recall = 0.2799[0m
[32m  ********************[0m
[32m  Best f1:0.3003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43612: 100%|██████████| 28/28 [01:44<00:00,  4.45s/it]epoch 2 loss 1.43612: 100%|██████████| 28/28 [01:44<00:00,  3.73s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.21015:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.21015:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 3 loss 1.25014:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.3025[0m
[32m  eval_mcc = 0.6218[0m
[32m  eval_precision = 0.4101[0m
[32m  eval_recall = 0.2833[0m
[32m  ********************[0m
[32m  Best f1:0.3025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.25014:   7%|▋         | 2/28 [00:05<01:21,  3.15s/it]epoch 3 loss 1.25463:   7%|▋         | 2/28 [00:05<01:21,  3.15s/it]epoch 3 loss 1.25463:  11%|█         | 3/28 [00:05<00:47,  1.89s/it]epoch 3 loss 1.27186:  11%|█         | 3/28 [00:06<00:47,  1.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.643[0m
[32m  eval_f1 = 0.3079[0m
[32m  eval_mcc = 0.622[0m
[32m  eval_precision = 0.4216[0m
[32m  eval_recall = 0.2891[0m
[32m  ********************[0m
[32m  Best f1:0.3079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.27186:  14%|█▍        | 4/28 [00:10<01:15,  3.13s/it]epoch 3 loss 1.29753:  14%|█▍        | 4/28 [00:11<01:15,  3.13s/it]epoch 3 loss 1.29753:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it]epoch 3 loss 1.30329:  18%|█▊        | 5/28 [00:11<00:49,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6449[0m
[32m  eval_f1 = 0.3143[0m
[32m  eval_mcc = 0.6241[0m
[32m  eval_precision = 0.4325[0m
[32m  eval_recall = 0.2942[0m
[32m  ********************[0m
[32m  Best f1:0.3143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30329:  21%|██▏       | 6/28 [00:17<01:20,  3.64s/it]epoch 3 loss 1.29319:  21%|██▏       | 6/28 [00:18<01:20,  3.64s/it]epoch 3 loss 1.29319:  25%|██▌       | 7/28 [00:18<00:54,  2.59s/it]epoch 3 loss 1.28281:  25%|██▌       | 7/28 [00:18<00:54,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6474[0m
[32m  eval_f1 = 0.3175[0m
[32m  eval_mcc = 0.6268[0m
[32m  eval_precision = 0.4348[0m
[32m  eval_recall = 0.2965[0m
[32m  ********************[0m
[32m  Best f1:0.3175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28281:  29%|██▊       | 8/28 [00:24<01:17,  3.86s/it]epoch 3 loss 1.30277:  29%|██▊       | 8/28 [00:25<01:17,  3.86s/it]epoch 3 loss 1.30277:  32%|███▏      | 9/28 [00:25<00:52,  2.79s/it]epoch 3 loss 1.31272:  32%|███▏      | 9/28 [00:25<00:52,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6489[0m
[32m  eval_f1 = 0.3207[0m
[32m  eval_mcc = 0.6288[0m
[32m  eval_precision = 0.4349[0m
[32m  eval_recall = 0.2989[0m
[32m  ********************[0m
[32m  Best f1:0.3207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6288[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31272:  36%|███▌      | 10/28 [00:31<01:08,  3.79s/it]epoch 3 loss 1.32832:  36%|███▌      | 10/28 [00:31<01:08,  3.79s/it]epoch 3 loss 1.32832:  39%|███▉      | 11/28 [00:31<00:46,  2.76s/it]epoch 3 loss 1.34543:  39%|███▉      | 11/28 [00:32<00:46,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3261[0m
[32m  eval_mcc = 0.632[0m
[32m  eval_precision = 0.4443[0m
[32m  eval_recall = 0.3033[0m
[32m  ********************[0m
[32m  Best f1:0.3261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34543:  43%|████▎     | 12/28 [00:38<01:01,  3.86s/it]epoch 3 loss 1.34465:  43%|████▎     | 12/28 [00:38<01:01,  3.86s/it]epoch 3 loss 1.34465:  46%|████▋     | 13/28 [00:38<00:42,  2.82s/it]epoch 3 loss 1.3398:  46%|████▋     | 13/28 [00:38<00:42,  2.82s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6522[0m
[32m  eval_f1 = 0.3274[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.4426[0m
[32m  eval_recall = 0.3047[0m
[32m  ********************[0m
[32m  Best f1:0.3274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3398:  50%|█████     | 14/28 [00:47<01:03,  4.56s/it]epoch 3 loss 1.33868:  50%|█████     | 14/28 [00:47<01:03,  4.56s/it]epoch 3 loss 1.33868:  54%|█████▎    | 15/28 [00:47<00:43,  3.31s/it]epoch 3 loss 1.33401:  54%|█████▎    | 15/28 [00:47<00:43,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6523[0m
[32m  eval_f1 = 0.3283[0m
[32m  eval_mcc = 0.6335[0m
[32m  eval_precision = 0.4404[0m
[32m  eval_recall = 0.3055[0m
[32m  ********************[0m
[32m  Best f1:0.3283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33401:  57%|█████▋    | 16/28 [00:53<00:50,  4.23s/it]epoch 3 loss 1.33437:  57%|█████▋    | 16/28 [00:54<00:50,  4.23s/it]epoch 3 loss 1.33437:  61%|██████    | 17/28 [00:54<00:33,  3.09s/it]epoch 3 loss 1.33848:  61%|██████    | 17/28 [00:54<00:33,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6516[0m
[32m  eval_f1 = 0.3292[0m
[32m  eval_mcc = 0.6326[0m
[32m  eval_precision = 0.4405[0m
[32m  eval_recall = 0.3057[0m
[32m  ********************[0m
[32m  Best f1:0.3292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.33848:  64%|██████▍   | 18/28 [00:59<00:36,  3.68s/it]epoch 3 loss 1.34021:  64%|██████▍   | 18/28 [00:59<00:36,  3.68s/it]epoch 3 loss 1.34021:  68%|██████▊   | 19/28 [00:59<00:24,  2.70s/it]epoch 3 loss 1.33821:  68%|██████▊   | 19/28 [01:00<00:24,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6523[0m
[32m  eval_f1 = 0.3297[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.4406[0m
[32m  eval_recall = 0.306[0m
[32m  ********************[0m
[32m  Best f1:0.3297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.33821:  71%|███████▏  | 20/28 [01:04<00:27,  3.41s/it]epoch 3 loss 1.33453:  71%|███████▏  | 20/28 [01:05<00:27,  3.41s/it]epoch 3 loss 1.33453:  75%|███████▌  | 21/28 [01:05<00:17,  2.50s/it]epoch 3 loss 1.32973:  75%|███████▌  | 21/28 [01:05<00:17,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6522[0m
[32m  eval_f1 = 0.3304[0m
[32m  eval_mcc = 0.6331[0m
[32m  eval_precision = 0.4434[0m
[32m  eval_recall = 0.3063[0m
[32m  ********************[0m
[32m  Best f1:0.3304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.32973:  79%|███████▊  | 22/28 [01:10<00:19,  3.30s/it]epoch 3 loss 1.32592:  79%|███████▊  | 22/28 [01:10<00:19,  3.30s/it]epoch 3 loss 1.32592:  82%|████████▏ | 23/28 [01:10<00:12,  2.43s/it]epoch 3 loss 1.32567:  82%|████████▏ | 23/28 [01:11<00:12,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.3306[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4461[0m
[32m  eval_recall = 0.3063[0m
[32m  ********************[0m
[32m  Best f1:0.3306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.32567:  86%|████████▌ | 24/28 [01:15<00:12,  3.21s/it]epoch 3 loss 1.32662:  86%|████████▌ | 24/28 [01:16<00:12,  3.21s/it]epoch 3 loss 1.32662:  89%|████████▉ | 25/28 [01:16<00:07,  2.37s/it]epoch 3 loss 1.32588:  89%|████████▉ | 25/28 [01:16<00:07,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3382[0m
[32m  eval_mcc = 0.6336[0m
[32m  eval_precision = 0.4577[0m
[32m  eval_recall = 0.3118[0m
[32m  ********************[0m
[32m  Best f1:0.3382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32588:  93%|█████████▎| 26/28 [01:22<00:07,  3.56s/it]epoch 3 loss 1.32923:  93%|█████████▎| 26/28 [01:22<00:07,  3.56s/it]epoch 3 loss 1.32923:  96%|█████████▋| 27/28 [01:22<00:02,  2.61s/it]epoch 3 loss 1.326:  96%|█████████▋| 27/28 [01:23<00:02,  2.61s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6538[0m
[32m  eval_f1 = 0.3377[0m
[32m  eval_mcc = 0.6342[0m
[32m  eval_precision = 0.4545[0m
[32m  eval_recall = 0.3123[0m
[32m  ********************[0m
[32m  Best MCC:0.6342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.326: 100%|██████████| 28/28 [01:27<00:00,  3.28s/it]epoch 3 loss 1.326: 100%|██████████| 28/28 [01:27<00:00,  3.14s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.32934:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.32934:   4%|▎         | 1/28 [00:00<00:10,  2.46it/s]epoch 4 loss 1.36189:   4%|▎         | 1/28 [00:00<00:10,  2.46it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6549[0m
[32m  eval_f1 = 0.3392[0m
[32m  eval_mcc = 0.6354[0m
[32m  eval_precision = 0.4544[0m
[32m  eval_recall = 0.3135[0m
[32m  ********************[0m
[32m  Best f1:0.3392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36189:   7%|▋         | 2/28 [00:08<02:02,  4.70s/it]epoch 4 loss 1.34127:   7%|▋         | 2/28 [00:08<02:02,  4.70s/it]epoch 4 loss 1.34127:  11%|█         | 3/28 [00:08<01:08,  2.74s/it]epoch 4 loss 1.32558:  11%|█         | 3/28 [00:08<01:08,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6557[0m
[32m  eval_f1 = 0.3393[0m
[32m  eval_mcc = 0.6362[0m
[32m  eval_precision = 0.4531[0m
[32m  eval_recall = 0.3137[0m
[32m  ********************[0m
[32m  Best f1:0.3393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32558:  14%|█▍        | 4/28 [00:14<01:40,  4.21s/it]epoch 4 loss 1.33147:  14%|█▍        | 4/28 [00:15<01:40,  4.21s/it]epoch 4 loss 1.33147:  18%|█▊        | 5/28 [00:15<01:05,  2.84s/it]epoch 4 loss 1.32678:  18%|█▊        | 5/28 [00:15<01:05,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3392[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4514[0m
[32m  eval_recall = 0.3138[0m
[32m  ********************[0m
[32m  Best MCC:0.6373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32678:  21%|██▏       | 6/28 [00:20<01:19,  3.60s/it]epoch 4 loss 1.31695:  21%|██▏       | 6/28 [00:20<01:19,  3.60s/it]epoch 4 loss 1.31695:  25%|██▌       | 7/28 [00:20<00:53,  2.55s/it]epoch 4 loss 1.31198:  25%|██▌       | 7/28 [00:21<00:53,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3395[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.4523[0m
[32m  eval_recall = 0.314[0m
[32m  ********************[0m
[32m  Best f1:0.3395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31198:  29%|██▊       | 8/28 [00:27<01:15,  3.79s/it]epoch 4 loss 1.30829:  29%|██▊       | 8/28 [00:27<01:15,  3.79s/it]epoch 4 loss 1.30829:  32%|███▏      | 9/28 [00:27<00:51,  2.73s/it]epoch 4 loss 1.31512:  32%|███▏      | 9/28 [00:28<00:51,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.34[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.4513[0m
[32m  eval_recall = 0.3145[0m
[32m  ********************[0m
[32m  Best f1:0.34[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.31512:  36%|███▌      | 10/28 [00:32<01:02,  3.47s/it]epoch 4 loss 1.31212:  36%|███▌      | 10/28 [00:33<01:02,  3.47s/it]epoch 4 loss 1.31212:  39%|███▉      | 11/28 [00:33<00:42,  2.53s/it]epoch 4 loss 1.3141:  39%|███▉      | 11/28 [00:33<00:42,  2.53s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3401[0m
[32m  eval_mcc = 0.6374[0m
[32m  eval_precision = 0.4507[0m
[32m  eval_recall = 0.3146[0m
[32m  ********************[0m
[32m  Best f1:0.3401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.3141:  43%|████▎     | 12/28 [00:38<00:53,  3.33s/it]epoch 4 loss 1.31629:  43%|████▎     | 12/28 [00:38<00:53,  3.33s/it]epoch 4 loss 1.31629:  46%|████▋     | 13/28 [00:38<00:36,  2.44s/it]epoch 4 loss 1.30151:  46%|████▋     | 13/28 [00:39<00:36,  2.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6564[0m
[32m  eval_f1 = 0.34[0m
[32m  eval_mcc = 0.637[0m
[32m  eval_precision = 0.4497[0m
[32m  eval_recall = 0.3147[0m

epoch 4 loss 1.30151:  50%|█████     | 14/28 [00:42<00:39,  2.85s/it]epoch 4 loss 1.29565:  50%|█████     | 14/28 [00:42<00:39,  2.85s/it]epoch 4 loss 1.29565:  54%|█████▎    | 15/28 [00:42<00:27,  2.11s/it]epoch 4 loss 1.29072:  54%|█████▎    | 15/28 [00:43<00:27,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6562[0m
[32m  eval_f1 = 0.34[0m
[32m  eval_mcc = 0.6367[0m
[32m  eval_precision = 0.4527[0m
[32m  eval_recall = 0.3145[0m

epoch 4 loss 1.29072:  57%|█████▋    | 16/28 [00:46<00:31,  2.62s/it]epoch 4 loss 1.28996:  57%|█████▋    | 16/28 [00:47<00:31,  2.62s/it]epoch 4 loss 1.28996:  61%|██████    | 17/28 [00:47<00:21,  1.95s/it]epoch 4 loss 1.28827:  61%|██████    | 17/28 [00:47<00:21,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6562[0m
[32m  eval_f1 = 0.3402[0m
[32m  eval_mcc = 0.6368[0m
[32m  eval_precision = 0.4525[0m
[32m  eval_recall = 0.3146[0m
[32m  ********************[0m
[32m  Best f1:0.3402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.28827:  64%|██████▍   | 18/28 [00:52<00:29,  2.92s/it]epoch 4 loss 1.29107:  64%|██████▍   | 18/28 [00:52<00:29,  2.92s/it]epoch 4 loss 1.29107:  68%|██████▊   | 19/28 [00:52<00:19,  2.17s/it]epoch 4 loss 1.29055:  68%|██████▊   | 19/28 [00:53<00:19,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6564[0m
[32m  eval_f1 = 0.3402[0m
[32m  eval_mcc = 0.637[0m
[32m  eval_precision = 0.4532[0m
[32m  eval_recall = 0.3147[0m
[32m  ********************[0m
[32m  Best f1:0.3402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.29055:  71%|███████▏  | 20/28 [00:57<00:24,  3.05s/it]epoch 4 loss 1.28733:  71%|███████▏  | 20/28 [00:58<00:24,  3.05s/it]epoch 4 loss 1.28733:  75%|███████▌  | 21/28 [00:58<00:15,  2.26s/it]epoch 4 loss 1.28844:  75%|███████▌  | 21/28 [00:58<00:15,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6564[0m
[32m  eval_f1 = 0.34[0m
[32m  eval_mcc = 0.6371[0m
[32m  eval_precision = 0.4528[0m
[32m  eval_recall = 0.3146[0m

epoch 4 loss 1.28844:  79%|███████▊  | 22/28 [01:02<00:16,  2.72s/it]epoch 4 loss 1.2874:  79%|███████▊  | 22/28 [01:02<00:16,  2.72s/it] epoch 4 loss 1.2874:  82%|████████▏ | 23/28 [01:02<00:10,  2.02s/it]epoch 4 loss 1.28392:  82%|████████▏ | 23/28 [01:02<00:10,  2.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.34[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.453[0m
[32m  eval_recall = 0.3146[0m

epoch 4 loss 1.28392:  86%|████████▌ | 24/28 [01:06<00:10,  2.56s/it]epoch 4 loss 1.28828:  86%|████████▌ | 24/28 [01:06<00:10,  2.56s/it]epoch 4 loss 1.28828:  89%|████████▉ | 25/28 [01:06<00:05,  1.91s/it]epoch 4 loss 1.28814:  89%|████████▉ | 25/28 [01:07<00:05,  1.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3399[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4527[0m
[32m  eval_recall = 0.3146[0m

epoch 4 loss 1.28814:  93%|█████████▎| 26/28 [01:10<00:04,  2.48s/it]epoch 4 loss 1.28621:  93%|█████████▎| 26/28 [01:10<00:04,  2.48s/it]epoch 4 loss 1.28621:  96%|█████████▋| 27/28 [01:10<00:01,  1.86s/it]epoch 4 loss 1.29362:  96%|█████████▋| 27/28 [01:11<00:01,  1.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3399[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4525[0m
[32m  eval_recall = 0.3145[0m

epoch 4 loss 1.29362: 100%|██████████| 28/28 [01:14<00:00,  2.38s/it]epoch 4 loss 1.29362: 100%|██████████| 28/28 [01:14<00:00,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.74it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6564[0m
[32m  eval_f1 = 0.3402[0m
[32m  eval_mcc = 0.637[0m
[32m  eval_precision = 0.4532[0m
[32m  eval_recall = 0.3147[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.70it/s] 30%|███       | 3/10 [00:01<00:02,  2.71it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6364[0m
[32m  eval_f1 = 0.2707[0m
[32m  eval_mcc = 0.6171[0m
[32m  eval_precision = 0.3498[0m
[32m  eval_recall = 0.2559[0m

