[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.7522:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.7522:   4%|▎         | 1/28 [00:00<00:21,  1.26it/s]epoch 0 loss 5.75332:   4%|▎         | 1/28 [00:01<00:21,  1.26it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0086[0m
[32m  eval_f1 = 0.001[0m
[32m  eval_mcc = 0.0041[0m
[32m  eval_precision = 0.0056[0m
[32m  eval_recall = 0.0043[0m
[32m  ********************[0m
[32m  Best f1:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.75332:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.74431:   7%|▋         | 2/28 [00:06<01:31,  3.53s/it]epoch 0 loss 5.74431:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 0 loss 5.73336:  11%|█         | 3/28 [00:07<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.012[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = 0.0053[0m
[32m  eval_precision = 0.002[0m
[32m  eval_recall = 0.005[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.73336:  14%|█▍        | 4/28 [00:16<02:03,  5.16s/it]epoch 0 loss 5.71304:  14%|█▍        | 4/28 [00:16<02:03,  5.16s/it]epoch 0 loss 5.71304:  18%|█▊        | 5/28 [00:16<01:19,  3.45s/it]epoch 0 loss 5.68402:  18%|█▊        | 5/28 [00:17<01:19,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.018[0m
[32m  eval_f1 = 0.002[0m
[32m  eval_mcc = 0.0052[0m
[32m  eval_precision = 0.0032[0m
[32m  eval_recall = 0.0069[0m
[32m  ********************[0m
[32m  Best f1:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.68402:  21%|██▏       | 6/28 [00:24<01:43,  4.71s/it]epoch 0 loss 5.65148:  21%|██▏       | 6/28 [00:24<01:43,  4.71s/it]epoch 0 loss 5.65148:  25%|██▌       | 7/28 [00:24<01:09,  3.31s/it]epoch 0 loss 5.60643:  25%|██▌       | 7/28 [00:24<01:09,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0264[0m
[32m  eval_f1 = 0.0022[0m
[32m  eval_mcc = 0.0052[0m
[32m  eval_precision = 0.0038[0m
[32m  eval_recall = 0.0066[0m
[32m  ********************[0m
[32m  Best f1:0.0022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.60643:  29%|██▊       | 8/28 [00:31<01:30,  4.50s/it]epoch 0 loss 5.5569:  29%|██▊       | 8/28 [00:31<01:30,  4.50s/it] epoch 0 loss 5.5569:  32%|███▏      | 9/28 [00:31<01:01,  3.23s/it]epoch 0 loss 5.50152:  32%|███▏      | 9/28 [00:32<01:01,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0334[0m
[32m  eval_f1 = 0.0041[0m
[32m  eval_mcc = 0.0056[0m
[32m  eval_precision = 0.0147[0m
[32m  eval_recall = 0.0098[0m
[32m  ********************[0m
[32m  Best f1:0.0041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.50152:  36%|███▌      | 10/28 [00:43<01:41,  5.65s/it]epoch 0 loss 5.44119:  36%|███▌      | 10/28 [00:43<01:41,  5.65s/it]epoch 0 loss 5.44119:  39%|███▉      | 11/28 [00:43<01:08,  4.06s/it]epoch 0 loss 5.3746:  39%|███▉      | 11/28 [00:43<01:08,  4.06s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0512[0m
[32m  eval_f1 = 0.0181[0m
[32m  eval_mcc = 0.0224[0m
[32m  eval_precision = 0.0372[0m
[32m  eval_recall = 0.0229[0m
[32m  ********************[0m
[32m  Best f1:0.0181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0224[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.3746:  43%|████▎     | 12/28 [00:53<01:35,  5.98s/it]epoch 0 loss 5.30429:  43%|████▎     | 12/28 [00:54<01:35,  5.98s/it]epoch 0 loss 5.30429:  46%|████▋     | 13/28 [00:54<01:04,  4.29s/it]epoch 0 loss 5.2309:  46%|████▋     | 13/28 [00:54<01:04,  4.29s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0869[0m
[32m  eval_f1 = 0.0361[0m
[32m  eval_mcc = 0.0551[0m
[32m  eval_precision = 0.0723[0m
[32m  eval_recall = 0.0385[0m
[32m  ********************[0m
[32m  Best f1:0.0361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.2309:  50%|█████     | 14/28 [01:03<01:19,  5.65s/it]epoch 0 loss 5.15653:  50%|█████     | 14/28 [01:03<01:19,  5.65s/it]epoch 0 loss 5.15653:  54%|█████▎    | 15/28 [01:03<00:52,  4.07s/it]epoch 0 loss 5.07879:  54%|█████▎    | 15/28 [01:03<00:52,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1348[0m
[32m  eval_f1 = 0.0539[0m
[32m  eval_mcc = 0.0926[0m
[32m  eval_precision = 0.0992[0m
[32m  eval_recall = 0.0533[0m
[32m  ********************[0m
[32m  Best f1:0.0539[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.07879:  57%|█████▋    | 16/28 [01:14<01:12,  6.07s/it]epoch 0 loss 5.00012:  57%|█████▋    | 16/28 [01:14<01:12,  6.07s/it]epoch 0 loss 5.00012:  61%|██████    | 17/28 [01:14<00:48,  4.37s/it]epoch 0 loss 4.92153:  61%|██████    | 17/28 [01:15<00:48,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2167[0m
[32m  eval_f1 = 0.0774[0m
[32m  eval_mcc = 0.1669[0m
[32m  eval_precision = 0.1101[0m
[32m  eval_recall = 0.0711[0m
[32m  ********************[0m
[32m  Best f1:0.0774[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.92153:  64%|██████▍   | 18/28 [01:23<00:57,  5.73s/it]epoch 0 loss 4.83856:  64%|██████▍   | 18/28 [01:23<00:57,  5.73s/it]epoch 0 loss 4.83856:  68%|██████▊   | 19/28 [01:23<00:37,  4.14s/it]epoch 0 loss 4.76049:  68%|██████▊   | 19/28 [01:24<00:37,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2939[0m
[32m  eval_f1 = 0.0852[0m
[32m  eval_mcc = 0.2428[0m
[32m  eval_precision = 0.135[0m
[32m  eval_recall = 0.0772[0m
[32m  ********************[0m
[32m  Best f1:0.0852[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.76049:  71%|███████▏  | 20/28 [01:34<00:49,  6.16s/it]epoch 0 loss 4.68474:  71%|███████▏  | 20/28 [01:35<00:49,  6.16s/it]epoch 0 loss 4.68474:  75%|███████▌  | 21/28 [01:35<00:31,  4.44s/it]epoch 0 loss 4.6117:  75%|███████▌  | 21/28 [01:35<00:31,  4.44s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3605[0m
[32m  eval_f1 = 0.0879[0m
[32m  eval_mcc = 0.3149[0m
[32m  eval_precision = 0.1394[0m
[32m  eval_recall = 0.0822[0m
[32m  ********************[0m
[32m  Best f1:0.0879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.6117:  79%|███████▊  | 22/28 [01:45<00:37,  6.29s/it]epoch 0 loss 4.5335:  79%|███████▊  | 22/28 [01:46<00:37,  6.29s/it]epoch 0 loss 4.5335:  82%|████████▏ | 23/28 [01:46<00:22,  4.53s/it]epoch 0 loss 4.46204:  82%|████████▏ | 23/28 [01:46<00:22,  4.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3894[0m
[32m  eval_f1 = 0.0899[0m
[32m  eval_mcc = 0.3466[0m
[32m  eval_precision = 0.1527[0m
[32m  eval_recall = 0.0853[0m
[32m  ********************[0m
[32m  Best f1:0.0899[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.46204:  86%|████████▌ | 24/28 [01:56<00:24,  6.24s/it]epoch 0 loss 4.39186:  86%|████████▌ | 24/28 [01:56<00:24,  6.24s/it]epoch 0 loss 4.39186:  89%|████████▉ | 25/28 [01:56<00:13,  4.49s/it]epoch 0 loss 4.32147:  89%|████████▉ | 25/28 [01:57<00:13,  4.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.409[0m
[32m  eval_f1 = 0.0953[0m
[32m  eval_mcc = 0.3685[0m
[32m  eval_precision = 0.1532[0m
[32m  eval_recall = 0.0899[0m
[32m  ********************[0m
[32m  Best f1:0.0953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.32147:  93%|█████████▎| 26/28 [02:07<00:12,  6.27s/it]epoch 0 loss 4.25562:  93%|█████████▎| 26/28 [02:07<00:12,  6.27s/it]epoch 0 loss 4.25562:  96%|█████████▋| 27/28 [02:07<00:04,  4.52s/it]epoch 0 loss 4.18672:  96%|█████████▋| 27/28 [02:07<00:04,  4.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.448[0m
[32m  eval_f1 = 0.1189[0m
[32m  eval_mcc = 0.4126[0m
[32m  eval_precision = 0.1744[0m
[32m  eval_recall = 0.1117[0m
[32m  ********************[0m
[32m  Best f1:0.1189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4126[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.18672: 100%|██████████| 28/28 [02:17<00:00,  5.94s/it]epoch 0 loss 4.18672: 100%|██████████| 28/28 [02:17<00:00,  4.89s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.36423:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.36423:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 1 loss 2.35713:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.492[0m
[32m  eval_f1 = 0.1376[0m
[32m  eval_mcc = 0.4606[0m
[32m  eval_precision = 0.1797[0m
[32m  eval_recall = 0.1321[0m
[32m  ********************[0m
[32m  Best f1:0.1376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.35713:   7%|▋         | 2/28 [00:09<02:28,  5.73s/it]epoch 1 loss 2.33222:   7%|▋         | 2/28 [00:10<02:28,  5.73s/it]epoch 1 loss 2.33222:  11%|█         | 3/28 [00:10<01:22,  3.31s/it]epoch 1 loss 2.31663:  11%|█         | 3/28 [00:10<01:22,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5308[0m
[32m  eval_f1 = 0.1531[0m
[32m  eval_mcc = 0.5018[0m
[32m  eval_precision = 0.1886[0m
[32m  eval_recall = 0.1492[0m
[32m  ********************[0m
[32m  Best f1:0.1531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.31663:  14%|█▍        | 4/28 [00:16<01:46,  4.42s/it]epoch 1 loss 2.25917:  14%|█▍        | 4/28 [00:16<01:46,  4.42s/it]epoch 1 loss 2.25917:  18%|█▊        | 5/28 [00:16<01:08,  2.98s/it]epoch 1 loss 2.20359:  18%|█▊        | 5/28 [00:17<01:08,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5565[0m
[32m  eval_f1 = 0.1673[0m
[32m  eval_mcc = 0.5291[0m
[32m  eval_precision = 0.2035[0m
[32m  eval_recall = 0.1635[0m
[32m  ********************[0m
[32m  Best f1:0.1673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20359:  21%|██▏       | 6/28 [00:23<01:32,  4.21s/it]epoch 1 loss 2.17198:  21%|██▏       | 6/28 [00:23<01:32,  4.21s/it]epoch 1 loss 2.17198:  25%|██▌       | 7/28 [00:23<01:02,  2.97s/it]epoch 1 loss 2.12196:  25%|██▌       | 7/28 [00:24<01:02,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5668[0m
[32m  eval_f1 = 0.1716[0m
[32m  eval_mcc = 0.5427[0m
[32m  eval_precision = 0.2042[0m
[32m  eval_recall = 0.1666[0m
[32m  ********************[0m
[32m  Best f1:0.1716[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12196:  29%|██▊       | 8/28 [00:29<01:18,  3.95s/it]epoch 1 loss 2.07812:  29%|██▊       | 8/28 [00:30<01:18,  3.95s/it]epoch 1 loss 2.07812:  32%|███▏      | 9/28 [00:30<00:54,  2.84s/it]epoch 1 loss 2.05722:  32%|███▏      | 9/28 [00:30<00:54,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5757[0m
[32m  eval_f1 = 0.179[0m
[32m  eval_mcc = 0.5538[0m
[32m  eval_precision = 0.2487[0m
[32m  eval_recall = 0.1707[0m
[32m  ********************[0m
[32m  Best f1:0.179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05722:  36%|███▌      | 10/28 [00:36<01:10,  3.94s/it]epoch 1 loss 2.03496:  36%|███▌      | 10/28 [00:37<01:10,  3.94s/it]epoch 1 loss 2.03496:  39%|███▉      | 11/28 [00:37<00:48,  2.86s/it]epoch 1 loss 2.01899:  39%|███▉      | 11/28 [00:37<00:48,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5823[0m
[32m  eval_f1 = 0.1897[0m
[32m  eval_mcc = 0.5605[0m
[32m  eval_precision = 0.2633[0m
[32m  eval_recall = 0.1795[0m
[32m  ********************[0m
[32m  Best f1:0.1897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01899:  43%|████▎     | 12/28 [00:43<01:03,  3.98s/it]epoch 1 loss 1.99193:  43%|████▎     | 12/28 [00:44<01:03,  3.98s/it]epoch 1 loss 1.99193:  46%|████▋     | 13/28 [00:44<00:43,  2.90s/it]epoch 1 loss 1.97562:  46%|████▋     | 13/28 [00:44<00:43,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5871[0m
[32m  eval_f1 = 0.1977[0m
[32m  eval_mcc = 0.5648[0m
[32m  eval_precision = 0.2691[0m
[32m  eval_recall = 0.1856[0m
[32m  ********************[0m
[32m  Best f1:0.1977[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97562:  50%|█████     | 14/28 [00:50<00:55,  3.98s/it]epoch 1 loss 1.96755:  50%|█████     | 14/28 [00:50<00:55,  3.98s/it]epoch 1 loss 1.96755:  54%|█████▎    | 15/28 [00:50<00:37,  2.90s/it]epoch 1 loss 1.95122:  54%|█████▎    | 15/28 [00:51<00:37,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5937[0m
[32m  eval_f1 = 0.2176[0m
[32m  eval_mcc = 0.5706[0m
[32m  eval_precision = 0.3138[0m
[32m  eval_recall = 0.2009[0m
[32m  ********************[0m
[32m  Best f1:0.2176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5706[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95122:  57%|█████▋    | 16/28 [00:57<00:47,  3.97s/it]epoch 1 loss 1.93096:  57%|█████▋    | 16/28 [00:57<00:47,  3.97s/it]epoch 1 loss 1.93096:  61%|██████    | 17/28 [00:57<00:31,  2.90s/it]epoch 1 loss 1.9158:  61%|██████    | 17/28 [00:58<00:31,  2.90s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5984[0m
[32m  eval_f1 = 0.2367[0m
[32m  eval_mcc = 0.575[0m
[32m  eval_precision = 0.3487[0m
[32m  eval_recall = 0.2153[0m
[32m  ********************[0m
[32m  Best f1:0.2367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9158:  64%|██████▍   | 18/28 [01:08<00:52,  5.26s/it]epoch 1 loss 1.89333:  64%|██████▍   | 18/28 [01:08<00:52,  5.26s/it]epoch 1 loss 1.89333:  68%|██████▊   | 19/28 [01:08<00:34,  3.80s/it]epoch 1 loss 1.8796:  68%|██████▊   | 19/28 [01:09<00:34,  3.80s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6033[0m
[32m  eval_f1 = 0.2469[0m
[32m  eval_mcc = 0.58[0m
[32m  eval_precision = 0.3407[0m
[32m  eval_recall = 0.2266[0m
[32m  ********************[0m
[32m  Best f1:0.2469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.58[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8796:  71%|███████▏  | 20/28 [01:18<00:45,  5.66s/it]epoch 1 loss 1.86503:  71%|███████▏  | 20/28 [01:19<00:45,  5.66s/it]epoch 1 loss 1.86503:  75%|███████▌  | 21/28 [01:19<00:28,  4.09s/it]epoch 1 loss 1.85902:  75%|███████▌  | 21/28 [01:19<00:28,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6107[0m
[32m  eval_f1 = 0.2567[0m
[32m  eval_mcc = 0.588[0m
[32m  eval_precision = 0.3451[0m
[32m  eval_recall = 0.2359[0m
[32m  ********************[0m
[32m  Best f1:0.2567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.85902:  79%|███████▊  | 22/28 [01:30<00:36,  6.06s/it]epoch 1 loss 1.84281:  79%|███████▊  | 22/28 [01:30<00:36,  6.06s/it]epoch 1 loss 1.84281:  82%|████████▏ | 23/28 [01:30<00:21,  4.37s/it]epoch 1 loss 1.82892:  82%|████████▏ | 23/28 [01:30<00:21,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6139[0m
[32m  eval_f1 = 0.264[0m
[32m  eval_mcc = 0.5916[0m
[32m  eval_precision = 0.3451[0m
[32m  eval_recall = 0.2459[0m
[32m  ********************[0m
[32m  Best f1:0.264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.82892:  86%|████████▌ | 24/28 [01:41<00:24,  6.21s/it]epoch 1 loss 1.81949:  86%|████████▌ | 24/28 [01:41<00:24,  6.21s/it]epoch 1 loss 1.81949:  89%|████████▉ | 25/28 [01:41<00:13,  4.47s/it]epoch 1 loss 1.80122:  89%|████████▉ | 25/28 [01:41<00:13,  4.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6168[0m
[32m  eval_f1 = 0.2669[0m
[32m  eval_mcc = 0.5954[0m
[32m  eval_precision = 0.3623[0m
[32m  eval_recall = 0.2492[0m
[32m  ********************[0m
[32m  Best f1:0.2669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5954[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80122:  93%|█████████▎| 26/28 [01:51<00:12,  6.19s/it]epoch 1 loss 1.79382:  93%|█████████▎| 26/28 [01:52<00:12,  6.19s/it]epoch 1 loss 1.79382:  96%|█████████▋| 27/28 [01:52<00:04,  4.46s/it]epoch 1 loss 1.77913:  96%|█████████▋| 27/28 [01:52<00:04,  4.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6196[0m
[32m  eval_f1 = 0.2736[0m
[32m  eval_mcc = 0.5994[0m
[32m  eval_precision = 0.3734[0m
[32m  eval_recall = 0.2537[0m
[32m  ********************[0m
[32m  Best f1:0.2736[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5994[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77913: 100%|██████████| 28/28 [02:02<00:00,  6.24s/it]epoch 1 loss 1.77913: 100%|██████████| 28/28 [02:02<00:00,  4.37s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.41938:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.41938:   4%|▎         | 1/28 [00:00<00:11,  2.43it/s]epoch 2 loss 1.47562:   4%|▎         | 1/28 [00:00<00:11,  2.43it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6213[0m
[32m  eval_f1 = 0.279[0m
[32m  eval_mcc = 0.6021[0m
[32m  eval_precision = 0.3717[0m
[32m  eval_recall = 0.258[0m
[32m  ********************[0m
[32m  Best f1:0.279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47562:   7%|▋         | 2/28 [00:10<02:34,  5.95s/it]epoch 2 loss 1.49664:   7%|▋         | 2/28 [00:10<02:34,  5.95s/it]epoch 2 loss 1.49664:  11%|█         | 3/28 [00:10<01:25,  3.42s/it]epoch 2 loss 1.46701:  11%|█         | 3/28 [00:11<01:25,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6231[0m
[32m  eval_f1 = 0.2848[0m
[32m  eval_mcc = 0.604[0m
[32m  eval_precision = 0.3699[0m
[32m  eval_recall = 0.2633[0m
[32m  ********************[0m
[32m  Best f1:0.2848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46701:  14%|█▍        | 4/28 [00:18<02:06,  5.26s/it]epoch 2 loss 1.46617:  14%|█▍        | 4/28 [00:19<02:06,  5.26s/it]epoch 2 loss 1.46617:  18%|█▊        | 5/28 [00:19<01:20,  3.51s/it]epoch 2 loss 1.46568:  18%|█▊        | 5/28 [00:19<01:20,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6285[0m
[32m  eval_f1 = 0.2884[0m
[32m  eval_mcc = 0.6093[0m
[32m  eval_precision = 0.3844[0m
[32m  eval_recall = 0.268[0m
[32m  ********************[0m
[32m  Best f1:0.2884[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46568:  21%|██▏       | 6/28 [00:28<02:04,  5.67s/it]epoch 2 loss 1.45386:  21%|██▏       | 6/28 [00:29<02:04,  5.67s/it]epoch 2 loss 1.45386:  25%|██▌       | 7/28 [00:29<01:23,  3.95s/it]epoch 2 loss 1.44333:  25%|██▌       | 7/28 [00:29<01:23,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6333[0m
[32m  eval_f1 = 0.2922[0m
[32m  eval_mcc = 0.6132[0m
[32m  eval_precision = 0.3838[0m
[32m  eval_recall = 0.2722[0m
[32m  ********************[0m
[32m  Best f1:0.2922[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44333:  29%|██▊       | 8/28 [00:37<01:44,  5.25s/it]epoch 2 loss 1.4424:  29%|██▊       | 8/28 [00:37<01:44,  5.25s/it] epoch 2 loss 1.4424:  32%|███▏      | 9/28 [00:37<01:11,  3.74s/it]epoch 2 loss 1.43729:  32%|███▏      | 9/28 [00:38<01:11,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.635[0m
[32m  eval_f1 = 0.2927[0m
[32m  eval_mcc = 0.614[0m
[32m  eval_precision = 0.3896[0m
[32m  eval_recall = 0.2734[0m
[32m  ********************[0m
[32m  Best f1:0.2927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43729:  36%|███▌      | 10/28 [00:47<01:41,  5.66s/it]epoch 2 loss 1.43388:  36%|███▌      | 10/28 [00:48<01:41,  5.66s/it]epoch 2 loss 1.43388:  39%|███▉      | 11/28 [00:48<01:08,  4.05s/it]epoch 2 loss 1.43206:  39%|███▉      | 11/28 [00:48<01:08,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6381[0m
[32m  eval_f1 = 0.2971[0m
[32m  eval_mcc = 0.6169[0m
[32m  eval_precision = 0.4057[0m
[32m  eval_recall = 0.2767[0m
[32m  ********************[0m
[32m  Best f1:0.2971[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43206:  43%|████▎     | 12/28 [00:58<01:33,  5.86s/it]epoch 2 loss 1.43038:  43%|████▎     | 12/28 [00:58<01:33,  5.86s/it]epoch 2 loss 1.43038:  46%|████▋     | 13/28 [00:58<01:03,  4.21s/it]epoch 2 loss 1.42706:  46%|████▋     | 13/28 [00:59<01:03,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6418[0m
[32m  eval_f1 = 0.3008[0m
[32m  eval_mcc = 0.6206[0m
[32m  eval_precision = 0.4025[0m
[32m  eval_recall = 0.2794[0m
[32m  ********************[0m
[32m  Best f1:0.3008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42706:  50%|█████     | 14/28 [01:08<01:23,  5.95s/it]epoch 2 loss 1.42277:  50%|█████     | 14/28 [01:09<01:23,  5.95s/it]epoch 2 loss 1.42277:  54%|█████▎    | 15/28 [01:09<00:55,  4.28s/it]epoch 2 loss 1.41053:  54%|█████▎    | 15/28 [01:09<00:55,  4.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6434[0m
[32m  eval_f1 = 0.3007[0m
[32m  eval_mcc = 0.6224[0m
[32m  eval_precision = 0.4034[0m
[32m  eval_recall = 0.2792[0m
[32m  ********************[0m
[32m  Best MCC:0.6224[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41053:  57%|█████▋    | 16/28 [01:16<01:02,  5.21s/it]epoch 2 loss 1.40547:  57%|█████▋    | 16/28 [01:16<01:02,  5.21s/it]epoch 2 loss 1.40547:  61%|██████    | 17/28 [01:16<00:41,  3.77s/it]epoch 2 loss 1.40381:  61%|██████    | 17/28 [01:17<00:41,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6436[0m
[32m  eval_f1 = 0.3069[0m
[32m  eval_mcc = 0.6228[0m
[32m  eval_precision = 0.4158[0m
[32m  eval_recall = 0.2835[0m
[32m  ********************[0m
[32m  Best f1:0.3069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40381:  64%|██████▍   | 18/28 [01:26<00:54,  5.46s/it]epoch 2 loss 1.40413:  64%|██████▍   | 18/28 [01:26<00:54,  5.46s/it]epoch 2 loss 1.40413:  68%|██████▊   | 19/28 [01:26<00:35,  3.95s/it]epoch 2 loss 1.40204:  68%|██████▊   | 19/28 [01:27<00:35,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6457[0m
[32m  eval_f1 = 0.3143[0m
[32m  eval_mcc = 0.626[0m
[32m  eval_precision = 0.4234[0m
[32m  eval_recall = 0.2891[0m
[32m  ********************[0m
[32m  Best f1:0.3143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.626[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40204:  71%|███████▏  | 20/28 [01:37<00:47,  5.88s/it]epoch 2 loss 1.3881:  71%|███████▏  | 20/28 [01:37<00:47,  5.88s/it] epoch 2 loss 1.3881:  75%|███████▌  | 21/28 [01:37<00:29,  4.24s/it]epoch 2 loss 1.38329:  75%|███████▌  | 21/28 [01:37<00:29,  4.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.646[0m
[32m  eval_f1 = 0.3141[0m
[32m  eval_mcc = 0.6278[0m
[32m  eval_precision = 0.4224[0m
[32m  eval_recall = 0.288[0m
[32m  ********************[0m
[32m  Best MCC:0.6278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38329:  79%|███████▊  | 22/28 [01:42<00:27,  4.52s/it]epoch 2 loss 1.37808:  79%|███████▊  | 22/28 [01:42<00:27,  4.52s/it]epoch 2 loss 1.37808:  82%|████████▏ | 23/28 [01:42<00:16,  3.28s/it]epoch 2 loss 1.38297:  82%|████████▏ | 23/28 [01:43<00:16,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6466[0m
[32m  eval_f1 = 0.3151[0m
[32m  eval_mcc = 0.6284[0m
[32m  eval_precision = 0.4239[0m
[32m  eval_recall = 0.2892[0m
[32m  ********************[0m
[32m  Best f1:0.3151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38297:  86%|████████▌ | 24/28 [01:52<00:20,  5.21s/it]epoch 2 loss 1.37598:  86%|████████▌ | 24/28 [01:53<00:20,  5.21s/it]epoch 2 loss 1.37598:  89%|████████▉ | 25/28 [01:53<00:11,  3.78s/it]epoch 2 loss 1.37269:  89%|████████▉ | 25/28 [01:53<00:11,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6488[0m
[32m  eval_f1 = 0.3211[0m
[32m  eval_mcc = 0.6299[0m
[32m  eval_precision = 0.4319[0m
[32m  eval_recall = 0.294[0m
[32m  ********************[0m
[32m  Best f1:0.3211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37269:  93%|█████████▎| 26/28 [01:59<00:09,  4.66s/it]epoch 2 loss 1.37681:  93%|█████████▎| 26/28 [02:00<00:09,  4.66s/it]epoch 2 loss 1.37681:  96%|█████████▋| 27/28 [02:00<00:03,  3.39s/it]epoch 2 loss 1.37264:  96%|█████████▋| 27/28 [02:00<00:03,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6495[0m
[32m  eval_f1 = 0.3246[0m
[32m  eval_mcc = 0.6296[0m
[32m  eval_precision = 0.4304[0m
[32m  eval_recall = 0.2979[0m
[32m  ********************[0m
[32m  Best f1:0.3246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.37264: 100%|██████████| 28/28 [02:05<00:00,  3.83s/it]epoch 2 loss 1.37264: 100%|██████████| 28/28 [02:05<00:00,  4.47s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.16018:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.16018:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s]epoch 3 loss 1.19979:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6507[0m
[32m  eval_f1 = 0.3281[0m
[32m  eval_mcc = 0.6305[0m
[32m  eval_precision = 0.4439[0m
[32m  eval_recall = 0.3006[0m
[32m  ********************[0m
[32m  Best f1:0.3281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19979:   7%|▋         | 2/28 [00:06<01:42,  3.94s/it]epoch 3 loss 1.20528:   7%|▋         | 2/28 [00:07<01:42,  3.94s/it]epoch 3 loss 1.20528:  11%|█         | 3/28 [00:07<00:58,  2.34s/it]epoch 3 loss 1.2176:  11%|█         | 3/28 [00:07<00:58,  2.34s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6502[0m
[32m  eval_f1 = 0.3308[0m
[32m  eval_mcc = 0.6298[0m
[32m  eval_precision = 0.4439[0m
[32m  eval_recall = 0.3034[0m
[32m  ********************[0m
[32m  Best f1:0.3308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.2176:  14%|█▍        | 4/28 [00:12<01:21,  3.40s/it]epoch 3 loss 1.24162:  14%|█▍        | 4/28 [00:12<01:21,  3.40s/it]epoch 3 loss 1.24162:  18%|█▊        | 5/28 [00:12<00:53,  2.32s/it]epoch 3 loss 1.24654:  18%|█▊        | 5/28 [00:13<00:53,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6513[0m
[32m  eval_f1 = 0.3326[0m
[32m  eval_mcc = 0.6309[0m
[32m  eval_precision = 0.4429[0m
[32m  eval_recall = 0.3057[0m
[32m  ********************[0m
[32m  Best f1:0.3326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24654:  21%|██▏       | 6/28 [00:19<01:23,  3.79s/it]epoch 3 loss 1.23617:  21%|██▏       | 6/28 [00:19<01:23,  3.79s/it]epoch 3 loss 1.23617:  25%|██▌       | 7/28 [00:19<00:56,  2.69s/it]epoch 3 loss 1.22611:  25%|██▌       | 7/28 [00:20<00:56,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3354[0m
[32m  eval_mcc = 0.6326[0m
[32m  eval_precision = 0.4543[0m
[32m  eval_recall = 0.3072[0m
[32m  ********************[0m
[32m  Best f1:0.3354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22611:  29%|██▊       | 8/28 [00:26<01:17,  3.88s/it]epoch 3 loss 1.246:  29%|██▊       | 8/28 [00:26<01:17,  3.88s/it]  epoch 3 loss 1.246:  32%|███▏      | 9/28 [00:26<00:53,  2.80s/it]epoch 3 loss 1.25633:  32%|███▏      | 9/28 [00:26<00:53,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.654[0m
[32m  eval_f1 = 0.3362[0m
[32m  eval_mcc = 0.634[0m
[32m  eval_precision = 0.4529[0m
[32m  eval_recall = 0.3084[0m
[32m  ********************[0m
[32m  Best f1:0.3362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.634[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25633:  36%|███▌      | 10/28 [00:32<01:10,  3.91s/it]epoch 3 loss 1.27133:  36%|███▌      | 10/28 [00:33<01:10,  3.91s/it]epoch 3 loss 1.27133:  39%|███▉      | 11/28 [00:33<00:48,  2.84s/it]epoch 3 loss 1.28882:  39%|███▉      | 11/28 [00:33<00:48,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6556[0m
[32m  eval_f1 = 0.3376[0m
[32m  eval_mcc = 0.6361[0m
[32m  eval_precision = 0.4463[0m
[32m  eval_recall = 0.3103[0m
[32m  ********************[0m
[32m  Best f1:0.3376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28882:  43%|████▎     | 12/28 [00:42<01:16,  4.80s/it]epoch 3 loss 1.28861:  43%|████▎     | 12/28 [00:43<01:16,  4.80s/it]epoch 3 loss 1.28861:  46%|████▋     | 13/28 [00:43<00:52,  3.47s/it]epoch 3 loss 1.28335:  46%|████▋     | 13/28 [00:43<00:52,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6567[0m
[32m  eval_f1 = 0.3389[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4439[0m
[32m  eval_recall = 0.3118[0m
[32m  ********************[0m
[32m  Best f1:0.3389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28335:  50%|█████     | 14/28 [00:53<01:17,  5.52s/it]epoch 3 loss 1.28252:  50%|█████     | 14/28 [00:53<01:17,  5.52s/it]epoch 3 loss 1.28252:  54%|█████▎    | 15/28 [00:53<00:51,  3.98s/it]epoch 3 loss 1.27798:  54%|█████▎    | 15/28 [00:54<00:51,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6586[0m
[32m  eval_f1 = 0.3443[0m
[32m  eval_mcc = 0.6398[0m
[32m  eval_precision = 0.4493[0m
[32m  eval_recall = 0.3162[0m
[32m  ********************[0m
[32m  Best f1:0.3443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27798:  57%|█████▋    | 16/28 [01:04<01:10,  5.89s/it]epoch 3 loss 1.27879:  57%|█████▋    | 16/28 [01:04<01:10,  5.89s/it]epoch 3 loss 1.27879:  61%|██████    | 17/28 [01:04<00:46,  4.25s/it]epoch 3 loss 1.28277:  61%|██████    | 17/28 [01:04<00:46,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6596[0m
[32m  eval_f1 = 0.3459[0m
[32m  eval_mcc = 0.641[0m
[32m  eval_precision = 0.4503[0m
[32m  eval_recall = 0.3172[0m
[32m  ********************[0m
[32m  Best f1:0.3459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.641[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28277:  64%|██████▍   | 18/28 [01:14<00:58,  5.84s/it]epoch 3 loss 1.28429:  64%|██████▍   | 18/28 [01:14<00:58,  5.84s/it]epoch 3 loss 1.28429:  68%|██████▊   | 19/28 [01:14<00:37,  4.22s/it]epoch 3 loss 1.28185:  68%|██████▊   | 19/28 [01:14<00:37,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6603[0m
[32m  eval_f1 = 0.3467[0m
[32m  eval_mcc = 0.6417[0m
[32m  eval_precision = 0.45[0m
[32m  eval_recall = 0.3177[0m
[32m  ********************[0m
[32m  Best f1:0.3467[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28185:  71%|███████▏  | 20/28 [01:24<00:48,  6.10s/it]epoch 3 loss 1.2784:  71%|███████▏  | 20/28 [01:25<00:48,  6.10s/it] epoch 3 loss 1.2784:  75%|███████▌  | 21/28 [01:25<00:30,  4.39s/it]epoch 3 loss 1.27392:  75%|███████▌  | 21/28 [01:25<00:30,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6603[0m
[32m  eval_f1 = 0.3471[0m
[32m  eval_mcc = 0.6417[0m
[32m  eval_precision = 0.4495[0m
[32m  eval_recall = 0.3182[0m
[32m  ********************[0m
[32m  Best f1:0.3471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.27392:  79%|███████▊  | 22/28 [01:31<00:29,  4.93s/it]epoch 3 loss 1.27033:  79%|███████▊  | 22/28 [01:32<00:29,  4.93s/it]epoch 3 loss 1.27033:  82%|████████▏ | 23/28 [01:32<00:17,  3.58s/it]epoch 3 loss 1.27031:  82%|████████▏ | 23/28 [01:32<00:17,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6606[0m
[32m  eval_f1 = 0.3468[0m
[32m  eval_mcc = 0.6419[0m
[32m  eval_precision = 0.4492[0m
[32m  eval_recall = 0.3179[0m
[32m  ********************[0m
[32m  Best MCC:0.6419[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27031:  86%|████████▌ | 24/28 [01:37<00:16,  4.22s/it]epoch 3 loss 1.2713:  86%|████████▌ | 24/28 [01:38<00:16,  4.22s/it] epoch 3 loss 1.2713:  89%|████████▉ | 25/28 [01:38<00:09,  3.08s/it]epoch 3 loss 1.27075:  89%|████████▉ | 25/28 [01:38<00:09,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.661[0m
[32m  eval_f1 = 0.3475[0m
[32m  eval_mcc = 0.6421[0m
[32m  eval_precision = 0.4507[0m
[32m  eval_recall = 0.3185[0m
[32m  ********************[0m
[32m  Best f1:0.3475[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27075:  93%|█████████▎| 26/28 [01:47<00:09,  4.95s/it]epoch 3 loss 1.27433:  93%|█████████▎| 26/28 [01:47<00:09,  4.95s/it]epoch 3 loss 1.27433:  96%|█████████▋| 27/28 [01:47<00:03,  3.59s/it]epoch 3 loss 1.27138:  96%|█████████▋| 27/28 [01:48<00:03,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6619[0m
[32m  eval_f1 = 0.3485[0m
[32m  eval_mcc = 0.643[0m
[32m  eval_precision = 0.45[0m
[32m  eval_recall = 0.3199[0m
[32m  ********************[0m
[32m  Best f1:0.3485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27138: 100%|██████████| 28/28 [01:57<00:00,  5.49s/it]epoch 3 loss 1.27138: 100%|██████████| 28/28 [01:57<00:00,  4.21s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.27695:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.27695:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 4 loss 1.3034:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.662[0m
[32m  eval_f1 = 0.3488[0m
[32m  eval_mcc = 0.6429[0m
[32m  eval_precision = 0.4507[0m
[32m  eval_recall = 0.32[0m
[32m  ********************[0m
[32m  Best f1:0.3488[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.3034:   7%|▋         | 2/28 [00:06<01:42,  3.96s/it]epoch 4 loss 1.28369:   7%|▋         | 2/28 [00:07<01:42,  3.96s/it]epoch 4 loss 1.28369:  11%|█         | 3/28 [00:07<00:58,  2.34s/it]epoch 4 loss 1.26886:  11%|█         | 3/28 [00:07<00:58,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.663[0m
[32m  eval_f1 = 0.3556[0m
[32m  eval_mcc = 0.6439[0m
[32m  eval_precision = 0.46[0m
[32m  eval_recall = 0.3253[0m
[32m  ********************[0m
[32m  Best f1:0.3556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26886:  14%|█▍        | 4/28 [00:17<02:06,  5.29s/it]epoch 4 loss 1.27564:  14%|█▍        | 4/28 [00:17<02:06,  5.29s/it]epoch 4 loss 1.27564:  18%|█▊        | 5/28 [00:17<01:21,  3.53s/it]epoch 4 loss 1.27098:  18%|█▊        | 5/28 [00:17<01:21,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6632[0m
[32m  eval_f1 = 0.3571[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4601[0m
[32m  eval_recall = 0.3267[0m
[32m  ********************[0m
[32m  Best f1:0.3571[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27098:  21%|██▏       | 6/28 [00:26<01:58,  5.41s/it]epoch 4 loss 1.2612:  21%|██▏       | 6/28 [00:26<01:58,  5.41s/it] epoch 4 loss 1.2612:  25%|██▌       | 7/28 [00:26<01:19,  3.78s/it]epoch 4 loss 1.25778:  25%|██▌       | 7/28 [00:27<01:19,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6633[0m
[32m  eval_f1 = 0.3567[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.461[0m
[32m  eval_recall = 0.3262[0m
[32m  ********************[0m
[32m  Best MCC:0.6443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25778:  29%|██▊       | 8/28 [00:34<01:37,  4.88s/it]epoch 4 loss 1.25503:  29%|██▊       | 8/28 [00:34<01:37,  4.88s/it]epoch 4 loss 1.25503:  32%|███▏      | 9/28 [00:34<01:06,  3.49s/it]epoch 4 loss 1.26241:  32%|███▏      | 9/28 [00:35<01:06,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6635[0m
[32m  eval_f1 = 0.358[0m
[32m  eval_mcc = 0.6446[0m
[32m  eval_precision = 0.4638[0m
[32m  eval_recall = 0.3274[0m
[32m  ********************[0m
[32m  Best f1:0.358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6446[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26241:  36%|███▌      | 10/28 [00:42<01:27,  4.86s/it]epoch 4 loss 1.25988:  36%|███▌      | 10/28 [00:42<01:27,  4.86s/it]epoch 4 loss 1.25988:  39%|███▉      | 11/28 [00:42<00:59,  3.50s/it]epoch 4 loss 1.26175:  39%|███▉      | 11/28 [00:43<00:59,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6633[0m
[32m  eval_f1 = 0.3582[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4646[0m
[32m  eval_recall = 0.3272[0m
[32m  ********************[0m
[32m  Best f1:0.3582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.26175:  43%|████▎     | 12/28 [00:49<01:12,  4.54s/it]epoch 4 loss 1.26229:  43%|████▎     | 12/28 [00:50<01:12,  4.54s/it]epoch 4 loss 1.26229:  46%|████▋     | 13/28 [00:50<00:49,  3.29s/it]epoch 4 loss 1.24695:  46%|████▋     | 13/28 [00:50<00:49,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6633[0m
[32m  eval_f1 = 0.3586[0m
[32m  eval_mcc = 0.6441[0m
[32m  eval_precision = 0.461[0m
[32m  eval_recall = 0.3279[0m
[32m  ********************[0m
[32m  Best f1:0.3586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24695:  50%|█████     | 14/28 [00:57<01:01,  4.39s/it]epoch 4 loss 1.24166:  50%|█████     | 14/28 [00:57<01:01,  4.39s/it]epoch 4 loss 1.24166:  54%|█████▎    | 15/28 [00:57<00:41,  3.19s/it]epoch 4 loss 1.23684:  54%|█████▎    | 15/28 [00:58<00:41,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6634[0m
[32m  eval_f1 = 0.358[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4605[0m
[32m  eval_recall = 0.3274[0m

epoch 4 loss 1.23684:  57%|█████▋    | 16/28 [01:01<00:40,  3.37s/it]epoch 4 loss 1.23569:  57%|█████▋    | 16/28 [01:01<00:40,  3.37s/it]epoch 4 loss 1.23569:  61%|██████    | 17/28 [01:01<00:27,  2.48s/it]epoch 4 loss 1.23428:  61%|██████    | 17/28 [01:02<00:27,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6637[0m
[32m  eval_f1 = 0.3582[0m
[32m  eval_mcc = 0.6446[0m
[32m  eval_precision = 0.4615[0m
[32m  eval_recall = 0.3274[0m
[32m  ********************[0m
[32m  Best MCC:0.6446[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23428:  64%|██████▍   | 18/28 [01:09<00:39,  3.99s/it]epoch 4 loss 1.23649:  64%|██████▍   | 18/28 [01:09<00:39,  3.99s/it]epoch 4 loss 1.23649:  68%|██████▊   | 19/28 [01:09<00:26,  2.92s/it]epoch 4 loss 1.23648:  68%|██████▊   | 19/28 [01:10<00:26,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6644[0m
[32m  eval_f1 = 0.3581[0m
[32m  eval_mcc = 0.6453[0m
[32m  eval_precision = 0.4626[0m
[32m  eval_recall = 0.3273[0m
[32m  ********************[0m
[32m  Best MCC:0.6453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23648:  71%|███████▏  | 20/28 [01:14<00:27,  3.46s/it]epoch 4 loss 1.23344:  71%|███████▏  | 20/28 [01:14<00:27,  3.46s/it]epoch 4 loss 1.23344:  75%|███████▌  | 21/28 [01:14<00:17,  2.55s/it]epoch 4 loss 1.23467:  75%|███████▌  | 21/28 [01:15<00:17,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6645[0m
[32m  eval_f1 = 0.3584[0m
[32m  eval_mcc = 0.6455[0m
[32m  eval_precision = 0.4633[0m
[32m  eval_recall = 0.3275[0m
[32m  ********************[0m
[32m  Best MCC:0.6455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23467:  79%|███████▊  | 22/28 [01:19<00:19,  3.29s/it]epoch 4 loss 1.23391:  79%|███████▊  | 22/28 [01:20<00:19,  3.29s/it]epoch 4 loss 1.23391:  82%|████████▏ | 23/28 [01:20<00:12,  2.43s/it]epoch 4 loss 1.23029:  82%|████████▏ | 23/28 [01:20<00:12,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6643[0m
[32m  eval_f1 = 0.3584[0m
[32m  eval_mcc = 0.6453[0m
[32m  eval_precision = 0.4635[0m
[32m  eval_recall = 0.3275[0m

epoch 4 loss 1.23029:  86%|████████▌ | 24/28 [01:24<00:11,  2.83s/it]epoch 4 loss 1.23477:  86%|████████▌ | 24/28 [01:24<00:11,  2.83s/it]epoch 4 loss 1.23477:  89%|████████▉ | 25/28 [01:24<00:06,  2.10s/it]epoch 4 loss 1.23496:  89%|████████▉ | 25/28 [01:24<00:06,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6643[0m
[32m  eval_f1 = 0.3584[0m
[32m  eval_mcc = 0.6453[0m
[32m  eval_precision = 0.4641[0m
[32m  eval_recall = 0.3275[0m

epoch 4 loss 1.23496:  93%|█████████▎| 26/28 [01:28<00:05,  2.61s/it]epoch 4 loss 1.23334:  93%|█████████▎| 26/28 [01:28<00:05,  2.61s/it]epoch 4 loss 1.23334:  96%|█████████▋| 27/28 [01:28<00:01,  1.95s/it]epoch 4 loss 1.24031:  96%|█████████▋| 27/28 [01:28<00:01,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6644[0m
[32m  eval_f1 = 0.3582[0m
[32m  eval_mcc = 0.6453[0m
[32m  eval_precision = 0.4639[0m
[32m  eval_recall = 0.3274[0m

epoch 4 loss 1.24031: 100%|██████████| 28/28 [01:32<00:00,  2.45s/it]epoch 4 loss 1.24031: 100%|██████████| 28/28 [01:32<00:00,  3.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6633[0m
[32m  eval_f1 = 0.3586[0m
[32m  eval_mcc = 0.6441[0m
[32m  eval_precision = 0.461[0m
[32m  eval_recall = 0.3279[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6436[0m
[32m  eval_f1 = 0.2824[0m
[32m  eval_mcc = 0.6244[0m
[32m  eval_precision = 0.3542[0m
[32m  eval_recall = 0.2653[0m

