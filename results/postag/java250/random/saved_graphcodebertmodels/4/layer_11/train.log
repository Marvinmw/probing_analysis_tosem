[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=11, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.77078:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.77078:   4%|▎         | 1/28 [00:00<00:20,  1.29it/s]epoch 0 loss 5.77455:   4%|▎         | 1/28 [00:01<00:20,  1.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0043[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = 0.003[0m
[32m  eval_precision = 0.0043[0m
[32m  eval_recall = 0.0039[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.77455:   7%|▋         | 2/28 [00:06<01:31,  3.51s/it]epoch 0 loss 5.76574:   7%|▋         | 2/28 [00:06<01:31,  3.51s/it]epoch 0 loss 5.76574:  11%|█         | 3/28 [00:06<00:52,  2.09s/it]epoch 0 loss 5.75177:  11%|█         | 3/28 [00:06<00:52,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0106[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = 0.0081[0m
[32m  eval_precision = 0.006[0m
[32m  eval_recall = 0.0069[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.75177:  14%|█▍        | 4/28 [00:18<02:26,  6.11s/it]epoch 0 loss 5.72607:  14%|█▍        | 4/28 [00:19<02:26,  6.11s/it]epoch 0 loss 5.72607:  18%|█▊        | 5/28 [00:19<01:33,  4.06s/it]epoch 0 loss 5.6916:  18%|█▊        | 5/28 [00:19<01:33,  4.06s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0232[0m
[32m  eval_f1 = 0.0034[0m
[32m  eval_mcc = 0.0145[0m
[32m  eval_precision = 0.0098[0m
[32m  eval_recall = 0.0095[0m
[32m  ********************[0m
[32m  Best f1:0.0034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.6916:  21%|██▏       | 6/28 [00:31<02:28,  6.73s/it]epoch 0 loss 5.65565:  21%|██▏       | 6/28 [00:31<02:28,  6.73s/it]epoch 0 loss 5.65565:  25%|██▌       | 7/28 [00:31<01:37,  4.67s/it]epoch 0 loss 5.60511:  25%|██▌       | 7/28 [00:32<01:37,  4.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0395[0m
[32m  eval_f1 = 0.0048[0m
[32m  eval_mcc = 0.0201[0m
[32m  eval_precision = 0.009[0m
[32m  eval_recall = 0.014[0m
[32m  ********************[0m
[32m  Best f1:0.0048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.60511:  29%|██▊       | 8/28 [00:43<02:21,  7.06s/it]epoch 0 loss 5.55355:  29%|██▊       | 8/28 [00:44<02:21,  7.06s/it]epoch 0 loss 5.55355:  32%|███▏      | 9/28 [00:44<01:34,  4.99s/it]epoch 0 loss 5.49346:  32%|███▏      | 9/28 [00:44<01:34,  4.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0474[0m
[32m  eval_f1 = 0.0079[0m
[32m  eval_mcc = 0.0217[0m
[32m  eval_precision = 0.017[0m
[32m  eval_recall = 0.0172[0m
[32m  ********************[0m
[32m  Best f1:0.0079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.49346:  36%|███▌      | 10/28 [00:56<02:08,  7.13s/it]epoch 0 loss 5.42802:  36%|███▌      | 10/28 [00:56<02:08,  7.13s/it]epoch 0 loss 5.42802:  39%|███▉      | 11/28 [00:56<01:26,  5.07s/it]epoch 0 loss 5.357:  39%|███▉      | 11/28 [00:56<01:26,  5.07s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0566[0m
[32m  eval_f1 = 0.0121[0m
[32m  eval_mcc = 0.0283[0m
[32m  eval_precision = 0.0231[0m
[32m  eval_recall = 0.019[0m
[32m  ********************[0m
[32m  Best f1:0.0121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.357:  43%|████▎     | 12/28 [01:08<01:54,  7.13s/it]epoch 0 loss 5.28366:  43%|████▎     | 12/28 [01:08<01:54,  7.13s/it]epoch 0 loss 5.28366:  46%|████▋     | 13/28 [01:08<01:16,  5.10s/it]epoch 0 loss 5.20687:  46%|████▋     | 13/28 [01:09<01:16,  5.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0794[0m
[32m  eval_f1 = 0.0171[0m
[32m  eval_mcc = 0.0461[0m
[32m  eval_precision = 0.0312[0m
[32m  eval_recall = 0.0225[0m
[32m  ********************[0m
[32m  Best f1:0.0171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20687:  50%|█████     | 14/28 [01:20<01:40,  7.20s/it]epoch 0 loss 5.13077:  50%|█████     | 14/28 [01:21<01:40,  7.20s/it]epoch 0 loss 5.13077:  54%|█████▎    | 15/28 [01:21<01:07,  5.16s/it]epoch 0 loss 5.05242:  54%|█████▎    | 15/28 [01:21<01:07,  5.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1289[0m
[32m  eval_f1 = 0.0251[0m
[32m  eval_mcc = 0.083[0m
[32m  eval_precision = 0.0404[0m
[32m  eval_recall = 0.029[0m
[32m  ********************[0m
[32m  Best f1:0.0251[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.05242:  57%|█████▋    | 16/28 [01:33<01:26,  7.21s/it]epoch 0 loss 4.97447:  57%|█████▋    | 16/28 [01:33<01:26,  7.21s/it]epoch 0 loss 4.97447:  61%|██████    | 17/28 [01:33<00:56,  5.17s/it]epoch 0 loss 4.89756:  61%|██████    | 17/28 [01:34<00:56,  5.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1869[0m
[32m  eval_f1 = 0.0301[0m
[32m  eval_mcc = 0.1348[0m
[32m  eval_precision = 0.0498[0m
[32m  eval_recall = 0.0325[0m
[32m  ********************[0m
[32m  Best f1:0.0301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.89756:  64%|██████▍   | 18/28 [01:45<01:10,  7.09s/it]epoch 0 loss 4.81878:  64%|██████▍   | 18/28 [01:45<01:10,  7.09s/it]epoch 0 loss 4.81878:  68%|██████▊   | 19/28 [01:45<00:45,  5.09s/it]epoch 0 loss 4.74506:  68%|██████▊   | 19/28 [01:46<00:45,  5.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2479[0m
[32m  eval_f1 = 0.0312[0m
[32m  eval_mcc = 0.1994[0m
[32m  eval_precision = 0.0412[0m
[32m  eval_recall = 0.0348[0m
[32m  ********************[0m
[32m  Best f1:0.0312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1994[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.74506:  71%|███████▏  | 20/28 [01:57<00:55,  7.00s/it]epoch 0 loss 4.6758:  71%|███████▏  | 20/28 [01:57<00:55,  7.00s/it] epoch 0 loss 4.6758:  75%|███████▌  | 21/28 [01:57<00:35,  5.02s/it]epoch 0 loss 4.6103:  75%|███████▌  | 21/28 [01:57<00:35,  5.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2714[0m
[32m  eval_f1 = 0.0321[0m
[32m  eval_mcc = 0.2175[0m
[32m  eval_precision = 0.0416[0m
[32m  eval_recall = 0.037[0m
[32m  ********************[0m
[32m  Best f1:0.0321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.6103:  79%|███████▊  | 22/28 [02:08<00:41,  6.91s/it]epoch 0 loss 4.54012:  79%|███████▊  | 22/28 [02:09<00:41,  6.91s/it]epoch 0 loss 4.54012:  82%|████████▏ | 23/28 [02:09<00:24,  4.97s/it]epoch 0 loss 4.47724:  82%|████████▏ | 23/28 [02:09<00:24,  4.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2857[0m
[32m  eval_f1 = 0.0331[0m
[32m  eval_mcc = 0.2317[0m
[32m  eval_precision = 0.0462[0m
[32m  eval_recall = 0.0379[0m
[32m  ********************[0m
[32m  Best f1:0.0331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.47724:  86%|████████▌ | 24/28 [02:20<00:27,  6.86s/it]epoch 0 loss 4.41612:  86%|████████▌ | 24/28 [02:21<00:27,  6.86s/it]epoch 0 loss 4.41612:  89%|████████▉ | 25/28 [02:21<00:14,  4.93s/it]epoch 0 loss 4.3548:  89%|████████▉ | 25/28 [02:21<00:14,  4.93s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3085[0m
[32m  eval_f1 = 0.0427[0m
[32m  eval_mcc = 0.2613[0m
[32m  eval_precision = 0.0628[0m
[32m  eval_recall = 0.0479[0m
[32m  ********************[0m
[32m  Best f1:0.0427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.3548:  93%|█████████▎| 26/28 [02:32<00:13,  6.76s/it]epoch 0 loss 4.29804:  93%|█████████▎| 26/28 [02:32<00:13,  6.76s/it]epoch 0 loss 4.29804:  96%|█████████▋| 27/28 [02:32<00:04,  4.86s/it]epoch 0 loss 4.23866:  96%|█████████▋| 27/28 [02:32<00:04,  4.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3432[0m
[32m  eval_f1 = 0.0728[0m
[32m  eval_mcc = 0.3026[0m
[32m  eval_precision = 0.1209[0m
[32m  eval_recall = 0.0724[0m
[32m  ********************[0m
[32m  Best f1:0.0728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.23866: 100%|██████████| 28/28 [02:44<00:00,  6.90s/it]epoch 0 loss 4.23866: 100%|██████████| 28/28 [02:44<00:00,  5.86s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.66146:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.66146:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.66281:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4249[0m
[32m  eval_f1 = 0.1185[0m
[32m  eval_mcc = 0.3923[0m
[32m  eval_precision = 0.1663[0m
[32m  eval_recall = 0.1097[0m
[32m  ********************[0m
[32m  Best f1:0.1185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.66281:   7%|▋         | 2/28 [00:11<02:54,  6.70s/it]epoch 1 loss 2.64049:   7%|▋         | 2/28 [00:11<02:54,  6.70s/it]epoch 1 loss 2.64049:  11%|█         | 3/28 [00:11<01:35,  3.83s/it]epoch 1 loss 2.62974:  11%|█         | 3/28 [00:12<01:35,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4865[0m
[32m  eval_f1 = 0.1437[0m
[32m  eval_mcc = 0.4544[0m
[32m  eval_precision = 0.1885[0m
[32m  eval_recall = 0.1345[0m
[32m  ********************[0m
[32m  Best f1:0.1437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.62974:  14%|█▍        | 4/28 [00:22<02:39,  6.65s/it]epoch 1 loss 2.57363:  14%|█▍        | 4/28 [00:23<02:39,  6.65s/it]epoch 1 loss 2.57363:  18%|█▊        | 5/28 [00:23<01:41,  4.40s/it]epoch 1 loss 2.52004:  18%|█▊        | 5/28 [00:23<01:41,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5279[0m
[32m  eval_f1 = 0.1533[0m
[32m  eval_mcc = 0.5001[0m
[32m  eval_precision = 0.1863[0m
[32m  eval_recall = 0.1461[0m
[32m  ********************[0m
[32m  Best f1:0.1533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.52004:  21%|██▏       | 6/28 [00:33<02:23,  6.51s/it]epoch 1 loss 2.491:  21%|██▏       | 6/28 [00:34<02:23,  6.51s/it]  epoch 1 loss 2.491:  25%|██▌       | 7/28 [00:34<01:34,  4.52s/it]epoch 1 loss 2.44345:  25%|██▌       | 7/28 [00:34<01:34,  4.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5323[0m
[32m  eval_f1 = 0.1563[0m
[32m  eval_mcc = 0.5122[0m
[32m  eval_precision = 0.1977[0m
[32m  eval_recall = 0.1478[0m
[32m  ********************[0m
[32m  Best f1:0.1563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.44345:  29%|██▊       | 8/28 [00:45<02:11,  6.57s/it]epoch 1 loss 2.40114:  29%|██▊       | 8/28 [00:45<02:11,  6.57s/it]epoch 1 loss 2.40114:  32%|███▏      | 9/28 [00:45<01:28,  4.64s/it]epoch 1 loss 2.38065:  32%|███▏      | 9/28 [00:46<01:28,  4.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5376[0m
[32m  eval_f1 = 0.1621[0m
[32m  eval_mcc = 0.518[0m
[32m  eval_precision = 0.2086[0m
[32m  eval_recall = 0.1525[0m
[32m  ********************[0m
[32m  Best f1:0.1621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.38065:  36%|███▌      | 10/28 [00:56<01:56,  6.49s/it]epoch 1 loss 2.35717:  36%|███▌      | 10/28 [00:56<01:56,  6.49s/it]epoch 1 loss 2.35717:  39%|███▉      | 11/28 [00:56<01:18,  4.63s/it]epoch 1 loss 2.34026:  39%|███▉      | 11/28 [00:57<01:18,  4.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5463[0m
[32m  eval_f1 = 0.1617[0m
[32m  eval_mcc = 0.5214[0m
[32m  eval_precision = 0.1991[0m
[32m  eval_recall = 0.1542[0m
[32m  ********************[0m
[32m  Best MCC:0.5214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.34026:  43%|████▎     | 12/28 [01:04<01:29,  5.62s/it]epoch 1 loss 2.31122:  43%|████▎     | 12/28 [01:05<01:29,  5.62s/it]epoch 1 loss 2.31122:  46%|████▋     | 13/28 [01:05<01:00,  4.05s/it]epoch 1 loss 2.29292:  46%|████▋     | 13/28 [01:05<01:00,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5516[0m
[32m  eval_f1 = 0.1648[0m
[32m  eval_mcc = 0.5244[0m
[32m  eval_precision = 0.2285[0m
[32m  eval_recall = 0.1562[0m
[32m  ********************[0m
[32m  Best f1:0.1648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29292:  50%|█████     | 14/28 [01:15<01:24,  6.07s/it]epoch 1 loss 2.28253:  50%|█████     | 14/28 [01:16<01:24,  6.07s/it]epoch 1 loss 2.28253:  54%|█████▎    | 15/28 [01:16<00:56,  4.37s/it]epoch 1 loss 2.26388:  54%|█████▎    | 15/28 [01:16<00:56,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5539[0m
[32m  eval_f1 = 0.1771[0m
[32m  eval_mcc = 0.5261[0m
[32m  eval_precision = 0.2452[0m
[32m  eval_recall = 0.1651[0m
[32m  ********************[0m
[32m  Best f1:0.1771[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26388:  57%|█████▋    | 16/28 [01:27<01:16,  6.34s/it]epoch 1 loss 2.24223:  57%|█████▋    | 16/28 [01:27<01:16,  6.34s/it]epoch 1 loss 2.24223:  61%|██████    | 17/28 [01:27<00:50,  4.56s/it]epoch 1 loss 2.22614:  61%|██████    | 17/28 [01:27<00:50,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.559[0m
[32m  eval_f1 = 0.1904[0m
[32m  eval_mcc = 0.5319[0m
[32m  eval_precision = 0.2518[0m
[32m  eval_recall = 0.1787[0m
[32m  ********************[0m
[32m  Best f1:0.1904[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.22614:  64%|██████▍   | 18/28 [01:38<01:05,  6.53s/it]epoch 1 loss 2.20196:  64%|██████▍   | 18/28 [01:39<01:05,  6.53s/it]epoch 1 loss 2.20196:  68%|██████▊   | 19/28 [01:39<00:42,  4.70s/it]epoch 1 loss 2.18636:  68%|██████▊   | 19/28 [01:39<00:42,  4.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5732[0m
[32m  eval_f1 = 0.1944[0m
[32m  eval_mcc = 0.5472[0m
[32m  eval_precision = 0.2496[0m
[32m  eval_recall = 0.1837[0m
[32m  ********************[0m
[32m  Best f1:0.1944[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.18636:  71%|███████▏  | 20/28 [01:50<00:52,  6.56s/it]epoch 1 loss 2.16873:  71%|███████▏  | 20/28 [01:50<00:52,  6.56s/it]epoch 1 loss 2.16873:  75%|███████▌  | 21/28 [01:50<00:33,  4.72s/it]epoch 1 loss 2.16027:  75%|███████▌  | 21/28 [01:50<00:33,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5799[0m
[32m  eval_f1 = 0.2049[0m
[32m  eval_mcc = 0.5551[0m
[32m  eval_precision = 0.2742[0m
[32m  eval_recall = 0.1944[0m
[32m  ********************[0m
[32m  Best f1:0.2049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16027:  79%|███████▊  | 22/28 [02:01<00:39,  6.50s/it]epoch 1 loss 2.14178:  79%|███████▊  | 22/28 [02:01<00:39,  6.50s/it]epoch 1 loss 2.14178:  82%|████████▏ | 23/28 [02:01<00:23,  4.68s/it]epoch 1 loss 2.12597:  82%|████████▏ | 23/28 [02:01<00:23,  4.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5849[0m
[32m  eval_f1 = 0.2102[0m
[32m  eval_mcc = 0.5612[0m
[32m  eval_precision = 0.2894[0m
[32m  eval_recall = 0.1988[0m
[32m  ********************[0m
[32m  Best f1:0.2102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12597:  86%|████████▌ | 24/28 [02:12<00:26,  6.51s/it]epoch 1 loss 2.11466:  86%|████████▌ | 24/28 [02:12<00:26,  6.51s/it]epoch 1 loss 2.11466:  89%|████████▉ | 25/28 [02:12<00:14,  4.68s/it]epoch 1 loss 2.09441:  89%|████████▉ | 25/28 [02:13<00:14,  4.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5879[0m
[32m  eval_f1 = 0.2143[0m
[32m  eval_mcc = 0.5659[0m
[32m  eval_precision = 0.2987[0m
[32m  eval_recall = 0.2014[0m
[32m  ********************[0m
[32m  Best f1:0.2143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09441:  93%|█████████▎| 26/28 [02:23<00:12,  6.41s/it]epoch 1 loss 2.08532:  93%|█████████▎| 26/28 [02:23<00:12,  6.41s/it]epoch 1 loss 2.08532:  96%|█████████▋| 27/28 [02:23<00:04,  4.61s/it]epoch 1 loss 2.06835:  96%|█████████▋| 27/28 [02:23<00:04,  4.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.589[0m
[32m  eval_f1 = 0.2196[0m
[32m  eval_mcc = 0.5686[0m
[32m  eval_precision = 0.3178[0m
[32m  eval_recall = 0.2046[0m
[32m  ********************[0m
[32m  Best f1:0.2196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.06835: 100%|██████████| 28/28 [02:34<00:00,  6.43s/it]epoch 1 loss 2.06835: 100%|██████████| 28/28 [02:34<00:00,  5.51s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.64143:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.64143:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 2 loss 1.69496:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5912[0m
[32m  eval_f1 = 0.2264[0m
[32m  eval_mcc = 0.5711[0m
[32m  eval_precision = 0.332[0m
[32m  eval_recall = 0.2094[0m
[32m  ********************[0m
[32m  Best f1:0.2264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5711[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.69496:   7%|▋         | 2/28 [00:11<02:52,  6.64s/it]epoch 2 loss 1.72157:   7%|▋         | 2/28 [00:11<02:52,  6.64s/it]epoch 2 loss 1.72157:  11%|█         | 3/28 [00:11<01:34,  3.80s/it]epoch 2 loss 1.69276:  11%|█         | 3/28 [00:12<01:34,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5954[0m
[32m  eval_f1 = 0.2339[0m
[32m  eval_mcc = 0.5743[0m
[32m  eval_precision = 0.3314[0m
[32m  eval_recall = 0.2162[0m
[32m  ********************[0m
[32m  Best f1:0.2339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.69276:  14%|█▍        | 4/28 [00:22<02:38,  6.62s/it]epoch 2 loss 1.69192:  14%|█▍        | 4/28 [00:23<02:38,  6.62s/it]epoch 2 loss 1.69192:  18%|█▊        | 5/28 [00:23<01:40,  4.38s/it]epoch 2 loss 1.69446:  18%|█▊        | 5/28 [00:23<01:40,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6003[0m
[32m  eval_f1 = 0.2352[0m
[32m  eval_mcc = 0.5789[0m
[32m  eval_precision = 0.3181[0m
[32m  eval_recall = 0.2182[0m
[32m  ********************[0m
[32m  Best f1:0.2352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5789[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.69446:  21%|██▏       | 6/28 [00:33<02:23,  6.50s/it]epoch 2 loss 1.68127:  21%|██▏       | 6/28 [00:34<02:23,  6.50s/it]epoch 2 loss 1.68127:  25%|██▌       | 7/28 [00:34<01:34,  4.51s/it]epoch 2 loss 1.66953:  25%|██▌       | 7/28 [00:34<01:34,  4.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6037[0m
[32m  eval_f1 = 0.2401[0m
[32m  eval_mcc = 0.5811[0m
[32m  eval_precision = 0.3266[0m
[32m  eval_recall = 0.2232[0m
[32m  ********************[0m
[32m  Best f1:0.2401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5811[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.66953:  29%|██▊       | 8/28 [00:44<02:07,  6.38s/it]epoch 2 loss 1.66942:  29%|██▊       | 8/28 [00:45<02:07,  6.38s/it]epoch 2 loss 1.66942:  32%|███▏      | 9/28 [00:45<01:25,  4.52s/it]epoch 2 loss 1.668:  32%|███▏      | 9/28 [00:45<01:25,  4.52s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6043[0m
[32m  eval_f1 = 0.2415[0m
[32m  eval_mcc = 0.5811[0m
[32m  eval_precision = 0.3346[0m
[32m  eval_recall = 0.2246[0m
[32m  ********************[0m
[32m  Best f1:0.2415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.668:  36%|███▌      | 10/28 [00:52<01:35,  5.31s/it]epoch 2 loss 1.66453:  36%|███▌      | 10/28 [00:52<01:35,  5.31s/it]epoch 2 loss 1.66453:  39%|███▉      | 11/28 [00:52<01:04,  3.82s/it]epoch 2 loss 1.66192:  39%|███▉      | 11/28 [00:52<01:04,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6064[0m
[32m  eval_f1 = 0.2455[0m
[32m  eval_mcc = 0.5833[0m
[32m  eval_precision = 0.3425[0m
[32m  eval_recall = 0.2279[0m
[32m  ********************[0m
[32m  Best f1:0.2455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.66192:  43%|████▎     | 12/28 [01:03<01:34,  5.90s/it]epoch 2 loss 1.65933:  43%|████▎     | 12/28 [01:03<01:34,  5.90s/it]epoch 2 loss 1.65933:  46%|████▋     | 13/28 [01:03<01:03,  4.24s/it]epoch 2 loss 1.65583:  46%|████▋     | 13/28 [01:04<01:03,  4.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6104[0m
[32m  eval_f1 = 0.2505[0m
[32m  eval_mcc = 0.5877[0m
[32m  eval_precision = 0.3521[0m
[32m  eval_recall = 0.2329[0m
[32m  ********************[0m
[32m  Best f1:0.2505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5877[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.65583:  50%|█████     | 14/28 [01:14<01:28,  6.34s/it]epoch 2 loss 1.65068:  50%|█████     | 14/28 [01:15<01:28,  6.34s/it]epoch 2 loss 1.65068:  54%|█████▎    | 15/28 [01:15<00:59,  4.55s/it]epoch 2 loss 1.63778:  54%|█████▎    | 15/28 [01:15<00:59,  4.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6129[0m
[32m  eval_f1 = 0.2522[0m
[32m  eval_mcc = 0.5904[0m
[32m  eval_precision = 0.3514[0m
[32m  eval_recall = 0.2359[0m
[32m  ********************[0m
[32m  Best f1:0.2522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5904[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63778:  57%|█████▋    | 16/28 [01:26<01:17,  6.47s/it]epoch 2 loss 1.63148:  57%|█████▋    | 16/28 [01:26<01:17,  6.47s/it]epoch 2 loss 1.63148:  61%|██████    | 17/28 [01:26<00:51,  4.65s/it]epoch 2 loss 1.62961:  61%|██████    | 17/28 [01:26<00:51,  4.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6157[0m
[32m  eval_f1 = 0.2561[0m
[32m  eval_mcc = 0.5937[0m
[32m  eval_precision = 0.3508[0m
[32m  eval_recall = 0.2392[0m
[32m  ********************[0m
[32m  Best f1:0.2561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62961:  64%|██████▍   | 18/28 [01:37<01:06,  6.62s/it]epoch 2 loss 1.62994:  64%|██████▍   | 18/28 [01:38<01:06,  6.62s/it]epoch 2 loss 1.62994:  68%|██████▊   | 19/28 [01:38<00:42,  4.76s/it]epoch 2 loss 1.62633:  68%|██████▊   | 19/28 [01:38<00:42,  4.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6172[0m
[32m  eval_f1 = 0.2591[0m
[32m  eval_mcc = 0.5969[0m
[32m  eval_precision = 0.3526[0m
[32m  eval_recall = 0.2414[0m
[32m  ********************[0m
[32m  Best f1:0.2591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5969[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62633:  71%|███████▏  | 20/28 [01:49<00:53,  6.66s/it]epoch 2 loss 1.61082:  71%|███████▏  | 20/28 [01:49<00:53,  6.66s/it]epoch 2 loss 1.61082:  75%|███████▌  | 21/28 [01:49<00:33,  4.79s/it]epoch 2 loss 1.60443:  75%|███████▌  | 21/28 [01:50<00:33,  4.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6173[0m
[32m  eval_f1 = 0.2596[0m
[32m  eval_mcc = 0.599[0m
[32m  eval_precision = 0.3489[0m
[32m  eval_recall = 0.2417[0m
[32m  ********************[0m
[32m  Best f1:0.2596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60443:  79%|███████▊  | 22/28 [02:00<00:39,  6.61s/it]epoch 2 loss 1.5982:  79%|███████▊  | 22/28 [02:00<00:39,  6.61s/it] epoch 2 loss 1.5982:  82%|████████▏ | 23/28 [02:00<00:23,  4.75s/it]epoch 2 loss 1.60196:  82%|████████▏ | 23/28 [02:01<00:23,  4.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6193[0m
[32m  eval_f1 = 0.2627[0m
[32m  eval_mcc = 0.6001[0m
[32m  eval_precision = 0.3512[0m
[32m  eval_recall = 0.2446[0m
[32m  ********************[0m
[32m  Best f1:0.2627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60196:  86%|████████▌ | 24/28 [02:11<00:26,  6.52s/it]epoch 2 loss 1.59353:  86%|████████▌ | 24/28 [02:12<00:26,  6.52s/it]epoch 2 loss 1.59353:  89%|████████▉ | 25/28 [02:12<00:14,  4.69s/it]epoch 2 loss 1.58986:  89%|████████▉ | 25/28 [02:12<00:14,  4.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6207[0m
[32m  eval_f1 = 0.2647[0m
[32m  eval_mcc = 0.5994[0m
[32m  eval_precision = 0.3576[0m
[32m  eval_recall = 0.2471[0m
[32m  ********************[0m
[32m  Best f1:0.2647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.58986:  93%|█████████▎| 26/28 [02:19<00:10,  5.42s/it]epoch 2 loss 1.59368:  93%|█████████▎| 26/28 [02:19<00:10,  5.42s/it]epoch 2 loss 1.59368:  96%|█████████▋| 27/28 [02:19<00:03,  3.92s/it]epoch 2 loss 1.58899:  96%|█████████▋| 27/28 [02:19<00:03,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6224[0m
[32m  eval_f1 = 0.268[0m
[32m  eval_mcc = 0.6[0m
[32m  eval_precision = 0.3679[0m
[32m  eval_recall = 0.2509[0m
[32m  ********************[0m
[32m  Best f1:0.268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.58899: 100%|██████████| 28/28 [02:27<00:00,  5.01s/it]epoch 2 loss 1.58899: 100%|██████████| 28/28 [02:27<00:00,  5.25s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.33289:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.33289:   4%|▎         | 1/28 [00:00<00:11,  2.30it/s]epoch 3 loss 1.38548:   4%|▎         | 1/28 [00:00<00:11,  2.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6241[0m
[32m  eval_f1 = 0.2688[0m
[32m  eval_mcc = 0.6016[0m
[32m  eval_precision = 0.3669[0m
[32m  eval_recall = 0.2512[0m
[32m  ********************[0m
[32m  Best f1:0.2688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38548:   7%|▋         | 2/28 [00:11<02:46,  6.39s/it]epoch 3 loss 1.39138:   7%|▋         | 2/28 [00:11<02:46,  6.39s/it]epoch 3 loss 1.39138:  11%|█         | 3/28 [00:11<01:31,  3.67s/it]epoch 3 loss 1.41496:  11%|█         | 3/28 [00:11<01:31,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.625[0m
[32m  eval_f1 = 0.2692[0m
[32m  eval_mcc = 0.6026[0m
[32m  eval_precision = 0.3747[0m
[32m  eval_recall = 0.2517[0m
[32m  ********************[0m
[32m  Best f1:0.2692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41496:  14%|█▍        | 4/28 [00:19<02:13,  5.54s/it]epoch 3 loss 1.44292:  14%|█▍        | 4/28 [00:20<02:13,  5.54s/it]epoch 3 loss 1.44292:  18%|█▊        | 5/28 [00:20<01:25,  3.70s/it]epoch 3 loss 1.44784:  18%|█▊        | 5/28 [00:20<01:25,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6274[0m
[32m  eval_f1 = 0.2705[0m
[32m  eval_mcc = 0.6052[0m
[32m  eval_precision = 0.374[0m
[32m  eval_recall = 0.2534[0m
[32m  ********************[0m
[32m  Best f1:0.2705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44784:  21%|██▏       | 6/28 [00:31<02:14,  6.09s/it]epoch 3 loss 1.43709:  21%|██▏       | 6/28 [00:31<02:14,  6.09s/it]epoch 3 loss 1.43709:  25%|██▌       | 7/28 [00:31<01:28,  4.24s/it]epoch 3 loss 1.42505:  25%|██▌       | 7/28 [00:31<01:28,  4.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6289[0m
[32m  eval_f1 = 0.2718[0m
[32m  eval_mcc = 0.6072[0m
[32m  eval_precision = 0.3783[0m
[32m  eval_recall = 0.2539[0m
[32m  ********************[0m
[32m  Best f1:0.2718[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42505:  29%|██▊       | 8/28 [00:41<02:03,  6.18s/it]epoch 3 loss 1.44513:  29%|██▊       | 8/28 [00:42<02:03,  6.18s/it]epoch 3 loss 1.44513:  32%|███▏      | 9/28 [00:42<01:23,  4.38s/it]epoch 3 loss 1.45543:  32%|███▏      | 9/28 [00:42<01:23,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6308[0m
[32m  eval_f1 = 0.2757[0m
[32m  eval_mcc = 0.6103[0m
[32m  eval_precision = 0.3711[0m
[32m  eval_recall = 0.2568[0m
[32m  ********************[0m
[32m  Best f1:0.2757[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45543:  36%|███▌      | 10/28 [00:52<01:53,  6.31s/it]epoch 3 loss 1.47126:  36%|███▌      | 10/28 [00:53<01:53,  6.31s/it]epoch 3 loss 1.47126:  39%|███▉      | 11/28 [00:53<01:16,  4.51s/it]epoch 3 loss 1.48738:  39%|███▉      | 11/28 [00:53<01:16,  4.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6313[0m
[32m  eval_f1 = 0.2794[0m
[32m  eval_mcc = 0.6114[0m
[32m  eval_precision = 0.3805[0m
[32m  eval_recall = 0.2595[0m
[32m  ********************[0m
[32m  Best f1:0.2794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48738:  43%|████▎     | 12/28 [01:04<01:43,  6.47s/it]epoch 3 loss 1.48595:  43%|████▎     | 12/28 [01:04<01:43,  6.47s/it]epoch 3 loss 1.48595:  46%|████▋     | 13/28 [01:04<01:09,  4.64s/it]epoch 3 loss 1.48106:  46%|████▋     | 13/28 [01:05<01:09,  4.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6317[0m
[32m  eval_f1 = 0.2812[0m
[32m  eval_mcc = 0.6122[0m
[32m  eval_precision = 0.396[0m
[32m  eval_recall = 0.261[0m
[32m  ********************[0m
[32m  Best f1:0.2812[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48106:  50%|█████     | 14/28 [01:15<01:30,  6.49s/it]epoch 3 loss 1.47942:  50%|█████     | 14/28 [01:15<01:30,  6.49s/it]epoch 3 loss 1.47942:  54%|█████▎    | 15/28 [01:15<01:00,  4.66s/it]epoch 3 loss 1.47495:  54%|█████▎    | 15/28 [01:16<01:00,  4.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6321[0m
[32m  eval_f1 = 0.2823[0m
[32m  eval_mcc = 0.6125[0m
[32m  eval_precision = 0.3883[0m
[32m  eval_recall = 0.262[0m
[32m  ********************[0m
[32m  Best f1:0.2823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47495:  57%|█████▋    | 16/28 [01:26<01:17,  6.44s/it]epoch 3 loss 1.47482:  57%|█████▋    | 16/28 [01:26<01:17,  6.44s/it]epoch 3 loss 1.47482:  61%|██████    | 17/28 [01:26<00:50,  4.63s/it]epoch 3 loss 1.47872:  61%|██████    | 17/28 [01:27<00:50,  4.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6328[0m
[32m  eval_f1 = 0.2882[0m
[32m  eval_mcc = 0.6128[0m
[32m  eval_precision = 0.394[0m
[32m  eval_recall = 0.266[0m
[32m  ********************[0m
[32m  Best f1:0.2882[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47872:  64%|██████▍   | 18/28 [01:37<01:04,  6.42s/it]epoch 3 loss 1.48125:  64%|██████▍   | 18/28 [01:37<01:04,  6.42s/it]epoch 3 loss 1.48125:  68%|██████▊   | 19/28 [01:37<00:41,  4.62s/it]epoch 3 loss 1.47981:  68%|██████▊   | 19/28 [01:38<00:41,  4.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6331[0m
[32m  eval_f1 = 0.2887[0m
[32m  eval_mcc = 0.6128[0m
[32m  eval_precision = 0.3953[0m
[32m  eval_recall = 0.2662[0m
[32m  ********************[0m
[32m  Best f1:0.2887[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.47981:  71%|███████▏  | 20/28 [01:45<00:43,  5.41s/it]epoch 3 loss 1.47592:  71%|███████▏  | 20/28 [01:45<00:43,  5.41s/it]epoch 3 loss 1.47592:  75%|███████▌  | 21/28 [01:45<00:27,  3.91s/it]epoch 3 loss 1.47088:  75%|███████▌  | 21/28 [01:45<00:27,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.633[0m
[32m  eval_f1 = 0.2892[0m
[32m  eval_mcc = 0.6126[0m
[32m  eval_precision = 0.3868[0m
[32m  eval_recall = 0.2667[0m
[32m  ********************[0m
[32m  Best f1:0.2892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.47088:  79%|███████▊  | 22/28 [01:52<00:29,  4.95s/it]epoch 3 loss 1.46711:  79%|███████▊  | 22/28 [01:53<00:29,  4.95s/it]epoch 3 loss 1.46711:  82%|████████▏ | 23/28 [01:53<00:17,  3.59s/it]epoch 3 loss 1.4661:  82%|████████▏ | 23/28 [01:53<00:17,  3.59s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6337[0m
[32m  eval_f1 = 0.289[0m
[32m  eval_mcc = 0.6131[0m
[32m  eval_precision = 0.3876[0m
[32m  eval_recall = 0.2666[0m
[32m  ********************[0m
[32m  Best MCC:0.6131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4661:  86%|████████▌ | 24/28 [02:00<00:19,  4.82s/it]epoch 3 loss 1.46726:  86%|████████▌ | 24/28 [02:01<00:19,  4.82s/it]epoch 3 loss 1.46726:  89%|████████▉ | 25/28 [02:01<00:10,  3.51s/it]epoch 3 loss 1.46691:  89%|████████▉ | 25/28 [02:01<00:10,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6345[0m
[32m  eval_f1 = 0.29[0m
[32m  eval_mcc = 0.6138[0m
[32m  eval_precision = 0.3894[0m
[32m  eval_recall = 0.2674[0m
[32m  ********************[0m
[32m  Best f1:0.29[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46691:  93%|█████████▎| 26/28 [02:12<00:11,  5.69s/it]epoch 3 loss 1.47013:  93%|█████████▎| 26/28 [02:12<00:11,  5.69s/it]epoch 3 loss 1.47013:  96%|█████████▋| 27/28 [02:12<00:04,  4.11s/it]epoch 3 loss 1.46623:  96%|█████████▋| 27/28 [02:12<00:04,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6353[0m
[32m  eval_f1 = 0.2907[0m
[32m  eval_mcc = 0.6146[0m
[32m  eval_precision = 0.391[0m
[32m  eval_recall = 0.268[0m
[32m  ********************[0m
[32m  Best f1:0.2907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46623: 100%|██████████| 28/28 [02:23<00:00,  6.11s/it]epoch 3 loss 1.46623: 100%|██████████| 28/28 [02:23<00:00,  5.12s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.47044:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.47044:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 4 loss 1.50711:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6366[0m
[32m  eval_f1 = 0.2919[0m
[32m  eval_mcc = 0.6158[0m
[32m  eval_precision = 0.3905[0m
[32m  eval_recall = 0.269[0m
[32m  ********************[0m
[32m  Best f1:0.2919[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.50711:   7%|▋         | 2/28 [00:11<02:50,  6.54s/it]epoch 4 loss 1.48671:   7%|▋         | 2/28 [00:11<02:50,  6.54s/it]epoch 4 loss 1.48671:  11%|█         | 3/28 [00:11<01:33,  3.75s/it]epoch 4 loss 1.467:  11%|█         | 3/28 [00:12<01:33,  3.75s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.637[0m
[32m  eval_f1 = 0.2932[0m
[32m  eval_mcc = 0.6165[0m
[32m  eval_precision = 0.3887[0m
[32m  eval_recall = 0.2701[0m
[32m  ********************[0m
[32m  Best f1:0.2932[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.467:  14%|█▍        | 4/28 [00:22<02:35,  6.47s/it]epoch 4 loss 1.46894:  14%|█▍        | 4/28 [00:22<02:35,  6.47s/it]epoch 4 loss 1.46894:  18%|█▊        | 5/28 [00:22<01:38,  4.29s/it]epoch 4 loss 1.46437:  18%|█▊        | 5/28 [00:23<01:38,  4.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6376[0m
[32m  eval_f1 = 0.2973[0m
[32m  eval_mcc = 0.6174[0m
[32m  eval_precision = 0.4057[0m
[32m  eval_recall = 0.2728[0m
[32m  ********************[0m
[32m  Best f1:0.2973[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6174[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.46437:  21%|██▏       | 6/28 [00:33<02:20,  6.40s/it]epoch 4 loss 1.4529:  21%|██▏       | 6/28 [00:33<02:20,  6.40s/it] epoch 4 loss 1.4529:  25%|██▌       | 7/28 [00:33<01:33,  4.45s/it]epoch 4 loss 1.4452:  25%|██▌       | 7/28 [00:34<01:33,  4.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6378[0m
[32m  eval_f1 = 0.2985[0m
[32m  eval_mcc = 0.6178[0m
[32m  eval_precision = 0.407[0m
[32m  eval_recall = 0.2737[0m
[32m  ********************[0m
[32m  Best f1:0.2985[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.4452:  29%|██▊       | 8/28 [00:44<02:07,  6.40s/it]epoch 4 loss 1.4427:  29%|██▊       | 8/28 [00:44<02:07,  6.40s/it]epoch 4 loss 1.4427:  32%|███▏      | 9/28 [00:44<01:26,  4.53s/it]epoch 4 loss 1.44981:  32%|███▏      | 9/28 [00:45<01:26,  4.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6373[0m
[32m  eval_f1 = 0.2973[0m
[32m  eval_mcc = 0.6173[0m
[32m  eval_precision = 0.4148[0m
[32m  eval_recall = 0.2731[0m

epoch 4 loss 1.44981:  36%|███▌      | 10/28 [00:48<01:17,  4.29s/it]epoch 4 loss 1.44701:  36%|███▌      | 10/28 [00:48<01:17,  4.29s/it]epoch 4 loss 1.44701:  39%|███▉      | 11/28 [00:48<00:52,  3.10s/it]epoch 4 loss 1.44949:  39%|███▉      | 11/28 [00:49<00:52,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6371[0m
[32m  eval_f1 = 0.2973[0m
[32m  eval_mcc = 0.617[0m
[32m  eval_precision = 0.4149[0m
[32m  eval_recall = 0.2731[0m

epoch 4 loss 1.44949:  43%|████▎     | 12/28 [00:52<00:52,  3.31s/it]epoch 4 loss 1.45359:  43%|████▎     | 12/28 [00:53<00:52,  3.31s/it]epoch 4 loss 1.45359:  46%|████▋     | 13/28 [00:53<00:36,  2.43s/it]epoch 4 loss 1.43837:  46%|████▋     | 13/28 [00:53<00:36,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6379[0m
[32m  eval_f1 = 0.2974[0m
[32m  eval_mcc = 0.6175[0m
[32m  eval_precision = 0.4152[0m
[32m  eval_recall = 0.2732[0m

epoch 4 loss 1.43837:  50%|█████     | 14/28 [00:56<00:39,  2.83s/it]epoch 4 loss 1.43235:  50%|█████     | 14/28 [00:57<00:39,  2.83s/it]epoch 4 loss 1.43235:  54%|█████▎    | 15/28 [00:57<00:27,  2.10s/it]epoch 4 loss 1.42778:  54%|█████▎    | 15/28 [00:57<00:27,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6377[0m
[32m  eval_f1 = 0.2988[0m
[32m  eval_mcc = 0.6172[0m
[32m  eval_precision = 0.4141[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best f1:0.2988[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.42778:  57%|█████▋    | 16/28 [01:03<00:41,  3.46s/it]epoch 4 loss 1.42729:  57%|█████▋    | 16/28 [01:04<00:41,  3.46s/it]epoch 4 loss 1.42729:  61%|██████    | 17/28 [01:04<00:28,  2.55s/it]epoch 4 loss 1.42636:  61%|██████    | 17/28 [01:04<00:28,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6381[0m
[32m  eval_f1 = 0.2988[0m
[32m  eval_mcc = 0.6176[0m
[32m  eval_precision = 0.4141[0m
[32m  eval_recall = 0.2737[0m

epoch 4 loss 1.42636:  64%|██████▍   | 18/28 [01:07<00:29,  2.92s/it]epoch 4 loss 1.42962:  64%|██████▍   | 18/28 [01:08<00:29,  2.92s/it]epoch 4 loss 1.42962:  68%|██████▊   | 19/28 [01:08<00:19,  2.16s/it]epoch 4 loss 1.42874:  68%|██████▊   | 19/28 [01:08<00:19,  2.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6383[0m
[32m  eval_f1 = 0.2989[0m
[32m  eval_mcc = 0.6178[0m
[32m  eval_precision = 0.4142[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best f1:0.2989[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42874:  71%|███████▏  | 20/28 [01:18<00:36,  4.62s/it]epoch 4 loss 1.425:  71%|███████▏  | 20/28 [01:19<00:36,  4.62s/it]  epoch 4 loss 1.425:  75%|███████▌  | 21/28 [01:19<00:23,  3.36s/it]epoch 4 loss 1.42619:  75%|███████▌  | 21/28 [01:19<00:23,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6386[0m
[32m  eval_f1 = 0.2989[0m
[32m  eval_mcc = 0.6181[0m
[32m  eval_precision = 0.4145[0m
[32m  eval_recall = 0.2739[0m
[32m  ********************[0m
[32m  Best f1:0.2989[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42619:  79%|███████▊  | 22/28 [01:29<00:31,  5.33s/it]epoch 4 loss 1.42439:  79%|███████▊  | 22/28 [01:29<00:31,  5.33s/it]epoch 4 loss 1.42439:  82%|████████▏ | 23/28 [01:29<00:19,  3.86s/it]epoch 4 loss 1.42095:  82%|████████▏ | 23/28 [01:29<00:19,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.639[0m
[32m  eval_f1 = 0.299[0m
[32m  eval_mcc = 0.6185[0m
[32m  eval_precision = 0.4146[0m
[32m  eval_recall = 0.2739[0m
[32m  ********************[0m
[32m  Best f1:0.299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42095:  86%|████████▌ | 24/28 [01:39<00:23,  5.84s/it]epoch 4 loss 1.42531:  86%|████████▌ | 24/28 [01:40<00:23,  5.84s/it]epoch 4 loss 1.42531:  89%|████████▉ | 25/28 [01:40<00:12,  4.22s/it]epoch 4 loss 1.42458:  89%|████████▉ | 25/28 [01:40<00:12,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.2989[0m
[32m  eval_mcc = 0.6184[0m
[32m  eval_precision = 0.4144[0m
[32m  eval_recall = 0.2738[0m

epoch 4 loss 1.42458:  93%|█████████▎| 26/28 [01:44<00:08,  4.08s/it]epoch 4 loss 1.42186:  93%|█████████▎| 26/28 [01:44<00:08,  4.08s/it]epoch 4 loss 1.42186:  96%|█████████▋| 27/28 [01:44<00:02,  2.98s/it]epoch 4 loss 1.43019:  96%|█████████▋| 27/28 [01:44<00:02,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6387[0m
[32m  eval_f1 = 0.2988[0m
[32m  eval_mcc = 0.6183[0m
[32m  eval_precision = 0.4143[0m
[32m  eval_recall = 0.2738[0m

epoch 4 loss 1.43019: 100%|██████████| 28/28 [01:48<00:00,  3.16s/it]epoch 4 loss 1.43019: 100%|██████████| 28/28 [01:48<00:00,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.78it/s] 20%|██        | 2/10 [00:00<00:02,  2.77it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.639[0m
[32m  eval_f1 = 0.299[0m
[32m  eval_mcc = 0.6185[0m
[32m  eval_precision = 0.4146[0m
[32m  eval_recall = 0.2739[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.78it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6212[0m
[32m  eval_f1 = 0.2419[0m
[32m  eval_mcc = 0.6009[0m
[32m  eval_precision = 0.3204[0m
[32m  eval_recall = 0.2236[0m

