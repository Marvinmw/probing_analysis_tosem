[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.75868:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.75868:   4%|▎         | 1/28 [00:00<00:21,  1.26it/s]epoch 0 loss 5.76209:   4%|▎         | 1/28 [00:01<00:21,  1.26it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0013[0m
[32m  eval_f1 = 0.0004[0m
[32m  eval_mcc = -0.0005[0m
[32m  eval_precision = 0.0026[0m
[32m  eval_recall = 0.0004[0m
[32m  ********************[0m
[32m  Best f1:0.0004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.76209:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 0 loss 5.75314:   7%|▋         | 2/28 [00:05<01:21,  3.13s/it]epoch 0 loss 5.75314:  11%|█         | 3/28 [00:05<00:47,  1.88s/it]epoch 0 loss 5.73776:  11%|█         | 3/28 [00:06<00:47,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0037[0m
[32m  eval_f1 = 0.0013[0m
[32m  eval_mcc = -0.0[0m
[32m  eval_precision = 0.008[0m
[32m  eval_recall = 0.0012[0m
[32m  ********************[0m
[32m  Best f1:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.73776:  14%|█▍        | 4/28 [00:13<01:37,  4.04s/it]epoch 0 loss 5.70984:  14%|█▍        | 4/28 [00:13<01:37,  4.04s/it]epoch 0 loss 5.70984:  18%|█▊        | 5/28 [00:13<01:02,  2.74s/it]epoch 0 loss 5.67471:  18%|█▊        | 5/28 [00:14<01:02,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0129[0m
[32m  eval_f1 = 0.0024[0m
[32m  eval_mcc = 0.0016[0m
[32m  eval_precision = 0.0059[0m
[32m  eval_recall = 0.0038[0m
[32m  ********************[0m
[32m  Best f1:0.0024[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.67471:  21%|██▏       | 6/28 [00:21<01:38,  4.50s/it]epoch 0 loss 5.63667:  21%|██▏       | 6/28 [00:22<01:38,  4.50s/it]epoch 0 loss 5.63667:  25%|██▌       | 7/28 [00:22<01:06,  3.16s/it]epoch 0 loss 5.58487:  25%|██▌       | 7/28 [00:22<01:06,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0337[0m
[32m  eval_f1 = 0.0055[0m
[32m  eval_mcc = 0.0114[0m
[32m  eval_precision = 0.0088[0m
[32m  eval_recall = 0.0106[0m
[32m  ********************[0m
[32m  Best f1:0.0055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.58487:  29%|██▊       | 8/28 [00:33<01:52,  5.64s/it]epoch 0 loss 5.5325:  29%|██▊       | 8/28 [00:33<01:52,  5.64s/it] epoch 0 loss 5.5325:  32%|███▏      | 9/28 [00:33<01:16,  4.01s/it]epoch 0 loss 5.47101:  32%|███▏      | 9/28 [00:33<01:16,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.047[0m
[32m  eval_f1 = 0.0092[0m
[32m  eval_mcc = 0.0211[0m
[32m  eval_precision = 0.0175[0m
[32m  eval_recall = 0.0149[0m
[32m  ********************[0m
[32m  Best f1:0.0092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.47101:  36%|███▌      | 10/28 [00:44<01:48,  6.05s/it]epoch 0 loss 5.40445:  36%|███▌      | 10/28 [00:44<01:48,  6.05s/it]epoch 0 loss 5.40445:  39%|███▉      | 11/28 [00:44<01:13,  4.33s/it]epoch 0 loss 5.33284:  39%|███▉      | 11/28 [00:44<01:13,  4.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0589[0m
[32m  eval_f1 = 0.0116[0m
[32m  eval_mcc = 0.0297[0m
[32m  eval_precision = 0.0212[0m
[32m  eval_recall = 0.0165[0m
[32m  ********************[0m
[32m  Best f1:0.0116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.33284:  43%|████▎     | 12/28 [00:53<01:31,  5.72s/it]epoch 0 loss 5.25875:  43%|████▎     | 12/28 [00:53<01:31,  5.72s/it]epoch 0 loss 5.25875:  46%|████▋     | 13/28 [00:53<01:01,  4.12s/it]epoch 0 loss 5.18189:  46%|████▋     | 13/28 [00:54<01:01,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0857[0m
[32m  eval_f1 = 0.0134[0m
[32m  eval_mcc = 0.048[0m
[32m  eval_precision = 0.0254[0m
[32m  eval_recall = 0.0192[0m
[32m  ********************[0m
[32m  Best f1:0.0134[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.18189:  50%|█████     | 14/28 [01:04<01:26,  6.17s/it]epoch 0 loss 5.10604:  50%|█████     | 14/28 [01:05<01:26,  6.17s/it]epoch 0 loss 5.10604:  54%|█████▎    | 15/28 [01:05<00:57,  4.44s/it]epoch 0 loss 5.02795:  54%|█████▎    | 15/28 [01:05<00:57,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1328[0m
[32m  eval_f1 = 0.0196[0m
[32m  eval_mcc = 0.0856[0m
[32m  eval_precision = 0.0305[0m
[32m  eval_recall = 0.0258[0m
[32m  ********************[0m
[32m  Best f1:0.0196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0856[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.02795:  57%|█████▋    | 16/28 [01:15<01:16,  6.33s/it]epoch 0 loss 4.95093:  57%|█████▋    | 16/28 [01:16<01:16,  6.33s/it]epoch 0 loss 4.95093:  61%|██████    | 17/28 [01:16<00:50,  4.56s/it]epoch 0 loss 4.87569:  61%|██████    | 17/28 [01:16<00:50,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1768[0m
[32m  eval_f1 = 0.0244[0m
[32m  eval_mcc = 0.1278[0m
[32m  eval_precision = 0.037[0m
[32m  eval_recall = 0.0291[0m
[32m  ********************[0m
[32m  Best f1:0.0244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.87569:  64%|██████▍   | 18/28 [01:26<01:03,  6.39s/it]epoch 0 loss 4.79823:  64%|██████▍   | 18/28 [01:27<01:03,  6.39s/it]epoch 0 loss 4.79823:  68%|██████▊   | 19/28 [01:27<00:41,  4.59s/it]epoch 0 loss 4.72613:  68%|██████▊   | 19/28 [01:27<00:41,  4.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2348[0m
[32m  eval_f1 = 0.0268[0m
[32m  eval_mcc = 0.1909[0m
[32m  eval_precision = 0.0326[0m
[32m  eval_recall = 0.0315[0m
[32m  ********************[0m
[32m  Best f1:0.0268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.72613:  71%|███████▏  | 20/28 [01:37<00:51,  6.40s/it]epoch 0 loss 4.65832:  71%|███████▏  | 20/28 [01:38<00:51,  6.40s/it]epoch 0 loss 4.65832:  75%|███████▌  | 21/28 [01:38<00:32,  4.60s/it]epoch 0 loss 4.59448:  75%|███████▌  | 21/28 [01:38<00:32,  4.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2631[0m
[32m  eval_f1 = 0.0268[0m
[32m  eval_mcc = 0.2082[0m
[32m  eval_precision = 0.0423[0m
[32m  eval_recall = 0.0333[0m
[32m  ********************[0m
[32m  Best MCC:0.2082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.59448:  79%|███████▊  | 22/28 [01:46<00:33,  5.58s/it]epoch 0 loss 4.52619:  79%|███████▊  | 22/28 [01:46<00:33,  5.58s/it]epoch 0 loss 4.52619:  82%|████████▏ | 23/28 [01:46<00:20,  4.03s/it]epoch 0 loss 4.46491:  82%|████████▏ | 23/28 [01:47<00:20,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2714[0m
[32m  eval_f1 = 0.0319[0m
[32m  eval_mcc = 0.2147[0m
[32m  eval_precision = 0.057[0m
[32m  eval_recall = 0.0363[0m
[32m  ********************[0m
[32m  Best f1:0.0319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.46491:  86%|████████▌ | 24/28 [01:57<00:24,  6.04s/it]epoch 0 loss 4.40554:  86%|████████▌ | 24/28 [01:57<00:24,  6.04s/it]epoch 0 loss 4.40554:  89%|████████▉ | 25/28 [01:57<00:13,  4.35s/it]epoch 0 loss 4.3459:  89%|████████▉ | 25/28 [01:58<00:13,  4.35s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2937[0m
[32m  eval_f1 = 0.0413[0m
[32m  eval_mcc = 0.2452[0m
[32m  eval_precision = 0.0677[0m
[32m  eval_recall = 0.0459[0m
[32m  ********************[0m
[32m  Best f1:0.0413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.3459:  93%|█████████▎| 26/28 [02:08<00:12,  6.22s/it]epoch 0 loss 4.29106:  93%|█████████▎| 26/28 [02:08<00:12,  6.22s/it]epoch 0 loss 4.29106:  96%|█████████▋| 27/28 [02:08<00:04,  4.48s/it]epoch 0 loss 4.23335:  96%|█████████▋| 27/28 [02:08<00:04,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3247[0m
[32m  eval_f1 = 0.0616[0m
[32m  eval_mcc = 0.2826[0m
[32m  eval_precision = 0.1131[0m
[32m  eval_recall = 0.0627[0m
[32m  ********************[0m
[32m  Best f1:0.0616[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2826[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.23335: 100%|██████████| 28/28 [02:19<00:00,  6.22s/it]epoch 0 loss 4.23335: 100%|██████████| 28/28 [02:19<00:00,  4.97s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.70714:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.70714:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 1 loss 2.71012:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4[0m
[32m  eval_f1 = 0.1104[0m
[32m  eval_mcc = 0.3649[0m
[32m  eval_precision = 0.1554[0m
[32m  eval_recall = 0.1012[0m
[32m  ********************[0m
[32m  Best f1:0.1104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.71012:   7%|▋         | 2/28 [00:11<02:48,  6.48s/it]epoch 1 loss 2.68595:   7%|▋         | 2/28 [00:11<02:48,  6.48s/it]epoch 1 loss 2.68595:  11%|█         | 3/28 [00:11<01:32,  3.71s/it]epoch 1 loss 2.67445:  11%|█         | 3/28 [00:11<01:32,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.469[0m
[32m  eval_f1 = 0.1367[0m
[32m  eval_mcc = 0.4354[0m
[32m  eval_precision = 0.187[0m
[32m  eval_recall = 0.1282[0m
[32m  ********************[0m
[32m  Best f1:0.1367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.67445:  14%|█▍        | 4/28 [00:22<02:37,  6.54s/it]epoch 1 loss 2.6185:  14%|█▍        | 4/28 [00:22<02:37,  6.54s/it] epoch 1 loss 2.6185:  18%|█▊        | 5/28 [00:22<01:39,  4.33s/it]epoch 1 loss 2.56473:  18%|█▊        | 5/28 [00:23<01:39,  4.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5167[0m
[32m  eval_f1 = 0.1506[0m
[32m  eval_mcc = 0.4899[0m
[32m  eval_precision = 0.1852[0m
[32m  eval_recall = 0.1425[0m
[32m  ********************[0m
[32m  Best f1:0.1506[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4899[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.56473:  21%|██▏       | 6/28 [00:33<02:25,  6.61s/it]epoch 1 loss 2.53708:  21%|██▏       | 6/28 [00:34<02:25,  6.61s/it]epoch 1 loss 2.53708:  25%|██▌       | 7/28 [00:34<01:36,  4.59s/it]epoch 1 loss 2.49022:  25%|██▌       | 7/28 [00:34<01:36,  4.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5282[0m
[32m  eval_f1 = 0.1529[0m
[32m  eval_mcc = 0.5103[0m
[32m  eval_precision = 0.1904[0m
[32m  eval_recall = 0.1444[0m
[32m  ********************[0m
[32m  Best f1:0.1529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.49022:  29%|██▊       | 8/28 [00:45<02:10,  6.55s/it]epoch 1 loss 2.44906:  29%|██▊       | 8/28 [00:45<02:10,  6.55s/it]epoch 1 loss 2.44906:  32%|███▏      | 9/28 [00:45<01:28,  4.63s/it]epoch 1 loss 2.42855:  32%|███▏      | 9/28 [00:45<01:28,  4.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5361[0m
[32m  eval_f1 = 0.1531[0m
[32m  eval_mcc = 0.518[0m
[32m  eval_precision = 0.1924[0m
[32m  eval_recall = 0.1454[0m
[32m  ********************[0m
[32m  Best f1:0.1531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42855:  36%|███▌      | 10/28 [00:56<01:56,  6.48s/it]epoch 1 loss 2.405:  36%|███▌      | 10/28 [00:56<01:56,  6.48s/it]  epoch 1 loss 2.405:  39%|███▉      | 11/28 [00:56<01:18,  4.63s/it]epoch 1 loss 2.38849:  39%|███▉      | 11/28 [00:56<01:18,  4.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.543[0m
[32m  eval_f1 = 0.16[0m
[32m  eval_mcc = 0.5178[0m
[32m  eval_precision = 0.1943[0m
[32m  eval_recall = 0.1531[0m
[32m  ********************[0m
[32m  Best f1:0.16[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.38849:  43%|████▎     | 12/28 [01:03<01:26,  5.42s/it]epoch 1 loss 2.35995:  43%|████▎     | 12/28 [01:04<01:26,  5.42s/it]epoch 1 loss 2.35995:  46%|████▋     | 13/28 [01:04<00:58,  3.90s/it]epoch 1 loss 2.34152:  46%|████▋     | 13/28 [01:04<00:58,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5445[0m
[32m  eval_f1 = 0.1611[0m
[32m  eval_mcc = 0.5164[0m
[32m  eval_precision = 0.2035[0m
[32m  eval_recall = 0.1539[0m
[32m  ********************[0m
[32m  Best f1:0.1611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.34152:  50%|█████     | 14/28 [01:11<01:08,  4.89s/it]epoch 1 loss 2.33078:  50%|█████     | 14/28 [01:11<01:08,  4.89s/it]epoch 1 loss 2.33078:  54%|█████▎    | 15/28 [01:11<00:46,  3.55s/it]epoch 1 loss 2.31252:  54%|█████▎    | 15/28 [01:12<00:46,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5424[0m
[32m  eval_f1 = 0.1709[0m
[32m  eval_mcc = 0.514[0m
[32m  eval_precision = 0.2271[0m
[32m  eval_recall = 0.1598[0m
[32m  ********************[0m
[32m  Best f1:0.1709[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.31252:  57%|█████▋    | 16/28 [01:17<00:51,  4.28s/it]epoch 1 loss 2.29119:  57%|█████▋    | 16/28 [01:18<00:51,  4.28s/it]epoch 1 loss 2.29119:  61%|██████    | 17/28 [01:18<00:34,  3.12s/it]epoch 1 loss 2.27507:  61%|██████    | 17/28 [01:18<00:34,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5507[0m
[32m  eval_f1 = 0.1859[0m
[32m  eval_mcc = 0.5233[0m
[32m  eval_precision = 0.2416[0m
[32m  eval_recall = 0.1753[0m
[32m  ********************[0m
[32m  Best f1:0.1859[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27507:  64%|██████▍   | 18/28 [01:29<00:54,  5.49s/it]epoch 1 loss 2.25067:  64%|██████▍   | 18/28 [01:29<00:54,  5.49s/it]epoch 1 loss 2.25067:  68%|██████▊   | 19/28 [01:29<00:35,  3.97s/it]epoch 1 loss 2.23496:  68%|██████▊   | 19/28 [01:29<00:35,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5702[0m
[32m  eval_f1 = 0.1925[0m
[32m  eval_mcc = 0.5442[0m
[32m  eval_precision = 0.2432[0m
[32m  eval_recall = 0.1825[0m
[32m  ********************[0m
[32m  Best f1:0.1925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23496:  71%|███████▏  | 20/28 [01:41<00:50,  6.34s/it]epoch 1 loss 2.21699:  71%|███████▏  | 20/28 [01:41<00:50,  6.34s/it]epoch 1 loss 2.21699:  75%|███████▌  | 21/28 [01:41<00:31,  4.56s/it]epoch 1 loss 2.20826:  75%|███████▌  | 21/28 [01:42<00:31,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5777[0m
[32m  eval_f1 = 0.2008[0m
[32m  eval_mcc = 0.5535[0m
[32m  eval_precision = 0.2604[0m
[32m  eval_recall = 0.1896[0m
[32m  ********************[0m
[32m  Best f1:0.2008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20826:  79%|███████▊  | 22/28 [01:53<00:40,  6.82s/it]epoch 1 loss 2.18954:  79%|███████▊  | 22/28 [01:54<00:40,  6.82s/it]epoch 1 loss 2.18954:  82%|████████▏ | 23/28 [01:54<00:24,  4.90s/it]epoch 1 loss 2.17355:  82%|████████▏ | 23/28 [01:54<00:24,  4.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5812[0m
[32m  eval_f1 = 0.2076[0m
[32m  eval_mcc = 0.5581[0m
[32m  eval_precision = 0.2767[0m
[32m  eval_recall = 0.1966[0m
[32m  ********************[0m
[32m  Best f1:0.2076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17355:  86%|████████▌ | 24/28 [02:05<00:27,  6.89s/it]epoch 1 loss 2.16212:  86%|████████▌ | 24/28 [02:06<00:27,  6.89s/it]epoch 1 loss 2.16212:  89%|████████▉ | 25/28 [02:06<00:14,  4.95s/it]epoch 1 loss 2.14157:  89%|████████▉ | 25/28 [02:06<00:14,  4.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5854[0m
[32m  eval_f1 = 0.213[0m
[32m  eval_mcc = 0.564[0m
[32m  eval_precision = 0.2809[0m
[32m  eval_recall = 0.2[0m
[32m  ********************[0m
[32m  Best f1:0.213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.564[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.14157:  93%|█████████▎| 26/28 [02:17<00:13,  6.91s/it]epoch 1 loss 2.13217:  93%|█████████▎| 26/28 [02:18<00:13,  6.91s/it]epoch 1 loss 2.13217:  96%|█████████▋| 27/28 [02:18<00:04,  4.96s/it]epoch 1 loss 2.11484:  96%|█████████▋| 27/28 [02:18<00:04,  4.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5874[0m
[32m  eval_f1 = 0.2165[0m
[32m  eval_mcc = 0.5674[0m
[32m  eval_precision = 0.283[0m
[32m  eval_recall = 0.2024[0m
[32m  ********************[0m
[32m  Best f1:0.2165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5674[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11484: 100%|██████████| 28/28 [02:29<00:00,  6.99s/it]epoch 1 loss 2.11484: 100%|██████████| 28/28 [02:29<00:00,  5.36s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.67571:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.67571:   4%|▎         | 1/28 [00:00<00:11,  2.43it/s]epoch 2 loss 1.73198:   4%|▎         | 1/28 [00:00<00:11,  2.43it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5885[0m
[32m  eval_f1 = 0.219[0m
[32m  eval_mcc = 0.5685[0m
[32m  eval_precision = 0.2919[0m
[32m  eval_recall = 0.2042[0m
[32m  ********************[0m
[32m  Best f1:0.219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.73198:   7%|▋         | 2/28 [00:12<03:06,  7.17s/it]epoch 2 loss 1.75927:   7%|▋         | 2/28 [00:12<03:06,  7.17s/it]epoch 2 loss 1.75927:  11%|█         | 3/28 [00:12<01:42,  4.09s/it]epoch 2 loss 1.73043:  11%|█         | 3/28 [00:13<01:42,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5904[0m
[32m  eval_f1 = 0.2234[0m
[32m  eval_mcc = 0.5692[0m
[32m  eval_precision = 0.2961[0m
[32m  eval_recall = 0.2086[0m
[32m  ********************[0m
[32m  Best f1:0.2234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.73043:  14%|█▍        | 4/28 [00:24<02:49,  7.06s/it]epoch 2 loss 1.72966:  14%|█▍        | 4/28 [00:24<02:49,  7.06s/it]epoch 2 loss 1.72966:  18%|█▊        | 5/28 [00:24<01:47,  4.67s/it]epoch 2 loss 1.73141:  18%|█▊        | 5/28 [00:25<01:47,  4.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5958[0m
[32m  eval_f1 = 0.2278[0m
[32m  eval_mcc = 0.5744[0m
[32m  eval_precision = 0.3153[0m
[32m  eval_recall = 0.2133[0m
[32m  ********************[0m
[32m  Best f1:0.2278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5744[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.73141:  21%|██▏       | 6/28 [00:36<02:37,  7.18s/it]epoch 2 loss 1.71779:  21%|██▏       | 6/28 [00:37<02:37,  7.18s/it]epoch 2 loss 1.71779:  25%|██▌       | 7/28 [00:37<01:44,  4.97s/it]epoch 2 loss 1.70614:  25%|██▌       | 7/28 [00:37<01:44,  4.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5981[0m
[32m  eval_f1 = 0.2299[0m
[32m  eval_mcc = 0.5755[0m
[32m  eval_precision = 0.3195[0m
[32m  eval_recall = 0.2159[0m
[32m  ********************[0m
[32m  Best f1:0.2299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5755[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.70614:  29%|██▊       | 8/28 [00:49<02:22,  7.14s/it]epoch 2 loss 1.70671:  29%|██▊       | 8/28 [00:49<02:22,  7.14s/it]epoch 2 loss 1.70671:  32%|███▏      | 9/28 [00:49<01:35,  5.04s/it]epoch 2 loss 1.70558:  32%|███▏      | 9/28 [00:49<01:35,  5.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5982[0m
[32m  eval_f1 = 0.2343[0m
[32m  eval_mcc = 0.5748[0m
[32m  eval_precision = 0.3299[0m
[32m  eval_recall = 0.2189[0m
[32m  ********************[0m
[32m  Best f1:0.2343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.70558:  36%|███▌      | 10/28 [00:57<01:45,  5.84s/it]epoch 2 loss 1.70231:  36%|███▌      | 10/28 [00:57<01:45,  5.84s/it]epoch 2 loss 1.70231:  39%|███▉      | 11/28 [00:57<01:11,  4.18s/it]epoch 2 loss 1.69926:  39%|███▉      | 11/28 [00:57<01:11,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6028[0m
[32m  eval_f1 = 0.2389[0m
[32m  eval_mcc = 0.5797[0m
[32m  eval_precision = 0.3381[0m
[32m  eval_recall = 0.2225[0m
[32m  ********************[0m
[32m  Best f1:0.2389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5797[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.69926:  43%|████▎     | 12/28 [01:09<01:43,  6.48s/it]epoch 2 loss 1.6965:  43%|████▎     | 12/28 [01:09<01:43,  6.48s/it] epoch 2 loss 1.6965:  46%|████▋     | 13/28 [01:09<01:09,  4.65s/it]epoch 2 loss 1.69238:  46%|████▋     | 13/28 [01:10<01:09,  4.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6067[0m
[32m  eval_f1 = 0.2428[0m
[32m  eval_mcc = 0.5839[0m
[32m  eval_precision = 0.3307[0m
[32m  eval_recall = 0.2263[0m
[32m  ********************[0m
[32m  Best f1:0.2428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5839[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.69238:  50%|█████     | 14/28 [01:22<01:41,  7.22s/it]epoch 2 loss 1.68707:  50%|█████     | 14/28 [01:23<01:41,  7.22s/it]epoch 2 loss 1.68707:  54%|█████▎    | 15/28 [01:23<01:07,  5.17s/it]epoch 2 loss 1.67405:  54%|█████▎    | 15/28 [01:23<01:07,  5.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6086[0m
[32m  eval_f1 = 0.2457[0m
[32m  eval_mcc = 0.5862[0m
[32m  eval_precision = 0.3299[0m
[32m  eval_recall = 0.2293[0m
[32m  ********************[0m
[32m  Best f1:0.2457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5862[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.67405:  57%|█████▋    | 16/28 [01:35<01:26,  7.21s/it]epoch 2 loss 1.66759:  57%|█████▋    | 16/28 [01:35<01:26,  7.21s/it]epoch 2 loss 1.66759:  61%|██████    | 17/28 [01:35<00:56,  5.16s/it]epoch 2 loss 1.66576:  61%|██████    | 17/28 [01:35<00:56,  5.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6095[0m
[32m  eval_f1 = 0.2473[0m
[32m  eval_mcc = 0.5874[0m
[32m  eval_precision = 0.3302[0m
[32m  eval_recall = 0.2309[0m
[32m  ********************[0m
[32m  Best f1:0.2473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5874[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.66576:  64%|██████▍   | 18/28 [01:48<01:13,  7.34s/it]epoch 2 loss 1.66623:  64%|██████▍   | 18/28 [01:48<01:13,  7.34s/it]epoch 2 loss 1.66623:  68%|██████▊   | 19/28 [01:48<00:47,  5.26s/it]epoch 2 loss 1.66257:  68%|██████▊   | 19/28 [01:48<00:47,  5.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6111[0m
[32m  eval_f1 = 0.2513[0m
[32m  eval_mcc = 0.5908[0m
[32m  eval_precision = 0.3425[0m
[32m  eval_recall = 0.2338[0m
[32m  ********************[0m
[32m  Best f1:0.2513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5908[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.66257:  71%|███████▏  | 20/28 [02:01<01:00,  7.60s/it]epoch 2 loss 1.64689:  71%|███████▏  | 20/28 [02:01<01:00,  7.60s/it]epoch 2 loss 1.64689:  75%|███████▌  | 21/28 [02:01<00:38,  5.45s/it]epoch 2 loss 1.64047:  75%|███████▌  | 21/28 [02:02<00:38,  5.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6111[0m
[32m  eval_f1 = 0.2525[0m
[32m  eval_mcc = 0.593[0m
[32m  eval_precision = 0.3346[0m
[32m  eval_recall = 0.2344[0m
[32m  ********************[0m
[32m  Best f1:0.2525[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64047:  79%|███████▊  | 22/28 [02:16<00:48,  8.05s/it]epoch 2 loss 1.63428:  79%|███████▊  | 22/28 [02:16<00:48,  8.05s/it]epoch 2 loss 1.63428:  82%|████████▏ | 23/28 [02:16<00:28,  5.76s/it]epoch 2 loss 1.63804:  82%|████████▏ | 23/28 [02:16<00:28,  5.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6124[0m
[32m  eval_f1 = 0.2538[0m
[32m  eval_mcc = 0.5929[0m
[32m  eval_precision = 0.3325[0m
[32m  eval_recall = 0.2365[0m
[32m  ********************[0m
[32m  Best f1:0.2538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.63804:  86%|████████▌ | 24/28 [02:25<00:26,  6.65s/it]epoch 2 loss 1.62942:  86%|████████▌ | 24/28 [02:25<00:26,  6.65s/it]epoch 2 loss 1.62942:  89%|████████▉ | 25/28 [02:25<00:14,  4.78s/it]epoch 2 loss 1.62531:  89%|████████▉ | 25/28 [02:25<00:14,  4.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6154[0m
[32m  eval_f1 = 0.2563[0m
[32m  eval_mcc = 0.5938[0m
[32m  eval_precision = 0.3329[0m
[32m  eval_recall = 0.2397[0m
[32m  ********************[0m
[32m  Best f1:0.2563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5938[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62531:  93%|█████████▎| 26/28 [02:42<00:16,  8.37s/it]epoch 2 loss 1.62892:  93%|█████████▎| 26/28 [02:42<00:16,  8.37s/it]epoch 2 loss 1.62892:  96%|█████████▋| 27/28 [02:42<00:05,  5.99s/it]epoch 2 loss 1.62415:  96%|█████████▋| 27/28 [02:42<00:05,  5.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6165[0m
[32m  eval_f1 = 0.2592[0m
[32m  eval_mcc = 0.5937[0m
[32m  eval_precision = 0.3424[0m
[32m  eval_recall = 0.2433[0m
[32m  ********************[0m
[32m  Best f1:0.2592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.62415: 100%|██████████| 28/28 [02:53<00:00,  7.29s/it]epoch 2 loss 1.62415: 100%|██████████| 28/28 [02:53<00:00,  6.18s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.36238:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.36238:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 3 loss 1.41505:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6183[0m
[32m  eval_f1 = 0.2609[0m
[32m  eval_mcc = 0.5954[0m
[32m  eval_precision = 0.3345[0m
[32m  eval_recall = 0.245[0m
[32m  ********************[0m
[32m  Best f1:0.2609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5954[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41505:   7%|▋         | 2/28 [00:14<03:39,  8.46s/it]epoch 3 loss 1.4218:   7%|▋         | 2/28 [00:14<03:39,  8.46s/it] epoch 3 loss 1.4218:  11%|█         | 3/28 [00:14<01:59,  4.79s/it]epoch 3 loss 1.44761:  11%|█         | 3/28 [00:15<01:59,  4.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6188[0m
[32m  eval_f1 = 0.2606[0m
[32m  eval_mcc = 0.5961[0m
[32m  eval_precision = 0.3358[0m
[32m  eval_recall = 0.2451[0m
[32m  ********************[0m
[32m  Best MCC:0.5961[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44761:  14%|█▍        | 4/28 [00:22<02:21,  5.90s/it]epoch 3 loss 1.47575:  14%|█▍        | 4/28 [00:22<02:21,  5.90s/it]epoch 3 loss 1.47575:  18%|█▊        | 5/28 [00:22<01:30,  3.92s/it]epoch 3 loss 1.48018:  18%|█▊        | 5/28 [00:23<01:30,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.621[0m
[32m  eval_f1 = 0.2638[0m
[32m  eval_mcc = 0.5987[0m
[32m  eval_precision = 0.3505[0m
[32m  eval_recall = 0.2473[0m
[32m  ********************[0m
[32m  Best f1:0.2638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5987[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48018:  21%|██▏       | 6/28 [00:52<04:34, 12.50s/it]epoch 3 loss 1.47009:  21%|██▏       | 6/28 [00:52<04:34, 12.50s/it]epoch 3 loss 1.47009:  25%|██▌       | 7/28 [00:52<02:59,  8.55s/it]epoch 3 loss 1.45759:  25%|██▌       | 7/28 [00:52<02:59,  8.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.79it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6223[0m
[32m  eval_f1 = 0.2642[0m
[32m  eval_mcc = 0.6005[0m
[32m  eval_precision = 0.3522[0m
[32m  eval_recall = 0.2474[0m
[32m  ********************[0m
[32m  Best f1:0.2642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45759:  29%|██▊       | 8/28 [01:07<03:32, 10.64s/it]epoch 3 loss 1.47804:  29%|██▊       | 8/28 [01:08<03:32, 10.64s/it]epoch 3 loss 1.47804:  32%|███▏      | 9/28 [01:08<02:21,  7.44s/it]epoch 3 loss 1.4886:  32%|███▏      | 9/28 [01:08<02:21,  7.44s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.56it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6241[0m
[32m  eval_f1 = 0.2657[0m
[32m  eval_mcc = 0.6035[0m
[32m  eval_precision = 0.3468[0m
[32m  eval_recall = 0.2488[0m
[32m  ********************[0m
[32m  Best f1:0.2657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4886:  36%|███▌      | 10/28 [01:22<02:54,  9.69s/it]epoch 3 loss 1.5045:  36%|███▌      | 10/28 [01:23<02:54,  9.69s/it]epoch 3 loss 1.5045:  39%|███▉      | 11/28 [01:23<01:56,  6.85s/it]epoch 3 loss 1.5205:  39%|███▉      | 11/28 [01:23<01:56,  6.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.626[0m
[32m  eval_f1 = 0.2736[0m
[32m  eval_mcc = 0.6063[0m
[32m  eval_precision = 0.3809[0m
[32m  eval_recall = 0.2541[0m
[32m  ********************[0m
[32m  Best f1:0.2736[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.5205:  43%|████▎     | 12/28 [01:37<02:27,  9.23s/it]epoch 3 loss 1.51878:  43%|████▎     | 12/28 [01:38<02:27,  9.23s/it]epoch 3 loss 1.51878:  46%|████▋     | 13/28 [01:38<01:38,  6.57s/it]epoch 3 loss 1.51339:  46%|████▋     | 13/28 [01:38<01:38,  6.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6269[0m
[32m  eval_f1 = 0.2765[0m
[32m  eval_mcc = 0.6074[0m
[32m  eval_precision = 0.3792[0m
[32m  eval_recall = 0.2571[0m
[32m  ********************[0m
[32m  Best f1:0.2765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.51339:  50%|█████     | 14/28 [01:52<02:05,  8.97s/it]epoch 3 loss 1.51148:  50%|█████     | 14/28 [01:53<02:05,  8.97s/it]epoch 3 loss 1.51148:  54%|█████▎    | 15/28 [01:53<01:23,  6.39s/it]epoch 3 loss 1.50703:  54%|█████▎    | 15/28 [01:53<01:23,  6.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6277[0m
[32m  eval_f1 = 0.2784[0m
[32m  eval_mcc = 0.608[0m
[32m  eval_precision = 0.3789[0m
[32m  eval_recall = 0.2586[0m
[32m  ********************[0m
[32m  Best f1:0.2784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.50703:  57%|█████▋    | 16/28 [02:07<01:46,  8.85s/it]epoch 3 loss 1.50719:  57%|█████▋    | 16/28 [02:08<01:46,  8.85s/it]epoch 3 loss 1.50719:  61%|██████    | 17/28 [02:08<01:09,  6.32s/it]epoch 3 loss 1.51118:  61%|██████    | 17/28 [02:08<01:09,  6.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6288[0m
[32m  eval_f1 = 0.28[0m
[32m  eval_mcc = 0.6086[0m
[32m  eval_precision = 0.3771[0m
[32m  eval_recall = 0.2597[0m
[32m  ********************[0m
[32m  Best f1:0.28[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.51118:  64%|██████▍   | 18/28 [02:20<01:21,  8.18s/it]epoch 3 loss 1.51357:  64%|██████▍   | 18/28 [02:21<01:21,  8.18s/it]epoch 3 loss 1.51357:  68%|██████▊   | 19/28 [02:21<00:52,  5.85s/it]epoch 3 loss 1.51225:  68%|██████▊   | 19/28 [02:21<00:52,  5.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.79it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.79it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6303[0m
[32m  eval_f1 = 0.2818[0m
[32m  eval_mcc = 0.6098[0m
[32m  eval_precision = 0.3821[0m
[32m  eval_recall = 0.2607[0m
[32m  ********************[0m
[32m  Best f1:0.2818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.51225:  71%|███████▏  | 20/28 [02:39<01:17,  9.74s/it]epoch 3 loss 1.50806:  71%|███████▏  | 20/28 [02:40<01:17,  9.74s/it]epoch 3 loss 1.50806:  75%|███████▌  | 21/28 [02:40<00:48,  6.94s/it]epoch 3 loss 1.50314:  75%|███████▌  | 21/28 [02:40<00:48,  6.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.79it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.63[0m
[32m  eval_f1 = 0.2844[0m
[32m  eval_mcc = 0.6093[0m
[32m  eval_precision = 0.392[0m
[32m  eval_recall = 0.2624[0m
[32m  ********************[0m
[32m  Best f1:0.2844[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.50314:  79%|███████▊  | 22/28 [02:48<00:44,  7.35s/it]epoch 3 loss 1.49934:  79%|███████▊  | 22/28 [02:49<00:44,  7.35s/it]epoch 3 loss 1.49934:  82%|████████▏ | 23/28 [02:49<00:26,  5.27s/it]epoch 3 loss 1.49844:  82%|████████▏ | 23/28 [02:49<00:26,  5.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6298[0m
[32m  eval_f1 = 0.2852[0m
[32m  eval_mcc = 0.6089[0m
[32m  eval_precision = 0.3927[0m
[32m  eval_recall = 0.2624[0m
[32m  ********************[0m
[32m  Best f1:0.2852[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.49844:  86%|████████▌ | 24/28 [02:57<00:24,  6.19s/it]epoch 3 loss 1.49952:  86%|████████▌ | 24/28 [02:57<00:24,  6.19s/it]epoch 3 loss 1.49952:  89%|████████▉ | 25/28 [02:57<00:13,  4.46s/it]epoch 3 loss 1.49904:  89%|████████▉ | 25/28 [02:58<00:13,  4.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6302[0m
[32m  eval_f1 = 0.2871[0m
[32m  eval_mcc = 0.6093[0m
[32m  eval_precision = 0.394[0m
[32m  eval_recall = 0.264[0m
[32m  ********************[0m
[32m  Best f1:0.2871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.49904:  93%|█████████▎| 26/28 [03:05<00:10,  5.37s/it]epoch 3 loss 1.50215:  93%|█████████▎| 26/28 [03:05<00:10,  5.37s/it]epoch 3 loss 1.50215:  96%|█████████▋| 27/28 [03:05<00:03,  3.88s/it]epoch 3 loss 1.49817:  96%|█████████▋| 27/28 [03:05<00:03,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6307[0m
[32m  eval_f1 = 0.2867[0m
[32m  eval_mcc = 0.6097[0m
[32m  eval_precision = 0.3927[0m
[32m  eval_recall = 0.2638[0m

epoch 3 loss 1.49817: 100%|██████████| 28/28 [03:09<00:00,  3.79s/it]epoch 3 loss 1.49817: 100%|██████████| 28/28 [03:09<00:00,  6.76s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.50675:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.50675:   4%|▎         | 1/28 [00:00<00:10,  2.52it/s]epoch 4 loss 1.5404:   4%|▎         | 1/28 [00:00<00:10,  2.52it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6313[0m
[32m  eval_f1 = 0.2908[0m
[32m  eval_mcc = 0.6104[0m
[32m  eval_precision = 0.4025[0m
[32m  eval_recall = 0.267[0m
[32m  ********************[0m
[32m  Best f1:0.2908[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.5404:   7%|▋         | 2/28 [00:12<03:09,  7.27s/it]epoch 4 loss 1.51852:   7%|▋         | 2/28 [00:12<03:09,  7.27s/it]epoch 4 loss 1.51852:  11%|█         | 3/28 [00:12<01:43,  4.14s/it]epoch 4 loss 1.49837:  11%|█         | 3/28 [00:13<01:43,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6319[0m
[32m  eval_f1 = 0.2919[0m
[32m  eval_mcc = 0.6112[0m
[32m  eval_precision = 0.4031[0m
[32m  eval_recall = 0.2679[0m
[32m  ********************[0m
[32m  Best f1:0.2919[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.49837:  14%|█▍        | 4/28 [00:26<03:05,  7.72s/it]epoch 4 loss 1.49865:  14%|█▍        | 4/28 [00:26<03:05,  7.72s/it]epoch 4 loss 1.49865:  18%|█▊        | 5/28 [00:26<01:56,  5.09s/it]epoch 4 loss 1.49512:  18%|█▊        | 5/28 [00:26<01:56,  5.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6328[0m
[32m  eval_f1 = 0.2924[0m
[32m  eval_mcc = 0.6125[0m
[32m  eval_precision = 0.4044[0m
[32m  eval_recall = 0.2682[0m
[32m  ********************[0m
[32m  Best f1:0.2924[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.49512:  21%|██▏       | 6/28 [00:45<03:37,  9.89s/it]epoch 4 loss 1.48312:  21%|██▏       | 6/28 [00:46<03:37,  9.89s/it]epoch 4 loss 1.48312:  25%|██▌       | 7/28 [00:46<02:22,  6.80s/it]epoch 4 loss 1.47457:  25%|██▌       | 7/28 [00:46<02:22,  6.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6328[0m
[32m  eval_f1 = 0.2929[0m
[32m  eval_mcc = 0.6127[0m
[32m  eval_precision = 0.4052[0m
[32m  eval_recall = 0.2689[0m
[32m  ********************[0m
[32m  Best f1:0.2929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6127[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.47457:  29%|██▊       | 8/28 [01:03<03:22, 10.13s/it]epoch 4 loss 1.47205:  29%|██▊       | 8/28 [01:03<03:22, 10.13s/it]epoch 4 loss 1.47205:  32%|███▏      | 9/28 [01:03<02:14,  7.09s/it]epoch 4 loss 1.47931:  32%|███▏      | 9/28 [01:04<02:14,  7.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.79it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6328[0m
[32m  eval_f1 = 0.2927[0m
[32m  eval_mcc = 0.6127[0m
[32m  eval_precision = 0.4033[0m
[32m  eval_recall = 0.2689[0m
[32m  ********************[0m
[32m  Best MCC:0.6127[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.47931:  36%|███▌      | 10/28 [01:14<02:25,  8.06s/it]epoch 4 loss 1.47619:  36%|███▌      | 10/28 [01:14<02:25,  8.06s/it]epoch 4 loss 1.47619:  39%|███▉      | 11/28 [01:14<01:37,  5.72s/it]epoch 4 loss 1.47835:  39%|███▉      | 11/28 [01:14<01:37,  5.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.78it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.78it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.78it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.78it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.78it/s][A100%|██████████| 10/10 [00:03<00:00,  3.03it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6328[0m
[32m  eval_f1 = 0.292[0m
[32m  eval_mcc = 0.6125[0m
[32m  eval_precision = 0.4033[0m
[32m  eval_recall = 0.2685[0m

epoch 4 loss 1.47835:  43%|████▎     | 12/28 [01:18<01:21,  5.12s/it]epoch 4 loss 1.48263:  43%|████▎     | 12/28 [01:18<01:21,  5.12s/it]epoch 4 loss 1.48263:  46%|████▋     | 13/28 [01:18<00:55,  3.69s/it]epoch 4 loss 1.46779:  46%|████▋     | 13/28 [01:19<00:55,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6335[0m
[32m  eval_f1 = 0.2923[0m
[32m  eval_mcc = 0.613[0m
[32m  eval_precision = 0.4041[0m
[32m  eval_recall = 0.2689[0m
[32m  ********************[0m
[32m  Best MCC:0.613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.46779:  50%|█████     | 14/28 [01:28<01:19,  5.65s/it]epoch 4 loss 1.46148:  50%|█████     | 14/28 [01:29<01:19,  5.65s/it]epoch 4 loss 1.46148:  54%|█████▎    | 15/28 [01:29<00:52,  4.07s/it]epoch 4 loss 1.45721:  54%|█████▎    | 15/28 [01:29<00:52,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.78it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.633[0m
[32m  eval_f1 = 0.2921[0m
[32m  eval_mcc = 0.6124[0m
[32m  eval_precision = 0.4018[0m
[32m  eval_recall = 0.2688[0m

epoch 4 loss 1.45721:  57%|█████▋    | 16/28 [01:32<00:47,  3.98s/it]epoch 4 loss 1.45683:  57%|█████▋    | 16/28 [01:33<00:47,  3.98s/it]epoch 4 loss 1.45683:  61%|██████    | 17/28 [01:33<00:31,  2.90s/it]epoch 4 loss 1.45617:  61%|██████    | 17/28 [01:33<00:31,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.78it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6332[0m
[32m  eval_f1 = 0.2925[0m
[32m  eval_mcc = 0.6126[0m
[32m  eval_precision = 0.4019[0m
[32m  eval_recall = 0.269[0m

epoch 4 loss 1.45617:  64%|██████▍   | 18/28 [01:37<00:31,  3.16s/it]epoch 4 loss 1.45954:  64%|██████▍   | 18/28 [01:37<00:31,  3.16s/it]epoch 4 loss 1.45954:  68%|██████▊   | 19/28 [01:37<00:20,  2.33s/it]epoch 4 loss 1.45857:  68%|██████▊   | 19/28 [01:37<00:20,  2.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6335[0m
[32m  eval_f1 = 0.293[0m
[32m  eval_mcc = 0.6129[0m
[32m  eval_precision = 0.4018[0m
[32m  eval_recall = 0.2693[0m
[32m  ********************[0m
[32m  Best f1:0.293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.45857:  71%|███████▏  | 20/28 [01:45<00:31,  3.92s/it]epoch 4 loss 1.4548:  71%|███████▏  | 20/28 [01:45<00:31,  3.92s/it] epoch 4 loss 1.4548:  75%|███████▌  | 21/28 [01:45<00:20,  2.87s/it]epoch 4 loss 1.45586:  75%|███████▌  | 21/28 [01:45<00:20,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6335[0m
[32m  eval_f1 = 0.2929[0m
[32m  eval_mcc = 0.6127[0m
[32m  eval_precision = 0.4018[0m
[32m  eval_recall = 0.2693[0m

epoch 4 loss 1.45586:  79%|███████▊  | 22/28 [01:49<00:18,  3.14s/it]epoch 4 loss 1.4541:  79%|███████▊  | 22/28 [01:49<00:18,  3.14s/it] epoch 4 loss 1.4541:  82%|████████▏ | 23/28 [01:49<00:11,  2.32s/it]epoch 4 loss 1.45067:  82%|████████▏ | 23/28 [01:50<00:11,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6336[0m
[32m  eval_f1 = 0.2928[0m
[32m  eval_mcc = 0.6129[0m
[32m  eval_precision = 0.4014[0m
[32m  eval_recall = 0.2693[0m

epoch 4 loss 1.45067:  86%|████████▌ | 24/28 [01:53<00:11,  2.75s/it]epoch 4 loss 1.45481:  86%|████████▌ | 24/28 [01:53<00:11,  2.75s/it]epoch 4 loss 1.45481:  89%|████████▉ | 25/28 [01:53<00:06,  2.05s/it]epoch 4 loss 1.45419:  89%|████████▉ | 25/28 [01:54<00:06,  2.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6337[0m
[32m  eval_f1 = 0.2929[0m
[32m  eval_mcc = 0.613[0m
[32m  eval_precision = 0.4015[0m
[32m  eval_recall = 0.2694[0m

epoch 4 loss 1.45419:  93%|█████████▎| 26/28 [01:57<00:05,  2.57s/it]epoch 4 loss 1.45142:  93%|█████████▎| 26/28 [01:58<00:05,  2.57s/it]epoch 4 loss 1.45142:  96%|█████████▋| 27/28 [01:58<00:01,  1.92s/it]epoch 4 loss 1.46002:  96%|█████████▋| 27/28 [01:58<00:01,  1.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6338[0m
[32m  eval_f1 = 0.2929[0m
[32m  eval_mcc = 0.6131[0m
[32m  eval_precision = 0.4014[0m
[32m  eval_recall = 0.2694[0m
[32m  ********************[0m
[32m  Best MCC:0.6131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.46002: 100%|██████████| 28/28 [02:06<00:00,  3.75s/it]epoch 4 loss 1.46002: 100%|██████████| 28/28 [02:06<00:00,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.59it/s] 20%|██        | 2/10 [00:00<00:02,  2.70it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6335[0m
[32m  eval_f1 = 0.293[0m
[32m  eval_mcc = 0.6129[0m
[32m  eval_precision = 0.4018[0m
[32m  eval_recall = 0.2693[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6172[0m
[32m  eval_f1 = 0.2361[0m
[32m  eval_mcc = 0.5967[0m
[32m  eval_precision = 0.315[0m
[32m  eval_recall = 0.2187[0m

