[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.75477:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.75477:   4%|▎         | 1/28 [00:00<00:21,  1.25it/s]epoch 0 loss 5.75962:   4%|▎         | 1/28 [00:01<00:21,  1.25it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0136[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = 0.0079[0m
[32m  eval_precision = 0.0019[0m
[32m  eval_recall = 0.0032[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.75962:   7%|▋         | 2/28 [00:06<01:32,  3.55s/it]epoch 0 loss 5.74903:   7%|▋         | 2/28 [00:06<01:32,  3.55s/it]epoch 0 loss 5.74903:  11%|█         | 3/28 [00:06<00:52,  2.11s/it]epoch 0 loss 5.73547:  11%|█         | 3/28 [00:07<00:52,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.02[0m
[32m  eval_f1 = 0.0015[0m
[32m  eval_mcc = 0.0113[0m
[32m  eval_precision = 0.0019[0m
[32m  eval_recall = 0.0046[0m
[32m  ********************[0m
[32m  Best f1:0.0015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.73547:  14%|█▍        | 4/28 [00:13<01:36,  4.03s/it]epoch 0 loss 5.71042:  14%|█▍        | 4/28 [00:14<01:36,  4.03s/it]epoch 0 loss 5.71042:  18%|█▊        | 5/28 [00:14<01:02,  2.73s/it]epoch 0 loss 5.67623:  18%|█▊        | 5/28 [00:14<01:02,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0287[0m
[32m  eval_f1 = 0.0022[0m
[32m  eval_mcc = 0.0139[0m
[32m  eval_precision = 0.0032[0m
[32m  eval_recall = 0.007[0m
[32m  ********************[0m
[32m  Best f1:0.0022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0139[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.67623:  21%|██▏       | 6/28 [00:23<01:53,  5.15s/it]epoch 0 loss 5.64019:  21%|██▏       | 6/28 [00:24<01:53,  5.15s/it]epoch 0 loss 5.64019:  25%|██▌       | 7/28 [00:24<01:15,  3.61s/it]epoch 0 loss 5.59115:  25%|██▌       | 7/28 [00:24<01:15,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0396[0m
[32m  eval_f1 = 0.0057[0m
[32m  eval_mcc = 0.0179[0m
[32m  eval_precision = 0.0143[0m
[32m  eval_recall = 0.0126[0m
[32m  ********************[0m
[32m  Best f1:0.0057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.59115:  29%|██▊       | 8/28 [00:32<01:41,  5.10s/it]epoch 0 loss 5.54046:  29%|██▊       | 8/28 [00:33<01:41,  5.10s/it]epoch 0 loss 5.54046:  32%|███▏      | 9/28 [00:33<01:09,  3.64s/it]epoch 0 loss 5.48183:  32%|███▏      | 9/28 [00:33<01:09,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0444[0m
[32m  eval_f1 = 0.0078[0m
[32m  eval_mcc = 0.018[0m
[32m  eval_precision = 0.0171[0m
[32m  eval_recall = 0.0158[0m
[32m  ********************[0m
[32m  Best f1:0.0078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.48183:  36%|███▌      | 10/28 [00:43<01:42,  5.67s/it]epoch 0 loss 5.41723:  36%|███▌      | 10/28 [00:43<01:42,  5.67s/it]epoch 0 loss 5.41723:  39%|███▉      | 11/28 [00:43<01:09,  4.07s/it]epoch 0 loss 5.34693:  39%|███▉      | 11/28 [00:44<01:09,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0534[0m
[32m  eval_f1 = 0.0112[0m
[32m  eval_mcc = 0.0239[0m
[32m  eval_precision = 0.0244[0m
[32m  eval_recall = 0.0185[0m
[32m  ********************[0m
[32m  Best f1:0.0112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.34693:  43%|████▎     | 12/28 [00:51<01:23,  5.25s/it]epoch 0 loss 5.27413:  43%|████▎     | 12/28 [00:52<01:23,  5.25s/it]epoch 0 loss 5.27413:  46%|████▋     | 13/28 [00:52<00:56,  3.78s/it]epoch 0 loss 5.19868:  46%|████▋     | 13/28 [00:52<00:56,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0721[0m
[32m  eval_f1 = 0.0154[0m
[32m  eval_mcc = 0.0355[0m
[32m  eval_precision = 0.0296[0m
[32m  eval_recall = 0.0221[0m
[32m  ********************[0m
[32m  Best f1:0.0154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.19868:  50%|█████     | 14/28 [00:58<01:04,  4.61s/it]epoch 0 loss 5.1228:  50%|█████     | 14/28 [00:59<01:04,  4.61s/it] epoch 0 loss 5.1228:  54%|█████▎    | 15/28 [00:59<00:43,  3.35s/it]epoch 0 loss 5.04382:  54%|█████▎    | 15/28 [00:59<00:43,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1129[0m
[32m  eval_f1 = 0.0228[0m
[32m  eval_mcc = 0.0632[0m
[32m  eval_precision = 0.0404[0m
[32m  eval_recall = 0.0273[0m
[32m  ********************[0m
[32m  Best f1:0.0228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04382:  57%|█████▋    | 16/28 [01:05<00:51,  4.28s/it]epoch 0 loss 4.96554:  57%|█████▋    | 16/28 [01:05<00:51,  4.28s/it]epoch 0 loss 4.96554:  61%|██████    | 17/28 [01:05<00:34,  3.12s/it]epoch 0 loss 4.88823:  61%|██████    | 17/28 [01:06<00:34,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1998[0m
[32m  eval_f1 = 0.0343[0m
[32m  eval_mcc = 0.1388[0m
[32m  eval_precision = 0.0559[0m
[32m  eval_recall = 0.0351[0m
[32m  ********************[0m
[32m  Best f1:0.0343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.88823:  64%|██████▍   | 18/28 [01:12<00:41,  4.15s/it]epoch 0 loss 4.80867:  64%|██████▍   | 18/28 [01:12<00:41,  4.15s/it]epoch 0 loss 4.80867:  68%|██████▊   | 19/28 [01:12<00:27,  3.03s/it]epoch 0 loss 4.73407:  68%|██████▊   | 19/28 [01:13<00:27,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2563[0m
[32m  eval_f1 = 0.0354[0m
[32m  eval_mcc = 0.1972[0m
[32m  eval_precision = 0.0651[0m
[32m  eval_recall = 0.0368[0m
[32m  ********************[0m
[32m  Best f1:0.0354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1972[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.73407:  71%|███████▏  | 20/28 [01:18<00:31,  3.94s/it]epoch 0 loss 4.6636:  71%|███████▏  | 20/28 [01:19<00:31,  3.94s/it] epoch 0 loss 4.6636:  75%|███████▌  | 21/28 [01:19<00:20,  2.89s/it]epoch 0 loss 4.59675:  75%|███████▌  | 21/28 [01:19<00:20,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2827[0m
[32m  eval_f1 = 0.035[0m
[32m  eval_mcc = 0.2273[0m
[32m  eval_precision = 0.0601[0m
[32m  eval_recall = 0.039[0m
[32m  ********************[0m
[32m  Best MCC:0.2273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.59675:  79%|███████▊  | 22/28 [01:24<00:21,  3.54s/it]epoch 0 loss 4.52498:  79%|███████▊  | 22/28 [01:24<00:21,  3.54s/it]epoch 0 loss 4.52498:  82%|████████▏ | 23/28 [01:24<00:12,  2.60s/it]epoch 0 loss 4.46098:  82%|████████▏ | 23/28 [01:25<00:12,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3083[0m
[32m  eval_f1 = 0.0361[0m
[32m  eval_mcc = 0.2559[0m
[32m  eval_precision = 0.0615[0m
[32m  eval_recall = 0.0417[0m
[32m  ********************[0m
[32m  Best f1:0.0361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.46098:  86%|████████▌ | 24/28 [01:31<00:14,  3.74s/it]epoch 0 loss 4.39845:  86%|████████▌ | 24/28 [01:31<00:14,  3.74s/it]epoch 0 loss 4.39845:  89%|████████▉ | 25/28 [01:31<00:08,  2.75s/it]epoch 0 loss 4.33548:  89%|████████▉ | 25/28 [01:32<00:08,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3441[0m
[32m  eval_f1 = 0.0589[0m
[32m  eval_mcc = 0.2971[0m
[32m  eval_precision = 0.0816[0m
[32m  eval_recall = 0.062[0m
[32m  ********************[0m
[32m  Best f1:0.0589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2971[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.33548:  93%|█████████▎| 26/28 [01:38<00:07,  3.86s/it]epoch 0 loss 4.27697:  93%|█████████▎| 26/28 [01:38<00:07,  3.86s/it]epoch 0 loss 4.27697:  96%|█████████▋| 27/28 [01:38<00:02,  2.83s/it]epoch 0 loss 4.21527:  96%|█████████▋| 27/28 [01:38<00:02,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3874[0m
[32m  eval_f1 = 0.0917[0m
[32m  eval_mcc = 0.3472[0m
[32m  eval_precision = 0.1436[0m
[32m  eval_recall = 0.0873[0m
[32m  ********************[0m
[32m  Best f1:0.0917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.21527: 100%|██████████| 28/28 [01:44<00:00,  3.85s/it]epoch 0 loss 4.21527: 100%|██████████| 28/28 [01:44<00:00,  3.74s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.58613:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.58613:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s]epoch 1 loss 2.57635:   4%|▎         | 1/28 [00:00<00:11,  2.29it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.461[0m
[32m  eval_f1 = 0.127[0m
[32m  eval_mcc = 0.4278[0m
[32m  eval_precision = 0.1833[0m
[32m  eval_recall = 0.12[0m
[32m  ********************[0m
[32m  Best f1:0.127[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.57635:   7%|▋         | 2/28 [00:06<01:36,  3.71s/it]epoch 1 loss 2.55053:   7%|▋         | 2/28 [00:06<01:36,  3.71s/it]epoch 1 loss 2.55053:  11%|█         | 3/28 [00:06<00:55,  2.21s/it]epoch 1 loss 2.53685:  11%|█         | 3/28 [00:07<00:55,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5085[0m
[32m  eval_f1 = 0.1483[0m
[32m  eval_mcc = 0.4774[0m
[32m  eval_precision = 0.184[0m
[32m  eval_recall = 0.1416[0m
[32m  ********************[0m
[32m  Best f1:0.1483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4774[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.53685:  14%|█▍        | 4/28 [00:13<01:33,  3.89s/it]epoch 1 loss 2.48036:  14%|█▍        | 4/28 [00:13<01:33,  3.89s/it]epoch 1 loss 2.48036:  18%|█▊        | 5/28 [00:13<01:00,  2.64s/it]epoch 1 loss 2.42616:  18%|█▊        | 5/28 [00:14<01:00,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5351[0m
[32m  eval_f1 = 0.1623[0m
[32m  eval_mcc = 0.5064[0m
[32m  eval_precision = 0.1984[0m
[32m  eval_recall = 0.1561[0m
[32m  ********************[0m
[32m  Best f1:0.1623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42616:  21%|██▏       | 6/28 [00:20<01:27,  3.96s/it]epoch 1 loss 2.39716:  21%|██▏       | 6/28 [00:20<01:27,  3.96s/it]epoch 1 loss 2.39716:  25%|██▌       | 7/28 [00:20<00:58,  2.80s/it]epoch 1 loss 2.34859:  25%|██▌       | 7/28 [00:21<00:58,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5471[0m
[32m  eval_f1 = 0.167[0m
[32m  eval_mcc = 0.5236[0m
[32m  eval_precision = 0.2001[0m
[32m  eval_recall = 0.1607[0m
[32m  ********************[0m
[32m  Best f1:0.167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.34859:  29%|██▊       | 8/28 [00:30<01:42,  5.14s/it]epoch 1 loss 2.30506:  29%|██▊       | 8/28 [00:31<01:42,  5.14s/it]epoch 1 loss 2.30506:  32%|███▏      | 9/28 [00:31<01:09,  3.67s/it]epoch 1 loss 2.28419:  32%|███▏      | 9/28 [00:31<01:09,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5546[0m
[32m  eval_f1 = 0.1681[0m
[32m  eval_mcc = 0.5332[0m
[32m  eval_precision = 0.2172[0m
[32m  eval_recall = 0.1609[0m
[32m  ********************[0m
[32m  Best f1:0.1681[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.28419:  36%|███▌      | 10/28 [00:39<01:31,  5.11s/it]epoch 1 loss 2.26094:  36%|███▌      | 10/28 [00:40<01:31,  5.11s/it]epoch 1 loss 2.26094:  39%|███▉      | 11/28 [00:40<01:02,  3.68s/it]epoch 1 loss 2.24341:  39%|███▉      | 11/28 [00:40<01:02,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5599[0m
[32m  eval_f1 = 0.1689[0m
[32m  eval_mcc = 0.5362[0m
[32m  eval_precision = 0.2185[0m
[32m  eval_recall = 0.1612[0m
[32m  ********************[0m
[32m  Best f1:0.1689[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.24341:  43%|████▎     | 12/28 [00:49<01:27,  5.49s/it]epoch 1 loss 2.2144:  43%|████▎     | 12/28 [00:50<01:27,  5.49s/it] epoch 1 loss 2.2144:  46%|████▋     | 13/28 [00:50<00:59,  3.95s/it]epoch 1 loss 2.19669:  46%|████▋     | 13/28 [00:50<00:59,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.559[0m
[32m  eval_f1 = 0.1688[0m
[32m  eval_mcc = 0.5332[0m
[32m  eval_precision = 0.2333[0m
[32m  eval_recall = 0.1603[0m

epoch 1 loss 2.19669:  50%|█████     | 14/28 [00:53<00:54,  3.91s/it]epoch 1 loss 2.18693:  50%|█████     | 14/28 [00:54<00:54,  3.91s/it]epoch 1 loss 2.18693:  54%|█████▎    | 15/28 [00:54<00:37,  2.85s/it]epoch 1 loss 2.16852:  54%|█████▎    | 15/28 [00:54<00:37,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5645[0m
[32m  eval_f1 = 0.1765[0m
[32m  eval_mcc = 0.538[0m
[32m  eval_precision = 0.2355[0m
[32m  eval_recall = 0.1657[0m
[32m  ********************[0m
[32m  Best f1:0.1765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16852:  57%|█████▋    | 16/28 [01:03<00:58,  4.85s/it]epoch 1 loss 2.147:  57%|█████▋    | 16/28 [01:04<00:58,  4.85s/it]  epoch 1 loss 2.147:  61%|██████    | 17/28 [01:04<00:38,  3.52s/it]epoch 1 loss 2.13072:  61%|██████    | 17/28 [01:04<00:38,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5726[0m
[32m  eval_f1 = 0.1879[0m
[32m  eval_mcc = 0.5466[0m
[32m  eval_precision = 0.2616[0m
[32m  eval_recall = 0.1759[0m
[32m  ********************[0m
[32m  Best f1:0.1879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13072:  64%|██████▍   | 18/28 [01:12<00:48,  4.85s/it]epoch 1 loss 2.10703:  64%|██████▍   | 18/28 [01:12<00:48,  4.85s/it]epoch 1 loss 2.10703:  68%|██████▊   | 19/28 [01:12<00:31,  3.52s/it]epoch 1 loss 2.0916:  68%|██████▊   | 19/28 [01:12<00:31,  3.52s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5809[0m
[32m  eval_f1 = 0.206[0m
[32m  eval_mcc = 0.5556[0m
[32m  eval_precision = 0.2997[0m
[32m  eval_recall = 0.1921[0m
[32m  ********************[0m
[32m  Best f1:0.206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0916:  71%|███████▏  | 20/28 [01:22<00:43,  5.39s/it]epoch 1 loss 2.07438:  71%|███████▏  | 20/28 [01:22<00:43,  5.39s/it]epoch 1 loss 2.07438:  75%|███████▌  | 21/28 [01:22<00:27,  3.90s/it]epoch 1 loss 2.06663:  75%|███████▌  | 21/28 [01:23<00:27,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5856[0m
[32m  eval_f1 = 0.2064[0m
[32m  eval_mcc = 0.5611[0m
[32m  eval_precision = 0.2892[0m
[32m  eval_recall = 0.194[0m
[32m  ********************[0m
[32m  Best f1:0.2064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.06663:  79%|███████▊  | 22/28 [01:30<00:30,  5.09s/it]epoch 1 loss 2.04888:  79%|███████▊  | 22/28 [01:31<00:30,  5.09s/it]epoch 1 loss 2.04888:  82%|████████▏ | 23/28 [01:31<00:18,  3.69s/it]epoch 1 loss 2.03374:  82%|████████▏ | 23/28 [01:31<00:18,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5906[0m
[32m  eval_f1 = 0.2179[0m
[32m  eval_mcc = 0.5671[0m
[32m  eval_precision = 0.3222[0m
[32m  eval_recall = 0.2025[0m
[32m  ********************[0m
[32m  Best f1:0.2179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5671[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03374:  86%|████████▌ | 24/28 [01:40<00:21,  5.40s/it]epoch 1 loss 2.02296:  86%|████████▌ | 24/28 [01:40<00:21,  5.40s/it]epoch 1 loss 2.02296:  89%|████████▉ | 25/28 [01:40<00:11,  3.91s/it]epoch 1 loss 2.00324:  89%|████████▉ | 25/28 [01:41<00:11,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5983[0m
[32m  eval_f1 = 0.2345[0m
[32m  eval_mcc = 0.5767[0m
[32m  eval_precision = 0.3274[0m
[32m  eval_recall = 0.2172[0m
[32m  ********************[0m
[32m  Best f1:0.2345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5767[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00324:  93%|█████████▎| 26/28 [01:49<00:10,  5.36s/it]epoch 1 loss 1.99484:  93%|█████████▎| 26/28 [01:50<00:10,  5.36s/it]epoch 1 loss 1.99484:  96%|█████████▋| 27/28 [01:50<00:03,  3.88s/it]epoch 1 loss 1.97843:  96%|█████████▋| 27/28 [01:50<00:03,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6014[0m
[32m  eval_f1 = 0.2377[0m
[32m  eval_mcc = 0.5816[0m
[32m  eval_precision = 0.3308[0m
[32m  eval_recall = 0.2199[0m
[32m  ********************[0m
[32m  Best f1:0.2377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5816[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97843: 100%|██████████| 28/28 [01:59<00:00,  5.60s/it]epoch 1 loss 1.97843: 100%|██████████| 28/28 [01:59<00:00,  4.27s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.57694:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.57694:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 2 loss 1.62885:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6024[0m
[32m  eval_f1 = 0.2409[0m
[32m  eval_mcc = 0.5833[0m
[32m  eval_precision = 0.3247[0m
[32m  eval_recall = 0.2234[0m
[32m  ********************[0m
[32m  Best f1:0.2409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62885:   7%|▋         | 2/28 [00:07<02:00,  4.62s/it]epoch 2 loss 1.65253:   7%|▋         | 2/28 [00:08<02:00,  4.62s/it]epoch 2 loss 1.65253:  11%|█         | 3/28 [00:08<01:07,  2.70s/it]epoch 2 loss 1.62213:  11%|█         | 3/28 [00:08<01:07,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6044[0m
[32m  eval_f1 = 0.2468[0m
[32m  eval_mcc = 0.5844[0m
[32m  eval_precision = 0.3229[0m
[32m  eval_recall = 0.2295[0m
[32m  ********************[0m
[32m  Best f1:0.2468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5844[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62213:  14%|█▍        | 4/28 [00:15<01:44,  4.36s/it]epoch 2 loss 1.62152:  14%|█▍        | 4/28 [00:15<01:44,  4.36s/it]epoch 2 loss 1.62152:  18%|█▊        | 5/28 [00:15<01:07,  2.94s/it]epoch 2 loss 1.624:  18%|█▊        | 5/28 [00:16<01:07,  2.94s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6077[0m
[32m  eval_f1 = 0.2521[0m
[32m  eval_mcc = 0.5872[0m
[32m  eval_precision = 0.3271[0m
[32m  eval_recall = 0.2342[0m
[32m  ********************[0m
[32m  Best f1:0.2521[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5872[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.624:  21%|██▏       | 6/28 [00:25<01:54,  5.22s/it]epoch 2 loss 1.61055:  21%|██▏       | 6/28 [00:25<01:54,  5.22s/it]epoch 2 loss 1.61055:  25%|██▌       | 7/28 [00:25<01:16,  3.65s/it]epoch 2 loss 1.59906:  25%|██▌       | 7/28 [00:26<01:16,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6098[0m
[32m  eval_f1 = 0.2585[0m
[32m  eval_mcc = 0.588[0m
[32m  eval_precision = 0.3524[0m
[32m  eval_recall = 0.2402[0m
[32m  ********************[0m
[32m  Best f1:0.2585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59906:  29%|██▊       | 8/28 [00:34<01:42,  5.12s/it]epoch 2 loss 1.59937:  29%|██▊       | 8/28 [00:34<01:42,  5.12s/it]epoch 2 loss 1.59937:  32%|███▏      | 9/28 [00:34<01:09,  3.65s/it]epoch 2 loss 1.59695:  32%|███▏      | 9/28 [00:34<01:09,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6113[0m
[32m  eval_f1 = 0.261[0m
[32m  eval_mcc = 0.5886[0m
[32m  eval_precision = 0.3578[0m
[32m  eval_recall = 0.2431[0m
[32m  ********************[0m
[32m  Best f1:0.261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5886[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59695:  36%|███▌      | 10/28 [00:42<01:30,  5.01s/it]epoch 2 loss 1.59317:  36%|███▌      | 10/28 [00:42<01:30,  5.01s/it]epoch 2 loss 1.59317:  39%|███▉      | 11/28 [00:42<01:01,  3.61s/it]epoch 2 loss 1.59104:  39%|███▉      | 11/28 [00:43<01:01,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6162[0m
[32m  eval_f1 = 0.2637[0m
[32m  eval_mcc = 0.5937[0m
[32m  eval_precision = 0.3531[0m
[32m  eval_recall = 0.246[0m
[32m  ********************[0m
[32m  Best f1:0.2637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59104:  43%|████▎     | 12/28 [00:49<01:11,  4.47s/it]epoch 2 loss 1.58888:  43%|████▎     | 12/28 [00:49<01:11,  4.47s/it]epoch 2 loss 1.58888:  46%|████▋     | 13/28 [00:49<00:48,  3.24s/it]epoch 2 loss 1.58539:  46%|████▋     | 13/28 [00:50<00:48,  3.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6194[0m
[32m  eval_f1 = 0.2661[0m
[32m  eval_mcc = 0.5972[0m
[32m  eval_precision = 0.3528[0m
[32m  eval_recall = 0.249[0m
[32m  ********************[0m
[32m  Best f1:0.2661[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5972[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58539:  50%|█████     | 14/28 [00:56<00:58,  4.20s/it]epoch 2 loss 1.58058:  50%|█████     | 14/28 [00:56<00:58,  4.20s/it]epoch 2 loss 1.58058:  54%|█████▎    | 15/28 [00:56<00:39,  3.06s/it]epoch 2 loss 1.56795:  54%|█████▎    | 15/28 [00:57<00:39,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6219[0m
[32m  eval_f1 = 0.2728[0m
[32m  eval_mcc = 0.6001[0m
[32m  eval_precision = 0.3645[0m
[32m  eval_recall = 0.2538[0m
[32m  ********************[0m
[32m  Best f1:0.2728[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56795:  57%|█████▋    | 16/28 [01:03<00:48,  4.07s/it]epoch 2 loss 1.56239:  57%|█████▋    | 16/28 [01:03<00:48,  4.07s/it]epoch 2 loss 1.56239:  61%|██████    | 17/28 [01:03<00:32,  2.98s/it]epoch 2 loss 1.56087:  61%|██████    | 17/28 [01:03<00:32,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6235[0m
[32m  eval_f1 = 0.2754[0m
[32m  eval_mcc = 0.6022[0m
[32m  eval_precision = 0.3688[0m
[32m  eval_recall = 0.2559[0m
[32m  ********************[0m
[32m  Best f1:0.2754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56087:  64%|██████▍   | 18/28 [01:13<00:51,  5.12s/it]epoch 2 loss 1.56161:  64%|██████▍   | 18/28 [01:14<00:51,  5.12s/it]epoch 2 loss 1.56161:  68%|██████▊   | 19/28 [01:14<00:33,  3.71s/it]epoch 2 loss 1.55822:  68%|██████▊   | 19/28 [01:14<00:33,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6253[0m
[32m  eval_f1 = 0.2761[0m
[32m  eval_mcc = 0.6056[0m
[32m  eval_precision = 0.3688[0m
[32m  eval_recall = 0.2568[0m
[32m  ********************[0m
[32m  Best f1:0.2761[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55822:  71%|███████▏  | 20/28 [01:24<00:46,  5.77s/it]epoch 2 loss 1.54321:  71%|███████▏  | 20/28 [01:25<00:46,  5.77s/it]epoch 2 loss 1.54321:  75%|███████▌  | 21/28 [01:25<00:29,  4.17s/it]epoch 2 loss 1.53759:  75%|███████▌  | 21/28 [01:25<00:29,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6266[0m
[32m  eval_f1 = 0.2783[0m
[32m  eval_mcc = 0.6087[0m
[32m  eval_precision = 0.3783[0m
[32m  eval_recall = 0.2582[0m
[32m  ********************[0m
[32m  Best f1:0.2783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53759:  79%|███████▊  | 22/28 [01:34<00:34,  5.73s/it]epoch 2 loss 1.53137:  79%|███████▊  | 22/28 [01:34<00:34,  5.73s/it]epoch 2 loss 1.53137:  82%|████████▏ | 23/28 [01:34<00:20,  4.14s/it]epoch 2 loss 1.53535:  82%|████████▏ | 23/28 [01:35<00:20,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6263[0m
[32m  eval_f1 = 0.2794[0m
[32m  eval_mcc = 0.6076[0m
[32m  eval_precision = 0.377[0m
[32m  eval_recall = 0.2593[0m
[32m  ********************[0m
[32m  Best f1:0.2794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.53535:  86%|████████▌ | 24/28 [01:41<00:19,  4.77s/it]epoch 2 loss 1.52722:  86%|████████▌ | 24/28 [01:41<00:19,  4.77s/it]epoch 2 loss 1.52722:  89%|████████▉ | 25/28 [01:41<00:10,  3.46s/it]epoch 2 loss 1.5233:  89%|████████▉ | 25/28 [01:41<00:10,  3.46s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6274[0m
[32m  eval_f1 = 0.2804[0m
[32m  eval_mcc = 0.6068[0m
[32m  eval_precision = 0.3752[0m
[32m  eval_recall = 0.2608[0m
[32m  ********************[0m
[32m  Best f1:0.2804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.5233:  93%|█████████▎| 26/28 [01:48<00:08,  4.50s/it]epoch 2 loss 1.52724:  93%|█████████▎| 26/28 [01:48<00:08,  4.50s/it]epoch 2 loss 1.52724:  96%|█████████▋| 27/28 [01:48<00:03,  3.27s/it]epoch 2 loss 1.52277:  96%|█████████▋| 27/28 [01:49<00:03,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6298[0m
[32m  eval_f1 = 0.2881[0m
[32m  eval_mcc = 0.608[0m
[32m  eval_precision = 0.3802[0m
[32m  eval_recall = 0.2671[0m
[32m  ********************[0m
[32m  Best f1:0.2881[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.52277: 100%|██████████| 28/28 [01:55<00:00,  4.26s/it]epoch 2 loss 1.52277: 100%|██████████| 28/28 [01:55<00:00,  4.12s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.28459:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.28459:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 3 loss 1.32969:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6303[0m
[32m  eval_f1 = 0.2897[0m
[32m  eval_mcc = 0.6082[0m
[32m  eval_precision = 0.3853[0m
[32m  eval_recall = 0.2688[0m
[32m  ********************[0m
[32m  Best f1:0.2897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.32969:   7%|▋         | 2/28 [00:06<01:43,  3.99s/it]epoch 3 loss 1.33393:   7%|▋         | 2/28 [00:07<01:43,  3.99s/it]epoch 3 loss 1.33393:  11%|█         | 3/28 [00:07<00:58,  2.36s/it]epoch 3 loss 1.35309:  11%|█         | 3/28 [00:07<00:58,  2.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.632[0m
[32m  eval_f1 = 0.2917[0m
[32m  eval_mcc = 0.61[0m
[32m  eval_precision = 0.3859[0m
[32m  eval_recall = 0.2705[0m
[32m  ********************[0m
[32m  Best f1:0.2917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.61[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35309:  14%|█▍        | 4/28 [00:14<01:43,  4.30s/it]epoch 3 loss 1.38155:  14%|█▍        | 4/28 [00:15<01:43,  4.30s/it]epoch 3 loss 1.38155:  18%|█▊        | 5/28 [00:15<01:06,  2.90s/it]epoch 3 loss 1.38789:  18%|█▊        | 5/28 [00:15<01:06,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6335[0m
[32m  eval_f1 = 0.293[0m
[32m  eval_mcc = 0.6117[0m
[32m  eval_precision = 0.3955[0m
[32m  eval_recall = 0.2721[0m
[32m  ********************[0m
[32m  Best f1:0.293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6117[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38789:  21%|██▏       | 6/28 [00:21<01:33,  4.26s/it]epoch 3 loss 1.37753:  21%|██▏       | 6/28 [00:22<01:33,  4.26s/it]epoch 3 loss 1.37753:  25%|██▌       | 7/28 [00:22<01:03,  3.01s/it]epoch 3 loss 1.36552:  25%|██▌       | 7/28 [00:22<01:03,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6353[0m
[32m  eval_f1 = 0.2922[0m
[32m  eval_mcc = 0.614[0m
[32m  eval_precision = 0.3888[0m
[32m  eval_recall = 0.2713[0m
[32m  ********************[0m
[32m  Best MCC:0.614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36552:  29%|██▊       | 8/28 [00:27<01:13,  3.66s/it]epoch 3 loss 1.38568:  29%|██▊       | 8/28 [00:27<01:13,  3.66s/it]epoch 3 loss 1.38568:  32%|███▏      | 9/28 [00:27<00:50,  2.64s/it]epoch 3 loss 1.3953:  32%|███▏      | 9/28 [00:28<00:50,  2.64s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6368[0m
[32m  eval_f1 = 0.2957[0m
[32m  eval_mcc = 0.6163[0m
[32m  eval_precision = 0.3961[0m
[32m  eval_recall = 0.2736[0m
[32m  ********************[0m
[32m  Best f1:0.2957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6163[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3953:  36%|███▌      | 10/28 [00:35<01:14,  4.13s/it]epoch 3 loss 1.41082:  36%|███▌      | 10/28 [00:35<01:14,  4.13s/it]epoch 3 loss 1.41082:  39%|███▉      | 11/28 [00:35<00:50,  2.99s/it]epoch 3 loss 1.42684:  39%|███▉      | 11/28 [00:36<00:50,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6383[0m
[32m  eval_f1 = 0.2978[0m
[32m  eval_mcc = 0.6186[0m
[32m  eval_precision = 0.4037[0m
[32m  eval_recall = 0.2758[0m
[32m  ********************[0m
[32m  Best f1:0.2978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42684:  43%|████▎     | 12/28 [00:44<01:18,  4.92s/it]epoch 3 loss 1.42584:  43%|████▎     | 12/28 [00:45<01:18,  4.92s/it]epoch 3 loss 1.42584:  46%|████▋     | 13/28 [00:45<00:53,  3.55s/it]epoch 3 loss 1.42114:  46%|████▋     | 13/28 [00:45<00:53,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6384[0m
[32m  eval_f1 = 0.3[0m
[32m  eval_mcc = 0.6191[0m
[32m  eval_precision = 0.4185[0m
[32m  eval_recall = 0.2782[0m
[32m  ********************[0m
[32m  Best f1:0.3[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42114:  50%|█████     | 14/28 [00:53<01:10,  5.05s/it]epoch 3 loss 1.41983:  50%|█████     | 14/28 [00:54<01:10,  5.05s/it]epoch 3 loss 1.41983:  54%|█████▎    | 15/28 [00:54<00:47,  3.66s/it]epoch 3 loss 1.41513:  54%|█████▎    | 15/28 [00:54<00:47,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6397[0m
[32m  eval_f1 = 0.3024[0m
[32m  eval_mcc = 0.6205[0m
[32m  eval_precision = 0.4169[0m
[32m  eval_recall = 0.2807[0m
[32m  ********************[0m
[32m  Best f1:0.3024[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41513:  57%|█████▋    | 16/28 [01:04<01:05,  5.49s/it]epoch 3 loss 1.41503:  57%|█████▋    | 16/28 [01:04<01:05,  5.49s/it]epoch 3 loss 1.41503:  61%|██████    | 17/28 [01:04<00:43,  3.97s/it]epoch 3 loss 1.41935:  61%|██████    | 17/28 [01:04<00:43,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6404[0m
[32m  eval_f1 = 0.3044[0m
[32m  eval_mcc = 0.621[0m
[32m  eval_precision = 0.4209[0m
[32m  eval_recall = 0.282[0m
[32m  ********************[0m
[32m  Best f1:0.3044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41935:  64%|██████▍   | 18/28 [01:12<00:50,  5.07s/it]epoch 3 loss 1.42146:  64%|██████▍   | 18/28 [01:12<00:50,  5.07s/it]epoch 3 loss 1.42146:  68%|██████▊   | 19/28 [01:12<00:33,  3.68s/it]epoch 3 loss 1.4198:  68%|██████▊   | 19/28 [01:12<00:33,  3.68s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.64[0m
[32m  eval_f1 = 0.305[0m
[32m  eval_mcc = 0.6203[0m
[32m  eval_precision = 0.4181[0m
[32m  eval_recall = 0.282[0m
[32m  ********************[0m
[32m  Best f1:0.305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.4198:  71%|███████▏  | 20/28 [01:19<00:36,  4.54s/it]epoch 3 loss 1.41605:  71%|███████▏  | 20/28 [01:19<00:36,  4.54s/it]epoch 3 loss 1.41605:  75%|███████▌  | 21/28 [01:19<00:23,  3.30s/it]epoch 3 loss 1.4109:  75%|███████▌  | 21/28 [01:19<00:23,  3.30s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6405[0m
[32m  eval_f1 = 0.3081[0m
[32m  eval_mcc = 0.6207[0m
[32m  eval_precision = 0.4209[0m
[32m  eval_recall = 0.2839[0m
[32m  ********************[0m
[32m  Best f1:0.3081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.4109:  79%|███████▊  | 22/28 [01:25<00:25,  4.24s/it]epoch 3 loss 1.40697:  79%|███████▊  | 22/28 [01:26<00:25,  4.24s/it]epoch 3 loss 1.40697:  82%|████████▏ | 23/28 [01:26<00:15,  3.09s/it]epoch 3 loss 1.40638:  82%|████████▏ | 23/28 [01:26<00:15,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6408[0m
[32m  eval_f1 = 0.3096[0m
[32m  eval_mcc = 0.6208[0m
[32m  eval_precision = 0.4295[0m
[32m  eval_recall = 0.2852[0m
[32m  ********************[0m
[32m  Best f1:0.3096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.40638:  86%|████████▌ | 24/28 [01:33<00:17,  4.27s/it]epoch 3 loss 1.40754:  86%|████████▌ | 24/28 [01:33<00:17,  4.27s/it]epoch 3 loss 1.40754:  89%|████████▉ | 25/28 [01:33<00:09,  3.12s/it]epoch 3 loss 1.40701:  89%|████████▉ | 25/28 [01:34<00:09,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6415[0m
[32m  eval_f1 = 0.3151[0m
[32m  eval_mcc = 0.6214[0m
[32m  eval_precision = 0.4383[0m
[32m  eval_recall = 0.2896[0m
[32m  ********************[0m
[32m  Best f1:0.3151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40701:  93%|█████████▎| 26/28 [01:40<00:08,  4.08s/it]epoch 3 loss 1.4104:  93%|█████████▎| 26/28 [01:40<00:08,  4.08s/it] epoch 3 loss 1.4104:  96%|█████████▋| 27/28 [01:40<00:02,  2.98s/it]epoch 3 loss 1.40681:  96%|█████████▋| 27/28 [01:40<00:02,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.3168[0m
[32m  eval_mcc = 0.6226[0m
[32m  eval_precision = 0.437[0m
[32m  eval_recall = 0.2913[0m
[32m  ********************[0m
[32m  Best f1:0.3168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40681: 100%|██████████| 28/28 [01:46<00:00,  3.96s/it]epoch 3 loss 1.40681: 100%|██████████| 28/28 [01:46<00:00,  3.82s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.41263:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.41263:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 4 loss 1.44703:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6438[0m
[32m  eval_f1 = 0.3196[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.4395[0m
[32m  eval_recall = 0.2941[0m
[32m  ********************[0m
[32m  Best f1:0.3196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.44703:   7%|▋         | 2/28 [00:06<01:43,  3.97s/it]epoch 4 loss 1.42534:   7%|▋         | 2/28 [00:07<01:43,  3.97s/it]epoch 4 loss 1.42534:  11%|█         | 3/28 [00:07<00:58,  2.35s/it]epoch 4 loss 1.4075:  11%|█         | 3/28 [00:07<00:58,  2.35s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6444[0m
[32m  eval_f1 = 0.3205[0m
[32m  eval_mcc = 0.6243[0m
[32m  eval_precision = 0.4395[0m
[32m  eval_recall = 0.2946[0m
[32m  ********************[0m
[32m  Best f1:0.3205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.4075:  14%|█▍        | 4/28 [00:13<01:31,  3.81s/it]epoch 4 loss 1.4105:  14%|█▍        | 4/28 [00:13<01:31,  3.81s/it]epoch 4 loss 1.4105:  18%|█▊        | 5/28 [00:13<00:59,  2.58s/it]epoch 4 loss 1.40743:  18%|█▊        | 5/28 [00:14<00:59,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6447[0m
[32m  eval_f1 = 0.3215[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.4397[0m
[32m  eval_recall = 0.2954[0m
[32m  ********************[0m
[32m  Best f1:0.3215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40743:  21%|██▏       | 6/28 [00:20<01:25,  3.88s/it]epoch 4 loss 1.39624:  21%|██▏       | 6/28 [00:20<01:25,  3.88s/it]epoch 4 loss 1.39624:  25%|██▌       | 7/28 [00:20<00:57,  2.75s/it]epoch 4 loss 1.38971:  25%|██▌       | 7/28 [00:20<00:57,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6446[0m
[32m  eval_f1 = 0.3216[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.4406[0m
[32m  eval_recall = 0.2954[0m
[32m  ********************[0m
[32m  Best f1:0.3216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.38971:  29%|██▊       | 8/28 [00:25<01:09,  3.49s/it]epoch 4 loss 1.38758:  29%|██▊       | 8/28 [00:26<01:09,  3.49s/it]epoch 4 loss 1.38758:  32%|███▏      | 9/28 [00:26<00:48,  2.53s/it]epoch 4 loss 1.39433:  32%|███▏      | 9/28 [00:26<00:48,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6446[0m
[32m  eval_f1 = 0.3216[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.4413[0m
[32m  eval_recall = 0.2954[0m

epoch 4 loss 1.39433:  36%|███▌      | 10/28 [00:29<00:52,  2.92s/it]epoch 4 loss 1.39152:  36%|███▌      | 10/28 [00:30<00:52,  2.92s/it]epoch 4 loss 1.39152:  39%|███▉      | 11/28 [00:30<00:36,  2.15s/it]epoch 4 loss 1.39363:  39%|███▉      | 11/28 [00:30<00:36,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6444[0m
[32m  eval_f1 = 0.3215[0m
[32m  eval_mcc = 0.6245[0m
[32m  eval_precision = 0.4455[0m
[32m  eval_recall = 0.2957[0m

epoch 4 loss 1.39363:  43%|████▎     | 12/28 [00:34<00:42,  2.65s/it]epoch 4 loss 1.39634:  43%|████▎     | 12/28 [00:34<00:42,  2.65s/it]epoch 4 loss 1.39634:  46%|████▋     | 13/28 [00:34<00:29,  1.97s/it]epoch 4 loss 1.38137:  46%|████▋     | 13/28 [00:34<00:29,  1.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6451[0m
[32m  eval_f1 = 0.3212[0m
[32m  eval_mcc = 0.6251[0m
[32m  eval_precision = 0.4409[0m
[32m  eval_recall = 0.2963[0m
[32m  ********************[0m
[32m  Best MCC:0.6251[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38137:  50%|█████     | 14/28 [00:39<00:40,  2.91s/it]epoch 4 loss 1.37546:  50%|█████     | 14/28 [00:39<00:40,  2.91s/it]epoch 4 loss 1.37546:  54%|█████▎    | 15/28 [00:39<00:28,  2.15s/it]epoch 4 loss 1.37083:  54%|█████▎    | 15/28 [00:40<00:28,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6451[0m
[32m  eval_f1 = 0.3214[0m
[32m  eval_mcc = 0.625[0m
[32m  eval_precision = 0.4411[0m
[32m  eval_recall = 0.2964[0m

epoch 4 loss 1.37083:  57%|█████▋    | 16/28 [00:43<00:31,  2.65s/it]epoch 4 loss 1.37028:  57%|█████▋    | 16/28 [00:44<00:31,  2.65s/it]epoch 4 loss 1.37028:  61%|██████    | 17/28 [00:44<00:21,  1.97s/it]epoch 4 loss 1.36912:  61%|██████    | 17/28 [00:44<00:21,  1.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6454[0m
[32m  eval_f1 = 0.3211[0m
[32m  eval_mcc = 0.6253[0m
[32m  eval_precision = 0.4407[0m
[32m  eval_recall = 0.2961[0m
[32m  ********************[0m
[32m  Best MCC:0.6253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36912:  64%|██████▍   | 18/28 [00:49<00:28,  2.90s/it]epoch 4 loss 1.37234:  64%|██████▍   | 18/28 [00:49<00:28,  2.90s/it]epoch 4 loss 1.37234:  68%|██████▊   | 19/28 [00:49<00:19,  2.15s/it]epoch 4 loss 1.3719:  68%|██████▊   | 19/28 [00:50<00:19,  2.15s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6453[0m
[32m  eval_f1 = 0.3208[0m
[32m  eval_mcc = 0.6253[0m
[32m  eval_precision = 0.4406[0m
[32m  eval_recall = 0.2956[0m

epoch 4 loss 1.3719:  71%|███████▏  | 20/28 [00:53<00:21,  2.65s/it]epoch 4 loss 1.36854:  71%|███████▏  | 20/28 [00:53<00:21,  2.65s/it]epoch 4 loss 1.36854:  75%|███████▌  | 21/28 [00:53<00:13,  1.98s/it]epoch 4 loss 1.36995:  75%|███████▌  | 21/28 [00:54<00:13,  1.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6455[0m
[32m  eval_f1 = 0.3202[0m
[32m  eval_mcc = 0.6255[0m
[32m  eval_precision = 0.4398[0m
[32m  eval_recall = 0.2951[0m
[32m  ********************[0m
[32m  Best MCC:0.6255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36995:  79%|███████▊  | 22/28 [00:58<00:17,  2.91s/it]epoch 4 loss 1.36843:  79%|███████▊  | 22/28 [00:59<00:17,  2.91s/it]epoch 4 loss 1.36843:  82%|████████▏ | 23/28 [00:59<00:10,  2.16s/it]epoch 4 loss 1.36529:  82%|████████▏ | 23/28 [00:59<00:10,  2.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6456[0m
[32m  eval_f1 = 0.3201[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4403[0m
[32m  eval_recall = 0.2951[0m
[32m  ********************[0m
[32m  Best MCC:0.6256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36529:  86%|████████▌ | 24/28 [01:04<00:12,  3.04s/it]epoch 4 loss 1.36979:  86%|████████▌ | 24/28 [01:04<00:12,  3.04s/it]epoch 4 loss 1.36979:  89%|████████▉ | 25/28 [01:04<00:06,  2.25s/it]epoch 4 loss 1.36925:  89%|████████▉ | 25/28 [01:05<00:06,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6456[0m
[32m  eval_f1 = 0.3201[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4402[0m
[32m  eval_recall = 0.295[0m

epoch 4 loss 1.36925:  93%|█████████▎| 26/28 [01:08<00:05,  2.72s/it]epoch 4 loss 1.36681:  93%|█████████▎| 26/28 [01:09<00:05,  2.72s/it]epoch 4 loss 1.36681:  96%|█████████▋| 27/28 [01:09<00:02,  2.02s/it]epoch 4 loss 1.37474:  96%|█████████▋| 27/28 [01:09<00:02,  2.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6456[0m
[32m  eval_f1 = 0.32[0m
[32m  eval_mcc = 0.6255[0m
[32m  eval_precision = 0.4401[0m
[32m  eval_recall = 0.2949[0m

epoch 4 loss 1.37474: 100%|██████████| 28/28 [01:12<00:00,  2.50s/it]epoch 4 loss 1.37474: 100%|██████████| 28/28 [01:12<00:00,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.70it/s] 20%|██        | 2/10 [00:00<00:02,  2.69it/s] 30%|███       | 3/10 [00:01<00:02,  2.71it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6446[0m
[32m  eval_f1 = 0.3216[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.4406[0m
[32m  eval_recall = 0.2954[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.70it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6269[0m
[32m  eval_f1 = 0.258[0m
[32m  eval_mcc = 0.607[0m
[32m  eval_precision = 0.3462[0m
[32m  eval_recall = 0.2407[0m

