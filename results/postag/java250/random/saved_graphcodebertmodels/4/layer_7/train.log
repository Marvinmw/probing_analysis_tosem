[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 233[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 179177[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/graphcodebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=7, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='graphcodebert', model_name_or_path='microsoft/graphcodebert-base', n_gpu=1, output_dir='./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7', posratio=0.5, seed=768, token_config='microsoft/graphcodebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.75201:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.75201:   4%|▎         | 1/28 [00:00<00:21,  1.24it/s]epoch 0 loss 5.75672:   4%|▎         | 1/28 [00:01<00:21,  1.24it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0046[0m
[32m  eval_f1 = 0.001[0m
[32m  eval_mcc = 0.0019[0m
[32m  eval_precision = 0.0013[0m
[32m  eval_recall = 0.0023[0m
[32m  ********************[0m
[32m  Best f1:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.75672:   7%|▋         | 2/28 [00:06<01:32,  3.54s/it]epoch 0 loss 5.74671:   7%|▋         | 2/28 [00:06<01:32,  3.54s/it]epoch 0 loss 5.74671:  11%|█         | 3/28 [00:06<00:52,  2.11s/it]epoch 0 loss 5.73375:  11%|█         | 3/28 [00:07<00:52,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0092[0m
[32m  eval_f1 = 0.0014[0m
[32m  eval_mcc = 0.0041[0m
[32m  eval_precision = 0.0013[0m
[32m  eval_recall = 0.0034[0m
[32m  ********************[0m
[32m  Best f1:0.0014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.73375:  14%|█▍        | 4/28 [00:13<01:32,  3.85s/it]epoch 0 loss 5.70985:  14%|█▍        | 4/28 [00:13<01:32,  3.85s/it]epoch 0 loss 5.70985:  18%|█▊        | 5/28 [00:13<01:00,  2.62s/it]epoch 0 loss 5.67801:  18%|█▊        | 5/28 [00:14<01:00,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0181[0m
[32m  eval_f1 = 0.0021[0m
[32m  eval_mcc = 0.0067[0m
[32m  eval_precision = 0.0041[0m
[32m  eval_recall = 0.0057[0m
[32m  ********************[0m
[32m  Best f1:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.67801:  21%|██▏       | 6/28 [00:19<01:19,  3.63s/it]epoch 0 loss 5.64173:  21%|██▏       | 6/28 [00:19<01:19,  3.63s/it]epoch 0 loss 5.64173:  25%|██▌       | 7/28 [00:19<00:54,  2.58s/it]epoch 0 loss 5.59333:  25%|██▌       | 7/28 [00:20<00:54,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0318[0m
[32m  eval_f1 = 0.0033[0m
[32m  eval_mcc = 0.011[0m
[32m  eval_precision = 0.0054[0m
[32m  eval_recall = 0.0083[0m
[32m  ********************[0m
[32m  Best f1:0.0033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.59333:  29%|██▊       | 8/28 [00:25<01:15,  3.76s/it]epoch 0 loss 5.54156:  29%|██▊       | 8/28 [00:26<01:15,  3.76s/it]epoch 0 loss 5.54156:  32%|███▏      | 9/28 [00:26<00:51,  2.72s/it]epoch 0 loss 5.48422:  32%|███▏      | 9/28 [00:26<00:51,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0424[0m
[32m  eval_f1 = 0.0052[0m
[32m  eval_mcc = 0.0162[0m
[32m  eval_precision = 0.0137[0m
[32m  eval_recall = 0.0121[0m
[32m  ********************[0m
[32m  Best f1:0.0052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.48422:  36%|███▌      | 10/28 [00:32<01:10,  3.91s/it]epoch 0 loss 5.42127:  36%|███▌      | 10/28 [00:33<01:10,  3.91s/it]epoch 0 loss 5.42127:  39%|███▉      | 11/28 [00:33<00:48,  2.84s/it]epoch 0 loss 5.35168:  39%|███▉      | 11/28 [00:33<00:48,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0581[0m
[32m  eval_f1 = 0.0089[0m
[32m  eval_mcc = 0.0302[0m
[32m  eval_precision = 0.0245[0m
[32m  eval_recall = 0.0168[0m
[32m  ********************[0m
[32m  Best f1:0.0089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.35168:  43%|████▎     | 12/28 [00:39<01:00,  3.75s/it]epoch 0 loss 5.27991:  43%|████▎     | 12/28 [00:39<01:00,  3.75s/it]epoch 0 loss 5.27991:  46%|████▋     | 13/28 [00:39<00:41,  2.74s/it]epoch 0 loss 5.20529:  46%|████▋     | 13/28 [00:40<00:41,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0836[0m
[32m  eval_f1 = 0.0164[0m
[32m  eval_mcc = 0.0526[0m
[32m  eval_precision = 0.0336[0m
[32m  eval_recall = 0.0243[0m
[32m  ********************[0m
[32m  Best f1:0.0164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0526[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20529:  50%|█████     | 14/28 [00:46<00:54,  3.90s/it]epoch 0 loss 5.12971:  50%|█████     | 14/28 [00:46<00:54,  3.90s/it]epoch 0 loss 5.12971:  54%|█████▎    | 15/28 [00:46<00:37,  2.85s/it]epoch 0 loss 5.0516:  54%|█████▎    | 15/28 [00:46<00:37,  2.85s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1327[0m
[32m  eval_f1 = 0.0271[0m
[32m  eval_mcc = 0.0939[0m
[32m  eval_precision = 0.0404[0m
[32m  eval_recall = 0.0335[0m
[32m  ********************[0m
[32m  Best f1:0.0271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.0516:  57%|█████▋    | 16/28 [00:52<00:44,  3.71s/it]epoch 0 loss 4.9733:  57%|█████▋    | 16/28 [00:52<00:44,  3.71s/it]epoch 0 loss 4.9733:  61%|██████    | 17/28 [00:52<00:29,  2.72s/it]epoch 0 loss 4.89611:  61%|██████    | 17/28 [00:53<00:29,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1957[0m
[32m  eval_f1 = 0.039[0m
[32m  eval_mcc = 0.1457[0m
[32m  eval_precision = 0.0594[0m
[32m  eval_recall = 0.0408[0m
[32m  ********************[0m
[32m  Best f1:0.039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.89611:  64%|██████▍   | 18/28 [00:59<00:38,  3.83s/it]epoch 0 loss 4.8158:  64%|██████▍   | 18/28 [00:59<00:38,  3.83s/it] epoch 0 loss 4.8158:  68%|██████▊   | 19/28 [00:59<00:25,  2.81s/it]epoch 0 loss 4.74024:  68%|██████▊   | 19/28 [00:59<00:25,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2513[0m
[32m  eval_f1 = 0.0429[0m
[32m  eval_mcc = 0.1946[0m
[32m  eval_precision = 0.0793[0m
[32m  eval_recall = 0.0418[0m
[32m  ********************[0m
[32m  Best f1:0.0429[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.74024:  71%|███████▏  | 20/28 [01:06<00:31,  3.90s/it]epoch 0 loss 4.66801:  71%|███████▏  | 20/28 [01:06<00:31,  3.90s/it]epoch 0 loss 4.66801:  75%|███████▌  | 21/28 [01:06<00:20,  2.86s/it]epoch 0 loss 4.59962:  75%|███████▌  | 21/28 [01:06<00:20,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3123[0m
[32m  eval_f1 = 0.0467[0m
[32m  eval_mcc = 0.2601[0m
[32m  eval_precision = 0.0993[0m
[32m  eval_recall = 0.0487[0m
[32m  ********************[0m
[32m  Best f1:0.0467[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.59962:  79%|███████▊  | 22/28 [01:12<00:23,  3.94s/it]epoch 0 loss 4.5259:  79%|███████▊  | 22/28 [01:13<00:23,  3.94s/it] epoch 0 loss 4.5259:  82%|████████▏ | 23/28 [01:13<00:14,  2.89s/it]epoch 0 loss 4.4591:  82%|████████▏ | 23/28 [01:13<00:14,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3415[0m
[32m  eval_f1 = 0.054[0m
[32m  eval_mcc = 0.2916[0m
[32m  eval_precision = 0.0828[0m
[32m  eval_recall = 0.0575[0m
[32m  ********************[0m
[32m  Best f1:0.054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.4591:  86%|████████▌ | 24/28 [01:21<00:17,  4.42s/it]epoch 0 loss 4.39417:  86%|████████▌ | 24/28 [01:21<00:17,  4.42s/it]epoch 0 loss 4.39417:  89%|████████▉ | 25/28 [01:21<00:09,  3.23s/it]epoch 0 loss 4.32872:  89%|████████▉ | 25/28 [01:22<00:09,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3591[0m
[32m  eval_f1 = 0.0681[0m
[32m  eval_mcc = 0.3142[0m
[32m  eval_precision = 0.1261[0m
[32m  eval_recall = 0.0691[0m
[32m  ********************[0m
[32m  Best f1:0.0681[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.32872:  93%|█████████▎| 26/28 [01:33<00:11,  5.62s/it]epoch 0 loss 4.26772:  93%|█████████▎| 26/28 [01:33<00:11,  5.62s/it]epoch 0 loss 4.26772:  96%|█████████▋| 27/28 [01:33<00:04,  4.06s/it]epoch 0 loss 4.20373:  96%|█████████▋| 27/28 [01:33<00:04,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4054[0m
[32m  eval_f1 = 0.1033[0m
[32m  eval_mcc = 0.3695[0m
[32m  eval_precision = 0.1756[0m
[32m  eval_recall = 0.0951[0m
[32m  ********************[0m
[32m  Best f1:0.1033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3695[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.20373: 100%|██████████| 28/28 [01:43<00:00,  5.89s/it]epoch 0 loss 4.20373: 100%|██████████| 28/28 [01:43<00:00,  3.70s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.51614:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.51614:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 1 loss 2.50691:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.458[0m
[32m  eval_f1 = 0.129[0m
[32m  eval_mcc = 0.427[0m
[32m  eval_precision = 0.1735[0m
[32m  eval_recall = 0.1212[0m
[32m  ********************[0m
[32m  Best f1:0.129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.50691:   7%|▋         | 2/28 [00:10<02:44,  6.31s/it]epoch 1 loss 2.48046:   7%|▋         | 2/28 [00:11<02:44,  6.31s/it]epoch 1 loss 2.48046:  11%|█         | 3/28 [00:11<01:30,  3.62s/it]epoch 1 loss 2.46639:  11%|█         | 3/28 [00:11<01:30,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5127[0m
[32m  eval_f1 = 0.1504[0m
[32m  eval_mcc = 0.4831[0m
[32m  eval_precision = 0.1908[0m
[32m  eval_recall = 0.1445[0m
[32m  ********************[0m
[32m  Best f1:0.1504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.46639:  14%|█▍        | 4/28 [00:21<02:31,  6.32s/it]epoch 1 loss 2.40923:  14%|█▍        | 4/28 [00:22<02:31,  6.32s/it]epoch 1 loss 2.40923:  18%|█▊        | 5/28 [00:22<01:36,  4.19s/it]epoch 1 loss 2.35423:  18%|█▊        | 5/28 [00:22<01:36,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5374[0m
[32m  eval_f1 = 0.1626[0m
[32m  eval_mcc = 0.5085[0m
[32m  eval_precision = 0.1956[0m
[32m  eval_recall = 0.1576[0m
[32m  ********************[0m
[32m  Best f1:0.1626[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.35423:  21%|██▏       | 6/28 [00:30<02:03,  5.63s/it]epoch 1 loss 2.32332:  21%|██▏       | 6/28 [00:30<02:03,  5.63s/it]epoch 1 loss 2.32332:  25%|██▌       | 7/28 [00:30<01:22,  3.92s/it]epoch 1 loss 2.27357:  25%|██▌       | 7/28 [00:31<01:22,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5512[0m
[32m  eval_f1 = 0.169[0m
[32m  eval_mcc = 0.5268[0m
[32m  eval_precision = 0.1988[0m
[32m  eval_recall = 0.1634[0m
[32m  ********************[0m
[32m  Best f1:0.169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27357:  29%|██▊       | 8/28 [00:41<01:58,  5.90s/it]epoch 1 loss 2.22988:  29%|██▊       | 8/28 [00:41<01:58,  5.90s/it]epoch 1 loss 2.22988:  32%|███▏      | 9/28 [00:41<01:19,  4.19s/it]epoch 1 loss 2.2078:  32%|███▏      | 9/28 [00:41<01:19,  4.19s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5617[0m
[32m  eval_f1 = 0.1731[0m
[32m  eval_mcc = 0.5401[0m
[32m  eval_precision = 0.2215[0m
[32m  eval_recall = 0.1646[0m
[32m  ********************[0m
[32m  Best f1:0.1731[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.2078:  36%|███▌      | 10/28 [00:49<01:37,  5.41s/it]epoch 1 loss 2.18502:  36%|███▌      | 10/28 [00:50<01:37,  5.41s/it]epoch 1 loss 2.18502:  39%|███▉      | 11/28 [00:50<01:06,  3.88s/it]epoch 1 loss 2.16841:  39%|███▉      | 11/28 [00:50<01:06,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5679[0m
[32m  eval_f1 = 0.1747[0m
[32m  eval_mcc = 0.545[0m
[32m  eval_precision = 0.2363[0m
[32m  eval_recall = 0.1654[0m
[32m  ********************[0m
[32m  Best f1:0.1747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16841:  43%|████▎     | 12/28 [01:00<01:31,  5.75s/it]epoch 1 loss 2.13986:  43%|████▎     | 12/28 [01:00<01:31,  5.75s/it]epoch 1 loss 2.13986:  46%|████▋     | 13/28 [01:00<01:02,  4.14s/it]epoch 1 loss 2.12232:  46%|████▋     | 13/28 [01:00<01:02,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5724[0m
[32m  eval_f1 = 0.1834[0m
[32m  eval_mcc = 0.5483[0m
[32m  eval_precision = 0.261[0m
[32m  eval_recall = 0.1722[0m
[32m  ********************[0m
[32m  Best f1:0.1834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12232:  50%|█████     | 14/28 [01:08<01:15,  5.40s/it]epoch 1 loss 2.11334:  50%|█████     | 14/28 [01:09<01:15,  5.40s/it]epoch 1 loss 2.11334:  54%|█████▎    | 15/28 [01:09<00:50,  3.90s/it]epoch 1 loss 2.09566:  54%|█████▎    | 15/28 [01:09<00:50,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.575[0m
[32m  eval_f1 = 0.1919[0m
[32m  eval_mcc = 0.5497[0m
[32m  eval_precision = 0.2762[0m
[32m  eval_recall = 0.1791[0m
[32m  ********************[0m
[32m  Best f1:0.1919[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09566:  57%|█████▋    | 16/28 [01:19<01:09,  5.77s/it]epoch 1 loss 2.07427:  57%|█████▋    | 16/28 [01:19<01:09,  5.77s/it]epoch 1 loss 2.07427:  61%|██████    | 17/28 [01:19<00:45,  4.16s/it]epoch 1 loss 2.05792:  61%|██████    | 17/28 [01:20<00:45,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5818[0m
[32m  eval_f1 = 0.2111[0m
[32m  eval_mcc = 0.5565[0m
[32m  eval_precision = 0.3119[0m
[32m  eval_recall = 0.1955[0m
[32m  ********************[0m
[32m  Best f1:0.2111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05792:  64%|██████▍   | 18/28 [01:27<00:53,  5.32s/it]epoch 1 loss 2.03466:  64%|██████▍   | 18/28 [01:28<00:53,  5.32s/it]epoch 1 loss 2.03466:  68%|██████▊   | 19/28 [01:28<00:34,  3.85s/it]epoch 1 loss 2.01999:  68%|██████▊   | 19/28 [01:28<00:34,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5871[0m
[32m  eval_f1 = 0.2154[0m
[32m  eval_mcc = 0.5624[0m
[32m  eval_precision = 0.3091[0m
[32m  eval_recall = 0.1996[0m
[32m  ********************[0m
[32m  Best f1:0.2154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01999:  71%|███████▏  | 20/28 [01:38<00:45,  5.72s/it]epoch 1 loss 2.00366:  71%|███████▏  | 20/28 [01:38<00:45,  5.72s/it]epoch 1 loss 2.00366:  75%|███████▌  | 21/28 [01:38<00:28,  4.13s/it]epoch 1 loss 1.99615:  75%|███████▌  | 21/28 [01:39<00:28,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5919[0m
[32m  eval_f1 = 0.2278[0m
[32m  eval_mcc = 0.5681[0m
[32m  eval_precision = 0.3233[0m
[32m  eval_recall = 0.2106[0m
[32m  ********************[0m
[32m  Best f1:0.2278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5681[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99615:  79%|███████▊  | 22/28 [01:46<00:31,  5.32s/it]epoch 1 loss 1.97879:  79%|███████▊  | 22/28 [01:47<00:31,  5.32s/it]epoch 1 loss 1.97879:  82%|████████▏ | 23/28 [01:47<00:19,  3.85s/it]epoch 1 loss 1.96408:  82%|████████▏ | 23/28 [01:47<00:19,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.597[0m
[32m  eval_f1 = 0.2326[0m
[32m  eval_mcc = 0.574[0m
[32m  eval_precision = 0.3294[0m
[32m  eval_recall = 0.2167[0m
[32m  ********************[0m
[32m  Best f1:0.2326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96408:  86%|████████▌ | 24/28 [01:57<00:23,  5.81s/it]epoch 1 loss 1.9534:  86%|████████▌ | 24/28 [01:58<00:23,  5.81s/it] epoch 1 loss 1.9534:  89%|████████▉ | 25/28 [01:58<00:12,  4.20s/it]epoch 1 loss 1.93397:  89%|████████▉ | 25/28 [01:58<00:12,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6034[0m
[32m  eval_f1 = 0.2407[0m
[32m  eval_mcc = 0.5819[0m
[32m  eval_precision = 0.3353[0m
[32m  eval_recall = 0.2229[0m
[32m  ********************[0m
[32m  Best f1:0.2407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93397:  93%|█████████▎| 26/28 [02:04<00:09,  4.91s/it]epoch 1 loss 1.926:  93%|█████████▎| 26/28 [02:05<00:09,  4.91s/it]  epoch 1 loss 1.926:  96%|█████████▋| 27/28 [02:05<00:03,  3.56s/it]epoch 1 loss 1.90975:  96%|█████████▋| 27/28 [02:05<00:03,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6076[0m
[32m  eval_f1 = 0.246[0m
[32m  eval_mcc = 0.5879[0m
[32m  eval_precision = 0.326[0m
[32m  eval_recall = 0.2271[0m
[32m  ********************[0m
[32m  Best f1:0.246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90975: 100%|██████████| 28/28 [02:13<00:00,  5.03s/it]epoch 1 loss 1.90975: 100%|██████████| 28/28 [02:13<00:00,  4.77s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.51788:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.51788:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 2 loss 1.56854:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6093[0m
[32m  eval_f1 = 0.2529[0m
[32m  eval_mcc = 0.5904[0m
[32m  eval_precision = 0.3389[0m
[32m  eval_recall = 0.2335[0m
[32m  ********************[0m
[32m  Best f1:0.2529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5904[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56854:   7%|▋         | 2/28 [00:06<01:34,  3.63s/it]epoch 2 loss 1.59376:   7%|▋         | 2/28 [00:06<01:34,  3.63s/it]epoch 2 loss 1.59376:  11%|█         | 3/28 [00:06<00:54,  2.17s/it]epoch 2 loss 1.56484:  11%|█         | 3/28 [00:07<00:54,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6121[0m
[32m  eval_f1 = 0.2613[0m
[32m  eval_mcc = 0.5928[0m
[32m  eval_precision = 0.3565[0m
[32m  eval_recall = 0.2401[0m
[32m  ********************[0m
[32m  Best f1:0.2613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56484:  14%|█▍        | 4/28 [00:15<01:55,  4.79s/it]epoch 2 loss 1.5641:  14%|█▍        | 4/28 [00:15<01:55,  4.79s/it] epoch 2 loss 1.5641:  18%|█▊        | 5/28 [00:15<01:14,  3.22s/it]epoch 2 loss 1.56597:  18%|█▊        | 5/28 [00:16<01:14,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6176[0m
[32m  eval_f1 = 0.2645[0m
[32m  eval_mcc = 0.598[0m
[32m  eval_precision = 0.3545[0m
[32m  eval_recall = 0.2442[0m
[32m  ********************[0m
[32m  Best f1:0.2645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56597:  21%|██▏       | 6/28 [00:23<01:41,  4.60s/it]epoch 2 loss 1.55308:  21%|██▏       | 6/28 [00:23<01:41,  4.60s/it]epoch 2 loss 1.55308:  25%|██▌       | 7/28 [00:23<01:07,  3.23s/it]epoch 2 loss 1.54133:  25%|██▌       | 7/28 [00:24<01:07,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6205[0m
[32m  eval_f1 = 0.2697[0m
[32m  eval_mcc = 0.5996[0m
[32m  eval_precision = 0.3647[0m
[32m  eval_recall = 0.2497[0m
[32m  ********************[0m
[32m  Best f1:0.2697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54133:  29%|██▊       | 8/28 [00:30<01:25,  4.27s/it]epoch 2 loss 1.54122:  29%|██▊       | 8/28 [00:30<01:25,  4.27s/it]epoch 2 loss 1.54122:  32%|███▏      | 9/28 [00:30<00:58,  3.07s/it]epoch 2 loss 1.53847:  32%|███▏      | 9/28 [00:30<00:58,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6245[0m
[32m  eval_f1 = 0.2721[0m
[32m  eval_mcc = 0.6028[0m
[32m  eval_precision = 0.3646[0m
[32m  eval_recall = 0.2532[0m
[32m  ********************[0m
[32m  Best f1:0.2721[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53847:  36%|███▌      | 10/28 [00:41<01:37,  5.40s/it]epoch 2 loss 1.53427:  36%|███▌      | 10/28 [00:41<01:37,  5.40s/it]epoch 2 loss 1.53427:  39%|███▉      | 11/28 [00:41<01:05,  3.87s/it]epoch 2 loss 1.53229:  39%|███▉      | 11/28 [00:42<01:05,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6304[0m
[32m  eval_f1 = 0.2732[0m
[32m  eval_mcc = 0.6088[0m
[32m  eval_precision = 0.355[0m
[32m  eval_recall = 0.2554[0m
[32m  ********************[0m
[32m  Best f1:0.2732[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53229:  43%|████▎     | 12/28 [00:52<01:38,  6.15s/it]epoch 2 loss 1.53019:  43%|████▎     | 12/28 [00:53<01:38,  6.15s/it]epoch 2 loss 1.53019:  46%|████▋     | 13/28 [00:53<01:06,  4.42s/it]epoch 2 loss 1.52659:  46%|████▋     | 13/28 [00:53<01:06,  4.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6326[0m
[32m  eval_f1 = 0.2761[0m
[32m  eval_mcc = 0.6111[0m
[32m  eval_precision = 0.373[0m
[32m  eval_recall = 0.2583[0m
[32m  ********************[0m
[32m  Best f1:0.2761[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52659:  50%|█████     | 14/28 [01:03<01:26,  6.16s/it]epoch 2 loss 1.52202:  50%|█████     | 14/28 [01:04<01:26,  6.16s/it]epoch 2 loss 1.52202:  54%|█████▎    | 15/28 [01:04<00:57,  4.43s/it]epoch 2 loss 1.50927:  54%|█████▎    | 15/28 [01:04<00:57,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6325[0m
[32m  eval_f1 = 0.279[0m
[32m  eval_mcc = 0.6112[0m
[32m  eval_precision = 0.3916[0m
[32m  eval_recall = 0.2611[0m
[32m  ********************[0m
[32m  Best f1:0.279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50927:  57%|█████▋    | 16/28 [01:12<01:06,  5.51s/it]epoch 2 loss 1.50373:  57%|█████▋    | 16/28 [01:12<01:06,  5.51s/it]epoch 2 loss 1.50373:  61%|██████    | 17/28 [01:12<00:43,  3.98s/it]epoch 2 loss 1.5023:  61%|██████    | 17/28 [01:12<00:43,  3.98s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.633[0m
[32m  eval_f1 = 0.281[0m
[32m  eval_mcc = 0.6121[0m
[32m  eval_precision = 0.4015[0m
[32m  eval_recall = 0.2622[0m
[32m  ********************[0m
[32m  Best f1:0.281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5023:  64%|██████▍   | 18/28 [01:22<00:58,  5.81s/it]epoch 2 loss 1.50315:  64%|██████▍   | 18/28 [01:22<00:58,  5.81s/it]epoch 2 loss 1.50315:  68%|██████▊   | 19/28 [01:22<00:37,  4.19s/it]epoch 2 loss 1.50004:  68%|██████▊   | 19/28 [01:23<00:37,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6338[0m
[32m  eval_f1 = 0.2821[0m
[32m  eval_mcc = 0.6142[0m
[32m  eval_precision = 0.3873[0m
[32m  eval_recall = 0.2628[0m
[32m  ********************[0m
[32m  Best f1:0.2821[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50004:  71%|███████▏  | 20/28 [01:31<00:42,  5.36s/it]epoch 2 loss 1.4857:  71%|███████▏  | 20/28 [01:31<00:42,  5.36s/it] epoch 2 loss 1.4857:  75%|███████▌  | 21/28 [01:31<00:27,  3.88s/it]epoch 2 loss 1.48038:  75%|███████▌  | 21/28 [01:31<00:27,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6338[0m
[32m  eval_f1 = 0.2838[0m
[32m  eval_mcc = 0.6161[0m
[32m  eval_precision = 0.3782[0m
[32m  eval_recall = 0.2636[0m
[32m  ********************[0m
[32m  Best f1:0.2838[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48038:  79%|███████▊  | 22/28 [01:41<00:34,  5.73s/it]epoch 2 loss 1.47458:  79%|███████▊  | 22/28 [01:41<00:34,  5.73s/it]epoch 2 loss 1.47458:  82%|████████▏ | 23/28 [01:41<00:20,  4.14s/it]epoch 2 loss 1.47913:  82%|████████▏ | 23/28 [01:42<00:20,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.635[0m
[32m  eval_f1 = 0.2869[0m
[32m  eval_mcc = 0.6168[0m
[32m  eval_precision = 0.3786[0m
[32m  eval_recall = 0.2663[0m
[32m  ********************[0m
[32m  Best f1:0.2869[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47913:  86%|████████▌ | 24/28 [01:50<00:21,  5.41s/it]epoch 2 loss 1.47132:  86%|████████▌ | 24/28 [01:50<00:21,  5.41s/it]epoch 2 loss 1.47132:  89%|████████▉ | 25/28 [01:50<00:11,  3.91s/it]epoch 2 loss 1.46752:  89%|████████▉ | 25/28 [01:51<00:11,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6376[0m
[32m  eval_f1 = 0.291[0m
[32m  eval_mcc = 0.6179[0m
[32m  eval_precision = 0.391[0m
[32m  eval_recall = 0.2703[0m
[32m  ********************[0m
[32m  Best f1:0.291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46752:  93%|█████████▎| 26/28 [02:00<00:11,  5.61s/it]epoch 2 loss 1.47181:  93%|█████████▎| 26/28 [02:00<00:11,  5.61s/it]epoch 2 loss 1.47181:  96%|█████████▋| 27/28 [02:00<00:04,  4.06s/it]epoch 2 loss 1.46716:  96%|█████████▋| 27/28 [02:00<00:04,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6393[0m
[32m  eval_f1 = 0.2946[0m
[32m  eval_mcc = 0.6182[0m
[32m  eval_precision = 0.3942[0m
[32m  eval_recall = 0.2739[0m
[32m  ********************[0m
[32m  Best f1:0.2946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46716: 100%|██████████| 28/28 [02:07<00:00,  4.86s/it]epoch 2 loss 1.46716: 100%|██████████| 28/28 [02:07<00:00,  4.55s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.23247:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.23247:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 3 loss 1.27581:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6393[0m
[32m  eval_f1 = 0.295[0m
[32m  eval_mcc = 0.618[0m
[32m  eval_precision = 0.3904[0m
[32m  eval_recall = 0.275[0m
[32m  ********************[0m
[32m  Best f1:0.295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.27581:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 3 loss 1.28073:   7%|▋         | 2/28 [00:05<01:21,  3.14s/it]epoch 3 loss 1.28073:  11%|█         | 3/28 [00:05<00:47,  1.89s/it]epoch 3 loss 1.29921:  11%|█         | 3/28 [00:06<00:47,  1.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.64[0m
[32m  eval_f1 = 0.2994[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.3944[0m
[32m  eval_recall = 0.279[0m
[32m  ********************[0m
[32m  Best f1:0.2994[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29921:  14%|█▍        | 4/28 [00:12<01:29,  3.71s/it]epoch 3 loss 1.32688:  14%|█▍        | 4/28 [00:12<01:29,  3.71s/it]epoch 3 loss 1.32688:  18%|█▊        | 5/28 [00:12<00:58,  2.52s/it]epoch 3 loss 1.33294:  18%|█▊        | 5/28 [00:13<00:58,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6423[0m
[32m  eval_f1 = 0.3018[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.404[0m
[32m  eval_recall = 0.2819[0m
[32m  ********************[0m
[32m  Best f1:0.3018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33294:  21%|██▏       | 6/28 [00:19<01:24,  3.85s/it]epoch 3 loss 1.32229:  21%|██▏       | 6/28 [00:19<01:24,  3.85s/it]epoch 3 loss 1.32229:  25%|██▌       | 7/28 [00:19<00:57,  2.73s/it]epoch 3 loss 1.31085:  25%|██▌       | 7/28 [00:20<00:57,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6441[0m
[32m  eval_f1 = 0.3022[0m
[32m  eval_mcc = 0.6233[0m
[32m  eval_precision = 0.4142[0m
[32m  eval_recall = 0.2815[0m
[32m  ********************[0m
[32m  Best f1:0.3022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31085:  29%|██▊       | 8/28 [00:26<01:18,  3.92s/it]epoch 3 loss 1.33053:  29%|██▊       | 8/28 [00:26<01:18,  3.92s/it]epoch 3 loss 1.33053:  32%|███▏      | 9/28 [00:26<00:53,  2.82s/it]epoch 3 loss 1.34067:  32%|███▏      | 9/28 [00:26<00:53,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6447[0m
[32m  eval_f1 = 0.3065[0m
[32m  eval_mcc = 0.6245[0m
[32m  eval_precision = 0.4182[0m
[32m  eval_recall = 0.2848[0m
[32m  ********************[0m
[32m  Best f1:0.3065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34067:  36%|███▌      | 10/28 [00:32<01:06,  3.71s/it]epoch 3 loss 1.35653:  36%|███▌      | 10/28 [00:32<01:06,  3.71s/it]epoch 3 loss 1.35653:  39%|███▉      | 11/28 [00:32<00:45,  2.70s/it]epoch 3 loss 1.37341:  39%|███▉      | 11/28 [00:33<00:45,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6471[0m
[32m  eval_f1 = 0.3102[0m
[32m  eval_mcc = 0.6277[0m
[32m  eval_precision = 0.4268[0m
[32m  eval_recall = 0.2877[0m
[32m  ********************[0m
[32m  Best f1:0.3102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37341:  43%|████▎     | 12/28 [00:39<01:01,  3.85s/it]epoch 3 loss 1.37299:  43%|████▎     | 12/28 [00:39<01:01,  3.85s/it]epoch 3 loss 1.37299:  46%|████▋     | 13/28 [00:39<00:42,  2.81s/it]epoch 3 loss 1.36809:  46%|████▋     | 13/28 [00:39<00:42,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.648[0m
[32m  eval_f1 = 0.3138[0m
[32m  eval_mcc = 0.6289[0m
[32m  eval_precision = 0.4361[0m
[32m  eval_recall = 0.2905[0m
[32m  ********************[0m
[32m  Best f1:0.3138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36809:  50%|█████     | 14/28 [00:47<01:00,  4.31s/it]epoch 3 loss 1.36706:  50%|█████     | 14/28 [00:47<01:00,  4.31s/it]epoch 3 loss 1.36706:  54%|█████▎    | 15/28 [00:47<00:40,  3.14s/it]epoch 3 loss 1.36228:  54%|█████▎    | 15/28 [00:48<00:40,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.648[0m
[32m  eval_f1 = 0.3225[0m
[32m  eval_mcc = 0.6291[0m
[32m  eval_precision = 0.4488[0m
[32m  eval_recall = 0.2969[0m
[32m  ********************[0m
[32m  Best f1:0.3225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36228:  57%|█████▋    | 16/28 [00:54<00:49,  4.13s/it]epoch 3 loss 1.36264:  57%|█████▋    | 16/28 [00:54<00:49,  4.13s/it]epoch 3 loss 1.36264:  61%|██████    | 17/28 [00:54<00:33,  3.01s/it]epoch 3 loss 1.36666:  61%|██████    | 17/28 [00:54<00:33,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.648[0m
[32m  eval_f1 = 0.324[0m
[32m  eval_mcc = 0.629[0m
[32m  eval_precision = 0.4477[0m
[32m  eval_recall = 0.2981[0m
[32m  ********************[0m
[32m  Best f1:0.324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.36666:  64%|██████▍   | 18/28 [01:02<00:44,  4.44s/it]epoch 3 loss 1.36853:  64%|██████▍   | 18/28 [01:02<00:44,  4.44s/it]epoch 3 loss 1.36853:  68%|██████▊   | 19/28 [01:02<00:29,  3.23s/it]epoch 3 loss 1.36651:  68%|██████▊   | 19/28 [01:03<00:29,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6487[0m
[32m  eval_f1 = 0.3247[0m
[32m  eval_mcc = 0.6296[0m
[32m  eval_precision = 0.4481[0m
[32m  eval_recall = 0.2984[0m
[32m  ********************[0m
[32m  Best f1:0.3247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36651:  71%|███████▏  | 20/28 [01:09<00:33,  4.18s/it]epoch 3 loss 1.3628:  71%|███████▏  | 20/28 [01:09<00:33,  4.18s/it] epoch 3 loss 1.3628:  75%|███████▌  | 21/28 [01:09<00:21,  3.05s/it]epoch 3 loss 1.35812:  75%|███████▌  | 21/28 [01:09<00:21,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6494[0m
[32m  eval_f1 = 0.3268[0m
[32m  eval_mcc = 0.6303[0m
[32m  eval_precision = 0.4518[0m
[32m  eval_recall = 0.3014[0m
[32m  ********************[0m
[32m  Best f1:0.3268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35812:  79%|███████▊  | 22/28 [01:16<00:24,  4.10s/it]epoch 3 loss 1.35436:  79%|███████▊  | 22/28 [01:16<00:24,  4.10s/it]epoch 3 loss 1.35436:  82%|████████▏ | 23/28 [01:16<00:14,  3.00s/it]epoch 3 loss 1.35404:  82%|████████▏ | 23/28 [01:16<00:14,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6492[0m
[32m  eval_f1 = 0.3267[0m
[32m  eval_mcc = 0.6298[0m
[32m  eval_precision = 0.4516[0m
[32m  eval_recall = 0.3015[0m

epoch 3 loss 1.35404:  86%|████████▌ | 24/28 [01:20<00:12,  3.24s/it]epoch 3 loss 1.35488:  86%|████████▌ | 24/28 [01:20<00:12,  3.24s/it]epoch 3 loss 1.35488:  89%|████████▉ | 25/28 [01:20<00:07,  2.38s/it]epoch 3 loss 1.35415:  89%|████████▉ | 25/28 [01:21<00:07,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6492[0m
[32m  eval_f1 = 0.3249[0m
[32m  eval_mcc = 0.6296[0m
[32m  eval_precision = 0.4447[0m
[32m  eval_recall = 0.3006[0m

epoch 3 loss 1.35415:  93%|█████████▎| 26/28 [01:24<00:05,  2.81s/it]epoch 3 loss 1.35769:  93%|█████████▎| 26/28 [01:24<00:05,  2.81s/it]epoch 3 loss 1.35769:  96%|█████████▋| 27/28 [01:24<00:02,  2.08s/it]epoch 3 loss 1.3543:  96%|█████████▋| 27/28 [01:25<00:02,  2.08s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6506[0m
[32m  eval_f1 = 0.326[0m
[32m  eval_mcc = 0.6308[0m
[32m  eval_precision = 0.4426[0m
[32m  eval_recall = 0.3001[0m
[32m  ********************[0m
[32m  Best MCC:0.6308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3543: 100%|██████████| 28/28 [01:32<00:00,  3.77s/it]epoch 3 loss 1.3543: 100%|██████████| 28/28 [01:32<00:00,  3.31s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.3586:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.3586:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.39175:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6516[0m
[32m  eval_f1 = 0.3278[0m
[32m  eval_mcc = 0.6318[0m
[32m  eval_precision = 0.442[0m
[32m  eval_recall = 0.3016[0m
[32m  ********************[0m
[32m  Best f1:0.3278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39175:   7%|▋         | 2/28 [00:09<02:27,  5.68s/it]epoch 4 loss 1.36917:   7%|▋         | 2/28 [00:10<02:27,  5.68s/it]epoch 4 loss 1.36917:  11%|█         | 3/28 [00:10<01:21,  3.27s/it]epoch 4 loss 1.3532:  11%|█         | 3/28 [00:10<01:21,  3.27s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6524[0m
[32m  eval_f1 = 0.3305[0m
[32m  eval_mcc = 0.6327[0m
[32m  eval_precision = 0.4418[0m
[32m  eval_recall = 0.3038[0m
[32m  ********************[0m
[32m  Best f1:0.3305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3532:  14%|█▍        | 4/28 [00:22<02:40,  6.71s/it]epoch 4 loss 1.359:  14%|█▍        | 4/28 [00:22<02:40,  6.71s/it] epoch 4 loss 1.359:  18%|█▊        | 5/28 [00:22<01:42,  4.44s/it]epoch 4 loss 1.3544:  18%|█▊        | 5/28 [00:22<01:42,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6533[0m
[32m  eval_f1 = 0.3326[0m
[32m  eval_mcc = 0.6339[0m
[32m  eval_precision = 0.4419[0m
[32m  eval_recall = 0.3057[0m
[32m  ********************[0m
[32m  Best f1:0.3326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3544:  21%|██▏       | 6/28 [00:31<02:12,  6.02s/it]epoch 4 loss 1.34392:  21%|██▏       | 6/28 [00:32<02:12,  6.02s/it]epoch 4 loss 1.34392:  25%|██▌       | 7/28 [00:32<01:28,  4.19s/it]epoch 4 loss 1.33838:  25%|██▌       | 7/28 [00:32<01:28,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6536[0m
[32m  eval_f1 = 0.3327[0m
[32m  eval_mcc = 0.6343[0m
[32m  eval_precision = 0.4412[0m
[32m  eval_recall = 0.3059[0m
[32m  ********************[0m
[32m  Best f1:0.3327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33838:  29%|██▊       | 8/28 [00:42<02:03,  6.18s/it]epoch 4 loss 1.335:  29%|██▊       | 8/28 [00:42<02:03,  6.18s/it]  epoch 4 loss 1.335:  32%|███▏      | 9/28 [00:42<01:23,  4.38s/it]epoch 4 loss 1.34205:  32%|███▏      | 9/28 [00:43<01:23,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6534[0m
[32m  eval_f1 = 0.3325[0m
[32m  eval_mcc = 0.6341[0m
[32m  eval_precision = 0.4401[0m
[32m  eval_recall = 0.3057[0m

epoch 4 loss 1.34205:  36%|███▌      | 10/28 [00:46<01:15,  4.20s/it]epoch 4 loss 1.33941:  36%|███▌      | 10/28 [00:47<01:15,  4.20s/it]epoch 4 loss 1.33941:  39%|███▉      | 11/28 [00:47<00:51,  3.03s/it]epoch 4 loss 1.34181:  39%|███▉      | 11/28 [00:47<00:51,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6533[0m
[32m  eval_f1 = 0.3322[0m
[32m  eval_mcc = 0.634[0m
[32m  eval_precision = 0.4401[0m
[32m  eval_recall = 0.3055[0m

epoch 4 loss 1.34181:  43%|████▎     | 12/28 [00:50<00:52,  3.26s/it]epoch 4 loss 1.34364:  43%|████▎     | 12/28 [00:51<00:52,  3.26s/it]epoch 4 loss 1.34364:  46%|████▋     | 13/28 [00:51<00:35,  2.40s/it]epoch 4 loss 1.32893:  46%|████▋     | 13/28 [00:51<00:35,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6537[0m
[32m  eval_f1 = 0.3318[0m
[32m  eval_mcc = 0.6342[0m
[32m  eval_precision = 0.4394[0m
[32m  eval_recall = 0.3053[0m

epoch 4 loss 1.32893:  50%|█████     | 14/28 [00:55<00:39,  2.82s/it]epoch 4 loss 1.32313:  50%|█████     | 14/28 [00:55<00:39,  2.82s/it]epoch 4 loss 1.32313:  54%|█████▎    | 15/28 [00:55<00:27,  2.09s/it]epoch 4 loss 1.31839:  54%|█████▎    | 15/28 [00:55<00:27,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6536[0m
[32m  eval_f1 = 0.3312[0m
[32m  eval_mcc = 0.6341[0m
[32m  eval_precision = 0.4401[0m
[32m  eval_recall = 0.3049[0m

epoch 4 loss 1.31839:  57%|█████▋    | 16/28 [00:59<00:31,  2.60s/it]epoch 4 loss 1.31779:  57%|█████▋    | 16/28 [00:59<00:31,  2.60s/it]epoch 4 loss 1.31779:  61%|██████    | 17/28 [00:59<00:21,  1.94s/it]epoch 4 loss 1.3165:  61%|██████    | 17/28 [01:00<00:21,  1.94s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6534[0m
[32m  eval_f1 = 0.3312[0m
[32m  eval_mcc = 0.6339[0m
[32m  eval_precision = 0.4407[0m
[32m  eval_recall = 0.3048[0m

epoch 4 loss 1.3165:  64%|██████▍   | 18/28 [01:03<00:24,  2.50s/it]epoch 4 loss 1.31939:  64%|██████▍   | 18/28 [01:03<00:24,  2.50s/it]epoch 4 loss 1.31939:  68%|██████▊   | 19/28 [01:03<00:16,  1.87s/it]epoch 4 loss 1.31879:  68%|██████▊   | 19/28 [01:04<00:16,  1.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6532[0m
[32m  eval_f1 = 0.3308[0m
[32m  eval_mcc = 0.6336[0m
[32m  eval_precision = 0.4395[0m
[32m  eval_recall = 0.3045[0m

epoch 4 loss 1.31879:  71%|███████▏  | 20/28 [01:07<00:19,  2.44s/it]epoch 4 loss 1.31535:  71%|███████▏  | 20/28 [01:08<00:19,  2.44s/it]epoch 4 loss 1.31535:  75%|███████▌  | 21/28 [01:08<00:12,  1.83s/it]epoch 4 loss 1.31655:  75%|███████▌  | 21/28 [01:08<00:12,  1.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6535[0m
[32m  eval_f1 = 0.3322[0m
[32m  eval_mcc = 0.634[0m
[32m  eval_precision = 0.4485[0m
[32m  eval_recall = 0.3053[0m

epoch 4 loss 1.31655:  79%|███████▊  | 22/28 [01:11<00:14,  2.42s/it]epoch 4 loss 1.31526:  79%|███████▊  | 22/28 [01:12<00:14,  2.42s/it]epoch 4 loss 1.31526:  82%|████████▏ | 23/28 [01:12<00:09,  1.82s/it]epoch 4 loss 1.31201:  82%|████████▏ | 23/28 [01:12<00:09,  1.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6535[0m
[32m  eval_f1 = 0.3322[0m
[32m  eval_mcc = 0.634[0m
[32m  eval_precision = 0.4487[0m
[32m  eval_recall = 0.3053[0m

epoch 4 loss 1.31201:  86%|████████▌ | 24/28 [01:16<00:09,  2.41s/it]epoch 4 loss 1.31665:  86%|████████▌ | 24/28 [01:16<00:09,  2.41s/it]epoch 4 loss 1.31665:  89%|████████▉ | 25/28 [01:16<00:05,  1.81s/it]epoch 4 loss 1.31632:  89%|████████▉ | 25/28 [01:16<00:05,  1.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6538[0m
[32m  eval_f1 = 0.3341[0m
[32m  eval_mcc = 0.6343[0m
[32m  eval_precision = 0.4576[0m
[32m  eval_recall = 0.3063[0m
[32m  ********************[0m
[32m  Best f1:0.3341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java_graph/random/saved_graphcodebertmodels/4/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31632:  93%|█████████▎| 26/28 [01:23<00:06,  3.32s/it]epoch 4 loss 1.31425:  93%|█████████▎| 26/28 [01:23<00:06,  3.32s/it]epoch 4 loss 1.31425:  96%|█████████▋| 27/28 [01:23<00:02,  2.45s/it]epoch 4 loss 1.32184:  96%|█████████▋| 27/28 [01:23<00:02,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6538[0m
[32m  eval_f1 = 0.334[0m
[32m  eval_mcc = 0.6343[0m
[32m  eval_precision = 0.4576[0m
[32m  eval_recall = 0.3063[0m

epoch 4 loss 1.32184: 100%|██████████| 28/28 [01:27<00:00,  2.80s/it]epoch 4 loss 1.32184: 100%|██████████| 28/28 [01:27<00:00,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.72it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6538[0m
[32m  eval_f1 = 0.3341[0m
[32m  eval_mcc = 0.6343[0m
[32m  eval_precision = 0.4576[0m
[32m  eval_recall = 0.3063[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6354[0m
[32m  eval_f1 = 0.2664[0m
[32m  eval_mcc = 0.6161[0m
[32m  eval_precision = 0.346[0m
[32m  eval_recall = 0.2503[0m

