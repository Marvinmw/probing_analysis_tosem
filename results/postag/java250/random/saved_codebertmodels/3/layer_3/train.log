[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=3, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/3/layer_3', posratio=0.5, seed=969, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.11165:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.11165:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.11556:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0095[0m
[32m  eval_f1 = 0.0014[0m
[32m  eval_mcc = 0.0015[0m
[32m  eval_precision = 0.0058[0m
[32m  eval_recall = 0.0042[0m
[32m  ********************[0m
[32m  Best f1:0.0014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.11556:   7%|▋         | 2/28 [00:05<01:24,  3.26s/it]epoch 0 loss 5.10378:   7%|▋         | 2/28 [00:06<01:24,  3.26s/it]epoch 0 loss 5.10378:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.08897:  11%|█         | 3/28 [00:06<00:48,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0142[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = 0.0018[0m
[32m  eval_precision = 0.0044[0m
[32m  eval_recall = 0.0044[0m
[32m  ********************[0m
[32m  Best f1:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.08897:  14%|█▍        | 4/28 [00:15<01:55,  4.82s/it]epoch 0 loss 5.06463:  14%|█▍        | 4/28 [00:15<01:55,  4.82s/it]epoch 0 loss 5.06463:  18%|█▊        | 5/28 [00:15<01:14,  3.23s/it]epoch 0 loss 5.0401:  18%|█▊        | 5/28 [00:16<01:14,  3.23s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0319[0m
[32m  eval_f1 = 0.0042[0m
[32m  eval_mcc = 0.0069[0m
[32m  eval_precision = 0.0085[0m
[32m  eval_recall = 0.0067[0m
[32m  ********************[0m
[32m  Best f1:0.0042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.0401:  21%|██▏       | 6/28 [00:24<01:51,  5.09s/it]epoch 0 loss 5.00774:  21%|██▏       | 6/28 [00:24<01:51,  5.09s/it]epoch 0 loss 5.00774:  25%|██▌       | 7/28 [00:24<01:14,  3.56s/it]epoch 0 loss 4.97163:  25%|██▌       | 7/28 [00:25<01:14,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0712[0m
[32m  eval_f1 = 0.0104[0m
[32m  eval_mcc = 0.0262[0m
[32m  eval_precision = 0.015[0m
[32m  eval_recall = 0.0142[0m
[32m  ********************[0m
[32m  Best f1:0.0104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.97163:  29%|██▊       | 8/28 [00:31<01:29,  4.48s/it]epoch 0 loss 4.92933:  29%|██▊       | 8/28 [00:31<01:29,  4.48s/it]epoch 0 loss 4.92933:  32%|███▏      | 9/28 [00:31<01:01,  3.21s/it]epoch 0 loss 4.88225:  32%|███▏      | 9/28 [00:32<01:01,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.61it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1016[0m
[32m  eval_f1 = 0.0145[0m
[32m  eval_mcc = 0.0443[0m
[32m  eval_precision = 0.0183[0m
[32m  eval_recall = 0.0189[0m
[32m  ********************[0m
[32m  Best f1:0.0145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.88225:  36%|███▌      | 10/28 [00:38<01:15,  4.20s/it]epoch 0 loss 4.82937:  36%|███▌      | 10/28 [00:38<01:15,  4.20s/it]epoch 0 loss 4.82937:  39%|███▉      | 11/28 [00:38<00:51,  3.04s/it]epoch 0 loss 4.77695:  39%|███▉      | 11/28 [00:39<00:51,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.135[0m
[32m  eval_f1 = 0.0204[0m
[32m  eval_mcc = 0.0766[0m
[32m  eval_precision = 0.0265[0m
[32m  eval_recall = 0.0245[0m
[32m  ********************[0m
[32m  Best f1:0.0204[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0766[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.77695:  43%|████▎     | 12/28 [00:45<01:05,  4.10s/it]epoch 0 loss 4.71541:  43%|████▎     | 12/28 [00:45<01:05,  4.10s/it]epoch 0 loss 4.71541:  46%|████▋     | 13/28 [00:45<00:44,  2.98s/it]epoch 0 loss 4.65364:  46%|████▋     | 13/28 [00:45<00:44,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.64it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1768[0m
[32m  eval_f1 = 0.0274[0m
[32m  eval_mcc = 0.1199[0m
[32m  eval_precision = 0.0376[0m
[32m  eval_recall = 0.0325[0m
[32m  ********************[0m
[32m  Best f1:0.0274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.65364:  50%|█████     | 14/28 [00:55<01:10,  5.04s/it]epoch 0 loss 4.58724:  50%|█████     | 14/28 [00:55<01:10,  5.04s/it]epoch 0 loss 4.58724:  54%|█████▎    | 15/28 [00:55<00:47,  3.65s/it]epoch 0 loss 4.51929:  54%|█████▎    | 15/28 [00:56<00:47,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2277[0m
[32m  eval_f1 = 0.0342[0m
[32m  eval_mcc = 0.1739[0m
[32m  eval_precision = 0.0459[0m
[32m  eval_recall = 0.0402[0m
[32m  ********************[0m
[32m  Best f1:0.0342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.51929:  57%|█████▋    | 16/28 [01:05<01:04,  5.36s/it]epoch 0 loss 4.45113:  57%|█████▋    | 16/28 [01:05<01:04,  5.36s/it]epoch 0 loss 4.45113:  61%|██████    | 17/28 [01:05<00:42,  3.87s/it]epoch 0 loss 4.38113:  61%|██████    | 17/28 [01:05<00:42,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2819[0m
[32m  eval_f1 = 0.0418[0m
[32m  eval_mcc = 0.2316[0m
[32m  eval_precision = 0.0593[0m
[32m  eval_recall = 0.0479[0m
[32m  ********************[0m
[32m  Best f1:0.0418[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.38113:  64%|██████▍   | 18/28 [01:15<00:57,  5.75s/it]epoch 0 loss 4.31238:  64%|██████▍   | 18/28 [01:16<00:57,  5.75s/it]epoch 0 loss 4.31238:  68%|██████▊   | 19/28 [01:16<00:37,  4.15s/it]epoch 0 loss 4.25154:  68%|██████▊   | 19/28 [01:16<00:37,  4.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3261[0m
[32m  eval_f1 = 0.0538[0m
[32m  eval_mcc = 0.2781[0m
[32m  eval_precision = 0.0923[0m
[32m  eval_recall = 0.0579[0m
[32m  ********************[0m
[32m  Best f1:0.0538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2781[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.25154:  71%|███████▏  | 20/28 [01:25<00:46,  5.87s/it]epoch 0 loss 4.18372:  71%|███████▏  | 20/28 [01:26<00:46,  5.87s/it]epoch 0 loss 4.18372:  75%|███████▌  | 21/28 [01:26<00:29,  4.23s/it]epoch 0 loss 4.1254:  75%|███████▌  | 21/28 [01:26<00:29,  4.23s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3642[0m
[32m  eval_f1 = 0.0855[0m
[32m  eval_mcc = 0.319[0m
[32m  eval_precision = 0.1527[0m
[32m  eval_recall = 0.0821[0m
[32m  ********************[0m
[32m  Best f1:0.0855[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.1254:  79%|███████▊  | 22/28 [01:35<00:34,  5.72s/it]epoch 0 loss 4.06062:  79%|███████▊  | 22/28 [01:35<00:34,  5.72s/it]epoch 0 loss 4.06062:  82%|████████▏ | 23/28 [01:35<00:20,  4.13s/it]epoch 0 loss 3.99869:  82%|████████▏ | 23/28 [01:36<00:20,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4[0m
[32m  eval_f1 = 0.1103[0m
[32m  eval_mcc = 0.3599[0m
[32m  eval_precision = 0.1826[0m
[32m  eval_recall = 0.1058[0m
[32m  ********************[0m
[32m  Best f1:0.1103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.99869:  86%|████████▌ | 24/28 [01:46<00:24,  6.03s/it]epoch 0 loss 3.93995:  86%|████████▌ | 24/28 [01:46<00:24,  6.03s/it]epoch 0 loss 3.93995:  89%|████████▉ | 25/28 [01:46<00:13,  4.35s/it]epoch 0 loss 3.88205:  89%|████████▉ | 25/28 [01:47<00:13,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4405[0m
[32m  eval_f1 = 0.1323[0m
[32m  eval_mcc = 0.4069[0m
[32m  eval_precision = 0.2069[0m
[32m  eval_recall = 0.1259[0m
[32m  ********************[0m
[32m  Best f1:0.1323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.88205:  93%|█████████▎| 26/28 [01:52<00:09,  4.82s/it]epoch 0 loss 3.821:  93%|█████████▎| 26/28 [01:53<00:09,  4.82s/it]  epoch 0 loss 3.821:  96%|█████████▋| 27/28 [01:53<00:03,  3.50s/it]epoch 0 loss 3.76084:  96%|█████████▋| 27/28 [01:53<00:03,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4901[0m
[32m  eval_f1 = 0.1567[0m
[32m  eval_mcc = 0.4609[0m
[32m  eval_precision = 0.2241[0m
[32m  eval_recall = 0.1489[0m
[32m  ********************[0m
[32m  Best f1:0.1567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.76084: 100%|██████████| 28/28 [01:59<00:00,  4.22s/it]epoch 0 loss 3.76084: 100%|██████████| 28/28 [01:59<00:00,  4.25s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.18708:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.18708:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 1 loss 2.27591:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5245[0m
[32m  eval_f1 = 0.1773[0m
[32m  eval_mcc = 0.4965[0m
[32m  eval_precision = 0.2208[0m
[32m  eval_recall = 0.1724[0m
[32m  ********************[0m
[32m  Best f1:0.1773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4965[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27591:   7%|▋         | 2/28 [00:06<01:36,  3.73s/it]epoch 1 loss 2.15711:   7%|▋         | 2/28 [00:06<01:36,  3.73s/it]epoch 1 loss 2.15711:  11%|█         | 3/28 [00:06<00:55,  2.22s/it]epoch 1 loss 2.16943:  11%|█         | 3/28 [00:07<00:55,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5601[0m
[32m  eval_f1 = 0.1931[0m
[32m  eval_mcc = 0.5338[0m
[32m  eval_precision = 0.2402[0m
[32m  eval_recall = 0.1926[0m
[32m  ********************[0m
[32m  Best f1:0.1931[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16943:  14%|█▍        | 4/28 [00:12<01:30,  3.75s/it]epoch 1 loss 2.12556:  14%|█▍        | 4/28 [00:13<01:30,  3.75s/it]epoch 1 loss 2.12556:  18%|█▊        | 5/28 [00:13<00:58,  2.55s/it]epoch 1 loss 2.08104:  18%|█▊        | 5/28 [00:13<00:58,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5743[0m
[32m  eval_f1 = 0.207[0m
[32m  eval_mcc = 0.5489[0m
[32m  eval_precision = 0.2603[0m
[32m  eval_recall = 0.2041[0m
[32m  ********************[0m
[32m  Best f1:0.207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08104:  21%|██▏       | 6/28 [00:19<01:24,  3.83s/it]epoch 1 loss 2.03696:  21%|██▏       | 6/28 [00:20<01:24,  3.83s/it]epoch 1 loss 2.03696:  25%|██▌       | 7/28 [00:20<00:57,  2.72s/it]epoch 1 loss 1.99769:  25%|██▌       | 7/28 [00:20<00:57,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5862[0m
[32m  eval_f1 = 0.2152[0m
[32m  eval_mcc = 0.5616[0m
[32m  eval_precision = 0.2797[0m
[32m  eval_recall = 0.2107[0m
[32m  ********************[0m
[32m  Best f1:0.2152[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5616[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99769:  29%|██▊       | 8/28 [00:30<01:40,  5.04s/it]epoch 1 loss 1.97297:  29%|██▊       | 8/28 [00:30<01:40,  5.04s/it]epoch 1 loss 1.97297:  32%|███▏      | 9/28 [00:30<01:08,  3.60s/it]epoch 1 loss 1.95068:  32%|███▏      | 9/28 [00:30<01:08,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5954[0m
[32m  eval_f1 = 0.2289[0m
[32m  eval_mcc = 0.572[0m
[32m  eval_precision = 0.3275[0m
[32m  eval_recall = 0.2203[0m
[32m  ********************[0m
[32m  Best f1:0.2289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.572[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95068:  36%|███▌      | 10/28 [00:39<01:32,  5.13s/it]epoch 1 loss 1.90709:  36%|███▌      | 10/28 [00:39<01:32,  5.13s/it]epoch 1 loss 1.90709:  39%|███▉      | 11/28 [00:39<01:02,  3.69s/it]epoch 1 loss 1.87801:  39%|███▉      | 11/28 [00:39<01:02,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6002[0m
[32m  eval_f1 = 0.2413[0m
[32m  eval_mcc = 0.5775[0m
[32m  eval_precision = 0.3406[0m
[32m  eval_recall = 0.2273[0m
[32m  ********************[0m
[32m  Best f1:0.2413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5775[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87801:  43%|████▎     | 12/28 [00:49<01:30,  5.68s/it]epoch 1 loss 1.85674:  43%|████▎     | 12/28 [00:50<01:30,  5.68s/it]epoch 1 loss 1.85674:  46%|████▋     | 13/28 [00:50<01:01,  4.09s/it]epoch 1 loss 1.84691:  46%|████▋     | 13/28 [00:50<01:01,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6057[0m
[32m  eval_f1 = 0.2534[0m
[32m  eval_mcc = 0.584[0m
[32m  eval_precision = 0.352[0m
[32m  eval_recall = 0.2354[0m
[32m  ********************[0m
[32m  Best f1:0.2534[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84691:  50%|█████     | 14/28 [00:59<01:21,  5.80s/it]epoch 1 loss 1.82744:  50%|█████     | 14/28 [01:00<01:21,  5.80s/it]epoch 1 loss 1.82744:  54%|█████▎    | 15/28 [01:00<00:54,  4.18s/it]epoch 1 loss 1.8079:  54%|█████▎    | 15/28 [01:00<00:54,  4.18s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.611[0m
[32m  eval_f1 = 0.2653[0m
[32m  eval_mcc = 0.5901[0m
[32m  eval_precision = 0.3643[0m
[32m  eval_recall = 0.2447[0m
[32m  ********************[0m
[32m  Best f1:0.2653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5901[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8079:  57%|█████▋    | 16/28 [01:10<01:12,  6.01s/it]epoch 1 loss 1.79067:  57%|█████▋    | 16/28 [01:11<01:12,  6.01s/it]epoch 1 loss 1.79067:  61%|██████    | 17/28 [01:11<00:47,  4.33s/it]epoch 1 loss 1.77544:  61%|██████    | 17/28 [01:11<00:47,  4.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6133[0m
[32m  eval_f1 = 0.2719[0m
[32m  eval_mcc = 0.5924[0m
[32m  eval_precision = 0.3618[0m
[32m  eval_recall = 0.2503[0m
[32m  ********************[0m
[32m  Best f1:0.2719[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5924[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77544:  64%|██████▍   | 18/28 [01:22<01:03,  6.35s/it]epoch 1 loss 1.75534:  64%|██████▍   | 18/28 [01:22<01:03,  6.35s/it]epoch 1 loss 1.75534:  68%|██████▊   | 19/28 [01:22<00:41,  4.57s/it]epoch 1 loss 1.73973:  68%|██████▊   | 19/28 [01:22<00:41,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6209[0m
[32m  eval_f1 = 0.2896[0m
[32m  eval_mcc = 0.6[0m
[32m  eval_precision = 0.3862[0m
[32m  eval_recall = 0.2661[0m
[32m  ********************[0m
[32m  Best f1:0.2896[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.73973:  71%|███████▏  | 20/28 [01:32<00:49,  6.18s/it]epoch 1 loss 1.72634:  71%|███████▏  | 20/28 [01:32<00:49,  6.18s/it]epoch 1 loss 1.72634:  75%|███████▌  | 21/28 [01:32<00:31,  4.45s/it]epoch 1 loss 1.7198:  75%|███████▌  | 21/28 [01:33<00:31,  4.45s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6243[0m
[32m  eval_f1 = 0.2959[0m
[32m  eval_mcc = 0.6028[0m
[32m  eval_precision = 0.382[0m
[32m  eval_recall = 0.2735[0m
[32m  ********************[0m
[32m  Best f1:0.2959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7198:  79%|███████▊  | 22/28 [01:43<00:37,  6.31s/it]epoch 1 loss 1.70672:  79%|███████▊  | 22/28 [01:43<00:37,  6.31s/it]epoch 1 loss 1.70672:  82%|████████▏ | 23/28 [01:43<00:22,  4.54s/it]epoch 1 loss 1.69727:  82%|████████▏ | 23/28 [01:44<00:22,  4.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6272[0m
[32m  eval_f1 = 0.3119[0m
[32m  eval_mcc = 0.6053[0m
[32m  eval_precision = 0.4076[0m
[32m  eval_recall = 0.2888[0m
[32m  ********************[0m
[32m  Best f1:0.3119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.69727:  86%|████████▌ | 24/28 [01:53<00:24,  6.17s/it]epoch 1 loss 1.68835:  86%|████████▌ | 24/28 [01:54<00:24,  6.17s/it]epoch 1 loss 1.68835:  89%|████████▉ | 25/28 [01:54<00:13,  4.44s/it]epoch 1 loss 1.6805:  89%|████████▉ | 25/28 [01:54<00:13,  4.44s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6304[0m
[32m  eval_f1 = 0.3209[0m
[32m  eval_mcc = 0.6085[0m
[32m  eval_precision = 0.4245[0m
[32m  eval_recall = 0.296[0m
[32m  ********************[0m
[32m  Best f1:0.3209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.6805:  93%|█████████▎| 26/28 [02:05<00:12,  6.39s/it]epoch 1 loss 1.67143:  93%|█████████▎| 26/28 [02:05<00:12,  6.39s/it]epoch 1 loss 1.67143:  96%|█████████▋| 27/28 [02:05<00:04,  4.59s/it]epoch 1 loss 1.66635:  96%|█████████▋| 27/28 [02:05<00:04,  4.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.635[0m
[32m  eval_f1 = 0.3246[0m
[32m  eval_mcc = 0.6139[0m
[32m  eval_precision = 0.4267[0m
[32m  eval_recall = 0.3011[0m
[32m  ********************[0m
[32m  Best f1:0.3246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6139[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.66635: 100%|██████████| 28/28 [02:15<00:00,  6.04s/it]epoch 1 loss 1.66635: 100%|██████████| 28/28 [02:15<00:00,  4.82s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.37102:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.37102:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.38217:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.637[0m
[32m  eval_f1 = 0.3272[0m
[32m  eval_mcc = 0.6165[0m
[32m  eval_precision = 0.4245[0m
[32m  eval_recall = 0.3044[0m
[32m  ********************[0m
[32m  Best f1:0.3272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38217:   7%|▋         | 2/28 [00:11<02:59,  6.92s/it]epoch 2 loss 1.36833:   7%|▋         | 2/28 [00:12<02:59,  6.92s/it]epoch 2 loss 1.36833:  11%|█         | 3/28 [00:12<01:38,  3.95s/it]epoch 2 loss 1.36235:  11%|█         | 3/28 [00:12<01:38,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.3285[0m
[32m  eval_mcc = 0.6197[0m
[32m  eval_precision = 0.424[0m
[32m  eval_recall = 0.3055[0m
[32m  ********************[0m
[32m  Best f1:0.3285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36235:  14%|█▍        | 4/28 [00:22<02:31,  6.30s/it]epoch 2 loss 1.34215:  14%|█▍        | 4/28 [00:22<02:31,  6.30s/it]epoch 2 loss 1.34215:  18%|█▊        | 5/28 [00:22<01:36,  4.18s/it]epoch 2 loss 1.32304:  18%|█▊        | 5/28 [00:23<01:36,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6402[0m
[32m  eval_f1 = 0.3297[0m
[32m  eval_mcc = 0.6213[0m
[32m  eval_precision = 0.4227[0m
[32m  eval_recall = 0.3063[0m
[32m  ********************[0m
[32m  Best f1:0.3297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32304:  21%|██▏       | 6/28 [00:33<02:25,  6.62s/it]epoch 2 loss 1.34515:  21%|██▏       | 6/28 [00:34<02:25,  6.62s/it]epoch 2 loss 1.34515:  25%|██▌       | 7/28 [00:34<01:36,  4.60s/it]epoch 2 loss 1.35008:  25%|██▌       | 7/28 [00:34<01:36,  4.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6416[0m
[32m  eval_f1 = 0.3295[0m
[32m  eval_mcc = 0.6231[0m
[32m  eval_precision = 0.4251[0m
[32m  eval_recall = 0.3064[0m
[32m  ********************[0m
[32m  Best MCC:0.6231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35008:  29%|██▊       | 8/28 [00:41<01:48,  5.40s/it]epoch 2 loss 1.34261:  29%|██▊       | 8/28 [00:41<01:48,  5.40s/it]epoch 2 loss 1.34261:  32%|███▏      | 9/28 [00:41<01:13,  3.85s/it]epoch 2 loss 1.34813:  32%|███▏      | 9/28 [00:42<01:13,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.3301[0m
[32m  eval_mcc = 0.6243[0m
[32m  eval_precision = 0.4283[0m
[32m  eval_recall = 0.3066[0m
[32m  ********************[0m
[32m  Best f1:0.3301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34813:  36%|███▌      | 10/28 [00:54<01:55,  6.39s/it]epoch 2 loss 1.34887:  36%|███▌      | 10/28 [00:54<01:55,  6.39s/it]epoch 2 loss 1.34887:  39%|███▉      | 11/28 [00:54<01:17,  4.56s/it]epoch 2 loss 1.35031:  39%|███▉      | 11/28 [00:54<01:17,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6467[0m
[32m  eval_f1 = 0.3344[0m
[32m  eval_mcc = 0.6276[0m
[32m  eval_precision = 0.4369[0m
[32m  eval_recall = 0.312[0m
[32m  ********************[0m
[32m  Best f1:0.3344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35031:  43%|████▎     | 12/28 [01:05<01:44,  6.54s/it]epoch 2 loss 1.35628:  43%|████▎     | 12/28 [01:05<01:44,  6.54s/it]epoch 2 loss 1.35628:  46%|████▋     | 13/28 [01:05<01:10,  4.68s/it]epoch 2 loss 1.3534:  46%|████▋     | 13/28 [01:06<01:10,  4.68s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6493[0m
[32m  eval_f1 = 0.3378[0m
[32m  eval_mcc = 0.6299[0m
[32m  eval_precision = 0.438[0m
[32m  eval_recall = 0.3154[0m
[32m  ********************[0m
[32m  Best f1:0.3378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3534:  50%|█████     | 14/28 [01:15<01:24,  6.01s/it]epoch 2 loss 1.34647:  50%|█████     | 14/28 [01:15<01:24,  6.01s/it]epoch 2 loss 1.34647:  54%|█████▎    | 15/28 [01:15<00:56,  4.32s/it]epoch 2 loss 1.33937:  54%|█████▎    | 15/28 [01:15<00:56,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6515[0m
[32m  eval_f1 = 0.3445[0m
[32m  eval_mcc = 0.6319[0m
[32m  eval_precision = 0.4478[0m
[32m  eval_recall = 0.3202[0m
[32m  ********************[0m
[32m  Best f1:0.3445[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33937:  57%|█████▋    | 16/28 [01:25<01:13,  6.09s/it]epoch 2 loss 1.3381:  57%|█████▋    | 16/28 [01:26<01:13,  6.09s/it] epoch 2 loss 1.3381:  61%|██████    | 17/28 [01:26<00:48,  4.39s/it]epoch 2 loss 1.33887:  61%|██████    | 17/28 [01:26<00:48,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6541[0m
[32m  eval_f1 = 0.3523[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4609[0m
[32m  eval_recall = 0.3257[0m
[32m  ********************[0m
[32m  Best f1:0.3523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33887:  64%|██████▍   | 18/28 [01:35<00:58,  5.86s/it]epoch 2 loss 1.3342:  64%|██████▍   | 18/28 [01:35<00:58,  5.86s/it] epoch 2 loss 1.3342:  68%|██████▊   | 19/28 [01:35<00:38,  4.23s/it]epoch 2 loss 1.33186:  68%|██████▊   | 19/28 [01:36<00:38,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6565[0m
[32m  eval_f1 = 0.3567[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4619[0m
[32m  eval_recall = 0.3289[0m
[32m  ********************[0m
[32m  Best f1:0.3567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33186:  71%|███████▏  | 20/28 [01:46<00:49,  6.21s/it]epoch 2 loss 1.33332:  71%|███████▏  | 20/28 [01:47<00:49,  6.21s/it]epoch 2 loss 1.33332:  75%|███████▌  | 21/28 [01:47<00:31,  4.48s/it]epoch 2 loss 1.33219:  75%|███████▌  | 21/28 [01:47<00:31,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3603[0m
[32m  eval_mcc = 0.6398[0m
[32m  eval_precision = 0.4631[0m
[32m  eval_recall = 0.332[0m
[32m  ********************[0m
[32m  Best f1:0.3603[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33219:  79%|███████▊  | 22/28 [01:59<00:41,  6.93s/it]epoch 2 loss 1.3286:  79%|███████▊  | 22/28 [02:00<00:41,  6.93s/it] epoch 2 loss 1.3286:  82%|████████▏ | 23/28 [02:00<00:24,  4.97s/it]epoch 2 loss 1.32765:  82%|████████▏ | 23/28 [02:00<00:24,  4.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6607[0m
[32m  eval_f1 = 0.3646[0m
[32m  eval_mcc = 0.6418[0m
[32m  eval_precision = 0.472[0m
[32m  eval_recall = 0.3359[0m
[32m  ********************[0m
[32m  Best f1:0.3646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6418[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32765:  86%|████████▌ | 24/28 [02:11<00:27,  6.88s/it]epoch 2 loss 1.32188:  86%|████████▌ | 24/28 [02:11<00:27,  6.88s/it]epoch 2 loss 1.32188:  89%|████████▉ | 25/28 [02:11<00:14,  4.94s/it]epoch 2 loss 1.32024:  89%|████████▉ | 25/28 [02:12<00:14,  4.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3646[0m
[32m  eval_mcc = 0.6423[0m
[32m  eval_precision = 0.472[0m
[32m  eval_recall = 0.3362[0m
[32m  ********************[0m
[32m  Best MCC:0.6423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32024:  93%|█████████▎| 26/28 [02:18<00:11,  5.54s/it]epoch 2 loss 1.31611:  93%|█████████▎| 26/28 [02:19<00:11,  5.54s/it]epoch 2 loss 1.31611:  96%|█████████▋| 27/28 [02:19<00:04,  4.00s/it]epoch 2 loss 1.31204:  96%|█████████▋| 27/28 [02:19<00:04,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6616[0m
[32m  eval_f1 = 0.3643[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.4697[0m
[32m  eval_recall = 0.3361[0m
[32m  ********************[0m
[32m  Best MCC:0.6425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31204: 100%|██████████| 28/28 [02:25<00:00,  4.63s/it]epoch 2 loss 1.31204: 100%|██████████| 28/28 [02:25<00:00,  5.19s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.1957:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.1957:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 3 loss 1.25792:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6628[0m
[32m  eval_f1 = 0.3645[0m
[32m  eval_mcc = 0.6435[0m
[32m  eval_precision = 0.4721[0m
[32m  eval_recall = 0.336[0m
[32m  ********************[0m
[32m  Best MCC:0.6435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25792:   7%|▋         | 2/28 [00:06<01:40,  3.85s/it]epoch 3 loss 1.25632:   7%|▋         | 2/28 [00:07<01:40,  3.85s/it]epoch 3 loss 1.25632:  11%|█         | 3/28 [00:07<00:57,  2.28s/it]epoch 3 loss 1.25671:  11%|█         | 3/28 [00:07<00:57,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6637[0m
[32m  eval_f1 = 0.365[0m
[32m  eval_mcc = 0.6444[0m
[32m  eval_precision = 0.4732[0m
[32m  eval_recall = 0.3366[0m
[32m  ********************[0m
[32m  Best f1:0.365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25671:  14%|█▍        | 4/28 [00:17<02:10,  5.44s/it]epoch 3 loss 1.24358:  14%|█▍        | 4/28 [00:17<02:10,  5.44s/it]epoch 3 loss 1.24358:  18%|█▊        | 5/28 [00:17<01:23,  3.63s/it]epoch 3 loss 1.23616:  18%|█▊        | 5/28 [00:18<01:23,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6638[0m
[32m  eval_f1 = 0.3637[0m
[32m  eval_mcc = 0.6445[0m
[32m  eval_precision = 0.471[0m
[32m  eval_recall = 0.3361[0m
[32m  ********************[0m
[32m  Best MCC:0.6445[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23616:  21%|██▏       | 6/28 [00:24<01:41,  4.60s/it]epoch 3 loss 1.24187:  21%|██▏       | 6/28 [00:24<01:41,  4.60s/it]epoch 3 loss 1.24187:  25%|██▌       | 7/28 [00:24<01:07,  3.24s/it]epoch 3 loss 1.23565:  25%|██▌       | 7/28 [00:25<01:07,  3.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6635[0m
[32m  eval_f1 = 0.3642[0m
[32m  eval_mcc = 0.6445[0m
[32m  eval_precision = 0.4716[0m
[32m  eval_recall = 0.3368[0m
[32m  ********************[0m
[32m  Best MCC:0.6445[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23565:  29%|██▊       | 8/28 [00:32<01:32,  4.60s/it]epoch 3 loss 1.23421:  29%|██▊       | 8/28 [00:32<01:32,  4.60s/it]epoch 3 loss 1.23421:  32%|███▏      | 9/28 [00:32<01:02,  3.30s/it]epoch 3 loss 1.2259:  32%|███▏      | 9/28 [00:33<01:02,  3.30s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6641[0m
[32m  eval_f1 = 0.3654[0m
[32m  eval_mcc = 0.6455[0m
[32m  eval_precision = 0.4737[0m
[32m  eval_recall = 0.3376[0m
[32m  ********************[0m
[32m  Best f1:0.3654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2259:  36%|███▌      | 10/28 [00:42<01:33,  5.21s/it]epoch 3 loss 1.22342:  36%|███▌      | 10/28 [00:42<01:33,  5.21s/it]epoch 3 loss 1.22342:  39%|███▉      | 11/28 [00:42<01:03,  3.75s/it]epoch 3 loss 1.22682:  39%|███▉      | 11/28 [00:42<01:03,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3677[0m
[32m  eval_mcc = 0.6471[0m
[32m  eval_precision = 0.4757[0m
[32m  eval_recall = 0.3393[0m
[32m  ********************[0m
[32m  Best f1:0.3677[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22682:  43%|████▎     | 12/28 [00:52<01:29,  5.56s/it]epoch 3 loss 1.22954:  43%|████▎     | 12/28 [00:52<01:29,  5.56s/it]epoch 3 loss 1.22954:  46%|████▋     | 13/28 [00:52<01:00,  4.00s/it]epoch 3 loss 1.23181:  46%|████▋     | 13/28 [00:53<01:00,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6666[0m
[32m  eval_f1 = 0.3694[0m
[32m  eval_mcc = 0.6483[0m
[32m  eval_precision = 0.4738[0m
[32m  eval_recall = 0.3406[0m
[32m  ********************[0m
[32m  Best f1:0.3694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23181:  50%|█████     | 14/28 [01:02<01:19,  5.69s/it]epoch 3 loss 1.2291:  50%|█████     | 14/28 [01:02<01:19,  5.69s/it] epoch 3 loss 1.2291:  54%|█████▎    | 15/28 [01:02<00:53,  4.10s/it]epoch 3 loss 1.22649:  54%|█████▎    | 15/28 [01:03<00:53,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.371[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.4747[0m
[32m  eval_recall = 0.3419[0m
[32m  ********************[0m
[32m  Best f1:0.371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22649:  57%|█████▋    | 16/28 [01:11<01:04,  5.39s/it]epoch 3 loss 1.22125:  57%|█████▋    | 16/28 [01:11<01:04,  5.39s/it]epoch 3 loss 1.22125:  61%|██████    | 17/28 [01:11<00:42,  3.90s/it]epoch 3 loss 1.21937:  61%|██████    | 17/28 [01:11<00:42,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6665[0m
[32m  eval_f1 = 0.371[0m
[32m  eval_mcc = 0.6483[0m
[32m  eval_precision = 0.48[0m
[32m  eval_recall = 0.3414[0m

epoch 3 loss 1.21937:  64%|██████▍   | 18/28 [01:15<00:38,  3.86s/it]epoch 3 loss 1.21489:  64%|██████▍   | 18/28 [01:15<00:38,  3.86s/it]epoch 3 loss 1.21489:  68%|██████▊   | 19/28 [01:15<00:25,  2.82s/it]epoch 3 loss 1.21344:  68%|██████▊   | 19/28 [01:16<00:25,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3724[0m
[32m  eval_mcc = 0.6483[0m
[32m  eval_precision = 0.4816[0m
[32m  eval_recall = 0.3422[0m
[32m  ********************[0m
[32m  Best f1:0.3724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.21344:  71%|███████▏  | 20/28 [01:23<00:33,  4.20s/it]epoch 3 loss 1.21992:  71%|███████▏  | 20/28 [01:23<00:33,  4.20s/it]epoch 3 loss 1.21992:  75%|███████▌  | 21/28 [01:23<00:21,  3.06s/it]epoch 3 loss 1.21941:  75%|███████▌  | 21/28 [01:23<00:21,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6673[0m
[32m  eval_f1 = 0.3729[0m
[32m  eval_mcc = 0.6487[0m
[32m  eval_precision = 0.4813[0m
[32m  eval_recall = 0.3427[0m
[32m  ********************[0m
[32m  Best f1:0.3729[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21941:  79%|███████▊  | 22/28 [01:32<00:29,  4.90s/it]epoch 3 loss 1.22616:  79%|███████▊  | 22/28 [01:33<00:29,  4.90s/it]epoch 3 loss 1.22616:  82%|████████▏ | 23/28 [01:33<00:17,  3.56s/it]epoch 3 loss 1.22975:  82%|████████▏ | 23/28 [01:33<00:17,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.669[0m
[32m  eval_f1 = 0.3762[0m
[32m  eval_mcc = 0.6504[0m
[32m  eval_precision = 0.4892[0m
[32m  eval_recall = 0.346[0m
[32m  ********************[0m
[32m  Best f1:0.3762[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22975:  86%|████████▌ | 24/28 [01:42<00:20,  5.15s/it]epoch 3 loss 1.23029:  86%|████████▌ | 24/28 [01:42<00:20,  5.15s/it]epoch 3 loss 1.23029:  89%|████████▉ | 25/28 [01:42<00:11,  3.73s/it]epoch 3 loss 1.22344:  89%|████████▉ | 25/28 [01:42<00:11,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6703[0m
[32m  eval_f1 = 0.3799[0m
[32m  eval_mcc = 0.6516[0m
[32m  eval_precision = 0.4859[0m
[32m  eval_recall = 0.35[0m
[32m  ********************[0m
[32m  Best f1:0.3799[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22344:  93%|█████████▎| 26/28 [01:52<00:11,  5.53s/it]epoch 3 loss 1.22206:  93%|█████████▎| 26/28 [01:52<00:11,  5.53s/it]epoch 3 loss 1.22206:  96%|█████████▋| 27/28 [01:52<00:03,  4.00s/it]epoch 3 loss 1.22332:  96%|█████████▋| 27/28 [01:52<00:03,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6705[0m
[32m  eval_f1 = 0.3802[0m
[32m  eval_mcc = 0.6519[0m
[32m  eval_precision = 0.4852[0m
[32m  eval_recall = 0.3501[0m
[32m  ********************[0m
[32m  Best f1:0.3802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22332: 100%|██████████| 28/28 [02:00<00:00,  5.12s/it]epoch 3 loss 1.22332: 100%|██████████| 28/28 [02:00<00:00,  4.30s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.15417:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.15417:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 4 loss 1.23057:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6708[0m
[32m  eval_f1 = 0.3817[0m
[32m  eval_mcc = 0.6522[0m
[32m  eval_precision = 0.4842[0m
[32m  eval_recall = 0.3513[0m
[32m  ********************[0m
[32m  Best f1:0.3817[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23057:   7%|▋         | 2/28 [00:07<02:00,  4.62s/it]epoch 4 loss 1.18724:   7%|▋         | 2/28 [00:08<02:00,  4.62s/it]epoch 4 loss 1.18724:  11%|█         | 3/28 [00:08<01:07,  2.71s/it]epoch 4 loss 1.1833:  11%|█         | 3/28 [00:08<01:07,  2.71s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6708[0m
[32m  eval_f1 = 0.3824[0m
[32m  eval_mcc = 0.6523[0m
[32m  eval_precision = 0.4885[0m
[32m  eval_recall = 0.3516[0m
[32m  ********************[0m
[32m  Best f1:0.3824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1833:  14%|█▍        | 4/28 [00:17<02:07,  5.32s/it]epoch 4 loss 1.19098:  14%|█▍        | 4/28 [00:18<02:07,  5.32s/it]epoch 4 loss 1.19098:  18%|█▊        | 5/28 [00:18<01:21,  3.56s/it]epoch 4 loss 1.19306:  18%|█▊        | 5/28 [00:18<01:21,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6709[0m
[32m  eval_f1 = 0.382[0m
[32m  eval_mcc = 0.6524[0m
[32m  eval_precision = 0.4858[0m
[32m  eval_recall = 0.3514[0m
[32m  ********************[0m
[32m  Best MCC:0.6524[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19306:  21%|██▏       | 6/28 [00:23<01:28,  4.04s/it]epoch 4 loss 1.20038:  21%|██▏       | 6/28 [00:23<01:28,  4.04s/it]epoch 4 loss 1.20038:  25%|██▌       | 7/28 [00:23<00:59,  2.85s/it]epoch 4 loss 1.20237:  25%|██▌       | 7/28 [00:23<00:59,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6711[0m
[32m  eval_f1 = 0.3831[0m
[32m  eval_mcc = 0.6526[0m
[32m  eval_precision = 0.4879[0m
[32m  eval_recall = 0.352[0m
[32m  ********************[0m
[32m  Best f1:0.3831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6526[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20237:  29%|██▊       | 8/28 [00:29<01:18,  3.94s/it]epoch 4 loss 1.20612:  29%|██▊       | 8/28 [00:30<01:18,  3.94s/it]epoch 4 loss 1.20612:  32%|███▏      | 9/28 [00:30<00:53,  2.84s/it]epoch 4 loss 1.2:  32%|███▏      | 9/28 [00:30<00:53,  2.84s/it]    [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6714[0m
[32m  eval_f1 = 0.3844[0m
[32m  eval_mcc = 0.6529[0m
[32m  eval_precision = 0.4891[0m
[32m  eval_recall = 0.3533[0m
[32m  ********************[0m
[32m  Best f1:0.3844[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2:  36%|███▌      | 10/28 [00:36<01:09,  3.84s/it]epoch 4 loss 1.21053:  36%|███▌      | 10/28 [00:36<01:09,  3.84s/it]epoch 4 loss 1.21053:  39%|███▉      | 11/28 [00:36<00:47,  2.79s/it]epoch 4 loss 1.20485:  39%|███▉      | 11/28 [00:37<00:47,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6719[0m
[32m  eval_f1 = 0.3844[0m
[32m  eval_mcc = 0.6534[0m
[32m  eval_precision = 0.4885[0m
[32m  eval_recall = 0.3535[0m
[32m  ********************[0m
[32m  Best MCC:0.6534[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20485:  43%|████▎     | 12/28 [00:41<00:53,  3.36s/it]epoch 4 loss 1.20581:  43%|████▎     | 12/28 [00:41<00:53,  3.36s/it]epoch 4 loss 1.20581:  46%|████▋     | 13/28 [00:41<00:37,  2.47s/it]epoch 4 loss 1.20971:  46%|████▋     | 13/28 [00:42<00:37,  2.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6724[0m
[32m  eval_f1 = 0.3851[0m
[32m  eval_mcc = 0.6538[0m
[32m  eval_precision = 0.4887[0m
[32m  eval_recall = 0.3542[0m
[32m  ********************[0m
[32m  Best f1:0.3851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20971:  50%|█████     | 14/28 [00:47<00:49,  3.55s/it]epoch 4 loss 1.20394:  50%|█████     | 14/28 [00:48<00:49,  3.55s/it]epoch 4 loss 1.20394:  54%|█████▎    | 15/28 [00:48<00:33,  2.61s/it]epoch 4 loss 1.20325:  54%|█████▎    | 15/28 [00:48<00:33,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6724[0m
[32m  eval_f1 = 0.3851[0m
[32m  eval_mcc = 0.6538[0m
[32m  eval_precision = 0.4887[0m
[32m  eval_recall = 0.3544[0m

epoch 4 loss 1.20325:  57%|█████▋    | 16/28 [00:52<00:35,  2.96s/it]epoch 4 loss 1.20435:  57%|█████▋    | 16/28 [00:52<00:35,  2.96s/it]epoch 4 loss 1.20435:  61%|██████    | 17/28 [00:52<00:24,  2.19s/it]epoch 4 loss 1.20586:  61%|██████    | 17/28 [00:52<00:24,  2.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6727[0m
[32m  eval_f1 = 0.3852[0m
[32m  eval_mcc = 0.6541[0m
[32m  eval_precision = 0.4894[0m
[32m  eval_recall = 0.3546[0m
[32m  ********************[0m
[32m  Best f1:0.3852[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6541[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20586:  64%|██████▍   | 18/28 [00:58<00:32,  3.25s/it]epoch 4 loss 1.20272:  64%|██████▍   | 18/28 [00:58<00:32,  3.25s/it]epoch 4 loss 1.20272:  68%|██████▊   | 19/28 [00:58<00:21,  2.40s/it]epoch 4 loss 1.20365:  68%|██████▊   | 19/28 [00:59<00:21,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6728[0m
[32m  eval_f1 = 0.3852[0m
[32m  eval_mcc = 0.6542[0m
[32m  eval_precision = 0.4895[0m
[32m  eval_recall = 0.3546[0m
[32m  ********************[0m
[32m  Best MCC:0.6542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20365:  71%|███████▏  | 20/28 [01:03<00:25,  3.14s/it]epoch 4 loss 1.19812:  71%|███████▏  | 20/28 [01:03<00:25,  3.14s/it]epoch 4 loss 1.19812:  75%|███████▌  | 21/28 [01:03<00:16,  2.32s/it]epoch 4 loss 1.19759:  75%|███████▌  | 21/28 [01:04<00:16,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6729[0m
[32m  eval_f1 = 0.386[0m
[32m  eval_mcc = 0.6544[0m
[32m  eval_precision = 0.4907[0m
[32m  eval_recall = 0.3552[0m
[32m  ********************[0m
[32m  Best f1:0.386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19759:  79%|███████▊  | 22/28 [01:12<00:24,  4.08s/it]epoch 4 loss 1.19337:  79%|███████▊  | 22/28 [01:12<00:24,  4.08s/it]epoch 4 loss 1.19337:  82%|████████▏ | 23/28 [01:12<00:14,  2.98s/it]epoch 4 loss 1.19395:  82%|████████▏ | 23/28 [01:12<00:14,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6727[0m
[32m  eval_f1 = 0.3854[0m
[32m  eval_mcc = 0.6543[0m
[32m  eval_precision = 0.4902[0m
[32m  eval_recall = 0.3546[0m

epoch 4 loss 1.19395:  86%|████████▌ | 24/28 [01:16<00:12,  3.23s/it]epoch 4 loss 1.19562:  86%|████████▌ | 24/28 [01:16<00:12,  3.23s/it]epoch 4 loss 1.19562:  89%|████████▉ | 25/28 [01:16<00:07,  2.38s/it]epoch 4 loss 1.19322:  89%|████████▉ | 25/28 [01:17<00:07,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6727[0m
[32m  eval_f1 = 0.3855[0m
[32m  eval_mcc = 0.6542[0m
[32m  eval_precision = 0.4904[0m
[32m  eval_recall = 0.3546[0m

epoch 4 loss 1.19322:  93%|█████████▎| 26/28 [01:20<00:05,  2.80s/it]epoch 4 loss 1.18906:  93%|█████████▎| 26/28 [01:20<00:05,  2.80s/it]epoch 4 loss 1.18906:  96%|█████████▋| 27/28 [01:20<00:02,  2.08s/it]epoch 4 loss 1.18863:  96%|█████████▋| 27/28 [01:21<00:02,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6726[0m
[32m  eval_f1 = 0.3855[0m
[32m  eval_mcc = 0.6541[0m
[32m  eval_precision = 0.4904[0m
[32m  eval_recall = 0.3546[0m

epoch 4 loss 1.18863: 100%|██████████| 28/28 [01:24<00:00,  2.54s/it]epoch 4 loss 1.18863: 100%|██████████| 28/28 [01:24<00:00,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6729[0m
[32m  eval_f1 = 0.386[0m
[32m  eval_mcc = 0.6544[0m
[32m  eval_precision = 0.4907[0m
[32m  eval_recall = 0.3552[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6584[0m
[32m  eval_f1 = 0.3461[0m
[32m  eval_mcc = 0.6401[0m
[32m  eval_precision = 0.4588[0m
[32m  eval_recall = 0.319[0m

