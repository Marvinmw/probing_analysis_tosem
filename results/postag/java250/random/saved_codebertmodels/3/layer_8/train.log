[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/3/layer_8', posratio=0.5, seed=969, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.06658:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.06658:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.0786:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0079[0m
[32m  eval_f1 = 0.0015[0m
[32m  eval_mcc = -0.0115[0m
[32m  eval_precision = 0.0071[0m
[32m  eval_recall = 0.0015[0m
[32m  ********************[0m
[32m  Best f1:0.0015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.0786:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it]epoch 0 loss 5.07035:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it]epoch 0 loss 5.07035:  11%|█         | 3/28 [00:05<00:43,  1.76s/it]epoch 0 loss 5.05547:  11%|█         | 3/28 [00:05<00:43,  1.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0131[0m
[32m  eval_f1 = 0.002[0m
[32m  eval_mcc = -0.0146[0m
[32m  eval_precision = 0.0056[0m
[32m  eval_recall = 0.0019[0m
[32m  ********************[0m
[32m  Best f1:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.05547:  14%|█▍        | 4/28 [00:10<01:12,  3.02s/it]epoch 0 loss 5.02952:  14%|█▍        | 4/28 [00:10<01:12,  3.02s/it]epoch 0 loss 5.02952:  18%|█▊        | 5/28 [00:10<00:47,  2.08s/it]epoch 0 loss 4.99895:  18%|█▊        | 5/28 [00:11<00:47,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0328[0m
[32m  eval_f1 = 0.0041[0m
[32m  eval_mcc = -0.0115[0m
[32m  eval_precision = 0.0079[0m
[32m  eval_recall = 0.0041[0m
[32m  ********************[0m
[32m  Best f1:0.0041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.99895:  21%|██▏       | 6/28 [00:15<01:07,  3.05s/it]epoch 0 loss 4.96937:  21%|██▏       | 6/28 [00:16<01:07,  3.05s/it]epoch 0 loss 4.96937:  25%|██▌       | 7/28 [00:16<00:45,  2.19s/it]epoch 0 loss 4.93236:  25%|██▌       | 7/28 [00:16<00:45,  2.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0602[0m
[32m  eval_f1 = 0.0067[0m
[32m  eval_mcc = 0.0038[0m
[32m  eval_precision = 0.0119[0m
[32m  eval_recall = 0.0077[0m
[32m  ********************[0m
[32m  Best f1:0.0067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93236:  29%|██▊       | 8/28 [00:21<01:03,  3.17s/it]epoch 0 loss 4.88892:  29%|██▊       | 8/28 [00:21<01:03,  3.17s/it]epoch 0 loss 4.88892:  32%|███▏      | 9/28 [00:21<00:43,  2.31s/it]epoch 0 loss 4.83915:  32%|███▏      | 9/28 [00:22<00:43,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0776[0m
[32m  eval_f1 = 0.0094[0m
[32m  eval_mcc = 0.0185[0m
[32m  eval_precision = 0.0149[0m
[32m  eval_recall = 0.0113[0m
[32m  ********************[0m
[32m  Best f1:0.0094[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.83915:  36%|███▌      | 10/28 [00:27<01:01,  3.43s/it]epoch 0 loss 4.78634:  36%|███▌      | 10/28 [00:28<01:01,  3.43s/it]epoch 0 loss 4.78634:  39%|███▉      | 11/28 [00:28<00:42,  2.51s/it]epoch 0 loss 4.73138:  39%|███▉      | 11/28 [00:28<00:42,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1074[0m
[32m  eval_f1 = 0.0146[0m
[32m  eval_mcc = 0.049[0m
[32m  eval_precision = 0.02[0m
[32m  eval_recall = 0.017[0m
[32m  ********************[0m
[32m  Best f1:0.0146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.73138:  43%|████▎     | 12/28 [00:34<00:59,  3.72s/it]epoch 0 loss 4.67057:  43%|████▎     | 12/28 [00:35<00:59,  3.72s/it]epoch 0 loss 4.67057:  46%|████▋     | 13/28 [00:35<00:40,  2.72s/it]epoch 0 loss 4.60976:  46%|████▋     | 13/28 [00:35<00:40,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1545[0m
[32m  eval_f1 = 0.0205[0m
[32m  eval_mcc = 0.0956[0m
[32m  eval_precision = 0.0241[0m
[32m  eval_recall = 0.0246[0m
[32m  ********************[0m
[32m  Best f1:0.0205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0956[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.60976:  50%|█████     | 14/28 [00:41<00:52,  3.75s/it]epoch 0 loss 4.54562:  50%|█████     | 14/28 [00:41<00:52,  3.75s/it]epoch 0 loss 4.54562:  54%|█████▎    | 15/28 [00:41<00:35,  2.75s/it]epoch 0 loss 4.48124:  54%|█████▎    | 15/28 [00:42<00:35,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2272[0m
[32m  eval_f1 = 0.0269[0m
[32m  eval_mcc = 0.1693[0m
[32m  eval_precision = 0.0278[0m
[32m  eval_recall = 0.0352[0m
[32m  ********************[0m
[32m  Best f1:0.0269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1693[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.48124:  57%|█████▋    | 16/28 [00:50<00:54,  4.51s/it]epoch 0 loss 4.41591:  57%|█████▋    | 16/28 [00:50<00:54,  4.51s/it]epoch 0 loss 4.41591:  61%|██████    | 17/28 [00:50<00:36,  3.28s/it]epoch 0 loss 4.34982:  61%|██████    | 17/28 [00:51<00:36,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2716[0m
[32m  eval_f1 = 0.0308[0m
[32m  eval_mcc = 0.2176[0m
[32m  eval_precision = 0.0321[0m
[32m  eval_recall = 0.0408[0m
[32m  ********************[0m
[32m  Best f1:0.0308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.34982:  64%|██████▍   | 18/28 [01:07<01:12,  7.24s/it]epoch 0 loss 4.28554:  64%|██████▍   | 18/28 [01:07<01:12,  7.24s/it]epoch 0 loss 4.28554:  68%|██████▊   | 19/28 [01:07<00:46,  5.19s/it]epoch 0 loss 4.22996:  68%|██████▊   | 19/28 [01:08<00:46,  5.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.292[0m
[32m  eval_f1 = 0.0335[0m
[32m  eval_mcc = 0.238[0m
[32m  eval_precision = 0.0482[0m
[32m  eval_recall = 0.043[0m
[32m  ********************[0m
[32m  Best f1:0.0335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.22996:  71%|███████▏  | 20/28 [01:21<01:01,  7.69s/it]epoch 0 loss 4.16805:  71%|███████▏  | 20/28 [01:21<01:01,  7.69s/it]epoch 0 loss 4.16805:  75%|███████▌  | 21/28 [01:21<00:38,  5.51s/it]epoch 0 loss 4.11739:  75%|███████▌  | 21/28 [01:22<00:38,  5.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3134[0m
[32m  eval_f1 = 0.0446[0m
[32m  eval_mcc = 0.2607[0m
[32m  eval_precision = 0.0685[0m
[32m  eval_recall = 0.0512[0m
[32m  ********************[0m
[32m  Best f1:0.0446[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.11739:  79%|███████▊  | 22/28 [01:33<00:44,  7.43s/it]epoch 0 loss 4.05982:  79%|███████▊  | 22/28 [01:33<00:44,  7.43s/it]epoch 0 loss 4.05982:  82%|████████▏ | 23/28 [01:33<00:26,  5.33s/it]epoch 0 loss 4.00414:  82%|████████▏ | 23/28 [01:34<00:26,  5.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3695[0m
[32m  eval_f1 = 0.0838[0m
[32m  eval_mcc = 0.3273[0m
[32m  eval_precision = 0.1555[0m
[32m  eval_recall = 0.0814[0m
[32m  ********************[0m
[32m  Best f1:0.0838[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.00414:  86%|████████▌ | 24/28 [01:45<00:28,  7.18s/it]epoch 0 loss 3.95104:  86%|████████▌ | 24/28 [01:45<00:28,  7.18s/it]epoch 0 loss 3.95104:  89%|████████▉ | 25/28 [01:45<00:15,  5.15s/it]epoch 0 loss 3.89941:  89%|████████▉ | 25/28 [01:46<00:15,  5.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4162[0m
[32m  eval_f1 = 0.1192[0m
[32m  eval_mcc = 0.3836[0m
[32m  eval_precision = 0.187[0m
[32m  eval_recall = 0.1119[0m
[32m  ********************[0m
[32m  Best f1:0.1192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.89941:  93%|█████████▎| 26/28 [01:57<00:14,  7.02s/it]epoch 0 loss 3.84435:  93%|█████████▎| 26/28 [01:57<00:14,  7.02s/it]epoch 0 loss 3.84435:  96%|█████████▋| 27/28 [01:57<00:05,  5.04s/it]epoch 0 loss 3.78973:  96%|█████████▋| 27/28 [01:57<00:05,  5.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4553[0m
[32m  eval_f1 = 0.14[0m
[32m  eval_mcc = 0.4251[0m
[32m  eval_precision = 0.1988[0m
[32m  eval_recall = 0.1333[0m
[32m  ********************[0m
[32m  Best f1:0.14[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4251[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.78973: 100%|██████████| 28/28 [02:08<00:00,  6.70s/it]epoch 0 loss 3.78973: 100%|██████████| 28/28 [02:08<00:00,  4.58s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.37649:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.37649:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 1 loss 2.47186:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5002[0m
[32m  eval_f1 = 0.1655[0m
[32m  eval_mcc = 0.4696[0m
[32m  eval_precision = 0.2122[0m
[32m  eval_recall = 0.162[0m
[32m  ********************[0m
[32m  Best f1:0.1655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4696[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.47186:   7%|▋         | 2/28 [00:11<02:47,  6.44s/it]epoch 1 loss 2.35087:   7%|▋         | 2/28 [00:11<02:47,  6.44s/it]epoch 1 loss 2.35087:  11%|█         | 3/28 [00:11<01:32,  3.69s/it]epoch 1 loss 2.35466:  11%|█         | 3/28 [00:11<01:32,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.53[0m
[32m  eval_f1 = 0.1843[0m
[32m  eval_mcc = 0.5004[0m
[32m  eval_precision = 0.2366[0m
[32m  eval_recall = 0.1833[0m
[32m  ********************[0m
[32m  Best f1:0.1843[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.35466:  14%|█▍        | 4/28 [00:22<02:34,  6.44s/it]epoch 1 loss 2.31266:  14%|█▍        | 4/28 [00:22<02:34,  6.44s/it]epoch 1 loss 2.31266:  18%|█▊        | 5/28 [00:22<01:38,  4.27s/it]epoch 1 loss 2.26854:  18%|█▊        | 5/28 [00:22<01:38,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5514[0m
[32m  eval_f1 = 0.1963[0m
[32m  eval_mcc = 0.5232[0m
[32m  eval_precision = 0.2422[0m
[32m  eval_recall = 0.1951[0m
[32m  ********************[0m
[32m  Best f1:0.1963[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26854:  21%|██▏       | 6/28 [00:29<01:53,  5.17s/it]epoch 1 loss 2.22124:  21%|██▏       | 6/28 [00:29<01:53,  5.17s/it]epoch 1 loss 2.22124:  25%|██▌       | 7/28 [00:29<01:16,  3.62s/it]epoch 1 loss 2.17999:  25%|██▌       | 7/28 [00:30<01:16,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.568[0m
[32m  eval_f1 = 0.2033[0m
[32m  eval_mcc = 0.5409[0m
[32m  eval_precision = 0.2393[0m
[32m  eval_recall = 0.1998[0m
[32m  ********************[0m
[32m  Best f1:0.2033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17999:  29%|██▊       | 8/28 [00:40<01:54,  5.73s/it]epoch 1 loss 2.15309:  29%|██▊       | 8/28 [00:40<01:54,  5.73s/it]epoch 1 loss 2.15309:  32%|███▏      | 9/28 [00:40<01:17,  4.07s/it]epoch 1 loss 2.12964:  32%|███▏      | 9/28 [00:40<01:17,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5744[0m
[32m  eval_f1 = 0.2077[0m
[32m  eval_mcc = 0.5487[0m
[32m  eval_precision = 0.2455[0m
[32m  eval_recall = 0.2026[0m
[32m  ********************[0m
[32m  Best f1:0.2077[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12964:  36%|███▌      | 10/28 [00:47<01:29,  4.99s/it]epoch 1 loss 2.08492:  36%|███▌      | 10/28 [00:48<01:29,  4.99s/it]epoch 1 loss 2.08492:  39%|███▉      | 11/28 [00:48<01:01,  3.59s/it]epoch 1 loss 2.05365:  39%|███▉      | 11/28 [00:48<01:01,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5829[0m
[32m  eval_f1 = 0.2137[0m
[32m  eval_mcc = 0.559[0m
[32m  eval_precision = 0.2805[0m
[32m  eval_recall = 0.2057[0m
[32m  ********************[0m
[32m  Best f1:0.2137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05365:  43%|████▎     | 12/28 [00:58<01:32,  5.79s/it]epoch 1 loss 2.03076:  43%|████▎     | 12/28 [00:59<01:32,  5.79s/it]epoch 1 loss 2.03076:  46%|████▋     | 13/28 [00:59<01:02,  4.17s/it]epoch 1 loss 2.0192:  46%|████▋     | 13/28 [00:59<01:02,  4.17s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5883[0m
[32m  eval_f1 = 0.2242[0m
[32m  eval_mcc = 0.5664[0m
[32m  eval_precision = 0.2982[0m
[32m  eval_recall = 0.2137[0m
[32m  ********************[0m
[32m  Best f1:0.2242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5664[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0192:  50%|█████     | 14/28 [01:06<01:11,  5.09s/it]epoch 1 loss 1.99837:  50%|█████     | 14/28 [01:06<01:11,  5.09s/it]epoch 1 loss 1.99837:  54%|█████▎    | 15/28 [01:06<00:47,  3.68s/it]epoch 1 loss 1.97736:  54%|█████▎    | 15/28 [01:07<00:47,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5933[0m
[32m  eval_f1 = 0.2359[0m
[32m  eval_mcc = 0.5724[0m
[32m  eval_precision = 0.303[0m
[32m  eval_recall = 0.2221[0m
[32m  ********************[0m
[32m  Best f1:0.2359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97736:  57%|█████▋    | 16/28 [01:13<00:55,  4.65s/it]epoch 1 loss 1.95802:  57%|█████▋    | 16/28 [01:14<00:55,  4.65s/it]epoch 1 loss 1.95802:  61%|██████    | 17/28 [01:14<00:37,  3.38s/it]epoch 1 loss 1.94126:  61%|██████    | 17/28 [01:14<00:37,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6001[0m
[32m  eval_f1 = 0.2485[0m
[32m  eval_mcc = 0.5789[0m
[32m  eval_precision = 0.335[0m
[32m  eval_recall = 0.2327[0m
[32m  ********************[0m
[32m  Best f1:0.2485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5789[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94126:  64%|██████▍   | 18/28 [01:24<00:53,  5.36s/it]epoch 1 loss 1.91947:  64%|██████▍   | 18/28 [01:24<00:53,  5.36s/it]epoch 1 loss 1.91947:  68%|██████▊   | 19/28 [01:24<00:34,  3.87s/it]epoch 1 loss 1.90181:  68%|██████▊   | 19/28 [01:25<00:34,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.61[0m
[32m  eval_f1 = 0.2673[0m
[32m  eval_mcc = 0.5883[0m
[32m  eval_precision = 0.3862[0m
[32m  eval_recall = 0.2493[0m
[32m  ********************[0m
[32m  Best f1:0.2673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5883[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90181:  71%|███████▏  | 20/28 [01:33<00:42,  5.25s/it]epoch 1 loss 1.88698:  71%|███████▏  | 20/28 [01:33<00:42,  5.25s/it]epoch 1 loss 1.88698:  75%|███████▌  | 21/28 [01:33<00:26,  3.81s/it]epoch 1 loss 1.87873:  75%|███████▌  | 21/28 [01:33<00:26,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6118[0m
[32m  eval_f1 = 0.2705[0m
[32m  eval_mcc = 0.589[0m
[32m  eval_precision = 0.3845[0m
[32m  eval_recall = 0.2535[0m
[32m  ********************[0m
[32m  Best f1:0.2705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87873:  79%|███████▊  | 22/28 [01:44<00:35,  5.92s/it]epoch 1 loss 1.8645:  79%|███████▊  | 22/28 [01:44<00:35,  5.92s/it] epoch 1 loss 1.8645:  82%|████████▏ | 23/28 [01:44<00:21,  4.27s/it]epoch 1 loss 1.8537:  82%|████████▏ | 23/28 [01:45<00:21,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6143[0m
[32m  eval_f1 = 0.2747[0m
[32m  eval_mcc = 0.591[0m
[32m  eval_precision = 0.3837[0m
[32m  eval_recall = 0.2584[0m
[32m  ********************[0m
[32m  Best f1:0.2747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8537:  86%|████████▌ | 24/28 [01:55<00:25,  6.26s/it]epoch 1 loss 1.84358:  86%|████████▌ | 24/28 [01:56<00:25,  6.26s/it]epoch 1 loss 1.84358:  89%|████████▉ | 25/28 [01:56<00:13,  4.51s/it]epoch 1 loss 1.83492:  89%|████████▉ | 25/28 [01:56<00:13,  4.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6173[0m
[32m  eval_f1 = 0.2783[0m
[32m  eval_mcc = 0.5942[0m
[32m  eval_precision = 0.3793[0m
[32m  eval_recall = 0.2624[0m
[32m  ********************[0m
[32m  Best f1:0.2783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83492:  93%|█████████▎| 26/28 [02:06<00:12,  6.41s/it]epoch 1 loss 1.82545:  93%|█████████▎| 26/28 [02:07<00:12,  6.41s/it]epoch 1 loss 1.82545:  96%|█████████▋| 27/28 [02:07<00:04,  4.62s/it]epoch 1 loss 1.81989:  96%|█████████▋| 27/28 [02:07<00:04,  4.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.622[0m
[32m  eval_f1 = 0.2871[0m
[32m  eval_mcc = 0.6[0m
[32m  eval_precision = 0.3967[0m
[32m  eval_recall = 0.2686[0m
[32m  ********************[0m
[32m  Best f1:0.2871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81989: 100%|██████████| 28/28 [02:19<00:00,  6.96s/it]epoch 1 loss 1.81989: 100%|██████████| 28/28 [02:19<00:00,  4.99s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.48525:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.48525:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 2 loss 1.50149:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6242[0m
[32m  eval_f1 = 0.3001[0m
[32m  eval_mcc = 0.6033[0m
[32m  eval_precision = 0.4097[0m
[32m  eval_recall = 0.28[0m
[32m  ********************[0m
[32m  Best f1:0.3001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50149:   7%|▋         | 2/28 [00:13<03:24,  7.85s/it]epoch 2 loss 1.48984:   7%|▋         | 2/28 [00:13<03:24,  7.85s/it]epoch 2 loss 1.48984:  11%|█         | 3/28 [00:13<01:51,  4.45s/it]epoch 2 loss 1.48598:  11%|█         | 3/28 [00:14<01:51,  4.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6259[0m
[32m  eval_f1 = 0.3108[0m
[32m  eval_mcc = 0.6059[0m
[32m  eval_precision = 0.427[0m
[32m  eval_recall = 0.2872[0m
[32m  ********************[0m
[32m  Best f1:0.3108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48598:  14%|█▍        | 4/28 [00:25<02:55,  7.33s/it]epoch 2 loss 1.46289:  14%|█▍        | 4/28 [00:26<02:55,  7.33s/it]epoch 2 loss 1.46289:  18%|█▊        | 5/28 [00:26<01:51,  4.84s/it]epoch 2 loss 1.44389:  18%|█▊        | 5/28 [00:26<01:51,  4.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6279[0m
[32m  eval_f1 = 0.314[0m
[32m  eval_mcc = 0.6088[0m
[32m  eval_precision = 0.4381[0m
[32m  eval_recall = 0.2887[0m
[32m  ********************[0m
[32m  Best f1:0.314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44389:  21%|██▏       | 6/28 [00:36<02:31,  6.90s/it]epoch 2 loss 1.4646:  21%|██▏       | 6/28 [00:37<02:31,  6.90s/it] epoch 2 loss 1.4646:  25%|██▌       | 7/28 [00:37<01:40,  4.78s/it]epoch 2 loss 1.46887:  25%|██▌       | 7/28 [00:37<01:40,  4.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6292[0m
[32m  eval_f1 = 0.3154[0m
[32m  eval_mcc = 0.6103[0m
[32m  eval_precision = 0.4412[0m
[32m  eval_recall = 0.2902[0m
[32m  ********************[0m
[32m  Best f1:0.3154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46887:  29%|██▊       | 8/28 [00:47<02:07,  6.36s/it]epoch 2 loss 1.46074:  29%|██▊       | 8/28 [00:47<02:07,  6.36s/it]epoch 2 loss 1.46074:  32%|███▏      | 9/28 [00:47<01:25,  4.50s/it]epoch 2 loss 1.46756:  32%|███▏      | 9/28 [00:47<01:25,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6306[0m
[32m  eval_f1 = 0.3166[0m
[32m  eval_mcc = 0.6114[0m
[32m  eval_precision = 0.4324[0m
[32m  eval_recall = 0.2919[0m
[32m  ********************[0m
[32m  Best f1:0.3166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46756:  36%|███▌      | 10/28 [00:57<01:53,  6.29s/it]epoch 2 loss 1.46796:  36%|███▌      | 10/28 [00:58<01:53,  6.29s/it]epoch 2 loss 1.46796:  39%|███▉      | 11/28 [00:58<01:16,  4.49s/it]epoch 2 loss 1.4695:  39%|███▉      | 11/28 [00:58<01:16,  4.49s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6342[0m
[32m  eval_f1 = 0.3184[0m
[32m  eval_mcc = 0.6142[0m
[32m  eval_precision = 0.429[0m
[32m  eval_recall = 0.2937[0m
[32m  ********************[0m
[32m  Best f1:0.3184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4695:  43%|████▎     | 12/28 [01:08<01:40,  6.28s/it]epoch 2 loss 1.47526:  43%|████▎     | 12/28 [01:09<01:40,  6.28s/it]epoch 2 loss 1.47526:  46%|████▋     | 13/28 [01:09<01:07,  4.51s/it]epoch 2 loss 1.47268:  46%|████▋     | 13/28 [01:09<01:07,  4.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.636[0m
[32m  eval_f1 = 0.3197[0m
[32m  eval_mcc = 0.6154[0m
[32m  eval_precision = 0.4242[0m
[32m  eval_recall = 0.2951[0m
[32m  ********************[0m
[32m  Best f1:0.3197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47268:  50%|█████     | 14/28 [01:17<01:19,  5.71s/it]epoch 2 loss 1.46484:  50%|█████     | 14/28 [01:17<01:19,  5.71s/it]epoch 2 loss 1.46484:  54%|█████▎    | 15/28 [01:17<00:53,  4.11s/it]epoch 2 loss 1.45784:  54%|█████▎    | 15/28 [01:18<00:53,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6371[0m
[32m  eval_f1 = 0.3211[0m
[32m  eval_mcc = 0.6165[0m
[32m  eval_precision = 0.4243[0m
[32m  eval_recall = 0.2965[0m
[32m  ********************[0m
[32m  Best f1:0.3211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45784:  57%|█████▋    | 16/28 [01:28<01:10,  5.91s/it]epoch 2 loss 1.4561:  57%|█████▋    | 16/28 [01:28<01:10,  5.91s/it] epoch 2 loss 1.4561:  61%|██████    | 17/28 [01:28<00:46,  4.26s/it]epoch 2 loss 1.45649:  61%|██████    | 17/28 [01:28<00:46,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6397[0m
[32m  eval_f1 = 0.3253[0m
[32m  eval_mcc = 0.6194[0m
[32m  eval_precision = 0.4417[0m
[32m  eval_recall = 0.2995[0m
[32m  ********************[0m
[32m  Best f1:0.3253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45649:  64%|██████▍   | 18/28 [01:36<00:55,  5.53s/it]epoch 2 loss 1.45194:  64%|██████▍   | 18/28 [01:37<00:55,  5.53s/it]epoch 2 loss 1.45194:  68%|██████▊   | 19/28 [01:37<00:35,  3.99s/it]epoch 2 loss 1.44936:  68%|██████▊   | 19/28 [01:37<00:35,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6432[0m
[32m  eval_f1 = 0.3302[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.4398[0m
[32m  eval_recall = 0.3037[0m
[32m  ********************[0m
[32m  Best f1:0.3302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44936:  71%|███████▏  | 20/28 [01:48<00:48,  6.10s/it]epoch 2 loss 1.45035:  71%|███████▏  | 20/28 [01:48<00:48,  6.10s/it]epoch 2 loss 1.45035:  75%|███████▌  | 21/28 [01:48<00:30,  4.40s/it]epoch 2 loss 1.44885:  75%|███████▌  | 21/28 [01:49<00:30,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6449[0m
[32m  eval_f1 = 0.3351[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4416[0m
[32m  eval_recall = 0.3082[0m
[32m  ********************[0m
[32m  Best f1:0.3351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44885:  79%|███████▊  | 22/28 [01:59<00:37,  6.32s/it]epoch 2 loss 1.44464:  79%|███████▊  | 22/28 [02:00<00:37,  6.32s/it]epoch 2 loss 1.44464:  82%|████████▏ | 23/28 [02:00<00:22,  4.56s/it]epoch 2 loss 1.44335:  82%|████████▏ | 23/28 [02:00<00:22,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6464[0m
[32m  eval_f1 = 0.3382[0m
[32m  eval_mcc = 0.6272[0m
[32m  eval_precision = 0.4437[0m
[32m  eval_recall = 0.3109[0m
[32m  ********************[0m
[32m  Best f1:0.3382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44335:  86%|████████▌ | 24/28 [02:09<00:24,  6.03s/it]epoch 2 loss 1.43735:  86%|████████▌ | 24/28 [02:09<00:24,  6.03s/it]epoch 2 loss 1.43735:  89%|████████▉ | 25/28 [02:09<00:13,  4.35s/it]epoch 2 loss 1.43609:  89%|████████▉ | 25/28 [02:10<00:13,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6456[0m
[32m  eval_f1 = 0.3423[0m
[32m  eval_mcc = 0.6263[0m
[32m  eval_precision = 0.4515[0m
[32m  eval_recall = 0.3139[0m
[32m  ********************[0m
[32m  Best f1:0.3423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.43609:  93%|█████████▎| 26/28 [02:14<00:09,  4.56s/it]epoch 2 loss 1.43153:  93%|█████████▎| 26/28 [02:15<00:09,  4.56s/it]epoch 2 loss 1.43153:  96%|█████████▋| 27/28 [02:15<00:03,  3.31s/it]epoch 2 loss 1.42761:  96%|█████████▋| 27/28 [02:15<00:03,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6457[0m
[32m  eval_f1 = 0.3418[0m
[32m  eval_mcc = 0.626[0m
[32m  eval_precision = 0.4521[0m
[32m  eval_recall = 0.3139[0m

epoch 2 loss 1.42761: 100%|██████████| 28/28 [02:18<00:00,  3.39s/it]epoch 2 loss 1.42761: 100%|██████████| 28/28 [02:18<00:00,  4.96s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.30443:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.30443:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s]epoch 3 loss 1.37161:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6447[0m
[32m  eval_f1 = 0.3391[0m
[32m  eval_mcc = 0.6244[0m
[32m  eval_precision = 0.4446[0m
[32m  eval_recall = 0.312[0m

epoch 3 loss 1.37161:   7%|▋         | 2/28 [00:04<01:02,  2.39s/it]epoch 3 loss 1.3699:   7%|▋         | 2/28 [00:04<01:02,  2.39s/it] epoch 3 loss 1.3699:  11%|█         | 3/28 [00:04<00:37,  1.48s/it]epoch 3 loss 1.36959:  11%|█         | 3/28 [00:04<00:37,  1.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6461[0m
[32m  eval_f1 = 0.3412[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4556[0m
[32m  eval_recall = 0.3143[0m

epoch 3 loss 1.36959:  14%|█▍        | 4/28 [00:08<00:57,  2.39s/it]epoch 3 loss 1.35393:  14%|█▍        | 4/28 [00:08<00:57,  2.39s/it]epoch 3 loss 1.35393:  18%|█▊        | 5/28 [00:08<00:38,  1.67s/it]epoch 3 loss 1.34685:  18%|█▊        | 5/28 [00:09<00:38,  1.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6482[0m
[32m  eval_f1 = 0.3428[0m
[32m  eval_mcc = 0.6279[0m
[32m  eval_precision = 0.4556[0m
[32m  eval_recall = 0.3161[0m
[32m  ********************[0m
[32m  Best f1:0.3428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34685:  21%|██▏       | 6/28 [00:14<01:09,  3.17s/it]epoch 3 loss 1.35226:  21%|██▏       | 6/28 [00:15<01:09,  3.17s/it]epoch 3 loss 1.35226:  25%|██▌       | 7/28 [00:15<00:47,  2.27s/it]epoch 3 loss 1.34688:  25%|██▌       | 7/28 [00:15<00:47,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6495[0m
[32m  eval_f1 = 0.3435[0m
[32m  eval_mcc = 0.6298[0m
[32m  eval_precision = 0.457[0m
[32m  eval_recall = 0.3171[0m
[32m  ********************[0m
[32m  Best f1:0.3435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34688:  29%|██▊       | 8/28 [00:21<01:09,  3.48s/it]epoch 3 loss 1.34629:  29%|██▊       | 8/28 [00:21<01:09,  3.48s/it]epoch 3 loss 1.34629:  32%|███▏      | 9/28 [00:21<00:47,  2.52s/it]epoch 3 loss 1.33759:  32%|███▏      | 9/28 [00:22<00:47,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6508[0m
[32m  eval_f1 = 0.3449[0m
[32m  eval_mcc = 0.6316[0m
[32m  eval_precision = 0.4599[0m
[32m  eval_recall = 0.3183[0m
[32m  ********************[0m
[32m  Best f1:0.3449[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33759:  36%|███▌      | 10/28 [00:27<01:04,  3.56s/it]epoch 3 loss 1.33496:  36%|███▌      | 10/28 [00:28<01:04,  3.56s/it]epoch 3 loss 1.33496:  39%|███▉      | 11/28 [00:28<00:44,  2.60s/it]epoch 3 loss 1.33922:  39%|███▉      | 11/28 [00:28<00:44,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6515[0m
[32m  eval_f1 = 0.3458[0m
[32m  eval_mcc = 0.6326[0m
[32m  eval_precision = 0.462[0m
[32m  eval_recall = 0.3189[0m
[32m  ********************[0m
[32m  Best f1:0.3458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33922:  43%|████▎     | 12/28 [00:33<00:57,  3.61s/it]epoch 3 loss 1.3419:  43%|████▎     | 12/28 [00:34<00:57,  3.61s/it] epoch 3 loss 1.3419:  46%|████▋     | 13/28 [00:34<00:39,  2.65s/it]epoch 3 loss 1.34355:  46%|████▋     | 13/28 [00:34<00:39,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6523[0m
[32m  eval_f1 = 0.3469[0m
[32m  eval_mcc = 0.6335[0m
[32m  eval_precision = 0.4639[0m
[32m  eval_recall = 0.3195[0m
[32m  ********************[0m
[32m  Best f1:0.3469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34355:  50%|█████     | 14/28 [00:39<00:49,  3.54s/it]epoch 3 loss 1.34136:  50%|█████     | 14/28 [00:40<00:49,  3.54s/it]epoch 3 loss 1.34136:  54%|█████▎    | 15/28 [00:40<00:33,  2.60s/it]epoch 3 loss 1.3376:  54%|█████▎    | 15/28 [00:40<00:33,  2.60s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.35[0m
[32m  eval_mcc = 0.6339[0m
[32m  eval_precision = 0.4655[0m
[32m  eval_recall = 0.3215[0m
[32m  ********************[0m
[32m  Best f1:0.35[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3376:  57%|█████▋    | 16/28 [00:46<00:42,  3.54s/it]epoch 3 loss 1.33203:  57%|█████▋    | 16/28 [00:46<00:42,  3.54s/it]epoch 3 loss 1.33203:  61%|██████    | 17/28 [00:46<00:28,  2.60s/it]epoch 3 loss 1.33022:  61%|██████    | 17/28 [00:46<00:28,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.3498[0m
[32m  eval_mcc = 0.6338[0m
[32m  eval_precision = 0.4643[0m
[32m  eval_recall = 0.3211[0m

epoch 3 loss 1.33022:  64%|██████▍   | 18/28 [00:50<00:29,  2.96s/it]epoch 3 loss 1.32526:  64%|██████▍   | 18/28 [00:50<00:29,  2.96s/it]epoch 3 loss 1.32526:  68%|██████▊   | 19/28 [00:50<00:19,  2.19s/it]epoch 3 loss 1.32327:  68%|██████▊   | 19/28 [00:51<00:19,  2.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3491[0m
[32m  eval_mcc = 0.6338[0m
[32m  eval_precision = 0.4633[0m
[32m  eval_recall = 0.3206[0m

epoch 3 loss 1.32327:  71%|███████▏  | 20/28 [00:54<00:21,  2.68s/it]epoch 3 loss 1.32993:  71%|███████▏  | 20/28 [00:54<00:21,  2.68s/it]epoch 3 loss 1.32993:  75%|███████▌  | 21/28 [00:54<00:13,  1.99s/it]epoch 3 loss 1.32981:  75%|███████▌  | 21/28 [00:55<00:13,  1.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6531[0m
[32m  eval_f1 = 0.3501[0m
[32m  eval_mcc = 0.6339[0m
[32m  eval_precision = 0.4633[0m
[32m  eval_recall = 0.3218[0m
[32m  ********************[0m
[32m  Best f1:0.3501[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32981:  79%|███████▊  | 22/28 [01:01<00:19,  3.23s/it]epoch 3 loss 1.33697:  79%|███████▊  | 22/28 [01:01<00:19,  3.23s/it]epoch 3 loss 1.33697:  82%|████████▏ | 23/28 [01:01<00:11,  2.39s/it]epoch 3 loss 1.34013:  82%|████████▏ | 23/28 [01:01<00:11,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6538[0m
[32m  eval_f1 = 0.352[0m
[32m  eval_mcc = 0.6344[0m
[32m  eval_precision = 0.4683[0m
[32m  eval_recall = 0.3235[0m
[32m  ********************[0m
[32m  Best f1:0.352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34013:  86%|████████▌ | 24/28 [01:07<00:13,  3.49s/it]epoch 3 loss 1.34116:  86%|████████▌ | 24/28 [01:07<00:13,  3.49s/it]epoch 3 loss 1.34116:  89%|████████▉ | 25/28 [01:07<00:07,  2.57s/it]epoch 3 loss 1.334:  89%|████████▉ | 25/28 [01:08<00:07,  2.57s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3535[0m
[32m  eval_mcc = 0.6358[0m
[32m  eval_precision = 0.4668[0m
[32m  eval_recall = 0.3255[0m
[32m  ********************[0m
[32m  Best f1:0.3535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.334:  93%|█████████▎| 26/28 [01:14<00:07,  3.68s/it]epoch 3 loss 1.33245:  93%|█████████▎| 26/28 [01:14<00:07,  3.68s/it]epoch 3 loss 1.33245:  96%|█████████▋| 27/28 [01:14<00:02,  2.70s/it]epoch 3 loss 1.33365:  96%|█████████▋| 27/28 [01:14<00:02,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6556[0m
[32m  eval_f1 = 0.3542[0m
[32m  eval_mcc = 0.6362[0m
[32m  eval_precision = 0.467[0m
[32m  eval_recall = 0.3263[0m
[32m  ********************[0m
[32m  Best f1:0.3542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33365: 100%|██████████| 28/28 [01:20<00:00,  3.61s/it]epoch 3 loss 1.33365: 100%|██████████| 28/28 [01:20<00:00,  2.87s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.26348:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.26348:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.33599:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3567[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.4695[0m
[32m  eval_recall = 0.3284[0m
[32m  ********************[0m
[32m  Best f1:0.3567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33599:   7%|▋         | 2/28 [00:06<01:34,  3.65s/it]epoch 4 loss 1.29114:   7%|▋         | 2/28 [00:06<01:34,  3.65s/it]epoch 4 loss 1.29114:  11%|█         | 3/28 [00:06<00:54,  2.18s/it]epoch 4 loss 1.287:  11%|█         | 3/28 [00:07<00:54,  2.18s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6567[0m
[32m  eval_f1 = 0.3574[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4791[0m
[32m  eval_recall = 0.3288[0m
[32m  ********************[0m
[32m  Best f1:0.3574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.287:  14%|█▍        | 4/28 [00:11<01:18,  3.27s/it]epoch 4 loss 1.29586:  14%|█▍        | 4/28 [00:12<01:18,  3.27s/it]epoch 4 loss 1.29586:  18%|█▊        | 5/28 [00:12<00:51,  2.24s/it]epoch 4 loss 1.29912:  18%|█▊        | 5/28 [00:12<00:51,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3581[0m
[32m  eval_mcc = 0.6374[0m
[32m  eval_precision = 0.4781[0m
[32m  eval_recall = 0.3292[0m
[32m  ********************[0m
[32m  Best f1:0.3581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.29912:  21%|██▏       | 6/28 [00:17<01:09,  3.17s/it]epoch 4 loss 1.30703:  21%|██▏       | 6/28 [00:17<01:09,  3.17s/it]epoch 4 loss 1.30703:  25%|██▌       | 7/28 [00:17<00:47,  2.26s/it]epoch 4 loss 1.31055:  25%|██▌       | 7/28 [00:17<00:47,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3592[0m
[32m  eval_mcc = 0.6378[0m
[32m  eval_precision = 0.4893[0m
[32m  eval_recall = 0.3301[0m
[32m  ********************[0m
[32m  Best f1:0.3592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31055:  29%|██▊       | 8/28 [00:23<01:07,  3.36s/it]epoch 4 loss 1.31321:  29%|██▊       | 8/28 [00:23<01:07,  3.36s/it]epoch 4 loss 1.31321:  32%|███▏      | 9/28 [00:23<00:46,  2.44s/it]epoch 4 loss 1.30624:  32%|███▏      | 9/28 [00:24<00:46,  2.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3593[0m
[32m  eval_mcc = 0.6378[0m
[32m  eval_precision = 0.4886[0m
[32m  eval_recall = 0.3302[0m
[32m  ********************[0m
[32m  Best f1:0.3593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.30624:  36%|███▌      | 10/28 [00:29<01:04,  3.59s/it]epoch 4 loss 1.31783:  36%|███▌      | 10/28 [00:30<01:04,  3.59s/it]epoch 4 loss 1.31783:  39%|███▉      | 11/28 [00:30<00:44,  2.62s/it]epoch 4 loss 1.31253:  39%|███▉      | 11/28 [00:30<00:44,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3617[0m
[32m  eval_mcc = 0.6384[0m
[32m  eval_precision = 0.4916[0m
[32m  eval_recall = 0.3319[0m
[32m  ********************[0m
[32m  Best f1:0.3617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31253:  43%|████▎     | 12/28 [00:38<01:07,  4.22s/it]epoch 4 loss 1.31344:  43%|████▎     | 12/28 [00:38<01:07,  4.22s/it]epoch 4 loss 1.31344:  46%|████▋     | 13/28 [00:38<00:46,  3.07s/it]epoch 4 loss 1.31703:  46%|████▋     | 13/28 [00:38<00:46,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6581[0m
[32m  eval_f1 = 0.3623[0m
[32m  eval_mcc = 0.6389[0m
[32m  eval_precision = 0.4914[0m
[32m  eval_recall = 0.3325[0m
[32m  ********************[0m
[32m  Best f1:0.3623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31703:  50%|█████     | 14/28 [00:49<01:16,  5.43s/it]epoch 4 loss 1.31118:  50%|█████     | 14/28 [00:49<01:16,  5.43s/it]epoch 4 loss 1.31118:  54%|█████▎    | 15/28 [00:49<00:50,  3.92s/it]epoch 4 loss 1.31147:  54%|█████▎    | 15/28 [00:50<00:50,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6586[0m
[32m  eval_f1 = 0.362[0m
[32m  eval_mcc = 0.6394[0m
[32m  eval_precision = 0.4912[0m
[32m  eval_recall = 0.3322[0m
[32m  ********************[0m
[32m  Best MCC:0.6394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31147:  57%|█████▋    | 16/28 [00:56<00:57,  4.77s/it]epoch 4 loss 1.31253:  57%|█████▋    | 16/28 [00:56<00:57,  4.77s/it]epoch 4 loss 1.31253:  61%|██████    | 17/28 [00:56<00:38,  3.46s/it]epoch 4 loss 1.314:  61%|██████    | 17/28 [00:57<00:38,  3.46s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.3618[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.492[0m
[32m  eval_recall = 0.3324[0m
[32m  ********************[0m
[32m  Best MCC:0.6396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.314:  64%|██████▍   | 18/28 [01:04<00:47,  4.76s/it]epoch 4 loss 1.31091:  64%|██████▍   | 18/28 [01:05<00:47,  4.76s/it]epoch 4 loss 1.31091:  68%|██████▊   | 19/28 [01:05<00:31,  3.46s/it]epoch 4 loss 1.31212:  68%|██████▊   | 19/28 [01:05<00:31,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6587[0m
[32m  eval_f1 = 0.3613[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.4915[0m
[32m  eval_recall = 0.3321[0m

epoch 4 loss 1.31212:  71%|███████▏  | 20/28 [01:08<00:28,  3.56s/it]epoch 4 loss 1.30579:  71%|███████▏  | 20/28 [01:09<00:28,  3.56s/it]epoch 4 loss 1.30579:  75%|███████▌  | 21/28 [01:09<00:18,  2.61s/it]epoch 4 loss 1.30504:  75%|███████▌  | 21/28 [01:09<00:18,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6584[0m
[32m  eval_f1 = 0.3605[0m
[32m  eval_mcc = 0.6393[0m
[32m  eval_precision = 0.4919[0m
[32m  eval_recall = 0.3313[0m

epoch 4 loss 1.30504:  79%|███████▊  | 22/28 [01:13<00:17,  2.97s/it]epoch 4 loss 1.30057:  79%|███████▊  | 22/28 [01:13<00:17,  2.97s/it]epoch 4 loss 1.30057:  82%|████████▏ | 23/28 [01:13<00:10,  2.20s/it]epoch 4 loss 1.30129:  82%|████████▏ | 23/28 [01:13<00:10,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6583[0m
[32m  eval_f1 = 0.361[0m
[32m  eval_mcc = 0.6393[0m
[32m  eval_precision = 0.4926[0m
[32m  eval_recall = 0.3317[0m

epoch 4 loss 1.30129:  86%|████████▌ | 24/28 [01:17<00:10,  2.68s/it]epoch 4 loss 1.30298:  86%|████████▌ | 24/28 [01:17<00:10,  2.68s/it]epoch 4 loss 1.30298:  89%|████████▉ | 25/28 [01:17<00:05,  2.00s/it]epoch 4 loss 1.29985:  89%|████████▉ | 25/28 [01:18<00:05,  2.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.361[0m
[32m  eval_mcc = 0.639[0m
[32m  eval_precision = 0.4926[0m
[32m  eval_recall = 0.3316[0m

epoch 4 loss 1.29985:  93%|█████████▎| 26/28 [01:21<00:05,  2.54s/it]epoch 4 loss 1.29561:  93%|█████████▎| 26/28 [01:21<00:05,  2.54s/it]epoch 4 loss 1.29561:  96%|█████████▋| 27/28 [01:21<00:01,  1.90s/it]epoch 4 loss 1.29486:  96%|█████████▋| 27/28 [01:22<00:01,  1.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6578[0m
[32m  eval_f1 = 0.361[0m
[32m  eval_mcc = 0.6387[0m
[32m  eval_precision = 0.4928[0m
[32m  eval_recall = 0.3315[0m

epoch 4 loss 1.29486: 100%|██████████| 28/28 [01:25<00:00,  2.41s/it]epoch 4 loss 1.29486: 100%|██████████| 28/28 [01:25<00:00,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6581[0m
[32m  eval_f1 = 0.3623[0m
[32m  eval_mcc = 0.6389[0m
[32m  eval_precision = 0.4914[0m
[32m  eval_recall = 0.3325[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6437[0m
[32m  eval_f1 = 0.3205[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.4388[0m
[32m  eval_recall = 0.2957[0m

