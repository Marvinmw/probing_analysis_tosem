[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=6, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/3/layer_6', posratio=0.5, seed=969, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.11279:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.11279:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.11931:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0073[0m
[32m  eval_f1 = 0.0015[0m
[32m  eval_mcc = -0.001[0m
[32m  eval_precision = 0.0092[0m
[32m  eval_recall = 0.0035[0m
[32m  ********************[0m
[32m  Best f1:0.0015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.11931:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it]epoch 0 loss 5.1094:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it] epoch 0 loss 5.1094:  11%|█         | 3/28 [00:05<00:43,  1.76s/it]epoch 0 loss 5.09338:  11%|█         | 3/28 [00:05<00:43,  1.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0138[0m
[32m  eval_f1 = 0.0027[0m
[32m  eval_mcc = -0.0007[0m
[32m  eval_precision = 0.0105[0m
[32m  eval_recall = 0.0043[0m
[32m  ********************[0m
[32m  Best f1:0.0027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.09338:  14%|█▍        | 4/28 [00:13<01:39,  4.13s/it]epoch 0 loss 5.06839:  14%|█▍        | 4/28 [00:13<01:39,  4.13s/it]epoch 0 loss 5.06839:  18%|█▊        | 5/28 [00:13<01:04,  2.79s/it]epoch 0 loss 5.04022:  18%|█▊        | 5/28 [00:14<01:04,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0323[0m
[32m  eval_f1 = 0.0054[0m
[32m  eval_mcc = 0.0036[0m
[32m  eval_precision = 0.0109[0m
[32m  eval_recall = 0.0064[0m
[32m  ********************[0m
[32m  Best f1:0.0054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04022:  21%|██▏       | 6/28 [00:21<01:42,  4.64s/it]epoch 0 loss 5.00901:  21%|██▏       | 6/28 [00:22<01:42,  4.64s/it]epoch 0 loss 5.00901:  25%|██▌       | 7/28 [00:22<01:08,  3.26s/it]epoch 0 loss 4.97201:  25%|██▌       | 7/28 [00:22<01:08,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0801[0m
[32m  eval_f1 = 0.0107[0m
[32m  eval_mcc = 0.03[0m
[32m  eval_precision = 0.0131[0m
[32m  eval_recall = 0.0122[0m
[32m  ********************[0m
[32m  Best f1:0.0107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.03[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.97201:  29%|██▊       | 8/28 [00:31<01:44,  5.23s/it]epoch 0 loss 4.92925:  29%|██▊       | 8/28 [00:32<01:44,  5.23s/it]epoch 0 loss 4.92925:  32%|███▏      | 9/28 [00:32<01:10,  3.73s/it]epoch 0 loss 4.88008:  32%|███▏      | 9/28 [00:32<01:10,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1169[0m
[32m  eval_f1 = 0.0159[0m
[32m  eval_mcc = 0.058[0m
[32m  eval_precision = 0.02[0m
[32m  eval_recall = 0.0186[0m
[32m  ********************[0m
[32m  Best f1:0.0159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.88008:  36%|███▌      | 10/28 [00:42<01:45,  5.88s/it]epoch 0 loss 4.8264:  36%|███▌      | 10/28 [00:43<01:45,  5.88s/it] epoch 0 loss 4.8264:  39%|███▉      | 11/28 [00:43<01:11,  4.21s/it]epoch 0 loss 4.77282:  39%|███▉      | 11/28 [00:43<01:11,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1514[0m
[32m  eval_f1 = 0.019[0m
[32m  eval_mcc = 0.0925[0m
[32m  eval_precision = 0.0244[0m
[32m  eval_recall = 0.0242[0m
[32m  ********************[0m
[32m  Best f1:0.019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.77282:  43%|████▎     | 12/28 [00:50<01:20,  5.06s/it]epoch 0 loss 4.71091:  43%|████▎     | 12/28 [00:50<01:20,  5.06s/it]epoch 0 loss 4.71091:  46%|████▋     | 13/28 [00:50<00:54,  3.65s/it]epoch 0 loss 4.64936:  46%|████▋     | 13/28 [00:51<00:54,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1986[0m
[32m  eval_f1 = 0.024[0m
[32m  eval_mcc = 0.1411[0m
[32m  eval_precision = 0.0342[0m
[32m  eval_recall = 0.0319[0m
[32m  ********************[0m
[32m  Best f1:0.024[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1411[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.64936:  50%|█████     | 14/28 [01:01<01:20,  5.73s/it]epoch 0 loss 4.58385:  50%|█████     | 14/28 [01:01<01:20,  5.73s/it]epoch 0 loss 4.58385:  54%|█████▎    | 15/28 [01:01<00:53,  4.13s/it]epoch 0 loss 4.51719:  54%|█████▎    | 15/28 [01:02<00:53,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2477[0m
[32m  eval_f1 = 0.0279[0m
[32m  eval_mcc = 0.1934[0m
[32m  eval_precision = 0.0275[0m
[32m  eval_recall = 0.0381[0m
[32m  ********************[0m
[32m  Best f1:0.0279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.51719:  57%|█████▋    | 16/28 [01:10<01:05,  5.48s/it]epoch 0 loss 4.44981:  57%|█████▋    | 16/28 [01:10<01:05,  5.48s/it]epoch 0 loss 4.44981:  61%|██████    | 17/28 [01:10<00:43,  3.96s/it]epoch 0 loss 4.38192:  61%|██████    | 17/28 [01:11<00:43,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2797[0m
[32m  eval_f1 = 0.0312[0m
[32m  eval_mcc = 0.2293[0m
[32m  eval_precision = 0.0326[0m
[32m  eval_recall = 0.042[0m
[32m  ********************[0m
[32m  Best f1:0.0312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.38192:  64%|██████▍   | 18/28 [01:21<00:59,  5.97s/it]epoch 0 loss 4.31495:  64%|██████▍   | 18/28 [01:21<00:59,  5.97s/it]epoch 0 loss 4.31495:  68%|██████▊   | 19/28 [01:21<00:38,  4.30s/it]epoch 0 loss 4.25639:  68%|██████▊   | 19/28 [01:22<00:38,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.294[0m
[32m  eval_f1 = 0.037[0m
[32m  eval_mcc = 0.2453[0m
[32m  eval_precision = 0.0792[0m
[32m  eval_recall = 0.0451[0m
[32m  ********************[0m
[32m  Best f1:0.037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.25639:  71%|███████▏  | 20/28 [01:28<00:41,  5.13s/it]epoch 0 loss 4.19143:  71%|███████▏  | 20/28 [01:29<00:41,  5.13s/it]epoch 0 loss 4.19143:  75%|███████▌  | 21/28 [01:29<00:26,  3.72s/it]epoch 0 loss 4.13731:  75%|███████▌  | 21/28 [01:29<00:26,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3218[0m
[32m  eval_f1 = 0.059[0m
[32m  eval_mcc = 0.2749[0m
[32m  eval_precision = 0.1235[0m
[32m  eval_recall = 0.0607[0m
[32m  ********************[0m
[32m  Best f1:0.059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2749[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.13731:  79%|███████▊  | 22/28 [01:36<00:28,  4.69s/it]epoch 0 loss 4.07606:  79%|███████▊  | 22/28 [01:36<00:28,  4.69s/it]epoch 0 loss 4.07606:  82%|████████▏ | 23/28 [01:36<00:17,  3.41s/it]epoch 0 loss 4.01741:  82%|████████▏ | 23/28 [01:37<00:17,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.374[0m
[32m  eval_f1 = 0.0965[0m
[32m  eval_mcc = 0.3308[0m
[32m  eval_precision = 0.1555[0m
[32m  eval_recall = 0.0908[0m
[32m  ********************[0m
[32m  Best f1:0.0965[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.01741:  86%|████████▌ | 24/28 [01:42<00:16,  4.24s/it]epoch 0 loss 3.96133:  86%|████████▌ | 24/28 [01:43<00:16,  4.24s/it]epoch 0 loss 3.96133:  89%|████████▉ | 25/28 [01:43<00:09,  3.10s/it]epoch 0 loss 3.90673:  89%|████████▉ | 25/28 [01:43<00:09,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4225[0m
[32m  eval_f1 = 0.1187[0m
[32m  eval_mcc = 0.3908[0m
[32m  eval_precision = 0.1863[0m
[32m  eval_recall = 0.113[0m
[32m  ********************[0m
[32m  Best f1:0.1187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3908[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.90673:  93%|█████████▎| 26/28 [01:49<00:08,  4.06s/it]epoch 0 loss 3.849:  93%|█████████▎| 26/28 [01:50<00:08,  4.06s/it]  epoch 0 loss 3.849:  96%|█████████▋| 27/28 [01:50<00:02,  2.97s/it]epoch 0 loss 3.79184:  96%|█████████▋| 27/28 [01:50<00:02,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4598[0m
[32m  eval_f1 = 0.1351[0m
[32m  eval_mcc = 0.4356[0m
[32m  eval_precision = 0.2013[0m
[32m  eval_recall = 0.1314[0m
[32m  ********************[0m
[32m  Best f1:0.1351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.79184: 100%|██████████| 28/28 [01:56<00:00,  3.88s/it]epoch 0 loss 3.79184: 100%|██████████| 28/28 [01:56<00:00,  4.15s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.30459:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.30459:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 1 loss 2.39961:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5068[0m
[32m  eval_f1 = 0.1641[0m
[32m  eval_mcc = 0.4819[0m
[32m  eval_precision = 0.246[0m
[32m  eval_recall = 0.1601[0m
[32m  ********************[0m
[32m  Best f1:0.1641[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.39961:   7%|▋         | 2/28 [00:06<01:39,  3.83s/it]epoch 1 loss 2.27768:   7%|▋         | 2/28 [00:07<01:39,  3.83s/it]epoch 1 loss 2.27768:  11%|█         | 3/28 [00:07<00:56,  2.28s/it]epoch 1 loss 2.28471:  11%|█         | 3/28 [00:07<00:56,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5358[0m
[32m  eval_f1 = 0.1857[0m
[32m  eval_mcc = 0.5088[0m
[32m  eval_precision = 0.2317[0m
[32m  eval_recall = 0.1843[0m
[32m  ********************[0m
[32m  Best f1:0.1857[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.28471:  14%|█▍        | 4/28 [00:13<01:32,  3.86s/it]epoch 1 loss 2.24189:  14%|█▍        | 4/28 [00:13<01:32,  3.86s/it]epoch 1 loss 2.24189:  18%|█▊        | 5/28 [00:13<01:00,  2.62s/it]epoch 1 loss 2.19706:  18%|█▊        | 5/28 [00:14<01:00,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5622[0m
[32m  eval_f1 = 0.2014[0m
[32m  eval_mcc = 0.5356[0m
[32m  eval_precision = 0.2396[0m
[32m  eval_recall = 0.2009[0m
[32m  ********************[0m
[32m  Best f1:0.2014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.19706:  21%|██▏       | 6/28 [00:20<01:24,  3.85s/it]epoch 1 loss 2.15142:  21%|██▏       | 6/28 [00:20<01:24,  3.85s/it]epoch 1 loss 2.15142:  25%|██▌       | 7/28 [00:20<00:57,  2.73s/it]epoch 1 loss 2.11116:  25%|██▌       | 7/28 [00:20<00:57,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5789[0m
[32m  eval_f1 = 0.2107[0m
[32m  eval_mcc = 0.5527[0m
[32m  eval_precision = 0.2532[0m
[32m  eval_recall = 0.2073[0m
[32m  ********************[0m
[32m  Best f1:0.2107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5527[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11116:  29%|██▊       | 8/28 [00:33<01:58,  5.93s/it]epoch 1 loss 2.08469:  29%|██▊       | 8/28 [00:33<01:58,  5.93s/it]epoch 1 loss 2.08469:  32%|███▏      | 9/28 [00:33<01:20,  4.21s/it]epoch 1 loss 2.06196:  32%|███▏      | 9/28 [00:34<01:20,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.585[0m
[32m  eval_f1 = 0.2146[0m
[32m  eval_mcc = 0.5591[0m
[32m  eval_precision = 0.2683[0m
[32m  eval_recall = 0.2094[0m
[32m  ********************[0m
[32m  Best f1:0.2146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.06196:  36%|███▌      | 10/28 [00:48<02:14,  7.45s/it]epoch 1 loss 2.01779:  36%|███▌      | 10/28 [00:48<02:14,  7.45s/it]epoch 1 loss 2.01779:  39%|███▉      | 11/28 [00:48<01:30,  5.30s/it]epoch 1 loss 1.98731:  39%|███▉      | 11/28 [00:49<01:30,  5.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5926[0m
[32m  eval_f1 = 0.2298[0m
[32m  eval_mcc = 0.5676[0m
[32m  eval_precision = 0.3044[0m
[32m  eval_recall = 0.2193[0m
[32m  ********************[0m
[32m  Best f1:0.2298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5676[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98731:  43%|████▎     | 12/28 [01:04<02:16,  8.55s/it]epoch 1 loss 1.96527:  43%|████▎     | 12/28 [01:05<02:16,  8.55s/it]epoch 1 loss 1.96527:  46%|████▋     | 13/28 [01:05<01:31,  6.08s/it]epoch 1 loss 1.95408:  46%|████▋     | 13/28 [01:05<01:31,  6.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5957[0m
[32m  eval_f1 = 0.2399[0m
[32m  eval_mcc = 0.5723[0m
[32m  eval_precision = 0.3094[0m
[32m  eval_recall = 0.2247[0m
[32m  ********************[0m
[32m  Best f1:0.2399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95408:  50%|█████     | 14/28 [01:17<01:51,  7.95s/it]epoch 1 loss 1.93294:  50%|█████     | 14/28 [01:17<01:51,  7.95s/it]epoch 1 loss 1.93294:  54%|█████▎    | 15/28 [01:17<01:13,  5.68s/it]epoch 1 loss 1.91226:  54%|█████▎    | 15/28 [01:18<01:13,  5.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6002[0m
[32m  eval_f1 = 0.2483[0m
[32m  eval_mcc = 0.5791[0m
[32m  eval_precision = 0.3354[0m
[32m  eval_recall = 0.2309[0m
[32m  ********************[0m
[32m  Best f1:0.2483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5791[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91226:  57%|█████▋    | 16/28 [01:29<01:31,  7.59s/it]epoch 1 loss 1.8938:  57%|█████▋    | 16/28 [01:30<01:31,  7.59s/it] epoch 1 loss 1.8938:  61%|██████    | 17/28 [01:30<00:59,  5.43s/it]epoch 1 loss 1.87778:  61%|██████    | 17/28 [01:30<00:59,  5.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.605[0m
[32m  eval_f1 = 0.2572[0m
[32m  eval_mcc = 0.5848[0m
[32m  eval_precision = 0.3531[0m
[32m  eval_recall = 0.2378[0m
[32m  ********************[0m
[32m  Best f1:0.2572[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87778:  64%|██████▍   | 18/28 [01:41<01:13,  7.31s/it]epoch 1 loss 1.8566:  64%|██████▍   | 18/28 [01:42<01:13,  7.31s/it] epoch 1 loss 1.8566:  68%|██████▊   | 19/28 [01:42<00:47,  5.24s/it]epoch 1 loss 1.8397:  68%|██████▊   | 19/28 [01:42<00:47,  5.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6133[0m
[32m  eval_f1 = 0.2747[0m
[32m  eval_mcc = 0.5932[0m
[32m  eval_precision = 0.3847[0m
[32m  eval_recall = 0.2531[0m
[32m  ********************[0m
[32m  Best f1:0.2747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5932[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8397:  71%|███████▏  | 20/28 [01:53<00:56,  7.09s/it]epoch 1 loss 1.82542:  71%|███████▏  | 20/28 [01:54<00:56,  7.09s/it]epoch 1 loss 1.82542:  75%|███████▌  | 21/28 [01:54<00:35,  5.09s/it]epoch 1 loss 1.81761:  75%|███████▌  | 21/28 [01:54<00:35,  5.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6173[0m
[32m  eval_f1 = 0.2914[0m
[32m  eval_mcc = 0.5961[0m
[32m  eval_precision = 0.4089[0m
[32m  eval_recall = 0.2696[0m
[32m  ********************[0m
[32m  Best f1:0.2914[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5961[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81761:  79%|███████▊  | 22/28 [02:05<00:41,  6.94s/it]epoch 1 loss 1.80385:  79%|███████▊  | 22/28 [02:05<00:41,  6.94s/it]epoch 1 loss 1.80385:  82%|████████▏ | 23/28 [02:05<00:24,  4.99s/it]epoch 1 loss 1.79375:  82%|████████▏ | 23/28 [02:06<00:24,  4.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6184[0m
[32m  eval_f1 = 0.2968[0m
[32m  eval_mcc = 0.5958[0m
[32m  eval_precision = 0.3956[0m
[32m  eval_recall = 0.2774[0m
[32m  ********************[0m
[32m  Best f1:0.2968[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 1 loss 1.79375:  86%|████████▌ | 24/28 [02:13<00:22,  5.73s/it]epoch 1 loss 1.78362:  86%|████████▌ | 24/28 [02:13<00:22,  5.73s/it]epoch 1 loss 1.78362:  89%|████████▉ | 25/28 [02:13<00:12,  4.14s/it]epoch 1 loss 1.77529:  89%|████████▉ | 25/28 [02:14<00:12,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6209[0m
[32m  eval_f1 = 0.2992[0m
[32m  eval_mcc = 0.5981[0m
[32m  eval_precision = 0.3898[0m
[32m  eval_recall = 0.2803[0m
[32m  ********************[0m
[32m  Best f1:0.2992[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5981[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77529:  93%|█████████▎| 26/28 [02:24<00:12,  6.17s/it]epoch 1 loss 1.76578:  93%|█████████▎| 26/28 [02:25<00:12,  6.17s/it]epoch 1 loss 1.76578:  96%|█████████▋| 27/28 [02:25<00:04,  4.45s/it]epoch 1 loss 1.76024:  96%|█████████▋| 27/28 [02:25<00:04,  4.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6259[0m
[32m  eval_f1 = 0.3049[0m
[32m  eval_mcc = 0.6038[0m
[32m  eval_precision = 0.3945[0m
[32m  eval_recall = 0.2853[0m
[32m  ********************[0m
[32m  Best f1:0.3049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76024: 100%|██████████| 28/28 [02:32<00:00,  5.19s/it]epoch 1 loss 1.76024: 100%|██████████| 28/28 [02:32<00:00,  5.43s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.43998:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.43998:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 2 loss 1.45421:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6288[0m
[32m  eval_f1 = 0.3135[0m
[32m  eval_mcc = 0.6073[0m
[32m  eval_precision = 0.4105[0m
[32m  eval_recall = 0.2916[0m
[32m  ********************[0m
[32m  Best f1:0.3135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45421:   7%|▋         | 2/28 [00:07<01:52,  4.31s/it]epoch 2 loss 1.44045:   7%|▋         | 2/28 [00:07<01:52,  4.31s/it]epoch 2 loss 1.44045:  11%|█         | 3/28 [00:07<01:03,  2.53s/it]epoch 2 loss 1.43644:  11%|█         | 3/28 [00:08<01:03,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6299[0m
[32m  eval_f1 = 0.3176[0m
[32m  eval_mcc = 0.6092[0m
[32m  eval_precision = 0.4183[0m
[32m  eval_recall = 0.2952[0m
[32m  ********************[0m
[32m  Best f1:0.3176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43644:  14%|█▍        | 4/28 [00:18<02:16,  5.70s/it]epoch 2 loss 1.41427:  14%|█▍        | 4/28 [00:18<02:16,  5.70s/it]epoch 2 loss 1.41427:  18%|█▊        | 5/28 [00:18<01:27,  3.80s/it]epoch 2 loss 1.39591:  18%|█▊        | 5/28 [00:19<01:27,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6318[0m
[32m  eval_f1 = 0.3192[0m
[32m  eval_mcc = 0.6124[0m
[32m  eval_precision = 0.4399[0m
[32m  eval_recall = 0.2955[0m
[32m  ********************[0m
[32m  Best f1:0.3192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6124[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39591:  21%|██▏       | 6/28 [00:26<01:49,  4.97s/it]epoch 2 loss 1.41627:  21%|██▏       | 6/28 [00:26<01:49,  4.97s/it]epoch 2 loss 1.41627:  25%|██▌       | 7/28 [00:26<01:13,  3.49s/it]epoch 2 loss 1.42047:  25%|██▌       | 7/28 [00:26<01:13,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6324[0m
[32m  eval_f1 = 0.3199[0m
[32m  eval_mcc = 0.6137[0m
[32m  eval_precision = 0.4458[0m
[32m  eval_recall = 0.296[0m
[32m  ********************[0m
[32m  Best f1:0.3199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42047:  29%|██▊       | 8/28 [00:37<01:55,  5.78s/it]epoch 2 loss 1.41255:  29%|██▊       | 8/28 [00:37<01:55,  5.78s/it]epoch 2 loss 1.41255:  32%|███▏      | 9/28 [00:37<01:17,  4.10s/it]epoch 2 loss 1.41892:  32%|███▏      | 9/28 [00:38<01:17,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6343[0m
[32m  eval_f1 = 0.3211[0m
[32m  eval_mcc = 0.6159[0m
[32m  eval_precision = 0.4393[0m
[32m  eval_recall = 0.2964[0m
[32m  ********************[0m
[32m  Best f1:0.3211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41892:  36%|███▌      | 10/28 [00:44<01:31,  5.06s/it]epoch 2 loss 1.4198:  36%|███▌      | 10/28 [00:45<01:31,  5.06s/it] epoch 2 loss 1.4198:  39%|███▉      | 11/28 [00:45<01:01,  3.64s/it]epoch 2 loss 1.42078:  39%|███▉      | 11/28 [00:45<01:01,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6373[0m
[32m  eval_f1 = 0.3241[0m
[32m  eval_mcc = 0.6183[0m
[32m  eval_precision = 0.4387[0m
[32m  eval_recall = 0.299[0m
[32m  ********************[0m
[32m  Best f1:0.3241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42078:  43%|████▎     | 12/28 [00:56<01:33,  5.82s/it]epoch 2 loss 1.42629:  43%|████▎     | 12/28 [00:56<01:33,  5.82s/it]epoch 2 loss 1.42629:  46%|████▋     | 13/28 [00:56<01:02,  4.19s/it]epoch 2 loss 1.42353:  46%|████▋     | 13/28 [00:56<01:02,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6393[0m
[32m  eval_f1 = 0.3273[0m
[32m  eval_mcc = 0.6198[0m
[32m  eval_precision = 0.4369[0m
[32m  eval_recall = 0.3014[0m
[32m  ********************[0m
[32m  Best f1:0.3273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42353:  50%|█████     | 14/28 [01:03<01:11,  5.13s/it]epoch 2 loss 1.41618:  50%|█████     | 14/28 [01:04<01:11,  5.13s/it]epoch 2 loss 1.41618:  54%|█████▎    | 15/28 [01:04<00:48,  3.71s/it]epoch 2 loss 1.40912:  54%|█████▎    | 15/28 [01:04<00:48,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6411[0m
[32m  eval_f1 = 0.3315[0m
[32m  eval_mcc = 0.6211[0m
[32m  eval_precision = 0.4472[0m
[32m  eval_recall = 0.3051[0m
[32m  ********************[0m
[32m  Best f1:0.3315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40912:  57%|█████▋    | 16/28 [01:14<01:08,  5.74s/it]epoch 2 loss 1.4078:  57%|█████▋    | 16/28 [01:15<01:08,  5.74s/it] epoch 2 loss 1.4078:  61%|██████    | 17/28 [01:15<00:45,  4.14s/it]epoch 2 loss 1.40796:  61%|██████    | 17/28 [01:15<00:45,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6447[0m
[32m  eval_f1 = 0.3352[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.4371[0m
[32m  eval_recall = 0.309[0m
[32m  ********************[0m
[32m  Best f1:0.3352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40796:  64%|██████▍   | 18/28 [01:22<00:50,  5.04s/it]epoch 2 loss 1.40372:  64%|██████▍   | 18/28 [01:22<00:50,  5.04s/it]epoch 2 loss 1.40372:  68%|██████▊   | 19/28 [01:22<00:32,  3.65s/it]epoch 2 loss 1.40127:  68%|██████▊   | 19/28 [01:23<00:32,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6469[0m
[32m  eval_f1 = 0.3387[0m
[32m  eval_mcc = 0.627[0m
[32m  eval_precision = 0.4464[0m
[32m  eval_recall = 0.3124[0m
[32m  ********************[0m
[32m  Best f1:0.3387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40127:  71%|███████▏  | 20/28 [01:33<00:46,  5.86s/it]epoch 2 loss 1.40263:  71%|███████▏  | 20/28 [01:34<00:46,  5.86s/it]epoch 2 loss 1.40263:  75%|███████▌  | 21/28 [01:34<00:29,  4.23s/it]epoch 2 loss 1.40098:  75%|███████▌  | 21/28 [01:34<00:29,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3424[0m
[32m  eval_mcc = 0.63[0m
[32m  eval_precision = 0.4647[0m
[32m  eval_recall = 0.3155[0m
[32m  ********************[0m
[32m  Best f1:0.3424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.63[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40098:  79%|███████▊  | 22/28 [01:39<00:27,  4.63s/it]epoch 2 loss 1.3971:  79%|███████▊  | 22/28 [01:40<00:27,  4.63s/it] epoch 2 loss 1.3971:  82%|████████▏ | 23/28 [01:40<00:16,  3.37s/it]epoch 2 loss 1.39601:  82%|████████▏ | 23/28 [01:40<00:16,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.65[0m
[32m  eval_f1 = 0.3447[0m
[32m  eval_mcc = 0.6305[0m
[32m  eval_precision = 0.4578[0m
[32m  eval_recall = 0.3177[0m
[32m  ********************[0m
[32m  Best f1:0.3447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39601:  86%|████████▌ | 24/28 [01:46<00:16,  4.15s/it]epoch 2 loss 1.39015:  86%|████████▌ | 24/28 [01:46<00:16,  4.15s/it]epoch 2 loss 1.39015:  89%|████████▉ | 25/28 [01:46<00:09,  3.03s/it]epoch 2 loss 1.38855:  89%|████████▉ | 25/28 [01:46<00:09,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6516[0m
[32m  eval_f1 = 0.3457[0m
[32m  eval_mcc = 0.6321[0m
[32m  eval_precision = 0.4589[0m
[32m  eval_recall = 0.3191[0m
[32m  ********************[0m
[32m  Best f1:0.3457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38855:  93%|█████████▎| 26/28 [01:52<00:08,  4.02s/it]epoch 2 loss 1.38418:  93%|█████████▎| 26/28 [01:53<00:08,  4.02s/it]epoch 2 loss 1.38418:  96%|█████████▋| 27/28 [01:53<00:02,  2.95s/it]epoch 2 loss 1.38054:  96%|█████████▋| 27/28 [01:53<00:02,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6519[0m
[32m  eval_f1 = 0.3446[0m
[32m  eval_mcc = 0.6323[0m
[32m  eval_precision = 0.4593[0m
[32m  eval_recall = 0.3182[0m
[32m  ********************[0m
[32m  Best MCC:0.6323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38054: 100%|██████████| 28/28 [01:58<00:00,  3.53s/it]epoch 2 loss 1.38054: 100%|██████████| 28/28 [01:58<00:00,  4.22s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.25992:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.25992:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s]epoch 3 loss 1.32382:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6527[0m
[32m  eval_f1 = 0.3438[0m
[32m  eval_mcc = 0.633[0m
[32m  eval_precision = 0.4624[0m
[32m  eval_recall = 0.3178[0m
[32m  ********************[0m
[32m  Best MCC:0.633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32382:   7%|▋         | 2/28 [00:05<01:22,  3.17s/it]epoch 3 loss 1.3233:   7%|▋         | 2/28 [00:05<01:22,  3.17s/it] epoch 3 loss 1.3233:  11%|█         | 3/28 [00:05<00:47,  1.91s/it]epoch 3 loss 1.32471:  11%|█         | 3/28 [00:06<00:47,  1.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6527[0m
[32m  eval_f1 = 0.3447[0m
[32m  eval_mcc = 0.6329[0m
[32m  eval_precision = 0.4611[0m
[32m  eval_recall = 0.3192[0m

epoch 3 loss 1.32471:  14%|█▍        | 4/28 [00:09<01:03,  2.65s/it]epoch 3 loss 1.30949:  14%|█▍        | 4/28 [00:10<01:03,  2.65s/it]epoch 3 loss 1.30949:  18%|█▊        | 5/28 [00:10<00:42,  1.84s/it]epoch 3 loss 1.30203:  18%|█▊        | 5/28 [00:10<00:42,  1.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6544[0m
[32m  eval_f1 = 0.3454[0m
[32m  eval_mcc = 0.6348[0m
[32m  eval_precision = 0.4602[0m
[32m  eval_recall = 0.3205[0m
[32m  ********************[0m
[32m  Best MCC:0.6348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30203:  21%|██▏       | 6/28 [00:15<01:04,  2.94s/it]epoch 3 loss 1.30767:  21%|██▏       | 6/28 [00:15<01:04,  2.94s/it]epoch 3 loss 1.30767:  25%|██▌       | 7/28 [00:15<00:44,  2.11s/it]epoch 3 loss 1.30184:  25%|██▌       | 7/28 [00:15<00:44,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6546[0m
[32m  eval_f1 = 0.3469[0m
[32m  eval_mcc = 0.6354[0m
[32m  eval_precision = 0.4583[0m
[32m  eval_recall = 0.322[0m
[32m  ********************[0m
[32m  Best f1:0.3469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30184:  29%|██▊       | 8/28 [00:21<01:08,  3.44s/it]epoch 3 loss 1.30049:  29%|██▊       | 8/28 [00:22<01:08,  3.44s/it]epoch 3 loss 1.30049:  32%|███▏      | 9/28 [00:22<00:47,  2.50s/it]epoch 3 loss 1.29209:  32%|███▏      | 9/28 [00:22<00:47,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6564[0m
[32m  eval_f1 = 0.3505[0m
[32m  eval_mcc = 0.6378[0m
[32m  eval_precision = 0.4762[0m
[32m  eval_recall = 0.3242[0m
[32m  ********************[0m
[32m  Best f1:0.3505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29209:  36%|███▌      | 10/28 [00:28<01:06,  3.70s/it]epoch 3 loss 1.28907:  36%|███▌      | 10/28 [00:29<01:06,  3.70s/it]epoch 3 loss 1.28907:  39%|███▉      | 11/28 [00:29<00:45,  2.70s/it]epoch 3 loss 1.29303:  39%|███▉      | 11/28 [00:29<00:45,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.353[0m
[32m  eval_mcc = 0.6405[0m
[32m  eval_precision = 0.475[0m
[32m  eval_recall = 0.3259[0m
[32m  ********************[0m
[32m  Best f1:0.353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29303:  43%|████▎     | 12/28 [00:34<00:58,  3.66s/it]epoch 3 loss 1.2958:  43%|████▎     | 12/28 [00:35<00:58,  3.66s/it] epoch 3 loss 1.2958:  46%|████▋     | 13/28 [00:35<00:40,  2.68s/it]epoch 3 loss 1.29761:  46%|████▋     | 13/28 [00:35<00:40,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6597[0m
[32m  eval_f1 = 0.3535[0m
[32m  eval_mcc = 0.6414[0m
[32m  eval_precision = 0.4744[0m
[32m  eval_recall = 0.3261[0m
[32m  ********************[0m
[32m  Best f1:0.3535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6414[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29761:  50%|█████     | 14/28 [00:42<00:54,  3.92s/it]epoch 3 loss 1.29559:  50%|█████     | 14/28 [00:42<00:54,  3.92s/it]epoch 3 loss 1.29559:  54%|█████▎    | 15/28 [00:42<00:37,  2.87s/it]epoch 3 loss 1.29234:  54%|█████▎    | 15/28 [00:43<00:37,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6597[0m
[32m  eval_f1 = 0.3563[0m
[32m  eval_mcc = 0.6414[0m
[32m  eval_precision = 0.478[0m
[32m  eval_recall = 0.3278[0m
[32m  ********************[0m
[32m  Best f1:0.3563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.29234:  57%|█████▋    | 16/28 [00:49<00:47,  3.96s/it]epoch 3 loss 1.28693:  57%|█████▋    | 16/28 [00:49<00:47,  3.96s/it]epoch 3 loss 1.28693:  61%|██████    | 17/28 [00:49<00:31,  2.90s/it]epoch 3 loss 1.28526:  61%|██████    | 17/28 [00:49<00:31,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3562[0m
[32m  eval_mcc = 0.6405[0m
[32m  eval_precision = 0.4781[0m
[32m  eval_recall = 0.3272[0m

epoch 3 loss 1.28526:  64%|██████▍   | 18/28 [00:53<00:31,  3.17s/it]epoch 3 loss 1.28081:  64%|██████▍   | 18/28 [00:53<00:31,  3.17s/it]epoch 3 loss 1.28081:  68%|██████▊   | 19/28 [00:53<00:21,  2.34s/it]epoch 3 loss 1.2793:  68%|██████▊   | 19/28 [00:54<00:21,  2.34s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3561[0m
[32m  eval_mcc = 0.6391[0m
[32m  eval_precision = 0.4826[0m
[32m  eval_recall = 0.3268[0m

epoch 3 loss 1.2793:  71%|███████▏  | 20/28 [00:57<00:22,  2.78s/it]epoch 3 loss 1.28607:  71%|███████▏  | 20/28 [00:57<00:22,  2.78s/it]epoch 3 loss 1.28607:  75%|███████▌  | 21/28 [00:57<00:14,  2.06s/it]epoch 3 loss 1.28583:  75%|███████▌  | 21/28 [00:58<00:14,  2.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.659[0m
[32m  eval_f1 = 0.3606[0m
[32m  eval_mcc = 0.6403[0m
[32m  eval_precision = 0.4779[0m
[32m  eval_recall = 0.3308[0m
[32m  ********************[0m
[32m  Best f1:0.3606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.28583:  79%|███████▊  | 22/28 [01:02<00:17,  2.94s/it]epoch 3 loss 1.29264:  79%|███████▊  | 22/28 [01:03<00:17,  2.94s/it]epoch 3 loss 1.29264:  82%|████████▏ | 23/28 [01:03<00:10,  2.18s/it]epoch 3 loss 1.29606:  82%|████████▏ | 23/28 [01:03<00:10,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3619[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.4765[0m
[32m  eval_recall = 0.3326[0m
[32m  ********************[0m
[32m  Best f1:0.3619[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29606:  86%|████████▌ | 24/28 [01:09<00:13,  3.42s/it]epoch 3 loss 1.29711:  86%|████████▌ | 24/28 [01:10<00:13,  3.42s/it]epoch 3 loss 1.29711:  89%|████████▉ | 25/28 [01:10<00:07,  2.52s/it]epoch 3 loss 1.28995:  89%|████████▉ | 25/28 [01:10<00:07,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.662[0m
[32m  eval_f1 = 0.3621[0m
[32m  eval_mcc = 0.6432[0m
[32m  eval_precision = 0.4711[0m
[32m  eval_recall = 0.3335[0m
[32m  ********************[0m
[32m  Best f1:0.3621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28995:  93%|█████████▎| 26/28 [01:16<00:07,  3.65s/it]epoch 3 loss 1.28841:  93%|█████████▎| 26/28 [01:16<00:07,  3.65s/it]epoch 3 loss 1.28841:  96%|█████████▋| 27/28 [01:16<00:02,  2.68s/it]epoch 3 loss 1.28962:  96%|█████████▋| 27/28 [01:16<00:02,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6632[0m
[32m  eval_f1 = 0.3632[0m
[32m  eval_mcc = 0.6444[0m
[32m  eval_precision = 0.4735[0m
[32m  eval_recall = 0.3345[0m
[32m  ********************[0m
[32m  Best f1:0.3632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28962: 100%|██████████| 28/28 [01:22<00:00,  3.50s/it]epoch 3 loss 1.28962: 100%|██████████| 28/28 [01:22<00:00,  2.94s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.21988:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.21988:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 4 loss 1.29617:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6644[0m
[32m  eval_f1 = 0.3642[0m
[32m  eval_mcc = 0.6457[0m
[32m  eval_precision = 0.4735[0m
[32m  eval_recall = 0.3353[0m
[32m  ********************[0m
[32m  Best f1:0.3642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29617:   7%|▋         | 2/28 [00:08<02:15,  5.20s/it]epoch 4 loss 1.24983:   7%|▋         | 2/28 [00:09<02:15,  5.20s/it]epoch 4 loss 1.24983:  11%|█         | 3/28 [00:09<01:15,  3.02s/it]epoch 4 loss 1.24577:  11%|█         | 3/28 [00:09<01:15,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6645[0m
[32m  eval_f1 = 0.365[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.4798[0m
[32m  eval_recall = 0.336[0m
[32m  ********************[0m
[32m  Best f1:0.365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24577:  14%|█▍        | 4/28 [00:16<01:50,  4.59s/it]epoch 4 loss 1.25508:  14%|█▍        | 4/28 [00:16<01:50,  4.59s/it]epoch 4 loss 1.25508:  18%|█▊        | 5/28 [00:16<01:10,  3.09s/it]epoch 4 loss 1.25657:  18%|█▊        | 5/28 [00:17<01:10,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6646[0m
[32m  eval_f1 = 0.3658[0m
[32m  eval_mcc = 0.6461[0m
[32m  eval_precision = 0.4861[0m
[32m  eval_recall = 0.3365[0m
[32m  ********************[0m
[32m  Best f1:0.3658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25657:  21%|██▏       | 6/28 [00:28<02:09,  5.87s/it]epoch 4 loss 1.2642:  21%|██▏       | 6/28 [00:28<02:09,  5.87s/it] epoch 4 loss 1.2642:  25%|██▌       | 7/28 [00:28<01:25,  4.09s/it]epoch 4 loss 1.26725:  25%|██▌       | 7/28 [00:28<01:25,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6645[0m
[32m  eval_f1 = 0.3661[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.4847[0m
[32m  eval_recall = 0.3368[0m
[32m  ********************[0m
[32m  Best f1:0.3661[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.26725:  29%|██▊       | 8/28 [00:36<01:47,  5.39s/it]epoch 4 loss 1.27032:  29%|██▊       | 8/28 [00:37<01:47,  5.39s/it]epoch 4 loss 1.27032:  32%|███▏      | 9/28 [00:37<01:13,  3.84s/it]epoch 4 loss 1.26351:  32%|███▏      | 9/28 [00:37<01:13,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6643[0m
[32m  eval_f1 = 0.3662[0m
[32m  eval_mcc = 0.6457[0m
[32m  eval_precision = 0.4848[0m
[32m  eval_recall = 0.337[0m
[32m  ********************[0m
[32m  Best f1:0.3662[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.26351:  36%|███▌      | 10/28 [00:45<01:32,  5.15s/it]epoch 4 loss 1.2739:  36%|███▌      | 10/28 [00:45<01:32,  5.15s/it] epoch 4 loss 1.2739:  39%|███▉      | 11/28 [00:45<01:02,  3.70s/it]epoch 4 loss 1.26828:  39%|███▉      | 11/28 [00:46<01:02,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.3667[0m
[32m  eval_mcc = 0.6461[0m
[32m  eval_precision = 0.4883[0m
[32m  eval_recall = 0.3376[0m
[32m  ********************[0m
[32m  Best f1:0.3667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.26828:  43%|████▎     | 12/28 [00:53<01:19,  4.98s/it]epoch 4 loss 1.26911:  43%|████▎     | 12/28 [00:53<01:19,  4.98s/it]epoch 4 loss 1.26911:  46%|████▋     | 13/28 [00:53<00:53,  3.60s/it]epoch 4 loss 1.27355:  46%|████▋     | 13/28 [00:54<00:53,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.368[0m
[32m  eval_mcc = 0.6461[0m
[32m  eval_precision = 0.4963[0m
[32m  eval_recall = 0.3384[0m
[32m  ********************[0m
[32m  Best f1:0.368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27355:  50%|█████     | 14/28 [01:05<01:22,  5.93s/it]epoch 4 loss 1.26784:  50%|█████     | 14/28 [01:05<01:22,  5.93s/it]epoch 4 loss 1.26784:  54%|█████▎    | 15/28 [01:05<00:55,  4.27s/it]epoch 4 loss 1.26757:  54%|█████▎    | 15/28 [01:06<00:55,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.665[0m
[32m  eval_f1 = 0.3683[0m
[32m  eval_mcc = 0.6462[0m
[32m  eval_precision = 0.4908[0m
[32m  eval_recall = 0.3387[0m
[32m  ********************[0m
[32m  Best f1:0.3683[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26757:  57%|█████▋    | 16/28 [01:16<01:14,  6.17s/it]epoch 4 loss 1.26884:  57%|█████▋    | 16/28 [01:16<01:14,  6.17s/it]epoch 4 loss 1.26884:  61%|██████    | 17/28 [01:16<00:48,  4.44s/it]epoch 4 loss 1.27052:  61%|██████    | 17/28 [01:17<00:48,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6651[0m
[32m  eval_f1 = 0.3685[0m
[32m  eval_mcc = 0.6464[0m
[32m  eval_precision = 0.492[0m
[32m  eval_recall = 0.3389[0m
[32m  ********************[0m
[32m  Best f1:0.3685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6464[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27052:  64%|██████▍   | 18/28 [01:27<01:03,  6.35s/it]epoch 4 loss 1.26734:  64%|██████▍   | 18/28 [01:27<01:03,  6.35s/it]epoch 4 loss 1.26734:  68%|██████▊   | 19/28 [01:27<00:41,  4.57s/it]epoch 4 loss 1.26837:  68%|██████▊   | 19/28 [01:28<00:41,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6651[0m
[32m  eval_f1 = 0.3686[0m
[32m  eval_mcc = 0.6464[0m
[32m  eval_precision = 0.4918[0m
[32m  eval_recall = 0.3389[0m
[32m  ********************[0m
[32m  Best f1:0.3686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.26837:  71%|███████▏  | 20/28 [01:35<00:43,  5.45s/it]epoch 4 loss 1.26244:  71%|███████▏  | 20/28 [01:35<00:43,  5.45s/it]epoch 4 loss 1.26244:  75%|███████▌  | 21/28 [01:35<00:27,  3.94s/it]epoch 4 loss 1.26192:  75%|███████▌  | 21/28 [01:36<00:27,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6653[0m
[32m  eval_f1 = 0.3687[0m
[32m  eval_mcc = 0.6467[0m
[32m  eval_precision = 0.4925[0m
[32m  eval_recall = 0.3389[0m
[32m  ********************[0m
[32m  Best f1:0.3687[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6467[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26192:  79%|███████▊  | 22/28 [01:46<00:35,  5.98s/it]epoch 4 loss 1.25774:  79%|███████▊  | 22/28 [01:46<00:35,  5.98s/it]epoch 4 loss 1.25774:  82%|████████▏ | 23/28 [01:46<00:21,  4.31s/it]epoch 4 loss 1.25831:  82%|████████▏ | 23/28 [01:47<00:21,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6652[0m
[32m  eval_f1 = 0.3685[0m
[32m  eval_mcc = 0.6466[0m
[32m  eval_precision = 0.4925[0m
[32m  eval_recall = 0.3387[0m

epoch 4 loss 1.25831:  86%|████████▌ | 24/28 [01:50<00:16,  4.16s/it]epoch 4 loss 1.25999:  86%|████████▌ | 24/28 [01:51<00:16,  4.16s/it]epoch 4 loss 1.25999:  89%|████████▉ | 25/28 [01:51<00:09,  3.03s/it]epoch 4 loss 1.25699:  89%|████████▉ | 25/28 [01:51<00:09,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3687[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.4933[0m
[32m  eval_recall = 0.3387[0m
[32m  ********************[0m
[32m  Best MCC:0.6468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25699:  93%|█████████▎| 26/28 [01:58<00:08,  4.23s/it]epoch 4 loss 1.25253:  93%|█████████▎| 26/28 [01:58<00:08,  4.23s/it]epoch 4 loss 1.25253:  96%|█████████▋| 27/28 [01:58<00:03,  3.09s/it]epoch 4 loss 1.25155:  96%|█████████▋| 27/28 [01:58<00:03,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6653[0m
[32m  eval_f1 = 0.3686[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.4932[0m
[32m  eval_recall = 0.3386[0m

epoch 4 loss 1.25155: 100%|██████████| 28/28 [02:02<00:00,  3.25s/it]epoch 4 loss 1.25155: 100%|██████████| 28/28 [02:02<00:00,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6653[0m
[32m  eval_f1 = 0.3687[0m
[32m  eval_mcc = 0.6467[0m
[32m  eval_precision = 0.4925[0m
[32m  eval_recall = 0.3389[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6494[0m
[32m  eval_f1 = 0.3269[0m
[32m  eval_mcc = 0.631[0m
[32m  eval_precision = 0.4547[0m
[32m  eval_recall = 0.3005[0m

