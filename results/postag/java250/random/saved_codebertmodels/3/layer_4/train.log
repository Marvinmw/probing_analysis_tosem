[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/3/layer_4', posratio=0.5, seed=969, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.11929:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.11929:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.12608:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0054[0m
[32m  eval_f1 = 0.001[0m
[32m  eval_mcc = -0.0011[0m
[32m  eval_precision = 0.0017[0m
[32m  eval_recall = 0.0038[0m
[32m  ********************[0m
[32m  Best f1:0.001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.12608:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it]epoch 0 loss 5.11352:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it]epoch 0 loss 5.11352:  11%|█         | 3/28 [00:05<00:43,  1.76s/it]epoch 0 loss 5.09634:  11%|█         | 3/28 [00:05<00:43,  1.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0076[0m
[32m  eval_f1 = 0.0013[0m
[32m  eval_mcc = -0.0026[0m
[32m  eval_precision = 0.006[0m
[32m  eval_recall = 0.0039[0m
[32m  ********************[0m
[32m  Best f1:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.09634:  14%|█▍        | 4/28 [00:13<01:36,  4.02s/it]epoch 0 loss 5.07172:  14%|█▍        | 4/28 [00:13<01:36,  4.02s/it]epoch 0 loss 5.07172:  18%|█▊        | 5/28 [00:13<01:02,  2.72s/it]epoch 0 loss 5.04568:  18%|█▊        | 5/28 [00:13<01:02,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0241[0m
[32m  eval_f1 = 0.0035[0m
[32m  eval_mcc = 0.0021[0m
[32m  eval_precision = 0.0076[0m
[32m  eval_recall = 0.0057[0m
[32m  ********************[0m
[32m  Best f1:0.0035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04568:  21%|██▏       | 6/28 [00:21<01:39,  4.53s/it]epoch 0 loss 5.01277:  21%|██▏       | 6/28 [00:21<01:39,  4.53s/it]epoch 0 loss 5.01277:  25%|██▌       | 7/28 [00:21<01:06,  3.19s/it]epoch 0 loss 4.97568:  25%|██▌       | 7/28 [00:22<01:06,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0572[0m
[32m  eval_f1 = 0.0066[0m
[32m  eval_mcc = 0.0149[0m
[32m  eval_precision = 0.011[0m
[32m  eval_recall = 0.0098[0m
[32m  ********************[0m
[32m  Best f1:0.0066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.97568:  29%|██▊       | 8/28 [00:31<01:41,  5.09s/it]epoch 0 loss 4.93321:  29%|██▊       | 8/28 [00:31<01:41,  5.09s/it]epoch 0 loss 4.93321:  32%|███▏      | 9/28 [00:31<01:09,  3.63s/it]epoch 0 loss 4.88494:  32%|███▏      | 9/28 [00:31<01:09,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1021[0m
[32m  eval_f1 = 0.0128[0m
[32m  eval_mcc = 0.0474[0m
[32m  eval_precision = 0.0162[0m
[32m  eval_recall = 0.0191[0m
[32m  ********************[0m
[32m  Best f1:0.0128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.88494:  36%|███▌      | 10/28 [00:41<01:41,  5.65s/it]epoch 0 loss 4.8314:  36%|███▌      | 10/28 [00:42<01:41,  5.65s/it] epoch 0 loss 4.8314:  39%|███▉      | 11/28 [00:42<01:08,  4.05s/it]epoch 0 loss 4.77842:  39%|███▉      | 11/28 [00:42<01:08,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1366[0m
[32m  eval_f1 = 0.0203[0m
[32m  eval_mcc = 0.0789[0m
[32m  eval_precision = 0.0274[0m
[32m  eval_recall = 0.0253[0m
[32m  ********************[0m
[32m  Best f1:0.0203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0789[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.77842:  43%|████▎     | 12/28 [00:50<01:27,  5.45s/it]epoch 0 loss 4.71678:  43%|████▎     | 12/28 [00:51<01:27,  5.45s/it]epoch 0 loss 4.71678:  46%|████▋     | 13/28 [00:51<00:58,  3.93s/it]epoch 0 loss 4.65523:  46%|████▋     | 13/28 [00:51<00:58,  3.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.186[0m
[32m  eval_f1 = 0.0275[0m
[32m  eval_mcc = 0.1289[0m
[32m  eval_precision = 0.0354[0m
[32m  eval_recall = 0.0337[0m
[32m  ********************[0m
[32m  Best f1:0.0275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.65523:  50%|█████     | 14/28 [01:01<01:21,  5.82s/it]epoch 0 loss 4.58876:  50%|█████     | 14/28 [01:01<01:21,  5.82s/it]epoch 0 loss 4.58876:  54%|█████▎    | 15/28 [01:01<00:54,  4.19s/it]epoch 0 loss 4.52095:  54%|█████▎    | 15/28 [01:02<00:54,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2356[0m
[32m  eval_f1 = 0.0339[0m
[32m  eval_mcc = 0.1808[0m
[32m  eval_precision = 0.0456[0m
[32m  eval_recall = 0.0415[0m
[32m  ********************[0m
[32m  Best f1:0.0339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1808[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.52095:  57%|█████▋    | 16/28 [01:10<01:07,  5.60s/it]epoch 0 loss 4.45361:  57%|█████▋    | 16/28 [01:11<01:07,  5.60s/it]epoch 0 loss 4.45361:  61%|██████    | 17/28 [01:11<00:44,  4.04s/it]epoch 0 loss 4.38389:  61%|██████    | 17/28 [01:11<00:44,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2832[0m
[32m  eval_f1 = 0.0401[0m
[32m  eval_mcc = 0.2327[0m
[32m  eval_precision = 0.072[0m
[32m  eval_recall = 0.0474[0m
[32m  ********************[0m
[32m  Best f1:0.0401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.38389:  64%|██████▍   | 18/28 [01:23<01:06,  6.68s/it]epoch 0 loss 4.31554:  64%|██████▍   | 18/28 [01:24<01:06,  6.68s/it]epoch 0 loss 4.31554:  68%|██████▊   | 19/28 [01:24<00:43,  4.80s/it]epoch 0 loss 4.25542:  68%|██████▊   | 19/28 [01:24<00:43,  4.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3167[0m
[32m  eval_f1 = 0.0541[0m
[32m  eval_mcc = 0.2686[0m
[32m  eval_precision = 0.1087[0m
[32m  eval_recall = 0.057[0m
[32m  ********************[0m
[32m  Best f1:0.0541[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.25542:  71%|███████▏  | 20/28 [01:34<00:51,  6.44s/it]epoch 0 loss 4.18831:  71%|███████▏  | 20/28 [01:35<00:51,  6.44s/it]epoch 0 loss 4.18831:  75%|███████▌  | 21/28 [01:35<00:32,  4.63s/it]epoch 0 loss 4.13117:  75%|███████▌  | 21/28 [01:35<00:32,  4.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3507[0m
[32m  eval_f1 = 0.0866[0m
[32m  eval_mcc = 0.3053[0m
[32m  eval_precision = 0.1551[0m
[32m  eval_recall = 0.0818[0m
[32m  ********************[0m
[32m  Best f1:0.0866[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.13117:  79%|███████▊  | 22/28 [01:45<00:38,  6.45s/it]epoch 0 loss 4.06756:  79%|███████▊  | 22/28 [01:46<00:38,  6.45s/it]epoch 0 loss 4.06756:  82%|████████▏ | 23/28 [01:46<00:23,  4.64s/it]epoch 0 loss 4.0067:  82%|████████▏ | 23/28 [01:46<00:23,  4.64s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3832[0m
[32m  eval_f1 = 0.1092[0m
[32m  eval_mcc = 0.3413[0m
[32m  eval_precision = 0.1823[0m
[32m  eval_recall = 0.1027[0m
[32m  ********************[0m
[32m  Best f1:0.1092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.0067:  86%|████████▌ | 24/28 [01:54<00:23,  5.83s/it]epoch 0 loss 3.94916:  86%|████████▌ | 24/28 [01:55<00:23,  5.83s/it]epoch 0 loss 3.94916:  89%|████████▉ | 25/28 [01:55<00:12,  4.21s/it]epoch 0 loss 3.89264:  89%|████████▉ | 25/28 [01:55<00:12,  4.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4351[0m
[32m  eval_f1 = 0.1272[0m
[32m  eval_mcc = 0.4016[0m
[32m  eval_precision = 0.1963[0m
[32m  eval_recall = 0.1234[0m
[32m  ********************[0m
[32m  Best f1:0.1272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.89264:  93%|█████████▎| 26/28 [02:01<00:09,  4.80s/it]epoch 0 loss 3.83277:  93%|█████████▎| 26/28 [02:01<00:09,  4.80s/it]epoch 0 loss 3.83277:  96%|█████████▋| 27/28 [02:01<00:03,  3.49s/it]epoch 0 loss 3.77363:  96%|█████████▋| 27/28 [02:01<00:03,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4815[0m
[32m  eval_f1 = 0.1504[0m
[32m  eval_mcc = 0.4526[0m
[32m  eval_precision = 0.2178[0m
[32m  eval_recall = 0.1446[0m
[32m  ********************[0m
[32m  Best f1:0.1504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4526[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.77363: 100%|██████████| 28/28 [02:07<00:00,  4.20s/it]epoch 0 loss 3.77363: 100%|██████████| 28/28 [02:07<00:00,  4.56s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.22464:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.22464:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.31765:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5228[0m
[32m  eval_f1 = 0.1718[0m
[32m  eval_mcc = 0.4952[0m
[32m  eval_precision = 0.2265[0m
[32m  eval_recall = 0.1678[0m
[32m  ********************[0m
[32m  Best f1:0.1718[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.31765:   7%|▋         | 2/28 [00:06<01:37,  3.73s/it]epoch 1 loss 2.19588:   7%|▋         | 2/28 [00:06<01:37,  3.73s/it]epoch 1 loss 2.19588:  11%|█         | 3/28 [00:06<00:55,  2.22s/it]epoch 1 loss 2.20664:  11%|█         | 3/28 [00:07<00:55,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5577[0m
[32m  eval_f1 = 0.1926[0m
[32m  eval_mcc = 0.5312[0m
[32m  eval_precision = 0.2432[0m
[32m  eval_recall = 0.1923[0m
[32m  ********************[0m
[32m  Best f1:0.1926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20664:  14%|█▍        | 4/28 [00:12<01:29,  3.73s/it]epoch 1 loss 2.16331:  14%|█▍        | 4/28 [00:13<01:29,  3.73s/it]epoch 1 loss 2.16331:  18%|█▊        | 5/28 [00:13<00:58,  2.54s/it]epoch 1 loss 2.11906:  18%|█▊        | 5/28 [00:13<00:58,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5712[0m
[32m  eval_f1 = 0.2046[0m
[32m  eval_mcc = 0.5453[0m
[32m  eval_precision = 0.2429[0m
[32m  eval_recall = 0.2034[0m
[32m  ********************[0m
[32m  Best f1:0.2046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11906:  21%|██▏       | 6/28 [00:19<01:23,  3.78s/it]epoch 1 loss 2.07538:  21%|██▏       | 6/28 [00:19<01:23,  3.78s/it]epoch 1 loss 2.07538:  25%|██▌       | 7/28 [00:19<00:56,  2.68s/it]epoch 1 loss 2.03562:  25%|██▌       | 7/28 [00:20<00:56,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5818[0m
[32m  eval_f1 = 0.2133[0m
[32m  eval_mcc = 0.5564[0m
[32m  eval_precision = 0.2823[0m
[32m  eval_recall = 0.2094[0m
[32m  ********************[0m
[32m  Best f1:0.2133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5564[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03562:  29%|██▊       | 8/28 [00:25<01:14,  3.73s/it]epoch 1 loss 2.01019:  29%|██▊       | 8/28 [00:26<01:14,  3.73s/it]epoch 1 loss 2.01019:  32%|███▏      | 9/28 [00:26<00:51,  2.70s/it]epoch 1 loss 1.98781:  32%|███▏      | 9/28 [00:26<00:51,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5907[0m
[32m  eval_f1 = 0.2266[0m
[32m  eval_mcc = 0.5665[0m
[32m  eval_precision = 0.3262[0m
[32m  eval_recall = 0.2184[0m
[32m  ********************[0m
[32m  Best f1:0.2266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98781:  36%|███▌      | 10/28 [00:32<01:06,  3.72s/it]epoch 1 loss 1.94376:  36%|███▌      | 10/28 [00:32<01:06,  3.72s/it]epoch 1 loss 1.94376:  39%|███▉      | 11/28 [00:32<00:46,  2.71s/it]epoch 1 loss 1.91429:  39%|███▉      | 11/28 [00:33<00:46,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5985[0m
[32m  eval_f1 = 0.2343[0m
[32m  eval_mcc = 0.5753[0m
[32m  eval_precision = 0.3224[0m
[32m  eval_recall = 0.2222[0m
[32m  ********************[0m
[32m  Best f1:0.2343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5753[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91429:  43%|████▎     | 12/28 [00:38<00:59,  3.70s/it]epoch 1 loss 1.89269:  43%|████▎     | 12/28 [00:39<00:59,  3.70s/it]epoch 1 loss 1.89269:  46%|████▋     | 13/28 [00:39<00:40,  2.70s/it]epoch 1 loss 1.88236:  46%|████▋     | 13/28 [00:39<00:40,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6034[0m
[32m  eval_f1 = 0.25[0m
[32m  eval_mcc = 0.5815[0m
[32m  eval_precision = 0.3478[0m
[32m  eval_recall = 0.2317[0m
[32m  ********************[0m
[32m  Best f1:0.25[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5815[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88236:  50%|█████     | 14/28 [00:45<00:52,  3.73s/it]epoch 1 loss 1.86219:  50%|█████     | 14/28 [00:45<00:52,  3.73s/it]epoch 1 loss 1.86219:  54%|█████▎    | 15/28 [00:45<00:35,  2.73s/it]epoch 1 loss 1.8424:  54%|█████▎    | 15/28 [00:46<00:35,  2.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6041[0m
[32m  eval_f1 = 0.2596[0m
[32m  eval_mcc = 0.5831[0m
[32m  eval_precision = 0.3563[0m
[32m  eval_recall = 0.2398[0m
[32m  ********************[0m
[32m  Best f1:0.2596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8424:  57%|█████▋    | 16/28 [00:53<00:51,  4.26s/it]epoch 1 loss 1.82488:  57%|█████▋    | 16/28 [00:53<00:51,  4.26s/it]epoch 1 loss 1.82488:  61%|██████    | 17/28 [00:53<00:34,  3.10s/it]epoch 1 loss 1.80938:  61%|██████    | 17/28 [00:54<00:34,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6086[0m
[32m  eval_f1 = 0.2695[0m
[32m  eval_mcc = 0.5877[0m
[32m  eval_precision = 0.3744[0m
[32m  eval_recall = 0.2475[0m
[32m  ********************[0m
[32m  Best f1:0.2695[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5877[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80938:  64%|██████▍   | 18/28 [00:59<00:39,  3.93s/it]epoch 1 loss 1.78906:  64%|██████▍   | 18/28 [01:00<00:39,  3.93s/it]epoch 1 loss 1.78906:  68%|██████▊   | 19/28 [01:00<00:25,  2.87s/it]epoch 1 loss 1.77295:  68%|██████▊   | 19/28 [01:00<00:25,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6175[0m
[32m  eval_f1 = 0.2792[0m
[32m  eval_mcc = 0.5967[0m
[32m  eval_precision = 0.3731[0m
[32m  eval_recall = 0.2559[0m
[32m  ********************[0m
[32m  Best f1:0.2792[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5967[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77295:  71%|███████▏  | 20/28 [01:07<00:34,  4.33s/it]epoch 1 loss 1.75929:  71%|███████▏  | 20/28 [01:08<00:34,  4.33s/it]epoch 1 loss 1.75929:  75%|███████▌  | 21/28 [01:08<00:22,  3.16s/it]epoch 1 loss 1.75237:  75%|███████▌  | 21/28 [01:08<00:22,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6217[0m
[32m  eval_f1 = 0.2926[0m
[32m  eval_mcc = 0.6001[0m
[32m  eval_precision = 0.394[0m
[32m  eval_recall = 0.2707[0m
[32m  ********************[0m
[32m  Best f1:0.2926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75237:  79%|███████▊  | 22/28 [01:22<00:38,  6.35s/it]epoch 1 loss 1.73917:  79%|███████▊  | 22/28 [01:22<00:38,  6.35s/it]epoch 1 loss 1.73917:  82%|████████▏ | 23/28 [01:22<00:22,  4.57s/it]epoch 1 loss 1.72965:  82%|████████▏ | 23/28 [01:22<00:22,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6224[0m
[32m  eval_f1 = 0.3065[0m
[32m  eval_mcc = 0.6002[0m
[32m  eval_precision = 0.4056[0m
[32m  eval_recall = 0.2823[0m
[32m  ********************[0m
[32m  Best f1:0.3065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72965:  86%|████████▌ | 24/28 [01:43<00:37,  9.40s/it]epoch 1 loss 1.72042:  86%|████████▌ | 24/28 [01:43<00:37,  9.40s/it]epoch 1 loss 1.72042:  89%|████████▉ | 25/28 [01:43<00:20,  6.71s/it]epoch 1 loss 1.71255:  89%|████████▉ | 25/28 [01:44<00:20,  6.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6254[0m
[32m  eval_f1 = 0.3117[0m
[32m  eval_mcc = 0.6031[0m
[32m  eval_precision = 0.4131[0m
[32m  eval_recall = 0.2891[0m
[32m  ********************[0m
[32m  Best f1:0.3117[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.71255:  93%|█████████▎| 26/28 [01:54<00:15,  7.87s/it]epoch 1 loss 1.70352:  93%|█████████▎| 26/28 [01:54<00:15,  7.87s/it]epoch 1 loss 1.70352:  96%|█████████▋| 27/28 [01:54<00:05,  5.63s/it]epoch 1 loss 1.69834:  96%|█████████▋| 27/28 [01:54<00:05,  5.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.79it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6301[0m
[32m  eval_f1 = 0.3153[0m
[32m  eval_mcc = 0.6087[0m
[32m  eval_precision = 0.4226[0m
[32m  eval_recall = 0.2922[0m
[32m  ********************[0m
[32m  Best f1:0.3153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.69834: 100%|██████████| 28/28 [02:05<00:00,  7.07s/it]epoch 1 loss 1.69834: 100%|██████████| 28/28 [02:05<00:00,  4.47s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.39585:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.39585:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 2 loss 1.4079:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6328[0m
[32m  eval_f1 = 0.3235[0m
[32m  eval_mcc = 0.6121[0m
[32m  eval_precision = 0.4219[0m
[32m  eval_recall = 0.2997[0m
[32m  ********************[0m
[32m  Best f1:0.3235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4079:   7%|▋         | 2/28 [00:10<02:43,  6.29s/it]epoch 2 loss 1.39415:   7%|▋         | 2/28 [00:11<02:43,  6.29s/it]epoch 2 loss 1.39415:  11%|█         | 3/28 [00:11<01:30,  3.61s/it]epoch 2 loss 1.38917:  11%|█         | 3/28 [00:11<01:30,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6354[0m
[32m  eval_f1 = 0.3256[0m
[32m  eval_mcc = 0.6156[0m
[32m  eval_precision = 0.4228[0m
[32m  eval_recall = 0.3016[0m
[32m  ********************[0m
[32m  Best f1:0.3256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6156[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38917:  14%|█▍        | 4/28 [00:21<02:27,  6.17s/it]epoch 2 loss 1.36793:  14%|█▍        | 4/28 [00:21<02:27,  6.17s/it]epoch 2 loss 1.36793:  18%|█▊        | 5/28 [00:21<01:34,  4.10s/it]epoch 2 loss 1.34818:  18%|█▊        | 5/28 [00:22<01:34,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6377[0m
[32m  eval_f1 = 0.3276[0m
[32m  eval_mcc = 0.619[0m
[32m  eval_precision = 0.43[0m
[32m  eval_recall = 0.303[0m
[32m  ********************[0m
[32m  Best f1:0.3276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.619[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34818:  21%|██▏       | 6/28 [00:31<02:13,  6.09s/it]epoch 2 loss 1.37032:  21%|██▏       | 6/28 [00:32<02:13,  6.09s/it]epoch 2 loss 1.37032:  25%|██▌       | 7/28 [00:32<01:28,  4.23s/it]epoch 2 loss 1.37552:  25%|██▌       | 7/28 [00:32<01:28,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6375[0m
[32m  eval_f1 = 0.327[0m
[32m  eval_mcc = 0.6191[0m
[32m  eval_precision = 0.4364[0m
[32m  eval_recall = 0.3026[0m
[32m  ********************[0m
[32m  Best MCC:0.6191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37552:  29%|██▊       | 8/28 [00:38<01:35,  4.77s/it]epoch 2 loss 1.36762:  29%|██▊       | 8/28 [00:38<01:35,  4.77s/it]epoch 2 loss 1.36762:  32%|███▏      | 9/28 [00:38<01:04,  3.41s/it]epoch 2 loss 1.37292:  32%|███▏      | 9/28 [00:38<01:04,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6397[0m
[32m  eval_f1 = 0.3284[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.4419[0m
[32m  eval_recall = 0.3039[0m
[32m  ********************[0m
[32m  Best f1:0.3284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37292:  36%|███▌      | 10/28 [00:48<01:37,  5.41s/it]epoch 2 loss 1.37318:  36%|███▌      | 10/28 [00:48<01:37,  5.41s/it]epoch 2 loss 1.37318:  39%|███▉      | 11/28 [00:48<01:05,  3.88s/it]epoch 2 loss 1.3753:  39%|███▉      | 11/28 [00:49<01:05,  3.88s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6425[0m
[32m  eval_f1 = 0.3299[0m
[32m  eval_mcc = 0.6234[0m
[32m  eval_precision = 0.4403[0m
[32m  eval_recall = 0.3056[0m
[32m  ********************[0m
[32m  Best f1:0.3299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3753:  43%|████▎     | 12/28 [00:56<01:21,  5.11s/it]epoch 2 loss 1.38145:  43%|████▎     | 12/28 [00:57<01:21,  5.11s/it]epoch 2 loss 1.38145:  46%|████▋     | 13/28 [00:57<00:55,  3.69s/it]epoch 2 loss 1.37864:  46%|████▋     | 13/28 [00:57<00:55,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6445[0m
[32m  eval_f1 = 0.3336[0m
[32m  eval_mcc = 0.6249[0m
[32m  eval_precision = 0.4334[0m
[32m  eval_recall = 0.3097[0m
[32m  ********************[0m
[32m  Best f1:0.3336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6249[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37864:  50%|█████     | 14/28 [01:06<01:16,  5.45s/it]epoch 2 loss 1.37153:  50%|█████     | 14/28 [01:07<01:16,  5.45s/it]epoch 2 loss 1.37153:  54%|█████▎    | 15/28 [01:07<00:51,  3.93s/it]epoch 2 loss 1.36437:  54%|█████▎    | 15/28 [01:07<00:51,  3.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6463[0m
[32m  eval_f1 = 0.337[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.4431[0m
[32m  eval_recall = 0.3122[0m
[32m  ********************[0m
[32m  Best f1:0.337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36437:  57%|█████▋    | 16/28 [01:15<01:03,  5.25s/it]epoch 2 loss 1.36316:  57%|█████▋    | 16/28 [01:15<01:03,  5.25s/it]epoch 2 loss 1.36316:  61%|██████    | 17/28 [01:15<00:41,  3.80s/it]epoch 2 loss 1.36357:  61%|██████    | 17/28 [01:16<00:41,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6496[0m
[32m  eval_f1 = 0.3455[0m
[32m  eval_mcc = 0.63[0m
[32m  eval_precision = 0.4593[0m
[32m  eval_recall = 0.3183[0m
[32m  ********************[0m
[32m  Best f1:0.3455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.63[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36357:  64%|██████▍   | 18/28 [01:27<01:00,  6.05s/it]epoch 2 loss 1.35898:  64%|██████▍   | 18/28 [01:27<01:00,  6.05s/it]epoch 2 loss 1.35898:  68%|██████▊   | 19/28 [01:27<00:39,  4.36s/it]epoch 2 loss 1.35663:  68%|██████▊   | 19/28 [01:27<00:39,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6517[0m
[32m  eval_f1 = 0.35[0m
[32m  eval_mcc = 0.6323[0m
[32m  eval_precision = 0.457[0m
[32m  eval_recall = 0.3227[0m
[32m  ********************[0m
[32m  Best f1:0.35[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35663:  71%|███████▏  | 20/28 [01:35<00:43,  5.39s/it]epoch 2 loss 1.35809:  71%|███████▏  | 20/28 [01:35<00:43,  5.39s/it]epoch 2 loss 1.35809:  75%|███████▌  | 21/28 [01:35<00:27,  3.90s/it]epoch 2 loss 1.35663:  75%|███████▌  | 21/28 [01:36<00:27,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6542[0m
[32m  eval_f1 = 0.3533[0m
[32m  eval_mcc = 0.635[0m
[32m  eval_precision = 0.4654[0m
[32m  eval_recall = 0.3266[0m
[32m  ********************[0m
[32m  Best f1:0.3533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.635[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35663:  79%|███████▊  | 22/28 [01:45<00:34,  5.72s/it]epoch 2 loss 1.35298:  79%|███████▊  | 22/28 [01:46<00:34,  5.72s/it]epoch 2 loss 1.35298:  82%|████████▏ | 23/28 [01:46<00:20,  4.13s/it]epoch 2 loss 1.35184:  82%|████████▏ | 23/28 [01:46<00:20,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6554[0m
[32m  eval_f1 = 0.3553[0m
[32m  eval_mcc = 0.6362[0m
[32m  eval_precision = 0.4612[0m
[32m  eval_recall = 0.3288[0m
[32m  ********************[0m
[32m  Best f1:0.3553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35184:  86%|████████▌ | 24/28 [01:54<00:22,  5.51s/it]epoch 2 loss 1.34607:  86%|████████▌ | 24/28 [01:55<00:22,  5.51s/it]epoch 2 loss 1.34607:  89%|████████▉ | 25/28 [01:55<00:11,  3.98s/it]epoch 2 loss 1.34433:  89%|████████▉ | 25/28 [01:55<00:11,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3591[0m
[32m  eval_mcc = 0.6374[0m
[32m  eval_precision = 0.4613[0m
[32m  eval_recall = 0.3315[0m
[32m  ********************[0m
[32m  Best f1:0.3591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34433:  93%|█████████▎| 26/28 [02:04<00:11,  5.67s/it]epoch 2 loss 1.34006:  93%|█████████▎| 26/28 [02:05<00:11,  5.67s/it]epoch 2 loss 1.34006:  96%|█████████▋| 27/28 [02:05<00:04,  4.09s/it]epoch 2 loss 1.33582:  96%|█████████▋| 27/28 [02:05<00:04,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3614[0m
[32m  eval_mcc = 0.6384[0m
[32m  eval_precision = 0.4652[0m
[32m  eval_recall = 0.3335[0m
[32m  ********************[0m
[32m  Best f1:0.3614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33582: 100%|██████████| 28/28 [02:14<00:00,  5.71s/it]epoch 2 loss 1.33582: 100%|██████████| 28/28 [02:14<00:00,  4.81s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.22185:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.22185:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 3 loss 1.28353:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3612[0m
[32m  eval_mcc = 0.6385[0m
[32m  eval_precision = 0.4663[0m
[32m  eval_recall = 0.3335[0m
[32m  ********************[0m
[32m  Best MCC:0.6385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28353:   7%|▋         | 2/28 [00:06<01:44,  4.02s/it]epoch 3 loss 1.28144:   7%|▋         | 2/28 [00:07<01:44,  4.02s/it]epoch 3 loss 1.28144:  11%|█         | 3/28 [00:07<00:59,  2.38s/it]epoch 3 loss 1.28234:  11%|█         | 3/28 [00:07<00:59,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6585[0m
[32m  eval_f1 = 0.3606[0m
[32m  eval_mcc = 0.6389[0m
[32m  eval_precision = 0.4647[0m
[32m  eval_recall = 0.3335[0m
[32m  ********************[0m
[32m  Best MCC:0.6389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28234:  14%|█▍        | 4/28 [00:14<01:38,  4.12s/it]epoch 3 loss 1.26806:  14%|█▍        | 4/28 [00:14<01:38,  4.12s/it]epoch 3 loss 1.26806:  18%|█▊        | 5/28 [00:14<01:04,  2.78s/it]epoch 3 loss 1.26088:  18%|█▊        | 5/28 [00:14<01:04,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3599[0m
[32m  eval_mcc = 0.6395[0m
[32m  eval_precision = 0.4619[0m
[32m  eval_recall = 0.3336[0m
[32m  ********************[0m
[32m  Best MCC:0.6395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26088:  21%|██▏       | 6/28 [00:21<01:35,  4.34s/it]epoch 3 loss 1.26661:  21%|██▏       | 6/28 [00:22<01:35,  4.34s/it]epoch 3 loss 1.26661:  25%|██▌       | 7/28 [00:22<01:04,  3.06s/it]epoch 3 loss 1.25985:  25%|██▌       | 7/28 [00:22<01:04,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6592[0m
[32m  eval_f1 = 0.3608[0m
[32m  eval_mcc = 0.6401[0m
[32m  eval_precision = 0.4605[0m
[32m  eval_recall = 0.3345[0m
[32m  ********************[0m
[32m  Best MCC:0.6401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25985:  29%|██▊       | 8/28 [00:32<01:47,  5.36s/it]epoch 3 loss 1.25863:  29%|██▊       | 8/28 [00:33<01:47,  5.36s/it]epoch 3 loss 1.25863:  32%|███▏      | 9/28 [00:33<01:12,  3.81s/it]epoch 3 loss 1.25047:  32%|███▏      | 9/28 [00:33<01:12,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6609[0m
[32m  eval_f1 = 0.3626[0m
[32m  eval_mcc = 0.6423[0m
[32m  eval_precision = 0.4652[0m
[32m  eval_recall = 0.3358[0m
[32m  ********************[0m
[32m  Best f1:0.3626[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25047:  36%|███▌      | 10/28 [00:46<01:59,  6.63s/it]epoch 3 loss 1.24786:  36%|███▌      | 10/28 [00:46<01:59,  6.63s/it]epoch 3 loss 1.24786:  39%|███▉      | 11/28 [00:46<01:20,  4.73s/it]epoch 3 loss 1.25143:  39%|███▉      | 11/28 [00:46<01:20,  4.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6612[0m
[32m  eval_f1 = 0.3637[0m
[32m  eval_mcc = 0.6428[0m
[32m  eval_precision = 0.4653[0m
[32m  eval_recall = 0.3364[0m
[32m  ********************[0m
[32m  Best f1:0.3637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25143:  43%|████▎     | 12/28 [00:58<01:52,  7.01s/it]epoch 3 loss 1.25389:  43%|████▎     | 12/28 [00:59<01:52,  7.01s/it]epoch 3 loss 1.25389:  46%|████▋     | 13/28 [00:59<01:15,  5.02s/it]epoch 3 loss 1.25623:  46%|████▋     | 13/28 [00:59<01:15,  5.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6625[0m
[32m  eval_f1 = 0.3673[0m
[32m  eval_mcc = 0.6442[0m
[32m  eval_precision = 0.4766[0m
[32m  eval_recall = 0.3388[0m
[32m  ********************[0m
[32m  Best f1:0.3673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25623:  50%|█████     | 14/28 [01:09<01:33,  6.66s/it]epoch 3 loss 1.25363:  50%|█████     | 14/28 [01:09<01:33,  6.66s/it]epoch 3 loss 1.25363:  54%|█████▎    | 15/28 [01:09<01:02,  4.78s/it]epoch 3 loss 1.25077:  54%|█████▎    | 15/28 [01:10<01:02,  4.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6627[0m
[32m  eval_f1 = 0.3697[0m
[32m  eval_mcc = 0.6444[0m
[32m  eval_precision = 0.4751[0m
[32m  eval_recall = 0.3403[0m
[32m  ********************[0m
[32m  Best f1:0.3697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25077:  57%|█████▋    | 16/28 [01:19<01:15,  6.31s/it]epoch 3 loss 1.24554:  57%|█████▋    | 16/28 [01:20<01:15,  6.31s/it]epoch 3 loss 1.24554:  61%|██████    | 17/28 [01:20<00:49,  4.54s/it]epoch 3 loss 1.24375:  61%|██████    | 17/28 [01:20<00:49,  4.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6626[0m
[32m  eval_f1 = 0.3694[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4763[0m
[32m  eval_recall = 0.3398[0m

epoch 3 loss 1.24375:  64%|██████▍   | 18/28 [01:24<00:43,  4.31s/it]epoch 3 loss 1.23908:  64%|██████▍   | 18/28 [01:24<00:43,  4.31s/it]epoch 3 loss 1.23908:  68%|██████▊   | 19/28 [01:24<00:28,  3.13s/it]epoch 3 loss 1.23781:  68%|██████▊   | 19/28 [01:24<00:28,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6623[0m
[32m  eval_f1 = 0.3695[0m
[32m  eval_mcc = 0.6439[0m
[32m  eval_precision = 0.4771[0m
[32m  eval_recall = 0.3395[0m

epoch 3 loss 1.23781:  71%|███████▏  | 20/28 [01:28<00:26,  3.33s/it]epoch 3 loss 1.24408:  71%|███████▏  | 20/28 [01:28<00:26,  3.33s/it]epoch 3 loss 1.24408:  75%|███████▌  | 21/28 [01:28<00:17,  2.45s/it]epoch 3 loss 1.24349:  75%|███████▌  | 21/28 [01:29<00:17,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6629[0m
[32m  eval_f1 = 0.3694[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4759[0m
[32m  eval_recall = 0.3397[0m

epoch 3 loss 1.24349:  79%|███████▊  | 22/28 [01:32<00:17,  2.85s/it]epoch 3 loss 1.25037:  79%|███████▊  | 22/28 [01:32<00:17,  2.85s/it]epoch 3 loss 1.25037:  82%|████████▏ | 23/28 [01:32<00:10,  2.11s/it]epoch 3 loss 1.25377:  82%|████████▏ | 23/28 [01:33<00:10,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.665[0m
[32m  eval_f1 = 0.371[0m
[32m  eval_mcc = 0.6463[0m
[32m  eval_precision = 0.4851[0m
[32m  eval_recall = 0.3413[0m
[32m  ********************[0m
[32m  Best f1:0.371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6463[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25377:  86%|████████▌ | 24/28 [01:40<00:15,  3.89s/it]epoch 3 loss 1.25425:  86%|████████▌ | 24/28 [01:41<00:15,  3.89s/it]epoch 3 loss 1.25425:  89%|████████▉ | 25/28 [01:41<00:08,  2.85s/it]epoch 3 loss 1.24706:  89%|████████▉ | 25/28 [01:41<00:08,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.371[0m
[32m  eval_mcc = 0.6467[0m
[32m  eval_precision = 0.4832[0m
[32m  eval_recall = 0.3415[0m
[32m  ********************[0m
[32m  Best f1:0.371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6467[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24706:  93%|█████████▎| 26/28 [01:50<00:09,  4.82s/it]epoch 3 loss 1.2458:  93%|█████████▎| 26/28 [01:51<00:09,  4.82s/it] epoch 3 loss 1.2458:  96%|█████████▋| 27/28 [01:51<00:03,  3.50s/it]epoch 3 loss 1.24697:  96%|█████████▋| 27/28 [01:51<00:03,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6656[0m
[32m  eval_f1 = 0.3722[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.4828[0m
[32m  eval_recall = 0.3426[0m
[32m  ********************[0m
[32m  Best f1:0.3722[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24697: 100%|██████████| 28/28 [02:01<00:00,  5.52s/it]epoch 3 loss 1.24697: 100%|██████████| 28/28 [02:01<00:00,  4.33s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.17723:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.17723:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 4 loss 1.2537:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6666[0m
[32m  eval_f1 = 0.3754[0m
[32m  eval_mcc = 0.6479[0m
[32m  eval_precision = 0.4841[0m
[32m  eval_recall = 0.3458[0m
[32m  ********************[0m
[32m  Best f1:0.3754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2537:   7%|▋         | 2/28 [00:09<02:18,  5.32s/it]epoch 4 loss 1.20958:   7%|▋         | 2/28 [00:09<02:18,  5.32s/it]epoch 4 loss 1.20958:  11%|█         | 3/28 [00:09<01:17,  3.08s/it]epoch 4 loss 1.20505:  11%|█         | 3/28 [00:09<01:17,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3758[0m
[32m  eval_mcc = 0.6481[0m
[32m  eval_precision = 0.4837[0m
[32m  eval_recall = 0.346[0m
[32m  ********************[0m
[32m  Best f1:0.3758[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20505:  14%|█▍        | 4/28 [00:19<02:14,  5.59s/it]epoch 4 loss 1.213:  14%|█▍        | 4/28 [00:19<02:14,  5.59s/it]  epoch 4 loss 1.213:  18%|█▊        | 5/28 [00:19<01:25,  3.73s/it]epoch 4 loss 1.21515:  18%|█▊        | 5/28 [00:19<01:25,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6676[0m
[32m  eval_f1 = 0.3768[0m
[32m  eval_mcc = 0.6492[0m
[32m  eval_precision = 0.4833[0m
[32m  eval_recall = 0.3468[0m
[32m  ********************[0m
[32m  Best f1:0.3768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6492[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21515:  21%|██▏       | 6/28 [00:27<01:54,  5.22s/it]epoch 4 loss 1.22243:  21%|██▏       | 6/28 [00:27<01:54,  5.22s/it]epoch 4 loss 1.22243:  25%|██▌       | 7/28 [00:27<01:16,  3.65s/it]epoch 4 loss 1.22434:  25%|██▌       | 7/28 [00:28<01:16,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6678[0m
[32m  eval_f1 = 0.377[0m
[32m  eval_mcc = 0.6493[0m
[32m  eval_precision = 0.4821[0m
[32m  eval_recall = 0.3471[0m
[32m  ********************[0m
[32m  Best f1:0.377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22434:  29%|██▊       | 8/28 [00:37<01:52,  5.62s/it]epoch 4 loss 1.22827:  29%|██▊       | 8/28 [00:38<01:52,  5.62s/it]epoch 4 loss 1.22827:  32%|███▏      | 9/28 [00:38<01:15,  3.99s/it]epoch 4 loss 1.22201:  32%|███▏      | 9/28 [00:38<01:15,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6676[0m
[32m  eval_f1 = 0.3772[0m
[32m  eval_mcc = 0.6491[0m
[32m  eval_precision = 0.4822[0m
[32m  eval_recall = 0.3473[0m
[32m  ********************[0m
[32m  Best f1:0.3772[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.22201:  36%|███▌      | 10/28 [00:44<01:24,  4.71s/it]epoch 4 loss 1.23292:  36%|███▌      | 10/28 [00:44<01:24,  4.71s/it]epoch 4 loss 1.23292:  39%|███▉      | 11/28 [00:44<00:57,  3.40s/it]epoch 4 loss 1.22726:  39%|███▉      | 11/28 [00:45<00:57,  3.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.668[0m
[32m  eval_f1 = 0.3779[0m
[32m  eval_mcc = 0.6494[0m
[32m  eval_precision = 0.4865[0m
[32m  eval_recall = 0.3479[0m
[32m  ********************[0m
[32m  Best f1:0.3779[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22726:  43%|████▎     | 12/28 [00:54<01:24,  5.31s/it]epoch 4 loss 1.22809:  43%|████▎     | 12/28 [00:55<01:24,  5.31s/it]epoch 4 loss 1.22809:  46%|████▋     | 13/28 [00:55<00:57,  3.83s/it]epoch 4 loss 1.23217:  46%|████▋     | 13/28 [00:55<00:57,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6684[0m
[32m  eval_f1 = 0.3798[0m
[32m  eval_mcc = 0.6498[0m
[32m  eval_precision = 0.4864[0m
[32m  eval_recall = 0.3499[0m
[32m  ********************[0m
[32m  Best f1:0.3798[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6498[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23217:  50%|█████     | 14/28 [01:02<01:10,  5.06s/it]epoch 4 loss 1.22646:  50%|█████     | 14/28 [01:03<01:10,  5.06s/it]epoch 4 loss 1.22646:  54%|█████▎    | 15/28 [01:03<00:47,  3.66s/it]epoch 4 loss 1.22597:  54%|█████▎    | 15/28 [01:03<00:47,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6686[0m
[32m  eval_f1 = 0.3798[0m
[32m  eval_mcc = 0.65[0m
[32m  eval_precision = 0.4865[0m
[32m  eval_recall = 0.35[0m
[32m  ********************[0m
[32m  Best f1:0.3798[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.65[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22597:  57%|█████▋    | 16/28 [01:09<00:52,  4.35s/it]epoch 4 loss 1.22704:  57%|█████▋    | 16/28 [01:09<00:52,  4.35s/it]epoch 4 loss 1.22704:  61%|██████    | 17/28 [01:09<00:34,  3.17s/it]epoch 4 loss 1.22818:  61%|██████    | 17/28 [01:10<00:34,  3.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.669[0m
[32m  eval_f1 = 0.3799[0m
[32m  eval_mcc = 0.6504[0m
[32m  eval_precision = 0.4869[0m
[32m  eval_recall = 0.3501[0m
[32m  ********************[0m
[32m  Best f1:0.3799[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22818:  64%|██████▍   | 18/28 [01:23<01:03,  6.32s/it]epoch 4 loss 1.22512:  64%|██████▍   | 18/28 [01:23<01:03,  6.32s/it]epoch 4 loss 1.22512:  68%|██████▊   | 19/28 [01:23<00:40,  4.55s/it]epoch 4 loss 1.22603:  68%|██████▊   | 19/28 [01:24<00:40,  4.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6691[0m
[32m  eval_f1 = 0.3802[0m
[32m  eval_mcc = 0.6505[0m
[32m  eval_precision = 0.4878[0m
[32m  eval_recall = 0.3503[0m
[32m  ********************[0m
[32m  Best f1:0.3802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22603:  71%|███████▏  | 20/28 [01:40<01:05,  8.22s/it]epoch 4 loss 1.22063:  71%|███████▏  | 20/28 [01:41<01:05,  8.22s/it]epoch 4 loss 1.22063:  75%|███████▌  | 21/28 [01:41<00:41,  5.88s/it]epoch 4 loss 1.22017:  75%|███████▌  | 21/28 [01:41<00:41,  5.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.669[0m
[32m  eval_f1 = 0.3803[0m
[32m  eval_mcc = 0.6504[0m
[32m  eval_precision = 0.4897[0m
[32m  eval_recall = 0.3506[0m
[32m  ********************[0m
[32m  Best f1:0.3803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.22017:  79%|███████▊  | 22/28 [01:51<00:43,  7.20s/it]epoch 4 loss 1.21605:  79%|███████▊  | 22/28 [01:51<00:43,  7.20s/it]epoch 4 loss 1.21605:  82%|████████▏ | 23/28 [01:51<00:25,  5.16s/it]epoch 4 loss 1.21655:  82%|████████▏ | 23/28 [01:52<00:25,  5.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6691[0m
[32m  eval_f1 = 0.3803[0m
[32m  eval_mcc = 0.6506[0m
[32m  eval_precision = 0.4899[0m
[32m  eval_recall = 0.3505[0m
[32m  ********************[0m
[32m  Best f1:0.3803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6506[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21655:  86%|████████▌ | 24/28 [02:04<00:29,  7.48s/it]epoch 4 loss 1.21855:  86%|████████▌ | 24/28 [02:05<00:29,  7.48s/it]epoch 4 loss 1.21855:  89%|████████▉ | 25/28 [02:05<00:16,  5.36s/it]epoch 4 loss 1.21623:  89%|████████▉ | 25/28 [02:05<00:16,  5.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6693[0m
[32m  eval_f1 = 0.3804[0m
[32m  eval_mcc = 0.6508[0m
[32m  eval_precision = 0.4902[0m
[32m  eval_recall = 0.3506[0m
[32m  ********************[0m
[32m  Best f1:0.3804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21623:  93%|█████████▎| 26/28 [02:18<00:15,  7.67s/it]epoch 4 loss 1.21184:  93%|█████████▎| 26/28 [02:18<00:15,  7.67s/it]epoch 4 loss 1.21184:  96%|█████████▋| 27/28 [02:18<00:05,  5.49s/it]epoch 4 loss 1.21104:  96%|█████████▋| 27/28 [02:18<00:05,  5.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6694[0m
[32m  eval_f1 = 0.3813[0m
[32m  eval_mcc = 0.6509[0m
[32m  eval_precision = 0.4905[0m
[32m  eval_recall = 0.3515[0m
[32m  ********************[0m
[32m  Best f1:0.3813[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21104: 100%|██████████| 28/28 [02:28<00:00,  6.86s/it]epoch 4 loss 1.21104: 100%|██████████| 28/28 [02:28<00:00,  5.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.69it/s] 20%|██        | 2/10 [00:00<00:02,  2.70it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6694[0m
[32m  eval_f1 = 0.3813[0m
[32m  eval_mcc = 0.6509[0m
[32m  eval_precision = 0.4905[0m
[32m  eval_recall = 0.3515[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.78it/s] 20%|██        | 2/10 [00:00<00:02,  2.77it/s] 30%|███       | 3/10 [00:01<00:02,  2.77it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.72it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6542[0m
[32m  eval_f1 = 0.3405[0m
[32m  eval_mcc = 0.6358[0m
[32m  eval_precision = 0.4579[0m
[32m  eval_recall = 0.314[0m

