[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=0, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/3/layer_0', posratio=0.5, seed=969, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.16806:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.16806:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.16687:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0088[0m
[32m  eval_f1 = 0.0018[0m
[32m  eval_mcc = -0.0018[0m
[32m  eval_precision = 0.0045[0m
[32m  eval_recall = 0.0027[0m
[32m  ********************[0m
[32m  Best f1:0.0018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.16687:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it]epoch 0 loss 5.15942:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it]epoch 0 loss 5.15942:  11%|█         | 3/28 [00:05<00:43,  1.76s/it]epoch 0 loss 5.14533:  11%|█         | 3/28 [00:05<00:43,  1.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0133[0m
[32m  eval_f1 = 0.0022[0m
[32m  eval_mcc = -0.0011[0m
[32m  eval_precision = 0.0062[0m
[32m  eval_recall = 0.0033[0m
[32m  ********************[0m
[32m  Best f1:0.0022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.14533:  14%|█▍        | 4/28 [00:10<01:09,  2.91s/it]epoch 0 loss 5.12197:  14%|█▍        | 4/28 [00:10<01:09,  2.91s/it]epoch 0 loss 5.12197:  18%|█▊        | 5/28 [00:10<00:46,  2.01s/it]epoch 0 loss 5.09935:  18%|█▊        | 5/28 [00:11<00:46,  2.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0296[0m
[32m  eval_f1 = 0.0033[0m
[32m  eval_mcc = 0.0065[0m
[32m  eval_precision = 0.0065[0m
[32m  eval_recall = 0.0049[0m
[32m  ********************[0m
[32m  Best f1:0.0033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.09935:  21%|██▏       | 6/28 [00:15<01:08,  3.13s/it]epoch 0 loss 5.06544:  21%|██▏       | 6/28 [00:16<01:08,  3.13s/it]epoch 0 loss 5.06544:  25%|██▌       | 7/28 [00:16<00:46,  2.24s/it]epoch 0 loss 5.02843:  25%|██▌       | 7/28 [00:16<00:46,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0515[0m
[32m  eval_f1 = 0.0057[0m
[32m  eval_mcc = 0.0133[0m
[32m  eval_precision = 0.0099[0m
[32m  eval_recall = 0.0076[0m
[32m  ********************[0m
[32m  Best f1:0.0057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.02843:  29%|██▊       | 8/28 [00:21<01:05,  3.28s/it]epoch 0 loss 4.98609:  29%|██▊       | 8/28 [00:22<01:05,  3.28s/it]epoch 0 loss 4.98609:  32%|███▏      | 9/28 [00:22<00:45,  2.39s/it]epoch 0 loss 4.93869:  32%|███▏      | 9/28 [00:22<00:45,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0897[0m
[32m  eval_f1 = 0.0105[0m
[32m  eval_mcc = 0.0366[0m
[32m  eval_precision = 0.0138[0m
[32m  eval_recall = 0.0127[0m
[32m  ********************[0m
[32m  Best f1:0.0105[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93869:  36%|███▌      | 10/28 [00:27<01:00,  3.38s/it]epoch 0 loss 4.88676:  36%|███▌      | 10/28 [00:28<01:00,  3.38s/it]epoch 0 loss 4.88676:  39%|███▉      | 11/28 [00:28<00:42,  2.48s/it]epoch 0 loss 4.83198:  39%|███▉      | 11/28 [00:28<00:42,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1333[0m
[32m  eval_f1 = 0.0194[0m
[32m  eval_mcc = 0.0756[0m
[32m  eval_precision = 0.0243[0m
[32m  eval_recall = 0.024[0m
[32m  ********************[0m
[32m  Best f1:0.0194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0756[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.83198:  43%|████▎     | 12/28 [00:34<00:58,  3.63s/it]epoch 0 loss 4.76975:  43%|████▎     | 12/28 [00:35<00:58,  3.63s/it]epoch 0 loss 4.76975:  46%|████▋     | 13/28 [00:35<00:39,  2.66s/it]epoch 0 loss 4.70674:  46%|████▋     | 13/28 [00:35<00:39,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1844[0m
[32m  eval_f1 = 0.037[0m
[32m  eval_mcc = 0.129[0m
[32m  eval_precision = 0.0508[0m
[32m  eval_recall = 0.0408[0m
[32m  ********************[0m
[32m  Best f1:0.037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.70674:  50%|█████     | 14/28 [00:41<00:54,  3.86s/it]epoch 0 loss 4.63848:  50%|█████     | 14/28 [00:42<00:54,  3.86s/it]epoch 0 loss 4.63848:  54%|█████▎    | 15/28 [00:42<00:36,  2.83s/it]epoch 0 loss 4.56788:  54%|█████▎    | 15/28 [00:42<00:36,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2395[0m
[32m  eval_f1 = 0.0615[0m
[32m  eval_mcc = 0.1875[0m
[32m  eval_precision = 0.0812[0m
[32m  eval_recall = 0.0604[0m
[32m  ********************[0m
[32m  Best f1:0.0615[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.56788:  57%|█████▋    | 16/28 [00:48<00:46,  3.83s/it]epoch 0 loss 4.49743:  57%|█████▋    | 16/28 [00:48<00:46,  3.83s/it]epoch 0 loss 4.49743:  61%|██████    | 17/28 [00:48<00:30,  2.81s/it]epoch 0 loss 4.42371:  61%|██████    | 17/28 [00:49<00:30,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2935[0m
[32m  eval_f1 = 0.0782[0m
[32m  eval_mcc = 0.2443[0m
[32m  eval_precision = 0.1165[0m
[32m  eval_recall = 0.0739[0m
[32m  ********************[0m
[32m  Best f1:0.0782[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.42371:  64%|██████▍   | 18/28 [00:54<00:38,  3.84s/it]epoch 0 loss 4.35151:  64%|██████▍   | 18/28 [00:55<00:38,  3.84s/it]epoch 0 loss 4.35151:  68%|██████▊   | 19/28 [00:55<00:25,  2.81s/it]epoch 0 loss 4.2864:  68%|██████▊   | 19/28 [00:55<00:25,  2.81s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3665[0m
[32m  eval_f1 = 0.1091[0m
[32m  eval_mcc = 0.3231[0m
[32m  eval_precision = 0.1517[0m
[32m  eval_recall = 0.1038[0m
[32m  ********************[0m
[32m  Best f1:0.1091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.2864:  71%|███████▏  | 20/28 [01:01<00:29,  3.72s/it]epoch 0 loss 4.21405:  71%|███████▏  | 20/28 [01:01<00:29,  3.72s/it]epoch 0 loss 4.21405:  75%|███████▌  | 21/28 [01:01<00:19,  2.73s/it]epoch 0 loss 4.1497:  75%|███████▌  | 21/28 [01:02<00:19,  2.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.408[0m
[32m  eval_f1 = 0.1135[0m
[32m  eval_mcc = 0.3677[0m
[32m  eval_precision = 0.1531[0m
[32m  eval_recall = 0.1109[0m
[32m  ********************[0m
[32m  Best f1:0.1135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3677[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.1497:  79%|███████▊  | 22/28 [01:13<00:32,  5.35s/it]epoch 0 loss 4.07965:  79%|███████▊  | 22/28 [01:13<00:32,  5.35s/it]epoch 0 loss 4.07965:  82%|████████▏ | 23/28 [01:13<00:19,  3.87s/it]epoch 0 loss 4.01217:  82%|████████▏ | 23/28 [01:13<00:19,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.63it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4467[0m
[32m  eval_f1 = 0.13[0m
[32m  eval_mcc = 0.4112[0m
[32m  eval_precision = 0.1735[0m
[32m  eval_recall = 0.1273[0m
[32m  ********************[0m
[32m  Best f1:0.13[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.01217:  86%|████████▌ | 24/28 [01:28<00:29,  7.30s/it]epoch 0 loss 3.94789:  86%|████████▌ | 24/28 [01:29<00:29,  7.30s/it]epoch 0 loss 3.94789:  89%|████████▉ | 25/28 [01:29<00:15,  5.24s/it]epoch 0 loss 3.88456:  89%|████████▉ | 25/28 [01:29<00:15,  5.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4733[0m
[32m  eval_f1 = 0.1427[0m
[32m  eval_mcc = 0.4413[0m
[32m  eval_precision = 0.2049[0m
[32m  eval_recall = 0.1389[0m
[32m  ********************[0m
[32m  Best f1:0.1427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.88456:  93%|█████████▎| 26/28 [01:41<00:14,  7.22s/it]epoch 0 loss 3.81851:  93%|█████████▎| 26/28 [01:41<00:14,  7.22s/it]epoch 0 loss 3.81851:  96%|█████████▋| 27/28 [01:41<00:05,  5.18s/it]epoch 0 loss 3.75348:  96%|█████████▋| 27/28 [01:41<00:05,  5.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5112[0m
[32m  eval_f1 = 0.1711[0m
[32m  eval_mcc = 0.4821[0m
[32m  eval_precision = 0.2399[0m
[32m  eval_recall = 0.1621[0m
[32m  ********************[0m
[32m  Best f1:0.1711[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4821[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.75348: 100%|██████████| 28/28 [01:51<00:00,  6.67s/it]epoch 0 loss 3.75348: 100%|██████████| 28/28 [01:51<00:00,  3.99s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.03478:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.03478:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 1 loss 2.12631:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5447[0m
[32m  eval_f1 = 0.1917[0m
[32m  eval_mcc = 0.5175[0m
[32m  eval_precision = 0.25[0m
[32m  eval_recall = 0.186[0m
[32m  ********************[0m
[32m  Best f1:0.1917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12631:   7%|▋         | 2/28 [00:12<03:07,  7.21s/it]epoch 1 loss 2.00884:   7%|▋         | 2/28 [00:12<03:07,  7.21s/it]epoch 1 loss 2.00884:  11%|█         | 3/28 [00:12<01:42,  4.11s/it]epoch 1 loss 2.0278:  11%|█         | 3/28 [00:13<01:42,  4.11s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5737[0m
[32m  eval_f1 = 0.2157[0m
[32m  eval_mcc = 0.5484[0m
[32m  eval_precision = 0.2632[0m
[32m  eval_recall = 0.2123[0m
[32m  ********************[0m
[32m  Best f1:0.2157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0278:  14%|█▍        | 4/28 [00:21<02:26,  6.09s/it]epoch 1 loss 1.9848:  14%|█▍        | 4/28 [00:22<02:26,  6.09s/it]epoch 1 loss 1.9848:  18%|█▊        | 5/28 [00:22<01:32,  4.04s/it]epoch 1 loss 1.94242:  18%|█▊        | 5/28 [00:22<01:32,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.587[0m
[32m  eval_f1 = 0.226[0m
[32m  eval_mcc = 0.5631[0m
[32m  eval_precision = 0.3002[0m
[32m  eval_recall = 0.2205[0m
[32m  ********************[0m
[32m  Best f1:0.226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94242:  21%|██▏       | 6/28 [00:34<02:32,  6.91s/it]epoch 1 loss 1.90079:  21%|██▏       | 6/28 [00:35<02:32,  6.91s/it]epoch 1 loss 1.90079:  25%|██▌       | 7/28 [00:35<01:40,  4.79s/it]epoch 1 loss 1.86404:  25%|██▌       | 7/28 [00:35<01:40,  4.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5982[0m
[32m  eval_f1 = 0.2308[0m
[32m  eval_mcc = 0.5753[0m
[32m  eval_precision = 0.3187[0m
[32m  eval_recall = 0.2229[0m
[32m  ********************[0m
[32m  Best f1:0.2308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5753[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86404:  29%|██▊       | 8/28 [00:45<02:07,  6.38s/it]epoch 1 loss 1.83925:  29%|██▊       | 8/28 [00:45<02:07,  6.38s/it]epoch 1 loss 1.83925:  32%|███▏      | 9/28 [00:45<01:25,  4.52s/it]epoch 1 loss 1.81764:  32%|███▏      | 9/28 [00:45<01:25,  4.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6049[0m
[32m  eval_f1 = 0.2405[0m
[32m  eval_mcc = 0.5829[0m
[32m  eval_precision = 0.3522[0m
[32m  eval_recall = 0.2272[0m
[32m  ********************[0m
[32m  Best f1:0.2405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81764:  36%|███▌      | 10/28 [00:54<01:44,  5.82s/it]epoch 1 loss 1.7748:  36%|███▌      | 10/28 [00:54<01:44,  5.82s/it] epoch 1 loss 1.7748:  39%|███▉      | 11/28 [00:54<01:10,  4.16s/it]epoch 1 loss 1.74689:  39%|███▉      | 11/28 [00:54<01:10,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6128[0m
[32m  eval_f1 = 0.2563[0m
[32m  eval_mcc = 0.5912[0m
[32m  eval_precision = 0.3646[0m
[32m  eval_recall = 0.2388[0m
[32m  ********************[0m
[32m  Best f1:0.2563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5912[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74689:  43%|████▎     | 12/28 [01:01<01:19,  4.94s/it]epoch 1 loss 1.72775:  43%|████▎     | 12/28 [01:01<01:19,  4.94s/it]epoch 1 loss 1.72775:  46%|████▋     | 13/28 [01:01<00:53,  3.57s/it]epoch 1 loss 1.71892:  46%|████▋     | 13/28 [01:02<00:53,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6194[0m
[32m  eval_f1 = 0.2696[0m
[32m  eval_mcc = 0.5981[0m
[32m  eval_precision = 0.3767[0m
[32m  eval_recall = 0.2486[0m
[32m  ********************[0m
[32m  Best f1:0.2696[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5981[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.71892:  50%|█████     | 14/28 [01:08<01:03,  4.52s/it]epoch 1 loss 1.70034:  50%|█████     | 14/28 [01:08<01:03,  4.52s/it]epoch 1 loss 1.70034:  54%|█████▎    | 15/28 [01:08<00:42,  3.29s/it]epoch 1 loss 1.68207:  54%|█████▎    | 15/28 [01:09<00:42,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6229[0m
[32m  eval_f1 = 0.2838[0m
[32m  eval_mcc = 0.6018[0m
[32m  eval_precision = 0.3864[0m
[32m  eval_recall = 0.2605[0m
[32m  ********************[0m
[32m  Best f1:0.2838[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.68207:  57%|█████▋    | 16/28 [01:17<00:59,  4.97s/it]epoch 1 loss 1.66595:  57%|█████▋    | 16/28 [01:18<00:59,  4.97s/it]epoch 1 loss 1.66595:  61%|██████    | 17/28 [01:18<00:39,  3.60s/it]epoch 1 loss 1.65193:  61%|██████    | 17/28 [01:18<00:39,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6276[0m
[32m  eval_f1 = 0.3144[0m
[32m  eval_mcc = 0.6066[0m
[32m  eval_precision = 0.4157[0m
[32m  eval_recall = 0.2911[0m
[32m  ********************[0m
[32m  Best f1:0.3144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.65193:  64%|██████▍   | 18/28 [01:28<00:56,  5.70s/it]epoch 1 loss 1.6333:  64%|██████▍   | 18/28 [01:29<00:56,  5.70s/it] epoch 1 loss 1.6333:  68%|██████▊   | 19/28 [01:29<00:37,  4.12s/it]epoch 1 loss 1.61851:  68%|██████▊   | 19/28 [01:29<00:37,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6333[0m
[32m  eval_f1 = 0.3247[0m
[32m  eval_mcc = 0.6125[0m
[32m  eval_precision = 0.4313[0m
[32m  eval_recall = 0.3005[0m
[32m  ********************[0m
[32m  Best f1:0.3247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.61851:  71%|███████▏  | 20/28 [01:37<00:43,  5.41s/it]epoch 1 loss 1.60644:  71%|███████▏  | 20/28 [01:38<00:43,  5.41s/it]epoch 1 loss 1.60644:  75%|███████▌  | 21/28 [01:38<00:27,  3.92s/it]epoch 1 loss 1.60059:  75%|███████▌  | 21/28 [01:38<00:27,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6362[0m
[32m  eval_f1 = 0.3279[0m
[32m  eval_mcc = 0.6151[0m
[32m  eval_precision = 0.4388[0m
[32m  eval_recall = 0.3031[0m
[32m  ********************[0m
[32m  Best f1:0.3279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.60059:  79%|███████▊  | 22/28 [01:48<00:35,  5.96s/it]epoch 1 loss 1.58861:  79%|███████▊  | 22/28 [01:49<00:35,  5.96s/it]epoch 1 loss 1.58861:  82%|████████▏ | 23/28 [01:49<00:21,  4.30s/it]epoch 1 loss 1.58028:  82%|████████▏ | 23/28 [01:49<00:21,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6386[0m
[32m  eval_f1 = 0.3313[0m
[32m  eval_mcc = 0.6173[0m
[32m  eval_precision = 0.4359[0m
[32m  eval_recall = 0.3065[0m
[32m  ********************[0m
[32m  Best f1:0.3313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.58028:  86%|████████▌ | 24/28 [01:56<00:21,  5.34s/it]epoch 1 loss 1.57226:  86%|████████▌ | 24/28 [01:57<00:21,  5.34s/it]epoch 1 loss 1.57226:  89%|████████▉ | 25/28 [01:57<00:11,  3.87s/it]epoch 1 loss 1.56509:  89%|████████▉ | 25/28 [01:57<00:11,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6437[0m
[32m  eval_f1 = 0.3384[0m
[32m  eval_mcc = 0.6227[0m
[32m  eval_precision = 0.439[0m
[32m  eval_recall = 0.3125[0m
[32m  ********************[0m
[32m  Best f1:0.3384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.56509:  93%|█████████▎| 26/28 [02:05<00:10,  5.27s/it]epoch 1 loss 1.55673:  93%|█████████▎| 26/28 [02:06<00:10,  5.27s/it]epoch 1 loss 1.55673:  96%|█████████▋| 27/28 [02:06<00:03,  3.82s/it]epoch 1 loss 1.55208:  96%|█████████▋| 27/28 [02:06<00:03,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6477[0m
[32m  eval_f1 = 0.3442[0m
[32m  eval_mcc = 0.6273[0m
[32m  eval_precision = 0.4429[0m
[32m  eval_recall = 0.3182[0m
[32m  ********************[0m
[32m  Best f1:0.3442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.55208: 100%|██████████| 28/28 [02:15<00:00,  5.46s/it]epoch 1 loss 1.55208: 100%|██████████| 28/28 [02:15<00:00,  4.84s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.27611:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.27611:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 2 loss 1.28643:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6513[0m
[32m  eval_f1 = 0.3476[0m
[32m  eval_mcc = 0.6314[0m
[32m  eval_precision = 0.4409[0m
[32m  eval_recall = 0.3238[0m
[32m  ********************[0m
[32m  Best f1:0.3476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28643:   7%|▋         | 2/28 [00:09<02:19,  5.36s/it]epoch 2 loss 1.27479:   7%|▋         | 2/28 [00:09<02:19,  5.36s/it]epoch 2 loss 1.27479:  11%|█         | 3/28 [00:09<01:17,  3.10s/it]epoch 2 loss 1.26977:  11%|█         | 3/28 [00:10<01:17,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.352[0m
[32m  eval_mcc = 0.6361[0m
[32m  eval_precision = 0.4527[0m
[32m  eval_recall = 0.3281[0m
[32m  ********************[0m
[32m  Best f1:0.352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26977:  14%|█▍        | 4/28 [00:17<01:58,  4.92s/it]epoch 2 loss 1.24956:  14%|█▍        | 4/28 [00:17<01:58,  4.92s/it]epoch 2 loss 1.24956:  18%|█▊        | 5/28 [00:17<01:15,  3.29s/it]epoch 2 loss 1.2308:  18%|█▊        | 5/28 [00:18<01:15,  3.29s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3599[0m
[32m  eval_mcc = 0.6371[0m
[32m  eval_precision = 0.4666[0m
[32m  eval_recall = 0.3332[0m
[32m  ********************[0m
[32m  Best f1:0.3599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2308:  21%|██▏       | 6/28 [00:26<01:55,  5.25s/it]epoch 2 loss 1.2528:  21%|██▏       | 6/28 [00:27<01:55,  5.25s/it]epoch 2 loss 1.2528:  25%|██▌       | 7/28 [00:27<01:17,  3.67s/it]epoch 2 loss 1.25838:  25%|██▌       | 7/28 [00:27<01:17,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3637[0m
[32m  eval_mcc = 0.6398[0m
[32m  eval_precision = 0.4825[0m
[32m  eval_recall = 0.336[0m
[32m  ********************[0m
[32m  Best f1:0.3637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25838:  29%|██▊       | 8/28 [00:33<01:30,  4.50s/it]epoch 2 loss 1.25135:  29%|██▊       | 8/28 [00:33<01:30,  4.50s/it]epoch 2 loss 1.25135:  32%|███▏      | 9/28 [00:33<01:01,  3.23s/it]epoch 2 loss 1.25537:  32%|███▏      | 9/28 [00:34<01:01,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6591[0m
[32m  eval_f1 = 0.3659[0m
[32m  eval_mcc = 0.6409[0m
[32m  eval_precision = 0.4831[0m
[32m  eval_recall = 0.338[0m
[32m  ********************[0m
[32m  Best f1:0.3659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25537:  36%|███▌      | 10/28 [00:40<01:15,  4.17s/it]epoch 2 loss 1.25642:  36%|███▌      | 10/28 [00:40<01:15,  4.17s/it]epoch 2 loss 1.25642:  39%|███▉      | 11/28 [00:40<00:51,  3.03s/it]epoch 2 loss 1.25731:  39%|███▉      | 11/28 [00:41<00:51,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.661[0m
[32m  eval_f1 = 0.3692[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.4813[0m
[32m  eval_recall = 0.3414[0m
[32m  ********************[0m
[32m  Best f1:0.3692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25731:  43%|████▎     | 12/28 [00:46<01:04,  4.02s/it]epoch 2 loss 1.26341:  43%|████▎     | 12/28 [00:47<01:04,  4.02s/it]epoch 2 loss 1.26341:  46%|████▋     | 13/28 [00:47<00:43,  2.93s/it]epoch 2 loss 1.26054:  46%|████▋     | 13/28 [00:47<00:43,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6637[0m
[32m  eval_f1 = 0.3707[0m
[32m  eval_mcc = 0.6449[0m
[32m  eval_precision = 0.4801[0m
[32m  eval_recall = 0.3433[0m
[32m  ********************[0m
[32m  Best f1:0.3707[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6449[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26054:  50%|█████     | 14/28 [00:53<00:56,  4.02s/it]epoch 2 loss 1.25408:  50%|█████     | 14/28 [00:54<00:56,  4.02s/it]epoch 2 loss 1.25408:  54%|█████▎    | 15/28 [00:54<00:38,  2.93s/it]epoch 2 loss 1.24708:  54%|█████▎    | 15/28 [00:54<00:38,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6642[0m
[32m  eval_f1 = 0.3764[0m
[32m  eval_mcc = 0.6453[0m
[32m  eval_precision = 0.4889[0m
[32m  eval_recall = 0.3466[0m
[32m  ********************[0m
[32m  Best f1:0.3764[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24708:  57%|█████▋    | 16/28 [01:00<00:46,  3.88s/it]epoch 2 loss 1.24572:  57%|█████▋    | 16/28 [01:00<00:46,  3.88s/it]epoch 2 loss 1.24572:  61%|██████    | 17/28 [01:00<00:31,  2.84s/it]epoch 2 loss 1.24742:  61%|██████    | 17/28 [01:01<00:31,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3785[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.4786[0m
[32m  eval_recall = 0.3493[0m
[32m  ********************[0m
[32m  Best f1:0.3785[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24742:  64%|██████▍   | 18/28 [01:06<00:37,  3.72s/it]epoch 2 loss 1.24321:  64%|██████▍   | 18/28 [01:07<00:37,  3.72s/it]epoch 2 loss 1.24321:  68%|██████▊   | 19/28 [01:07<00:24,  2.74s/it]epoch 2 loss 1.24093:  68%|██████▊   | 19/28 [01:07<00:24,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6683[0m
[32m  eval_f1 = 0.382[0m
[32m  eval_mcc = 0.6496[0m
[32m  eval_precision = 0.4875[0m
[32m  eval_recall = 0.3525[0m
[32m  ********************[0m
[32m  Best f1:0.382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6496[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24093:  71%|███████▏  | 20/28 [01:15<00:35,  4.44s/it]epoch 2 loss 1.24211:  71%|███████▏  | 20/28 [01:15<00:35,  4.44s/it]epoch 2 loss 1.24211:  75%|███████▌  | 21/28 [01:15<00:22,  3.24s/it]epoch 2 loss 1.24107:  75%|███████▌  | 21/28 [01:16<00:22,  3.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6685[0m
[32m  eval_f1 = 0.3823[0m
[32m  eval_mcc = 0.6497[0m
[32m  eval_precision = 0.4861[0m
[32m  eval_recall = 0.3535[0m
[32m  ********************[0m
[32m  Best f1:0.3823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24107:  79%|███████▊  | 22/28 [01:22<00:25,  4.25s/it]epoch 2 loss 1.2379:  79%|███████▊  | 22/28 [01:22<00:25,  4.25s/it] epoch 2 loss 1.2379:  82%|████████▏ | 23/28 [01:22<00:15,  3.10s/it]epoch 2 loss 1.23724:  82%|████████▏ | 23/28 [01:23<00:15,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.67[0m
[32m  eval_f1 = 0.3853[0m
[32m  eval_mcc = 0.6513[0m
[32m  eval_precision = 0.4879[0m
[32m  eval_recall = 0.3563[0m
[32m  ********************[0m
[32m  Best f1:0.3853[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.23724:  86%|████████▌ | 24/28 [01:29<00:16,  4.06s/it]epoch 2 loss 1.23169:  86%|████████▌ | 24/28 [01:29<00:16,  4.06s/it]epoch 2 loss 1.23169:  89%|████████▉ | 25/28 [01:29<00:08,  2.97s/it]epoch 2 loss 1.23019:  89%|████████▉ | 25/28 [01:30<00:08,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.671[0m
[32m  eval_f1 = 0.3879[0m
[32m  eval_mcc = 0.6524[0m
[32m  eval_precision = 0.4907[0m
[32m  eval_recall = 0.3586[0m
[32m  ********************[0m
[32m  Best f1:0.3879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6524[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.23019:  93%|█████████▎| 26/28 [01:38<00:09,  4.77s/it]epoch 2 loss 1.22638:  93%|█████████▎| 26/28 [01:39<00:09,  4.77s/it]epoch 2 loss 1.22638:  96%|█████████▋| 27/28 [01:39<00:03,  3.47s/it]epoch 2 loss 1.22254:  96%|█████████▋| 27/28 [01:39<00:03,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6716[0m
[32m  eval_f1 = 0.3877[0m
[32m  eval_mcc = 0.6529[0m
[32m  eval_precision = 0.492[0m
[32m  eval_recall = 0.3587[0m
[32m  ********************[0m
[32m  Best MCC:0.6529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.22254: 100%|██████████| 28/28 [01:43<00:00,  3.81s/it]epoch 2 loss 1.22254: 100%|██████████| 28/28 [01:43<00:00,  3.70s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.11714:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.11714:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s]epoch 3 loss 1.1754:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6723[0m
[32m  eval_f1 = 0.3876[0m
[32m  eval_mcc = 0.6535[0m
[32m  eval_precision = 0.4947[0m
[32m  eval_recall = 0.3585[0m
[32m  ********************[0m
[32m  Best MCC:0.6535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1754:   7%|▋         | 2/28 [00:08<02:01,  4.67s/it]epoch 3 loss 1.1714:   7%|▋         | 2/28 [00:08<02:01,  4.67s/it]epoch 3 loss 1.1714:  11%|█         | 3/28 [00:08<01:08,  2.73s/it]epoch 3 loss 1.17193:  11%|█         | 3/28 [00:08<01:08,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6732[0m
[32m  eval_f1 = 0.3884[0m
[32m  eval_mcc = 0.6543[0m
[32m  eval_precision = 0.4955[0m
[32m  eval_recall = 0.3596[0m
[32m  ********************[0m
[32m  Best f1:0.3884[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6543[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17193:  14%|█▍        | 4/28 [00:17<02:05,  5.23s/it]epoch 3 loss 1.16171:  14%|█▍        | 4/28 [00:17<02:05,  5.23s/it]epoch 3 loss 1.16171:  18%|█▊        | 5/28 [00:17<01:20,  3.49s/it]epoch 3 loss 1.15427:  18%|█▊        | 5/28 [00:18<01:20,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6743[0m
[32m  eval_f1 = 0.389[0m
[32m  eval_mcc = 0.6554[0m
[32m  eval_precision = 0.4901[0m
[32m  eval_recall = 0.361[0m
[32m  ********************[0m
[32m  Best f1:0.389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15427:  21%|██▏       | 6/28 [00:26<01:55,  5.26s/it]epoch 3 loss 1.16172:  21%|██▏       | 6/28 [00:27<01:55,  5.26s/it]epoch 3 loss 1.16172:  25%|██▌       | 7/28 [00:27<01:17,  3.68s/it]epoch 3 loss 1.1542:  25%|██▌       | 7/28 [00:27<01:17,  3.68s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6746[0m
[32m  eval_f1 = 0.3901[0m
[32m  eval_mcc = 0.6559[0m
[32m  eval_precision = 0.4893[0m
[32m  eval_recall = 0.3623[0m
[32m  ********************[0m
[32m  Best f1:0.3901[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1542:  29%|██▊       | 8/28 [00:36<01:48,  5.40s/it]epoch 3 loss 1.15292:  29%|██▊       | 8/28 [00:36<01:48,  5.40s/it]epoch 3 loss 1.15292:  32%|███▏      | 9/28 [00:36<01:13,  3.84s/it]epoch 3 loss 1.14471:  32%|███▏      | 9/28 [00:36<01:13,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6769[0m
[32m  eval_f1 = 0.3942[0m
[32m  eval_mcc = 0.6588[0m
[32m  eval_precision = 0.4933[0m
[32m  eval_recall = 0.3647[0m
[32m  ********************[0m
[32m  Best f1:0.3942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14471:  36%|███▌      | 10/28 [00:47<01:49,  6.07s/it]epoch 3 loss 1.14308:  36%|███▌      | 10/28 [00:48<01:49,  6.07s/it]epoch 3 loss 1.14308:  39%|███▉      | 11/28 [00:48<01:13,  4.34s/it]epoch 3 loss 1.14484:  39%|███▉      | 11/28 [00:48<01:13,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6776[0m
[32m  eval_f1 = 0.3947[0m
[32m  eval_mcc = 0.6597[0m
[32m  eval_precision = 0.4967[0m
[32m  eval_recall = 0.3648[0m
[32m  ********************[0m
[32m  Best f1:0.3947[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14484:  43%|████▎     | 12/28 [00:57<01:31,  5.74s/it]epoch 3 loss 1.14735:  43%|████▎     | 12/28 [00:57<01:31,  5.74s/it]epoch 3 loss 1.14735:  46%|████▋     | 13/28 [00:57<01:01,  4.13s/it]epoch 3 loss 1.15015:  46%|████▋     | 13/28 [00:57<01:01,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.679[0m
[32m  eval_f1 = 0.3958[0m
[32m  eval_mcc = 0.6612[0m
[32m  eval_precision = 0.4976[0m
[32m  eval_recall = 0.3658[0m
[32m  ********************[0m
[32m  Best f1:0.3958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15015:  50%|█████     | 14/28 [01:08<01:25,  6.11s/it]epoch 3 loss 1.14744:  50%|█████     | 14/28 [01:08<01:25,  6.11s/it]epoch 3 loss 1.14744:  54%|█████▎    | 15/28 [01:08<00:57,  4.39s/it]epoch 3 loss 1.14523:  54%|█████▎    | 15/28 [01:08<00:57,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6785[0m
[32m  eval_f1 = 0.3956[0m
[32m  eval_mcc = 0.6608[0m
[32m  eval_precision = 0.4961[0m
[32m  eval_recall = 0.3654[0m

epoch 3 loss 1.14523:  57%|█████▋    | 16/28 [01:12<00:50,  4.22s/it]epoch 3 loss 1.14048:  57%|█████▋    | 16/28 [01:12<00:50,  4.22s/it]epoch 3 loss 1.14048:  61%|██████    | 17/28 [01:12<00:33,  3.07s/it]epoch 3 loss 1.1388:  61%|██████    | 17/28 [01:13<00:33,  3.07s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6786[0m
[32m  eval_f1 = 0.396[0m
[32m  eval_mcc = 0.6609[0m
[32m  eval_precision = 0.4966[0m
[32m  eval_recall = 0.3656[0m
[32m  ********************[0m
[32m  Best f1:0.396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.1388:  64%|██████▍   | 18/28 [01:17<00:36,  3.67s/it]epoch 3 loss 1.13442:  64%|██████▍   | 18/28 [01:18<00:36,  3.67s/it]epoch 3 loss 1.13442:  68%|██████▊   | 19/28 [01:18<00:24,  2.69s/it]epoch 3 loss 1.13263:  68%|██████▊   | 19/28 [01:18<00:24,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.58it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6773[0m
[32m  eval_f1 = 0.3952[0m
[32m  eval_mcc = 0.6594[0m
[32m  eval_precision = 0.4946[0m
[32m  eval_recall = 0.3645[0m

epoch 3 loss 1.13263:  71%|███████▏  | 20/28 [01:23<00:28,  3.59s/it]epoch 3 loss 1.13866:  71%|███████▏  | 20/28 [01:24<00:28,  3.59s/it]epoch 3 loss 1.13866:  75%|███████▌  | 21/28 [01:24<00:18,  2.63s/it]epoch 3 loss 1.13797:  75%|███████▌  | 21/28 [01:24<00:18,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6783[0m
[32m  eval_f1 = 0.3957[0m
[32m  eval_mcc = 0.6604[0m
[32m  eval_precision = 0.4948[0m
[32m  eval_recall = 0.3651[0m

epoch 3 loss 1.13797:  79%|███████▊  | 22/28 [01:28<00:17,  2.98s/it]epoch 3 loss 1.14439:  79%|███████▊  | 22/28 [01:28<00:17,  2.98s/it]epoch 3 loss 1.14439:  82%|████████▏ | 23/28 [01:28<00:11,  2.21s/it]epoch 3 loss 1.1478:  82%|████████▏ | 23/28 [01:28<00:11,  2.21s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6797[0m
[32m  eval_f1 = 0.3979[0m
[32m  eval_mcc = 0.6617[0m
[32m  eval_precision = 0.4945[0m
[32m  eval_recall = 0.3679[0m
[32m  ********************[0m
[32m  Best f1:0.3979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1478:  86%|████████▌ | 24/28 [01:38<00:18,  4.51s/it]epoch 3 loss 1.14834:  86%|████████▌ | 24/28 [01:38<00:18,  4.51s/it]epoch 3 loss 1.14834:  89%|████████▉ | 25/28 [01:38<00:09,  3.28s/it]epoch 3 loss 1.1416:  89%|████████▉ | 25/28 [01:39<00:09,  3.28s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6819[0m
[32m  eval_f1 = 0.398[0m
[32m  eval_mcc = 0.664[0m
[32m  eval_precision = 0.4928[0m
[32m  eval_recall = 0.3691[0m
[32m  ********************[0m
[32m  Best f1:0.398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.664[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1416:  93%|█████████▎| 26/28 [01:46<00:09,  4.66s/it]epoch 3 loss 1.14049:  93%|█████████▎| 26/28 [01:47<00:09,  4.66s/it]epoch 3 loss 1.14049:  96%|█████████▋| 27/28 [01:47<00:03,  3.39s/it]epoch 3 loss 1.14189:  96%|█████████▋| 27/28 [01:47<00:03,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6829[0m
[32m  eval_f1 = 0.3983[0m
[32m  eval_mcc = 0.6651[0m
[32m  eval_precision = 0.492[0m
[32m  eval_recall = 0.3696[0m
[32m  ********************[0m
[32m  Best f1:0.3983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14189: 100%|██████████| 28/28 [01:55<00:00,  4.88s/it]epoch 3 loss 1.14189: 100%|██████████| 28/28 [01:55<00:00,  4.12s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.07824:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.07824:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 4 loss 1.15791:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6837[0m
[32m  eval_f1 = 0.3984[0m
[32m  eval_mcc = 0.6659[0m
[32m  eval_precision = 0.4916[0m
[32m  eval_recall = 0.3699[0m
[32m  ********************[0m
[32m  Best f1:0.3984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15791:   7%|▋         | 2/28 [00:09<02:21,  5.45s/it]epoch 4 loss 1.11351:   7%|▋         | 2/28 [00:09<02:21,  5.45s/it]epoch 4 loss 1.11351:  11%|█         | 3/28 [00:09<01:18,  3.16s/it]epoch 4 loss 1.10726:  11%|█         | 3/28 [00:10<01:18,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6843[0m
[32m  eval_f1 = 0.3989[0m
[32m  eval_mcc = 0.6666[0m
[32m  eval_precision = 0.4916[0m
[32m  eval_recall = 0.3706[0m
[32m  ********************[0m
[32m  Best f1:0.3989[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.10726:  14%|█▍        | 4/28 [00:19<02:17,  5.71s/it]epoch 4 loss 1.11418:  14%|█▍        | 4/28 [00:19<02:17,  5.71s/it]epoch 4 loss 1.11418:  18%|█▊        | 5/28 [00:19<01:27,  3.81s/it]epoch 4 loss 1.11613:  18%|█▊        | 5/28 [00:20<01:27,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6852[0m
[32m  eval_f1 = 0.3985[0m
[32m  eval_mcc = 0.6676[0m
[32m  eval_precision = 0.4892[0m
[32m  eval_recall = 0.3703[0m
[32m  ********************[0m
[32m  Best MCC:0.6676[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.11613:  21%|██▏       | 6/28 [00:26<01:45,  4.78s/it]epoch 4 loss 1.12216:  21%|██▏       | 6/28 [00:26<01:45,  4.78s/it]epoch 4 loss 1.12216:  25%|██▌       | 7/28 [00:26<01:10,  3.35s/it]epoch 4 loss 1.12351:  25%|██▌       | 7/28 [00:27<01:10,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6855[0m
[32m  eval_f1 = 0.3988[0m
[32m  eval_mcc = 0.6679[0m
[32m  eval_precision = 0.4889[0m
[32m  eval_recall = 0.3709[0m
[32m  ********************[0m
[32m  Best MCC:0.6679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12351:  29%|██▊       | 8/28 [00:31<01:16,  3.81s/it]epoch 4 loss 1.12745:  29%|██▊       | 8/28 [00:32<01:16,  3.81s/it]epoch 4 loss 1.12745:  32%|███▏      | 9/28 [00:32<00:52,  2.75s/it]epoch 4 loss 1.12027:  32%|███▏      | 9/28 [00:32<00:52,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6861[0m
[32m  eval_f1 = 0.3996[0m
[32m  eval_mcc = 0.6684[0m
[32m  eval_precision = 0.4906[0m
[32m  eval_recall = 0.3714[0m
[32m  ********************[0m
[32m  Best f1:0.3996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6684[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12027:  36%|███▌      | 10/28 [00:38<01:09,  3.85s/it]epoch 4 loss 1.12867:  36%|███▌      | 10/28 [00:38<01:09,  3.85s/it]epoch 4 loss 1.12867:  39%|███▉      | 11/28 [00:38<00:47,  2.80s/it]epoch 4 loss 1.12335:  39%|███▉      | 11/28 [00:39<00:47,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6866[0m
[32m  eval_f1 = 0.4005[0m
[32m  eval_mcc = 0.669[0m
[32m  eval_precision = 0.4917[0m
[32m  eval_recall = 0.3726[0m
[32m  ********************[0m
[32m  Best f1:0.4005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12335:  43%|████▎     | 12/28 [00:44<00:58,  3.64s/it]epoch 4 loss 1.12432:  43%|████▎     | 12/28 [00:44<00:58,  3.64s/it]epoch 4 loss 1.12432:  46%|████▋     | 13/28 [00:44<00:39,  2.66s/it]epoch 4 loss 1.12864:  46%|████▋     | 13/28 [00:45<00:39,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6865[0m
[32m  eval_f1 = 0.4008[0m
[32m  eval_mcc = 0.6688[0m
[32m  eval_precision = 0.4916[0m
[32m  eval_recall = 0.373[0m
[32m  ********************[0m
[32m  Best f1:0.4008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.12864:  50%|█████     | 14/28 [00:49<00:47,  3.36s/it]epoch 4 loss 1.12298:  50%|█████     | 14/28 [00:50<00:47,  3.36s/it]epoch 4 loss 1.12298:  54%|█████▎    | 15/28 [00:50<00:32,  2.47s/it]epoch 4 loss 1.12246:  54%|█████▎    | 15/28 [00:50<00:32,  2.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.687[0m
[32m  eval_f1 = 0.4009[0m
[32m  eval_mcc = 0.6694[0m
[32m  eval_precision = 0.4913[0m
[32m  eval_recall = 0.3735[0m
[32m  ********************[0m
[32m  Best f1:0.4009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12246:  57%|█████▋    | 16/28 [00:56<00:43,  3.62s/it]epoch 4 loss 1.12425:  57%|█████▋    | 16/28 [00:56<00:43,  3.62s/it]epoch 4 loss 1.12425:  61%|██████    | 17/28 [00:56<00:29,  2.66s/it]epoch 4 loss 1.12565:  61%|██████    | 17/28 [00:57<00:29,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6873[0m
[32m  eval_f1 = 0.4033[0m
[32m  eval_mcc = 0.6697[0m
[32m  eval_precision = 0.4902[0m
[32m  eval_recall = 0.3756[0m
[32m  ********************[0m
[32m  Best f1:0.4033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12565:  64%|██████▍   | 18/28 [01:03<00:37,  3.74s/it]epoch 4 loss 1.12251:  64%|██████▍   | 18/28 [01:03<00:37,  3.74s/it]epoch 4 loss 1.12251:  68%|██████▊   | 19/28 [01:03<00:24,  2.74s/it]epoch 4 loss 1.12319:  68%|██████▊   | 19/28 [01:04<00:24,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6877[0m
[32m  eval_f1 = 0.4035[0m
[32m  eval_mcc = 0.6701[0m
[32m  eval_precision = 0.4913[0m
[32m  eval_recall = 0.3757[0m
[32m  ********************[0m
[32m  Best f1:0.4035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6701[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12319:  71%|███████▏  | 20/28 [01:10<00:30,  3.83s/it]epoch 4 loss 1.11796:  71%|███████▏  | 20/28 [01:10<00:30,  3.83s/it]epoch 4 loss 1.11796:  75%|███████▌  | 21/28 [01:10<00:19,  2.81s/it]epoch 4 loss 1.11746:  75%|███████▌  | 21/28 [01:10<00:19,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6879[0m
[32m  eval_f1 = 0.4035[0m
[32m  eval_mcc = 0.6702[0m
[32m  eval_precision = 0.4913[0m
[32m  eval_recall = 0.3757[0m
[32m  ********************[0m
[32m  Best f1:0.4035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.11746:  79%|███████▊  | 22/28 [01:16<00:21,  3.64s/it]epoch 4 loss 1.11327:  79%|███████▊  | 22/28 [01:16<00:21,  3.64s/it]epoch 4 loss 1.11327:  82%|████████▏ | 23/28 [01:16<00:13,  2.67s/it]epoch 4 loss 1.11387:  82%|████████▏ | 23/28 [01:16<00:13,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.688[0m
[32m  eval_f1 = 0.4034[0m
[32m  eval_mcc = 0.6704[0m
[32m  eval_precision = 0.492[0m
[32m  eval_recall = 0.3756[0m
[32m  ********************[0m
[32m  Best MCC:0.6704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.11387:  86%|████████▌ | 24/28 [01:21<00:13,  3.26s/it]epoch 4 loss 1.11585:  86%|████████▌ | 24/28 [01:21<00:13,  3.26s/it]epoch 4 loss 1.11585:  89%|████████▉ | 25/28 [01:21<00:07,  2.41s/it]epoch 4 loss 1.11377:  89%|████████▉ | 25/28 [01:21<00:07,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.688[0m
[32m  eval_f1 = 0.4036[0m
[32m  eval_mcc = 0.6705[0m
[32m  eval_precision = 0.492[0m
[32m  eval_recall = 0.3758[0m
[32m  ********************[0m
[32m  Best f1:0.4036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.11377:  93%|█████████▎| 26/28 [01:27<00:07,  3.56s/it]epoch 4 loss 1.11024:  93%|█████████▎| 26/28 [01:28<00:07,  3.56s/it]epoch 4 loss 1.11024:  96%|█████████▋| 27/28 [01:28<00:02,  2.61s/it]epoch 4 loss 1.10969:  96%|█████████▋| 27/28 [01:28<00:02,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6881[0m
[32m  eval_f1 = 0.4037[0m
[32m  eval_mcc = 0.6705[0m
[32m  eval_precision = 0.4921[0m
[32m  eval_recall = 0.3758[0m
[32m  ********************[0m
[32m  Best f1:0.4037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.10969: 100%|██████████| 28/28 [01:34<00:00,  3.65s/it]epoch 4 loss 1.10969: 100%|██████████| 28/28 [01:34<00:00,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.59it/s] 20%|██        | 2/10 [00:00<00:03,  2.66it/s] 30%|███       | 3/10 [00:01<00:02,  2.70it/s] 40%|████      | 4/10 [00:01<00:02,  2.71it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6881[0m
[32m  eval_f1 = 0.4037[0m
[32m  eval_mcc = 0.6705[0m
[32m  eval_precision = 0.4921[0m
[32m  eval_recall = 0.3758[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6704[0m
[32m  eval_f1 = 0.3615[0m
[32m  eval_mcc = 0.6526[0m
[32m  eval_precision = 0.462[0m
[32m  eval_recall = 0.3345[0m

