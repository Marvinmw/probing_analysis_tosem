[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=11, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/3/layer_11', posratio=0.5, seed=969, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.05945:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.05945:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.05967:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0057[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = -0.0168[0m
[32m  eval_precision = 0.009[0m
[32m  eval_recall = 0.0026[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.05967:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it]epoch 0 loss 5.05414:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it]epoch 0 loss 5.05414:  11%|█         | 3/28 [00:05<00:43,  1.76s/it]epoch 0 loss 5.04399:  11%|█         | 3/28 [00:05<00:43,  1.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0095[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = -0.0239[0m
[32m  eval_precision = 0.0036[0m
[32m  eval_recall = 0.0027[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.04399:  14%|█▍        | 4/28 [00:10<01:11,  2.99s/it]epoch 0 loss 5.01935:  14%|█▍        | 4/28 [00:10<01:11,  2.99s/it]epoch 0 loss 5.01935:  18%|█▊        | 5/28 [00:10<00:47,  2.06s/it]epoch 0 loss 4.98906:  18%|█▊        | 5/28 [00:11<00:47,  2.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0186[0m
[32m  eval_f1 = 0.0014[0m
[32m  eval_mcc = -0.0312[0m
[32m  eval_precision = 0.0054[0m
[32m  eval_recall = 0.0035[0m
[32m  ********************[0m
[32m  Best f1:0.0014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.98906:  21%|██▏       | 6/28 [00:18<01:24,  3.84s/it]epoch 0 loss 4.95502:  21%|██▏       | 6/28 [00:18<01:24,  3.84s/it]epoch 0 loss 4.95502:  25%|██▌       | 7/28 [00:18<00:57,  2.72s/it]epoch 0 loss 4.91465:  25%|██▌       | 7/28 [00:18<00:57,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0306[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = -0.0315[0m
[32m  eval_precision = 0.0116[0m
[32m  eval_recall = 0.0059[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.91465:  29%|██▊       | 8/28 [00:26<01:25,  4.28s/it]epoch 0 loss 4.86879:  29%|██▊       | 8/28 [00:26<01:25,  4.28s/it]epoch 0 loss 4.86879:  32%|███▏      | 9/28 [00:26<00:58,  3.07s/it]epoch 0 loss 4.8185:  32%|███▏      | 9/28 [00:26<00:58,  3.07s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0448[0m
[32m  eval_f1 = 0.0055[0m
[32m  eval_mcc = -0.0194[0m
[32m  eval_precision = 0.0174[0m
[32m  eval_recall = 0.0092[0m
[32m  ********************[0m
[32m  Best f1:0.0055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.8185:  36%|███▌      | 10/28 [00:31<01:06,  3.68s/it]epoch 0 loss 4.76479:  36%|███▌      | 10/28 [00:32<01:06,  3.68s/it]epoch 0 loss 4.76479:  39%|███▉      | 11/28 [00:32<00:45,  2.68s/it]epoch 0 loss 4.70848:  39%|███▉      | 11/28 [00:32<00:45,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0594[0m
[32m  eval_f1 = 0.0069[0m
[32m  eval_mcc = -0.0071[0m
[32m  eval_precision = 0.0176[0m
[32m  eval_recall = 0.0116[0m
[32m  ********************[0m
[32m  Best f1:0.0069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.70848:  43%|████▎     | 12/28 [00:38<01:03,  3.97s/it]epoch 0 loss 4.64763:  43%|████▎     | 12/28 [00:39<01:03,  3.97s/it]epoch 0 loss 4.64763:  46%|████▋     | 13/28 [00:39<00:43,  2.89s/it]epoch 0 loss 4.58756:  46%|████▋     | 13/28 [00:39<00:43,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.085[0m
[32m  eval_f1 = 0.0106[0m
[32m  eval_mcc = 0.0164[0m
[32m  eval_precision = 0.0207[0m
[32m  eval_recall = 0.015[0m
[32m  ********************[0m
[32m  Best f1:0.0106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.58756:  50%|█████     | 14/28 [00:44<00:51,  3.70s/it]epoch 0 loss 4.52389:  50%|█████     | 14/28 [00:45<00:51,  3.70s/it]epoch 0 loss 4.52389:  54%|█████▎    | 15/28 [00:45<00:35,  2.71s/it]epoch 0 loss 4.4619:  54%|█████▎    | 15/28 [00:45<00:35,  2.71s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1323[0m
[32m  eval_f1 = 0.0179[0m
[32m  eval_mcc = 0.0651[0m
[32m  eval_precision = 0.0268[0m
[32m  eval_recall = 0.0215[0m
[32m  ********************[0m
[32m  Best f1:0.0179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.4619:  57%|█████▋    | 16/28 [00:51<00:45,  3.83s/it]epoch 0 loss 4.39956:  57%|█████▋    | 16/28 [00:52<00:45,  3.83s/it]epoch 0 loss 4.39956:  61%|██████    | 17/28 [00:52<00:30,  2.80s/it]epoch 0 loss 4.3371:  61%|██████    | 17/28 [00:52<00:30,  2.80s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2022[0m
[32m  eval_f1 = 0.0258[0m
[32m  eval_mcc = 0.1396[0m
[32m  eval_precision = 0.0417[0m
[32m  eval_recall = 0.0302[0m
[32m  ********************[0m
[32m  Best f1:0.0258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.3371:  64%|██████▍   | 18/28 [00:58<00:38,  3.88s/it]epoch 0 loss 4.27787:  64%|██████▍   | 18/28 [00:58<00:38,  3.88s/it]epoch 0 loss 4.27787:  68%|██████▊   | 19/28 [00:58<00:25,  2.84s/it]epoch 0 loss 4.22699:  68%|██████▊   | 19/28 [00:59<00:25,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.258[0m
[32m  eval_f1 = 0.0301[0m
[32m  eval_mcc = 0.1959[0m
[32m  eval_precision = 0.0377[0m
[32m  eval_recall = 0.0364[0m
[32m  ********************[0m
[32m  Best f1:0.0301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.22699:  71%|███████▏  | 20/28 [01:05<00:31,  3.90s/it]epoch 0 loss 4.16982:  71%|███████▏  | 20/28 [01:05<00:31,  3.90s/it]epoch 0 loss 4.16982:  75%|███████▌  | 21/28 [01:05<00:20,  2.86s/it]epoch 0 loss 4.12381:  75%|███████▌  | 21/28 [01:06<00:20,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2818[0m
[32m  eval_f1 = 0.0388[0m
[32m  eval_mcc = 0.2286[0m
[32m  eval_precision = 0.0617[0m
[32m  eval_recall = 0.0439[0m
[32m  ********************[0m
[32m  Best f1:0.0388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.12381:  79%|███████▊  | 22/28 [01:15<00:28,  4.79s/it]epoch 0 loss 4.07056:  79%|███████▊  | 22/28 [01:15<00:28,  4.79s/it]epoch 0 loss 4.07056:  82%|████████▏ | 23/28 [01:15<00:17,  3.48s/it]epoch 0 loss 4.01971:  82%|████████▏ | 23/28 [01:15<00:17,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3169[0m
[32m  eval_f1 = 0.0611[0m
[32m  eval_mcc = 0.2746[0m
[32m  eval_precision = 0.1109[0m
[32m  eval_recall = 0.0609[0m
[32m  ********************[0m
[32m  Best f1:0.0611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.01971:  86%|████████▌ | 24/28 [01:24<00:20,  5.05s/it]epoch 0 loss 3.97106:  86%|████████▌ | 24/28 [01:24<00:20,  5.05s/it]epoch 0 loss 3.97106:  89%|████████▉ | 25/28 [01:24<00:11,  3.67s/it]epoch 0 loss 3.92404:  89%|████████▉ | 25/28 [01:25<00:11,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.37[0m
[32m  eval_f1 = 0.0937[0m
[32m  eval_mcc = 0.3365[0m
[32m  eval_precision = 0.1613[0m
[32m  eval_recall = 0.0875[0m
[32m  ********************[0m
[32m  Best f1:0.0937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.92404:  93%|█████████▎| 26/28 [01:35<00:11,  5.81s/it]epoch 0 loss 3.87322:  93%|█████████▎| 26/28 [01:35<00:11,  5.81s/it]epoch 0 loss 3.87322:  96%|█████████▋| 27/28 [01:35<00:04,  4.19s/it]epoch 0 loss 3.82309:  96%|█████████▋| 27/28 [01:36<00:04,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4283[0m
[32m  eval_f1 = 0.1354[0m
[32m  eval_mcc = 0.3973[0m
[32m  eval_precision = 0.2064[0m
[32m  eval_recall = 0.1259[0m
[32m  ********************[0m
[32m  Best f1:0.1354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3973[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.82309: 100%|██████████| 28/28 [01:43<00:00,  5.17s/it]epoch 0 loss 3.82309: 100%|██████████| 28/28 [01:43<00:00,  3.69s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.52214:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.52214:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 1 loss 2.62157:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4747[0m
[32m  eval_f1 = 0.1584[0m
[32m  eval_mcc = 0.4433[0m
[32m  eval_precision = 0.2118[0m
[32m  eval_recall = 0.1522[0m
[32m  ********************[0m
[32m  Best f1:0.1584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4433[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.62157:   7%|▋         | 2/28 [00:10<02:32,  5.87s/it]epoch 1 loss 2.50452:   7%|▋         | 2/28 [00:10<02:32,  5.87s/it]epoch 1 loss 2.50452:  11%|█         | 3/28 [00:10<01:24,  3.38s/it]epoch 1 loss 2.50637:  11%|█         | 3/28 [00:10<01:24,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5121[0m
[32m  eval_f1 = 0.1764[0m
[32m  eval_mcc = 0.4819[0m
[32m  eval_precision = 0.2127[0m
[32m  eval_recall = 0.1733[0m
[32m  ********************[0m
[32m  Best f1:0.1764[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.50637:  14%|█▍        | 4/28 [00:18<02:05,  5.21s/it]epoch 1 loss 2.46262:  14%|█▍        | 4/28 [00:18<02:05,  5.21s/it]epoch 1 loss 2.46262:  18%|█▊        | 5/28 [00:18<01:20,  3.48s/it]epoch 1 loss 2.41571:  18%|█▊        | 5/28 [00:19<01:20,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5472[0m
[32m  eval_f1 = 0.1865[0m
[32m  eval_mcc = 0.5192[0m
[32m  eval_precision = 0.2215[0m
[32m  eval_recall = 0.1833[0m
[32m  ********************[0m
[32m  Best f1:0.1865[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.41571:  21%|██▏       | 6/28 [00:29<02:07,  5.81s/it]epoch 1 loss 2.36598:  21%|██▏       | 6/28 [00:29<02:07,  5.81s/it]epoch 1 loss 2.36598:  25%|██▌       | 7/28 [00:29<01:25,  4.05s/it]epoch 1 loss 2.32367:  25%|██▌       | 7/28 [00:30<01:25,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5547[0m
[32m  eval_f1 = 0.1876[0m
[32m  eval_mcc = 0.5279[0m
[32m  eval_precision = 0.2481[0m
[32m  eval_recall = 0.1823[0m
[32m  ********************[0m
[32m  Best f1:0.1876[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32367:  29%|██▊       | 8/28 [00:36<01:37,  4.89s/it]epoch 1 loss 2.29653:  29%|██▊       | 8/28 [00:36<01:37,  4.89s/it]epoch 1 loss 2.29653:  32%|███▏      | 9/28 [00:36<01:06,  3.49s/it]epoch 1 loss 2.27316:  32%|███▏      | 9/28 [00:37<01:06,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5568[0m
[32m  eval_f1 = 0.1985[0m
[32m  eval_mcc = 0.5316[0m
[32m  eval_precision = 0.2585[0m
[32m  eval_recall = 0.1892[0m
[32m  ********************[0m
[32m  Best f1:0.1985[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27316:  36%|███▌      | 10/28 [00:44<01:25,  4.72s/it]epoch 1 loss 2.22764:  36%|███▌      | 10/28 [00:44<01:25,  4.72s/it]epoch 1 loss 2.22764:  39%|███▉      | 11/28 [00:44<00:57,  3.41s/it]epoch 1 loss 2.1951:  39%|███▉      | 11/28 [00:45<00:57,  3.41s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5614[0m
[32m  eval_f1 = 0.2037[0m
[32m  eval_mcc = 0.5356[0m
[32m  eval_precision = 0.265[0m
[32m  eval_recall = 0.1939[0m
[32m  ********************[0m
[32m  Best f1:0.2037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1951:  43%|████▎     | 12/28 [00:52<01:13,  4.60s/it]epoch 1 loss 2.17036:  43%|████▎     | 12/28 [00:52<01:13,  4.60s/it]epoch 1 loss 2.17036:  46%|████▋     | 13/28 [00:52<00:49,  3.33s/it]epoch 1 loss 2.15747:  46%|████▋     | 13/28 [00:52<00:49,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5737[0m
[32m  eval_f1 = 0.2131[0m
[32m  eval_mcc = 0.5491[0m
[32m  eval_precision = 0.2851[0m
[32m  eval_recall = 0.2041[0m
[32m  ********************[0m
[32m  Best f1:0.2131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5491[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15747:  50%|█████     | 14/28 [00:59<01:04,  4.59s/it]epoch 1 loss 2.1357:  50%|█████     | 14/28 [01:00<01:04,  4.59s/it] epoch 1 loss 2.1357:  54%|█████▎    | 15/28 [01:00<00:43,  3.33s/it]epoch 1 loss 2.11334:  54%|█████▎    | 15/28 [01:00<00:43,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.582[0m
[32m  eval_f1 = 0.2217[0m
[32m  eval_mcc = 0.5585[0m
[32m  eval_precision = 0.2835[0m
[32m  eval_recall = 0.2128[0m
[32m  ********************[0m
[32m  Best f1:0.2217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11334:  57%|█████▋    | 16/28 [01:11<01:09,  5.81s/it]epoch 1 loss 2.09345:  57%|█████▋    | 16/28 [01:12<01:09,  5.81s/it]epoch 1 loss 2.09345:  61%|██████    | 17/28 [01:12<00:46,  4.19s/it]epoch 1 loss 2.0754:  61%|██████    | 17/28 [01:12<00:46,  4.19s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5874[0m
[32m  eval_f1 = 0.2267[0m
[32m  eval_mcc = 0.5641[0m
[32m  eval_precision = 0.3052[0m
[32m  eval_recall = 0.218[0m
[32m  ********************[0m
[32m  Best f1:0.2267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5641[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0754:  64%|██████▍   | 18/28 [01:23<01:01,  6.17s/it]epoch 1 loss 2.05238:  64%|██████▍   | 18/28 [01:23<01:01,  6.17s/it]epoch 1 loss 2.05238:  68%|██████▊   | 19/28 [01:23<00:39,  4.44s/it]epoch 1 loss 2.03347:  68%|██████▊   | 19/28 [01:23<00:39,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5976[0m
[32m  eval_f1 = 0.2314[0m
[32m  eval_mcc = 0.5748[0m
[32m  eval_precision = 0.3075[0m
[32m  eval_recall = 0.2209[0m
[32m  ********************[0m
[32m  Best f1:0.2314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5748[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03347:  71%|███████▏  | 20/28 [01:33<00:49,  6.18s/it]epoch 1 loss 2.01714:  71%|███████▏  | 20/28 [01:34<00:49,  6.18s/it]epoch 1 loss 2.01714:  75%|███████▌  | 21/28 [01:34<00:31,  4.45s/it]epoch 1 loss 2.00814:  75%|███████▌  | 21/28 [01:34<00:31,  4.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6017[0m
[32m  eval_f1 = 0.2362[0m
[32m  eval_mcc = 0.5782[0m
[32m  eval_precision = 0.3035[0m
[32m  eval_recall = 0.2246[0m
[32m  ********************[0m
[32m  Best f1:0.2362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5782[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00814:  79%|███████▊  | 22/28 [01:44<00:37,  6.26s/it]epoch 1 loss 1.99333:  79%|███████▊  | 22/28 [01:45<00:37,  6.26s/it]epoch 1 loss 1.99333:  82%|████████▏ | 23/28 [01:45<00:22,  4.51s/it]epoch 1 loss 1.98139:  82%|████████▏ | 23/28 [01:45<00:22,  4.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6044[0m
[32m  eval_f1 = 0.2511[0m
[32m  eval_mcc = 0.5804[0m
[32m  eval_precision = 0.3346[0m
[32m  eval_recall = 0.2393[0m
[32m  ********************[0m
[32m  Best f1:0.2511[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98139:  86%|████████▌ | 24/28 [01:53<00:22,  5.54s/it]epoch 1 loss 1.96981:  86%|████████▌ | 24/28 [01:53<00:22,  5.54s/it]epoch 1 loss 1.96981:  89%|████████▉ | 25/28 [01:53<00:12,  4.00s/it]epoch 1 loss 1.96038:  89%|████████▉ | 25/28 [01:53<00:12,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6067[0m
[32m  eval_f1 = 0.2528[0m
[32m  eval_mcc = 0.583[0m
[32m  eval_precision = 0.3346[0m
[32m  eval_recall = 0.2414[0m
[32m  ********************[0m
[32m  Best f1:0.2528[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96038:  93%|█████████▎| 26/28 [02:03<00:11,  5.66s/it]epoch 1 loss 1.94991:  93%|█████████▎| 26/28 [02:03<00:11,  5.66s/it]epoch 1 loss 1.94991:  96%|█████████▋| 27/28 [02:03<00:04,  4.09s/it]epoch 1 loss 1.94324:  96%|█████████▋| 27/28 [02:03<00:04,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6113[0m
[32m  eval_f1 = 0.2555[0m
[32m  eval_mcc = 0.5892[0m
[32m  eval_precision = 0.33[0m
[32m  eval_recall = 0.2437[0m
[32m  ********************[0m
[32m  Best f1:0.2555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94324: 100%|██████████| 28/28 [02:11<00:00,  5.23s/it]epoch 1 loss 1.94324: 100%|██████████| 28/28 [02:11<00:00,  4.69s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.59258:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.59258:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 2 loss 1.60615:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6118[0m
[32m  eval_f1 = 0.2587[0m
[32m  eval_mcc = 0.5906[0m
[32m  eval_precision = 0.3583[0m
[32m  eval_recall = 0.2457[0m
[32m  ********************[0m
[32m  Best f1:0.2587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5906[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60615:   7%|▋         | 2/28 [00:10<02:37,  6.07s/it]epoch 2 loss 1.59221:   7%|▋         | 2/28 [00:10<02:37,  6.07s/it]epoch 2 loss 1.59221:  11%|█         | 3/28 [00:10<01:27,  3.49s/it]epoch 2 loss 1.58967:  11%|█         | 3/28 [00:11<01:27,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6137[0m
[32m  eval_f1 = 0.2665[0m
[32m  eval_mcc = 0.5931[0m
[32m  eval_precision = 0.3738[0m
[32m  eval_recall = 0.2507[0m
[32m  ********************[0m
[32m  Best f1:0.2665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5931[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58967:  14%|█▍        | 4/28 [00:19<02:14,  5.61s/it]epoch 2 loss 1.56409:  14%|█▍        | 4/28 [00:20<02:14,  5.61s/it]epoch 2 loss 1.56409:  18%|█▊        | 5/28 [00:20<01:25,  3.74s/it]epoch 2 loss 1.54374:  18%|█▊        | 5/28 [00:20<01:25,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6156[0m
[32m  eval_f1 = 0.2718[0m
[32m  eval_mcc = 0.5955[0m
[32m  eval_precision = 0.3818[0m
[32m  eval_recall = 0.2537[0m
[32m  ********************[0m
[32m  Best f1:0.2718[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5955[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54374:  21%|██▏       | 6/28 [00:31<02:18,  6.31s/it]epoch 2 loss 1.5635:  21%|██▏       | 6/28 [00:31<02:18,  6.31s/it] epoch 2 loss 1.5635:  25%|██▌       | 7/28 [00:31<01:32,  4.38s/it]epoch 2 loss 1.56646:  25%|██▌       | 7/28 [00:32<01:32,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.618[0m
[32m  eval_f1 = 0.2785[0m
[32m  eval_mcc = 0.5978[0m
[32m  eval_precision = 0.3963[0m
[32m  eval_recall = 0.2596[0m
[32m  ********************[0m
[32m  Best f1:0.2785[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56646:  29%|██▊       | 8/28 [00:37<01:38,  4.91s/it]epoch 2 loss 1.55763:  29%|██▊       | 8/28 [00:38<01:38,  4.91s/it]epoch 2 loss 1.55763:  32%|███▏      | 9/28 [00:38<01:06,  3.51s/it]epoch 2 loss 1.5651:  32%|███▏      | 9/28 [00:38<01:06,  3.51s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6209[0m
[32m  eval_f1 = 0.2915[0m
[32m  eval_mcc = 0.6003[0m
[32m  eval_precision = 0.4022[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best f1:0.2915[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5651:  36%|███▌      | 10/28 [00:44<01:17,  4.30s/it]epoch 2 loss 1.56457:  36%|███▌      | 10/28 [00:44<01:17,  4.30s/it]epoch 2 loss 1.56457:  39%|███▉      | 11/28 [00:44<00:52,  3.11s/it]epoch 2 loss 1.56575:  39%|███▉      | 11/28 [00:45<00:52,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.623[0m
[32m  eval_f1 = 0.2943[0m
[32m  eval_mcc = 0.6015[0m
[32m  eval_precision = 0.3897[0m
[32m  eval_recall = 0.2771[0m
[32m  ********************[0m
[32m  Best f1:0.2943[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56575:  43%|████▎     | 12/28 [00:55<01:26,  5.39s/it]epoch 2 loss 1.57184:  43%|████▎     | 12/28 [00:55<01:26,  5.39s/it]epoch 2 loss 1.57184:  46%|████▋     | 13/28 [00:55<00:58,  3.89s/it]epoch 2 loss 1.56904:  46%|████▋     | 13/28 [00:56<00:58,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6258[0m
[32m  eval_f1 = 0.2962[0m
[32m  eval_mcc = 0.604[0m
[32m  eval_precision = 0.397[0m
[32m  eval_recall = 0.2785[0m
[32m  ********************[0m
[32m  Best f1:0.2962[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56904:  50%|█████     | 14/28 [01:06<01:22,  5.86s/it]epoch 2 loss 1.5605:  50%|█████     | 14/28 [01:06<01:22,  5.86s/it] epoch 2 loss 1.5605:  54%|█████▎    | 15/28 [01:06<00:54,  4.22s/it]epoch 2 loss 1.55301:  54%|█████▎    | 15/28 [01:07<00:54,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6264[0m
[32m  eval_f1 = 0.2989[0m
[32m  eval_mcc = 0.6046[0m
[32m  eval_precision = 0.4361[0m
[32m  eval_recall = 0.2797[0m
[32m  ********************[0m
[32m  Best f1:0.2989[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55301:  57%|█████▋    | 16/28 [01:17<01:13,  6.13s/it]epoch 2 loss 1.55138:  57%|█████▋    | 16/28 [01:17<01:13,  6.13s/it]epoch 2 loss 1.55138:  61%|██████    | 17/28 [01:17<00:48,  4.41s/it]epoch 2 loss 1.55096:  61%|██████    | 17/28 [01:18<00:48,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6286[0m
[32m  eval_f1 = 0.3[0m
[32m  eval_mcc = 0.6074[0m
[32m  eval_precision = 0.4282[0m
[32m  eval_recall = 0.2807[0m
[32m  ********************[0m
[32m  Best f1:0.3[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55096:  64%|██████▍   | 18/28 [01:28<01:02,  6.26s/it]epoch 2 loss 1.54604:  64%|██████▍   | 18/28 [01:28<01:02,  6.26s/it]epoch 2 loss 1.54604:  68%|██████▊   | 19/28 [01:28<00:40,  4.51s/it]epoch 2 loss 1.5431:  68%|██████▊   | 19/28 [01:29<00:40,  4.51s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.631[0m
[32m  eval_f1 = 0.3048[0m
[32m  eval_mcc = 0.6107[0m
[32m  eval_precision = 0.4303[0m
[32m  eval_recall = 0.2843[0m
[32m  ********************[0m
[32m  Best f1:0.3048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5431:  71%|███████▏  | 20/28 [01:38<00:49,  6.22s/it]epoch 2 loss 1.54317:  71%|███████▏  | 20/28 [01:39<00:49,  6.22s/it]epoch 2 loss 1.54317:  75%|███████▌  | 21/28 [01:39<00:31,  4.48s/it]epoch 2 loss 1.54166:  75%|███████▌  | 21/28 [01:39<00:31,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.632[0m
[32m  eval_f1 = 0.3082[0m
[32m  eval_mcc = 0.6124[0m
[32m  eval_precision = 0.4303[0m
[32m  eval_recall = 0.2872[0m
[32m  ********************[0m
[32m  Best f1:0.3082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6124[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54166:  79%|███████▊  | 22/28 [01:49<00:37,  6.27s/it]epoch 2 loss 1.53701:  79%|███████▊  | 22/28 [01:50<00:37,  6.27s/it]epoch 2 loss 1.53701:  82%|████████▏ | 23/28 [01:50<00:22,  4.52s/it]epoch 2 loss 1.53521:  82%|████████▏ | 23/28 [01:50<00:22,  4.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6333[0m
[32m  eval_f1 = 0.3112[0m
[32m  eval_mcc = 0.6136[0m
[32m  eval_precision = 0.4299[0m
[32m  eval_recall = 0.2896[0m
[32m  ********************[0m
[32m  Best f1:0.3112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53521:  86%|████████▌ | 24/28 [02:01<00:25,  6.44s/it]epoch 2 loss 1.52906:  86%|████████▌ | 24/28 [02:01<00:25,  6.44s/it]epoch 2 loss 1.52906:  89%|████████▉ | 25/28 [02:01<00:13,  4.64s/it]epoch 2 loss 1.52809:  89%|████████▉ | 25/28 [02:01<00:13,  4.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6336[0m
[32m  eval_f1 = 0.3148[0m
[32m  eval_mcc = 0.6135[0m
[32m  eval_precision = 0.4298[0m
[32m  eval_recall = 0.2924[0m
[32m  ********************[0m
[32m  Best f1:0.3148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.52809:  93%|█████████▎| 26/28 [02:09<00:10,  5.50s/it]epoch 2 loss 1.52329:  93%|█████████▎| 26/28 [02:09<00:10,  5.50s/it]epoch 2 loss 1.52329:  96%|█████████▋| 27/28 [02:09<00:03,  3.97s/it]epoch 2 loss 1.5192:  96%|█████████▋| 27/28 [02:09<00:03,  3.97s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6327[0m
[32m  eval_f1 = 0.314[0m
[32m  eval_mcc = 0.6116[0m
[32m  eval_precision = 0.4317[0m
[32m  eval_recall = 0.2918[0m

epoch 2 loss 1.5192: 100%|██████████| 28/28 [02:13<00:00,  3.86s/it]epoch 2 loss 1.5192: 100%|██████████| 28/28 [02:13<00:00,  4.75s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.38794:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.38794:   4%|▎         | 1/28 [00:00<00:10,  2.50it/s]epoch 3 loss 1.45579:   4%|▎         | 1/28 [00:00<00:10,  2.50it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.632[0m
[32m  eval_f1 = 0.3152[0m
[32m  eval_mcc = 0.6103[0m
[32m  eval_precision = 0.4319[0m
[32m  eval_recall = 0.2928[0m
[32m  ********************[0m
[32m  Best f1:0.3152[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.45579:   7%|▋         | 2/28 [00:07<01:52,  4.31s/it]epoch 3 loss 1.45585:   7%|▋         | 2/28 [00:07<01:52,  4.31s/it]epoch 3 loss 1.45585:  11%|█         | 3/28 [00:07<01:03,  2.54s/it]epoch 3 loss 1.45398:  11%|█         | 3/28 [00:08<01:03,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6331[0m
[32m  eval_f1 = 0.3171[0m
[32m  eval_mcc = 0.6112[0m
[32m  eval_precision = 0.4319[0m
[32m  eval_recall = 0.2943[0m
[32m  ********************[0m
[32m  Best f1:0.3171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.45398:  14%|█▍        | 4/28 [00:15<01:46,  4.46s/it]epoch 3 loss 1.43659:  14%|█▍        | 4/28 [00:15<01:46,  4.46s/it]epoch 3 loss 1.43659:  18%|█▊        | 5/28 [00:15<01:09,  3.01s/it]epoch 3 loss 1.4322:  18%|█▊        | 5/28 [00:16<01:09,  3.01s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6344[0m
[32m  eval_f1 = 0.319[0m
[32m  eval_mcc = 0.6127[0m
[32m  eval_precision = 0.4316[0m
[32m  eval_recall = 0.2964[0m
[32m  ********************[0m
[32m  Best f1:0.319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.4322:  21%|██▏       | 6/28 [00:22<01:36,  4.38s/it]epoch 3 loss 1.43624:  21%|██▏       | 6/28 [00:23<01:36,  4.38s/it]epoch 3 loss 1.43624:  25%|██▌       | 7/28 [00:23<01:04,  3.09s/it]epoch 3 loss 1.43144:  25%|██▌       | 7/28 [00:23<01:04,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6379[0m
[32m  eval_f1 = 0.3233[0m
[32m  eval_mcc = 0.6171[0m
[32m  eval_precision = 0.4318[0m
[32m  eval_recall = 0.3006[0m
[32m  ********************[0m
[32m  Best f1:0.3233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43144:  29%|██▊       | 8/28 [00:33<01:47,  5.40s/it]epoch 3 loss 1.431:  29%|██▊       | 8/28 [00:33<01:47,  5.40s/it]  epoch 3 loss 1.431:  32%|███▏      | 9/28 [00:33<01:12,  3.84s/it]epoch 3 loss 1.42149:  32%|███▏      | 9/28 [00:34<01:12,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6407[0m
[32m  eval_f1 = 0.3247[0m
[32m  eval_mcc = 0.621[0m
[32m  eval_precision = 0.4418[0m
[32m  eval_recall = 0.3019[0m
[32m  ********************[0m
[32m  Best f1:0.3247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42149:  36%|███▌      | 10/28 [00:43<01:39,  5.51s/it]epoch 3 loss 1.41846:  36%|███▌      | 10/28 [00:43<01:39,  5.51s/it]epoch 3 loss 1.41846:  39%|███▉      | 11/28 [00:43<01:07,  3.95s/it]epoch 3 loss 1.424:  39%|███▉      | 11/28 [00:44<01:07,  3.95s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6418[0m
[32m  eval_f1 = 0.3252[0m
[32m  eval_mcc = 0.6226[0m
[32m  eval_precision = 0.4537[0m
[32m  eval_recall = 0.3016[0m
[32m  ********************[0m
[32m  Best f1:0.3252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.424:  43%|████▎     | 12/28 [00:53<01:29,  5.62s/it]epoch 3 loss 1.42669:  43%|████▎     | 12/28 [00:53<01:29,  5.62s/it]epoch 3 loss 1.42669:  46%|████▋     | 13/28 [00:53<01:00,  4.05s/it]epoch 3 loss 1.42743:  46%|████▋     | 13/28 [00:53<01:00,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6423[0m
[32m  eval_f1 = 0.3252[0m
[32m  eval_mcc = 0.6231[0m
[32m  eval_precision = 0.4544[0m
[32m  eval_recall = 0.3015[0m
[32m  ********************[0m
[32m  Best MCC:0.6231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42743:  50%|█████     | 14/28 [01:00<01:08,  4.86s/it]epoch 3 loss 1.42531:  50%|█████     | 14/28 [01:00<01:08,  4.86s/it]epoch 3 loss 1.42531:  54%|█████▎    | 15/28 [01:00<00:45,  3.52s/it]epoch 3 loss 1.42137:  54%|█████▎    | 15/28 [01:01<00:45,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.328[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.4654[0m
[32m  eval_recall = 0.3028[0m
[32m  ********************[0m
[32m  Best f1:0.328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42137:  57%|█████▋    | 16/28 [01:11<01:08,  5.71s/it]epoch 3 loss 1.41583:  57%|█████▋    | 16/28 [01:11<01:08,  5.71s/it]epoch 3 loss 1.41583:  61%|██████    | 17/28 [01:11<00:45,  4.12s/it]epoch 3 loss 1.41388:  61%|██████    | 17/28 [01:12<00:45,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.3282[0m
[32m  eval_mcc = 0.6233[0m
[32m  eval_precision = 0.4673[0m
[32m  eval_recall = 0.3027[0m
[32m  ********************[0m
[32m  Best f1:0.3282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.41388:  64%|██████▍   | 18/28 [01:16<00:43,  4.38s/it]epoch 3 loss 1.40867:  64%|██████▍   | 18/28 [01:17<00:43,  4.38s/it]epoch 3 loss 1.40867:  68%|██████▊   | 19/28 [01:17<00:28,  3.19s/it]epoch 3 loss 1.40645:  68%|██████▊   | 19/28 [01:17<00:28,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6422[0m
[32m  eval_f1 = 0.3292[0m
[32m  eval_mcc = 0.6223[0m
[32m  eval_precision = 0.4662[0m
[32m  eval_recall = 0.3033[0m
[32m  ********************[0m
[32m  Best f1:0.3292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.40645:  71%|███████▏  | 20/28 [01:21<00:29,  3.64s/it]epoch 3 loss 1.41327:  71%|███████▏  | 20/28 [01:22<00:29,  3.64s/it]epoch 3 loss 1.41327:  75%|███████▌  | 21/28 [01:22<00:18,  2.67s/it]epoch 3 loss 1.41369:  75%|███████▌  | 21/28 [01:22<00:18,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.3327[0m
[32m  eval_mcc = 0.6225[0m
[32m  eval_precision = 0.4631[0m
[32m  eval_recall = 0.3065[0m
[32m  ********************[0m
[32m  Best f1:0.3327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.41369:  79%|███████▊  | 22/28 [01:26<00:19,  3.24s/it]epoch 3 loss 1.42089:  79%|███████▊  | 22/28 [01:27<00:19,  3.24s/it]epoch 3 loss 1.42089:  82%|████████▏ | 23/28 [01:27<00:11,  2.39s/it]epoch 3 loss 1.42409:  82%|████████▏ | 23/28 [01:27<00:11,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6434[0m
[32m  eval_f1 = 0.3366[0m
[32m  eval_mcc = 0.6228[0m
[32m  eval_precision = 0.4601[0m
[32m  eval_recall = 0.3103[0m
[32m  ********************[0m
[32m  Best f1:0.3366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.42409:  86%|████████▌ | 24/28 [01:32<00:12,  3.17s/it]epoch 3 loss 1.42546:  86%|████████▌ | 24/28 [01:32<00:12,  3.17s/it]epoch 3 loss 1.42546:  89%|████████▉ | 25/28 [01:32<00:07,  2.34s/it]epoch 3 loss 1.41801:  89%|████████▉ | 25/28 [01:33<00:07,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.643[0m
[32m  eval_f1 = 0.3376[0m
[32m  eval_mcc = 0.6223[0m
[32m  eval_precision = 0.4523[0m
[32m  eval_recall = 0.3114[0m
[32m  ********************[0m
[32m  Best f1:0.3376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.41801:  93%|█████████▎| 26/28 [01:37<00:06,  3.13s/it]epoch 3 loss 1.41634:  93%|█████████▎| 26/28 [01:38<00:06,  3.13s/it]epoch 3 loss 1.41634:  96%|█████████▋| 27/28 [01:38<00:02,  2.31s/it]epoch 3 loss 1.41775:  96%|█████████▋| 27/28 [01:38<00:02,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6441[0m
[32m  eval_f1 = 0.3413[0m
[32m  eval_mcc = 0.6236[0m
[32m  eval_precision = 0.4638[0m
[32m  eval_recall = 0.3138[0m
[32m  ********************[0m
[32m  Best f1:0.3413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41775: 100%|██████████| 28/28 [01:43<00:00,  3.28s/it]epoch 3 loss 1.41775: 100%|██████████| 28/28 [01:43<00:00,  3.70s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.34705:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.34705:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 4 loss 1.40917:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6454[0m
[32m  eval_f1 = 0.3421[0m
[32m  eval_mcc = 0.625[0m
[32m  eval_precision = 0.4638[0m
[32m  eval_recall = 0.3146[0m
[32m  ********************[0m
[32m  Best f1:0.3421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40917:   7%|▋         | 2/28 [00:06<01:41,  3.89s/it]epoch 4 loss 1.36918:   7%|▋         | 2/28 [00:07<01:41,  3.89s/it]epoch 4 loss 1.36918:  11%|█         | 3/28 [00:07<00:57,  2.30s/it]epoch 4 loss 1.36571:  11%|█         | 3/28 [00:07<00:57,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6462[0m
[32m  eval_f1 = 0.3434[0m
[32m  eval_mcc = 0.626[0m
[32m  eval_precision = 0.4636[0m
[32m  eval_recall = 0.3156[0m
[32m  ********************[0m
[32m  Best f1:0.3434[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.626[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36571:  14%|█▍        | 4/28 [00:13<01:33,  3.88s/it]epoch 4 loss 1.37517:  14%|█▍        | 4/28 [00:13<01:33,  3.88s/it]epoch 4 loss 1.37517:  18%|█▊        | 5/28 [00:13<01:00,  2.64s/it]epoch 4 loss 1.37967:  18%|█▊        | 5/28 [00:14<01:00,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6472[0m
[32m  eval_f1 = 0.3433[0m
[32m  eval_mcc = 0.6272[0m
[32m  eval_precision = 0.4613[0m
[32m  eval_recall = 0.3158[0m
[32m  ********************[0m
[32m  Best MCC:0.6272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37967:  21%|██▏       | 6/28 [00:18<01:15,  3.44s/it]epoch 4 loss 1.38763:  21%|██▏       | 6/28 [00:19<01:15,  3.44s/it]epoch 4 loss 1.38763:  25%|██▌       | 7/28 [00:19<00:51,  2.45s/it]epoch 4 loss 1.39191:  25%|██▌       | 7/28 [00:19<00:51,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6474[0m
[32m  eval_f1 = 0.3429[0m
[32m  eval_mcc = 0.6275[0m
[32m  eval_precision = 0.4614[0m
[32m  eval_recall = 0.3157[0m
[32m  ********************[0m
[32m  Best MCC:0.6275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39191:  29%|██▊       | 8/28 [00:24<01:05,  3.28s/it]epoch 4 loss 1.3939:  29%|██▊       | 8/28 [00:24<01:05,  3.28s/it] epoch 4 loss 1.3939:  32%|███▏      | 9/28 [00:24<00:45,  2.38s/it]epoch 4 loss 1.38749:  32%|███▏      | 9/28 [00:25<00:45,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.648[0m
[32m  eval_f1 = 0.3437[0m
[32m  eval_mcc = 0.6281[0m
[32m  eval_precision = 0.4619[0m
[32m  eval_recall = 0.3165[0m
[32m  ********************[0m
[32m  Best f1:0.3437[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38749:  36%|███▌      | 10/28 [00:30<01:03,  3.52s/it]epoch 4 loss 1.4004:  36%|███▌      | 10/28 [00:31<01:03,  3.52s/it] epoch 4 loss 1.4004:  39%|███▉      | 11/28 [00:31<00:43,  2.57s/it]epoch 4 loss 1.39592:  39%|███▉      | 11/28 [00:31<00:43,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6483[0m
[32m  eval_f1 = 0.3442[0m
[32m  eval_mcc = 0.6284[0m
[32m  eval_precision = 0.4619[0m
[32m  eval_recall = 0.3171[0m
[32m  ********************[0m
[32m  Best f1:0.3442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39592:  43%|████▎     | 12/28 [00:36<00:55,  3.46s/it]epoch 4 loss 1.39696:  43%|████▎     | 12/28 [00:37<00:55,  3.46s/it]epoch 4 loss 1.39696:  46%|████▋     | 13/28 [00:37<00:38,  2.54s/it]epoch 4 loss 1.39984:  46%|████▋     | 13/28 [00:37<00:38,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6493[0m
[32m  eval_f1 = 0.3448[0m
[32m  eval_mcc = 0.6294[0m
[32m  eval_precision = 0.4613[0m
[32m  eval_recall = 0.3179[0m
[32m  ********************[0m
[32m  Best f1:0.3448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39984:  50%|█████     | 14/28 [00:43<00:50,  3.61s/it]epoch 4 loss 1.39355:  50%|█████     | 14/28 [00:43<00:50,  3.61s/it]epoch 4 loss 1.39355:  54%|█████▎    | 15/28 [00:43<00:34,  2.65s/it]epoch 4 loss 1.39329:  54%|█████▎    | 15/28 [00:44<00:34,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3452[0m
[32m  eval_mcc = 0.6298[0m
[32m  eval_precision = 0.4616[0m
[32m  eval_recall = 0.3183[0m
[32m  ********************[0m
[32m  Best f1:0.3452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39329:  57%|█████▋    | 16/28 [00:49<00:44,  3.74s/it]epoch 4 loss 1.39416:  57%|█████▋    | 16/28 [00:50<00:44,  3.74s/it]epoch 4 loss 1.39416:  61%|██████    | 17/28 [00:50<00:30,  2.74s/it]epoch 4 loss 1.39587:  61%|██████    | 17/28 [00:50<00:30,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6498[0m
[32m  eval_f1 = 0.3454[0m
[32m  eval_mcc = 0.6301[0m
[32m  eval_precision = 0.4622[0m
[32m  eval_recall = 0.3183[0m
[32m  ********************[0m
[32m  Best f1:0.3454[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39587:  64%|██████▍   | 18/28 [00:56<00:37,  3.78s/it]epoch 4 loss 1.39264:  64%|██████▍   | 18/28 [00:56<00:37,  3.78s/it]epoch 4 loss 1.39264:  68%|██████▊   | 19/28 [00:57<00:24,  2.78s/it]epoch 4 loss 1.39384:  68%|██████▊   | 19/28 [00:57<00:24,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3454[0m
[32m  eval_mcc = 0.63[0m
[32m  eval_precision = 0.462[0m
[32m  eval_recall = 0.3183[0m

epoch 4 loss 1.39384:  71%|███████▏  | 20/28 [01:00<00:24,  3.08s/it]epoch 4 loss 1.3873:  71%|███████▏  | 20/28 [01:01<00:24,  3.08s/it] epoch 4 loss 1.3873:  75%|███████▌  | 21/28 [01:01<00:15,  2.28s/it]epoch 4 loss 1.3866:  75%|███████▌  | 21/28 [01:01<00:15,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.65[0m
[32m  eval_f1 = 0.3457[0m
[32m  eval_mcc = 0.6303[0m
[32m  eval_precision = 0.463[0m
[32m  eval_recall = 0.3184[0m
[32m  ********************[0m
[32m  Best f1:0.3457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3866:  79%|███████▊  | 22/28 [01:07<00:20,  3.43s/it]epoch 4 loss 1.38195:  79%|███████▊  | 22/28 [01:07<00:20,  3.43s/it]epoch 4 loss 1.38195:  82%|████████▏ | 23/28 [01:07<00:12,  2.53s/it]epoch 4 loss 1.3823:  82%|████████▏ | 23/28 [01:08<00:12,  2.53s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6501[0m
[32m  eval_f1 = 0.3453[0m
[32m  eval_mcc = 0.6305[0m
[32m  eval_precision = 0.4628[0m
[32m  eval_recall = 0.3181[0m
[32m  ********************[0m
[32m  Best MCC:0.6305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3823:  86%|████████▌ | 24/28 [01:15<00:15,  3.96s/it]epoch 4 loss 1.38447:  86%|████████▌ | 24/28 [01:15<00:15,  3.96s/it]epoch 4 loss 1.38447:  89%|████████▉ | 25/28 [01:15<00:08,  2.90s/it]epoch 4 loss 1.38137:  89%|████████▉ | 25/28 [01:15<00:08,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3453[0m
[32m  eval_mcc = 0.6301[0m
[32m  eval_precision = 0.4629[0m
[32m  eval_recall = 0.3179[0m

epoch 4 loss 1.38137:  93%|█████████▎| 26/28 [01:19<00:06,  3.17s/it]epoch 4 loss 1.37684:  93%|█████████▎| 26/28 [01:19<00:06,  3.17s/it]epoch 4 loss 1.37684:  96%|█████████▋| 27/28 [01:19<00:02,  2.34s/it]epoch 4 loss 1.37599:  96%|█████████▋| 27/28 [01:19<00:02,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3453[0m
[32m  eval_mcc = 0.6301[0m
[32m  eval_precision = 0.4628[0m
[32m  eval_recall = 0.3179[0m

epoch 4 loss 1.37599: 100%|██████████| 28/28 [01:23<00:00,  2.72s/it]epoch 4 loss 1.37599: 100%|██████████| 28/28 [01:23<00:00,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.65[0m
[32m  eval_f1 = 0.3457[0m
[32m  eval_mcc = 0.6303[0m
[32m  eval_precision = 0.463[0m
[32m  eval_recall = 0.3184[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6334[0m
[32m  eval_f1 = 0.3084[0m
[32m  eval_mcc = 0.6139[0m
[32m  eval_precision = 0.4189[0m
[32m  eval_recall = 0.2841[0m

