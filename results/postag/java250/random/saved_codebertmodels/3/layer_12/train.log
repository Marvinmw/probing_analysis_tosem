[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/3/layer_12', posratio=0.5, seed=969, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.15993:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.15993:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.15317:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0039[0m
[32m  eval_f1 = 0.0008[0m
[32m  eval_mcc = -0.005[0m
[32m  eval_precision = 0.0034[0m
[32m  eval_recall = 0.003[0m
[32m  ********************[0m
[32m  Best f1:0.0008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.15317:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it]epoch 0 loss 5.14711:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it]epoch 0 loss 5.14711:  11%|█         | 3/28 [00:05<00:44,  1.76s/it]epoch 0 loss 5.13497:  11%|█         | 3/28 [00:05<00:44,  1.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0065[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = -0.0099[0m
[32m  eval_precision = 0.0027[0m
[32m  eval_recall = 0.0031[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.13497:  14%|█▍        | 4/28 [00:10<01:13,  3.06s/it]epoch 0 loss 5.11195:  14%|█▍        | 4/28 [00:11<01:13,  3.06s/it]epoch 0 loss 5.11195:  18%|█▊        | 5/28 [00:11<00:48,  2.11s/it]epoch 0 loss 5.08269:  18%|█▊        | 5/28 [00:11<00:48,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0147[0m
[32m  eval_f1 = 0.002[0m
[32m  eval_mcc = -0.0222[0m
[32m  eval_precision = 0.0049[0m
[32m  eval_recall = 0.0037[0m
[32m  ********************[0m
[32m  Best f1:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.08269:  21%|██▏       | 6/28 [00:15<01:05,  2.99s/it]epoch 0 loss 5.04809:  21%|██▏       | 6/28 [00:16<01:05,  2.99s/it]epoch 0 loss 5.04809:  25%|██▌       | 7/28 [00:16<00:44,  2.14s/it]epoch 0 loss 5.00761:  25%|██▌       | 7/28 [00:16<00:44,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.032[0m
[32m  eval_f1 = 0.0037[0m
[32m  eval_mcc = -0.032[0m
[32m  eval_precision = 0.007[0m
[32m  eval_recall = 0.005[0m
[32m  ********************[0m
[32m  Best f1:0.0037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.00761:  29%|██▊       | 8/28 [00:20<00:59,  2.99s/it]epoch 0 loss 4.96167:  29%|██▊       | 8/28 [00:21<00:59,  2.99s/it]epoch 0 loss 4.96167:  32%|███▏      | 9/28 [00:21<00:41,  2.18s/it]epoch 0 loss 4.91146:  32%|███▏      | 9/28 [00:21<00:41,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.043[0m
[32m  eval_f1 = 0.0047[0m
[32m  eval_mcc = -0.0295[0m
[32m  eval_precision = 0.0091[0m
[32m  eval_recall = 0.0071[0m
[32m  ********************[0m
[32m  Best f1:0.0047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.91146:  36%|███▌      | 10/28 [00:26<00:53,  2.96s/it]epoch 0 loss 4.85685:  36%|███▌      | 10/28 [00:26<00:53,  2.96s/it]epoch 0 loss 4.85685:  39%|███▉      | 11/28 [00:26<00:36,  2.17s/it]epoch 0 loss 4.80012:  39%|███▉      | 11/28 [00:26<00:36,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0536[0m
[32m  eval_f1 = 0.0062[0m
[32m  eval_mcc = -0.0198[0m
[32m  eval_precision = 0.0132[0m
[32m  eval_recall = 0.009[0m
[32m  ********************[0m
[32m  Best f1:0.0062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.80012:  43%|████▎     | 12/28 [00:31<00:47,  2.97s/it]epoch 0 loss 4.73743:  43%|████▎     | 12/28 [00:31<00:47,  2.97s/it]epoch 0 loss 4.73743:  46%|████▋     | 13/28 [00:31<00:32,  2.19s/it]epoch 0 loss 4.67545:  46%|████▋     | 13/28 [00:32<00:32,  2.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0754[0m
[32m  eval_f1 = 0.0098[0m
[32m  eval_mcc = 0.0026[0m
[32m  eval_precision = 0.0194[0m
[32m  eval_recall = 0.0125[0m
[32m  ********************[0m
[32m  Best f1:0.0098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.67545:  50%|█████     | 14/28 [00:37<00:44,  3.17s/it]epoch 0 loss 4.61011:  50%|█████     | 14/28 [00:37<00:44,  3.17s/it]epoch 0 loss 4.61011:  54%|█████▎    | 15/28 [00:37<00:30,  2.34s/it]epoch 0 loss 4.54616:  54%|█████▎    | 15/28 [00:37<00:30,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1046[0m
[32m  eval_f1 = 0.0142[0m
[32m  eval_mcc = 0.0339[0m
[32m  eval_precision = 0.024[0m
[32m  eval_recall = 0.0164[0m
[32m  ********************[0m
[32m  Best f1:0.0142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.54616:  57%|█████▋    | 16/28 [00:43<00:41,  3.46s/it]epoch 0 loss 4.48192:  57%|█████▋    | 16/28 [00:43<00:41,  3.46s/it]epoch 0 loss 4.48192:  61%|██████    | 17/28 [00:43<00:28,  2.55s/it]epoch 0 loss 4.41769:  61%|██████    | 17/28 [00:44<00:28,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1762[0m
[32m  eval_f1 = 0.0235[0m
[32m  eval_mcc = 0.1164[0m
[32m  eval_precision = 0.0337[0m
[32m  eval_recall = 0.0267[0m
[32m  ********************[0m
[32m  Best f1:0.0235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.41769:  64%|██████▍   | 18/28 [00:50<00:36,  3.61s/it]epoch 0 loss 4.35634:  64%|██████▍   | 18/28 [00:50<00:36,  3.61s/it]epoch 0 loss 4.35634:  68%|██████▊   | 19/28 [00:50<00:23,  2.65s/it]epoch 0 loss 4.30325:  68%|██████▊   | 19/28 [00:50<00:23,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2453[0m
[32m  eval_f1 = 0.0283[0m
[32m  eval_mcc = 0.183[0m
[32m  eval_precision = 0.0374[0m
[32m  eval_recall = 0.0348[0m
[32m  ********************[0m
[32m  Best f1:0.0283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.30325:  71%|███████▏  | 20/28 [00:56<00:28,  3.62s/it]epoch 0 loss 4.2439:  71%|███████▏  | 20/28 [00:56<00:28,  3.62s/it] epoch 0 loss 4.2439:  75%|███████▌  | 21/28 [00:56<00:18,  2.66s/it]epoch 0 loss 4.19556:  75%|███████▌  | 21/28 [00:57<00:18,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2747[0m
[32m  eval_f1 = 0.0334[0m
[32m  eval_mcc = 0.216[0m
[32m  eval_precision = 0.0725[0m
[32m  eval_recall = 0.0396[0m
[32m  ********************[0m
[32m  Best f1:0.0334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.19556:  79%|███████▊  | 22/28 [01:02<00:22,  3.69s/it]epoch 0 loss 4.14041:  79%|███████▊  | 22/28 [01:03<00:22,  3.69s/it]epoch 0 loss 4.14041:  82%|████████▏ | 23/28 [01:03<00:13,  2.71s/it]epoch 0 loss 4.08783:  82%|████████▏ | 23/28 [01:03<00:13,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3001[0m
[32m  eval_f1 = 0.0447[0m
[32m  eval_mcc = 0.2553[0m
[32m  eval_precision = 0.1045[0m
[32m  eval_recall = 0.0479[0m
[32m  ********************[0m
[32m  Best f1:0.0447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.08783:  86%|████████▌ | 24/28 [01:09<00:14,  3.71s/it]epoch 0 loss 4.03819:  86%|████████▌ | 24/28 [01:09<00:14,  3.71s/it]epoch 0 loss 4.03819:  89%|████████▉ | 25/28 [01:09<00:08,  2.72s/it]epoch 0 loss 3.99042:  89%|████████▉ | 25/28 [01:10<00:08,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3533[0m
[32m  eval_f1 = 0.0875[0m
[32m  eval_mcc = 0.3209[0m
[32m  eval_precision = 0.1653[0m
[32m  eval_recall = 0.0806[0m
[32m  ********************[0m
[32m  Best f1:0.0875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.99042:  93%|█████████▎| 26/28 [01:15<00:07,  3.55s/it]epoch 0 loss 3.93871:  93%|█████████▎| 26/28 [01:15<00:07,  3.55s/it]epoch 0 loss 3.93871:  96%|█████████▋| 27/28 [01:15<00:02,  2.61s/it]epoch 0 loss 3.88749:  96%|█████████▋| 27/28 [01:15<00:02,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4134[0m
[32m  eval_f1 = 0.1289[0m
[32m  eval_mcc = 0.3872[0m
[32m  eval_precision = 0.2239[0m
[32m  eval_recall = 0.1191[0m
[32m  ********************[0m
[32m  Best f1:0.1289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3872[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.88749: 100%|██████████| 28/28 [01:21<00:00,  3.56s/it]epoch 0 loss 3.88749: 100%|██████████| 28/28 [01:21<00:00,  2.91s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.56416:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.56416:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 1 loss 2.66626:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4651[0m
[32m  eval_f1 = 0.1558[0m
[32m  eval_mcc = 0.4371[0m
[32m  eval_precision = 0.2159[0m
[32m  eval_recall = 0.1475[0m
[32m  ********************[0m
[32m  Best f1:0.1558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.66626:   7%|▋         | 2/28 [00:06<01:37,  3.77s/it]epoch 1 loss 2.54859:   7%|▋         | 2/28 [00:06<01:37,  3.77s/it]epoch 1 loss 2.54859:  11%|█         | 3/28 [00:06<00:56,  2.24s/it]epoch 1 loss 2.55002:  11%|█         | 3/28 [00:07<00:56,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5098[0m
[32m  eval_f1 = 0.1764[0m
[32m  eval_mcc = 0.4799[0m
[32m  eval_precision = 0.2188[0m
[32m  eval_recall = 0.1718[0m
[32m  ********************[0m
[32m  Best f1:0.1764[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4799[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.55002:  14%|█▍        | 4/28 [00:12<01:29,  3.74s/it]epoch 1 loss 2.50535:  14%|█▍        | 4/28 [00:13<01:29,  3.74s/it]epoch 1 loss 2.50535:  18%|█▊        | 5/28 [00:13<00:58,  2.55s/it]epoch 1 loss 2.45862:  18%|█▊        | 5/28 [00:13<00:58,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5476[0m
[32m  eval_f1 = 0.1873[0m
[32m  eval_mcc = 0.5188[0m
[32m  eval_precision = 0.2413[0m
[32m  eval_recall = 0.1831[0m
[32m  ********************[0m
[32m  Best f1:0.1873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.45862:  21%|██▏       | 6/28 [00:19<01:22,  3.73s/it]epoch 1 loss 2.40872:  21%|██▏       | 6/28 [00:19<01:22,  3.73s/it]epoch 1 loss 2.40872:  25%|██▌       | 7/28 [00:19<00:55,  2.65s/it]epoch 1 loss 2.36698:  25%|██▌       | 7/28 [00:20<00:55,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5586[0m
[32m  eval_f1 = 0.1898[0m
[32m  eval_mcc = 0.5307[0m
[32m  eval_precision = 0.2454[0m
[32m  eval_recall = 0.1844[0m
[32m  ********************[0m
[32m  Best f1:0.1898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5307[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.36698:  29%|██▊       | 8/28 [00:25<01:13,  3.70s/it]epoch 1 loss 2.33969:  29%|██▊       | 8/28 [00:26<01:13,  3.70s/it]epoch 1 loss 2.33969:  32%|███▏      | 9/28 [00:26<00:50,  2.67s/it]epoch 1 loss 2.31635:  32%|███▏      | 9/28 [00:26<00:50,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5652[0m
[32m  eval_f1 = 0.1966[0m
[32m  eval_mcc = 0.5396[0m
[32m  eval_precision = 0.26[0m
[32m  eval_recall = 0.188[0m
[32m  ********************[0m
[32m  Best f1:0.1966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.31635:  36%|███▌      | 10/28 [00:32<01:05,  3.66s/it]epoch 1 loss 2.27076:  36%|███▌      | 10/28 [00:32<01:05,  3.66s/it]epoch 1 loss 2.27076:  39%|███▉      | 11/28 [00:32<00:45,  2.67s/it]epoch 1 loss 2.23807:  39%|███▉      | 11/28 [00:32<00:45,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5716[0m
[32m  eval_f1 = 0.2071[0m
[32m  eval_mcc = 0.5472[0m
[32m  eval_precision = 0.2826[0m
[32m  eval_recall = 0.1974[0m
[32m  ********************[0m
[32m  Best f1:0.2071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23807:  43%|████▎     | 12/28 [00:44<01:25,  5.37s/it]epoch 1 loss 2.2129:  43%|████▎     | 12/28 [00:44<01:25,  5.37s/it] epoch 1 loss 2.2129:  46%|████▋     | 13/28 [00:44<00:58,  3.87s/it]epoch 1 loss 2.1991:  46%|████▋     | 13/28 [00:44<00:58,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5724[0m
[32m  eval_f1 = 0.2101[0m
[32m  eval_mcc = 0.5487[0m
[32m  eval_precision = 0.2775[0m
[32m  eval_recall = 0.2009[0m
[32m  ********************[0m
[32m  Best f1:0.2101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1991:  50%|█████     | 14/28 [00:57<01:31,  6.57s/it]epoch 1 loss 2.17665:  50%|█████     | 14/28 [00:57<01:31,  6.57s/it]epoch 1 loss 2.17665:  54%|█████▎    | 15/28 [00:57<01:01,  4.72s/it]epoch 1 loss 2.1537:  54%|█████▎    | 15/28 [00:58<01:01,  4.72s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5784[0m
[32m  eval_f1 = 0.2192[0m
[32m  eval_mcc = 0.5551[0m
[32m  eval_precision = 0.2856[0m
[32m  eval_recall = 0.21[0m
[32m  ********************[0m
[32m  Best f1:0.2192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1537:  57%|█████▋    | 16/28 [01:09<01:20,  6.71s/it]epoch 1 loss 2.13339:  57%|█████▋    | 16/28 [01:09<01:20,  6.71s/it]epoch 1 loss 2.13339:  61%|██████    | 17/28 [01:09<00:53,  4.83s/it]epoch 1 loss 2.11501:  61%|██████    | 17/28 [01:09<00:53,  4.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.586[0m
[32m  eval_f1 = 0.2245[0m
[32m  eval_mcc = 0.5625[0m
[32m  eval_precision = 0.2856[0m
[32m  eval_recall = 0.2162[0m
[32m  ********************[0m
[32m  Best f1:0.2245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11501:  64%|██████▍   | 18/28 [01:19<01:04,  6.45s/it]epoch 1 loss 2.09131:  64%|██████▍   | 18/28 [01:20<01:04,  6.45s/it]epoch 1 loss 2.09131:  68%|██████▊   | 19/28 [01:20<00:41,  4.64s/it]epoch 1 loss 2.07199:  68%|██████▊   | 19/28 [01:20<00:41,  4.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.598[0m
[32m  eval_f1 = 0.2267[0m
[32m  eval_mcc = 0.5746[0m
[32m  eval_precision = 0.2846[0m
[32m  eval_recall = 0.2186[0m
[32m  ********************[0m
[32m  Best f1:0.2267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07199:  71%|███████▏  | 20/28 [01:28<00:46,  5.84s/it]epoch 1 loss 2.05506:  71%|███████▏  | 20/28 [01:29<00:46,  5.84s/it]epoch 1 loss 2.05506:  75%|███████▌  | 21/28 [01:29<00:29,  4.21s/it]epoch 1 loss 2.0453:  75%|███████▌  | 21/28 [01:29<00:29,  4.21s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6014[0m
[32m  eval_f1 = 0.2407[0m
[32m  eval_mcc = 0.5773[0m
[32m  eval_precision = 0.3139[0m
[32m  eval_recall = 0.2309[0m
[32m  ********************[0m
[32m  Best f1:0.2407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0453:  79%|███████▊  | 22/28 [01:39<00:35,  5.92s/it]epoch 1 loss 2.02997:  79%|███████▊  | 22/28 [01:39<00:35,  5.92s/it]epoch 1 loss 2.02997:  82%|████████▏ | 23/28 [01:39<00:21,  4.27s/it]epoch 1 loss 2.01735:  82%|████████▏ | 23/28 [01:39<00:21,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6028[0m
[32m  eval_f1 = 0.2442[0m
[32m  eval_mcc = 0.5784[0m
[32m  eval_precision = 0.3234[0m
[32m  eval_recall = 0.2344[0m
[32m  ********************[0m
[32m  Best f1:0.2442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01735:  86%|████████▌ | 24/28 [01:47<00:21,  5.45s/it]epoch 1 loss 2.00534:  86%|████████▌ | 24/28 [01:48<00:21,  5.45s/it]epoch 1 loss 2.00534:  89%|████████▉ | 25/28 [01:48<00:11,  3.94s/it]epoch 1 loss 1.99552:  89%|████████▉ | 25/28 [01:48<00:11,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6064[0m
[32m  eval_f1 = 0.2484[0m
[32m  eval_mcc = 0.5824[0m
[32m  eval_precision = 0.3356[0m
[32m  eval_recall = 0.2379[0m
[32m  ********************[0m
[32m  Best f1:0.2484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99552:  93%|█████████▎| 26/28 [01:59<00:12,  6.05s/it]epoch 1 loss 1.98478:  93%|█████████▎| 26/28 [01:59<00:12,  6.05s/it]epoch 1 loss 1.98478:  96%|█████████▋| 27/28 [01:59<00:04,  4.36s/it]epoch 1 loss 1.97776:  96%|█████████▋| 27/28 [01:59<00:04,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6117[0m
[32m  eval_f1 = 0.2516[0m
[32m  eval_mcc = 0.5896[0m
[32m  eval_precision = 0.3326[0m
[32m  eval_recall = 0.2406[0m
[32m  ********************[0m
[32m  Best f1:0.2516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5896[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97776: 100%|██████████| 28/28 [02:06<00:00,  5.27s/it]epoch 1 loss 1.97776: 100%|██████████| 28/28 [02:06<00:00,  4.53s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.60721:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.60721:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 2 loss 1.62473:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6127[0m
[32m  eval_f1 = 0.2543[0m
[32m  eval_mcc = 0.5917[0m
[32m  eval_precision = 0.3626[0m
[32m  eval_recall = 0.2424[0m
[32m  ********************[0m
[32m  Best f1:0.2543[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62473:   7%|▋         | 2/28 [00:09<02:29,  5.76s/it]epoch 2 loss 1.61262:   7%|▋         | 2/28 [00:10<02:29,  5.76s/it]epoch 2 loss 1.61262:  11%|█         | 3/28 [00:10<01:23,  3.32s/it]epoch 2 loss 1.61029:  11%|█         | 3/28 [00:10<01:23,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6122[0m
[32m  eval_f1 = 0.2583[0m
[32m  eval_mcc = 0.5918[0m
[32m  eval_precision = 0.3922[0m
[32m  eval_recall = 0.2446[0m
[32m  ********************[0m
[32m  Best f1:0.2583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5918[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61029:  14%|█▍        | 4/28 [00:17<02:00,  5.03s/it]epoch 2 loss 1.58558:  14%|█▍        | 4/28 [00:18<02:00,  5.03s/it]epoch 2 loss 1.58558:  18%|█▊        | 5/28 [00:18<01:17,  3.37s/it]epoch 2 loss 1.56564:  18%|█▊        | 5/28 [00:18<01:17,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6159[0m
[32m  eval_f1 = 0.2709[0m
[32m  eval_mcc = 0.5959[0m
[32m  eval_precision = 0.4032[0m
[32m  eval_recall = 0.2518[0m
[32m  ********************[0m
[32m  Best f1:0.2709[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56564:  21%|██▏       | 6/28 [00:27<01:59,  5.42s/it]epoch 2 loss 1.58467:  21%|██▏       | 6/28 [00:28<01:59,  5.42s/it]epoch 2 loss 1.58467:  25%|██▌       | 7/28 [00:28<01:19,  3.79s/it]epoch 2 loss 1.58785:  25%|██▌       | 7/28 [00:28<01:19,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6169[0m
[32m  eval_f1 = 0.283[0m
[32m  eval_mcc = 0.5966[0m
[32m  eval_precision = 0.4057[0m
[32m  eval_recall = 0.2641[0m
[32m  ********************[0m
[32m  Best f1:0.283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58785:  29%|██▊       | 8/28 [00:35<01:40,  5.02s/it]epoch 2 loss 1.57817:  29%|██▊       | 8/28 [00:36<01:40,  5.02s/it]epoch 2 loss 1.57817:  32%|███▏      | 9/28 [00:36<01:08,  3.58s/it]epoch 2 loss 1.58593:  32%|███▏      | 9/28 [00:36<01:08,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6182[0m
[32m  eval_f1 = 0.2856[0m
[32m  eval_mcc = 0.5973[0m
[32m  eval_precision = 0.4048[0m
[32m  eval_recall = 0.2671[0m
[32m  ********************[0m
[32m  Best f1:0.2856[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5973[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58593:  36%|███▌      | 10/28 [00:46<01:41,  5.66s/it]epoch 2 loss 1.58535:  36%|███▌      | 10/28 [00:47<01:41,  5.66s/it]epoch 2 loss 1.58535:  39%|███▉      | 11/28 [00:47<01:08,  4.05s/it]epoch 2 loss 1.58628:  39%|███▉      | 11/28 [00:47<01:08,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6202[0m
[32m  eval_f1 = 0.2902[0m
[32m  eval_mcc = 0.5984[0m
[32m  eval_precision = 0.3921[0m
[32m  eval_recall = 0.2722[0m
[32m  ********************[0m
[32m  Best f1:0.2902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58628:  43%|████▎     | 12/28 [00:52<01:13,  4.60s/it]epoch 2 loss 1.59226:  43%|████▎     | 12/28 [00:53<01:13,  4.60s/it]epoch 2 loss 1.59226:  46%|████▋     | 13/28 [00:53<00:50,  3.34s/it]epoch 2 loss 1.5892:  46%|████▋     | 13/28 [00:53<00:50,  3.34s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6232[0m
[32m  eval_f1 = 0.2929[0m
[32m  eval_mcc = 0.6013[0m
[32m  eval_precision = 0.4115[0m
[32m  eval_recall = 0.2743[0m
[32m  ********************[0m
[32m  Best f1:0.2929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5892:  50%|█████     | 14/28 [01:02<01:11,  5.11s/it]epoch 2 loss 1.58062:  50%|█████     | 14/28 [01:02<01:11,  5.11s/it]epoch 2 loss 1.58062:  54%|█████▎    | 15/28 [01:02<00:48,  3.70s/it]epoch 2 loss 1.57324:  54%|█████▎    | 15/28 [01:03<00:48,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6246[0m
[32m  eval_f1 = 0.2945[0m
[32m  eval_mcc = 0.6028[0m
[32m  eval_precision = 0.404[0m
[32m  eval_recall = 0.2757[0m
[32m  ********************[0m
[32m  Best f1:0.2945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57324:  57%|█████▋    | 16/28 [01:13<01:07,  5.67s/it]epoch 2 loss 1.57166:  57%|█████▋    | 16/28 [01:13<01:07,  5.67s/it]epoch 2 loss 1.57166:  61%|██████    | 17/28 [01:13<00:44,  4.09s/it]epoch 2 loss 1.57152:  61%|██████    | 17/28 [01:14<00:44,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6266[0m
[32m  eval_f1 = 0.2972[0m
[32m  eval_mcc = 0.6054[0m
[32m  eval_precision = 0.4191[0m
[32m  eval_recall = 0.2779[0m
[32m  ********************[0m
[32m  Best f1:0.2972[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57152:  64%|██████▍   | 18/28 [01:23<00:58,  5.88s/it]epoch 2 loss 1.5664:  64%|██████▍   | 18/28 [01:24<00:58,  5.88s/it] epoch 2 loss 1.5664:  68%|██████▊   | 19/28 [01:24<00:38,  4.24s/it]epoch 2 loss 1.5636:  68%|██████▊   | 19/28 [01:24<00:38,  4.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6296[0m
[32m  eval_f1 = 0.3018[0m
[32m  eval_mcc = 0.6093[0m
[32m  eval_precision = 0.4255[0m
[32m  eval_recall = 0.2811[0m
[32m  ********************[0m
[32m  Best f1:0.3018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5636:  71%|███████▏  | 20/28 [01:34<00:47,  5.97s/it]epoch 2 loss 1.56353:  71%|███████▏  | 20/28 [01:34<00:47,  5.97s/it]epoch 2 loss 1.56353:  75%|███████▌  | 21/28 [01:34<00:30,  4.30s/it]epoch 2 loss 1.56215:  75%|███████▌  | 21/28 [01:34<00:30,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6302[0m
[32m  eval_f1 = 0.307[0m
[32m  eval_mcc = 0.6104[0m
[32m  eval_precision = 0.4216[0m
[32m  eval_recall = 0.286[0m
[32m  ********************[0m
[32m  Best f1:0.307[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56215:  79%|███████▊  | 22/28 [01:42<00:32,  5.40s/it]epoch 2 loss 1.55734:  79%|███████▊  | 22/28 [01:42<00:32,  5.40s/it]epoch 2 loss 1.55734:  82%|████████▏ | 23/28 [01:42<00:19,  3.91s/it]epoch 2 loss 1.55544:  82%|████████▏ | 23/28 [01:43<00:19,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6304[0m
[32m  eval_f1 = 0.3101[0m
[32m  eval_mcc = 0.6106[0m
[32m  eval_precision = 0.4234[0m
[32m  eval_recall = 0.2891[0m
[32m  ********************[0m
[32m  Best f1:0.3101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55544:  86%|████████▌ | 24/28 [01:52<00:22,  5.64s/it]epoch 2 loss 1.54913:  86%|████████▌ | 24/28 [01:53<00:22,  5.64s/it]epoch 2 loss 1.54913:  89%|████████▉ | 25/28 [01:53<00:12,  4.08s/it]epoch 2 loss 1.54797:  89%|████████▉ | 25/28 [01:53<00:12,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6309[0m
[32m  eval_f1 = 0.3142[0m
[32m  eval_mcc = 0.6107[0m
[32m  eval_precision = 0.428[0m
[32m  eval_recall = 0.2916[0m
[32m  ********************[0m
[32m  Best f1:0.3142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54797:  93%|█████████▎| 26/28 [02:00<00:10,  5.21s/it]epoch 2 loss 1.54308:  93%|█████████▎| 26/28 [02:01<00:10,  5.21s/it]epoch 2 loss 1.54308:  96%|█████████▋| 27/28 [02:01<00:03,  3.78s/it]epoch 2 loss 1.53921:  96%|█████████▋| 27/28 [02:01<00:03,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6313[0m
[32m  eval_f1 = 0.3137[0m
[32m  eval_mcc = 0.6102[0m
[32m  eval_precision = 0.4318[0m
[32m  eval_recall = 0.2914[0m

epoch 2 loss 1.53921: 100%|██████████| 28/28 [02:04<00:00,  3.73s/it]epoch 2 loss 1.53921: 100%|██████████| 28/28 [02:04<00:00,  4.46s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.40639:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.40639:   4%|▎         | 1/28 [00:00<00:10,  2.50it/s]epoch 3 loss 1.47113:   4%|▎         | 1/28 [00:00<00:10,  2.50it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6298[0m
[32m  eval_f1 = 0.3116[0m
[32m  eval_mcc = 0.608[0m
[32m  eval_precision = 0.4325[0m
[32m  eval_recall = 0.29[0m

epoch 3 loss 1.47113:   7%|▋         | 2/28 [00:04<01:02,  2.40s/it]epoch 3 loss 1.4691:   7%|▋         | 2/28 [00:04<01:02,  2.40s/it] epoch 3 loss 1.4691:  11%|█         | 3/28 [00:04<00:37,  1.48s/it]epoch 3 loss 1.46803:  11%|█         | 3/28 [00:04<00:37,  1.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6305[0m
[32m  eval_f1 = 0.3135[0m
[32m  eval_mcc = 0.6085[0m
[32m  eval_precision = 0.4278[0m
[32m  eval_recall = 0.2914[0m

epoch 3 loss 1.46803:  14%|█▍        | 4/28 [00:08<00:57,  2.40s/it]epoch 3 loss 1.45112:  14%|█▍        | 4/28 [00:08<00:57,  2.40s/it]epoch 3 loss 1.45112:  18%|█▊        | 5/28 [00:08<00:38,  1.68s/it]epoch 3 loss 1.44717:  18%|█▊        | 5/28 [00:09<00:38,  1.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6318[0m
[32m  eval_f1 = 0.315[0m
[32m  eval_mcc = 0.61[0m
[32m  eval_precision = 0.4231[0m
[32m  eval_recall = 0.2932[0m
[32m  ********************[0m
[32m  Best f1:0.315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.44717:  21%|██▏       | 6/28 [00:13<01:02,  2.83s/it]epoch 3 loss 1.45113:  21%|██▏       | 6/28 [00:14<01:02,  2.83s/it]epoch 3 loss 1.45113:  25%|██▌       | 7/28 [00:14<00:42,  2.04s/it]epoch 3 loss 1.44688:  25%|██▌       | 7/28 [00:14<00:42,  2.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6344[0m
[32m  eval_f1 = 0.3179[0m
[32m  eval_mcc = 0.6133[0m
[32m  eval_precision = 0.4351[0m
[32m  eval_recall = 0.2955[0m
[32m  ********************[0m
[32m  Best f1:0.3179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44688:  29%|██▊       | 8/28 [00:23<01:25,  4.29s/it]epoch 3 loss 1.44639:  29%|██▊       | 8/28 [00:23<01:25,  4.29s/it]epoch 3 loss 1.44639:  32%|███▏      | 9/28 [00:23<00:58,  3.08s/it]epoch 3 loss 1.43733:  32%|███▏      | 9/28 [00:24<00:58,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6368[0m
[32m  eval_f1 = 0.3196[0m
[32m  eval_mcc = 0.6168[0m
[32m  eval_precision = 0.4322[0m
[32m  eval_recall = 0.2966[0m
[32m  ********************[0m
[32m  Best f1:0.3196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43733:  36%|███▌      | 10/28 [00:33<01:33,  5.21s/it]epoch 3 loss 1.43426:  36%|███▌      | 10/28 [00:34<01:33,  5.21s/it]epoch 3 loss 1.43426:  39%|███▉      | 11/28 [00:34<01:03,  3.75s/it]epoch 3 loss 1.43979:  39%|███▉      | 11/28 [00:34<01:03,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6381[0m
[32m  eval_f1 = 0.3203[0m
[32m  eval_mcc = 0.6186[0m
[32m  eval_precision = 0.4337[0m
[32m  eval_recall = 0.2968[0m
[32m  ********************[0m
[32m  Best f1:0.3203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43979:  43%|████▎     | 12/28 [00:43<01:24,  5.29s/it]epoch 3 loss 1.44285:  43%|████▎     | 12/28 [00:43<01:24,  5.29s/it]epoch 3 loss 1.44285:  46%|████▋     | 13/28 [00:43<00:57,  3.81s/it]epoch 3 loss 1.44374:  46%|████▋     | 13/28 [00:43<00:57,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6392[0m
[32m  eval_f1 = 0.3241[0m
[32m  eval_mcc = 0.6198[0m
[32m  eval_precision = 0.4462[0m
[32m  eval_recall = 0.2989[0m
[32m  ********************[0m
[32m  Best f1:0.3241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44374:  50%|█████     | 14/28 [00:52<01:14,  5.34s/it]epoch 3 loss 1.44195:  50%|█████     | 14/28 [00:52<01:14,  5.34s/it]epoch 3 loss 1.44195:  54%|█████▎    | 15/28 [00:52<00:50,  3.86s/it]epoch 3 loss 1.43793:  54%|█████▎    | 15/28 [00:53<00:50,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6397[0m
[32m  eval_f1 = 0.3243[0m
[32m  eval_mcc = 0.6201[0m
[32m  eval_precision = 0.4476[0m
[32m  eval_recall = 0.2986[0m
[32m  ********************[0m
[32m  Best f1:0.3243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43793:  57%|█████▋    | 16/28 [01:00<00:59,  4.92s/it]epoch 3 loss 1.43264:  57%|█████▋    | 16/28 [01:00<00:59,  4.92s/it]epoch 3 loss 1.43264:  61%|██████    | 17/28 [01:00<00:39,  3.57s/it]epoch 3 loss 1.43067:  61%|██████    | 17/28 [01:00<00:39,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6401[0m
[32m  eval_f1 = 0.3268[0m
[32m  eval_mcc = 0.6204[0m
[32m  eval_precision = 0.4597[0m
[32m  eval_recall = 0.2995[0m
[32m  ********************[0m
[32m  Best f1:0.3268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6204[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43067:  64%|██████▍   | 18/28 [01:10<00:53,  5.35s/it]epoch 3 loss 1.42551:  64%|██████▍   | 18/28 [01:10<00:53,  5.35s/it]epoch 3 loss 1.42551:  68%|██████▊   | 19/28 [01:10<00:34,  3.86s/it]epoch 3 loss 1.42316:  68%|██████▊   | 19/28 [01:10<00:34,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6406[0m
[32m  eval_f1 = 0.3275[0m
[32m  eval_mcc = 0.6206[0m
[32m  eval_precision = 0.4569[0m
[32m  eval_recall = 0.3001[0m
[32m  ********************[0m
[32m  Best f1:0.3275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42316:  71%|███████▏  | 20/28 [01:17<00:38,  4.77s/it]epoch 3 loss 1.42982:  71%|███████▏  | 20/28 [01:17<00:38,  4.77s/it]epoch 3 loss 1.42982:  75%|███████▌  | 21/28 [01:17<00:24,  3.47s/it]epoch 3 loss 1.43054:  75%|███████▌  | 21/28 [01:18<00:24,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6407[0m
[32m  eval_f1 = 0.3301[0m
[32m  eval_mcc = 0.6203[0m
[32m  eval_precision = 0.4617[0m
[32m  eval_recall = 0.3024[0m
[32m  ********************[0m
[32m  Best f1:0.3301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.43054:  79%|███████▊  | 22/28 [01:22<00:23,  3.91s/it]epoch 3 loss 1.43766:  79%|███████▊  | 22/28 [01:23<00:23,  3.91s/it]epoch 3 loss 1.43766:  82%|████████▏ | 23/28 [01:23<00:14,  2.86s/it]epoch 3 loss 1.44102:  82%|████████▏ | 23/28 [01:23<00:14,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6408[0m
[32m  eval_f1 = 0.3328[0m
[32m  eval_mcc = 0.6202[0m
[32m  eval_precision = 0.4508[0m
[32m  eval_recall = 0.3052[0m
[32m  ********************[0m
[32m  Best f1:0.3328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.44102:  86%|████████▌ | 24/28 [01:27<00:13,  3.44s/it]epoch 3 loss 1.44251:  86%|████████▌ | 24/28 [01:28<00:13,  3.44s/it]epoch 3 loss 1.44251:  89%|████████▉ | 25/28 [01:28<00:07,  2.53s/it]epoch 3 loss 1.43479:  89%|████████▉ | 25/28 [01:28<00:07,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6415[0m
[32m  eval_f1 = 0.3349[0m
[32m  eval_mcc = 0.6208[0m
[32m  eval_precision = 0.4562[0m
[32m  eval_recall = 0.3076[0m
[32m  ********************[0m
[32m  Best f1:0.3349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43479:  93%|█████████▎| 26/28 [01:33<00:06,  3.45s/it]epoch 3 loss 1.43308:  93%|█████████▎| 26/28 [01:34<00:06,  3.45s/it]epoch 3 loss 1.43308:  96%|█████████▋| 27/28 [01:34<00:02,  2.54s/it]epoch 3 loss 1.43448:  96%|█████████▋| 27/28 [01:34<00:02,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6426[0m
[32m  eval_f1 = 0.3359[0m
[32m  eval_mcc = 0.622[0m
[32m  eval_precision = 0.4632[0m
[32m  eval_recall = 0.3086[0m
[32m  ********************[0m
[32m  Best f1:0.3359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43448: 100%|██████████| 28/28 [01:40<00:00,  3.54s/it]epoch 3 loss 1.43448: 100%|██████████| 28/28 [01:40<00:00,  3.58s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.36434:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.36434:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 4 loss 1.42762:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6435[0m
[32m  eval_f1 = 0.3376[0m
[32m  eval_mcc = 0.6231[0m
[32m  eval_precision = 0.4612[0m
[32m  eval_recall = 0.3107[0m
[32m  ********************[0m
[32m  Best f1:0.3376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42762:   7%|▋         | 2/28 [00:06<01:34,  3.63s/it]epoch 4 loss 1.38664:   7%|▋         | 2/28 [00:06<01:34,  3.63s/it]epoch 4 loss 1.38664:  11%|█         | 3/28 [00:06<00:54,  2.17s/it]epoch 4 loss 1.38335:  11%|█         | 3/28 [00:07<00:54,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6441[0m
[32m  eval_f1 = 0.3384[0m
[32m  eval_mcc = 0.6238[0m
[32m  eval_precision = 0.4612[0m
[32m  eval_recall = 0.3114[0m
[32m  ********************[0m
[32m  Best f1:0.3384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38335:  14%|█▍        | 4/28 [00:12<01:26,  3.62s/it]epoch 4 loss 1.39275:  14%|█▍        | 4/28 [00:13<01:26,  3.62s/it]epoch 4 loss 1.39275:  18%|█▊        | 5/28 [00:13<00:56,  2.47s/it]epoch 4 loss 1.3976:  18%|█▊        | 5/28 [00:13<00:56,  2.47s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6448[0m
[32m  eval_f1 = 0.3385[0m
[32m  eval_mcc = 0.6247[0m
[32m  eval_precision = 0.4626[0m
[32m  eval_recall = 0.3116[0m
[32m  ********************[0m
[32m  Best f1:0.3385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3976:  21%|██▏       | 6/28 [00:19<01:20,  3.68s/it]epoch 4 loss 1.40473:  21%|██▏       | 6/28 [00:19<01:20,  3.68s/it]epoch 4 loss 1.40473:  25%|██▌       | 7/28 [00:19<00:54,  2.62s/it]epoch 4 loss 1.40966:  25%|██▌       | 7/28 [00:19<00:54,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6447[0m
[32m  eval_f1 = 0.3388[0m
[32m  eval_mcc = 0.6246[0m
[32m  eval_precision = 0.4654[0m
[32m  eval_recall = 0.3121[0m
[32m  ********************[0m
[32m  Best f1:0.3388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.40966:  29%|██▊       | 8/28 [00:24<01:07,  3.36s/it]epoch 4 loss 1.41204:  29%|██▊       | 8/28 [00:24<01:07,  3.36s/it]epoch 4 loss 1.41204:  32%|███▏      | 9/28 [00:24<00:46,  2.44s/it]epoch 4 loss 1.4052:  32%|███▏      | 9/28 [00:25<00:46,  2.44s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6452[0m
[32m  eval_f1 = 0.3393[0m
[32m  eval_mcc = 0.625[0m
[32m  eval_precision = 0.464[0m
[32m  eval_recall = 0.3126[0m
[32m  ********************[0m
[32m  Best f1:0.3393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.4052:  36%|███▌      | 10/28 [00:30<01:03,  3.55s/it]epoch 4 loss 1.41779:  36%|███▌      | 10/28 [00:31<01:03,  3.55s/it]epoch 4 loss 1.41779:  39%|███▉      | 11/28 [00:31<00:44,  2.59s/it]epoch 4 loss 1.41374:  39%|███▉      | 11/28 [00:31<00:44,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6455[0m
[32m  eval_f1 = 0.3395[0m
[32m  eval_mcc = 0.6253[0m
[32m  eval_precision = 0.4633[0m
[32m  eval_recall = 0.313[0m
[32m  ********************[0m
[32m  Best f1:0.3395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41374:  43%|████▎     | 12/28 [00:37<00:57,  3.61s/it]epoch 4 loss 1.41473:  43%|████▎     | 12/28 [00:37<00:57,  3.61s/it]epoch 4 loss 1.41473:  46%|████▋     | 13/28 [00:37<00:39,  2.65s/it]epoch 4 loss 1.41788:  46%|████▋     | 13/28 [00:38<00:39,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6459[0m
[32m  eval_f1 = 0.3389[0m
[32m  eval_mcc = 0.6257[0m
[32m  eval_precision = 0.4629[0m
[32m  eval_recall = 0.3129[0m
[32m  ********************[0m
[32m  Best MCC:0.6257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41788:  50%|█████     | 14/28 [00:42<00:45,  3.26s/it]epoch 4 loss 1.41163:  50%|█████     | 14/28 [00:42<00:45,  3.26s/it]epoch 4 loss 1.41163:  54%|█████▎    | 15/28 [00:42<00:31,  2.40s/it]epoch 4 loss 1.41147:  54%|█████▎    | 15/28 [00:43<00:31,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6465[0m
[32m  eval_f1 = 0.3391[0m
[32m  eval_mcc = 0.6264[0m
[32m  eval_precision = 0.4619[0m
[32m  eval_recall = 0.3133[0m
[32m  ********************[0m
[32m  Best MCC:0.6264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41147:  57%|█████▋    | 16/28 [00:47<00:38,  3.18s/it]epoch 4 loss 1.41225:  57%|█████▋    | 16/28 [00:48<00:38,  3.18s/it]epoch 4 loss 1.41225:  61%|██████    | 17/28 [00:48<00:25,  2.35s/it]epoch 4 loss 1.41381:  61%|██████    | 17/28 [00:48<00:25,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6465[0m
[32m  eval_f1 = 0.3406[0m
[32m  eval_mcc = 0.6265[0m
[32m  eval_precision = 0.4624[0m
[32m  eval_recall = 0.3143[0m
[32m  ********************[0m
[32m  Best f1:0.3406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41381:  64%|██████▍   | 18/28 [00:54<00:36,  3.64s/it]epoch 4 loss 1.4108:  64%|██████▍   | 18/28 [00:55<00:36,  3.64s/it] epoch 4 loss 1.4108:  68%|██████▊   | 19/28 [00:55<00:24,  2.68s/it]epoch 4 loss 1.41184:  68%|██████▊   | 19/28 [00:55<00:24,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.341[0m
[32m  eval_mcc = 0.627[0m
[32m  eval_precision = 0.4637[0m
[32m  eval_recall = 0.3145[0m
[32m  ********************[0m
[32m  Best f1:0.341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41184:  71%|███████▏  | 20/28 [01:01<00:30,  3.77s/it]epoch 4 loss 1.40514:  71%|███████▏  | 20/28 [01:01<00:30,  3.77s/it]epoch 4 loss 1.40514:  75%|███████▌  | 21/28 [01:01<00:19,  2.77s/it]epoch 4 loss 1.40451:  75%|███████▌  | 21/28 [01:02<00:19,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6468[0m
[32m  eval_f1 = 0.3413[0m
[32m  eval_mcc = 0.6269[0m
[32m  eval_precision = 0.4639[0m
[32m  eval_recall = 0.3147[0m
[32m  ********************[0m
[32m  Best f1:0.3413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.40451:  79%|███████▊  | 22/28 [01:06<00:20,  3.43s/it]epoch 4 loss 1.39987:  79%|███████▊  | 22/28 [01:07<00:20,  3.43s/it]epoch 4 loss 1.39987:  82%|████████▏ | 23/28 [01:07<00:12,  2.52s/it]epoch 4 loss 1.40006:  82%|████████▏ | 23/28 [01:07<00:12,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3413[0m
[32m  eval_mcc = 0.6271[0m
[32m  eval_precision = 0.4642[0m
[32m  eval_recall = 0.3146[0m
[32m  ********************[0m
[32m  Best f1:0.3413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40006:  86%|████████▌ | 24/28 [01:13<00:14,  3.64s/it]epoch 4 loss 1.40238:  86%|████████▌ | 24/28 [01:14<00:14,  3.64s/it]epoch 4 loss 1.40238:  89%|████████▉ | 25/28 [01:14<00:08,  2.68s/it]epoch 4 loss 1.39937:  89%|████████▉ | 25/28 [01:14<00:08,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6468[0m
[32m  eval_f1 = 0.341[0m
[32m  eval_mcc = 0.627[0m
[32m  eval_precision = 0.4642[0m
[32m  eval_recall = 0.3143[0m

epoch 4 loss 1.39937:  93%|█████████▎| 26/28 [01:17<00:06,  3.02s/it]epoch 4 loss 1.39483:  93%|█████████▎| 26/28 [01:18<00:06,  3.02s/it]epoch 4 loss 1.39483:  96%|█████████▋| 27/28 [01:18<00:02,  2.23s/it]epoch 4 loss 1.39381:  96%|█████████▋| 27/28 [01:18<00:02,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6469[0m
[32m  eval_f1 = 0.341[0m
[32m  eval_mcc = 0.627[0m
[32m  eval_precision = 0.4643[0m
[32m  eval_recall = 0.3142[0m

epoch 4 loss 1.39381: 100%|██████████| 28/28 [01:21<00:00,  2.64s/it]epoch 4 loss 1.39381: 100%|██████████| 28/28 [01:21<00:00,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3413[0m
[32m  eval_mcc = 0.6271[0m
[32m  eval_precision = 0.4642[0m
[32m  eval_recall = 0.3146[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6312[0m
[32m  eval_f1 = 0.3022[0m
[32m  eval_mcc = 0.6115[0m
[32m  eval_precision = 0.4072[0m
[32m  eval_recall = 0.2792[0m

