[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/3/layer_10', posratio=0.5, seed=969, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.0306:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.0306:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.03766:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0107[0m
[32m  eval_f1 = 0.0015[0m
[32m  eval_mcc = -0.0239[0m
[32m  eval_precision = 0.0033[0m
[32m  eval_recall = 0.0082[0m
[32m  ********************[0m
[32m  Best f1:0.0015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.03766:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.03075:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.03075:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 5.02086:  11%|█         | 3/28 [00:05<00:43,  1.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0208[0m
[32m  eval_f1 = 0.0017[0m
[32m  eval_mcc = -0.0238[0m
[32m  eval_precision = 0.0046[0m
[32m  eval_recall = 0.0057[0m
[32m  ********************[0m
[32m  Best f1:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.02086:  14%|█▍        | 4/28 [00:10<01:14,  3.09s/it]epoch 0 loss 4.99648:  14%|█▍        | 4/28 [00:11<01:14,  3.09s/it]epoch 0 loss 4.99648:  18%|█▊        | 5/28 [00:11<00:48,  2.12s/it]epoch 0 loss 4.96705:  18%|█▊        | 5/28 [00:11<00:48,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0329[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = -0.0229[0m
[32m  eval_precision = 0.0102[0m
[32m  eval_recall = 0.0058[0m
[32m  ********************[0m
[32m  Best f1:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.96705:  21%|██▏       | 6/28 [00:18<01:26,  3.92s/it]epoch 0 loss 4.93308:  21%|██▏       | 6/28 [00:18<01:26,  3.92s/it]epoch 0 loss 4.93308:  25%|██▌       | 7/28 [00:18<00:58,  2.78s/it]epoch 0 loss 4.89337:  25%|██▌       | 7/28 [00:19<00:58,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0415[0m
[32m  eval_f1 = 0.0025[0m
[32m  eval_mcc = -0.0208[0m
[32m  eval_precision = 0.0109[0m
[32m  eval_recall = 0.0077[0m
[32m  ********************[0m
[32m  Best f1:0.0025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.89337:  29%|██▊       | 8/28 [00:24<01:10,  3.51s/it]epoch 0 loss 4.84833:  29%|██▊       | 8/28 [00:24<01:10,  3.51s/it]epoch 0 loss 4.84833:  32%|███▏      | 9/28 [00:24<00:48,  2.54s/it]epoch 0 loss 4.79774:  32%|███▏      | 9/28 [00:24<00:48,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0503[0m
[32m  eval_f1 = 0.0044[0m
[32m  eval_mcc = -0.0127[0m
[32m  eval_precision = 0.0177[0m
[32m  eval_recall = 0.0102[0m
[32m  ********************[0m
[32m  Best f1:0.0044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.79774:  36%|███▌      | 10/28 [00:31<01:11,  3.98s/it]epoch 0 loss 4.74482:  36%|███▌      | 10/28 [00:32<01:11,  3.98s/it]epoch 0 loss 4.74482:  39%|███▉      | 11/28 [00:32<00:49,  2.89s/it]epoch 0 loss 4.68913:  39%|███▉      | 11/28 [00:32<00:49,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0671[0m
[32m  eval_f1 = 0.0071[0m
[32m  eval_mcc = 0.0046[0m
[32m  eval_precision = 0.0208[0m
[32m  eval_recall = 0.0133[0m
[32m  ********************[0m
[32m  Best f1:0.0071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.68913:  43%|████▎     | 12/28 [00:37<00:58,  3.67s/it]epoch 0 loss 4.62906:  43%|████▎     | 12/28 [00:37<00:58,  3.67s/it]epoch 0 loss 4.62906:  46%|████▋     | 13/28 [00:37<00:40,  2.69s/it]epoch 0 loss 4.56945:  46%|████▋     | 13/28 [00:38<00:40,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1002[0m
[32m  eval_f1 = 0.0122[0m
[32m  eval_mcc = 0.0351[0m
[32m  eval_precision = 0.0244[0m
[32m  eval_recall = 0.0179[0m
[32m  ********************[0m
[32m  Best f1:0.0122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.56945:  50%|█████     | 14/28 [00:46<01:02,  4.44s/it]epoch 0 loss 4.50595:  50%|█████     | 14/28 [00:46<01:02,  4.44s/it]epoch 0 loss 4.50595:  54%|█████▎    | 15/28 [00:46<00:41,  3.23s/it]epoch 0 loss 4.44402:  54%|█████▎    | 15/28 [00:47<00:41,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1663[0m
[32m  eval_f1 = 0.0213[0m
[32m  eval_mcc = 0.1044[0m
[32m  eval_precision = 0.0335[0m
[32m  eval_recall = 0.0265[0m
[32m  ********************[0m
[32m  Best f1:0.0213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.44402:  57%|█████▋    | 16/28 [00:56<01:02,  5.25s/it]epoch 0 loss 4.38134:  57%|█████▋    | 16/28 [00:57<01:02,  5.25s/it]epoch 0 loss 4.38134:  61%|██████    | 17/28 [00:57<00:41,  3.80s/it]epoch 0 loss 4.31867:  61%|██████    | 17/28 [00:57<00:41,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2328[0m
[32m  eval_f1 = 0.0291[0m
[32m  eval_mcc = 0.1747[0m
[32m  eval_precision = 0.0373[0m
[32m  eval_recall = 0.0346[0m
[32m  ********************[0m
[32m  Best f1:0.0291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.31867:  64%|██████▍   | 18/28 [01:05<00:51,  5.12s/it]epoch 0 loss 4.25869:  64%|██████▍   | 18/28 [01:05<00:51,  5.12s/it]epoch 0 loss 4.25869:  68%|██████▊   | 19/28 [01:05<00:33,  3.71s/it]epoch 0 loss 4.20701:  68%|██████▊   | 19/28 [01:06<00:33,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2676[0m
[32m  eval_f1 = 0.0316[0m
[32m  eval_mcc = 0.2081[0m
[32m  eval_precision = 0.0477[0m
[32m  eval_recall = 0.0385[0m
[32m  ********************[0m
[32m  Best f1:0.0316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.20701:  71%|███████▏  | 20/28 [01:13<00:39,  4.96s/it]epoch 0 loss 4.14904:  71%|███████▏  | 20/28 [01:14<00:39,  4.96s/it]epoch 0 loss 4.14904:  75%|███████▌  | 21/28 [01:14<00:25,  3.60s/it]epoch 0 loss 4.10259:  75%|███████▌  | 21/28 [01:14<00:25,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2907[0m
[32m  eval_f1 = 0.0403[0m
[32m  eval_mcc = 0.2374[0m
[32m  eval_precision = 0.0732[0m
[32m  eval_recall = 0.0463[0m
[32m  ********************[0m
[32m  Best f1:0.0403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.10259:  79%|███████▊  | 22/28 [01:22<00:29,  4.97s/it]epoch 0 loss 4.04883:  79%|███████▊  | 22/28 [01:22<00:29,  4.97s/it]epoch 0 loss 4.04883:  82%|████████▏ | 23/28 [01:22<00:18,  3.60s/it]epoch 0 loss 3.99736:  82%|████████▏ | 23/28 [01:23<00:18,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3345[0m
[32m  eval_f1 = 0.0649[0m
[32m  eval_mcc = 0.2903[0m
[32m  eval_precision = 0.1252[0m
[32m  eval_recall = 0.0658[0m
[32m  ********************[0m
[32m  Best f1:0.0649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.99736:  86%|████████▌ | 24/28 [01:29<00:18,  4.52s/it]epoch 0 loss 3.94815:  86%|████████▌ | 24/28 [01:29<00:18,  4.52s/it]epoch 0 loss 3.94815:  89%|████████▉ | 25/28 [01:29<00:09,  3.29s/it]epoch 0 loss 3.9004:  89%|████████▉ | 25/28 [01:30<00:09,  3.29s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3947[0m
[32m  eval_f1 = 0.1053[0m
[32m  eval_mcc = 0.3587[0m
[32m  eval_precision = 0.1857[0m
[32m  eval_recall = 0.0988[0m
[32m  ********************[0m
[32m  Best f1:0.1053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.9004:  93%|█████████▎| 26/28 [01:36<00:08,  4.32s/it]epoch 0 loss 3.84893:  93%|█████████▎| 26/28 [01:36<00:08,  4.32s/it]epoch 0 loss 3.84893:  96%|█████████▋| 27/28 [01:36<00:03,  3.15s/it]epoch 0 loss 3.79786:  96%|█████████▋| 27/28 [01:37<00:03,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4461[0m
[32m  eval_f1 = 0.1387[0m
[32m  eval_mcc = 0.4123[0m
[32m  eval_precision = 0.2003[0m
[32m  eval_recall = 0.131[0m
[32m  ********************[0m
[32m  Best f1:0.1387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.79786: 100%|██████████| 28/28 [01:43<00:00,  4.18s/it]epoch 0 loss 3.79786: 100%|██████████| 28/28 [01:43<00:00,  3.70s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.47817:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.47817:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 1 loss 2.57679:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4866[0m
[32m  eval_f1 = 0.1604[0m
[32m  eval_mcc = 0.454[0m
[32m  eval_precision = 0.2042[0m
[32m  eval_recall = 0.157[0m
[32m  ********************[0m
[32m  Best f1:0.1604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.454[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.57679:   7%|▋         | 2/28 [00:08<02:02,  4.72s/it]epoch 1 loss 2.45948:   7%|▋         | 2/28 [00:08<02:02,  4.72s/it]epoch 1 loss 2.45948:  11%|█         | 3/28 [00:08<01:08,  2.76s/it]epoch 1 loss 2.46232:  11%|█         | 3/28 [00:08<01:08,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5222[0m
[32m  eval_f1 = 0.1781[0m
[32m  eval_mcc = 0.4921[0m
[32m  eval_precision = 0.2156[0m
[32m  eval_recall = 0.1773[0m
[32m  ********************[0m
[32m  Best f1:0.1781[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.46232:  14%|█▍        | 4/28 [00:14<01:38,  4.10s/it]epoch 1 loss 2.41998:  14%|█▍        | 4/28 [00:15<01:38,  4.10s/it]epoch 1 loss 2.41998:  18%|█▊        | 5/28 [00:15<01:03,  2.77s/it]epoch 1 loss 2.37316:  18%|█▊        | 5/28 [00:15<01:03,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5545[0m
[32m  eval_f1 = 0.1885[0m
[32m  eval_mcc = 0.5271[0m
[32m  eval_precision = 0.2391[0m
[32m  eval_recall = 0.1864[0m
[32m  ********************[0m
[32m  Best f1:0.1885[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.37316:  21%|██▏       | 6/28 [00:21<01:27,  3.97s/it]epoch 1 loss 2.32405:  21%|██▏       | 6/28 [00:21<01:27,  3.97s/it]epoch 1 loss 2.32405:  25%|██▌       | 7/28 [00:21<00:59,  2.81s/it]epoch 1 loss 2.28227:  25%|██▌       | 7/28 [00:22<00:59,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5625[0m
[32m  eval_f1 = 0.1989[0m
[32m  eval_mcc = 0.5368[0m
[32m  eval_precision = 0.2541[0m
[32m  eval_recall = 0.1923[0m
[32m  ********************[0m
[32m  Best f1:0.1989[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.28227:  29%|██▊       | 8/28 [00:28<01:18,  3.92s/it]epoch 1 loss 2.25481:  29%|██▊       | 8/28 [00:28<01:18,  3.92s/it]epoch 1 loss 2.25481:  32%|███▏      | 9/28 [00:28<00:53,  2.83s/it]epoch 1 loss 2.23123:  32%|███▏      | 9/28 [00:28<00:53,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5611[0m
[32m  eval_f1 = 0.201[0m
[32m  eval_mcc = 0.5367[0m
[32m  eval_precision = 0.2567[0m
[32m  eval_recall = 0.1925[0m
[32m  ********************[0m
[32m  Best f1:0.201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.23123:  36%|███▌      | 10/28 [00:33<01:01,  3.39s/it]epoch 1 loss 2.18639:  36%|███▌      | 10/28 [00:33<01:01,  3.39s/it]epoch 1 loss 2.18639:  39%|███▉      | 11/28 [00:33<00:42,  2.48s/it]epoch 1 loss 2.15459:  39%|███▉      | 11/28 [00:34<00:42,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.569[0m
[32m  eval_f1 = 0.2082[0m
[32m  eval_mcc = 0.5444[0m
[32m  eval_precision = 0.2608[0m
[32m  eval_recall = 0.199[0m
[32m  ********************[0m
[32m  Best f1:0.2082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15459:  43%|████▎     | 12/28 [00:39<00:58,  3.63s/it]epoch 1 loss 2.13047:  43%|████▎     | 12/28 [00:40<00:58,  3.63s/it]epoch 1 loss 2.13047:  46%|████▋     | 13/28 [00:40<00:39,  2.66s/it]epoch 1 loss 2.11834:  46%|████▋     | 13/28 [00:40<00:39,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5756[0m
[32m  eval_f1 = 0.2149[0m
[32m  eval_mcc = 0.5515[0m
[32m  eval_precision = 0.2753[0m
[32m  eval_recall = 0.2066[0m
[32m  ********************[0m
[32m  Best f1:0.2149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11834:  50%|█████     | 14/28 [00:48<00:59,  4.24s/it]epoch 1 loss 2.09683:  50%|█████     | 14/28 [00:48<00:59,  4.24s/it]epoch 1 loss 2.09683:  54%|█████▎    | 15/28 [00:48<00:40,  3.09s/it]epoch 1 loss 2.07468:  54%|█████▎    | 15/28 [00:49<00:40,  3.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5822[0m
[32m  eval_f1 = 0.2207[0m
[32m  eval_mcc = 0.5587[0m
[32m  eval_precision = 0.2852[0m
[32m  eval_recall = 0.2133[0m
[32m  ********************[0m
[32m  Best f1:0.2207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07468:  57%|█████▋    | 16/28 [01:00<01:08,  5.74s/it]epoch 1 loss 2.05508:  57%|█████▋    | 16/28 [01:00<01:08,  5.74s/it]epoch 1 loss 2.05508:  61%|██████    | 17/28 [01:00<00:45,  4.14s/it]epoch 1 loss 2.03782:  61%|██████    | 17/28 [01:01<00:45,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5909[0m
[32m  eval_f1 = 0.2284[0m
[32m  eval_mcc = 0.5679[0m
[32m  eval_precision = 0.3185[0m
[32m  eval_recall = 0.2197[0m
[32m  ********************[0m
[32m  Best f1:0.2284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03782:  64%|██████▍   | 18/28 [01:12<01:04,  6.46s/it]epoch 1 loss 2.01544:  64%|██████▍   | 18/28 [01:13<01:04,  6.46s/it]epoch 1 loss 2.01544:  68%|██████▊   | 19/28 [01:13<00:41,  4.64s/it]epoch 1 loss 1.99719:  68%|██████▊   | 19/28 [01:13<00:41,  4.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6009[0m
[32m  eval_f1 = 0.2356[0m
[32m  eval_mcc = 0.5783[0m
[32m  eval_precision = 0.3183[0m
[32m  eval_recall = 0.2244[0m
[32m  ********************[0m
[32m  Best f1:0.2356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99719:  71%|███████▏  | 20/28 [01:24<00:52,  6.52s/it]epoch 1 loss 1.98115:  71%|███████▏  | 20/28 [01:24<00:52,  6.52s/it]epoch 1 loss 1.98115:  75%|███████▌  | 21/28 [01:24<00:32,  4.69s/it]epoch 1 loss 1.97255:  75%|███████▌  | 21/28 [01:24<00:32,  4.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6053[0m
[32m  eval_f1 = 0.2473[0m
[32m  eval_mcc = 0.5824[0m
[32m  eval_precision = 0.3275[0m
[32m  eval_recall = 0.2339[0m
[32m  ********************[0m
[32m  Best f1:0.2473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97255:  79%|███████▊  | 22/28 [01:33<00:35,  5.90s/it]epoch 1 loss 1.95783:  79%|███████▊  | 22/28 [01:33<00:35,  5.90s/it]epoch 1 loss 1.95783:  82%|████████▏ | 23/28 [01:33<00:21,  4.26s/it]epoch 1 loss 1.94644:  82%|████████▏ | 23/28 [01:34<00:21,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6064[0m
[32m  eval_f1 = 0.2544[0m
[32m  eval_mcc = 0.5831[0m
[32m  eval_precision = 0.3338[0m
[32m  eval_recall = 0.2428[0m
[32m  ********************[0m
[32m  Best f1:0.2544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94644:  86%|████████▌ | 24/28 [01:44<00:25,  6.33s/it]epoch 1 loss 1.9356:  86%|████████▌ | 24/28 [01:45<00:25,  6.33s/it] epoch 1 loss 1.9356:  89%|████████▉ | 25/28 [01:45<00:13,  4.56s/it]epoch 1 loss 1.92652:  89%|████████▉ | 25/28 [01:45<00:13,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.609[0m
[32m  eval_f1 = 0.2578[0m
[32m  eval_mcc = 0.5858[0m
[32m  eval_precision = 0.3278[0m
[32m  eval_recall = 0.2466[0m
[32m  ********************[0m
[32m  Best f1:0.2578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5858[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92652:  93%|█████████▎| 26/28 [01:52<00:10,  5.41s/it]epoch 1 loss 1.91648:  93%|█████████▎| 26/28 [01:53<00:10,  5.41s/it]epoch 1 loss 1.91648:  96%|█████████▋| 27/28 [01:53<00:03,  3.92s/it]epoch 1 loss 1.9102:  96%|█████████▋| 27/28 [01:53<00:03,  3.92s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.614[0m
[32m  eval_f1 = 0.2654[0m
[32m  eval_mcc = 0.5924[0m
[32m  eval_precision = 0.3623[0m
[32m  eval_recall = 0.2518[0m
[32m  ********************[0m
[32m  Best f1:0.2654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5924[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9102: 100%|██████████| 28/28 [02:01<00:00,  5.31s/it]epoch 1 loss 1.9102: 100%|██████████| 28/28 [02:01<00:00,  4.35s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.56922:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.56922:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 2 loss 1.5827:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6156[0m
[32m  eval_f1 = 0.2684[0m
[32m  eval_mcc = 0.5949[0m
[32m  eval_precision = 0.381[0m
[32m  eval_recall = 0.2537[0m
[32m  ********************[0m
[32m  Best f1:0.2684[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5949[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5827:   7%|▋         | 2/28 [00:11<02:48,  6.50s/it]epoch 2 loss 1.56728:   7%|▋         | 2/28 [00:11<02:48,  6.50s/it]epoch 2 loss 1.56728:  11%|█         | 3/28 [00:11<01:33,  3.73s/it]epoch 2 loss 1.56362:  11%|█         | 3/28 [00:11<01:33,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6172[0m
[32m  eval_f1 = 0.2757[0m
[32m  eval_mcc = 0.597[0m
[32m  eval_precision = 0.3886[0m
[32m  eval_recall = 0.2585[0m
[32m  ********************[0m
[32m  Best f1:0.2757[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56362:  14%|█▍        | 4/28 [00:20<02:16,  5.69s/it]epoch 2 loss 1.5394:  14%|█▍        | 4/28 [00:20<02:16,  5.69s/it] epoch 2 loss 1.5394:  18%|█▊        | 5/28 [00:20<01:27,  3.79s/it]epoch 2 loss 1.51959:  18%|█▊        | 5/28 [00:21<01:27,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6177[0m
[32m  eval_f1 = 0.2804[0m
[32m  eval_mcc = 0.5979[0m
[32m  eval_precision = 0.3934[0m
[32m  eval_recall = 0.261[0m
[32m  ********************[0m
[32m  Best f1:0.2804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51959:  21%|██▏       | 6/28 [00:29<01:59,  5.41s/it]epoch 2 loss 1.53969:  21%|██▏       | 6/28 [00:29<01:59,  5.41s/it]epoch 2 loss 1.53969:  25%|██▌       | 7/28 [00:29<01:19,  3.78s/it]epoch 2 loss 1.54295:  25%|██▌       | 7/28 [00:30<01:19,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6191[0m
[32m  eval_f1 = 0.2951[0m
[32m  eval_mcc = 0.5992[0m
[32m  eval_precision = 0.4138[0m
[32m  eval_recall = 0.2742[0m
[32m  ********************[0m
[32m  Best f1:0.2951[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5992[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54295:  29%|██▊       | 8/28 [00:39<01:53,  5.69s/it]epoch 2 loss 1.53469:  29%|██▊       | 8/28 [00:39<01:53,  5.69s/it]epoch 2 loss 1.53469:  32%|███▏      | 9/28 [00:39<01:16,  4.05s/it]epoch 2 loss 1.54178:  32%|███▏      | 9/28 [00:40<01:16,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6212[0m
[32m  eval_f1 = 0.299[0m
[32m  eval_mcc = 0.6009[0m
[32m  eval_precision = 0.4251[0m
[32m  eval_recall = 0.2796[0m
[32m  ********************[0m
[32m  Best f1:0.299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54178:  36%|███▌      | 10/28 [00:48<01:38,  5.47s/it]epoch 2 loss 1.54162:  36%|███▌      | 10/28 [00:48<01:38,  5.47s/it]epoch 2 loss 1.54162:  39%|███▉      | 11/28 [00:48<01:06,  3.92s/it]epoch 2 loss 1.54233:  39%|███▉      | 11/28 [00:49<01:06,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6259[0m
[32m  eval_f1 = 0.301[0m
[32m  eval_mcc = 0.6049[0m
[32m  eval_precision = 0.4041[0m
[32m  eval_recall = 0.2817[0m
[32m  ********************[0m
[32m  Best f1:0.301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54233:  43%|████▎     | 12/28 [00:56<01:21,  5.12s/it]epoch 2 loss 1.54799:  43%|████▎     | 12/28 [00:57<01:21,  5.12s/it]epoch 2 loss 1.54799:  46%|████▋     | 13/28 [00:57<00:55,  3.70s/it]epoch 2 loss 1.5452:  46%|████▋     | 13/28 [00:57<00:55,  3.70s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6282[0m
[32m  eval_f1 = 0.3032[0m
[32m  eval_mcc = 0.6069[0m
[32m  eval_precision = 0.4072[0m
[32m  eval_recall = 0.2831[0m
[32m  ********************[0m
[32m  Best f1:0.3032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5452:  50%|█████     | 14/28 [01:08<01:23,  5.98s/it]epoch 2 loss 1.5368:  50%|█████     | 14/28 [01:08<01:23,  5.98s/it]epoch 2 loss 1.5368:  54%|█████▎    | 15/28 [01:08<00:55,  4.30s/it]epoch 2 loss 1.52973:  54%|█████▎    | 15/28 [01:09<00:55,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6278[0m
[32m  eval_f1 = 0.3032[0m
[32m  eval_mcc = 0.6065[0m
[32m  eval_precision = 0.4175[0m
[32m  eval_recall = 0.2832[0m
[32m  ********************[0m
[32m  Best f1:0.3032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.52973:  57%|█████▋    | 16/28 [01:13<00:54,  4.53s/it]epoch 2 loss 1.52809:  57%|█████▋    | 16/28 [01:14<00:54,  4.53s/it]epoch 2 loss 1.52809:  61%|██████    | 17/28 [01:14<00:36,  3.29s/it]epoch 2 loss 1.52773:  61%|██████    | 17/28 [01:14<00:36,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6292[0m
[32m  eval_f1 = 0.3054[0m
[32m  eval_mcc = 0.6084[0m
[32m  eval_precision = 0.4114[0m
[32m  eval_recall = 0.2846[0m
[32m  ********************[0m
[32m  Best f1:0.3054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52773:  64%|██████▍   | 18/28 [01:20<00:41,  4.17s/it]epoch 2 loss 1.52287:  64%|██████▍   | 18/28 [01:21<00:41,  4.17s/it]epoch 2 loss 1.52287:  68%|██████▊   | 19/28 [01:21<00:27,  3.04s/it]epoch 2 loss 1.52038:  68%|██████▊   | 19/28 [01:21<00:27,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6312[0m
[32m  eval_f1 = 0.3084[0m
[32m  eval_mcc = 0.6111[0m
[32m  eval_precision = 0.4179[0m
[32m  eval_recall = 0.2869[0m
[32m  ********************[0m
[32m  Best f1:0.3084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52038:  71%|███████▏  | 20/28 [01:29<00:38,  4.78s/it]epoch 2 loss 1.52078:  71%|███████▏  | 20/28 [01:30<00:38,  4.78s/it]epoch 2 loss 1.52078:  75%|███████▌  | 21/28 [01:30<00:24,  3.47s/it]epoch 2 loss 1.51898:  75%|███████▌  | 21/28 [01:30<00:24,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6335[0m
[32m  eval_f1 = 0.3131[0m
[32m  eval_mcc = 0.6139[0m
[32m  eval_precision = 0.4205[0m
[32m  eval_recall = 0.2906[0m
[32m  ********************[0m
[32m  Best f1:0.3131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6139[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51898:  79%|███████▊  | 22/28 [01:36<00:25,  4.32s/it]epoch 2 loss 1.51446:  79%|███████▊  | 22/28 [01:37<00:25,  4.32s/it]epoch 2 loss 1.51446:  82%|████████▏ | 23/28 [01:37<00:15,  3.15s/it]epoch 2 loss 1.51276:  82%|████████▏ | 23/28 [01:37<00:15,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6347[0m
[32m  eval_f1 = 0.3182[0m
[32m  eval_mcc = 0.6151[0m
[32m  eval_precision = 0.4215[0m
[32m  eval_recall = 0.2949[0m
[32m  ********************[0m
[32m  Best f1:0.3182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51276:  86%|████████▌ | 24/28 [01:45<00:19,  4.89s/it]epoch 2 loss 1.50661:  86%|████████▌ | 24/28 [01:46<00:19,  4.89s/it]epoch 2 loss 1.50661:  89%|████████▉ | 25/28 [01:46<00:10,  3.55s/it]epoch 2 loss 1.50541:  89%|████████▉ | 25/28 [01:46<00:10,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.635[0m
[32m  eval_f1 = 0.3178[0m
[32m  eval_mcc = 0.6149[0m
[32m  eval_precision = 0.4187[0m
[32m  eval_recall = 0.2949[0m

epoch 2 loss 1.50541:  93%|█████████▎| 26/28 [01:50<00:07,  3.62s/it]epoch 2 loss 1.50071:  93%|█████████▎| 26/28 [01:50<00:07,  3.62s/it]epoch 2 loss 1.50071:  96%|█████████▋| 27/28 [01:50<00:02,  2.66s/it]epoch 2 loss 1.49668:  96%|█████████▋| 27/28 [01:50<00:02,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6363[0m
[32m  eval_f1 = 0.3182[0m
[32m  eval_mcc = 0.6157[0m
[32m  eval_precision = 0.4177[0m
[32m  eval_recall = 0.2954[0m
[32m  ********************[0m
[32m  Best f1:0.3182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49668: 100%|██████████| 28/28 [01:56<00:00,  3.69s/it]epoch 2 loss 1.49668: 100%|██████████| 28/28 [01:56<00:00,  4.17s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.36784:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.36784:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 3 loss 1.4362:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6358[0m
[32m  eval_f1 = 0.3202[0m
[32m  eval_mcc = 0.6145[0m
[32m  eval_precision = 0.4182[0m
[32m  eval_recall = 0.2975[0m
[32m  ********************[0m
[32m  Best f1:0.3202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.4362:   7%|▋         | 2/28 [00:06<01:29,  3.46s/it]epoch 3 loss 1.43587:   7%|▋         | 2/28 [00:06<01:29,  3.46s/it]epoch 3 loss 1.43587:  11%|█         | 3/28 [00:06<00:51,  2.07s/it]epoch 3 loss 1.43479:  11%|█         | 3/28 [00:06<00:51,  2.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6364[0m
[32m  eval_f1 = 0.3224[0m
[32m  eval_mcc = 0.6149[0m
[32m  eval_precision = 0.4175[0m
[32m  eval_recall = 0.2996[0m
[32m  ********************[0m
[32m  Best f1:0.3224[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.43479:  14%|█▍        | 4/28 [00:11<01:17,  3.21s/it]epoch 3 loss 1.41716:  14%|█▍        | 4/28 [00:11<01:17,  3.21s/it]epoch 3 loss 1.41716:  18%|█▊        | 5/28 [00:11<00:50,  2.20s/it]epoch 3 loss 1.41222:  18%|█▊        | 5/28 [00:12<00:50,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6379[0m
[32m  eval_f1 = 0.3237[0m
[32m  eval_mcc = 0.6167[0m
[32m  eval_precision = 0.4169[0m
[32m  eval_recall = 0.3012[0m
[32m  ********************[0m
[32m  Best f1:0.3237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41222:  21%|██▏       | 6/28 [00:18<01:18,  3.56s/it]epoch 3 loss 1.41727:  21%|██▏       | 6/28 [00:18<01:18,  3.56s/it]epoch 3 loss 1.41727:  25%|██▌       | 7/28 [00:18<00:53,  2.54s/it]epoch 3 loss 1.41195:  25%|██▌       | 7/28 [00:18<00:53,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6409[0m
[32m  eval_f1 = 0.3276[0m
[32m  eval_mcc = 0.6205[0m
[32m  eval_precision = 0.4372[0m
[32m  eval_recall = 0.304[0m
[32m  ********************[0m
[32m  Best f1:0.3276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41195:  29%|██▊       | 8/28 [00:24<01:14,  3.71s/it]epoch 3 loss 1.41136:  29%|██▊       | 8/28 [00:25<01:14,  3.71s/it]epoch 3 loss 1.41136:  32%|███▏      | 9/28 [00:25<00:50,  2.68s/it]epoch 3 loss 1.40183:  32%|███▏      | 9/28 [00:25<00:50,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6432[0m
[32m  eval_f1 = 0.3294[0m
[32m  eval_mcc = 0.6238[0m
[32m  eval_precision = 0.444[0m
[32m  eval_recall = 0.305[0m
[32m  ********************[0m
[32m  Best f1:0.3294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40183:  36%|███▌      | 10/28 [00:31<01:08,  3.80s/it]epoch 3 loss 1.39863:  36%|███▌      | 10/28 [00:31<01:08,  3.80s/it]epoch 3 loss 1.39863:  39%|███▉      | 11/28 [00:31<00:46,  2.76s/it]epoch 3 loss 1.40405:  39%|███▉      | 11/28 [00:32<00:46,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6444[0m
[32m  eval_f1 = 0.3298[0m
[32m  eval_mcc = 0.6254[0m
[32m  eval_precision = 0.4472[0m
[32m  eval_recall = 0.305[0m
[32m  ********************[0m
[32m  Best f1:0.3298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40405:  43%|████▎     | 12/28 [00:38<01:04,  4.04s/it]epoch 3 loss 1.40658:  43%|████▎     | 12/28 [00:39<01:04,  4.04s/it]epoch 3 loss 1.40658:  46%|████▋     | 13/28 [00:39<00:44,  2.95s/it]epoch 3 loss 1.40772:  46%|████▋     | 13/28 [00:39<00:44,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6453[0m
[32m  eval_f1 = 0.3337[0m
[32m  eval_mcc = 0.6264[0m
[32m  eval_precision = 0.4577[0m
[32m  eval_recall = 0.3073[0m
[32m  ********************[0m
[32m  Best f1:0.3337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40772:  50%|█████     | 14/28 [00:45<00:56,  4.00s/it]epoch 3 loss 1.40539:  50%|█████     | 14/28 [00:46<00:56,  4.00s/it]epoch 3 loss 1.40539:  54%|█████▎    | 15/28 [00:46<00:38,  2.92s/it]epoch 3 loss 1.4014:  54%|█████▎    | 15/28 [00:46<00:38,  2.92s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.646[0m
[32m  eval_f1 = 0.3338[0m
[32m  eval_mcc = 0.627[0m
[32m  eval_precision = 0.4589[0m
[32m  eval_recall = 0.307[0m
[32m  ********************[0m
[32m  Best f1:0.3338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4014:  57%|█████▋    | 16/28 [00:53<00:50,  4.18s/it]epoch 3 loss 1.39588:  57%|█████▋    | 16/28 [00:53<00:50,  4.18s/it]epoch 3 loss 1.39588:  61%|██████    | 17/28 [00:53<00:33,  3.05s/it]epoch 3 loss 1.39389:  61%|██████    | 17/28 [00:53<00:33,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6449[0m
[32m  eval_f1 = 0.3339[0m
[32m  eval_mcc = 0.6257[0m
[32m  eval_precision = 0.4588[0m
[32m  eval_recall = 0.3066[0m
[32m  ********************[0m
[32m  Best f1:0.3339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.39389:  64%|██████▍   | 18/28 [00:58<00:36,  3.63s/it]epoch 3 loss 1.38853:  64%|██████▍   | 18/28 [00:58<00:36,  3.63s/it]epoch 3 loss 1.38853:  68%|██████▊   | 19/28 [00:58<00:23,  2.66s/it]epoch 3 loss 1.38647:  68%|██████▊   | 19/28 [00:59<00:23,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6444[0m
[32m  eval_f1 = 0.3333[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.454[0m
[32m  eval_recall = 0.3061[0m

epoch 3 loss 1.38647:  71%|███████▏  | 20/28 [01:02<00:24,  3.00s/it]epoch 3 loss 1.39342:  71%|███████▏  | 20/28 [01:03<00:24,  3.00s/it]epoch 3 loss 1.39342:  75%|███████▌  | 21/28 [01:03<00:15,  2.22s/it]epoch 3 loss 1.39355:  75%|███████▌  | 21/28 [01:03<00:15,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6449[0m
[32m  eval_f1 = 0.3397[0m
[32m  eval_mcc = 0.6249[0m
[32m  eval_precision = 0.4627[0m
[32m  eval_recall = 0.3112[0m
[32m  ********************[0m
[32m  Best f1:0.3397[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.39355:  79%|███████▊  | 22/28 [01:08<00:18,  3.04s/it]epoch 3 loss 1.40063:  79%|███████▊  | 22/28 [01:08<00:18,  3.04s/it]epoch 3 loss 1.40063:  82%|████████▏ | 23/28 [01:08<00:11,  2.25s/it]epoch 3 loss 1.40395:  82%|████████▏ | 23/28 [01:08<00:11,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6453[0m
[32m  eval_f1 = 0.3403[0m
[32m  eval_mcc = 0.625[0m
[32m  eval_precision = 0.461[0m
[32m  eval_recall = 0.3121[0m
[32m  ********************[0m
[32m  Best f1:0.3403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.40395:  86%|████████▌ | 24/28 [01:13<00:12,  3.07s/it]epoch 3 loss 1.40552:  86%|████████▌ | 24/28 [01:13<00:12,  3.07s/it]epoch 3 loss 1.40552:  89%|████████▉ | 25/28 [01:13<00:06,  2.27s/it]epoch 3 loss 1.39803:  89%|████████▉ | 25/28 [01:14<00:06,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6467[0m
[32m  eval_f1 = 0.3418[0m
[32m  eval_mcc = 0.6264[0m
[32m  eval_precision = 0.4634[0m
[32m  eval_recall = 0.3137[0m
[32m  ********************[0m
[32m  Best f1:0.3418[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.39803:  93%|█████████▎| 26/28 [01:18<00:06,  3.08s/it]epoch 3 loss 1.39638:  93%|█████████▎| 26/28 [01:19<00:06,  3.08s/it]epoch 3 loss 1.39638:  96%|█████████▋| 27/28 [01:19<00:02,  2.28s/it]epoch 3 loss 1.39773:  96%|█████████▋| 27/28 [01:19<00:02,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6472[0m
[32m  eval_f1 = 0.3427[0m
[32m  eval_mcc = 0.627[0m
[32m  eval_precision = 0.4629[0m
[32m  eval_recall = 0.3147[0m
[32m  ********************[0m
[32m  Best f1:0.3427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39773: 100%|██████████| 28/28 [01:24<00:00,  3.30s/it]epoch 3 loss 1.39773: 100%|██████████| 28/28 [01:24<00:00,  3.03s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.32766:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.32766:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 4 loss 1.39486:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6487[0m
[32m  eval_f1 = 0.3457[0m
[32m  eval_mcc = 0.6287[0m
[32m  eval_precision = 0.4667[0m
[32m  eval_recall = 0.3169[0m
[32m  ********************[0m
[32m  Best f1:0.3457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39486:   7%|▋         | 2/28 [00:09<02:16,  5.24s/it]epoch 4 loss 1.35159:   7%|▋         | 2/28 [00:09<02:16,  5.24s/it]epoch 4 loss 1.35159:  11%|█         | 3/28 [00:09<01:16,  3.04s/it]epoch 4 loss 1.34778:  11%|█         | 3/28 [00:09<01:16,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.65[0m
[32m  eval_f1 = 0.346[0m
[32m  eval_mcc = 0.6302[0m
[32m  eval_precision = 0.4644[0m
[32m  eval_recall = 0.3174[0m
[32m  ********************[0m
[32m  Best f1:0.346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34778:  14%|█▍        | 4/28 [00:19<02:21,  5.91s/it]epoch 4 loss 1.35724:  14%|█▍        | 4/28 [00:20<02:21,  5.91s/it]epoch 4 loss 1.35724:  18%|█▊        | 5/28 [00:20<01:30,  3.93s/it]epoch 4 loss 1.36169:  18%|█▊        | 5/28 [00:20<01:30,  3.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6505[0m
[32m  eval_f1 = 0.346[0m
[32m  eval_mcc = 0.6309[0m
[32m  eval_precision = 0.4648[0m
[32m  eval_recall = 0.3175[0m
[32m  ********************[0m
[32m  Best MCC:0.6309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36169:  21%|██▏       | 6/28 [00:28<01:58,  5.39s/it]epoch 4 loss 1.37014:  21%|██▏       | 6/28 [00:28<01:58,  5.39s/it]epoch 4 loss 1.37014:  25%|██▌       | 7/28 [00:28<01:19,  3.77s/it]epoch 4 loss 1.37354:  25%|██▌       | 7/28 [00:29<01:19,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6502[0m
[32m  eval_f1 = 0.3463[0m
[32m  eval_mcc = 0.6306[0m
[32m  eval_precision = 0.4648[0m
[32m  eval_recall = 0.3179[0m
[32m  ********************[0m
[32m  Best f1:0.3463[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.37354:  29%|██▊       | 8/28 [00:36<01:43,  5.17s/it]epoch 4 loss 1.37579:  29%|██▊       | 8/28 [00:37<01:43,  5.17s/it]epoch 4 loss 1.37579:  32%|███▏      | 9/28 [00:37<01:10,  3.69s/it]epoch 4 loss 1.36871:  32%|███▏      | 9/28 [00:37<01:10,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.3471[0m
[32m  eval_mcc = 0.6313[0m
[32m  eval_precision = 0.4758[0m
[32m  eval_recall = 0.3186[0m
[32m  ********************[0m
[32m  Best f1:0.3471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36871:  36%|███▌      | 10/28 [00:49<01:50,  6.15s/it]epoch 4 loss 1.38116:  36%|███▌      | 10/28 [00:49<01:50,  6.15s/it]epoch 4 loss 1.38116:  39%|███▉      | 11/28 [00:49<01:14,  4.40s/it]epoch 4 loss 1.37649:  39%|███▉      | 11/28 [00:49<01:14,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3473[0m
[32m  eval_mcc = 0.6318[0m
[32m  eval_precision = 0.4758[0m
[32m  eval_recall = 0.3189[0m
[32m  ********************[0m
[32m  Best f1:0.3473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37649:  43%|████▎     | 12/28 [01:01<01:45,  6.59s/it]epoch 4 loss 1.37751:  43%|████▎     | 12/28 [01:01<01:45,  6.59s/it]epoch 4 loss 1.37751:  46%|████▋     | 13/28 [01:01<01:10,  4.72s/it]epoch 4 loss 1.38053:  46%|████▋     | 13/28 [01:01<01:10,  4.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.652[0m
[32m  eval_f1 = 0.3483[0m
[32m  eval_mcc = 0.6324[0m
[32m  eval_precision = 0.4754[0m
[32m  eval_recall = 0.3198[0m
[32m  ********************[0m
[32m  Best f1:0.3483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38053:  50%|█████     | 14/28 [01:10<01:23,  5.94s/it]epoch 4 loss 1.37402:  50%|█████     | 14/28 [01:10<01:23,  5.94s/it]epoch 4 loss 1.37402:  54%|█████▎    | 15/28 [01:10<00:55,  4.28s/it]epoch 4 loss 1.3739:  54%|█████▎    | 15/28 [01:11<00:55,  4.28s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6522[0m
[32m  eval_f1 = 0.3486[0m
[32m  eval_mcc = 0.6326[0m
[32m  eval_precision = 0.4756[0m
[32m  eval_recall = 0.3202[0m
[32m  ********************[0m
[32m  Best f1:0.3486[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3739:  57%|█████▋    | 16/28 [01:23<01:22,  6.84s/it]epoch 4 loss 1.37479:  57%|█████▋    | 16/28 [01:23<01:22,  6.84s/it]epoch 4 loss 1.37479:  61%|██████    | 17/28 [01:23<00:54,  4.91s/it]epoch 4 loss 1.37645:  61%|██████    | 17/28 [01:24<00:54,  4.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3486[0m
[32m  eval_mcc = 0.633[0m
[32m  eval_precision = 0.4653[0m
[32m  eval_recall = 0.3204[0m
[32m  ********************[0m
[32m  Best MCC:0.633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37645:  64%|██████▍   | 18/28 [01:29<00:49,  4.96s/it]epoch 4 loss 1.37321:  64%|██████▍   | 18/28 [01:29<00:49,  4.96s/it]epoch 4 loss 1.37321:  68%|██████▊   | 19/28 [01:29<00:32,  3.59s/it]epoch 4 loss 1.37424:  68%|██████▊   | 19/28 [01:29<00:32,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.3482[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.4653[0m
[32m  eval_recall = 0.3203[0m
[32m  ********************[0m
[32m  Best MCC:0.6332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37424:  71%|███████▏  | 20/28 [01:36<00:37,  4.71s/it]epoch 4 loss 1.36761:  71%|███████▏  | 20/28 [01:37<00:37,  4.71s/it]epoch 4 loss 1.36761:  75%|███████▌  | 21/28 [01:37<00:23,  3.42s/it]epoch 4 loss 1.36687:  75%|███████▌  | 21/28 [01:37<00:23,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3485[0m
[32m  eval_mcc = 0.6336[0m
[32m  eval_precision = 0.4663[0m
[32m  eval_recall = 0.3204[0m
[32m  ********************[0m
[32m  Best MCC:0.6336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36687:  79%|███████▊  | 22/28 [01:42<00:23,  3.93s/it]epoch 4 loss 1.36226:  79%|███████▊  | 22/28 [01:42<00:23,  3.93s/it]epoch 4 loss 1.36226:  82%|████████▏ | 23/28 [01:42<00:14,  2.87s/it]epoch 4 loss 1.3627:  82%|████████▏ | 23/28 [01:43<00:14,  2.87s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.3485[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4663[0m
[32m  eval_recall = 0.3202[0m

epoch 4 loss 1.3627:  86%|████████▌ | 24/28 [01:46<00:12,  3.15s/it]epoch 4 loss 1.36457:  86%|████████▌ | 24/28 [01:46<00:12,  3.15s/it]epoch 4 loss 1.36457:  89%|████████▉ | 25/28 [01:46<00:06,  2.32s/it]epoch 4 loss 1.36147:  89%|████████▉ | 25/28 [01:47<00:06,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6527[0m
[32m  eval_f1 = 0.3486[0m
[32m  eval_mcc = 0.6334[0m
[32m  eval_precision = 0.4667[0m
[32m  eval_recall = 0.3203[0m
[32m  ********************[0m
[32m  Best f1:0.3486[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.36147:  93%|█████████▎| 26/28 [01:51<00:06,  3.15s/it]epoch 4 loss 1.35681:  93%|█████████▎| 26/28 [01:52<00:06,  3.15s/it]epoch 4 loss 1.35681:  96%|█████████▋| 27/28 [01:52<00:02,  2.32s/it]epoch 4 loss 1.35594:  96%|█████████▋| 27/28 [01:52<00:02,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3487[0m
[32m  eval_mcc = 0.6335[0m
[32m  eval_precision = 0.4669[0m
[32m  eval_recall = 0.3203[0m
[32m  ********************[0m
[32m  Best f1:0.3487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.35594: 100%|██████████| 28/28 [01:59<00:00,  3.65s/it]epoch 4 loss 1.35594: 100%|██████████| 28/28 [01:59<00:00,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.66it/s] 20%|██        | 2/10 [00:00<00:02,  2.71it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3487[0m
[32m  eval_mcc = 0.6335[0m
[32m  eval_precision = 0.4669[0m
[32m  eval_recall = 0.3203[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6363[0m
[32m  eval_f1 = 0.3069[0m
[32m  eval_mcc = 0.617[0m
[32m  eval_precision = 0.4206[0m
[32m  eval_recall = 0.2828[0m

