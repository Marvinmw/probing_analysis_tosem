[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=2, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/3/layer_2', posratio=0.5, seed=969, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.06607:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.06607:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.06681:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0186[0m
[32m  eval_f1 = 0.0033[0m
[32m  eval_mcc = 0.0095[0m
[32m  eval_precision = 0.0061[0m
[32m  eval_recall = 0.0112[0m
[32m  ********************[0m
[32m  Best f1:0.0033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0095[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.06681:   7%|▋         | 2/28 [00:05<01:24,  3.24s/it]epoch 0 loss 5.05713:   7%|▋         | 2/28 [00:06<01:24,  3.24s/it]epoch 0 loss 5.05713:  11%|█         | 3/28 [00:06<00:48,  1.94s/it]epoch 0 loss 5.04417:  11%|█         | 3/28 [00:06<00:48,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0231[0m
[32m  eval_f1 = 0.0034[0m
[32m  eval_mcc = 0.0086[0m
[32m  eval_precision = 0.005[0m
[32m  eval_recall = 0.0115[0m
[32m  ********************[0m
[32m  Best f1:0.0034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.04417:  14%|█▍        | 4/28 [00:11<01:16,  3.17s/it]epoch 0 loss 5.02112:  14%|█▍        | 4/28 [00:11<01:16,  3.17s/it]epoch 0 loss 5.02112:  18%|█▊        | 5/28 [00:11<00:49,  2.17s/it]epoch 0 loss 4.99766:  18%|█▊        | 5/28 [00:11<00:49,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.039[0m
[32m  eval_f1 = 0.0042[0m
[32m  eval_mcc = 0.0133[0m
[32m  eval_precision = 0.0068[0m
[32m  eval_recall = 0.0087[0m
[32m  ********************[0m
[32m  Best f1:0.0042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.99766:  21%|██▏       | 6/28 [00:21<01:42,  4.66s/it]epoch 0 loss 4.96667:  21%|██▏       | 6/28 [00:21<01:42,  4.66s/it]epoch 0 loss 4.96667:  25%|██▌       | 7/28 [00:21<01:08,  3.28s/it]epoch 0 loss 4.93198:  25%|██▌       | 7/28 [00:21<01:08,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0717[0m
[32m  eval_f1 = 0.0097[0m
[32m  eval_mcc = 0.028[0m
[32m  eval_precision = 0.0141[0m
[32m  eval_recall = 0.014[0m
[32m  ********************[0m
[32m  Best f1:0.0097[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93198:  29%|██▊       | 8/28 [00:32<01:54,  5.73s/it]epoch 0 loss 4.89154:  29%|██▊       | 8/28 [00:32<01:54,  5.73s/it]epoch 0 loss 4.89154:  32%|███▏      | 9/28 [00:32<01:17,  4.07s/it]epoch 0 loss 4.84631:  32%|███▏      | 9/28 [00:33<01:17,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1018[0m
[32m  eval_f1 = 0.014[0m
[32m  eval_mcc = 0.0443[0m
[32m  eval_precision = 0.0184[0m
[32m  eval_recall = 0.0187[0m
[32m  ********************[0m
[32m  Best f1:0.014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.84631:  36%|███▌      | 10/28 [00:43<01:51,  6.17s/it]epoch 0 loss 4.79507:  36%|███▌      | 10/28 [00:44<01:51,  6.17s/it]epoch 0 loss 4.79507:  39%|███▉      | 11/28 [00:44<01:14,  4.41s/it]epoch 0 loss 4.74316:  39%|███▉      | 11/28 [00:44<01:14,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1258[0m
[32m  eval_f1 = 0.0187[0m
[32m  eval_mcc = 0.0647[0m
[32m  eval_precision = 0.0302[0m
[32m  eval_recall = 0.0227[0m
[32m  ********************[0m
[32m  Best f1:0.0187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.74316:  43%|████▎     | 12/28 [00:52<01:31,  5.70s/it]epoch 0 loss 4.68278:  43%|████▎     | 12/28 [00:53<01:31,  5.70s/it]epoch 0 loss 4.68278:  46%|████▋     | 13/28 [00:53<01:01,  4.10s/it]epoch 0 loss 4.62233:  46%|████▋     | 13/28 [00:53<01:01,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1726[0m
[32m  eval_f1 = 0.0272[0m
[32m  eval_mcc = 0.1132[0m
[32m  eval_precision = 0.0391[0m
[32m  eval_recall = 0.0308[0m
[32m  ********************[0m
[32m  Best f1:0.0272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.62233:  50%|█████     | 14/28 [01:04<01:27,  6.24s/it]epoch 0 loss 4.55696:  50%|█████     | 14/28 [01:04<01:27,  6.24s/it]epoch 0 loss 4.55696:  54%|█████▎    | 15/28 [01:04<00:58,  4.49s/it]epoch 0 loss 4.48974:  54%|█████▎    | 15/28 [01:05<00:58,  4.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.227[0m
[32m  eval_f1 = 0.0372[0m
[32m  eval_mcc = 0.1706[0m
[32m  eval_precision = 0.0568[0m
[32m  eval_recall = 0.041[0m
[32m  ********************[0m
[32m  Best f1:0.0372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1706[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.48974:  57%|█████▋    | 16/28 [01:16<01:18,  6.51s/it]epoch 0 loss 4.42206:  57%|█████▋    | 16/28 [01:16<01:18,  6.51s/it]epoch 0 loss 4.42206:  61%|██████    | 17/28 [01:16<00:51,  4.68s/it]epoch 0 loss 4.3516:  61%|██████    | 17/28 [01:16<00:51,  4.68s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2931[0m
[32m  eval_f1 = 0.0563[0m
[32m  eval_mcc = 0.2415[0m
[32m  eval_precision = 0.0881[0m
[32m  eval_recall = 0.0581[0m
[32m  ********************[0m
[32m  Best f1:0.0563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.3516:  64%|██████▍   | 18/28 [01:26<01:01,  6.15s/it]epoch 0 loss 4.28237:  64%|██████▍   | 18/28 [01:26<01:01,  6.15s/it]epoch 0 loss 4.28237:  68%|██████▊   | 19/28 [01:26<00:39,  4.43s/it]epoch 0 loss 4.22125:  68%|██████▊   | 19/28 [01:26<00:39,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3433[0m
[32m  eval_f1 = 0.0714[0m
[32m  eval_mcc = 0.2962[0m
[32m  eval_precision = 0.1132[0m
[32m  eval_recall = 0.071[0m
[32m  ********************[0m
[32m  Best f1:0.0714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2962[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.22125:  71%|███████▏  | 20/28 [01:35<00:45,  5.66s/it]epoch 0 loss 4.15288:  71%|███████▏  | 20/28 [01:35<00:45,  5.66s/it]epoch 0 loss 4.15288:  75%|███████▌  | 21/28 [01:35<00:28,  4.09s/it]epoch 0 loss 4.0937:  75%|███████▌  | 21/28 [01:35<00:28,  4.09s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3885[0m
[32m  eval_f1 = 0.0878[0m
[32m  eval_mcc = 0.3458[0m
[32m  eval_precision = 0.1519[0m
[32m  eval_recall = 0.0879[0m
[32m  ********************[0m
[32m  Best f1:0.0878[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.0937:  79%|███████▊  | 22/28 [01:44<00:32,  5.47s/it]epoch 0 loss 4.02847:  79%|███████▊  | 22/28 [01:44<00:32,  5.47s/it]epoch 0 loss 4.02847:  82%|████████▏ | 23/28 [01:44<00:19,  3.96s/it]epoch 0 loss 3.96571:  82%|████████▏ | 23/28 [01:44<00:19,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.64it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4221[0m
[32m  eval_f1 = 0.1155[0m
[32m  eval_mcc = 0.3839[0m
[32m  eval_precision = 0.1752[0m
[32m  eval_recall = 0.1124[0m
[32m  ********************[0m
[32m  Best f1:0.1155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3839[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.96571:  86%|████████▌ | 24/28 [01:50<00:18,  4.61s/it]epoch 0 loss 3.90602:  86%|████████▌ | 24/28 [01:51<00:18,  4.61s/it]epoch 0 loss 3.90602:  89%|████████▉ | 25/28 [01:51<00:10,  3.36s/it]epoch 0 loss 3.84722:  89%|████████▉ | 25/28 [01:51<00:10,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4574[0m
[32m  eval_f1 = 0.1356[0m
[32m  eval_mcc = 0.425[0m
[32m  eval_precision = 0.2252[0m
[32m  eval_recall = 0.1307[0m
[32m  ********************[0m
[32m  Best f1:0.1356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.84722:  93%|█████████▎| 26/28 [01:57<00:08,  4.20s/it]epoch 0 loss 3.78529:  93%|█████████▎| 26/28 [01:57<00:08,  4.20s/it]epoch 0 loss 3.78529:  96%|█████████▋| 27/28 [01:57<00:03,  3.07s/it]epoch 0 loss 3.72421:  96%|█████████▋| 27/28 [01:57<00:03,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4982[0m
[32m  eval_f1 = 0.1606[0m
[32m  eval_mcc = 0.4694[0m
[32m  eval_precision = 0.2343[0m
[32m  eval_recall = 0.1517[0m
[32m  ********************[0m
[32m  Best f1:0.1606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.72421: 100%|██████████| 28/28 [02:03<00:00,  3.87s/it]epoch 0 loss 3.72421: 100%|██████████| 28/28 [02:03<00:00,  4.41s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.12459:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.12459:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 1 loss 2.21678:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5372[0m
[32m  eval_f1 = 0.1818[0m
[32m  eval_mcc = 0.5104[0m
[32m  eval_precision = 0.2416[0m
[32m  eval_recall = 0.1767[0m
[32m  ********************[0m
[32m  Best f1:0.1818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.21678:   7%|▋         | 2/28 [00:06<01:37,  3.75s/it]epoch 1 loss 2.09823:   7%|▋         | 2/28 [00:06<01:37,  3.75s/it]epoch 1 loss 2.09823:  11%|█         | 3/28 [00:06<00:55,  2.22s/it]epoch 1 loss 2.11314:  11%|█         | 3/28 [00:07<00:55,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5658[0m
[32m  eval_f1 = 0.2005[0m
[32m  eval_mcc = 0.5401[0m
[32m  eval_precision = 0.2482[0m
[32m  eval_recall = 0.1993[0m
[32m  ********************[0m
[32m  Best f1:0.2005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11314:  14%|█▍        | 4/28 [00:13<01:31,  3.80s/it]epoch 1 loss 2.06997:  14%|█▍        | 4/28 [00:13<01:31,  3.80s/it]epoch 1 loss 2.06997:  18%|█▊        | 5/28 [00:13<00:59,  2.58s/it]epoch 1 loss 2.02625:  18%|█▊        | 5/28 [00:13<00:59,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5805[0m
[32m  eval_f1 = 0.2096[0m
[32m  eval_mcc = 0.5559[0m
[32m  eval_precision = 0.2673[0m
[32m  eval_recall = 0.2083[0m
[32m  ********************[0m
[32m  Best f1:0.2096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02625:  21%|██▏       | 6/28 [00:19<01:25,  3.86s/it]epoch 1 loss 1.98377:  21%|██▏       | 6/28 [00:20<01:25,  3.86s/it]epoch 1 loss 1.98377:  25%|██▌       | 7/28 [00:20<00:57,  2.74s/it]epoch 1 loss 1.94596:  25%|██▌       | 7/28 [00:20<00:57,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5903[0m
[32m  eval_f1 = 0.2246[0m
[32m  eval_mcc = 0.5663[0m
[32m  eval_precision = 0.3035[0m
[32m  eval_recall = 0.218[0m
[32m  ********************[0m
[32m  Best f1:0.2246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5663[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94596:  29%|██▊       | 8/28 [00:31<01:51,  5.57s/it]epoch 1 loss 1.9211:  29%|██▊       | 8/28 [00:32<01:51,  5.57s/it] epoch 1 loss 1.9211:  32%|███▏      | 9/28 [00:32<01:15,  3.96s/it]epoch 1 loss 1.89904:  32%|███▏      | 9/28 [00:32<01:15,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5971[0m
[32m  eval_f1 = 0.2338[0m
[32m  eval_mcc = 0.5743[0m
[32m  eval_precision = 0.3282[0m
[32m  eval_recall = 0.2228[0m
[32m  ********************[0m
[32m  Best f1:0.2338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89904:  36%|███▌      | 10/28 [00:43<01:50,  6.12s/it]epoch 1 loss 1.85603:  36%|███▌      | 10/28 [00:43<01:50,  6.12s/it]epoch 1 loss 1.85603:  39%|███▉      | 11/28 [00:43<01:14,  4.37s/it]epoch 1 loss 1.82792:  39%|███▉      | 11/28 [00:44<01:14,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6039[0m
[32m  eval_f1 = 0.2479[0m
[32m  eval_mcc = 0.5817[0m
[32m  eval_precision = 0.3695[0m
[32m  eval_recall = 0.2314[0m
[32m  ********************[0m
[32m  Best f1:0.2479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5817[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.82792:  43%|████▎     | 12/28 [00:54<01:43,  6.44s/it]epoch 1 loss 1.80779:  43%|████▎     | 12/28 [00:55<01:43,  6.44s/it]epoch 1 loss 1.80779:  46%|████▋     | 13/28 [00:55<01:09,  4.62s/it]epoch 1 loss 1.79873:  46%|████▋     | 13/28 [00:55<01:09,  4.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6088[0m
[32m  eval_f1 = 0.2569[0m
[32m  eval_mcc = 0.5873[0m
[32m  eval_precision = 0.3787[0m
[32m  eval_recall = 0.2371[0m
[32m  ********************[0m
[32m  Best f1:0.2569[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.79873:  50%|█████     | 14/28 [01:07<01:35,  6.79s/it]epoch 1 loss 1.77984:  50%|█████     | 14/28 [01:07<01:35,  6.79s/it]epoch 1 loss 1.77984:  54%|█████▎    | 15/28 [01:07<01:03,  4.87s/it]epoch 1 loss 1.76113:  54%|█████▎    | 15/28 [01:07<01:03,  4.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.613[0m
[32m  eval_f1 = 0.2677[0m
[32m  eval_mcc = 0.5921[0m
[32m  eval_precision = 0.3797[0m
[32m  eval_recall = 0.2462[0m
[32m  ********************[0m
[32m  Best f1:0.2677[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76113:  57%|█████▋    | 16/28 [01:19<01:25,  7.13s/it]epoch 1 loss 1.74408:  57%|█████▋    | 16/28 [01:20<01:25,  7.13s/it]epoch 1 loss 1.74408:  61%|██████    | 17/28 [01:20<00:56,  5.12s/it]epoch 1 loss 1.72979:  61%|██████    | 17/28 [01:20<00:56,  5.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6181[0m
[32m  eval_f1 = 0.2876[0m
[32m  eval_mcc = 0.5973[0m
[32m  eval_precision = 0.3951[0m
[32m  eval_recall = 0.2641[0m
[32m  ********************[0m
[32m  Best f1:0.2876[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5973[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72979:  64%|██████▍   | 18/28 [01:33<01:14,  7.43s/it]epoch 1 loss 1.71039:  64%|██████▍   | 18/28 [01:33<01:14,  7.43s/it]epoch 1 loss 1.71039:  68%|██████▊   | 19/28 [01:33<00:47,  5.33s/it]epoch 1 loss 1.69521:  68%|██████▊   | 19/28 [01:34<00:47,  5.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6234[0m
[32m  eval_f1 = 0.304[0m
[32m  eval_mcc = 0.6027[0m
[32m  eval_precision = 0.4099[0m
[32m  eval_recall = 0.2788[0m
[32m  ********************[0m
[32m  Best f1:0.304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.69521:  71%|███████▏  | 20/28 [01:45<00:58,  7.37s/it]epoch 1 loss 1.68253:  71%|███████▏  | 20/28 [01:46<00:58,  7.37s/it]epoch 1 loss 1.68253:  75%|███████▌  | 21/28 [01:46<00:36,  5.28s/it]epoch 1 loss 1.67639:  75%|███████▌  | 21/28 [01:46<00:36,  5.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6286[0m
[32m  eval_f1 = 0.3105[0m
[32m  eval_mcc = 0.6073[0m
[32m  eval_precision = 0.4195[0m
[32m  eval_recall = 0.2847[0m
[32m  ********************[0m
[32m  Best f1:0.3105[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.67639:  79%|███████▊  | 22/28 [01:57<00:42,  7.11s/it]epoch 1 loss 1.66374:  79%|███████▊  | 22/28 [01:57<00:42,  7.11s/it]epoch 1 loss 1.66374:  82%|████████▏ | 23/28 [01:57<00:25,  5.10s/it]epoch 1 loss 1.65484:  82%|████████▏ | 23/28 [01:58<00:25,  5.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6321[0m
[32m  eval_f1 = 0.3237[0m
[32m  eval_mcc = 0.6105[0m
[32m  eval_precision = 0.4295[0m
[32m  eval_recall = 0.2968[0m
[32m  ********************[0m
[32m  Best f1:0.3237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6105[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.65484:  86%|████████▌ | 24/28 [02:09<00:27,  6.91s/it]epoch 1 loss 1.64637:  86%|████████▌ | 24/28 [02:09<00:27,  6.91s/it]epoch 1 loss 1.64637:  89%|████████▉ | 25/28 [02:09<00:14,  4.96s/it]epoch 1 loss 1.63899:  89%|████████▉ | 25/28 [02:09<00:14,  4.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6358[0m
[32m  eval_f1 = 0.3285[0m
[32m  eval_mcc = 0.6143[0m
[32m  eval_precision = 0.4333[0m
[32m  eval_recall = 0.303[0m
[32m  ********************[0m
[32m  Best f1:0.3285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.63899:  93%|█████████▎| 26/28 [02:20<00:13,  6.77s/it]epoch 1 loss 1.63008:  93%|█████████▎| 26/28 [02:20<00:13,  6.77s/it]epoch 1 loss 1.63008:  96%|█████████▋| 27/28 [02:20<00:04,  4.86s/it]epoch 1 loss 1.62538:  96%|█████████▋| 27/28 [02:21<00:04,  4.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.3312[0m
[32m  eval_mcc = 0.6186[0m
[32m  eval_precision = 0.4312[0m
[32m  eval_recall = 0.3061[0m
[32m  ********************[0m
[32m  Best f1:0.3312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.62538: 100%|██████████| 28/28 [02:29<00:00,  5.95s/it]epoch 1 loss 1.62538: 100%|██████████| 28/28 [02:29<00:00,  5.34s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.33765:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.33765:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 2 loss 1.3493:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6449[0m
[32m  eval_f1 = 0.3343[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.4316[0m
[32m  eval_recall = 0.3116[0m
[32m  ********************[0m
[32m  Best f1:0.3343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3493:   7%|▋         | 2/28 [00:11<02:51,  6.58s/it]epoch 2 loss 1.3378:   7%|▋         | 2/28 [00:11<02:51,  6.58s/it]epoch 2 loss 1.3378:  11%|█         | 3/28 [00:11<01:34,  3.76s/it]epoch 2 loss 1.33317:  11%|█         | 3/28 [00:12<01:34,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6472[0m
[32m  eval_f1 = 0.3371[0m
[32m  eval_mcc = 0.6277[0m
[32m  eval_precision = 0.4293[0m
[32m  eval_recall = 0.3142[0m
[32m  ********************[0m
[32m  Best f1:0.3371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33317:  14%|█▍        | 4/28 [00:18<02:02,  5.12s/it]epoch 2 loss 1.31307:  14%|█▍        | 4/28 [00:19<02:02,  5.12s/it]epoch 2 loss 1.31307:  18%|█▊        | 5/28 [00:19<01:18,  3.43s/it]epoch 2 loss 1.29423:  18%|█▊        | 5/28 [00:19<01:18,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6484[0m
[32m  eval_f1 = 0.3398[0m
[32m  eval_mcc = 0.6297[0m
[32m  eval_precision = 0.4379[0m
[32m  eval_recall = 0.316[0m
[32m  ********************[0m
[32m  Best f1:0.3398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29423:  21%|██▏       | 6/28 [00:29<02:08,  5.85s/it]epoch 2 loss 1.31579:  21%|██▏       | 6/28 [00:30<02:08,  5.85s/it]epoch 2 loss 1.31579:  25%|██▌       | 7/28 [00:30<01:25,  4.08s/it]epoch 2 loss 1.32106:  25%|██▌       | 7/28 [00:30<01:25,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3401[0m
[32m  eval_mcc = 0.6314[0m
[32m  eval_precision = 0.4406[0m
[32m  eval_recall = 0.3165[0m
[32m  ********************[0m
[32m  Best f1:0.3401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32106:  29%|██▊       | 8/28 [00:38<01:49,  5.50s/it]epoch 2 loss 1.31362:  29%|██▊       | 8/28 [00:39<01:49,  5.50s/it]epoch 2 loss 1.31362:  32%|███▏      | 9/28 [00:39<01:14,  3.91s/it]epoch 2 loss 1.31852:  32%|███▏      | 9/28 [00:39<01:14,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6504[0m
[32m  eval_f1 = 0.3417[0m
[32m  eval_mcc = 0.6323[0m
[32m  eval_precision = 0.4411[0m
[32m  eval_recall = 0.3174[0m
[32m  ********************[0m
[32m  Best f1:0.3417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31852:  36%|███▌      | 10/28 [00:49<01:46,  5.93s/it]epoch 2 loss 1.31934:  36%|███▌      | 10/28 [00:50<01:46,  5.93s/it]epoch 2 loss 1.31934:  39%|███▉      | 11/28 [00:50<01:12,  4.24s/it]epoch 2 loss 1.32115:  39%|███▉      | 11/28 [00:50<01:12,  4.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6535[0m
[32m  eval_f1 = 0.3452[0m
[32m  eval_mcc = 0.6349[0m
[32m  eval_precision = 0.4522[0m
[32m  eval_recall = 0.3198[0m
[32m  ********************[0m
[32m  Best f1:0.3452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32115:  43%|████▎     | 12/28 [00:58<01:29,  5.58s/it]epoch 2 loss 1.32714:  43%|████▎     | 12/28 [00:59<01:29,  5.58s/it]epoch 2 loss 1.32714:  46%|████▋     | 13/28 [00:59<01:00,  4.02s/it]epoch 2 loss 1.32449:  46%|████▋     | 13/28 [00:59<01:00,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6562[0m
[32m  eval_f1 = 0.3518[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4645[0m
[32m  eval_recall = 0.3248[0m
[32m  ********************[0m
[32m  Best f1:0.3518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32449:  50%|█████     | 14/28 [01:09<01:23,  5.99s/it]epoch 2 loss 1.31788:  50%|█████     | 14/28 [01:10<01:23,  5.99s/it]epoch 2 loss 1.31788:  54%|█████▎    | 15/28 [01:10<00:56,  4.31s/it]epoch 2 loss 1.31083:  54%|█████▎    | 15/28 [01:10<00:56,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6564[0m
[32m  eval_f1 = 0.3554[0m
[32m  eval_mcc = 0.6371[0m
[32m  eval_precision = 0.4619[0m
[32m  eval_recall = 0.3282[0m
[32m  ********************[0m
[32m  Best f1:0.3554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.31083:  57%|█████▋    | 16/28 [01:15<00:54,  4.53s/it]epoch 2 loss 1.30928:  57%|█████▋    | 16/28 [01:15<00:54,  4.53s/it]epoch 2 loss 1.30928:  61%|██████    | 17/28 [01:15<00:36,  3.29s/it]epoch 2 loss 1.31037:  61%|██████    | 17/28 [01:16<00:36,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3608[0m
[32m  eval_mcc = 0.6384[0m
[32m  eval_precision = 0.4613[0m
[32m  eval_recall = 0.3333[0m
[32m  ********************[0m
[32m  Best f1:0.3608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31037:  64%|██████▍   | 18/28 [01:26<00:54,  5.49s/it]epoch 2 loss 1.30586:  64%|██████▍   | 18/28 [01:26<00:54,  5.49s/it]epoch 2 loss 1.30586:  68%|██████▊   | 19/28 [01:26<00:35,  3.97s/it]epoch 2 loss 1.30317:  68%|██████▊   | 19/28 [01:27<00:35,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6598[0m
[32m  eval_f1 = 0.3652[0m
[32m  eval_mcc = 0.6407[0m
[32m  eval_precision = 0.467[0m
[32m  eval_recall = 0.3368[0m
[32m  ********************[0m
[32m  Best f1:0.3652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30317:  71%|███████▏  | 20/28 [01:36<00:45,  5.74s/it]epoch 2 loss 1.30437:  71%|███████▏  | 20/28 [01:36<00:45,  5.74s/it]epoch 2 loss 1.30437:  75%|███████▌  | 21/28 [01:36<00:29,  4.14s/it]epoch 2 loss 1.3034:  75%|███████▌  | 21/28 [01:37<00:29,  4.14s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6627[0m
[32m  eval_f1 = 0.3699[0m
[32m  eval_mcc = 0.6436[0m
[32m  eval_precision = 0.4689[0m
[32m  eval_recall = 0.3408[0m
[32m  ********************[0m
[32m  Best f1:0.3699[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3034:  79%|███████▊  | 22/28 [01:47<00:36,  6.05s/it]epoch 2 loss 1.29995:  79%|███████▊  | 22/28 [01:47<00:36,  6.05s/it]epoch 2 loss 1.29995:  82%|████████▏ | 23/28 [01:47<00:21,  4.36s/it]epoch 2 loss 1.29906:  82%|████████▏ | 23/28 [01:48<00:21,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6641[0m
[32m  eval_f1 = 0.3727[0m
[32m  eval_mcc = 0.6451[0m
[32m  eval_precision = 0.4675[0m
[32m  eval_recall = 0.3438[0m
[32m  ********************[0m
[32m  Best f1:0.3727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29906:  86%|████████▌ | 24/28 [01:58<00:24,  6.11s/it]epoch 2 loss 1.29323:  86%|████████▌ | 24/28 [01:58<00:24,  6.11s/it]epoch 2 loss 1.29323:  89%|████████▉ | 25/28 [01:58<00:13,  4.40s/it]epoch 2 loss 1.29155:  89%|████████▉ | 25/28 [01:58<00:13,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.3735[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.4756[0m
[32m  eval_recall = 0.3442[0m
[32m  ********************[0m
[32m  Best f1:0.3735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29155:  93%|█████████▎| 26/28 [02:09<00:12,  6.48s/it]epoch 2 loss 1.28744:  93%|█████████▎| 26/28 [02:10<00:12,  6.48s/it]epoch 2 loss 1.28744:  96%|█████████▋| 27/28 [02:10<00:04,  4.66s/it]epoch 2 loss 1.28343:  96%|█████████▋| 27/28 [02:10<00:04,  4.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6647[0m
[32m  eval_f1 = 0.3713[0m
[32m  eval_mcc = 0.6456[0m
[32m  eval_precision = 0.4741[0m
[32m  eval_recall = 0.342[0m

epoch 2 loss 1.28343: 100%|██████████| 28/28 [02:13<00:00,  4.34s/it]epoch 2 loss 1.28343: 100%|██████████| 28/28 [02:13<00:00,  4.78s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.16874:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.16874:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s]epoch 3 loss 1.23045:   4%|▎         | 1/28 [00:00<00:10,  2.51it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6651[0m
[32m  eval_f1 = 0.3712[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.4812[0m
[32m  eval_recall = 0.3416[0m
[32m  ********************[0m
[32m  Best MCC:0.6459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23045:   7%|▋         | 2/28 [00:07<01:57,  4.52s/it]epoch 3 loss 1.22885:   7%|▋         | 2/28 [00:08<01:57,  4.52s/it]epoch 3 loss 1.22885:  11%|█         | 3/28 [00:08<01:06,  2.65s/it]epoch 3 loss 1.2301:  11%|█         | 3/28 [00:08<01:06,  2.65s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6656[0m
[32m  eval_f1 = 0.3709[0m
[32m  eval_mcc = 0.6462[0m
[32m  eval_precision = 0.4789[0m
[32m  eval_recall = 0.3421[0m
[32m  ********************[0m
[32m  Best MCC:0.6462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2301:  14%|█▍        | 4/28 [00:17<02:02,  5.10s/it]epoch 3 loss 1.21762:  14%|█▍        | 4/28 [00:17<02:02,  5.10s/it]epoch 3 loss 1.21762:  18%|█▊        | 5/28 [00:17<01:18,  3.41s/it]epoch 3 loss 1.20982:  18%|█▊        | 5/28 [00:17<01:18,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.667[0m
[32m  eval_f1 = 0.3733[0m
[32m  eval_mcc = 0.6478[0m
[32m  eval_precision = 0.4876[0m
[32m  eval_recall = 0.3441[0m
[32m  ********************[0m
[32m  Best MCC:0.6478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20982:  21%|██▏       | 6/28 [00:24<01:45,  4.80s/it]epoch 3 loss 1.21606:  21%|██▏       | 6/28 [00:25<01:45,  4.80s/it]epoch 3 loss 1.21606:  25%|██▌       | 7/28 [00:25<01:10,  3.36s/it]epoch 3 loss 1.20987:  25%|██▌       | 7/28 [00:25<01:10,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6672[0m
[32m  eval_f1 = 0.3766[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.4868[0m
[32m  eval_recall = 0.3471[0m
[32m  ********************[0m
[32m  Best f1:0.3766[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20987:  29%|██▊       | 8/28 [00:36<01:56,  5.84s/it]epoch 3 loss 1.20841:  29%|██▊       | 8/28 [00:36<01:56,  5.84s/it]epoch 3 loss 1.20841:  32%|███▏      | 9/28 [00:36<01:18,  4.15s/it]epoch 3 loss 1.2003:  32%|███▏      | 9/28 [00:37<01:18,  4.15s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.669[0m
[32m  eval_f1 = 0.3806[0m
[32m  eval_mcc = 0.6505[0m
[32m  eval_precision = 0.4958[0m
[32m  eval_recall = 0.3501[0m
[32m  ********************[0m
[32m  Best f1:0.3806[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2003:  36%|███▌      | 10/28 [00:48<01:54,  6.34s/it]epoch 3 loss 1.19818:  36%|███▌      | 10/28 [00:48<01:54,  6.34s/it]epoch 3 loss 1.19818:  39%|███▉      | 11/28 [00:48<01:16,  4.52s/it]epoch 3 loss 1.201:  39%|███▉      | 11/28 [00:49<01:16,  4.52s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6697[0m
[32m  eval_f1 = 0.3814[0m
[32m  eval_mcc = 0.6515[0m
[32m  eval_precision = 0.4963[0m
[32m  eval_recall = 0.3509[0m
[32m  ********************[0m
[32m  Best f1:0.3814[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.201:  43%|████▎     | 12/28 [00:59<01:43,  6.48s/it]epoch 3 loss 1.20387:  43%|████▎     | 12/28 [00:59<01:43,  6.48s/it]epoch 3 loss 1.20387:  46%|████▋     | 13/28 [00:59<01:09,  4.64s/it]epoch 3 loss 1.20636:  46%|████▋     | 13/28 [01:00<01:09,  4.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6704[0m
[32m  eval_f1 = 0.3828[0m
[32m  eval_mcc = 0.6523[0m
[32m  eval_precision = 0.4977[0m
[32m  eval_recall = 0.3521[0m
[32m  ********************[0m
[32m  Best f1:0.3828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20636:  50%|█████     | 14/28 [01:09<01:25,  6.08s/it]epoch 3 loss 1.20343:  50%|█████     | 14/28 [01:09<01:25,  6.08s/it]epoch 3 loss 1.20343:  54%|█████▎    | 15/28 [01:09<00:56,  4.37s/it]epoch 3 loss 1.20069:  54%|█████▎    | 15/28 [01:10<00:56,  4.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6707[0m
[32m  eval_f1 = 0.383[0m
[32m  eval_mcc = 0.6526[0m
[32m  eval_precision = 0.4936[0m
[32m  eval_recall = 0.3523[0m
[32m  ********************[0m
[32m  Best f1:0.383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6526[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20069:  57%|█████▋    | 16/28 [01:19<01:11,  6.00s/it]epoch 3 loss 1.19569:  57%|█████▋    | 16/28 [01:19<01:11,  6.00s/it]epoch 3 loss 1.19569:  61%|██████    | 17/28 [01:19<00:47,  4.32s/it]epoch 3 loss 1.19395:  61%|██████    | 17/28 [01:20<00:47,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6706[0m
[32m  eval_f1 = 0.3831[0m
[32m  eval_mcc = 0.6525[0m
[32m  eval_precision = 0.494[0m
[32m  eval_recall = 0.3521[0m
[32m  ********************[0m
[32m  Best f1:0.3831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.19395:  64%|██████▍   | 18/28 [01:27<00:52,  5.23s/it]epoch 3 loss 1.18951:  64%|██████▍   | 18/28 [01:27<00:52,  5.23s/it]epoch 3 loss 1.18951:  68%|██████▊   | 19/28 [01:27<00:34,  3.79s/it]epoch 3 loss 1.18818:  68%|██████▊   | 19/28 [01:28<00:34,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6707[0m
[32m  eval_f1 = 0.3833[0m
[32m  eval_mcc = 0.6525[0m
[32m  eval_precision = 0.4953[0m
[32m  eval_recall = 0.352[0m
[32m  ********************[0m
[32m  Best f1:0.3833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.18818:  71%|███████▏  | 20/28 [01:35<00:39,  4.99s/it]epoch 3 loss 1.19425:  71%|███████▏  | 20/28 [01:35<00:39,  4.99s/it]epoch 3 loss 1.19425:  75%|███████▌  | 21/28 [01:35<00:25,  3.62s/it]epoch 3 loss 1.19365:  75%|███████▌  | 21/28 [01:36<00:25,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6716[0m
[32m  eval_f1 = 0.3835[0m
[32m  eval_mcc = 0.6533[0m
[32m  eval_precision = 0.4967[0m
[32m  eval_recall = 0.3523[0m
[32m  ********************[0m
[32m  Best f1:0.3835[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19365:  79%|███████▊  | 22/28 [01:44<00:31,  5.18s/it]epoch 3 loss 1.20017:  79%|███████▊  | 22/28 [01:45<00:31,  5.18s/it]epoch 3 loss 1.20017:  82%|████████▏ | 23/28 [01:45<00:18,  3.75s/it]epoch 3 loss 1.20385:  82%|████████▏ | 23/28 [01:45<00:18,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6723[0m
[32m  eval_f1 = 0.3845[0m
[32m  eval_mcc = 0.6539[0m
[32m  eval_precision = 0.4923[0m
[32m  eval_recall = 0.354[0m
[32m  ********************[0m
[32m  Best f1:0.3845[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6539[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20385:  86%|████████▌ | 24/28 [01:55<00:22,  5.59s/it]epoch 3 loss 1.20439:  86%|████████▌ | 24/28 [01:55<00:22,  5.59s/it]epoch 3 loss 1.20439:  89%|████████▉ | 25/28 [01:55<00:12,  4.04s/it]epoch 3 loss 1.1975:  89%|████████▉ | 25/28 [01:55<00:12,  4.04s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6729[0m
[32m  eval_f1 = 0.3861[0m
[32m  eval_mcc = 0.6544[0m
[32m  eval_precision = 0.4908[0m
[32m  eval_recall = 0.3559[0m
[32m  ********************[0m
[32m  Best f1:0.3861[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1975:  93%|█████████▎| 26/28 [02:05<00:11,  5.69s/it]epoch 3 loss 1.19622:  93%|█████████▎| 26/28 [02:05<00:11,  5.69s/it]epoch 3 loss 1.19622:  96%|█████████▋| 27/28 [02:05<00:04,  4.11s/it]epoch 3 loss 1.19763:  96%|█████████▋| 27/28 [02:05<00:04,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6734[0m
[32m  eval_f1 = 0.3866[0m
[32m  eval_mcc = 0.6549[0m
[32m  eval_precision = 0.4903[0m
[32m  eval_recall = 0.3563[0m
[32m  ********************[0m
[32m  Best f1:0.3866[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19763: 100%|██████████| 28/28 [02:16<00:00,  6.07s/it]epoch 3 loss 1.19763: 100%|██████████| 28/28 [02:16<00:00,  4.86s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.13215:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.13215:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 4 loss 1.21158:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6741[0m
[32m  eval_f1 = 0.3885[0m
[32m  eval_mcc = 0.6557[0m
[32m  eval_precision = 0.4898[0m
[32m  eval_recall = 0.3579[0m
[32m  ********************[0m
[32m  Best f1:0.3885[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6557[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21158:   7%|▋         | 2/28 [00:09<02:16,  5.24s/it]epoch 4 loss 1.16616:   7%|▋         | 2/28 [00:09<02:16,  5.24s/it]epoch 4 loss 1.16616:  11%|█         | 3/28 [00:09<01:16,  3.04s/it]epoch 4 loss 1.16125:  11%|█         | 3/28 [00:09<01:16,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6744[0m
[32m  eval_f1 = 0.3884[0m
[32m  eval_mcc = 0.656[0m
[32m  eval_precision = 0.4874[0m
[32m  eval_recall = 0.3581[0m
[32m  ********************[0m
[32m  Best MCC:0.656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16125:  14%|█▍        | 4/28 [00:15<01:41,  4.21s/it]epoch 4 loss 1.16859:  14%|█▍        | 4/28 [00:15<01:41,  4.21s/it]epoch 4 loss 1.16859:  18%|█▊        | 5/28 [00:15<01:05,  2.85s/it]epoch 4 loss 1.17014:  18%|█▊        | 5/28 [00:16<01:05,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6751[0m
[32m  eval_f1 = 0.3902[0m
[32m  eval_mcc = 0.6569[0m
[32m  eval_precision = 0.4953[0m
[32m  eval_recall = 0.3593[0m
[32m  ********************[0m
[32m  Best f1:0.3902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6569[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17014:  21%|██▏       | 6/28 [00:21<01:26,  3.94s/it]epoch 4 loss 1.17681:  21%|██▏       | 6/28 [00:22<01:26,  3.94s/it]epoch 4 loss 1.17681:  25%|██▌       | 7/28 [00:22<00:58,  2.79s/it]epoch 4 loss 1.17826:  25%|██▌       | 7/28 [00:22<00:58,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6758[0m
[32m  eval_f1 = 0.3903[0m
[32m  eval_mcc = 0.6576[0m
[32m  eval_precision = 0.4946[0m
[32m  eval_recall = 0.3594[0m
[32m  ********************[0m
[32m  Best f1:0.3903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17826:  29%|██▊       | 8/28 [00:28<01:16,  3.81s/it]epoch 4 loss 1.18201:  29%|██▊       | 8/28 [00:28<01:16,  3.81s/it]epoch 4 loss 1.18201:  32%|███▏      | 9/28 [00:28<00:52,  2.75s/it]epoch 4 loss 1.17549:  32%|███▏      | 9/28 [00:29<00:52,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6762[0m
[32m  eval_f1 = 0.3913[0m
[32m  eval_mcc = 0.658[0m
[32m  eval_precision = 0.4948[0m
[32m  eval_recall = 0.3609[0m
[32m  ********************[0m
[32m  Best f1:0.3913[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17549:  36%|███▌      | 10/28 [00:35<01:08,  3.83s/it]epoch 4 loss 1.1858:  36%|███▌      | 10/28 [00:35<01:08,  3.83s/it] epoch 4 loss 1.1858:  39%|███▉      | 11/28 [00:35<00:47,  2.78s/it]epoch 4 loss 1.18028:  39%|███▉      | 11/28 [00:35<00:47,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6768[0m
[32m  eval_f1 = 0.391[0m
[32m  eval_mcc = 0.6586[0m
[32m  eval_precision = 0.4946[0m
[32m  eval_recall = 0.3611[0m
[32m  ********************[0m
[32m  Best MCC:0.6586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18028:  43%|████▎     | 12/28 [00:42<01:05,  4.11s/it]epoch 4 loss 1.18108:  43%|████▎     | 12/28 [00:43<01:05,  4.11s/it]epoch 4 loss 1.18108:  46%|████▋     | 13/28 [00:43<00:44,  3.00s/it]epoch 4 loss 1.18516:  46%|████▋     | 13/28 [00:43<00:44,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6773[0m
[32m  eval_f1 = 0.391[0m
[32m  eval_mcc = 0.659[0m
[32m  eval_precision = 0.4874[0m
[32m  eval_recall = 0.3613[0m
[32m  ********************[0m
[32m  Best MCC:0.659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18516:  50%|█████     | 14/28 [00:50<01:00,  4.31s/it]epoch 4 loss 1.17922:  50%|█████     | 14/28 [00:50<01:00,  4.31s/it]epoch 4 loss 1.17922:  54%|█████▎    | 15/28 [00:50<00:40,  3.14s/it]epoch 4 loss 1.17849:  54%|█████▎    | 15/28 [00:51<00:40,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6774[0m
[32m  eval_f1 = 0.3915[0m
[32m  eval_mcc = 0.6592[0m
[32m  eval_precision = 0.4874[0m
[32m  eval_recall = 0.3619[0m
[32m  ********************[0m
[32m  Best f1:0.3915[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6592[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17849:  57%|█████▋    | 16/28 [01:04<01:15,  6.25s/it]epoch 4 loss 1.17987:  57%|█████▋    | 16/28 [01:04<01:15,  6.25s/it]epoch 4 loss 1.17987:  61%|██████    | 17/28 [01:04<00:49,  4.50s/it]epoch 4 loss 1.18122:  61%|██████    | 17/28 [01:05<00:49,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.678[0m
[32m  eval_f1 = 0.3914[0m
[32m  eval_mcc = 0.6598[0m
[32m  eval_precision = 0.487[0m
[32m  eval_recall = 0.3621[0m
[32m  ********************[0m
[32m  Best MCC:0.6598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.18122:  64%|██████▍   | 18/28 [01:12<00:54,  5.45s/it]epoch 4 loss 1.178:  64%|██████▍   | 18/28 [01:12<00:54,  5.45s/it]  epoch 4 loss 1.178:  68%|██████▊   | 19/28 [01:12<00:35,  3.94s/it]epoch 4 loss 1.17862:  68%|██████▊   | 19/28 [01:13<00:35,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6781[0m
[32m  eval_f1 = 0.392[0m
[32m  eval_mcc = 0.6599[0m
[32m  eval_precision = 0.4877[0m
[32m  eval_recall = 0.3628[0m
[32m  ********************[0m
[32m  Best f1:0.392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17862:  71%|███████▏  | 20/28 [01:24<00:50,  6.33s/it]epoch 4 loss 1.17302:  71%|███████▏  | 20/28 [01:25<00:50,  6.33s/it]epoch 4 loss 1.17302:  75%|███████▌  | 21/28 [01:25<00:31,  4.56s/it]epoch 4 loss 1.17239:  75%|███████▌  | 21/28 [01:25<00:31,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6781[0m
[32m  eval_f1 = 0.3922[0m
[32m  eval_mcc = 0.66[0m
[32m  eval_precision = 0.4887[0m
[32m  eval_recall = 0.3629[0m
[32m  ********************[0m
[32m  Best f1:0.3922[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.66[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.17239:  79%|███████▊  | 22/28 [01:35<00:38,  6.44s/it]epoch 4 loss 1.16803:  79%|███████▊  | 22/28 [01:36<00:38,  6.44s/it]epoch 4 loss 1.16803:  82%|████████▏ | 23/28 [01:36<00:23,  4.63s/it]epoch 4 loss 1.16869:  82%|████████▏ | 23/28 [01:36<00:23,  4.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.678[0m
[32m  eval_f1 = 0.3924[0m
[32m  eval_mcc = 0.6598[0m
[32m  eval_precision = 0.4897[0m
[32m  eval_recall = 0.3629[0m
[32m  ********************[0m
[32m  Best f1:0.3924[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.16869:  86%|████████▌ | 24/28 [01:41<00:19,  4.75s/it]epoch 4 loss 1.17037:  86%|████████▌ | 24/28 [01:41<00:19,  4.75s/it]epoch 4 loss 1.17037:  89%|████████▉ | 25/28 [01:41<00:10,  3.45s/it]epoch 4 loss 1.16804:  89%|████████▉ | 25/28 [01:42<00:10,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6779[0m
[32m  eval_f1 = 0.3924[0m
[32m  eval_mcc = 0.6597[0m
[32m  eval_precision = 0.4902[0m
[32m  eval_recall = 0.3628[0m

epoch 4 loss 1.16804:  93%|█████████▎| 26/28 [01:45<00:07,  3.55s/it]epoch 4 loss 1.16407:  93%|█████████▎| 26/28 [01:45<00:07,  3.55s/it]epoch 4 loss 1.16407:  96%|█████████▋| 27/28 [01:45<00:02,  2.61s/it]epoch 4 loss 1.16354:  96%|█████████▋| 27/28 [01:46<00:02,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6778[0m
[32m  eval_f1 = 0.3924[0m
[32m  eval_mcc = 0.6597[0m
[32m  eval_precision = 0.4902[0m
[32m  eval_recall = 0.3628[0m

epoch 4 loss 1.16354: 100%|██████████| 28/28 [01:49<00:00,  2.90s/it]epoch 4 loss 1.16354: 100%|██████████| 28/28 [01:49<00:00,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.678[0m
[32m  eval_f1 = 0.3924[0m
[32m  eval_mcc = 0.6598[0m
[32m  eval_precision = 0.4897[0m
[32m  eval_recall = 0.3629[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.72it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.662[0m
[32m  eval_f1 = 0.3511[0m
[32m  eval_mcc = 0.6438[0m
[32m  eval_precision = 0.4579[0m
[32m  eval_recall = 0.3238[0m

