[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=5, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/3/layer_5', posratio=0.5, seed=969, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.08631:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.08631:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.09241:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0069[0m
[32m  eval_f1 = 0.0017[0m
[32m  eval_mcc = -0.0034[0m
[32m  eval_precision = 0.0061[0m
[32m  eval_recall = 0.007[0m
[32m  ********************[0m
[32m  Best f1:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.09241:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it]epoch 0 loss 5.08102:   7%|▋         | 2/28 [00:05<01:15,  2.90s/it]epoch 0 loss 5.08102:  11%|█         | 3/28 [00:05<00:43,  1.76s/it]epoch 0 loss 5.06493:  11%|█         | 3/28 [00:05<00:43,  1.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0144[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = -0.0011[0m
[32m  eval_precision = 0.0085[0m
[32m  eval_recall = 0.0078[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.06493:  14%|█▍        | 4/28 [00:10<01:13,  3.07s/it]epoch 0 loss 5.03986:  14%|█▍        | 4/28 [00:11<01:13,  3.07s/it]epoch 0 loss 5.03986:  18%|█▊        | 5/28 [00:11<00:48,  2.11s/it]epoch 0 loss 5.01312:  18%|█▊        | 5/28 [00:11<00:48,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0358[0m
[32m  eval_f1 = 0.0048[0m
[32m  eval_mcc = 0.0063[0m
[32m  eval_precision = 0.0096[0m
[32m  eval_recall = 0.0061[0m
[32m  ********************[0m
[32m  Best f1:0.0048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.01312:  21%|██▏       | 6/28 [00:19<01:31,  4.16s/it]epoch 0 loss 4.98179:  21%|██▏       | 6/28 [00:19<01:31,  4.16s/it]epoch 0 loss 4.98179:  25%|██▌       | 7/28 [00:19<01:01,  2.94s/it]epoch 0 loss 4.94544:  25%|██▌       | 7/28 [00:20<01:01,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0749[0m
[32m  eval_f1 = 0.0092[0m
[32m  eval_mcc = 0.0263[0m
[32m  eval_precision = 0.0118[0m
[32m  eval_recall = 0.0114[0m
[32m  ********************[0m
[32m  Best f1:0.0092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0263[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94544:  29%|██▊       | 8/28 [00:29<01:40,  5.02s/it]epoch 0 loss 4.90343:  29%|██▊       | 8/28 [00:29<01:40,  5.02s/it]epoch 0 loss 4.90343:  32%|███▏      | 9/28 [00:29<01:08,  3.58s/it]epoch 0 loss 4.8556:  32%|███▏      | 9/28 [00:29<01:08,  3.58s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1138[0m
[32m  eval_f1 = 0.0138[0m
[32m  eval_mcc = 0.0544[0m
[32m  eval_precision = 0.0153[0m
[32m  eval_recall = 0.0172[0m
[32m  ********************[0m
[32m  Best f1:0.0138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.8556:  36%|███▌      | 10/28 [00:37<01:28,  4.94s/it]epoch 0 loss 4.80229:  36%|███▌      | 10/28 [00:37<01:28,  4.94s/it]epoch 0 loss 4.80229:  39%|███▉      | 11/28 [00:37<01:00,  3.55s/it]epoch 0 loss 4.74994:  39%|███▉      | 11/28 [00:38<01:00,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1515[0m
[32m  eval_f1 = 0.0182[0m
[32m  eval_mcc = 0.0923[0m
[32m  eval_precision = 0.0228[0m
[32m  eval_recall = 0.0233[0m
[32m  ********************[0m
[32m  Best f1:0.0182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.74994:  43%|████▎     | 12/28 [00:47<01:24,  5.31s/it]epoch 0 loss 4.68858:  43%|████▎     | 12/28 [00:47<01:24,  5.31s/it]epoch 0 loss 4.68858:  46%|████▋     | 13/28 [00:47<00:57,  3.83s/it]epoch 0 loss 4.62787:  46%|████▋     | 13/28 [00:48<00:57,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2072[0m
[32m  eval_f1 = 0.0245[0m
[32m  eval_mcc = 0.1508[0m
[32m  eval_precision = 0.0296[0m
[32m  eval_recall = 0.0327[0m
[32m  ********************[0m
[32m  Best f1:0.0245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.62787:  50%|█████     | 14/28 [00:55<01:08,  4.92s/it]epoch 0 loss 4.5627:  50%|█████     | 14/28 [00:55<01:08,  4.92s/it] epoch 0 loss 4.5627:  54%|█████▎    | 15/28 [00:55<00:46,  3.56s/it]epoch 0 loss 4.49623:  54%|█████▎    | 15/28 [00:55<00:46,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2531[0m
[32m  eval_f1 = 0.0289[0m
[32m  eval_mcc = 0.1992[0m
[32m  eval_precision = 0.0297[0m
[32m  eval_recall = 0.039[0m
[32m  ********************[0m
[32m  Best f1:0.0289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1992[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.49623:  57%|█████▋    | 16/28 [01:04<01:04,  5.34s/it]epoch 0 loss 4.42971:  57%|█████▋    | 16/28 [01:05<01:04,  5.34s/it]epoch 0 loss 4.42971:  61%|██████    | 17/28 [01:05<00:42,  3.85s/it]epoch 0 loss 4.36147:  61%|██████    | 17/28 [01:05<00:42,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2868[0m
[32m  eval_f1 = 0.0332[0m
[32m  eval_mcc = 0.2368[0m
[32m  eval_precision = 0.0387[0m
[32m  eval_recall = 0.0436[0m
[32m  ********************[0m
[32m  Best f1:0.0332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.36147:  64%|██████▍   | 18/28 [01:14<00:54,  5.42s/it]epoch 0 loss 4.29447:  64%|██████▍   | 18/28 [01:14<00:54,  5.42s/it]epoch 0 loss 4.29447:  68%|██████▊   | 19/28 [01:14<00:35,  3.92s/it]epoch 0 loss 4.23569:  68%|██████▊   | 19/28 [01:15<00:35,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3025[0m
[32m  eval_f1 = 0.0423[0m
[32m  eval_mcc = 0.2545[0m
[32m  eval_precision = 0.0872[0m
[32m  eval_recall = 0.0495[0m
[32m  ********************[0m
[32m  Best f1:0.0423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.23569:  71%|███████▏  | 20/28 [01:25<00:48,  6.01s/it]epoch 0 loss 4.17038:  71%|███████▏  | 20/28 [01:26<00:48,  6.01s/it]epoch 0 loss 4.17038:  75%|███████▌  | 21/28 [01:26<00:30,  4.33s/it]epoch 0 loss 4.11565:  75%|███████▌  | 21/28 [01:26<00:30,  4.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.333[0m
[32m  eval_f1 = 0.0705[0m
[32m  eval_mcc = 0.2873[0m
[32m  eval_precision = 0.1338[0m
[32m  eval_recall = 0.0699[0m
[32m  ********************[0m
[32m  Best f1:0.0705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.11565:  79%|███████▊  | 22/28 [01:32<00:29,  4.95s/it]epoch 0 loss 4.05376:  79%|███████▊  | 22/28 [01:32<00:29,  4.95s/it]epoch 0 loss 4.05376:  82%|████████▏ | 23/28 [01:32<00:17,  3.59s/it]epoch 0 loss 3.99453:  82%|████████▏ | 23/28 [01:33<00:17,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3878[0m
[32m  eval_f1 = 0.1101[0m
[32m  eval_mcc = 0.3462[0m
[32m  eval_precision = 0.1844[0m
[32m  eval_recall = 0.1024[0m
[32m  ********************[0m
[32m  Best f1:0.1101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.99453:  86%|████████▌ | 24/28 [01:39<00:17,  4.44s/it]epoch 0 loss 3.93824:  86%|████████▌ | 24/28 [01:39<00:17,  4.44s/it]epoch 0 loss 3.93824:  89%|████████▉ | 25/28 [01:39<00:09,  3.24s/it]epoch 0 loss 3.88285:  89%|████████▉ | 25/28 [01:40<00:09,  3.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4341[0m
[32m  eval_f1 = 0.1244[0m
[32m  eval_mcc = 0.4012[0m
[32m  eval_precision = 0.1943[0m
[32m  eval_recall = 0.1201[0m
[32m  ********************[0m
[32m  Best f1:0.1244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.88285:  93%|█████████▎| 26/28 [01:45<00:07,  3.98s/it]epoch 0 loss 3.8244:  93%|█████████▎| 26/28 [01:45<00:07,  3.98s/it] epoch 0 loss 3.8244:  96%|█████████▋| 27/28 [01:45<00:02,  2.91s/it]epoch 0 loss 3.76665:  96%|█████████▋| 27/28 [01:46<00:02,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4773[0m
[32m  eval_f1 = 0.1439[0m
[32m  eval_mcc = 0.4509[0m
[32m  eval_precision = 0.2186[0m
[32m  eval_recall = 0.1383[0m
[32m  ********************[0m
[32m  Best f1:0.1439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.76665: 100%|██████████| 28/28 [01:52<00:00,  3.90s/it]epoch 0 loss 3.76665: 100%|██████████| 28/28 [01:52<00:00,  4.01s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.25522:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.25522:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 1 loss 2.3514:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5221[0m
[32m  eval_f1 = 0.1726[0m
[32m  eval_mcc = 0.4961[0m
[32m  eval_precision = 0.2315[0m
[32m  eval_recall = 0.1666[0m
[32m  ********************[0m
[32m  Best f1:0.1726[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4961[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.3514:   7%|▋         | 2/28 [00:06<01:42,  3.95s/it]epoch 1 loss 2.22957:   7%|▋         | 2/28 [00:07<01:42,  3.95s/it]epoch 1 loss 2.22957:  11%|█         | 3/28 [00:07<00:58,  2.34s/it]epoch 1 loss 2.23795:  11%|█         | 3/28 [00:07<00:58,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5567[0m
[32m  eval_f1 = 0.1944[0m
[32m  eval_mcc = 0.5309[0m
[32m  eval_precision = 0.2435[0m
[32m  eval_recall = 0.193[0m
[32m  ********************[0m
[32m  Best f1:0.1944[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23795:  14%|█▍        | 4/28 [00:13<01:32,  3.87s/it]epoch 1 loss 2.19486:  14%|█▍        | 4/28 [00:13<01:32,  3.87s/it]epoch 1 loss 2.19486:  18%|█▊        | 5/28 [00:13<01:00,  2.63s/it]epoch 1 loss 2.15071:  18%|█▊        | 5/28 [00:14<01:00,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5717[0m
[32m  eval_f1 = 0.2038[0m
[32m  eval_mcc = 0.5458[0m
[32m  eval_precision = 0.2541[0m
[32m  eval_recall = 0.2028[0m
[32m  ********************[0m
[32m  Best f1:0.2038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15071:  21%|██▏       | 6/28 [00:20<01:25,  3.91s/it]epoch 1 loss 2.10658:  21%|██▏       | 6/28 [00:20<01:25,  3.91s/it]epoch 1 loss 2.10658:  25%|██▌       | 7/28 [00:20<00:58,  2.77s/it]epoch 1 loss 2.0667:  25%|██▌       | 7/28 [00:21<00:58,  2.77s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5826[0m
[32m  eval_f1 = 0.2118[0m
[32m  eval_mcc = 0.5568[0m
[32m  eval_precision = 0.2663[0m
[32m  eval_recall = 0.2083[0m
[32m  ********************[0m
[32m  Best f1:0.2118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0667:  29%|██▊       | 8/28 [00:27<01:18,  3.92s/it]epoch 1 loss 2.04101:  29%|██▊       | 8/28 [00:27<01:18,  3.92s/it]epoch 1 loss 2.04101:  32%|███▏      | 9/28 [00:27<00:53,  2.83s/it]epoch 1 loss 2.01888:  32%|███▏      | 9/28 [00:27<00:53,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.59[0m
[32m  eval_f1 = 0.2233[0m
[32m  eval_mcc = 0.5648[0m
[32m  eval_precision = 0.2969[0m
[32m  eval_recall = 0.2161[0m
[32m  ********************[0m
[32m  Best f1:0.2233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01888:  36%|███▌      | 10/28 [00:33<01:09,  3.87s/it]epoch 1 loss 1.97518:  36%|███▌      | 10/28 [00:34<01:09,  3.87s/it]epoch 1 loss 1.97518:  39%|███▉      | 11/28 [00:34<00:47,  2.82s/it]epoch 1 loss 1.9455:  39%|███▉      | 11/28 [00:34<00:47,  2.82s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5967[0m
[32m  eval_f1 = 0.234[0m
[32m  eval_mcc = 0.5723[0m
[32m  eval_precision = 0.3172[0m
[32m  eval_recall = 0.2218[0m
[32m  ********************[0m
[32m  Best f1:0.234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9455:  43%|████▎     | 12/28 [00:40<01:00,  3.77s/it]epoch 1 loss 1.92422:  43%|████▎     | 12/28 [00:40<01:00,  3.77s/it]epoch 1 loss 1.92422:  46%|████▋     | 13/28 [00:40<00:41,  2.75s/it]epoch 1 loss 1.91398:  46%|████▋     | 13/28 [00:40<00:41,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6006[0m
[32m  eval_f1 = 0.2458[0m
[32m  eval_mcc = 0.5776[0m
[32m  eval_precision = 0.3122[0m
[32m  eval_recall = 0.2297[0m
[32m  ********************[0m
[32m  Best f1:0.2458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5776[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91398:  50%|█████     | 14/28 [00:46<00:54,  3.86s/it]epoch 1 loss 1.89355:  50%|█████     | 14/28 [00:47<00:54,  3.86s/it]epoch 1 loss 1.89355:  54%|█████▎    | 15/28 [00:47<00:36,  2.82s/it]epoch 1 loss 1.87347:  54%|█████▎    | 15/28 [00:47<00:36,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.604[0m
[32m  eval_f1 = 0.2535[0m
[32m  eval_mcc = 0.5827[0m
[32m  eval_precision = 0.3456[0m
[32m  eval_recall = 0.2359[0m
[32m  ********************[0m
[32m  Best f1:0.2535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87347:  57%|█████▋    | 16/28 [00:57<01:01,  5.12s/it]epoch 1 loss 1.85545:  57%|█████▋    | 16/28 [00:58<01:01,  5.12s/it]epoch 1 loss 1.85545:  61%|██████    | 17/28 [00:58<00:40,  3.71s/it]epoch 1 loss 1.83985:  61%|██████    | 17/28 [00:58<00:40,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6095[0m
[32m  eval_f1 = 0.2627[0m
[32m  eval_mcc = 0.589[0m
[32m  eval_precision = 0.3757[0m
[32m  eval_recall = 0.2429[0m
[32m  ********************[0m
[32m  Best f1:0.2627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83985:  64%|██████▍   | 18/28 [01:14<01:14,  7.50s/it]epoch 1 loss 1.819:  64%|██████▍   | 18/28 [01:14<01:14,  7.50s/it]  epoch 1 loss 1.819:  68%|██████▊   | 19/28 [01:14<00:48,  5.37s/it]epoch 1 loss 1.8026:  68%|██████▊   | 19/28 [01:15<00:48,  5.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6151[0m
[32m  eval_f1 = 0.269[0m
[32m  eval_mcc = 0.5946[0m
[32m  eval_precision = 0.3866[0m
[32m  eval_recall = 0.2471[0m
[32m  ********************[0m
[32m  Best f1:0.269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8026:  71%|███████▏  | 20/28 [01:28<01:02,  7.76s/it]epoch 1 loss 1.78868:  71%|███████▏  | 20/28 [01:28<01:02,  7.76s/it]epoch 1 loss 1.78868:  75%|███████▌  | 21/28 [01:28<00:38,  5.56s/it]epoch 1 loss 1.78159:  75%|███████▌  | 21/28 [01:29<00:38,  5.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6197[0m
[32m  eval_f1 = 0.2888[0m
[32m  eval_mcc = 0.5984[0m
[32m  eval_precision = 0.407[0m
[32m  eval_recall = 0.2657[0m
[32m  ********************[0m
[32m  Best f1:0.2888[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.78159:  79%|███████▊  | 22/28 [01:40<00:45,  7.54s/it]epoch 1 loss 1.76827:  79%|███████▊  | 22/28 [01:41<00:45,  7.54s/it]epoch 1 loss 1.76827:  82%|████████▏ | 23/28 [01:41<00:27,  5.41s/it]epoch 1 loss 1.75859:  82%|████████▏ | 23/28 [01:41<00:27,  5.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6215[0m
[32m  eval_f1 = 0.3006[0m
[32m  eval_mcc = 0.5992[0m
[32m  eval_precision = 0.4053[0m
[32m  eval_recall = 0.2795[0m
[32m  ********************[0m
[32m  Best f1:0.3006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5992[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75859:  86%|████████▌ | 24/28 [01:51<00:27,  6.98s/it]epoch 1 loss 1.74901:  86%|████████▌ | 24/28 [01:52<00:27,  6.98s/it]epoch 1 loss 1.74901:  89%|████████▉ | 25/28 [01:52<00:15,  5.01s/it]epoch 1 loss 1.74112:  89%|████████▉ | 25/28 [01:52<00:15,  5.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6238[0m
[32m  eval_f1 = 0.3044[0m
[32m  eval_mcc = 0.6012[0m
[32m  eval_precision = 0.4026[0m
[32m  eval_recall = 0.2833[0m
[32m  ********************[0m
[32m  Best f1:0.3044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74112:  93%|█████████▎| 26/28 [02:03<00:13,  6.71s/it]epoch 1 loss 1.73179:  93%|█████████▎| 26/28 [02:03<00:13,  6.71s/it]epoch 1 loss 1.73179:  96%|█████████▋| 27/28 [02:03<00:04,  4.82s/it]epoch 1 loss 1.72646:  96%|█████████▋| 27/28 [02:03<00:04,  4.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6297[0m
[32m  eval_f1 = 0.3092[0m
[32m  eval_mcc = 0.6078[0m
[32m  eval_precision = 0.4113[0m
[32m  eval_recall = 0.2879[0m
[32m  ********************[0m
[32m  Best f1:0.3092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72646: 100%|██████████| 28/28 [02:11<00:00,  5.80s/it]epoch 1 loss 1.72646: 100%|██████████| 28/28 [02:11<00:00,  4.70s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.41821:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.41821:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.43033:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6325[0m
[32m  eval_f1 = 0.3132[0m
[32m  eval_mcc = 0.6113[0m
[32m  eval_precision = 0.4279[0m
[32m  eval_recall = 0.2913[0m
[32m  ********************[0m
[32m  Best f1:0.3132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43033:   7%|▋         | 2/28 [00:10<02:44,  6.33s/it]epoch 2 loss 1.41646:   7%|▋         | 2/28 [00:11<02:44,  6.33s/it]epoch 2 loss 1.41646:  11%|█         | 3/28 [00:11<01:30,  3.63s/it]epoch 2 loss 1.41238:  11%|█         | 3/28 [00:11<01:30,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6344[0m
[32m  eval_f1 = 0.322[0m
[32m  eval_mcc = 0.6139[0m
[32m  eval_precision = 0.4359[0m
[32m  eval_recall = 0.2979[0m
[32m  ********************[0m
[32m  Best f1:0.322[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6139[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41238:  14%|█▍        | 4/28 [00:20<02:23,  5.99s/it]epoch 2 loss 1.39026:  14%|█▍        | 4/28 [00:21<02:23,  5.99s/it]epoch 2 loss 1.39026:  18%|█▊        | 5/28 [00:21<01:31,  3.98s/it]epoch 2 loss 1.37183:  18%|█▊        | 5/28 [00:21<01:31,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.637[0m
[32m  eval_f1 = 0.3254[0m
[32m  eval_mcc = 0.6176[0m
[32m  eval_precision = 0.4406[0m
[32m  eval_recall = 0.2997[0m
[32m  ********************[0m
[32m  Best f1:0.3254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37183:  21%|██▏       | 6/28 [00:31<02:13,  6.07s/it]epoch 2 loss 1.39298:  21%|██▏       | 6/28 [00:31<02:13,  6.07s/it]epoch 2 loss 1.39298:  25%|██▌       | 7/28 [00:31<01:28,  4.22s/it]epoch 2 loss 1.39786:  25%|██▌       | 7/28 [00:32<01:28,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.637[0m
[32m  eval_f1 = 0.3259[0m
[32m  eval_mcc = 0.6182[0m
[32m  eval_precision = 0.4438[0m
[32m  eval_recall = 0.3003[0m
[32m  ********************[0m
[32m  Best f1:0.3259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39786:  29%|██▊       | 8/28 [00:39<01:48,  5.43s/it]epoch 2 loss 1.38955:  29%|██▊       | 8/28 [00:40<01:48,  5.43s/it]epoch 2 loss 1.38955:  32%|███▏      | 9/28 [00:40<01:13,  3.87s/it]epoch 2 loss 1.39502:  32%|███▏      | 9/28 [00:40<01:13,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.3257[0m
[32m  eval_mcc = 0.6188[0m
[32m  eval_precision = 0.4424[0m
[32m  eval_recall = 0.3004[0m
[32m  ********************[0m
[32m  Best MCC:0.6188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39502:  36%|███▌      | 10/28 [00:47<01:30,  5.01s/it]epoch 2 loss 1.39578:  36%|███▌      | 10/28 [00:48<01:30,  5.01s/it]epoch 2 loss 1.39578:  39%|███▉      | 11/28 [00:48<01:01,  3.61s/it]epoch 2 loss 1.39739:  39%|███▉      | 11/28 [00:48<01:01,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6413[0m
[32m  eval_f1 = 0.3287[0m
[32m  eval_mcc = 0.6224[0m
[32m  eval_precision = 0.4437[0m
[32m  eval_recall = 0.3025[0m
[32m  ********************[0m
[32m  Best f1:0.3287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6224[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39739:  43%|████▎     | 12/28 [00:56<01:20,  5.02s/it]epoch 2 loss 1.40291:  43%|████▎     | 12/28 [00:56<01:20,  5.02s/it]epoch 2 loss 1.40291:  46%|████▋     | 13/28 [00:56<00:54,  3.62s/it]epoch 2 loss 1.40001:  46%|████▋     | 13/28 [00:57<00:54,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6434[0m
[32m  eval_f1 = 0.331[0m
[32m  eval_mcc = 0.624[0m
[32m  eval_precision = 0.4499[0m
[32m  eval_recall = 0.3044[0m
[32m  ********************[0m
[32m  Best f1:0.331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40001:  50%|█████     | 14/28 [01:07<01:18,  5.62s/it]epoch 2 loss 1.39317:  50%|█████     | 14/28 [01:07<01:18,  5.62s/it]epoch 2 loss 1.39317:  54%|█████▎    | 15/28 [01:07<00:52,  4.05s/it]epoch 2 loss 1.38605:  54%|█████▎    | 15/28 [01:08<00:52,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6449[0m
[32m  eval_f1 = 0.3352[0m
[32m  eval_mcc = 0.6253[0m
[32m  eval_precision = 0.4432[0m
[32m  eval_recall = 0.308[0m
[32m  ********************[0m
[32m  Best f1:0.3352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38605:  57%|█████▋    | 16/28 [01:15<01:02,  5.22s/it]epoch 2 loss 1.38493:  57%|█████▋    | 16/28 [01:16<01:02,  5.22s/it]epoch 2 loss 1.38493:  61%|██████    | 17/28 [01:16<00:41,  3.78s/it]epoch 2 loss 1.38518:  61%|██████    | 17/28 [01:16<00:41,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.648[0m
[32m  eval_f1 = 0.3436[0m
[32m  eval_mcc = 0.6283[0m
[32m  eval_precision = 0.4632[0m
[32m  eval_recall = 0.3149[0m
[32m  ********************[0m
[32m  Best f1:0.3436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38518:  64%|██████▍   | 18/28 [01:26<00:56,  5.66s/it]epoch 2 loss 1.38085:  64%|██████▍   | 18/28 [01:26<00:56,  5.66s/it]epoch 2 loss 1.38085:  68%|██████▊   | 19/28 [01:26<00:36,  4.08s/it]epoch 2 loss 1.37852:  68%|██████▊   | 19/28 [01:26<00:36,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6501[0m
[32m  eval_f1 = 0.3469[0m
[32m  eval_mcc = 0.6305[0m
[32m  eval_precision = 0.4653[0m
[32m  eval_recall = 0.3187[0m
[32m  ********************[0m
[32m  Best f1:0.3469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37852:  71%|███████▏  | 20/28 [01:34<00:41,  5.22s/it]epoch 2 loss 1.3799:  71%|███████▏  | 20/28 [01:34<00:41,  5.22s/it] epoch 2 loss 1.3799:  75%|███████▌  | 21/28 [01:34<00:26,  3.78s/it]epoch 2 loss 1.3783:  75%|███████▌  | 21/28 [01:35<00:26,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6536[0m
[32m  eval_f1 = 0.3511[0m
[32m  eval_mcc = 0.6343[0m
[32m  eval_precision = 0.4729[0m
[32m  eval_recall = 0.3225[0m
[32m  ********************[0m
[32m  Best f1:0.3511[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3783:  79%|███████▊  | 22/28 [01:45<00:34,  5.77s/it]epoch 2 loss 1.37442:  79%|███████▊  | 22/28 [01:45<00:34,  5.77s/it]epoch 2 loss 1.37442:  82%|████████▏ | 23/28 [01:45<00:20,  4.17s/it]epoch 2 loss 1.37333:  82%|████████▏ | 23/28 [01:45<00:20,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6539[0m
[32m  eval_f1 = 0.3531[0m
[32m  eval_mcc = 0.6346[0m
[32m  eval_precision = 0.466[0m
[32m  eval_recall = 0.3249[0m
[32m  ********************[0m
[32m  Best f1:0.3531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37333:  86%|████████▌ | 24/28 [01:53<00:21,  5.40s/it]epoch 2 loss 1.36756:  86%|████████▌ | 24/28 [01:54<00:21,  5.40s/it]epoch 2 loss 1.36756:  89%|████████▉ | 25/28 [01:54<00:11,  3.91s/it]epoch 2 loss 1.36574:  89%|████████▉ | 25/28 [01:54<00:11,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.354[0m
[32m  eval_mcc = 0.6359[0m
[32m  eval_precision = 0.4656[0m
[32m  eval_recall = 0.3252[0m
[32m  ********************[0m
[32m  Best f1:0.354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36574:  93%|█████████▎| 26/28 [02:00<00:09,  4.62s/it]epoch 2 loss 1.36136:  93%|█████████▎| 26/28 [02:01<00:09,  4.62s/it]epoch 2 loss 1.36136:  96%|█████████▋| 27/28 [02:01<00:03,  3.37s/it]epoch 2 loss 1.35745:  96%|█████████▋| 27/28 [02:01<00:03,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.354[0m
[32m  eval_mcc = 0.6358[0m
[32m  eval_precision = 0.4673[0m
[32m  eval_recall = 0.325[0m
[32m  ********************[0m
[32m  Best f1:0.354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.35745: 100%|██████████| 28/28 [02:05<00:00,  3.79s/it]epoch 2 loss 1.35745: 100%|██████████| 28/28 [02:05<00:00,  4.49s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.24121:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.24121:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s]epoch 3 loss 1.30347:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3541[0m
[32m  eval_mcc = 0.6362[0m
[32m  eval_precision = 0.4705[0m
[32m  eval_recall = 0.3253[0m
[32m  ********************[0m
[32m  Best f1:0.3541[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30347:   7%|▋         | 2/28 [00:12<03:03,  7.07s/it]epoch 3 loss 1.30214:   7%|▋         | 2/28 [00:12<03:03,  7.07s/it]epoch 3 loss 1.30214:  11%|█         | 3/28 [00:12<01:40,  4.03s/it]epoch 3 loss 1.30315:  11%|█         | 3/28 [00:12<01:40,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.656[0m
[32m  eval_f1 = 0.3531[0m
[32m  eval_mcc = 0.6363[0m
[32m  eval_precision = 0.4704[0m
[32m  eval_recall = 0.3249[0m
[32m  ********************[0m
[32m  Best MCC:0.6363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30315:  14%|█▍        | 4/28 [00:21<02:26,  6.10s/it]epoch 3 loss 1.28832:  14%|█▍        | 4/28 [00:22<02:26,  6.10s/it]epoch 3 loss 1.28832:  18%|█▊        | 5/28 [00:22<01:33,  4.05s/it]epoch 3 loss 1.28124:  18%|█▊        | 5/28 [00:22<01:33,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3566[0m
[32m  eval_mcc = 0.6383[0m
[32m  eval_precision = 0.4683[0m
[32m  eval_recall = 0.3284[0m
[32m  ********************[0m
[32m  Best f1:0.3566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28124:  21%|██▏       | 6/28 [00:35<02:36,  7.13s/it]epoch 3 loss 1.28654:  21%|██▏       | 6/28 [00:35<02:36,  7.13s/it]epoch 3 loss 1.28654:  25%|██▌       | 7/28 [00:35<01:43,  4.94s/it]epoch 3 loss 1.28068:  25%|██▌       | 7/28 [00:36<01:43,  4.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6587[0m
[32m  eval_f1 = 0.3571[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.4677[0m
[32m  eval_recall = 0.3287[0m
[32m  ********************[0m
[32m  Best f1:0.3571[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28068:  29%|██▊       | 8/28 [00:47<02:22,  7.12s/it]epoch 3 loss 1.27912:  29%|██▊       | 8/28 [00:47<02:22,  7.12s/it]epoch 3 loss 1.27912:  32%|███▏      | 9/28 [00:47<01:35,  5.02s/it]epoch 3 loss 1.27059:  32%|███▏      | 9/28 [00:48<01:35,  5.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6594[0m
[32m  eval_f1 = 0.3575[0m
[32m  eval_mcc = 0.6408[0m
[32m  eval_precision = 0.4715[0m
[32m  eval_recall = 0.3292[0m
[32m  ********************[0m
[32m  Best f1:0.3575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27059:  36%|███▌      | 10/28 [00:58<02:02,  6.78s/it]epoch 3 loss 1.2679:  36%|███▌      | 10/28 [00:59<02:02,  6.78s/it] epoch 3 loss 1.2679:  39%|███▉      | 11/28 [00:59<01:22,  4.83s/it]epoch 3 loss 1.27174:  39%|███▉      | 11/28 [00:59<01:22,  4.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6606[0m
[32m  eval_f1 = 0.3604[0m
[32m  eval_mcc = 0.6422[0m
[32m  eval_precision = 0.4785[0m
[32m  eval_recall = 0.3311[0m
[32m  ********************[0m
[32m  Best f1:0.3604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6422[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27174:  43%|████▎     | 12/28 [01:07<01:33,  5.82s/it]epoch 3 loss 1.27441:  43%|████▎     | 12/28 [01:07<01:33,  5.82s/it]epoch 3 loss 1.27441:  46%|████▋     | 13/28 [01:07<01:02,  4.18s/it]epoch 3 loss 1.27645:  46%|████▋     | 13/28 [01:07<01:02,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3613[0m
[32m  eval_mcc = 0.643[0m
[32m  eval_precision = 0.4803[0m
[32m  eval_recall = 0.3318[0m
[32m  ********************[0m
[32m  Best f1:0.3613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27645:  50%|█████     | 14/28 [01:17<01:24,  6.05s/it]epoch 3 loss 1.27412:  50%|█████     | 14/28 [01:18<01:24,  6.05s/it]epoch 3 loss 1.27412:  54%|█████▎    | 15/28 [01:18<00:56,  4.36s/it]epoch 3 loss 1.27121:  54%|█████▎    | 15/28 [01:18<00:56,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6614[0m
[32m  eval_f1 = 0.3616[0m
[32m  eval_mcc = 0.643[0m
[32m  eval_precision = 0.4763[0m
[32m  eval_recall = 0.3319[0m
[32m  ********************[0m
[32m  Best f1:0.3616[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.27121:  57%|█████▋    | 16/28 [01:25<01:00,  5.06s/it]epoch 3 loss 1.26594:  57%|█████▋    | 16/28 [01:25<01:00,  5.06s/it]epoch 3 loss 1.26594:  61%|██████    | 17/28 [01:25<00:40,  3.66s/it]epoch 3 loss 1.2643:  61%|██████    | 17/28 [01:25<00:40,  3.66s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6606[0m
[32m  eval_f1 = 0.361[0m
[32m  eval_mcc = 0.6421[0m
[32m  eval_precision = 0.4751[0m
[32m  eval_recall = 0.3311[0m

epoch 3 loss 1.2643:  64%|██████▍   | 18/28 [01:29<00:37,  3.71s/it]epoch 3 loss 1.25978:  64%|██████▍   | 18/28 [01:29<00:37,  3.71s/it]epoch 3 loss 1.25978:  68%|██████▊   | 19/28 [01:29<00:24,  2.71s/it]epoch 3 loss 1.25852:  68%|██████▊   | 19/28 [01:30<00:24,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6608[0m
[32m  eval_f1 = 0.3621[0m
[32m  eval_mcc = 0.6422[0m
[32m  eval_precision = 0.476[0m
[32m  eval_recall = 0.3318[0m
[32m  ********************[0m
[32m  Best f1:0.3621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.25852:  71%|███████▏  | 20/28 [01:36<00:31,  3.89s/it]epoch 3 loss 1.26489:  71%|███████▏  | 20/28 [01:36<00:31,  3.89s/it]epoch 3 loss 1.26489:  75%|███████▌  | 21/28 [01:36<00:19,  2.85s/it]epoch 3 loss 1.26454:  75%|███████▌  | 21/28 [01:37<00:19,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3638[0m
[32m  eval_mcc = 0.6426[0m
[32m  eval_precision = 0.4762[0m
[32m  eval_recall = 0.3338[0m
[32m  ********************[0m
[32m  Best f1:0.3638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.26454:  79%|███████▊  | 22/28 [01:43<00:23,  3.94s/it]epoch 3 loss 1.27127:  79%|███████▊  | 22/28 [01:43<00:23,  3.94s/it]epoch 3 loss 1.27127:  82%|████████▏ | 23/28 [01:43<00:14,  2.89s/it]epoch 3 loss 1.27476:  82%|████████▏ | 23/28 [01:44<00:14,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.663[0m
[32m  eval_f1 = 0.3655[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4755[0m
[32m  eval_recall = 0.3361[0m
[32m  ********************[0m
[32m  Best f1:0.3655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27476:  86%|████████▌ | 24/28 [01:53<00:19,  4.84s/it]epoch 3 loss 1.27568:  86%|████████▌ | 24/28 [01:53<00:19,  4.84s/it]epoch 3 loss 1.27568:  89%|████████▉ | 25/28 [01:53<00:10,  3.51s/it]epoch 3 loss 1.26844:  89%|████████▉ | 25/28 [01:53<00:10,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6636[0m
[32m  eval_f1 = 0.3669[0m
[32m  eval_mcc = 0.6448[0m
[32m  eval_precision = 0.4781[0m
[32m  eval_recall = 0.3374[0m
[32m  ********************[0m
[32m  Best f1:0.3669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26844:  93%|█████████▎| 26/28 [02:03<00:10,  5.44s/it]epoch 3 loss 1.26705:  93%|█████████▎| 26/28 [02:03<00:10,  5.44s/it]epoch 3 loss 1.26705:  96%|█████████▋| 27/28 [02:03<00:03,  3.93s/it]epoch 3 loss 1.26848:  96%|█████████▋| 27/28 [02:04<00:03,  3.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6643[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.6455[0m
[32m  eval_precision = 0.4876[0m
[32m  eval_recall = 0.3381[0m
[32m  ********************[0m
[32m  Best f1:0.3679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26848: 100%|██████████| 28/28 [02:11<00:00,  5.14s/it]epoch 3 loss 1.26848: 100%|██████████| 28/28 [02:11<00:00,  4.71s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.19845:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.19845:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s]epoch 4 loss 1.27448:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.3697[0m
[32m  eval_mcc = 0.6461[0m
[32m  eval_precision = 0.4953[0m
[32m  eval_recall = 0.3395[0m
[32m  ********************[0m
[32m  Best f1:0.3697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27448:   7%|▋         | 2/28 [00:11<02:51,  6.59s/it]epoch 4 loss 1.22935:   7%|▋         | 2/28 [00:11<02:51,  6.59s/it]epoch 4 loss 1.22935:  11%|█         | 3/28 [00:11<01:34,  3.77s/it]epoch 4 loss 1.2258:  11%|█         | 3/28 [00:12<01:34,  3.77s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3705[0m
[32m  eval_mcc = 0.647[0m
[32m  eval_precision = 0.4938[0m
[32m  eval_recall = 0.3402[0m
[32m  ********************[0m
[32m  Best f1:0.3705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2258:  14%|█▍        | 4/28 [00:20<02:22,  5.93s/it]epoch 4 loss 1.23387:  14%|█▍        | 4/28 [00:21<02:22,  5.93s/it]epoch 4 loss 1.23387:  18%|█▊        | 5/28 [00:21<01:30,  3.95s/it]epoch 4 loss 1.23594:  18%|█▊        | 5/28 [00:21<01:30,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3702[0m
[32m  eval_mcc = 0.6472[0m
[32m  eval_precision = 0.4958[0m
[32m  eval_recall = 0.3398[0m
[32m  ********************[0m
[32m  Best MCC:0.6472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23594:  21%|██▏       | 6/28 [00:29<01:54,  5.20s/it]epoch 4 loss 1.24337:  21%|██▏       | 6/28 [00:29<01:54,  5.20s/it]epoch 4 loss 1.24337:  25%|██▌       | 7/28 [00:29<01:16,  3.64s/it]epoch 4 loss 1.24579:  25%|██▌       | 7/28 [00:29<01:16,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.666[0m
[32m  eval_f1 = 0.3702[0m
[32m  eval_mcc = 0.6474[0m
[32m  eval_precision = 0.4916[0m
[32m  eval_recall = 0.3399[0m
[32m  ********************[0m
[32m  Best MCC:0.6474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24579:  29%|██▊       | 8/28 [00:34<01:21,  4.07s/it]epoch 4 loss 1.24889:  29%|██▊       | 8/28 [00:34<01:21,  4.07s/it]epoch 4 loss 1.24889:  32%|███▏      | 9/28 [00:34<00:55,  2.92s/it]epoch 4 loss 1.24222:  32%|███▏      | 9/28 [00:35<00:55,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6661[0m
[32m  eval_f1 = 0.3723[0m
[32m  eval_mcc = 0.6474[0m
[32m  eval_precision = 0.4939[0m
[32m  eval_recall = 0.3414[0m
[32m  ********************[0m
[32m  Best f1:0.3723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24222:  36%|███▌      | 10/28 [00:41<01:11,  3.99s/it]epoch 4 loss 1.25306:  36%|███▌      | 10/28 [00:41<01:11,  3.99s/it]epoch 4 loss 1.25306:  39%|███▉      | 11/28 [00:41<00:49,  2.90s/it]epoch 4 loss 1.24734:  39%|███▉      | 11/28 [00:42<00:49,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6666[0m
[32m  eval_f1 = 0.3723[0m
[32m  eval_mcc = 0.648[0m
[32m  eval_precision = 0.4919[0m
[32m  eval_recall = 0.3417[0m
[32m  ********************[0m
[32m  Best f1:0.3723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24734:  43%|████▎     | 12/28 [00:47<01:00,  3.78s/it]epoch 4 loss 1.24813:  43%|████▎     | 12/28 [00:47<01:00,  3.78s/it]epoch 4 loss 1.24813:  46%|████▋     | 13/28 [00:47<00:41,  2.77s/it]epoch 4 loss 1.25204:  46%|████▋     | 13/28 [00:48<00:41,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3726[0m
[32m  eval_mcc = 0.648[0m
[32m  eval_precision = 0.491[0m
[32m  eval_recall = 0.3422[0m
[32m  ********************[0m
[32m  Best f1:0.3726[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25204:  50%|█████     | 14/28 [00:54<00:54,  3.86s/it]epoch 4 loss 1.24656:  50%|█████     | 14/28 [00:54<00:54,  3.86s/it]epoch 4 loss 1.24656:  54%|█████▎    | 15/28 [00:54<00:36,  2.82s/it]epoch 4 loss 1.24632:  54%|█████▎    | 15/28 [00:55<00:36,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.374[0m
[32m  eval_mcc = 0.648[0m
[32m  eval_precision = 0.4914[0m
[32m  eval_recall = 0.3433[0m
[32m  ********************[0m
[32m  Best f1:0.374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24632:  57%|█████▋    | 16/28 [00:59<00:41,  3.47s/it]epoch 4 loss 1.24717:  57%|█████▋    | 16/28 [01:00<00:41,  3.47s/it]epoch 4 loss 1.24717:  61%|██████    | 17/28 [01:00<00:28,  2.55s/it]epoch 4 loss 1.24863:  61%|██████    | 17/28 [01:00<00:28,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6668[0m
[32m  eval_f1 = 0.3743[0m
[32m  eval_mcc = 0.6482[0m
[32m  eval_precision = 0.4925[0m
[32m  eval_recall = 0.3435[0m
[32m  ********************[0m
[32m  Best f1:0.3743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6482[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24863:  64%|██████▍   | 18/28 [01:05<00:34,  3.45s/it]epoch 4 loss 1.24586:  64%|██████▍   | 18/28 [01:06<00:34,  3.45s/it]epoch 4 loss 1.24586:  68%|██████▊   | 19/28 [01:06<00:22,  2.53s/it]epoch 4 loss 1.24689:  68%|██████▊   | 19/28 [01:06<00:22,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3741[0m
[32m  eval_mcc = 0.6481[0m
[32m  eval_precision = 0.4922[0m
[32m  eval_recall = 0.3434[0m

epoch 4 loss 1.24689:  71%|███████▏  | 20/28 [01:09<00:23,  2.92s/it]epoch 4 loss 1.24118:  71%|███████▏  | 20/28 [01:10<00:23,  2.92s/it]epoch 4 loss 1.24118:  75%|███████▌  | 21/28 [01:10<00:15,  2.16s/it]epoch 4 loss 1.2408:  75%|███████▌  | 21/28 [01:10<00:15,  2.16s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6669[0m
[32m  eval_f1 = 0.3745[0m
[32m  eval_mcc = 0.6483[0m
[32m  eval_precision = 0.4929[0m
[32m  eval_recall = 0.3436[0m
[32m  ********************[0m
[32m  Best f1:0.3745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2408:  79%|███████▊  | 22/28 [01:17<00:21,  3.58s/it]epoch 4 loss 1.23649:  79%|███████▊  | 22/28 [01:17<00:21,  3.58s/it]epoch 4 loss 1.23649:  82%|████████▏ | 23/28 [01:17<00:13,  2.63s/it]epoch 4 loss 1.23682:  82%|████████▏ | 23/28 [01:17<00:13,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6671[0m
[32m  eval_f1 = 0.3746[0m
[32m  eval_mcc = 0.6485[0m
[32m  eval_precision = 0.4935[0m
[32m  eval_recall = 0.3436[0m
[32m  ********************[0m
[32m  Best f1:0.3746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23682:  86%|████████▌ | 24/28 [01:23<00:14,  3.62s/it]epoch 4 loss 1.23851:  86%|████████▌ | 24/28 [01:23<00:14,  3.62s/it]epoch 4 loss 1.23851:  89%|████████▉ | 25/28 [01:23<00:07,  2.66s/it]epoch 4 loss 1.2358:  89%|████████▉ | 25/28 [01:24<00:07,  2.66s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.667[0m
[32m  eval_f1 = 0.3743[0m
[32m  eval_mcc = 0.6485[0m
[32m  eval_precision = 0.4932[0m
[32m  eval_recall = 0.3434[0m

epoch 4 loss 1.2358:  93%|█████████▎| 26/28 [01:27<00:06,  3.01s/it]epoch 4 loss 1.2314:  93%|█████████▎| 26/28 [01:28<00:06,  3.01s/it]epoch 4 loss 1.2314:  96%|█████████▋| 27/28 [01:28<00:02,  2.22s/it]epoch 4 loss 1.23035:  96%|█████████▋| 27/28 [01:28<00:02,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.667[0m
[32m  eval_f1 = 0.3743[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.4932[0m
[32m  eval_recall = 0.3434[0m

epoch 4 loss 1.23035: 100%|██████████| 28/28 [01:31<00:00,  2.64s/it]epoch 4 loss 1.23035: 100%|██████████| 28/28 [01:31<00:00,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6671[0m
[32m  eval_f1 = 0.3746[0m
[32m  eval_mcc = 0.6485[0m
[32m  eval_precision = 0.4935[0m
[32m  eval_recall = 0.3436[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.72it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6515[0m
[32m  eval_f1 = 0.3349[0m
[32m  eval_mcc = 0.633[0m
[32m  eval_precision = 0.4505[0m
[32m  eval_recall = 0.3078[0m

