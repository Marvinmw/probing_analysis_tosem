[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/3/layer_9', posratio=0.5, seed=969, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.07386:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.07386:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.07499:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0061[0m
[32m  eval_f1 = 0.0015[0m
[32m  eval_mcc = -0.0163[0m
[32m  eval_precision = 0.0071[0m
[32m  eval_recall = 0.0035[0m
[32m  ********************[0m
[32m  Best f1:0.0015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.07499:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.06693:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.06693:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 5.05273:  11%|█         | 3/28 [00:05<00:43,  1.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0112[0m
[32m  eval_f1 = 0.0017[0m
[32m  eval_mcc = -0.0209[0m
[32m  eval_precision = 0.0151[0m
[32m  eval_recall = 0.0039[0m
[32m  ********************[0m
[32m  Best f1:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.05273:  14%|█▍        | 4/28 [00:10<01:13,  3.06s/it]epoch 0 loss 5.02719:  14%|█▍        | 4/28 [00:11<01:13,  3.06s/it]epoch 0 loss 5.02719:  18%|█▊        | 5/28 [00:11<00:48,  2.10s/it]epoch 0 loss 4.99756:  18%|█▊        | 5/28 [00:11<00:48,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.022[0m
[32m  eval_f1 = 0.0023[0m
[32m  eval_mcc = -0.029[0m
[32m  eval_precision = 0.0109[0m
[32m  eval_recall = 0.0036[0m
[32m  ********************[0m
[32m  Best f1:0.0023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.99756:  21%|██▏       | 6/28 [00:18<01:27,  3.96s/it]epoch 0 loss 4.96593:  21%|██▏       | 6/28 [00:18<01:27,  3.96s/it]epoch 0 loss 4.96593:  25%|██▌       | 7/28 [00:18<00:58,  2.80s/it]epoch 0 loss 4.92729:  25%|██▌       | 7/28 [00:19<00:58,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0354[0m
[32m  eval_f1 = 0.0032[0m
[32m  eval_mcc = -0.028[0m
[32m  eval_precision = 0.0132[0m
[32m  eval_recall = 0.0054[0m
[32m  ********************[0m
[32m  Best f1:0.0032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.92729:  29%|██▊       | 8/28 [00:24<01:10,  3.52s/it]epoch 0 loss 4.8833:  29%|██▊       | 8/28 [00:24<01:10,  3.52s/it] epoch 0 loss 4.8833:  32%|███▏      | 9/28 [00:24<00:48,  2.55s/it]epoch 0 loss 4.83315:  32%|███▏      | 9/28 [00:24<00:48,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0507[0m
[32m  eval_f1 = 0.0049[0m
[32m  eval_mcc = -0.015[0m
[32m  eval_precision = 0.0153[0m
[32m  eval_recall = 0.0085[0m
[32m  ********************[0m
[32m  Best f1:0.0049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.83315:  36%|███▌      | 10/28 [00:31<01:11,  3.99s/it]epoch 0 loss 4.78009:  36%|███▌      | 10/28 [00:32<01:11,  3.99s/it]epoch 0 loss 4.78009:  39%|███▉      | 11/28 [00:32<00:49,  2.90s/it]epoch 0 loss 4.72475:  39%|███▉      | 11/28 [00:32<00:49,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0787[0m
[32m  eval_f1 = 0.0083[0m
[32m  eval_mcc = 0.0152[0m
[32m  eval_precision = 0.0204[0m
[32m  eval_recall = 0.0129[0m
[32m  ********************[0m
[32m  Best f1:0.0083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0152[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.72475:  43%|████▎     | 12/28 [00:37<01:00,  3.76s/it]epoch 0 loss 4.66392:  43%|████▎     | 12/28 [00:38<01:00,  3.76s/it]epoch 0 loss 4.66392:  46%|████▋     | 13/28 [00:38<00:41,  2.74s/it]epoch 0 loss 4.6035:  46%|████▋     | 13/28 [00:38<00:41,  2.74s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1233[0m
[32m  eval_f1 = 0.014[0m
[32m  eval_mcc = 0.0603[0m
[32m  eval_precision = 0.0236[0m
[32m  eval_recall = 0.019[0m
[32m  ********************[0m
[32m  Best f1:0.014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0603[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.6035:  50%|█████     | 14/28 [00:47<01:05,  4.68s/it]epoch 0 loss 4.53947:  50%|█████     | 14/28 [00:47<01:05,  4.68s/it]epoch 0 loss 4.53947:  54%|█████▎    | 15/28 [00:47<00:44,  3.40s/it]epoch 0 loss 4.47627:  54%|█████▎    | 15/28 [00:48<00:44,  3.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1948[0m
[32m  eval_f1 = 0.0224[0m
[32m  eval_mcc = 0.1359[0m
[32m  eval_precision = 0.0315[0m
[32m  eval_recall = 0.0284[0m
[32m  ********************[0m
[32m  Best f1:0.0224[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.47627:  57%|█████▋    | 16/28 [00:56<00:58,  4.85s/it]epoch 0 loss 4.41163:  57%|█████▋    | 16/28 [00:56<00:58,  4.85s/it]epoch 0 loss 4.41163:  61%|██████    | 17/28 [00:56<00:38,  3.52s/it]epoch 0 loss 4.3467:  61%|██████    | 17/28 [00:56<00:38,  3.52s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2576[0m
[32m  eval_f1 = 0.0298[0m
[32m  eval_mcc = 0.2043[0m
[32m  eval_precision = 0.0381[0m
[32m  eval_recall = 0.0374[0m
[32m  ********************[0m
[32m  Best f1:0.0298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.3467:  64%|██████▍   | 18/28 [01:06<00:55,  5.53s/it]epoch 0 loss 4.28378:  64%|██████▍   | 18/28 [01:07<00:55,  5.53s/it]epoch 0 loss 4.28378:  68%|██████▊   | 19/28 [01:07<00:35,  4.00s/it]epoch 0 loss 4.22981:  68%|██████▊   | 19/28 [01:07<00:35,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2844[0m
[32m  eval_f1 = 0.0333[0m
[32m  eval_mcc = 0.2295[0m
[32m  eval_precision = 0.0528[0m
[32m  eval_recall = 0.0415[0m
[32m  ********************[0m
[32m  Best f1:0.0333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.22981:  71%|███████▏  | 20/28 [01:13<00:38,  4.82s/it]epoch 0 loss 4.16922:  71%|███████▏  | 20/28 [01:14<00:38,  4.82s/it]epoch 0 loss 4.16922:  75%|███████▌  | 21/28 [01:14<00:24,  3.50s/it]epoch 0 loss 4.12048:  75%|███████▌  | 21/28 [01:14<00:24,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3035[0m
[32m  eval_f1 = 0.0428[0m
[32m  eval_mcc = 0.2508[0m
[32m  eval_precision = 0.068[0m
[32m  eval_recall = 0.0491[0m
[32m  ********************[0m
[32m  Best f1:0.0428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.12048:  79%|███████▊  | 22/28 [01:20<00:26,  4.45s/it]epoch 0 loss 4.06434:  79%|███████▊  | 22/28 [01:21<00:26,  4.45s/it]epoch 0 loss 4.06434:  82%|████████▏ | 23/28 [01:21<00:16,  3.24s/it]epoch 0 loss 4.01044:  82%|████████▏ | 23/28 [01:21<00:16,  3.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.358[0m
[32m  eval_f1 = 0.0784[0m
[32m  eval_mcc = 0.3164[0m
[32m  eval_precision = 0.1319[0m
[32m  eval_recall = 0.0761[0m
[32m  ********************[0m
[32m  Best f1:0.0784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.01044:  86%|████████▌ | 24/28 [01:29<00:19,  4.82s/it]epoch 0 loss 3.95897:  86%|████████▌ | 24/28 [01:30<00:19,  4.82s/it]epoch 0 loss 3.95897:  89%|████████▉ | 25/28 [01:30<00:10,  3.50s/it]epoch 0 loss 3.90921:  89%|████████▉ | 25/28 [01:30<00:10,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4062[0m
[32m  eval_f1 = 0.1105[0m
[32m  eval_mcc = 0.3742[0m
[32m  eval_precision = 0.1754[0m
[32m  eval_recall = 0.1031[0m
[32m  ********************[0m
[32m  Best f1:0.1105[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3742[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.90921:  93%|█████████▎| 26/28 [01:40<00:10,  5.40s/it]epoch 0 loss 3.85565:  93%|█████████▎| 26/28 [01:40<00:10,  5.40s/it]epoch 0 loss 3.85565:  96%|█████████▋| 27/28 [01:40<00:03,  3.91s/it]epoch 0 loss 3.80242:  96%|█████████▋| 27/28 [01:40<00:03,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4454[0m
[32m  eval_f1 = 0.1366[0m
[32m  eval_mcc = 0.4148[0m
[32m  eval_precision = 0.2042[0m
[32m  eval_recall = 0.1294[0m
[32m  ********************[0m
[32m  Best f1:0.1366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.80242: 100%|██████████| 28/28 [01:48<00:00,  5.25s/it]epoch 0 loss 3.80242: 100%|██████████| 28/28 [01:48<00:00,  3.89s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.43128:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.43128:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s]epoch 1 loss 2.52856:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4848[0m
[32m  eval_f1 = 0.1597[0m
[32m  eval_mcc = 0.4523[0m
[32m  eval_precision = 0.226[0m
[32m  eval_recall = 0.1557[0m
[32m  ********************[0m
[32m  Best f1:0.1597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.52856:   7%|▋         | 2/28 [00:08<02:15,  5.20s/it]epoch 1 loss 2.40869:   7%|▋         | 2/28 [00:09<02:15,  5.20s/it]epoch 1 loss 2.40869:  11%|█         | 3/28 [00:09<01:15,  3.02s/it]epoch 1 loss 2.41068:  11%|█         | 3/28 [00:09<01:15,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.59it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.66it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.68it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.69it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.70it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.70it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.70it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.70it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.70it/s][A100%|██████████| 10/10 [00:03<00:00,  2.93it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5271[0m
[32m  eval_f1 = 0.1825[0m
[32m  eval_mcc = 0.4974[0m
[32m  eval_precision = 0.2228[0m
[32m  eval_recall = 0.1815[0m
[32m  ********************[0m
[32m  Best f1:0.1825[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4974[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.41068:  14%|█▍        | 4/28 [00:15<01:42,  4.27s/it]epoch 1 loss 2.36945:  14%|█▍        | 4/28 [00:16<01:42,  4.27s/it]epoch 1 loss 2.36945:  18%|█▊        | 5/28 [00:16<01:06,  2.89s/it]epoch 1 loss 2.32397:  18%|█▊        | 5/28 [00:16<01:06,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5504[0m
[32m  eval_f1 = 0.1921[0m
[32m  eval_mcc = 0.522[0m
[32m  eval_precision = 0.2384[0m
[32m  eval_recall = 0.1894[0m
[32m  ********************[0m
[32m  Best f1:0.1921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32397:  21%|██▏       | 6/28 [00:22<01:28,  4.02s/it]epoch 1 loss 2.27591:  21%|██▏       | 6/28 [00:22<01:28,  4.02s/it]epoch 1 loss 2.27591:  25%|██▌       | 7/28 [00:22<00:59,  2.85s/it]epoch 1 loss 2.2341:  25%|██▌       | 7/28 [00:23<00:59,  2.85s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.563[0m
[32m  eval_f1 = 0.199[0m
[32m  eval_mcc = 0.5354[0m
[32m  eval_precision = 0.2412[0m
[32m  eval_recall = 0.1941[0m
[32m  ********************[0m
[32m  Best f1:0.199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.2341:  29%|██▊       | 8/28 [00:28<01:18,  3.93s/it]epoch 1 loss 2.207:  29%|██▊       | 8/28 [00:29<01:18,  3.93s/it] epoch 1 loss 2.207:  32%|███▏      | 9/28 [00:29<00:53,  2.84s/it]epoch 1 loss 2.18347:  32%|███▏      | 9/28 [00:29<00:53,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.572[0m
[32m  eval_f1 = 0.2115[0m
[32m  eval_mcc = 0.5461[0m
[32m  eval_precision = 0.2565[0m
[32m  eval_recall = 0.2034[0m
[32m  ********************[0m
[32m  Best f1:0.2115[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.18347:  36%|███▌      | 10/28 [00:37<01:20,  4.47s/it]epoch 1 loss 2.1387:  36%|███▌      | 10/28 [00:37<01:20,  4.47s/it] epoch 1 loss 2.1387:  39%|███▉      | 11/28 [00:37<00:54,  3.23s/it]epoch 1 loss 2.10696:  39%|███▉      | 11/28 [00:38<00:54,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5775[0m
[32m  eval_f1 = 0.216[0m
[32m  eval_mcc = 0.5533[0m
[32m  eval_precision = 0.276[0m
[32m  eval_recall = 0.207[0m
[32m  ********************[0m
[32m  Best f1:0.216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.10696:  43%|████▎     | 12/28 [00:49<01:31,  5.69s/it]epoch 1 loss 2.08324:  43%|████▎     | 12/28 [00:49<01:31,  5.69s/it]epoch 1 loss 2.08324:  46%|████▋     | 13/28 [00:49<01:01,  4.10s/it]epoch 1 loss 2.07153:  46%|████▋     | 13/28 [00:50<01:01,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5834[0m
[32m  eval_f1 = 0.22[0m
[32m  eval_mcc = 0.5613[0m
[32m  eval_precision = 0.2762[0m
[32m  eval_recall = 0.2104[0m
[32m  ********************[0m
[32m  Best f1:0.22[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07153:  50%|█████     | 14/28 [01:00<01:27,  6.23s/it]epoch 1 loss 2.05043:  50%|█████     | 14/28 [01:01<01:27,  6.23s/it]epoch 1 loss 2.05043:  54%|█████▎    | 15/28 [01:01<00:58,  4.48s/it]epoch 1 loss 2.029:  54%|█████▎    | 15/28 [01:01<00:58,  4.48s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.59[0m
[32m  eval_f1 = 0.226[0m
[32m  eval_mcc = 0.5689[0m
[32m  eval_precision = 0.2891[0m
[32m  eval_recall = 0.2162[0m
[32m  ********************[0m
[32m  Best f1:0.226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5689[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.029:  57%|█████▋    | 16/28 [01:12<01:16,  6.37s/it]epoch 1 loss 2.00954:  57%|█████▋    | 16/28 [01:12<01:16,  6.37s/it]epoch 1 loss 2.00954:  61%|██████    | 17/28 [01:12<00:50,  4.58s/it]epoch 1 loss 1.99274:  61%|██████    | 17/28 [01:12<00:50,  4.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5963[0m
[32m  eval_f1 = 0.2326[0m
[32m  eval_mcc = 0.5745[0m
[32m  eval_precision = 0.3004[0m
[32m  eval_recall = 0.2217[0m
[32m  ********************[0m
[32m  Best f1:0.2326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99274:  64%|██████▍   | 18/28 [01:21<00:58,  5.85s/it]epoch 1 loss 1.9707:  64%|██████▍   | 18/28 [01:21<00:58,  5.85s/it] epoch 1 loss 1.9707:  68%|██████▊   | 19/28 [01:21<00:38,  4.22s/it]epoch 1 loss 1.95272:  68%|██████▊   | 19/28 [01:22<00:38,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.605[0m
[32m  eval_f1 = 0.2469[0m
[32m  eval_mcc = 0.5826[0m
[32m  eval_precision = 0.3287[0m
[32m  eval_recall = 0.2319[0m
[32m  ********************[0m
[32m  Best f1:0.2469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5826[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95272:  71%|███████▏  | 20/28 [01:28<00:39,  4.94s/it]epoch 1 loss 1.93716:  71%|███████▏  | 20/28 [01:28<00:39,  4.94s/it]epoch 1 loss 1.93716:  75%|███████▌  | 21/28 [01:28<00:25,  3.58s/it]epoch 1 loss 1.92882:  75%|███████▌  | 21/28 [01:29<00:25,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6072[0m
[32m  eval_f1 = 0.2582[0m
[32m  eval_mcc = 0.5839[0m
[32m  eval_precision = 0.3679[0m
[32m  eval_recall = 0.2447[0m
[32m  ********************[0m
[32m  Best f1:0.2582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5839[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92882:  79%|███████▊  | 22/28 [01:37<00:30,  5.08s/it]epoch 1 loss 1.91425:  79%|███████▊  | 22/28 [01:37<00:30,  5.08s/it]epoch 1 loss 1.91425:  82%|████████▏ | 23/28 [01:37<00:18,  3.68s/it]epoch 1 loss 1.90299:  82%|████████▏ | 23/28 [01:38<00:18,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6077[0m
[32m  eval_f1 = 0.2606[0m
[32m  eval_mcc = 0.5838[0m
[32m  eval_precision = 0.3655[0m
[32m  eval_recall = 0.2477[0m
[32m  ********************[0m
[32m  Best f1:0.2606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 1 loss 1.90299:  86%|████████▌ | 24/28 [01:45<00:19,  4.84s/it]epoch 1 loss 1.89249:  86%|████████▌ | 24/28 [01:45<00:19,  4.84s/it]epoch 1 loss 1.89249:  89%|████████▉ | 25/28 [01:45<00:10,  3.51s/it]epoch 1 loss 1.88361:  89%|████████▉ | 25/28 [01:46<00:10,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6109[0m
[32m  eval_f1 = 0.2659[0m
[32m  eval_mcc = 0.5873[0m
[32m  eval_precision = 0.3777[0m
[32m  eval_recall = 0.2536[0m
[32m  ********************[0m
[32m  Best f1:0.2659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88361:  93%|█████████▎| 26/28 [01:52<00:09,  4.50s/it]epoch 1 loss 1.8739:  93%|█████████▎| 26/28 [01:52<00:09,  4.50s/it] epoch 1 loss 1.8739:  96%|█████████▋| 27/28 [01:52<00:03,  3.27s/it]epoch 1 loss 1.86787:  96%|█████████▋| 27/28 [01:53<00:03,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6162[0m
[32m  eval_f1 = 0.2735[0m
[32m  eval_mcc = 0.594[0m
[32m  eval_precision = 0.3924[0m
[32m  eval_recall = 0.2586[0m
[32m  ********************[0m
[32m  Best f1:0.2735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.594[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86787: 100%|██████████| 28/28 [02:02<00:00,  5.14s/it]epoch 1 loss 1.86787: 100%|██████████| 28/28 [02:02<00:00,  4.37s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.52636:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.52636:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 2 loss 1.54319:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6199[0m
[32m  eval_f1 = 0.2903[0m
[32m  eval_mcc = 0.5991[0m
[32m  eval_precision = 0.4095[0m
[32m  eval_recall = 0.2721[0m
[32m  ********************[0m
[32m  Best f1:0.2903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54319:   7%|▋         | 2/28 [00:08<02:13,  5.12s/it]epoch 2 loss 1.52999:   7%|▋         | 2/28 [00:09<02:13,  5.12s/it]epoch 2 loss 1.52999:  11%|█         | 3/28 [00:09<01:14,  2.97s/it]epoch 2 loss 1.52576:  11%|█         | 3/28 [00:09<01:14,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6213[0m
[32m  eval_f1 = 0.2967[0m
[32m  eval_mcc = 0.6014[0m
[32m  eval_precision = 0.4093[0m
[32m  eval_recall = 0.2768[0m
[32m  ********************[0m
[32m  Best f1:0.2967[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52576:  14%|█▍        | 4/28 [00:17<02:05,  5.23s/it]epoch 2 loss 1.50226:  14%|█▍        | 4/28 [00:18<02:05,  5.23s/it]epoch 2 loss 1.50226:  18%|█▊        | 5/28 [00:18<01:20,  3.49s/it]epoch 2 loss 1.48294:  18%|█▊        | 5/28 [00:18<01:20,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6229[0m
[32m  eval_f1 = 0.3008[0m
[32m  eval_mcc = 0.6037[0m
[32m  eval_precision = 0.426[0m
[32m  eval_recall = 0.2792[0m
[32m  ********************[0m
[32m  Best f1:0.3008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48294:  21%|██▏       | 6/28 [00:26<01:48,  4.92s/it]epoch 2 loss 1.50311:  21%|██▏       | 6/28 [00:26<01:48,  4.92s/it]epoch 2 loss 1.50311:  25%|██▌       | 7/28 [00:26<01:12,  3.44s/it]epoch 2 loss 1.5065:  25%|██▌       | 7/28 [00:26<01:12,  3.44s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6248[0m
[32m  eval_f1 = 0.3039[0m
[32m  eval_mcc = 0.6055[0m
[32m  eval_precision = 0.4213[0m
[32m  eval_recall = 0.2824[0m
[32m  ********************[0m
[32m  Best f1:0.3039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5065:  29%|██▊       | 8/28 [00:36<01:53,  5.70s/it]epoch 2 loss 1.49825:  29%|██▊       | 8/28 [00:37<01:53,  5.70s/it]epoch 2 loss 1.49825:  32%|███▏      | 9/28 [00:37<01:16,  4.05s/it]epoch 2 loss 1.50507:  32%|███▏      | 9/28 [00:37<01:16,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.627[0m
[32m  eval_f1 = 0.3073[0m
[32m  eval_mcc = 0.6073[0m
[32m  eval_precision = 0.4252[0m
[32m  eval_recall = 0.2856[0m
[32m  ********************[0m
[32m  Best f1:0.3073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50507:  36%|███▌      | 10/28 [00:46<01:38,  5.46s/it]epoch 2 loss 1.50575:  36%|███▌      | 10/28 [00:46<01:38,  5.46s/it]epoch 2 loss 1.50575:  39%|███▉      | 11/28 [00:46<01:06,  3.92s/it]epoch 2 loss 1.50692:  39%|███▉      | 11/28 [00:46<01:06,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6296[0m
[32m  eval_f1 = 0.3102[0m
[32m  eval_mcc = 0.609[0m
[32m  eval_precision = 0.4248[0m
[32m  eval_recall = 0.2877[0m
[32m  ********************[0m
[32m  Best f1:0.3102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50692:  43%|████▎     | 12/28 [00:55<01:27,  5.44s/it]epoch 2 loss 1.51288:  43%|████▎     | 12/28 [00:55<01:27,  5.44s/it]epoch 2 loss 1.51288:  46%|████▋     | 13/28 [00:55<00:58,  3.92s/it]epoch 2 loss 1.50983:  46%|████▋     | 13/28 [00:56<00:58,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6312[0m
[32m  eval_f1 = 0.3131[0m
[32m  eval_mcc = 0.6101[0m
[32m  eval_precision = 0.4296[0m
[32m  eval_recall = 0.2894[0m
[32m  ********************[0m
[32m  Best f1:0.3131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50983:  50%|█████     | 14/28 [01:02<01:04,  4.62s/it]epoch 2 loss 1.50175:  50%|█████     | 14/28 [01:02<01:04,  4.62s/it]epoch 2 loss 1.50175:  54%|█████▎    | 15/28 [01:02<00:43,  3.36s/it]epoch 2 loss 1.49469:  54%|█████▎    | 15/28 [01:02<00:43,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6314[0m
[32m  eval_f1 = 0.3125[0m
[32m  eval_mcc = 0.6102[0m
[32m  eval_precision = 0.422[0m
[32m  eval_recall = 0.2893[0m
[32m  ********************[0m
[32m  Best MCC:0.6102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49469:  57%|█████▋    | 16/28 [01:07<00:46,  3.84s/it]epoch 2 loss 1.49297:  57%|█████▋    | 16/28 [01:07<00:46,  3.84s/it]epoch 2 loss 1.49297:  61%|██████    | 17/28 [01:07<00:30,  2.81s/it]epoch 2 loss 1.49289:  61%|██████    | 17/28 [01:08<00:30,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.634[0m
[32m  eval_f1 = 0.3169[0m
[32m  eval_mcc = 0.6132[0m
[32m  eval_precision = 0.4212[0m
[32m  eval_recall = 0.2928[0m
[32m  ********************[0m
[32m  Best f1:0.3169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49289:  64%|██████▍   | 18/28 [01:14<00:39,  3.99s/it]epoch 2 loss 1.48814:  64%|██████▍   | 18/28 [01:14<00:39,  3.99s/it]epoch 2 loss 1.48814:  68%|██████▊   | 19/28 [01:14<00:26,  2.92s/it]epoch 2 loss 1.4855:  68%|██████▊   | 19/28 [01:15<00:26,  2.92s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6375[0m
[32m  eval_f1 = 0.3229[0m
[32m  eval_mcc = 0.6174[0m
[32m  eval_precision = 0.4339[0m
[32m  eval_recall = 0.2972[0m
[32m  ********************[0m
[32m  Best f1:0.3229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6174[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4855:  71%|███████▏  | 20/28 [01:21<00:31,  3.90s/it]epoch 2 loss 1.48588:  71%|███████▏  | 20/28 [01:21<00:31,  3.90s/it]epoch 2 loss 1.48588:  75%|███████▌  | 21/28 [01:21<00:19,  2.85s/it]epoch 2 loss 1.48414:  75%|███████▌  | 21/28 [01:21<00:19,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6384[0m
[32m  eval_f1 = 0.3263[0m
[32m  eval_mcc = 0.6188[0m
[32m  eval_precision = 0.446[0m
[32m  eval_recall = 0.3006[0m
[32m  ********************[0m
[32m  Best f1:0.3263[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48414:  79%|███████▊  | 22/28 [01:27<00:23,  3.86s/it]epoch 2 loss 1.47966:  79%|███████▊  | 22/28 [01:28<00:23,  3.86s/it]epoch 2 loss 1.47966:  82%|████████▏ | 23/28 [01:28<00:14,  2.83s/it]epoch 2 loss 1.47812:  82%|████████▏ | 23/28 [01:28<00:14,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.3295[0m
[32m  eval_mcc = 0.62[0m
[32m  eval_precision = 0.4429[0m
[32m  eval_recall = 0.3034[0m
[32m  ********************[0m
[32m  Best f1:0.3295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.62[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47812:  86%|████████▌ | 24/28 [01:40<00:22,  5.58s/it]epoch 2 loss 1.47201:  86%|████████▌ | 24/28 [01:40<00:22,  5.58s/it]epoch 2 loss 1.47201:  89%|████████▉ | 25/28 [01:40<00:12,  4.04s/it]epoch 2 loss 1.47079:  89%|████████▉ | 25/28 [01:41<00:12,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6397[0m
[32m  eval_f1 = 0.3325[0m
[32m  eval_mcc = 0.62[0m
[32m  eval_precision = 0.4364[0m
[32m  eval_recall = 0.3064[0m
[32m  ********************[0m
[32m  Best f1:0.3325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.47079:  93%|█████████▎| 26/28 [01:45<00:08,  4.35s/it]epoch 2 loss 1.466:  93%|█████████▎| 26/28 [01:46<00:08,  4.35s/it]  epoch 2 loss 1.466:  96%|█████████▋| 27/28 [01:46<00:03,  3.16s/it]epoch 2 loss 1.46193:  96%|█████████▋| 27/28 [01:46<00:03,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6386[0m
[32m  eval_f1 = 0.3346[0m
[32m  eval_mcc = 0.6182[0m
[32m  eval_precision = 0.439[0m
[32m  eval_recall = 0.3078[0m
[32m  ********************[0m
[32m  Best f1:0.3346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.46193: 100%|██████████| 28/28 [01:53<00:00,  4.51s/it]epoch 2 loss 1.46193: 100%|██████████| 28/28 [01:53<00:00,  4.06s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.33512:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.33512:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 3 loss 1.40436:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6395[0m
[32m  eval_f1 = 0.335[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.4397[0m
[32m  eval_recall = 0.3082[0m
[32m  ********************[0m
[32m  Best f1:0.335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.40436:   7%|▋         | 2/28 [00:08<02:10,  5.03s/it]epoch 3 loss 1.40507:   7%|▋         | 2/28 [00:09<02:10,  5.03s/it]epoch 3 loss 1.40507:  11%|█         | 3/28 [00:09<01:13,  2.93s/it]epoch 3 loss 1.40438:  11%|█         | 3/28 [00:09<01:13,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6403[0m
[32m  eval_f1 = 0.3355[0m
[32m  eval_mcc = 0.6193[0m
[32m  eval_precision = 0.4377[0m
[32m  eval_recall = 0.309[0m
[32m  ********************[0m
[32m  Best f1:0.3355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.40438:  14%|█▍        | 4/28 [00:14<01:30,  3.79s/it]epoch 3 loss 1.38749:  14%|█▍        | 4/28 [00:14<01:30,  3.79s/it]epoch 3 loss 1.38749:  18%|█▊        | 5/28 [00:14<00:59,  2.57s/it]epoch 3 loss 1.38144:  18%|█▊        | 5/28 [00:15<00:59,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.3369[0m
[32m  eval_mcc = 0.6219[0m
[32m  eval_precision = 0.4357[0m
[32m  eval_recall = 0.3105[0m
[32m  ********************[0m
[32m  Best f1:0.3369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38144:  21%|██▏       | 6/28 [00:24<01:54,  5.19s/it]epoch 3 loss 1.3863:  21%|██▏       | 6/28 [00:25<01:54,  5.19s/it] epoch 3 loss 1.3863:  25%|██▌       | 7/28 [00:25<01:16,  3.63s/it]epoch 3 loss 1.38078:  25%|██▌       | 7/28 [00:25<01:16,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6451[0m
[32m  eval_f1 = 0.3381[0m
[32m  eval_mcc = 0.625[0m
[32m  eval_precision = 0.4462[0m
[32m  eval_recall = 0.3115[0m
[32m  ********************[0m
[32m  Best f1:0.3381[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38078:  29%|██▊       | 8/28 [00:34<01:45,  5.25s/it]epoch 3 loss 1.38005:  29%|██▊       | 8/28 [00:34<01:45,  5.25s/it]epoch 3 loss 1.38005:  32%|███▏      | 9/28 [00:34<01:11,  3.74s/it]epoch 3 loss 1.37093:  32%|███▏      | 9/28 [00:34<01:11,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6473[0m
[32m  eval_f1 = 0.3392[0m
[32m  eval_mcc = 0.6279[0m
[32m  eval_precision = 0.4475[0m
[32m  eval_recall = 0.3125[0m
[32m  ********************[0m
[32m  Best f1:0.3392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37093:  36%|███▌      | 10/28 [00:44<01:42,  5.69s/it]epoch 3 loss 1.36808:  36%|███▌      | 10/28 [00:44<01:42,  5.69s/it]epoch 3 loss 1.36808:  39%|███▉      | 11/28 [00:44<01:09,  4.08s/it]epoch 3 loss 1.373:  39%|███▉      | 11/28 [00:45<01:09,  4.08s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6483[0m
[32m  eval_f1 = 0.3392[0m
[32m  eval_mcc = 0.6294[0m
[32m  eval_precision = 0.4589[0m
[32m  eval_recall = 0.3126[0m
[32m  ********************[0m
[32m  Best f1:0.3392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.373:  43%|████▎     | 12/28 [00:53<01:27,  5.45s/it]epoch 3 loss 1.37536:  43%|████▎     | 12/28 [00:53<01:27,  5.45s/it]epoch 3 loss 1.37536:  46%|████▋     | 13/28 [00:53<00:58,  3.92s/it]epoch 3 loss 1.37651:  46%|████▋     | 13/28 [00:54<00:58,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6486[0m
[32m  eval_f1 = 0.3392[0m
[32m  eval_mcc = 0.6298[0m
[32m  eval_precision = 0.454[0m
[32m  eval_recall = 0.3123[0m
[32m  ********************[0m
[32m  Best f1:0.3392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37651:  50%|█████     | 14/28 [01:04<01:22,  5.89s/it]epoch 3 loss 1.37423:  50%|█████     | 14/28 [01:04<01:22,  5.89s/it]epoch 3 loss 1.37423:  54%|█████▎    | 15/28 [01:04<00:55,  4.24s/it]epoch 3 loss 1.37037:  54%|█████▎    | 15/28 [01:05<00:55,  4.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6484[0m
[32m  eval_f1 = 0.3398[0m
[32m  eval_mcc = 0.6295[0m
[32m  eval_precision = 0.4561[0m
[32m  eval_recall = 0.3122[0m
[32m  ********************[0m
[32m  Best f1:0.3398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.37037:  57%|█████▋    | 16/28 [01:09<00:53,  4.49s/it]epoch 3 loss 1.3649:  57%|█████▋    | 16/28 [01:10<00:53,  4.49s/it] epoch 3 loss 1.3649:  61%|██████    | 17/28 [01:10<00:35,  3.26s/it]epoch 3 loss 1.36284:  61%|██████    | 17/28 [01:10<00:35,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6487[0m
[32m  eval_f1 = 0.3408[0m
[32m  eval_mcc = 0.6297[0m
[32m  eval_precision = 0.4559[0m
[32m  eval_recall = 0.3127[0m
[32m  ********************[0m
[32m  Best f1:0.3408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.36284:  64%|██████▍   | 18/28 [01:17<00:44,  4.47s/it]epoch 3 loss 1.35776:  64%|██████▍   | 18/28 [01:17<00:44,  4.47s/it]epoch 3 loss 1.35776:  68%|██████▊   | 19/28 [01:17<00:29,  3.25s/it]epoch 3 loss 1.35573:  68%|██████▊   | 19/28 [01:18<00:29,  3.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6483[0m
[32m  eval_f1 = 0.341[0m
[32m  eval_mcc = 0.629[0m
[32m  eval_precision = 0.4609[0m
[32m  eval_recall = 0.3128[0m
[32m  ********************[0m
[32m  Best f1:0.341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.35573:  71%|███████▏  | 20/28 [01:23<00:30,  3.80s/it]epoch 3 loss 1.3626:  71%|███████▏  | 20/28 [01:23<00:30,  3.80s/it] epoch 3 loss 1.3626:  75%|███████▌  | 21/28 [01:23<00:19,  2.78s/it]epoch 3 loss 1.36262:  75%|███████▌  | 21/28 [01:23<00:19,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6492[0m
[32m  eval_f1 = 0.3452[0m
[32m  eval_mcc = 0.6298[0m
[32m  eval_precision = 0.469[0m
[32m  eval_recall = 0.3161[0m
[32m  ********************[0m
[32m  Best f1:0.3452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36262:  79%|███████▊  | 22/28 [01:33<00:29,  4.94s/it]epoch 3 loss 1.36973:  79%|███████▊  | 22/28 [01:33<00:29,  4.94s/it]epoch 3 loss 1.36973:  82%|████████▏ | 23/28 [01:33<00:17,  3.58s/it]epoch 3 loss 1.37291:  82%|████████▏ | 23/28 [01:34<00:17,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6501[0m
[32m  eval_f1 = 0.3473[0m
[32m  eval_mcc = 0.6304[0m
[32m  eval_precision = 0.4691[0m
[32m  eval_recall = 0.3184[0m
[32m  ********************[0m
[32m  Best f1:0.3473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37291:  86%|████████▌ | 24/28 [01:43<00:22,  5.54s/it]epoch 3 loss 1.37417:  86%|████████▌ | 24/28 [01:44<00:22,  5.54s/it]epoch 3 loss 1.37417:  89%|████████▉ | 25/28 [01:44<00:12,  4.01s/it]epoch 3 loss 1.36665:  89%|████████▉ | 25/28 [01:44<00:12,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6494[0m
[32m  eval_f1 = 0.3472[0m
[32m  eval_mcc = 0.6295[0m
[32m  eval_precision = 0.4601[0m
[32m  eval_recall = 0.3187[0m

epoch 3 loss 1.36665:  93%|█████████▎| 26/28 [01:48<00:07,  3.95s/it]epoch 3 loss 1.36496:  93%|█████████▎| 26/28 [01:48<00:07,  3.95s/it]epoch 3 loss 1.36496:  96%|█████████▋| 27/28 [01:48<00:02,  2.88s/it]epoch 3 loss 1.36609:  96%|█████████▋| 27/28 [01:48<00:02,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6502[0m
[32m  eval_f1 = 0.35[0m
[32m  eval_mcc = 0.6304[0m
[32m  eval_precision = 0.4694[0m
[32m  eval_recall = 0.3211[0m
[32m  ********************[0m
[32m  Best f1:0.35[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36609: 100%|██████████| 28/28 [01:56<00:00,  4.46s/it]epoch 3 loss 1.36609: 100%|██████████| 28/28 [01:56<00:00,  4.17s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.29558:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.29558:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 4 loss 1.36404:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.64it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3503[0m
[32m  eval_mcc = 0.6317[0m
[32m  eval_precision = 0.4622[0m
[32m  eval_recall = 0.3219[0m
[32m  ********************[0m
[32m  Best f1:0.3503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36404:   7%|▋         | 2/28 [00:08<02:11,  5.06s/it]epoch 4 loss 1.32088:   7%|▋         | 2/28 [00:09<02:11,  5.06s/it]epoch 4 loss 1.32088:  11%|█         | 3/28 [00:09<01:13,  2.94s/it]epoch 4 loss 1.31698:  11%|█         | 3/28 [00:09<01:13,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.652[0m
[32m  eval_f1 = 0.3504[0m
[32m  eval_mcc = 0.6324[0m
[32m  eval_precision = 0.46[0m
[32m  eval_recall = 0.3219[0m
[32m  ********************[0m
[32m  Best f1:0.3504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31698:  14%|█▍        | 4/28 [00:15<01:39,  4.13s/it]epoch 4 loss 1.32616:  14%|█▍        | 4/28 [00:15<01:39,  4.13s/it]epoch 4 loss 1.32616:  18%|█▊        | 5/28 [00:15<01:04,  2.79s/it]epoch 4 loss 1.33026:  18%|█▊        | 5/28 [00:15<01:04,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3505[0m
[32m  eval_mcc = 0.633[0m
[32m  eval_precision = 0.4596[0m
[32m  eval_recall = 0.3223[0m
[32m  ********************[0m
[32m  Best f1:0.3505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33026:  21%|██▏       | 6/28 [00:21<01:21,  3.72s/it]epoch 4 loss 1.33774:  21%|██▏       | 6/28 [00:21<01:21,  3.72s/it]epoch 4 loss 1.33774:  25%|██▌       | 7/28 [00:21<00:55,  2.65s/it]epoch 4 loss 1.34154:  25%|██▌       | 7/28 [00:21<00:55,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3505[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.462[0m
[32m  eval_recall = 0.3226[0m
[32m  ********************[0m
[32m  Best f1:0.3505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34154:  29%|██▊       | 8/28 [00:27<01:11,  3.57s/it]epoch 4 loss 1.34373:  29%|██▊       | 8/28 [00:27<01:11,  3.57s/it]epoch 4 loss 1.34373:  32%|███▏      | 9/28 [00:27<00:49,  2.59s/it]epoch 4 loss 1.33712:  32%|███▏      | 9/28 [00:27<00:49,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6532[0m
[32m  eval_f1 = 0.3514[0m
[32m  eval_mcc = 0.6337[0m
[32m  eval_precision = 0.4633[0m
[32m  eval_recall = 0.3235[0m
[32m  ********************[0m
[32m  Best f1:0.3514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33712:  36%|███▌      | 10/28 [00:33<01:06,  3.70s/it]epoch 4 loss 1.34952:  36%|███▌      | 10/28 [00:34<01:06,  3.70s/it]epoch 4 loss 1.34952:  39%|███▉      | 11/28 [00:34<00:45,  2.70s/it]epoch 4 loss 1.34469:  39%|███▉      | 11/28 [00:34<00:45,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6533[0m
[32m  eval_f1 = 0.3519[0m
[32m  eval_mcc = 0.6338[0m
[32m  eval_precision = 0.4741[0m
[32m  eval_recall = 0.3237[0m
[32m  ********************[0m
[32m  Best f1:0.3519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34469:  43%|████▎     | 12/28 [00:40<00:59,  3.74s/it]epoch 4 loss 1.34539:  43%|████▎     | 12/28 [00:40<00:59,  3.74s/it]epoch 4 loss 1.34539:  46%|████▋     | 13/28 [00:40<00:41,  2.73s/it]epoch 4 loss 1.34881:  46%|████▋     | 13/28 [00:41<00:41,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6539[0m
[32m  eval_f1 = 0.3525[0m
[32m  eval_mcc = 0.6344[0m
[32m  eval_precision = 0.4749[0m
[32m  eval_recall = 0.3243[0m
[32m  ********************[0m
[32m  Best f1:0.3525[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34881:  50%|█████     | 14/28 [00:46<00:52,  3.74s/it]epoch 4 loss 1.34256:  50%|█████     | 14/28 [00:47<00:52,  3.74s/it]epoch 4 loss 1.34256:  54%|█████▎    | 15/28 [00:47<00:35,  2.74s/it]epoch 4 loss 1.34236:  54%|█████▎    | 15/28 [00:47<00:35,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6542[0m
[32m  eval_f1 = 0.3528[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4752[0m
[32m  eval_recall = 0.3246[0m
[32m  ********************[0m
[32m  Best f1:0.3528[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34236:  57%|█████▋    | 16/28 [00:53<00:45,  3.79s/it]epoch 4 loss 1.34333:  57%|█████▋    | 16/28 [00:53<00:45,  3.79s/it]epoch 4 loss 1.34333:  61%|██████    | 17/28 [00:53<00:30,  2.78s/it]epoch 4 loss 1.34481:  61%|██████    | 17/28 [00:54<00:30,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6544[0m
[32m  eval_f1 = 0.3527[0m
[32m  eval_mcc = 0.635[0m
[32m  eval_precision = 0.4638[0m
[32m  eval_recall = 0.3248[0m
[32m  ********************[0m
[32m  Best MCC:0.635[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34481:  64%|██████▍   | 18/28 [00:58<00:33,  3.39s/it]epoch 4 loss 1.34169:  64%|██████▍   | 18/28 [00:58<00:33,  3.39s/it]epoch 4 loss 1.34169:  68%|██████▊   | 19/28 [00:58<00:22,  2.50s/it]epoch 4 loss 1.34301:  68%|██████▊   | 19/28 [00:59<00:22,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6542[0m
[32m  eval_f1 = 0.3526[0m
[32m  eval_mcc = 0.6348[0m
[32m  eval_precision = 0.464[0m
[32m  eval_recall = 0.3247[0m

epoch 4 loss 1.34301:  71%|███████▏  | 20/28 [01:02<00:23,  2.89s/it]epoch 4 loss 1.33644:  71%|███████▏  | 20/28 [01:03<00:23,  2.89s/it]epoch 4 loss 1.33644:  75%|███████▌  | 21/28 [01:03<00:14,  2.14s/it]epoch 4 loss 1.33576:  75%|███████▌  | 21/28 [01:03<00:14,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.654[0m
[32m  eval_f1 = 0.3527[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4644[0m
[32m  eval_recall = 0.3246[0m

epoch 4 loss 1.33576:  79%|███████▊  | 22/28 [01:06<00:15,  2.64s/it]epoch 4 loss 1.33112:  79%|███████▊  | 22/28 [01:07<00:15,  2.64s/it]epoch 4 loss 1.33112:  82%|████████▏ | 23/28 [01:07<00:09,  1.97s/it]epoch 4 loss 1.33175:  82%|████████▏ | 23/28 [01:07<00:09,  1.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6539[0m
[32m  eval_f1 = 0.3526[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4644[0m
[32m  eval_recall = 0.3244[0m

epoch 4 loss 1.33175:  86%|████████▌ | 24/28 [01:11<00:10,  2.52s/it]epoch 4 loss 1.33334:  86%|████████▌ | 24/28 [01:11<00:10,  2.52s/it]epoch 4 loss 1.33334:  89%|████████▉ | 25/28 [01:11<00:05,  1.88s/it]epoch 4 loss 1.33033:  89%|████████▉ | 25/28 [01:11<00:05,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6541[0m
[32m  eval_f1 = 0.3524[0m
[32m  eval_mcc = 0.6348[0m
[32m  eval_precision = 0.4641[0m
[32m  eval_recall = 0.3242[0m

epoch 4 loss 1.33033:  93%|█████████▎| 26/28 [01:15<00:04,  2.46s/it]epoch 4 loss 1.32598:  93%|█████████▎| 26/28 [01:15<00:04,  2.46s/it]epoch 4 loss 1.32598:  96%|█████████▋| 27/28 [01:15<00:01,  1.84s/it]epoch 4 loss 1.32524:  96%|█████████▋| 27/28 [01:15<00:01,  1.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6541[0m
[32m  eval_f1 = 0.3525[0m
[32m  eval_mcc = 0.6349[0m
[32m  eval_precision = 0.4643[0m
[32m  eval_recall = 0.3243[0m

epoch 4 loss 1.32524: 100%|██████████| 28/28 [01:19<00:00,  2.37s/it]epoch 4 loss 1.32524: 100%|██████████| 28/28 [01:19<00:00,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6542[0m
[32m  eval_f1 = 0.3528[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4752[0m
[32m  eval_recall = 0.3246[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.74it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.72it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6389[0m
[32m  eval_f1 = 0.3124[0m
[32m  eval_mcc = 0.6197[0m
[32m  eval_precision = 0.4246[0m
[32m  eval_recall = 0.2872[0m

