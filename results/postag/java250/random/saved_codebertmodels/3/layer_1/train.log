[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=1, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/3/layer_1', posratio=0.5, seed=969, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.0852:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.0852:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.08358:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0165[0m
[32m  eval_f1 = 0.0026[0m
[32m  eval_mcc = 0.0072[0m
[32m  eval_precision = 0.004[0m
[32m  eval_recall = 0.0042[0m
[32m  ********************[0m
[32m  Best f1:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.08358:   7%|▋         | 2/28 [00:05<01:24,  3.24s/it]epoch 0 loss 5.07485:   7%|▋         | 2/28 [00:06<01:24,  3.24s/it]epoch 0 loss 5.07485:  11%|█         | 3/28 [00:06<00:48,  1.94s/it]epoch 0 loss 5.06118:  11%|█         | 3/28 [00:06<00:48,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0243[0m
[32m  eval_f1 = 0.003[0m
[32m  eval_mcc = 0.0098[0m
[32m  eval_precision = 0.005[0m
[32m  eval_recall = 0.0048[0m
[32m  ********************[0m
[32m  Best f1:0.003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.06118:  14%|█▍        | 4/28 [00:14<01:49,  4.57s/it]epoch 0 loss 5.0362:  14%|█▍        | 4/28 [00:15<01:49,  4.57s/it] epoch 0 loss 5.0362:  18%|█▊        | 5/28 [00:15<01:10,  3.07s/it]epoch 0 loss 5.01317:  18%|█▊        | 5/28 [00:15<01:10,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0371[0m
[32m  eval_f1 = 0.0037[0m
[32m  eval_mcc = 0.0121[0m
[32m  eval_precision = 0.0063[0m
[32m  eval_recall = 0.0058[0m
[32m  ********************[0m
[32m  Best f1:0.0037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.01317:  21%|██▏       | 6/28 [00:23<01:45,  4.81s/it]epoch 0 loss 4.98169:  21%|██▏       | 6/28 [00:23<01:45,  4.81s/it]epoch 0 loss 4.98169:  25%|██▌       | 7/28 [00:23<01:10,  3.38s/it]epoch 0 loss 4.94654:  25%|██▌       | 7/28 [00:24<01:10,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0734[0m
[32m  eval_f1 = 0.0064[0m
[32m  eval_mcc = 0.0291[0m
[32m  eval_precision = 0.0111[0m
[32m  eval_recall = 0.0093[0m
[32m  ********************[0m
[32m  Best f1:0.0064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94654:  29%|██▊       | 8/28 [00:31<01:36,  4.85s/it]epoch 0 loss 4.90653:  29%|██▊       | 8/28 [00:32<01:36,  4.85s/it]epoch 0 loss 4.90653:  32%|███▏      | 9/28 [00:32<01:05,  3.47s/it]epoch 0 loss 4.86149:  32%|███▏      | 9/28 [00:32<01:05,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.112[0m
[32m  eval_f1 = 0.0116[0m
[32m  eval_mcc = 0.0512[0m
[32m  eval_precision = 0.016[0m
[32m  eval_recall = 0.0148[0m
[32m  ********************[0m
[32m  Best f1:0.0116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.86149:  36%|███▌      | 10/28 [00:38<01:20,  4.46s/it]epoch 0 loss 4.81062:  36%|███▌      | 10/28 [00:39<01:20,  4.46s/it]epoch 0 loss 4.81062:  39%|███▉      | 11/28 [00:39<00:54,  3.23s/it]epoch 0 loss 4.75836:  39%|███▉      | 11/28 [00:39<00:54,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1504[0m
[32m  eval_f1 = 0.0201[0m
[32m  eval_mcc = 0.0879[0m
[32m  eval_precision = 0.0295[0m
[32m  eval_recall = 0.0258[0m
[32m  ********************[0m
[32m  Best f1:0.0201[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.75836:  43%|████▎     | 12/28 [00:45<01:08,  4.28s/it]epoch 0 loss 4.69765:  43%|████▎     | 12/28 [00:46<01:08,  4.28s/it]epoch 0 loss 4.69765:  46%|████▋     | 13/28 [00:46<00:46,  3.11s/it]epoch 0 loss 4.63722:  46%|████▋     | 13/28 [00:46<00:46,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1883[0m
[32m  eval_f1 = 0.0252[0m
[32m  eval_mcc = 0.1291[0m
[32m  eval_precision = 0.0395[0m
[32m  eval_recall = 0.0314[0m
[32m  ********************[0m
[32m  Best f1:0.0252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.63722:  50%|█████     | 14/28 [00:53<00:58,  4.21s/it]epoch 0 loss 4.57169:  50%|█████     | 14/28 [00:53<00:58,  4.21s/it]epoch 0 loss 4.57169:  54%|█████▎    | 15/28 [00:53<00:39,  3.07s/it]epoch 0 loss 4.50406:  54%|█████▎    | 15/28 [00:53<00:39,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2346[0m
[32m  eval_f1 = 0.0376[0m
[32m  eval_mcc = 0.1804[0m
[32m  eval_precision = 0.0592[0m
[32m  eval_recall = 0.0425[0m
[32m  ********************[0m
[32m  Best f1:0.0376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1804[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.50406:  57%|█████▋    | 16/28 [01:00<00:50,  4.20s/it]epoch 0 loss 4.43594:  57%|█████▋    | 16/28 [01:00<00:50,  4.20s/it]epoch 0 loss 4.43594:  61%|██████    | 17/28 [01:00<00:33,  3.07s/it]epoch 0 loss 4.36504:  61%|██████    | 17/28 [01:01<00:33,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2896[0m
[32m  eval_f1 = 0.0545[0m
[32m  eval_mcc = 0.2415[0m
[32m  eval_precision = 0.092[0m
[32m  eval_recall = 0.0557[0m
[32m  ********************[0m
[32m  Best f1:0.0545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.36504:  64%|██████▍   | 18/28 [01:09<00:47,  4.71s/it]epoch 0 loss 4.29526:  64%|██████▍   | 18/28 [01:09<00:47,  4.71s/it]epoch 0 loss 4.29526:  68%|██████▊   | 19/28 [01:09<00:30,  3.42s/it]epoch 0 loss 4.23356:  68%|██████▊   | 19/28 [01:10<00:30,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3379[0m
[32m  eval_f1 = 0.0744[0m
[32m  eval_mcc = 0.2927[0m
[32m  eval_precision = 0.1096[0m
[32m  eval_recall = 0.0731[0m
[32m  ********************[0m
[32m  Best f1:0.0744[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.23356:  71%|███████▏  | 20/28 [01:17<00:38,  4.77s/it]epoch 0 loss 4.16464:  71%|███████▏  | 20/28 [01:18<00:38,  4.77s/it]epoch 0 loss 4.16464:  75%|███████▌  | 21/28 [01:18<00:24,  3.46s/it]epoch 0 loss 4.10444:  75%|███████▌  | 21/28 [01:18<00:24,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3875[0m
[32m  eval_f1 = 0.0976[0m
[32m  eval_mcc = 0.3457[0m
[32m  eval_precision = 0.1447[0m
[32m  eval_recall = 0.0944[0m
[32m  ********************[0m
[32m  Best f1:0.0976[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3457[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.10444:  79%|███████▊  | 22/28 [01:26<00:29,  4.92s/it]epoch 0 loss 4.03827:  79%|███████▊  | 22/28 [01:26<00:29,  4.92s/it]epoch 0 loss 4.03827:  82%|████████▏ | 23/28 [01:26<00:17,  3.57s/it]epoch 0 loss 3.97456:  82%|████████▏ | 23/28 [01:27<00:17,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4255[0m
[32m  eval_f1 = 0.1167[0m
[32m  eval_mcc = 0.3885[0m
[32m  eval_precision = 0.1645[0m
[32m  eval_recall = 0.1151[0m
[32m  ********************[0m
[32m  Best f1:0.1167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3885[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.97456:  86%|████████▌ | 24/28 [01:35<00:20,  5.08s/it]epoch 0 loss 3.91381:  86%|████████▌ | 24/28 [01:35<00:20,  5.08s/it]epoch 0 loss 3.91381:  89%|████████▉ | 25/28 [01:35<00:11,  3.68s/it]epoch 0 loss 3.85415:  89%|████████▉ | 25/28 [01:36<00:11,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4609[0m
[32m  eval_f1 = 0.1358[0m
[32m  eval_mcc = 0.4298[0m
[32m  eval_precision = 0.2065[0m
[32m  eval_recall = 0.1327[0m
[32m  ********************[0m
[32m  Best f1:0.1358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.85415:  93%|█████████▎| 26/28 [01:44<00:10,  5.21s/it]epoch 0 loss 3.7913:  93%|█████████▎| 26/28 [01:45<00:10,  5.21s/it] epoch 0 loss 3.7913:  96%|█████████▋| 27/28 [01:45<00:03,  3.77s/it]epoch 0 loss 3.72948:  96%|█████████▋| 27/28 [01:45<00:03,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4976[0m
[32m  eval_f1 = 0.1584[0m
[32m  eval_mcc = 0.4701[0m
[32m  eval_precision = 0.2248[0m
[32m  eval_recall = 0.1513[0m
[32m  ********************[0m
[32m  Best f1:0.1584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4701[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.72948: 100%|██████████| 28/28 [01:53<00:00,  5.25s/it]epoch 0 loss 3.72948: 100%|██████████| 28/28 [01:53<00:00,  4.06s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.10566:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.10566:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s]epoch 1 loss 2.19516:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5357[0m
[32m  eval_f1 = 0.1819[0m
[32m  eval_mcc = 0.5095[0m
[32m  eval_precision = 0.2468[0m
[32m  eval_recall = 0.1761[0m
[32m  ********************[0m
[32m  Best f1:0.1819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5095[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.19516:   7%|▋         | 2/28 [00:08<02:15,  5.21s/it]epoch 1 loss 2.07592:   7%|▋         | 2/28 [00:09<02:15,  5.21s/it]epoch 1 loss 2.07592:  11%|█         | 3/28 [00:09<01:15,  3.02s/it]epoch 1 loss 2.09227:  11%|█         | 3/28 [00:09<01:15,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5583[0m
[32m  eval_f1 = 0.1987[0m
[32m  eval_mcc = 0.5326[0m
[32m  eval_precision = 0.2436[0m
[32m  eval_recall = 0.1965[0m
[32m  ********************[0m
[32m  Best f1:0.1987[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09227:  14%|█▍        | 4/28 [00:17<01:58,  4.95s/it]epoch 1 loss 2.04888:  14%|█▍        | 4/28 [00:17<01:58,  4.95s/it]epoch 1 loss 2.04888:  18%|█▊        | 5/28 [00:17<01:16,  3.32s/it]epoch 1 loss 2.00607:  18%|█▊        | 5/28 [00:18<01:16,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5811[0m
[32m  eval_f1 = 0.2184[0m
[32m  eval_mcc = 0.5569[0m
[32m  eval_precision = 0.2783[0m
[32m  eval_recall = 0.216[0m
[32m  ********************[0m
[32m  Best f1:0.2184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5569[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00607:  21%|██▏       | 6/28 [00:23<01:34,  4.28s/it]epoch 1 loss 1.96382:  21%|██▏       | 6/28 [00:24<01:34,  4.28s/it]epoch 1 loss 1.96382:  25%|██▌       | 7/28 [00:24<01:03,  3.02s/it]epoch 1 loss 1.9259:  25%|██▌       | 7/28 [00:24<01:03,  3.02s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5924[0m
[32m  eval_f1 = 0.2279[0m
[32m  eval_mcc = 0.5685[0m
[32m  eval_precision = 0.3065[0m
[32m  eval_recall = 0.2209[0m
[32m  ********************[0m
[32m  Best f1:0.2279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9259:  29%|██▊       | 8/28 [00:33<01:37,  4.90s/it]epoch 1 loss 1.90116:  29%|██▊       | 8/28 [00:33<01:37,  4.90s/it]epoch 1 loss 1.90116:  32%|███▏      | 9/28 [00:33<01:06,  3.50s/it]epoch 1 loss 1.87898:  32%|███▏      | 9/28 [00:34<01:06,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5992[0m
[32m  eval_f1 = 0.2346[0m
[32m  eval_mcc = 0.5762[0m
[32m  eval_precision = 0.3291[0m
[32m  eval_recall = 0.2242[0m
[32m  ********************[0m
[32m  Best f1:0.2346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5762[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87898:  36%|███▌      | 10/28 [00:40<01:18,  4.38s/it]epoch 1 loss 1.83576:  36%|███▌      | 10/28 [00:40<01:18,  4.38s/it]epoch 1 loss 1.83576:  39%|███▉      | 11/28 [00:40<00:53,  3.17s/it]epoch 1 loss 1.80763:  39%|███▉      | 11/28 [00:40<00:53,  3.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6056[0m
[32m  eval_f1 = 0.2455[0m
[32m  eval_mcc = 0.5832[0m
[32m  eval_precision = 0.3424[0m
[32m  eval_recall = 0.2308[0m
[32m  ********************[0m
[32m  Best f1:0.2455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80763:  43%|████▎     | 12/28 [00:49<01:19,  4.94s/it]epoch 1 loss 1.78765:  43%|████▎     | 12/28 [00:49<01:19,  4.94s/it]epoch 1 loss 1.78765:  46%|████▋     | 13/28 [00:49<00:53,  3.58s/it]epoch 1 loss 1.77835:  46%|████▋     | 13/28 [00:50<00:53,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6097[0m
[32m  eval_f1 = 0.2566[0m
[32m  eval_mcc = 0.5882[0m
[32m  eval_precision = 0.3737[0m
[32m  eval_recall = 0.2376[0m
[32m  ********************[0m
[32m  Best f1:0.2566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5882[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77835:  50%|█████     | 14/28 [00:56<01:01,  4.41s/it]epoch 1 loss 1.75965:  50%|█████     | 14/28 [00:56<01:01,  4.41s/it]epoch 1 loss 1.75965:  54%|█████▎    | 15/28 [00:56<00:41,  3.21s/it]epoch 1 loss 1.74106:  54%|█████▎    | 15/28 [00:57<00:41,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6144[0m
[32m  eval_f1 = 0.2702[0m
[32m  eval_mcc = 0.5935[0m
[32m  eval_precision = 0.3802[0m
[32m  eval_recall = 0.2482[0m
[32m  ********************[0m
[32m  Best f1:0.2702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74106:  57%|█████▋    | 16/28 [01:04<00:56,  4.74s/it]epoch 1 loss 1.72423:  57%|█████▋    | 16/28 [01:05<00:56,  4.74s/it]epoch 1 loss 1.72423:  61%|██████    | 17/28 [01:05<00:37,  3.44s/it]epoch 1 loss 1.70978:  61%|██████    | 17/28 [01:05<00:37,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6181[0m
[32m  eval_f1 = 0.2885[0m
[32m  eval_mcc = 0.5975[0m
[32m  eval_precision = 0.3819[0m
[32m  eval_recall = 0.2661[0m
[32m  ********************[0m
[32m  Best f1:0.2885[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.70978:  64%|██████▍   | 18/28 [01:16<00:58,  5.89s/it]epoch 1 loss 1.69048:  64%|██████▍   | 18/28 [01:17<00:58,  5.89s/it]epoch 1 loss 1.69048:  68%|██████▊   | 19/28 [01:17<00:38,  4.25s/it]epoch 1 loss 1.67543:  68%|██████▊   | 19/28 [01:17<00:38,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6254[0m
[32m  eval_f1 = 0.3086[0m
[32m  eval_mcc = 0.6049[0m
[32m  eval_precision = 0.4059[0m
[32m  eval_recall = 0.2842[0m
[32m  ********************[0m
[32m  Best f1:0.3086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.67543:  71%|███████▏  | 20/28 [01:26<00:46,  5.76s/it]epoch 1 loss 1.66296:  71%|███████▏  | 20/28 [01:27<00:46,  5.76s/it]epoch 1 loss 1.66296:  75%|███████▌  | 21/28 [01:27<00:29,  4.16s/it]epoch 1 loss 1.65678:  75%|███████▌  | 21/28 [01:27<00:29,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.55it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.64it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.65it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.69it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6315[0m
[32m  eval_f1 = 0.3154[0m
[32m  eval_mcc = 0.6106[0m
[32m  eval_precision = 0.4042[0m
[32m  eval_recall = 0.2919[0m
[32m  ********************[0m
[32m  Best f1:0.3154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.65678:  79%|███████▊  | 22/28 [01:38<00:37,  6.29s/it]epoch 1 loss 1.6442:  79%|███████▊  | 22/28 [01:38<00:37,  6.29s/it] epoch 1 loss 1.6442:  82%|████████▏ | 23/28 [01:38<00:22,  4.53s/it]epoch 1 loss 1.63534:  82%|████████▏ | 23/28 [01:39<00:22,  4.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6338[0m
[32m  eval_f1 = 0.3236[0m
[32m  eval_mcc = 0.6124[0m
[32m  eval_precision = 0.4342[0m
[32m  eval_recall = 0.299[0m
[32m  ********************[0m
[32m  Best f1:0.3236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6124[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.63534:  86%|████████▌ | 24/28 [01:50<00:26,  6.63s/it]epoch 1 loss 1.62699:  86%|████████▌ | 24/28 [01:50<00:26,  6.63s/it]epoch 1 loss 1.62699:  89%|████████▉ | 25/28 [01:50<00:14,  4.76s/it]epoch 1 loss 1.61946:  89%|████████▉ | 25/28 [01:51<00:14,  4.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6366[0m
[32m  eval_f1 = 0.3299[0m
[32m  eval_mcc = 0.6151[0m
[32m  eval_precision = 0.4418[0m
[32m  eval_recall = 0.304[0m
[32m  ********************[0m
[32m  Best f1:0.3299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.61946:  93%|█████████▎| 26/28 [01:59<00:12,  6.08s/it]epoch 1 loss 1.61068:  93%|█████████▎| 26/28 [02:00<00:12,  6.08s/it]epoch 1 loss 1.61068:  96%|█████████▋| 27/28 [02:00<00:04,  4.38s/it]epoch 1 loss 1.60585:  96%|█████████▋| 27/28 [02:00<00:04,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.57it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6431[0m
[32m  eval_f1 = 0.3345[0m
[32m  eval_mcc = 0.6224[0m
[32m  eval_precision = 0.436[0m
[32m  eval_recall = 0.3098[0m
[32m  ********************[0m
[32m  Best f1:0.3345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6224[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.60585: 100%|██████████| 28/28 [02:11<00:00,  6.36s/it]epoch 1 loss 1.60585: 100%|██████████| 28/28 [02:11<00:00,  4.69s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.31875:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.31875:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 2 loss 1.3307:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6467[0m
[32m  eval_f1 = 0.3374[0m
[32m  eval_mcc = 0.6265[0m
[32m  eval_precision = 0.4305[0m
[32m  eval_recall = 0.3144[0m
[32m  ********************[0m
[32m  Best f1:0.3374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3307:   7%|▋         | 2/28 [00:08<02:15,  5.20s/it]epoch 2 loss 1.31971:   7%|▋         | 2/28 [00:09<02:15,  5.20s/it]epoch 2 loss 1.31971:  11%|█         | 3/28 [00:09<01:15,  3.02s/it]epoch 2 loss 1.31497:  11%|█         | 3/28 [00:09<01:15,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3409[0m
[32m  eval_mcc = 0.6302[0m
[32m  eval_precision = 0.4348[0m
[32m  eval_recall = 0.3182[0m
[32m  ********************[0m
[32m  Best f1:0.3409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31497:  14%|█▍        | 4/28 [00:19<02:21,  5.90s/it]epoch 2 loss 1.29396:  14%|█▍        | 4/28 [00:20<02:21,  5.90s/it]epoch 2 loss 1.29396:  18%|█▊        | 5/28 [00:20<01:30,  3.92s/it]epoch 2 loss 1.2753:  18%|█▊        | 5/28 [00:20<01:30,  3.92s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6511[0m
[32m  eval_f1 = 0.3401[0m
[32m  eval_mcc = 0.6324[0m
[32m  eval_precision = 0.4318[0m
[32m  eval_recall = 0.3177[0m
[32m  ********************[0m
[32m  Best MCC:0.6324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2753:  21%|██▏       | 6/28 [00:26<01:47,  4.90s/it]epoch 2 loss 1.29695:  21%|██▏       | 6/28 [00:27<01:47,  4.90s/it]epoch 2 loss 1.29695:  25%|██▌       | 7/28 [00:27<01:12,  3.44s/it]epoch 2 loss 1.302:  25%|██▌       | 7/28 [00:27<01:12,  3.44s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.62it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6515[0m
[32m  eval_f1 = 0.343[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4505[0m
[32m  eval_recall = 0.3197[0m
[32m  ********************[0m
[32m  Best f1:0.343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.302:  29%|██▊       | 8/28 [00:35<01:40,  5.04s/it]epoch 2 loss 1.29476:  29%|██▊       | 8/28 [00:36<01:40,  5.04s/it]epoch 2 loss 1.29476:  32%|███▏      | 9/28 [00:36<01:08,  3.60s/it]epoch 2 loss 1.2995:  32%|███▏      | 9/28 [00:36<01:08,  3.60s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6531[0m
[32m  eval_f1 = 0.347[0m
[32m  eval_mcc = 0.6351[0m
[32m  eval_precision = 0.4657[0m
[32m  eval_recall = 0.3224[0m
[32m  ********************[0m
[32m  Best f1:0.347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2995:  36%|███▌      | 10/28 [00:43<01:23,  4.66s/it]epoch 2 loss 1.30055:  36%|███▌      | 10/28 [00:43<01:23,  4.66s/it]epoch 2 loss 1.30055:  39%|███▉      | 11/28 [00:43<00:57,  3.36s/it]epoch 2 loss 1.30165:  39%|███▉      | 11/28 [00:44<00:57,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6555[0m
[32m  eval_f1 = 0.3506[0m
[32m  eval_mcc = 0.6371[0m
[32m  eval_precision = 0.4711[0m
[32m  eval_recall = 0.3246[0m
[32m  ********************[0m
[32m  Best f1:0.3506[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30165:  43%|████▎     | 12/28 [00:52<01:19,  4.97s/it]epoch 2 loss 1.30728:  43%|████▎     | 12/28 [00:52<01:19,  4.97s/it]epoch 2 loss 1.30728:  46%|████▋     | 13/28 [00:52<00:53,  3.60s/it]epoch 2 loss 1.30468:  46%|████▋     | 13/28 [00:53<00:53,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6584[0m
[32m  eval_f1 = 0.357[0m
[32m  eval_mcc = 0.6397[0m
[32m  eval_precision = 0.4732[0m
[32m  eval_recall = 0.3298[0m
[32m  ********************[0m
[32m  Best f1:0.357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6397[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30468:  50%|█████     | 14/28 [01:00<01:09,  4.94s/it]epoch 2 loss 1.29789:  50%|█████     | 14/28 [01:01<01:09,  4.94s/it]epoch 2 loss 1.29789:  54%|█████▎    | 15/28 [01:01<00:46,  3.58s/it]epoch 2 loss 1.29111:  54%|█████▎    | 15/28 [01:01<00:46,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3612[0m
[32m  eval_mcc = 0.639[0m
[32m  eval_precision = 0.4706[0m
[32m  eval_recall = 0.3327[0m
[32m  ********************[0m
[32m  Best f1:0.3612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.29111:  57%|█████▋    | 16/28 [01:06<00:48,  4.04s/it]epoch 2 loss 1.2896:  57%|█████▋    | 16/28 [01:06<00:48,  4.04s/it] epoch 2 loss 1.2896:  61%|██████    | 17/28 [01:06<00:32,  2.94s/it]epoch 2 loss 1.29085:  61%|██████    | 17/28 [01:07<00:32,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3642[0m
[32m  eval_mcc = 0.6398[0m
[32m  eval_precision = 0.4686[0m
[32m  eval_recall = 0.3357[0m
[32m  ********************[0m
[32m  Best f1:0.3642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29085:  64%|██████▍   | 18/28 [01:17<00:52,  5.22s/it]epoch 2 loss 1.28651:  64%|██████▍   | 18/28 [01:17<00:52,  5.22s/it]epoch 2 loss 1.28651:  68%|██████▊   | 19/28 [01:17<00:34,  3.78s/it]epoch 2 loss 1.28409:  68%|██████▊   | 19/28 [01:18<00:34,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6611[0m
[32m  eval_f1 = 0.3698[0m
[32m  eval_mcc = 0.6422[0m
[32m  eval_precision = 0.4665[0m
[32m  eval_recall = 0.3413[0m
[32m  ********************[0m
[32m  Best f1:0.3698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6422[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28409:  71%|███████▏  | 20/28 [01:26<00:41,  5.18s/it]epoch 2 loss 1.2852:  71%|███████▏  | 20/28 [01:26<00:41,  5.18s/it] epoch 2 loss 1.2852:  75%|███████▌  | 21/28 [01:26<00:26,  3.75s/it]epoch 2 loss 1.28442:  75%|███████▌  | 21/28 [01:26<00:26,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6646[0m
[32m  eval_f1 = 0.3747[0m
[32m  eval_mcc = 0.6458[0m
[32m  eval_precision = 0.4707[0m
[32m  eval_recall = 0.346[0m
[32m  ********************[0m
[32m  Best f1:0.3747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28442:  79%|███████▊  | 22/28 [01:34<00:29,  4.91s/it]epoch 2 loss 1.2812:  79%|███████▊  | 22/28 [01:34<00:29,  4.91s/it] epoch 2 loss 1.2812:  82%|████████▏ | 23/28 [01:34<00:17,  3.56s/it]epoch 2 loss 1.28028:  82%|████████▏ | 23/28 [01:34<00:17,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6659[0m
[32m  eval_f1 = 0.3799[0m
[32m  eval_mcc = 0.6471[0m
[32m  eval_precision = 0.4895[0m
[32m  eval_recall = 0.3494[0m
[32m  ********************[0m
[32m  Best f1:0.3799[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28028:  86%|████████▌ | 24/28 [01:43<00:20,  5.10s/it]epoch 2 loss 1.27461:  86%|████████▌ | 24/28 [01:43<00:20,  5.10s/it]epoch 2 loss 1.27461:  89%|████████▉ | 25/28 [01:43<00:11,  3.70s/it]epoch 2 loss 1.27299:  89%|████████▉ | 25/28 [01:44<00:11,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6662[0m
[32m  eval_f1 = 0.3782[0m
[32m  eval_mcc = 0.6474[0m
[32m  eval_precision = 0.4881[0m
[32m  eval_recall = 0.3483[0m
[32m  ********************[0m
[32m  Best MCC:0.6474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27299:  93%|█████████▎| 26/28 [01:51<00:09,  4.95s/it]epoch 2 loss 1.26911:  93%|█████████▎| 26/28 [01:52<00:09,  4.95s/it]epoch 2 loss 1.26911:  96%|█████████▋| 27/28 [01:52<00:03,  3.59s/it]epoch 2 loss 1.26526:  96%|█████████▋| 27/28 [01:52<00:03,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3787[0m
[32m  eval_mcc = 0.6478[0m
[32m  eval_precision = 0.4885[0m
[32m  eval_recall = 0.3486[0m
[32m  ********************[0m
[32m  Best MCC:0.6478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26526: 100%|██████████| 28/28 [01:56<00:00,  3.94s/it]epoch 2 loss 1.26526: 100%|██████████| 28/28 [01:56<00:00,  4.17s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.15221:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.15221:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s]epoch 3 loss 1.21272:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6674[0m
[32m  eval_f1 = 0.3774[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.4972[0m
[32m  eval_recall = 0.3476[0m
[32m  ********************[0m
[32m  Best MCC:0.6484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21272:   7%|▋         | 2/28 [00:05<01:17,  2.99s/it]epoch 3 loss 1.20913:   7%|▋         | 2/28 [00:05<01:17,  2.99s/it]epoch 3 loss 1.20913:  11%|█         | 3/28 [00:05<00:45,  1.81s/it]epoch 3 loss 1.20953:  11%|█         | 3/28 [00:06<00:45,  1.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6684[0m
[32m  eval_f1 = 0.3786[0m
[32m  eval_mcc = 0.6493[0m
[32m  eval_precision = 0.5[0m
[32m  eval_recall = 0.3484[0m
[32m  ********************[0m
[32m  Best MCC:0.6493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20953:  14%|█▍        | 4/28 [00:10<01:10,  2.93s/it]epoch 3 loss 1.1979:  14%|█▍        | 4/28 [00:10<01:10,  2.93s/it] epoch 3 loss 1.1979:  18%|█▊        | 5/28 [00:10<00:46,  2.02s/it]epoch 3 loss 1.1905:  18%|█▊        | 5/28 [00:11<00:46,  2.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6683[0m
[32m  eval_f1 = 0.3797[0m
[32m  eval_mcc = 0.6492[0m
[32m  eval_precision = 0.4992[0m
[32m  eval_recall = 0.3499[0m

epoch 3 loss 1.1905:  21%|██▏       | 6/28 [00:14<00:57,  2.62s/it]epoch 3 loss 1.19762:  21%|██▏       | 6/28 [00:14<00:57,  2.62s/it]epoch 3 loss 1.19762:  25%|██▌       | 7/28 [00:14<00:39,  1.90s/it]epoch 3 loss 1.19162:  25%|██▌       | 7/28 [00:15<00:39,  1.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6693[0m
[32m  eval_f1 = 0.3808[0m
[32m  eval_mcc = 0.6506[0m
[32m  eval_precision = 0.5006[0m
[32m  eval_recall = 0.351[0m
[32m  ********************[0m
[32m  Best f1:0.3808[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6506[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19162:  29%|██▊       | 8/28 [00:21<01:05,  3.30s/it]epoch 3 loss 1.19034:  29%|██▊       | 8/28 [00:21<01:05,  3.30s/it]epoch 3 loss 1.19034:  32%|███▏      | 9/28 [00:21<00:45,  2.40s/it]epoch 3 loss 1.18223:  32%|███▏      | 9/28 [00:21<00:45,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6704[0m
[32m  eval_f1 = 0.3821[0m
[32m  eval_mcc = 0.652[0m
[32m  eval_precision = 0.5044[0m
[32m  eval_recall = 0.3519[0m
[32m  ********************[0m
[32m  Best f1:0.3821[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18223:  36%|███▌      | 10/28 [00:27<01:01,  3.39s/it]epoch 3 loss 1.18043:  36%|███▌      | 10/28 [00:27<01:01,  3.39s/it]epoch 3 loss 1.18043:  39%|███▉      | 11/28 [00:27<00:42,  2.48s/it]epoch 3 loss 1.1829:  39%|███▉      | 11/28 [00:28<00:42,  2.48s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6718[0m
[32m  eval_f1 = 0.383[0m
[32m  eval_mcc = 0.6538[0m
[32m  eval_precision = 0.5065[0m
[32m  eval_recall = 0.3525[0m
[32m  ********************[0m
[32m  Best f1:0.383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1829:  43%|████▎     | 12/28 [00:33<00:58,  3.66s/it]epoch 3 loss 1.18539:  43%|████▎     | 12/28 [00:34<00:58,  3.66s/it]epoch 3 loss 1.18539:  46%|████▋     | 13/28 [00:34<00:40,  2.68s/it]epoch 3 loss 1.1881:  46%|████▋     | 13/28 [00:34<00:40,  2.68s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6727[0m
[32m  eval_f1 = 0.3837[0m
[32m  eval_mcc = 0.6548[0m
[32m  eval_precision = 0.5021[0m
[32m  eval_recall = 0.3528[0m
[32m  ********************[0m
[32m  Best f1:0.3837[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6548[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1881:  50%|█████     | 14/28 [00:40<00:53,  3.80s/it]epoch 3 loss 1.1852:  50%|█████     | 14/28 [00:41<00:53,  3.80s/it]epoch 3 loss 1.1852:  54%|█████▎    | 15/28 [00:41<00:36,  2.78s/it]epoch 3 loss 1.18297:  54%|█████▎    | 15/28 [00:41<00:36,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3842[0m
[32m  eval_mcc = 0.6551[0m
[32m  eval_precision = 0.5016[0m
[32m  eval_recall = 0.3534[0m
[32m  ********************[0m
[32m  Best f1:0.3842[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18297:  57%|█████▋    | 16/28 [00:47<00:46,  3.85s/it]epoch 3 loss 1.17817:  57%|█████▋    | 16/28 [00:47<00:46,  3.85s/it]epoch 3 loss 1.17817:  61%|██████    | 17/28 [00:47<00:31,  2.82s/it]epoch 3 loss 1.17647:  61%|██████    | 17/28 [00:48<00:31,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6722[0m
[32m  eval_f1 = 0.3862[0m
[32m  eval_mcc = 0.6543[0m
[32m  eval_precision = 0.4948[0m
[32m  eval_recall = 0.355[0m
[32m  ********************[0m
[32m  Best f1:0.3862[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.17647:  64%|██████▍   | 18/28 [00:52<00:34,  3.46s/it]epoch 3 loss 1.17212:  64%|██████▍   | 18/28 [00:53<00:34,  3.46s/it]epoch 3 loss 1.17212:  68%|██████▊   | 19/28 [00:53<00:22,  2.54s/it]epoch 3 loss 1.17041:  68%|██████▊   | 19/28 [00:53<00:22,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6723[0m
[32m  eval_f1 = 0.3865[0m
[32m  eval_mcc = 0.6542[0m
[32m  eval_precision = 0.4946[0m
[32m  eval_recall = 0.3551[0m
[32m  ********************[0m
[32m  Best f1:0.3865[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.17041:  71%|███████▏  | 20/28 [00:58<00:26,  3.27s/it]epoch 3 loss 1.17661:  71%|███████▏  | 20/28 [00:58<00:26,  3.27s/it]epoch 3 loss 1.17661:  75%|███████▌  | 21/28 [00:58<00:16,  2.41s/it]epoch 3 loss 1.17597:  75%|███████▌  | 21/28 [00:59<00:16,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3883[0m
[32m  eval_mcc = 0.6549[0m
[32m  eval_precision = 0.4919[0m
[32m  eval_recall = 0.3583[0m
[32m  ********************[0m
[32m  Best f1:0.3883[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.17597:  79%|███████▊  | 22/28 [01:03<00:19,  3.17s/it]epoch 3 loss 1.18237:  79%|███████▊  | 22/28 [01:04<00:19,  3.17s/it]epoch 3 loss 1.18237:  82%|████████▏ | 23/28 [01:04<00:11,  2.34s/it]epoch 3 loss 1.18599:  82%|████████▏ | 23/28 [01:04<00:11,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6739[0m
[32m  eval_f1 = 0.3886[0m
[32m  eval_mcc = 0.6556[0m
[32m  eval_precision = 0.4891[0m
[32m  eval_recall = 0.3588[0m
[32m  ********************[0m
[32m  Best f1:0.3886[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18599:  86%|████████▌ | 24/28 [01:10<00:14,  3.54s/it]epoch 3 loss 1.18661:  86%|████████▌ | 24/28 [01:10<00:14,  3.54s/it]epoch 3 loss 1.18661:  89%|████████▉ | 25/28 [01:10<00:07,  2.61s/it]epoch 3 loss 1.17966:  89%|████████▉ | 25/28 [01:11<00:07,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6751[0m
[32m  eval_f1 = 0.3894[0m
[32m  eval_mcc = 0.6568[0m
[32m  eval_precision = 0.488[0m
[32m  eval_recall = 0.3599[0m
[32m  ********************[0m
[32m  Best f1:0.3894[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17966:  93%|█████████▎| 26/28 [01:16<00:07,  3.64s/it]epoch 3 loss 1.17842:  93%|█████████▎| 26/28 [01:17<00:07,  3.64s/it]epoch 3 loss 1.17842:  96%|█████████▋| 27/28 [01:17<00:02,  2.68s/it]epoch 3 loss 1.17992:  96%|█████████▋| 27/28 [01:17<00:02,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6752[0m
[32m  eval_f1 = 0.3899[0m
[32m  eval_mcc = 0.6569[0m
[32m  eval_precision = 0.4873[0m
[32m  eval_recall = 0.3602[0m
[32m  ********************[0m
[32m  Best f1:0.3899[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6569[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17992: 100%|██████████| 28/28 [01:23<00:00,  3.69s/it]epoch 3 loss 1.17992: 100%|██████████| 28/28 [01:23<00:00,  2.98s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.11808:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.11808:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.19549:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6757[0m
[32m  eval_f1 = 0.3901[0m
[32m  eval_mcc = 0.6574[0m
[32m  eval_precision = 0.4869[0m
[32m  eval_recall = 0.3603[0m
[32m  ********************[0m
[32m  Best f1:0.3901[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19549:   7%|▋         | 2/28 [00:06<01:40,  3.86s/it]epoch 4 loss 1.15044:   7%|▋         | 2/28 [00:07<01:40,  3.86s/it]epoch 4 loss 1.15044:  11%|█         | 3/28 [00:07<00:57,  2.29s/it]epoch 4 loss 1.14428:  11%|█         | 3/28 [00:07<00:57,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6762[0m
[32m  eval_f1 = 0.391[0m
[32m  eval_mcc = 0.658[0m
[32m  eval_precision = 0.4907[0m
[32m  eval_recall = 0.3611[0m
[32m  ********************[0m
[32m  Best f1:0.391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14428:  14%|█▍        | 4/28 [00:13<01:33,  3.88s/it]epoch 4 loss 1.15121:  14%|█▍        | 4/28 [00:13<01:33,  3.88s/it]epoch 4 loss 1.15121:  18%|█▊        | 5/28 [00:13<01:00,  2.63s/it]epoch 4 loss 1.15292:  18%|█▊        | 5/28 [00:14<01:00,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6765[0m
[32m  eval_f1 = 0.3902[0m
[32m  eval_mcc = 0.6584[0m
[32m  eval_precision = 0.4888[0m
[32m  eval_recall = 0.3604[0m
[32m  ********************[0m
[32m  Best MCC:0.6584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15292:  21%|██▏       | 6/28 [00:18<01:15,  3.43s/it]epoch 4 loss 1.15897:  21%|██▏       | 6/28 [00:19<01:15,  3.43s/it]epoch 4 loss 1.15897:  25%|██▌       | 7/28 [00:19<00:51,  2.44s/it]epoch 4 loss 1.16078:  25%|██▌       | 7/28 [00:19<00:51,  2.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.678[0m
[32m  eval_f1 = 0.3918[0m
[32m  eval_mcc = 0.6599[0m
[32m  eval_precision = 0.4923[0m
[32m  eval_recall = 0.3617[0m
[32m  ********************[0m
[32m  Best f1:0.3918[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16078:  29%|██▊       | 8/28 [00:25<01:13,  3.69s/it]epoch 4 loss 1.16445:  29%|██▊       | 8/28 [00:26<01:13,  3.69s/it]epoch 4 loss 1.16445:  32%|███▏      | 9/28 [00:26<00:50,  2.67s/it]epoch 4 loss 1.15779:  32%|███▏      | 9/28 [00:26<00:50,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6788[0m
[32m  eval_f1 = 0.3927[0m
[32m  eval_mcc = 0.6607[0m
[32m  eval_precision = 0.4927[0m
[32m  eval_recall = 0.3625[0m
[32m  ********************[0m
[32m  Best f1:0.3927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15779:  36%|███▌      | 10/28 [00:32<01:10,  3.91s/it]epoch 4 loss 1.16692:  36%|███▌      | 10/28 [00:33<01:10,  3.91s/it]epoch 4 loss 1.16692:  39%|███▉      | 11/28 [00:33<00:48,  2.85s/it]epoch 4 loss 1.16131:  39%|███▉      | 11/28 [00:33<00:48,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6789[0m
[32m  eval_f1 = 0.3928[0m
[32m  eval_mcc = 0.6608[0m
[32m  eval_precision = 0.4926[0m
[32m  eval_recall = 0.3628[0m
[32m  ********************[0m
[32m  Best f1:0.3928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6608[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16131:  43%|████▎     | 12/28 [00:39<01:00,  3.76s/it]epoch 4 loss 1.16218:  43%|████▎     | 12/28 [00:39<01:00,  3.76s/it]epoch 4 loss 1.16218:  46%|████▋     | 13/28 [00:39<00:41,  2.75s/it]epoch 4 loss 1.16659:  46%|████▋     | 13/28 [00:39<00:41,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6792[0m
[32m  eval_f1 = 0.393[0m
[32m  eval_mcc = 0.6611[0m
[32m  eval_precision = 0.4929[0m
[32m  eval_recall = 0.3632[0m
[32m  ********************[0m
[32m  Best f1:0.393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16659:  50%|█████     | 14/28 [00:45<00:53,  3.84s/it]epoch 4 loss 1.16062:  50%|█████     | 14/28 [00:46<00:53,  3.84s/it]epoch 4 loss 1.16062:  54%|█████▎    | 15/28 [00:46<00:36,  2.81s/it]epoch 4 loss 1.15999:  54%|█████▎    | 15/28 [00:46<00:36,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6794[0m
[32m  eval_f1 = 0.3933[0m
[32m  eval_mcc = 0.6613[0m
[32m  eval_precision = 0.4932[0m
[32m  eval_recall = 0.3637[0m
[32m  ********************[0m
[32m  Best f1:0.3933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15999:  57%|█████▋    | 16/28 [00:52<00:46,  3.88s/it]epoch 4 loss 1.16153:  57%|█████▋    | 16/28 [00:53<00:46,  3.88s/it]epoch 4 loss 1.16153:  61%|██████    | 17/28 [00:53<00:31,  2.84s/it]epoch 4 loss 1.16307:  61%|██████    | 17/28 [00:53<00:31,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.68[0m
[32m  eval_f1 = 0.3942[0m
[32m  eval_mcc = 0.6619[0m
[32m  eval_precision = 0.4944[0m
[32m  eval_recall = 0.3645[0m
[32m  ********************[0m
[32m  Best f1:0.3942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6619[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16307:  64%|██████▍   | 18/28 [00:59<00:38,  3.85s/it]epoch 4 loss 1.16005:  64%|██████▍   | 18/28 [00:59<00:38,  3.85s/it]epoch 4 loss 1.16005:  68%|██████▊   | 19/28 [00:59<00:25,  2.82s/it]epoch 4 loss 1.16062:  68%|██████▊   | 19/28 [01:00<00:25,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6803[0m
[32m  eval_f1 = 0.3942[0m
[32m  eval_mcc = 0.6623[0m
[32m  eval_precision = 0.4955[0m
[32m  eval_recall = 0.3646[0m
[32m  ********************[0m
[32m  Best f1:0.3942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16062:  71%|███████▏  | 20/28 [01:05<00:30,  3.85s/it]epoch 4 loss 1.15526:  71%|███████▏  | 20/28 [01:06<00:30,  3.85s/it]epoch 4 loss 1.15526:  75%|███████▌  | 21/28 [01:06<00:19,  2.83s/it]epoch 4 loss 1.15473:  75%|███████▌  | 21/28 [01:06<00:19,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6801[0m
[32m  eval_f1 = 0.3943[0m
[32m  eval_mcc = 0.6621[0m
[32m  eval_precision = 0.4918[0m
[32m  eval_recall = 0.3646[0m
[32m  ********************[0m
[32m  Best f1:0.3943[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.15473:  79%|███████▊  | 22/28 [01:10<00:20,  3.38s/it]epoch 4 loss 1.15035:  79%|███████▊  | 22/28 [01:11<00:20,  3.38s/it]epoch 4 loss 1.15035:  82%|████████▏ | 23/28 [01:11<00:12,  2.49s/it]epoch 4 loss 1.15095:  82%|████████▏ | 23/28 [01:11<00:12,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6801[0m
[32m  eval_f1 = 0.3943[0m
[32m  eval_mcc = 0.6621[0m
[32m  eval_precision = 0.4921[0m
[32m  eval_recall = 0.3646[0m
[32m  ********************[0m
[32m  Best f1:0.3943[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.15095:  86%|████████▌ | 24/28 [01:16<00:12,  3.23s/it]epoch 4 loss 1.15276:  86%|████████▌ | 24/28 [01:16<00:12,  3.23s/it]epoch 4 loss 1.15276:  89%|████████▉ | 25/28 [01:16<00:07,  2.38s/it]epoch 4 loss 1.15043:  89%|████████▉ | 25/28 [01:17<00:07,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6801[0m
[32m  eval_f1 = 0.3943[0m
[32m  eval_mcc = 0.662[0m
[32m  eval_precision = 0.4923[0m
[32m  eval_recall = 0.3645[0m
[32m  ********************[0m
[32m  Best f1:0.3943[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.15043:  93%|█████████▎| 26/28 [01:21<00:06,  3.16s/it]epoch 4 loss 1.14664:  93%|█████████▎| 26/28 [01:22<00:06,  3.16s/it]epoch 4 loss 1.14664:  96%|█████████▋| 27/28 [01:22<00:02,  2.33s/it]epoch 4 loss 1.14604:  96%|█████████▋| 27/28 [01:22<00:02,  2.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.68[0m
[32m  eval_f1 = 0.3943[0m
[32m  eval_mcc = 0.662[0m
[32m  eval_precision = 0.4924[0m
[32m  eval_recall = 0.3645[0m

epoch 4 loss 1.14604: 100%|██████████| 28/28 [01:25<00:00,  2.72s/it]epoch 4 loss 1.14604: 100%|██████████| 28/28 [01:25<00:00,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.71it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6801[0m
[32m  eval_f1 = 0.3943[0m
[32m  eval_mcc = 0.662[0m
[32m  eval_precision = 0.4923[0m
[32m  eval_recall = 0.3645[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.72it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6635[0m
[32m  eval_f1 = 0.3518[0m
[32m  eval_mcc = 0.6454[0m
[32m  eval_precision = 0.4569[0m
[32m  eval_recall = 0.3249[0m

