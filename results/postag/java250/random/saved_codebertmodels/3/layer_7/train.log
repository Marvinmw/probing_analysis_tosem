[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=7, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/3/layer_7', posratio=0.5, seed=969, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.0605:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.0605:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.06918:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0069[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = -0.0122[0m
[32m  eval_precision = 0.0117[0m
[32m  eval_recall = 0.0062[0m
[32m  ********************[0m
[32m  Best f1:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.06918:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.0611:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it] epoch 0 loss 5.0611:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 5.04783:  11%|█         | 3/28 [00:05<00:43,  1.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0134[0m
[32m  eval_f1 = 0.0026[0m
[32m  eval_mcc = -0.0148[0m
[32m  eval_precision = 0.0109[0m
[32m  eval_recall = 0.003[0m
[32m  ********************[0m
[32m  Best f1:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.04783:  14%|█▍        | 4/28 [00:10<01:13,  3.05s/it]epoch 0 loss 5.02277:  14%|█▍        | 4/28 [00:10<01:13,  3.05s/it]epoch 0 loss 5.02277:  18%|█▊        | 5/28 [00:10<00:48,  2.10s/it]epoch 0 loss 4.99381:  18%|█▊        | 5/28 [00:11<00:48,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0346[0m
[32m  eval_f1 = 0.0048[0m
[32m  eval_mcc = -0.0085[0m
[32m  eval_precision = 0.0124[0m
[32m  eval_recall = 0.0054[0m
[32m  ********************[0m
[32m  Best f1:0.0048[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.99381:  21%|██▏       | 6/28 [00:18<01:29,  4.08s/it]epoch 0 loss 4.9641:  21%|██▏       | 6/28 [00:19<01:29,  4.08s/it] epoch 0 loss 4.9641:  25%|██▌       | 7/28 [00:19<01:00,  2.89s/it]epoch 0 loss 4.92768:  25%|██▌       | 7/28 [00:19<01:00,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0645[0m
[32m  eval_f1 = 0.0073[0m
[32m  eval_mcc = 0.0112[0m
[32m  eval_precision = 0.0127[0m
[32m  eval_recall = 0.0091[0m
[32m  ********************[0m
[32m  Best f1:0.0073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.92768:  29%|██▊       | 8/28 [00:25<01:15,  3.78s/it]epoch 0 loss 4.88469:  29%|██▊       | 8/28 [00:25<01:15,  3.78s/it]epoch 0 loss 4.88469:  32%|███▏      | 9/28 [00:25<00:51,  2.73s/it]epoch 0 loss 4.83653:  32%|███▏      | 9/28 [00:25<00:51,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0873[0m
[32m  eval_f1 = 0.0098[0m
[32m  eval_mcc = 0.0335[0m
[32m  eval_precision = 0.0149[0m
[32m  eval_recall = 0.0126[0m
[32m  ********************[0m
[32m  Best f1:0.0098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.83653:  36%|███▌      | 10/28 [00:36<01:36,  5.33s/it]epoch 0 loss 4.78381:  36%|███▌      | 10/28 [00:37<01:36,  5.33s/it]epoch 0 loss 4.78381:  39%|███▉      | 11/28 [00:37<01:05,  3.83s/it]epoch 0 loss 4.7306:  39%|███▉      | 11/28 [00:37<01:05,  3.83s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1198[0m
[32m  eval_f1 = 0.0153[0m
[32m  eval_mcc = 0.0676[0m
[32m  eval_precision = 0.0218[0m
[32m  eval_recall = 0.0186[0m
[32m  ********************[0m
[32m  Best f1:0.0153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0676[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.7306:  43%|████▎     | 12/28 [00:46<01:28,  5.53s/it]epoch 0 loss 4.66947:  43%|████▎     | 12/28 [00:46<01:28,  5.53s/it]epoch 0 loss 4.66947:  46%|████▋     | 13/28 [00:46<00:59,  3.98s/it]epoch 0 loss 4.60898:  46%|████▋     | 13/28 [00:47<00:59,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1757[0m
[32m  eval_f1 = 0.0222[0m
[32m  eval_mcc = 0.1225[0m
[32m  eval_precision = 0.0259[0m
[32m  eval_recall = 0.0275[0m
[32m  ********************[0m
[32m  Best f1:0.0222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.60898:  50%|█████     | 14/28 [00:54<01:10,  5.02s/it]epoch 0 loss 4.54457:  50%|█████     | 14/28 [00:54<01:10,  5.02s/it]epoch 0 loss 4.54457:  54%|█████▎    | 15/28 [00:54<00:47,  3.63s/it]epoch 0 loss 4.47924:  54%|█████▎    | 15/28 [00:55<00:47,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2458[0m
[32m  eval_f1 = 0.0283[0m
[32m  eval_mcc = 0.192[0m
[32m  eval_precision = 0.031[0m
[32m  eval_recall = 0.0379[0m
[32m  ********************[0m
[32m  Best f1:0.0283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.47924:  57%|█████▋    | 16/28 [01:04<01:04,  5.40s/it]epoch 0 loss 4.41317:  57%|█████▋    | 16/28 [01:04<01:04,  5.40s/it]epoch 0 loss 4.41317:  61%|██████    | 17/28 [01:04<00:42,  3.91s/it]epoch 0 loss 4.34616:  61%|██████    | 17/28 [01:05<00:42,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2892[0m
[32m  eval_f1 = 0.0331[0m
[32m  eval_mcc = 0.2386[0m
[32m  eval_precision = 0.0385[0m
[32m  eval_recall = 0.0436[0m
[32m  ********************[0m
[32m  Best f1:0.0331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.34616:  64%|██████▍   | 18/28 [01:14<00:56,  5.66s/it]epoch 0 loss 4.28059:  64%|██████▍   | 18/28 [01:14<00:56,  5.66s/it]epoch 0 loss 4.28059:  68%|██████▊   | 19/28 [01:14<00:36,  4.09s/it]epoch 0 loss 4.22362:  68%|██████▊   | 19/28 [01:15<00:36,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3042[0m
[32m  eval_f1 = 0.0406[0m
[32m  eval_mcc = 0.2536[0m
[32m  eval_precision = 0.0527[0m
[32m  eval_recall = 0.0484[0m
[32m  ********************[0m
[32m  Best f1:0.0406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2536[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.22362:  71%|███████▏  | 20/28 [01:24<00:45,  5.65s/it]epoch 0 loss 4.16028:  71%|███████▏  | 20/28 [01:24<00:45,  5.65s/it]epoch 0 loss 4.16028:  75%|███████▌  | 21/28 [01:24<00:28,  4.08s/it]epoch 0 loss 4.10772:  75%|███████▌  | 21/28 [01:24<00:28,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3321[0m
[32m  eval_f1 = 0.066[0m
[32m  eval_mcc = 0.2832[0m
[32m  eval_precision = 0.0971[0m
[32m  eval_recall = 0.0669[0m
[32m  ********************[0m
[32m  Best f1:0.066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2832[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.10772:  79%|███████▊  | 22/28 [01:34<00:34,  5.83s/it]epoch 0 loss 4.04801:  79%|███████▊  | 22/28 [01:34<00:34,  5.83s/it]epoch 0 loss 4.04801:  82%|████████▏ | 23/28 [01:34<00:21,  4.20s/it]epoch 0 loss 3.9908:  82%|████████▏ | 23/28 [01:35<00:21,  4.20s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3818[0m
[32m  eval_f1 = 0.0925[0m
[32m  eval_mcc = 0.3401[0m
[32m  eval_precision = 0.1634[0m
[32m  eval_recall = 0.089[0m
[32m  ********************[0m
[32m  Best f1:0.0925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.9908:  86%|████████▌ | 24/28 [01:43<00:21,  5.43s/it]epoch 0 loss 3.93598:  86%|████████▌ | 24/28 [01:43<00:21,  5.43s/it]epoch 0 loss 3.93598:  89%|████████▉ | 25/28 [01:43<00:11,  3.93s/it]epoch 0 loss 3.88316:  89%|████████▉ | 25/28 [01:44<00:11,  3.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4223[0m
[32m  eval_f1 = 0.1184[0m
[32m  eval_mcc = 0.3927[0m
[32m  eval_precision = 0.1879[0m
[32m  eval_recall = 0.1126[0m
[32m  ********************[0m
[32m  Best f1:0.1184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.88316:  93%|█████████▎| 26/28 [01:50<00:09,  4.91s/it]epoch 0 loss 3.82685:  93%|█████████▎| 26/28 [01:51<00:09,  4.91s/it]epoch 0 loss 3.82685:  96%|█████████▋| 27/28 [01:51<00:03,  3.56s/it]epoch 0 loss 3.77091:  96%|█████████▋| 27/28 [01:51<00:03,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4611[0m
[32m  eval_f1 = 0.1374[0m
[32m  eval_mcc = 0.436[0m
[32m  eval_precision = 0.2037[0m
[32m  eval_recall = 0.1328[0m
[32m  ********************[0m
[32m  Best f1:0.1374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.77091: 100%|██████████| 28/28 [01:58<00:00,  4.55s/it]epoch 0 loss 3.77091: 100%|██████████| 28/28 [01:58<00:00,  4.22s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.32083:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.32083:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 1 loss 2.41455:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.509[0m
[32m  eval_f1 = 0.1671[0m
[32m  eval_mcc = 0.4817[0m
[32m  eval_precision = 0.2213[0m
[32m  eval_recall = 0.1632[0m
[32m  ********************[0m
[32m  Best f1:0.1671[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4817[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.41455:   7%|▋         | 2/28 [00:06<01:34,  3.64s/it]epoch 1 loss 2.29278:   7%|▋         | 2/28 [00:06<01:34,  3.64s/it]epoch 1 loss 2.29278:  11%|█         | 3/28 [00:06<00:54,  2.17s/it]epoch 1 loss 2.29936:  11%|█         | 3/28 [00:07<00:54,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5342[0m
[32m  eval_f1 = 0.1843[0m
[32m  eval_mcc = 0.5057[0m
[32m  eval_precision = 0.2384[0m
[32m  eval_recall = 0.1829[0m
[32m  ********************[0m
[32m  Best f1:0.1843[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29936:  14%|█▍        | 4/28 [00:13<01:31,  3.80s/it]epoch 1 loss 2.25816:  14%|█▍        | 4/28 [00:13<01:31,  3.80s/it]epoch 1 loss 2.25816:  18%|█▊        | 5/28 [00:13<00:59,  2.58s/it]epoch 1 loss 2.21443:  18%|█▊        | 5/28 [00:13<00:59,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5637[0m
[32m  eval_f1 = 0.2014[0m
[32m  eval_mcc = 0.5366[0m
[32m  eval_precision = 0.2401[0m
[32m  eval_recall = 0.1995[0m
[32m  ********************[0m
[32m  Best f1:0.2014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.21443:  21%|██▏       | 6/28 [00:19<01:21,  3.71s/it]epoch 1 loss 2.16792:  21%|██▏       | 6/28 [00:19<01:21,  3.71s/it]epoch 1 loss 2.16792:  25%|██▌       | 7/28 [00:19<00:55,  2.63s/it]epoch 1 loss 2.1277:  25%|██▌       | 7/28 [00:20<00:55,  2.63s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.575[0m
[32m  eval_f1 = 0.2067[0m
[32m  eval_mcc = 0.5484[0m
[32m  eval_precision = 0.2396[0m
[32m  eval_recall = 0.2033[0m
[32m  ********************[0m
[32m  Best f1:0.2067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1277:  29%|██▊       | 8/28 [00:26<01:16,  3.84s/it]epoch 1 loss 2.10181:  29%|██▊       | 8/28 [00:26<01:16,  3.84s/it]epoch 1 loss 2.10181:  32%|███▏      | 9/28 [00:26<00:52,  2.77s/it]epoch 1 loss 2.07952:  32%|███▏      | 9/28 [00:27<00:52,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5843[0m
[32m  eval_f1 = 0.2137[0m
[32m  eval_mcc = 0.5588[0m
[32m  eval_precision = 0.2756[0m
[32m  eval_recall = 0.208[0m
[32m  ********************[0m
[32m  Best f1:0.2137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07952:  36%|███▌      | 10/28 [00:32<01:07,  3.77s/it]epoch 1 loss 2.03545:  36%|███▌      | 10/28 [00:33<01:07,  3.77s/it]epoch 1 loss 2.03545:  39%|███▉      | 11/28 [00:33<00:46,  2.75s/it]epoch 1 loss 2.00454:  39%|███▉      | 11/28 [00:33<00:46,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.59[0m
[32m  eval_f1 = 0.2252[0m
[32m  eval_mcc = 0.5657[0m
[32m  eval_precision = 0.2981[0m
[32m  eval_recall = 0.2153[0m
[32m  ********************[0m
[32m  Best f1:0.2252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00454:  43%|████▎     | 12/28 [00:44<01:24,  5.31s/it]epoch 1 loss 1.9824:  43%|████▎     | 12/28 [00:44<01:24,  5.31s/it] epoch 1 loss 1.9824:  46%|████▋     | 13/28 [00:44<00:57,  3.83s/it]epoch 1 loss 1.97134:  46%|████▋     | 13/28 [00:45<00:57,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.594[0m
[32m  eval_f1 = 0.2379[0m
[32m  eval_mcc = 0.5719[0m
[32m  eval_precision = 0.312[0m
[32m  eval_recall = 0.2225[0m
[32m  ********************[0m
[32m  Best f1:0.2379[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5719[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97134:  50%|█████     | 14/28 [00:54<01:20,  5.72s/it]epoch 1 loss 1.95064:  50%|█████     | 14/28 [00:55<01:20,  5.72s/it]epoch 1 loss 1.95064:  54%|█████▎    | 15/28 [00:55<00:53,  4.12s/it]epoch 1 loss 1.93027:  54%|█████▎    | 15/28 [00:55<00:53,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.599[0m
[32m  eval_f1 = 0.2435[0m
[32m  eval_mcc = 0.5788[0m
[32m  eval_precision = 0.3135[0m
[32m  eval_recall = 0.2272[0m
[32m  ********************[0m
[32m  Best f1:0.2435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93027:  57%|█████▋    | 16/28 [01:05<01:11,  5.99s/it]epoch 1 loss 1.91173:  57%|█████▋    | 16/28 [01:05<01:11,  5.99s/it]epoch 1 loss 1.91173:  61%|██████    | 17/28 [01:05<00:47,  4.32s/it]epoch 1 loss 1.89569:  61%|██████    | 17/28 [01:06<00:47,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6053[0m
[32m  eval_f1 = 0.256[0m
[32m  eval_mcc = 0.5853[0m
[32m  eval_precision = 0.3632[0m
[32m  eval_recall = 0.2369[0m
[32m  ********************[0m
[32m  Best f1:0.256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5853[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89569:  64%|██████▍   | 18/28 [01:19<01:09,  6.96s/it]epoch 1 loss 1.87481:  64%|██████▍   | 18/28 [01:19<01:09,  6.96s/it]epoch 1 loss 1.87481:  68%|██████▊   | 19/28 [01:19<00:44,  5.00s/it]epoch 1 loss 1.85791:  68%|██████▊   | 19/28 [01:19<00:44,  5.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6132[0m
[32m  eval_f1 = 0.2655[0m
[32m  eval_mcc = 0.5928[0m
[32m  eval_precision = 0.376[0m
[32m  eval_recall = 0.2442[0m
[32m  ********************[0m
[32m  Best f1:0.2655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.85791:  71%|███████▏  | 20/28 [01:33<01:00,  7.57s/it]epoch 1 loss 1.84355:  71%|███████▏  | 20/28 [01:33<01:00,  7.57s/it]epoch 1 loss 1.84355:  75%|███████▌  | 21/28 [01:33<00:37,  5.42s/it]epoch 1 loss 1.83571:  75%|███████▌  | 21/28 [01:33<00:37,  5.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6166[0m
[32m  eval_f1 = 0.2922[0m
[32m  eval_mcc = 0.5947[0m
[32m  eval_precision = 0.4064[0m
[32m  eval_recall = 0.2716[0m
[32m  ********************[0m
[32m  Best f1:0.2922[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5947[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83571:  79%|███████▊  | 22/28 [01:45<00:44,  7.47s/it]epoch 1 loss 1.82195:  79%|███████▊  | 22/28 [01:46<00:44,  7.47s/it]epoch 1 loss 1.82195:  82%|████████▏ | 23/28 [01:46<00:26,  5.35s/it]epoch 1 loss 1.81173:  82%|████████▏ | 23/28 [01:46<00:26,  5.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6179[0m
[32m  eval_f1 = 0.2946[0m
[32m  eval_mcc = 0.5951[0m
[32m  eval_precision = 0.407[0m
[32m  eval_recall = 0.2757[0m
[32m  ********************[0m
[32m  Best f1:0.2946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5951[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81173:  86%|████████▌ | 24/28 [01:59<00:30,  7.65s/it]epoch 1 loss 1.80165:  86%|████████▌ | 24/28 [01:59<00:30,  7.65s/it]epoch 1 loss 1.80165:  89%|████████▉ | 25/28 [01:59<00:16,  5.48s/it]epoch 1 loss 1.79331:  89%|████████▉ | 25/28 [01:59<00:16,  5.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.621[0m
[32m  eval_f1 = 0.2993[0m
[32m  eval_mcc = 0.5981[0m
[32m  eval_precision = 0.4021[0m
[32m  eval_recall = 0.2797[0m
[32m  ********************[0m
[32m  Best f1:0.2993[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5981[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.79331:  93%|█████████▎| 26/28 [02:09<00:13,  6.77s/it]epoch 1 loss 1.784:  93%|█████████▎| 26/28 [02:09<00:13,  6.77s/it]  epoch 1 loss 1.784:  96%|█████████▋| 27/28 [02:09<00:04,  4.86s/it]epoch 1 loss 1.77861:  96%|█████████▋| 27/28 [02:09<00:04,  4.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6256[0m
[32m  eval_f1 = 0.3044[0m
[32m  eval_mcc = 0.6037[0m
[32m  eval_precision = 0.4072[0m
[32m  eval_recall = 0.2837[0m
[32m  ********************[0m
[32m  Best f1:0.3044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77861: 100%|██████████| 28/28 [02:20<00:00,  6.59s/it]epoch 1 loss 1.77861: 100%|██████████| 28/28 [02:20<00:00,  5.01s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.4523:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.4523:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 2 loss 1.47107:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6287[0m
[32m  eval_f1 = 0.3087[0m
[32m  eval_mcc = 0.6077[0m
[32m  eval_precision = 0.4076[0m
[32m  eval_recall = 0.2873[0m
[32m  ********************[0m
[32m  Best f1:0.3087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6077[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47107:   7%|▋         | 2/28 [00:11<03:01,  6.98s/it]epoch 2 loss 1.45846:   7%|▋         | 2/28 [00:12<03:01,  6.98s/it]epoch 2 loss 1.45846:  11%|█         | 3/28 [00:12<01:39,  3.99s/it]epoch 2 loss 1.45392:  11%|█         | 3/28 [00:12<01:39,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6311[0m
[32m  eval_f1 = 0.3167[0m
[32m  eval_mcc = 0.6112[0m
[32m  eval_precision = 0.4379[0m
[32m  eval_recall = 0.2932[0m
[32m  ********************[0m
[32m  Best f1:0.3167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45392:  14%|█▍        | 4/28 [00:23<02:44,  6.86s/it]epoch 2 loss 1.43192:  14%|█▍        | 4/28 [00:24<02:44,  6.86s/it]epoch 2 loss 1.43192:  18%|█▊        | 5/28 [00:24<01:44,  4.54s/it]epoch 2 loss 1.41344:  18%|█▊        | 5/28 [00:24<01:44,  4.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6315[0m
[32m  eval_f1 = 0.3193[0m
[32m  eval_mcc = 0.6127[0m
[32m  eval_precision = 0.442[0m
[32m  eval_recall = 0.2943[0m
[32m  ********************[0m
[32m  Best f1:0.3193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6127[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41344:  21%|██▏       | 6/28 [00:37<02:44,  7.47s/it]epoch 2 loss 1.4345:  21%|██▏       | 6/28 [00:37<02:44,  7.47s/it] epoch 2 loss 1.4345:  25%|██▌       | 7/28 [00:37<01:48,  5.16s/it]epoch 2 loss 1.43851:  25%|██▌       | 7/28 [00:38<01:48,  5.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6325[0m
[32m  eval_f1 = 0.319[0m
[32m  eval_mcc = 0.6141[0m
[32m  eval_precision = 0.4367[0m
[32m  eval_recall = 0.2943[0m
[32m  ********************[0m
[32m  Best MCC:0.6141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43851:  29%|██▊       | 8/28 [00:44<01:51,  5.56s/it]epoch 2 loss 1.43048:  29%|██▊       | 8/28 [00:44<01:51,  5.56s/it]epoch 2 loss 1.43048:  32%|███▏      | 9/28 [00:44<01:15,  3.95s/it]epoch 2 loss 1.43748:  32%|███▏      | 9/28 [00:44<01:15,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6342[0m
[32m  eval_f1 = 0.3225[0m
[32m  eval_mcc = 0.6158[0m
[32m  eval_precision = 0.4399[0m
[32m  eval_recall = 0.2966[0m
[32m  ********************[0m
[32m  Best f1:0.3225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43748:  36%|███▌      | 10/28 [00:55<01:50,  6.15s/it]epoch 2 loss 1.43822:  36%|███▌      | 10/28 [00:55<01:50,  6.15s/it]epoch 2 loss 1.43822:  39%|███▉      | 11/28 [00:55<01:14,  4.40s/it]epoch 2 loss 1.43947:  39%|███▉      | 11/28 [00:56<01:14,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.3239[0m
[32m  eval_mcc = 0.6181[0m
[32m  eval_precision = 0.4369[0m
[32m  eval_recall = 0.2978[0m
[32m  ********************[0m
[32m  Best f1:0.3239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43947:  43%|████▎     | 12/28 [01:01<01:17,  4.82s/it]epoch 2 loss 1.44517:  43%|████▎     | 12/28 [01:02<01:17,  4.82s/it]epoch 2 loss 1.44517:  46%|████▋     | 13/28 [01:02<00:52,  3.49s/it]epoch 2 loss 1.4427:  46%|████▋     | 13/28 [01:02<00:52,  3.49s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.3263[0m
[32m  eval_mcc = 0.6197[0m
[32m  eval_precision = 0.4341[0m
[32m  eval_recall = 0.3004[0m
[32m  ********************[0m
[32m  Best f1:0.3263[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4427:  50%|█████     | 14/28 [01:08<01:00,  4.32s/it]epoch 2 loss 1.43527:  50%|█████     | 14/28 [01:08<01:00,  4.32s/it]epoch 2 loss 1.43527:  54%|█████▎    | 15/28 [01:08<00:40,  3.14s/it]epoch 2 loss 1.42837:  54%|█████▎    | 15/28 [01:09<00:40,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.3249[0m
[32m  eval_mcc = 0.6189[0m
[32m  eval_precision = 0.4312[0m
[32m  eval_recall = 0.3004[0m

epoch 2 loss 1.42837:  57%|█████▋    | 16/28 [01:12<00:40,  3.34s/it]epoch 2 loss 1.42697:  57%|█████▋    | 16/28 [01:13<00:40,  3.34s/it]epoch 2 loss 1.42697:  61%|██████    | 17/28 [01:13<00:27,  2.46s/it]epoch 2 loss 1.4273:  61%|██████    | 17/28 [01:13<00:27,  2.46s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6434[0m
[32m  eval_f1 = 0.3305[0m
[32m  eval_mcc = 0.6234[0m
[32m  eval_precision = 0.4309[0m
[32m  eval_recall = 0.3054[0m
[32m  ********************[0m
[32m  Best f1:0.3305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4273:  64%|██████▍   | 18/28 [01:18<00:34,  3.43s/it]epoch 2 loss 1.42304:  64%|██████▍   | 18/28 [01:19<00:34,  3.43s/it]epoch 2 loss 1.42304:  68%|██████▊   | 19/28 [01:19<00:22,  2.53s/it]epoch 2 loss 1.42055:  68%|██████▊   | 19/28 [01:19<00:22,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6474[0m
[32m  eval_f1 = 0.3353[0m
[32m  eval_mcc = 0.6279[0m
[32m  eval_precision = 0.4583[0m
[32m  eval_recall = 0.3089[0m
[32m  ********************[0m
[32m  Best f1:0.3353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42055:  71%|███████▏  | 20/28 [01:26<00:32,  4.11s/it]epoch 2 loss 1.42151:  71%|███████▏  | 20/28 [01:27<00:32,  4.11s/it]epoch 2 loss 1.42151:  75%|███████▌  | 21/28 [01:27<00:21,  3.00s/it]epoch 2 loss 1.42:  75%|███████▌  | 21/28 [01:27<00:21,  3.00s/it]   [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6493[0m
[32m  eval_f1 = 0.3425[0m
[32m  eval_mcc = 0.63[0m
[32m  eval_precision = 0.469[0m
[32m  eval_recall = 0.3151[0m
[32m  ********************[0m
[32m  Best f1:0.3425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.63[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42:  79%|███████▊  | 22/28 [01:40<00:35,  5.94s/it]epoch 2 loss 1.41613:  79%|███████▊  | 22/28 [01:40<00:35,  5.94s/it]epoch 2 loss 1.41613:  82%|████████▏ | 23/28 [01:40<00:21,  4.29s/it]epoch 2 loss 1.41501:  82%|████████▏ | 23/28 [01:41<00:21,  4.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6501[0m
[32m  eval_f1 = 0.3464[0m
[32m  eval_mcc = 0.631[0m
[32m  eval_precision = 0.4707[0m
[32m  eval_recall = 0.3181[0m
[32m  ********************[0m
[32m  Best f1:0.3464[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41501:  86%|████████▌ | 24/28 [01:55<00:29,  7.41s/it]epoch 2 loss 1.40916:  86%|████████▌ | 24/28 [01:55<00:29,  7.41s/it]epoch 2 loss 1.40916:  89%|████████▉ | 25/28 [01:55<00:15,  5.32s/it]epoch 2 loss 1.4079:  89%|████████▉ | 25/28 [01:56<00:15,  5.32s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6507[0m
[32m  eval_f1 = 0.3474[0m
[32m  eval_mcc = 0.6316[0m
[32m  eval_precision = 0.4732[0m
[32m  eval_recall = 0.3189[0m
[32m  ********************[0m
[32m  Best f1:0.3474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4079:  93%|█████████▎| 26/28 [02:09<00:15,  7.73s/it]epoch 2 loss 1.40349:  93%|█████████▎| 26/28 [02:09<00:15,  7.73s/it]epoch 2 loss 1.40349:  96%|█████████▋| 27/28 [02:09<00:05,  5.54s/it]epoch 2 loss 1.39981:  96%|█████████▋| 27/28 [02:09<00:05,  5.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3441[0m
[32m  eval_mcc = 0.6321[0m
[32m  eval_precision = 0.4569[0m
[32m  eval_recall = 0.3169[0m
[32m  ********************[0m
[32m  Best MCC:0.6321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39981: 100%|██████████| 28/28 [02:17<00:00,  6.34s/it]epoch 2 loss 1.39981: 100%|██████████| 28/28 [02:17<00:00,  4.92s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.27673:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.27673:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 3 loss 1.34517:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.3426[0m
[32m  eval_mcc = 0.6312[0m
[32m  eval_precision = 0.4563[0m
[32m  eval_recall = 0.3158[0m

epoch 3 loss 1.34517:   7%|▋         | 2/28 [00:04<01:02,  2.41s/it]epoch 3 loss 1.34347:   7%|▋         | 2/28 [00:04<01:02,  2.41s/it]epoch 3 loss 1.34347:  11%|█         | 3/28 [00:04<00:37,  1.49s/it]epoch 3 loss 1.34496:  11%|█         | 3/28 [00:05<00:37,  1.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3453[0m
[32m  eval_mcc = 0.6315[0m
[32m  eval_precision = 0.4659[0m
[32m  eval_recall = 0.3182[0m

epoch 3 loss 1.34496:  14%|█▍        | 4/28 [00:08<00:57,  2.40s/it]epoch 3 loss 1.32966:  14%|█▍        | 4/28 [00:08<00:57,  2.40s/it]epoch 3 loss 1.32966:  18%|█▊        | 5/28 [00:08<00:38,  1.68s/it]epoch 3 loss 1.32179:  18%|█▊        | 5/28 [00:09<00:38,  1.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.348[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4646[0m
[32m  eval_recall = 0.3207[0m
[32m  ********************[0m
[32m  Best f1:0.348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32179:  21%|██▏       | 6/28 [00:17<01:26,  3.94s/it]epoch 3 loss 1.32672:  21%|██▏       | 6/28 [00:17<01:26,  3.94s/it]epoch 3 loss 1.32672:  25%|██▌       | 7/28 [00:17<00:58,  2.79s/it]epoch 3 loss 1.32167:  25%|██▌       | 7/28 [00:17<00:58,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.654[0m
[32m  eval_f1 = 0.35[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4655[0m
[32m  eval_recall = 0.3224[0m
[32m  ********************[0m
[32m  Best f1:0.35[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32167:  29%|██▊       | 8/28 [00:27<01:39,  4.97s/it]epoch 3 loss 1.32073:  29%|██▊       | 8/28 [00:27<01:39,  4.97s/it]epoch 3 loss 1.32073:  32%|███▏      | 9/28 [00:27<01:07,  3.55s/it]epoch 3 loss 1.31195:  32%|███▏      | 9/28 [00:28<01:07,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6545[0m
[32m  eval_f1 = 0.3508[0m
[32m  eval_mcc = 0.6357[0m
[32m  eval_precision = 0.4739[0m
[32m  eval_recall = 0.3227[0m
[32m  ********************[0m
[32m  Best f1:0.3508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31195:  36%|███▌      | 10/28 [00:35<01:28,  4.92s/it]epoch 3 loss 1.30949:  36%|███▌      | 10/28 [00:36<01:28,  4.92s/it]epoch 3 loss 1.30949:  39%|███▉      | 11/28 [00:36<01:00,  3.54s/it]epoch 3 loss 1.31378:  39%|███▉      | 11/28 [00:36<01:00,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3513[0m
[32m  eval_mcc = 0.6368[0m
[32m  eval_precision = 0.4729[0m
[32m  eval_recall = 0.323[0m
[32m  ********************[0m
[32m  Best f1:0.3513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31378:  43%|████▎     | 12/28 [00:45<01:26,  5.38s/it]epoch 3 loss 1.31636:  43%|████▎     | 12/28 [00:46<01:26,  5.38s/it]epoch 3 loss 1.31636:  46%|████▋     | 13/28 [00:46<00:58,  3.88s/it]epoch 3 loss 1.31822:  46%|████▋     | 13/28 [00:46<00:58,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.352[0m
[32m  eval_mcc = 0.6372[0m
[32m  eval_precision = 0.4735[0m
[32m  eval_recall = 0.3235[0m
[32m  ********************[0m
[32m  Best f1:0.352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31822:  50%|█████     | 14/28 [00:53<01:10,  5.02s/it]epoch 3 loss 1.31599:  50%|█████     | 14/28 [00:54<01:10,  5.02s/it]epoch 3 loss 1.31599:  54%|█████▎    | 15/28 [00:54<00:47,  3.63s/it]epoch 3 loss 1.31254:  54%|█████▎    | 15/28 [00:54<00:47,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.64it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6565[0m
[32m  eval_f1 = 0.3537[0m
[32m  eval_mcc = 0.638[0m
[32m  eval_precision = 0.4717[0m
[32m  eval_recall = 0.3245[0m
[32m  ********************[0m
[32m  Best f1:0.3537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31254:  57%|█████▋    | 16/28 [01:05<01:10,  5.88s/it]epoch 3 loss 1.30712:  57%|█████▋    | 16/28 [01:05<01:10,  5.88s/it]epoch 3 loss 1.30712:  61%|██████    | 17/28 [01:05<00:46,  4.24s/it]epoch 3 loss 1.30521:  61%|██████    | 17/28 [01:06<00:46,  4.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6563[0m
[32m  eval_f1 = 0.3534[0m
[32m  eval_mcc = 0.6378[0m
[32m  eval_precision = 0.4721[0m
[32m  eval_recall = 0.3238[0m

epoch 3 loss 1.30521:  64%|██████▍   | 18/28 [01:09<00:41,  4.11s/it]epoch 3 loss 1.30038:  64%|██████▍   | 18/28 [01:09<00:41,  4.11s/it]epoch 3 loss 1.30038:  68%|██████▊   | 19/28 [01:09<00:26,  3.00s/it]epoch 3 loss 1.29857:  68%|██████▊   | 19/28 [01:10<00:26,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3539[0m
[32m  eval_mcc = 0.6371[0m
[32m  eval_precision = 0.4822[0m
[32m  eval_recall = 0.324[0m
[32m  ********************[0m
[32m  Best f1:0.3539[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.29857:  71%|███████▏  | 20/28 [01:14<00:28,  3.62s/it]epoch 3 loss 1.30553:  71%|███████▏  | 20/28 [01:15<00:28,  3.62s/it]epoch 3 loss 1.30553:  75%|███████▌  | 21/28 [01:15<00:18,  2.65s/it]epoch 3 loss 1.30556:  75%|███████▌  | 21/28 [01:15<00:18,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.59it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.68it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6565[0m
[32m  eval_f1 = 0.3554[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.4826[0m
[32m  eval_recall = 0.3259[0m
[32m  ********************[0m
[32m  Best f1:0.3554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.30556:  79%|███████▊  | 22/28 [01:22<00:23,  3.96s/it]epoch 3 loss 1.31217:  79%|███████▊  | 22/28 [01:22<00:23,  3.96s/it]epoch 3 loss 1.31217:  82%|████████▏ | 23/28 [01:22<00:14,  2.89s/it]epoch 3 loss 1.31548:  82%|████████▏ | 23/28 [01:23<00:14,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3586[0m
[32m  eval_mcc = 0.6388[0m
[32m  eval_precision = 0.4787[0m
[32m  eval_recall = 0.3287[0m
[32m  ********************[0m
[32m  Best f1:0.3586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31548:  86%|████████▌ | 24/28 [01:33<00:21,  5.35s/it]epoch 3 loss 1.31637:  86%|████████▌ | 24/28 [01:34<00:21,  5.35s/it]epoch 3 loss 1.31637:  89%|████████▉ | 25/28 [01:34<00:11,  3.88s/it]epoch 3 loss 1.30928:  89%|████████▉ | 25/28 [01:34<00:11,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6584[0m
[32m  eval_f1 = 0.3597[0m
[32m  eval_mcc = 0.6394[0m
[32m  eval_precision = 0.479[0m
[32m  eval_recall = 0.3301[0m
[32m  ********************[0m
[32m  Best f1:0.3597[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30928:  93%|█████████▎| 26/28 [01:42<00:10,  5.18s/it]epoch 3 loss 1.30776:  93%|█████████▎| 26/28 [01:42<00:10,  5.18s/it]epoch 3 loss 1.30776:  96%|█████████▋| 27/28 [01:42<00:03,  3.75s/it]epoch 3 loss 1.3088:  96%|█████████▋| 27/28 [01:43<00:03,  3.75s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6594[0m
[32m  eval_f1 = 0.3607[0m
[32m  eval_mcc = 0.6404[0m
[32m  eval_precision = 0.4776[0m
[32m  eval_recall = 0.3313[0m
[32m  ********************[0m
[32m  Best f1:0.3607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3088: 100%|██████████| 28/28 [01:49<00:00,  4.70s/it]epoch 3 loss 1.3088: 100%|██████████| 28/28 [01:49<00:00,  3.92s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.24239:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.24239:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.31504:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6602[0m
[32m  eval_f1 = 0.3628[0m
[32m  eval_mcc = 0.6413[0m
[32m  eval_precision = 0.4866[0m
[32m  eval_recall = 0.3329[0m
[32m  ********************[0m
[32m  Best f1:0.3628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31504:   7%|▋         | 2/28 [00:07<01:46,  4.11s/it]epoch 4 loss 1.26885:   7%|▋         | 2/28 [00:07<01:46,  4.11s/it]epoch 4 loss 1.26885:  11%|█         | 3/28 [00:07<01:00,  2.43s/it]epoch 4 loss 1.26487:  11%|█         | 3/28 [00:07<01:00,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6605[0m
[32m  eval_f1 = 0.3639[0m
[32m  eval_mcc = 0.6417[0m
[32m  eval_precision = 0.4862[0m
[32m  eval_recall = 0.3339[0m
[32m  ********************[0m
[32m  Best f1:0.3639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26487:  14%|█▍        | 4/28 [00:13<01:34,  3.94s/it]epoch 4 loss 1.27431:  14%|█▍        | 4/28 [00:14<01:34,  3.94s/it]epoch 4 loss 1.27431:  18%|█▊        | 5/28 [00:14<01:01,  2.67s/it]epoch 4 loss 1.27617:  18%|█▊        | 5/28 [00:14<01:01,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6609[0m
[32m  eval_f1 = 0.3645[0m
[32m  eval_mcc = 0.6422[0m
[32m  eval_precision = 0.4843[0m
[32m  eval_recall = 0.3347[0m
[32m  ********************[0m
[32m  Best f1:0.3645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6422[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27617:  21%|██▏       | 6/28 [00:20<01:24,  3.84s/it]epoch 4 loss 1.28384:  21%|██▏       | 6/28 [00:20<01:24,  3.84s/it]epoch 4 loss 1.28384:  25%|██▌       | 7/28 [00:20<00:57,  2.72s/it]epoch 4 loss 1.28697:  25%|██▌       | 7/28 [00:21<00:57,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3645[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.4818[0m
[32m  eval_recall = 0.335[0m
[32m  ********************[0m
[32m  Best f1:0.3645[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28697:  29%|██▊       | 8/28 [00:26<01:15,  3.77s/it]epoch 4 loss 1.28971:  29%|██▊       | 8/28 [00:27<01:15,  3.77s/it]epoch 4 loss 1.28971:  32%|███▏      | 9/28 [00:27<00:51,  2.73s/it]epoch 4 loss 1.28281:  32%|███▏      | 9/28 [00:27<00:51,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6616[0m
[32m  eval_f1 = 0.3653[0m
[32m  eval_mcc = 0.6428[0m
[32m  eval_precision = 0.4808[0m
[32m  eval_recall = 0.336[0m
[32m  ********************[0m
[32m  Best f1:0.3653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28281:  36%|███▌      | 10/28 [00:33<01:09,  3.86s/it]epoch 4 loss 1.2934:  36%|███▌      | 10/28 [00:34<01:09,  3.86s/it] epoch 4 loss 1.2934:  39%|███▉      | 11/28 [00:34<00:47,  2.81s/it]epoch 4 loss 1.28794:  39%|███▉      | 11/28 [00:34<00:47,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6618[0m
[32m  eval_f1 = 0.3658[0m
[32m  eval_mcc = 0.643[0m
[32m  eval_precision = 0.4821[0m
[32m  eval_recall = 0.3365[0m
[32m  ********************[0m
[32m  Best f1:0.3658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28794:  43%|████▎     | 12/28 [00:40<01:01,  3.84s/it]epoch 4 loss 1.28884:  43%|████▎     | 12/28 [00:40<01:01,  3.84s/it]epoch 4 loss 1.28884:  46%|████▋     | 13/28 [00:40<00:42,  2.80s/it]epoch 4 loss 1.29296:  46%|████▋     | 13/28 [00:41<00:42,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6622[0m
[32m  eval_f1 = 0.3651[0m
[32m  eval_mcc = 0.6433[0m
[32m  eval_precision = 0.4815[0m
[32m  eval_recall = 0.3361[0m
[32m  ********************[0m
[32m  Best MCC:0.6433[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29296:  50%|█████     | 14/28 [00:45<00:48,  3.46s/it]epoch 4 loss 1.28698:  50%|█████     | 14/28 [00:46<00:48,  3.46s/it]epoch 4 loss 1.28698:  54%|█████▎    | 15/28 [00:46<00:33,  2.54s/it]epoch 4 loss 1.28664:  54%|█████▎    | 15/28 [00:46<00:33,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6624[0m
[32m  eval_f1 = 0.3653[0m
[32m  eval_mcc = 0.6435[0m
[32m  eval_precision = 0.4812[0m
[32m  eval_recall = 0.3364[0m
[32m  ********************[0m
[32m  Best MCC:0.6435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28664:  57%|█████▋    | 16/28 [00:51<00:39,  3.30s/it]epoch 4 loss 1.28769:  57%|█████▋    | 16/28 [00:51<00:39,  3.30s/it]epoch 4 loss 1.28769:  61%|██████    | 17/28 [00:51<00:26,  2.43s/it]epoch 4 loss 1.28903:  61%|██████    | 17/28 [00:51<00:26,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6626[0m
[32m  eval_f1 = 0.3655[0m
[32m  eval_mcc = 0.6438[0m
[32m  eval_precision = 0.482[0m
[32m  eval_recall = 0.3366[0m
[32m  ********************[0m
[32m  Best MCC:0.6438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28903:  64%|██████▍   | 18/28 [00:56<00:31,  3.15s/it]epoch 4 loss 1.28598:  64%|██████▍   | 18/28 [00:56<00:31,  3.15s/it]epoch 4 loss 1.28598:  68%|██████▊   | 19/28 [00:56<00:20,  2.32s/it]epoch 4 loss 1.28707:  68%|██████▊   | 19/28 [00:57<00:20,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6626[0m
[32m  eval_f1 = 0.3654[0m
[32m  eval_mcc = 0.6438[0m
[32m  eval_precision = 0.4838[0m
[32m  eval_recall = 0.3364[0m

epoch 4 loss 1.28707:  71%|███████▏  | 20/28 [01:00<00:22,  2.77s/it]epoch 4 loss 1.28101:  71%|███████▏  | 20/28 [01:00<00:22,  2.77s/it]epoch 4 loss 1.28101:  75%|███████▌  | 21/28 [01:00<00:14,  2.06s/it]epoch 4 loss 1.28047:  75%|███████▌  | 21/28 [01:01<00:14,  2.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6627[0m
[32m  eval_f1 = 0.3652[0m
[32m  eval_mcc = 0.6439[0m
[32m  eval_precision = 0.4852[0m
[32m  eval_recall = 0.3362[0m
[32m  ********************[0m
[32m  Best MCC:0.6439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28047:  79%|███████▊  | 22/28 [01:06<00:17,  2.96s/it]epoch 4 loss 1.27616:  79%|███████▊  | 22/28 [01:06<00:17,  2.96s/it]epoch 4 loss 1.27616:  82%|████████▏ | 23/28 [01:06<00:10,  2.20s/it]epoch 4 loss 1.27703:  82%|████████▏ | 23/28 [01:06<00:10,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6629[0m
[32m  eval_f1 = 0.3654[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4861[0m
[32m  eval_recall = 0.3362[0m
[32m  ********************[0m
[32m  Best MCC:0.6443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/3/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27703:  86%|████████▌ | 24/28 [01:11<00:11,  2.94s/it]epoch 4 loss 1.27869:  86%|████████▌ | 24/28 [01:11<00:11,  2.94s/it]epoch 4 loss 1.27869:  89%|████████▉ | 25/28 [01:11<00:06,  2.18s/it]epoch 4 loss 1.27576:  89%|████████▉ | 25/28 [01:11<00:06,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6629[0m
[32m  eval_f1 = 0.3654[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4866[0m
[32m  eval_recall = 0.3361[0m

epoch 4 loss 1.27576:  93%|█████████▎| 26/28 [01:15<00:05,  2.67s/it]epoch 4 loss 1.27139:  93%|█████████▎| 26/28 [01:15<00:05,  2.67s/it]epoch 4 loss 1.27139:  96%|█████████▋| 27/28 [01:15<00:01,  1.99s/it]epoch 4 loss 1.27072:  96%|█████████▋| 27/28 [01:15<00:01,  1.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6629[0m
[32m  eval_f1 = 0.3653[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4877[0m
[32m  eval_recall = 0.336[0m

epoch 4 loss 1.27072: 100%|██████████| 28/28 [01:19<00:00,  2.47s/it]epoch 4 loss 1.27072: 100%|██████████| 28/28 [01:19<00:00,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6618[0m
[32m  eval_f1 = 0.3658[0m
[32m  eval_mcc = 0.643[0m
[32m  eval_precision = 0.4821[0m
[32m  eval_recall = 0.3365[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6465[0m
[32m  eval_f1 = 0.3249[0m
[32m  eval_mcc = 0.628[0m
[32m  eval_precision = 0.4479[0m
[32m  eval_recall = 0.2986[0m

