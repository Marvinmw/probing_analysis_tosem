[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/2/layer_9', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.1985:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.1985:   4%|▎         | 1/28 [00:00<00:20,  1.33it/s]epoch 0 loss 5.19891:   4%|▎         | 1/28 [00:01<00:20,  1.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0086[0m
[32m  eval_f1 = 0.0021[0m
[32m  eval_mcc = 0.0034[0m
[32m  eval_precision = 0.0085[0m
[32m  eval_recall = 0.0049[0m
[32m  ********************[0m
[32m  Best f1:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.19891:   7%|▋         | 2/28 [00:05<01:23,  3.23s/it]epoch 0 loss 5.19651:   7%|▋         | 2/28 [00:06<01:23,  3.23s/it]epoch 0 loss 5.19651:  11%|█         | 3/28 [00:06<00:48,  1.94s/it]epoch 0 loss 5.1781:  11%|█         | 3/28 [00:06<00:48,  1.94s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0141[0m
[32m  eval_f1 = 0.0026[0m
[32m  eval_mcc = 0.0047[0m
[32m  eval_precision = 0.0087[0m
[32m  eval_recall = 0.0058[0m
[32m  ********************[0m
[32m  Best f1:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.1781:  14%|█▍        | 4/28 [00:19<02:39,  6.64s/it]epoch 0 loss 5.15636:  14%|█▍        | 4/28 [00:20<02:39,  6.64s/it]epoch 0 loss 5.15636:  18%|█▊        | 5/28 [00:20<01:41,  4.40s/it]epoch 0 loss 5.12291:  18%|█▊        | 5/28 [00:20<01:41,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0414[0m
[32m  eval_f1 = 0.0063[0m
[32m  eval_mcc = 0.0206[0m
[32m  eval_precision = 0.0097[0m
[32m  eval_recall = 0.0112[0m
[32m  ********************[0m
[32m  Best f1:0.0063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.12291:  21%|██▏       | 6/28 [00:30<02:18,  6.27s/it]epoch 0 loss 5.08567:  21%|██▏       | 6/28 [00:30<02:18,  6.27s/it]epoch 0 loss 5.08567:  25%|██▌       | 7/28 [00:30<01:31,  4.36s/it]epoch 0 loss 5.04579:  25%|██▌       | 7/28 [00:31<01:31,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0724[0m
[32m  eval_f1 = 0.0083[0m
[32m  eval_mcc = 0.0358[0m
[32m  eval_precision = 0.0114[0m
[32m  eval_recall = 0.0159[0m
[32m  ********************[0m
[32m  Best f1:0.0083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04579:  29%|██▊       | 8/28 [00:40<02:01,  6.08s/it]epoch 0 loss 4.99546:  29%|██▊       | 8/28 [00:40<02:01,  6.08s/it]epoch 0 loss 4.99546:  32%|███▏      | 9/28 [00:40<01:21,  4.31s/it]epoch 0 loss 4.94597:  32%|███▏      | 9/28 [00:41<01:21,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0966[0m
[32m  eval_f1 = 0.0111[0m
[32m  eval_mcc = 0.0501[0m
[32m  eval_precision = 0.0139[0m
[32m  eval_recall = 0.0207[0m
[32m  ********************[0m
[32m  Best f1:0.0111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0501[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94597:  36%|███▌      | 10/28 [00:48<01:36,  5.37s/it]epoch 0 loss 4.89332:  36%|███▌      | 10/28 [00:49<01:36,  5.37s/it]epoch 0 loss 4.89332:  39%|███▉      | 11/28 [00:49<01:05,  3.85s/it]epoch 0 loss 4.83079:  39%|███▉      | 11/28 [00:49<01:05,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.116[0m
[32m  eval_f1 = 0.0142[0m
[32m  eval_mcc = 0.0616[0m
[32m  eval_precision = 0.0194[0m
[32m  eval_recall = 0.0235[0m
[32m  ********************[0m
[32m  Best f1:0.0142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0616[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.83079:  43%|████▎     | 12/28 [00:58<01:29,  5.59s/it]epoch 0 loss 4.76542:  43%|████▎     | 12/28 [00:59<01:29,  5.59s/it]epoch 0 loss 4.76542:  46%|████▋     | 13/28 [00:59<01:00,  4.03s/it]epoch 0 loss 4.70397:  46%|████▋     | 13/28 [00:59<01:00,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1347[0m
[32m  eval_f1 = 0.018[0m
[32m  eval_mcc = 0.0746[0m
[32m  eval_precision = 0.0327[0m
[32m  eval_recall = 0.0249[0m
[32m  ********************[0m
[32m  Best f1:0.018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.70397:  50%|█████     | 14/28 [01:07<01:14,  5.36s/it]epoch 0 loss 4.63901:  50%|█████     | 14/28 [01:07<01:14,  5.36s/it]epoch 0 loss 4.63901:  54%|█████▎    | 15/28 [01:07<00:50,  3.87s/it]epoch 0 loss 4.57243:  54%|█████▎    | 15/28 [01:08<00:50,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.64it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1635[0m
[32m  eval_f1 = 0.0219[0m
[32m  eval_mcc = 0.1021[0m
[32m  eval_precision = 0.0447[0m
[32m  eval_recall = 0.0264[0m
[32m  ********************[0m
[32m  Best f1:0.0219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.57243:  57%|█████▋    | 16/28 [01:18<01:10,  5.85s/it]epoch 0 loss 4.50899:  57%|█████▋    | 16/28 [01:18<01:10,  5.85s/it]epoch 0 loss 4.50899:  61%|██████    | 17/28 [01:18<00:46,  4.22s/it]epoch 0 loss 4.4528:  61%|██████    | 17/28 [01:19<00:46,  4.22s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2007[0m
[32m  eval_f1 = 0.0238[0m
[32m  eval_mcc = 0.1387[0m
[32m  eval_precision = 0.0701[0m
[32m  eval_recall = 0.0274[0m
[32m  ********************[0m
[32m  Best f1:0.0238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.4528:  64%|██████▍   | 18/28 [01:26<00:51,  5.14s/it]epoch 0 loss 4.38692:  64%|██████▍   | 18/28 [01:26<00:51,  5.14s/it]epoch 0 loss 4.38692:  68%|██████▊   | 19/28 [01:26<00:33,  3.73s/it]epoch 0 loss 4.32581:  68%|██████▊   | 19/28 [01:26<00:33,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2468[0m
[32m  eval_f1 = 0.0308[0m
[32m  eval_mcc = 0.1897[0m
[32m  eval_precision = 0.0856[0m
[32m  eval_recall = 0.0338[0m
[32m  ********************[0m
[32m  Best f1:0.0308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.32581:  71%|███████▏  | 20/28 [01:35<00:43,  5.43s/it]epoch 0 loss 4.26211:  71%|███████▏  | 20/28 [01:36<00:43,  5.43s/it]epoch 0 loss 4.26211:  75%|███████▌  | 21/28 [01:36<00:27,  3.93s/it]epoch 0 loss 4.20377:  75%|███████▌  | 21/28 [01:36<00:27,  3.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2874[0m
[32m  eval_f1 = 0.0394[0m
[32m  eval_mcc = 0.2398[0m
[32m  eval_precision = 0.0688[0m
[32m  eval_recall = 0.0429[0m
[32m  ********************[0m
[32m  Best f1:0.0394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.20377:  79%|███████▊  | 22/28 [01:44<00:30,  5.11s/it]epoch 0 loss 4.14999:  79%|███████▊  | 22/28 [01:44<00:30,  5.11s/it]epoch 0 loss 4.14999:  82%|████████▏ | 23/28 [01:44<00:18,  3.70s/it]epoch 0 loss 4.09919:  82%|████████▏ | 23/28 [01:45<00:18,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3266[0m
[32m  eval_f1 = 0.0585[0m
[32m  eval_mcc = 0.2834[0m
[32m  eval_precision = 0.1169[0m
[32m  eval_recall = 0.0611[0m
[32m  ********************[0m
[32m  Best f1:0.0585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.09919:  86%|████████▌ | 24/28 [01:55<00:22,  5.71s/it]epoch 0 loss 4.04602:  86%|████████▌ | 24/28 [01:55<00:22,  5.71s/it]epoch 0 loss 4.04602:  89%|████████▉ | 25/28 [01:55<00:12,  4.13s/it]epoch 0 loss 3.99986:  89%|████████▉ | 25/28 [01:55<00:12,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3811[0m
[32m  eval_f1 = 0.1026[0m
[32m  eval_mcc = 0.3434[0m
[32m  eval_precision = 0.1675[0m
[32m  eval_recall = 0.0959[0m
[32m  ********************[0m
[32m  Best f1:0.1026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3434[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.99986:  93%|█████████▎| 26/28 [02:03<00:10,  5.33s/it]epoch 0 loss 3.95114:  93%|█████████▎| 26/28 [02:04<00:10,  5.33s/it]epoch 0 loss 3.95114:  96%|█████████▋| 27/28 [02:04<00:03,  3.86s/it]epoch 0 loss 3.89372:  96%|█████████▋| 27/28 [02:04<00:03,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4513[0m
[32m  eval_f1 = 0.1452[0m
[32m  eval_mcc = 0.419[0m
[32m  eval_precision = 0.2006[0m
[32m  eval_recall = 0.1319[0m
[32m  ********************[0m
[32m  Best f1:0.1452[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.419[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.89372: 100%|██████████| 28/28 [02:13<00:00,  5.50s/it]epoch 0 loss 3.89372: 100%|██████████| 28/28 [02:13<00:00,  4.76s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.46582:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.46582:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 1 loss 2.3751:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5087[0m
[32m  eval_f1 = 0.1668[0m
[32m  eval_mcc = 0.4773[0m
[32m  eval_precision = 0.2156[0m
[32m  eval_recall = 0.1603[0m
[32m  ********************[0m
[32m  Best f1:0.1668[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.3751:   7%|▋         | 2/28 [00:09<02:27,  5.65s/it]epoch 1 loss 2.34028:   7%|▋         | 2/28 [00:10<02:27,  5.65s/it]epoch 1 loss 2.34028:  11%|█         | 3/28 [00:10<01:21,  3.27s/it]epoch 1 loss 2.34385:  11%|█         | 3/28 [00:10<01:21,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5435[0m
[32m  eval_f1 = 0.1792[0m
[32m  eval_mcc = 0.5167[0m
[32m  eval_precision = 0.2276[0m
[32m  eval_recall = 0.1763[0m
[32m  ********************[0m
[32m  Best f1:0.1792[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.34385:  14%|█▍        | 4/28 [00:18<02:03,  5.17s/it]epoch 1 loss 2.32353:  14%|█▍        | 4/28 [00:18<02:03,  5.17s/it]epoch 1 loss 2.32353:  18%|█▊        | 5/28 [00:18<01:19,  3.46s/it]epoch 1 loss 2.29089:  18%|█▊        | 5/28 [00:19<01:19,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5551[0m
[32m  eval_f1 = 0.1854[0m
[32m  eval_mcc = 0.5313[0m
[32m  eval_precision = 0.2605[0m
[32m  eval_recall = 0.1829[0m
[32m  ********************[0m
[32m  Best f1:0.1854[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29089:  21%|██▏       | 6/28 [00:24<01:35,  4.33s/it]epoch 1 loss 2.25439:  21%|██▏       | 6/28 [00:25<01:35,  4.33s/it]epoch 1 loss 2.25439:  25%|██▌       | 7/28 [00:25<01:04,  3.06s/it]epoch 1 loss 2.22885:  25%|██▌       | 7/28 [00:25<01:04,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.568[0m
[32m  eval_f1 = 0.1975[0m
[32m  eval_mcc = 0.5442[0m
[32m  eval_precision = 0.2676[0m
[32m  eval_recall = 0.191[0m
[32m  ********************[0m
[32m  Best f1:0.1975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.22885:  29%|██▊       | 8/28 [00:31<01:21,  4.10s/it]epoch 1 loss 2.19745:  29%|██▊       | 8/28 [00:31<01:21,  4.10s/it]epoch 1 loss 2.19745:  32%|███▏      | 9/28 [00:31<00:56,  2.95s/it]epoch 1 loss 2.15885:  32%|███▏      | 9/28 [00:32<00:56,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.574[0m
[32m  eval_f1 = 0.2072[0m
[32m  eval_mcc = 0.5484[0m
[32m  eval_precision = 0.2639[0m
[32m  eval_recall = 0.1987[0m
[32m  ********************[0m
[32m  Best f1:0.2072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15885:  36%|███▌      | 10/28 [00:37<01:10,  3.90s/it]epoch 1 loss 2.14769:  36%|███▌      | 10/28 [00:38<01:10,  3.90s/it]epoch 1 loss 2.14769:  39%|███▉      | 11/28 [00:38<00:48,  2.84s/it]epoch 1 loss 2.13348:  39%|███▉      | 11/28 [00:38<00:48,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.58[0m
[32m  eval_f1 = 0.2136[0m
[32m  eval_mcc = 0.5539[0m
[32m  eval_precision = 0.2889[0m
[32m  eval_recall = 0.2037[0m
[32m  ********************[0m
[32m  Best f1:0.2136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5539[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13348:  43%|████▎     | 12/28 [00:44<01:00,  3.81s/it]epoch 1 loss 2.11172:  43%|████▎     | 12/28 [00:44<01:00,  3.81s/it]epoch 1 loss 2.11172:  46%|████▋     | 13/28 [00:44<00:41,  2.78s/it]epoch 1 loss 2.09531:  46%|████▋     | 13/28 [00:45<00:41,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5854[0m
[32m  eval_f1 = 0.2259[0m
[32m  eval_mcc = 0.5595[0m
[32m  eval_precision = 0.2939[0m
[32m  eval_recall = 0.2132[0m
[32m  ********************[0m
[32m  Best f1:0.2259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09531:  50%|█████     | 14/28 [00:50<00:51,  3.65s/it]epoch 1 loss 2.0874:  50%|█████     | 14/28 [00:50<00:51,  3.65s/it] epoch 1 loss 2.0874:  54%|█████▎    | 15/28 [00:50<00:34,  2.68s/it]epoch 1 loss 2.07114:  54%|█████▎    | 15/28 [00:51<00:34,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5918[0m
[32m  eval_f1 = 0.2291[0m
[32m  eval_mcc = 0.5668[0m
[32m  eval_precision = 0.3052[0m
[32m  eval_recall = 0.2166[0m
[32m  ********************[0m
[32m  Best f1:0.2291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5668[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07114:  57%|█████▋    | 16/28 [00:57<00:44,  3.75s/it]epoch 1 loss 2.04518:  57%|█████▋    | 16/28 [00:57<00:44,  3.75s/it]epoch 1 loss 2.04518:  61%|██████    | 17/28 [00:57<00:30,  2.75s/it]epoch 1 loss 2.02956:  61%|██████    | 17/28 [00:57<00:30,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5959[0m
[32m  eval_f1 = 0.2333[0m
[32m  eval_mcc = 0.5731[0m
[32m  eval_precision = 0.3189[0m
[32m  eval_recall = 0.2198[0m
[32m  ********************[0m
[32m  Best f1:0.2333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5731[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02956:  64%|██████▍   | 18/28 [01:03<00:37,  3.73s/it]epoch 1 loss 2.00977:  64%|██████▍   | 18/28 [01:03<00:37,  3.73s/it]epoch 1 loss 2.00977:  68%|██████▊   | 19/28 [01:03<00:24,  2.74s/it]epoch 1 loss 1.98536:  68%|██████▊   | 19/28 [01:04<00:24,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.599[0m
[32m  eval_f1 = 0.2356[0m
[32m  eval_mcc = 0.5812[0m
[32m  eval_precision = 0.3324[0m
[32m  eval_recall = 0.221[0m
[32m  ********************[0m
[32m  Best f1:0.2356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5812[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98536:  71%|███████▏  | 20/28 [01:09<00:29,  3.72s/it]epoch 1 loss 1.96954:  71%|███████▏  | 20/28 [01:10<00:29,  3.72s/it]epoch 1 loss 1.96954:  75%|███████▌  | 21/28 [01:10<00:19,  2.73s/it]epoch 1 loss 1.95369:  75%|███████▌  | 21/28 [01:10<00:19,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6017[0m
[32m  eval_f1 = 0.2391[0m
[32m  eval_mcc = 0.5842[0m
[32m  eval_precision = 0.3381[0m
[32m  eval_recall = 0.2237[0m
[32m  ********************[0m
[32m  Best f1:0.2391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5842[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95369:  79%|███████▊  | 22/28 [01:16<00:21,  3.66s/it]epoch 1 loss 1.93983:  79%|███████▊  | 22/28 [01:16<00:21,  3.66s/it]epoch 1 loss 1.93983:  82%|████████▏ | 23/28 [01:16<00:13,  2.69s/it]epoch 1 loss 1.9248:  82%|████████▏ | 23/28 [01:17<00:13,  2.69s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6063[0m
[32m  eval_f1 = 0.2594[0m
[32m  eval_mcc = 0.5863[0m
[32m  eval_precision = 0.3538[0m
[32m  eval_recall = 0.2414[0m
[32m  ********************[0m
[32m  Best f1:0.2594[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5863[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9248:  86%|████████▌ | 24/28 [01:22<00:14,  3.69s/it]epoch 1 loss 1.91017:  86%|████████▌ | 24/28 [01:23<00:14,  3.69s/it]epoch 1 loss 1.91017:  89%|████████▉ | 25/28 [01:23<00:08,  2.70s/it]epoch 1 loss 1.89622:  89%|████████▉ | 25/28 [01:23<00:08,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6109[0m
[32m  eval_f1 = 0.2669[0m
[32m  eval_mcc = 0.5883[0m
[32m  eval_precision = 0.3765[0m
[32m  eval_recall = 0.2474[0m
[32m  ********************[0m
[32m  Best f1:0.2669[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5883[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89622:  93%|█████████▎| 26/28 [01:28<00:07,  3.64s/it]epoch 1 loss 1.88707:  93%|█████████▎| 26/28 [01:29<00:07,  3.64s/it]epoch 1 loss 1.88707:  96%|█████████▋| 27/28 [01:29<00:02,  2.68s/it]epoch 1 loss 1.87346:  96%|█████████▋| 27/28 [01:29<00:02,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6123[0m
[32m  eval_f1 = 0.2726[0m
[32m  eval_mcc = 0.5887[0m
[32m  eval_precision = 0.41[0m
[32m  eval_recall = 0.2526[0m
[32m  ********************[0m
[32m  Best f1:0.2726[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5887[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87346: 100%|██████████| 28/28 [01:35<00:00,  3.61s/it]epoch 1 loss 1.87346: 100%|██████████| 28/28 [01:35<00:00,  3.40s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.3972:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.3972:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 2 loss 1.47748:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6138[0m
[32m  eval_f1 = 0.278[0m
[32m  eval_mcc = 0.5903[0m
[32m  eval_precision = 0.4166[0m
[32m  eval_recall = 0.2573[0m
[32m  ********************[0m
[32m  Best f1:0.278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47748:   7%|▋         | 2/28 [00:06<01:35,  3.66s/it]epoch 2 loss 1.47211:   7%|▋         | 2/28 [00:06<01:35,  3.66s/it]epoch 2 loss 1.47211:  11%|█         | 3/28 [00:06<00:54,  2.18s/it]epoch 2 loss 1.53929:  11%|█         | 3/28 [00:07<00:54,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6171[0m
[32m  eval_f1 = 0.2939[0m
[32m  eval_mcc = 0.594[0m
[32m  eval_precision = 0.4144[0m
[32m  eval_recall = 0.2709[0m
[32m  ********************[0m
[32m  Best f1:0.2939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.594[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53929:  14%|█▍        | 4/28 [00:17<02:10,  5.45s/it]epoch 2 loss 1.53763:  14%|█▍        | 4/28 [00:17<02:10,  5.45s/it]epoch 2 loss 1.53763:  18%|█▊        | 5/28 [00:17<01:23,  3.64s/it]epoch 2 loss 1.5328:  18%|█▊        | 5/28 [00:18<01:23,  3.64s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6192[0m
[32m  eval_f1 = 0.2964[0m
[32m  eval_mcc = 0.5972[0m
[32m  eval_precision = 0.4131[0m
[32m  eval_recall = 0.2737[0m
[32m  ********************[0m
[32m  Best f1:0.2964[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5972[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.5328:  21%|██▏       | 6/28 [00:30<02:26,  6.66s/it]epoch 2 loss 1.52441:  21%|██▏       | 6/28 [00:30<02:26,  6.66s/it]epoch 2 loss 1.52441:  25%|██▌       | 7/28 [00:30<01:37,  4.62s/it]epoch 2 loss 1.53229:  25%|██▌       | 7/28 [00:31<01:37,  4.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6212[0m
[32m  eval_f1 = 0.2979[0m
[32m  eval_mcc = 0.6019[0m
[32m  eval_precision = 0.4214[0m
[32m  eval_recall = 0.2738[0m
[32m  ********************[0m
[32m  Best f1:0.2979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53229:  29%|██▊       | 8/28 [00:42<02:19,  7.00s/it]epoch 2 loss 1.52556:  29%|██▊       | 8/28 [00:43<02:19,  7.00s/it]epoch 2 loss 1.52556:  32%|███▏      | 9/28 [00:43<01:33,  4.95s/it]epoch 2 loss 1.50512:  32%|███▏      | 9/28 [00:43<01:33,  4.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6211[0m
[32m  eval_f1 = 0.3[0m
[32m  eval_mcc = 0.6037[0m
[32m  eval_precision = 0.4265[0m
[32m  eval_recall = 0.2747[0m
[32m  ********************[0m
[32m  Best f1:0.3[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50512:  36%|███▌      | 10/28 [00:53<01:59,  6.64s/it]epoch 2 loss 1.50307:  36%|███▌      | 10/28 [00:53<01:59,  6.64s/it]epoch 2 loss 1.50307:  39%|███▉      | 11/28 [00:53<01:20,  4.73s/it]epoch 2 loss 1.49702:  39%|███▉      | 11/28 [00:54<01:20,  4.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6233[0m
[32m  eval_f1 = 0.3025[0m
[32m  eval_mcc = 0.6047[0m
[32m  eval_precision = 0.4388[0m
[32m  eval_recall = 0.278[0m
[32m  ********************[0m
[32m  Best f1:0.3025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49702:  43%|████▎     | 12/28 [01:03<01:40,  6.27s/it]epoch 2 loss 1.49705:  43%|████▎     | 12/28 [01:04<01:40,  6.27s/it]epoch 2 loss 1.49705:  46%|████▋     | 13/28 [01:04<01:07,  4.50s/it]epoch 2 loss 1.48298:  46%|████▋     | 13/28 [01:04<01:07,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6258[0m
[32m  eval_f1 = 0.3072[0m
[32m  eval_mcc = 0.6053[0m
[32m  eval_precision = 0.4363[0m
[32m  eval_recall = 0.2842[0m
[32m  ********************[0m
[32m  Best f1:0.3072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48298:  50%|█████     | 14/28 [01:14<01:27,  6.23s/it]epoch 2 loss 1.48459:  50%|█████     | 14/28 [01:14<01:27,  6.23s/it]epoch 2 loss 1.48459:  54%|█████▎    | 15/28 [01:14<00:58,  4.48s/it]epoch 2 loss 1.48438:  54%|█████▎    | 15/28 [01:15<00:58,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6283[0m
[32m  eval_f1 = 0.3121[0m
[32m  eval_mcc = 0.6064[0m
[32m  eval_precision = 0.4363[0m
[32m  eval_recall = 0.2891[0m
[32m  ********************[0m
[32m  Best f1:0.3121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48438:  57%|█████▋    | 16/28 [01:22<01:05,  5.48s/it]epoch 2 loss 1.4825:  57%|█████▋    | 16/28 [01:23<01:05,  5.48s/it] epoch 2 loss 1.4825:  61%|██████    | 17/28 [01:23<00:43,  3.96s/it]epoch 2 loss 1.47292:  61%|██████    | 17/28 [01:23<00:43,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.631[0m
[32m  eval_f1 = 0.3154[0m
[32m  eval_mcc = 0.6088[0m
[32m  eval_precision = 0.4379[0m
[32m  eval_recall = 0.2915[0m
[32m  ********************[0m
[32m  Best f1:0.3154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47292:  64%|██████▍   | 18/28 [01:32<00:56,  5.64s/it]epoch 2 loss 1.47087:  64%|██████▍   | 18/28 [01:33<00:56,  5.64s/it]epoch 2 loss 1.47087:  68%|██████▊   | 19/28 [01:33<00:36,  4.07s/it]epoch 2 loss 1.46629:  68%|██████▊   | 19/28 [01:33<00:36,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6345[0m
[32m  eval_f1 = 0.3216[0m
[32m  eval_mcc = 0.6125[0m
[32m  eval_precision = 0.4371[0m
[32m  eval_recall = 0.2967[0m
[32m  ********************[0m
[32m  Best f1:0.3216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46629:  71%|███████▏  | 20/28 [01:40<00:40,  5.11s/it]epoch 2 loss 1.4635:  71%|███████▏  | 20/28 [01:40<00:40,  5.11s/it] epoch 2 loss 1.4635:  75%|███████▌  | 21/28 [01:40<00:25,  3.70s/it]epoch 2 loss 1.45996:  75%|███████▌  | 21/28 [01:41<00:25,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.636[0m
[32m  eval_f1 = 0.325[0m
[32m  eval_mcc = 0.6143[0m
[32m  eval_precision = 0.4304[0m
[32m  eval_recall = 0.3004[0m
[32m  ********************[0m
[32m  Best f1:0.325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45996:  79%|███████▊  | 22/28 [01:50<00:32,  5.44s/it]epoch 2 loss 1.46446:  79%|███████▊  | 22/28 [01:50<00:32,  5.44s/it]epoch 2 loss 1.46446:  82%|████████▏ | 23/28 [01:50<00:19,  3.94s/it]epoch 2 loss 1.46409:  82%|████████▏ | 23/28 [01:51<00:19,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6387[0m
[32m  eval_f1 = 0.328[0m
[32m  eval_mcc = 0.6175[0m
[32m  eval_precision = 0.4279[0m
[32m  eval_recall = 0.3033[0m
[32m  ********************[0m
[32m  Best f1:0.328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46409:  86%|████████▌ | 24/28 [01:58<00:20,  5.09s/it]epoch 2 loss 1.46077:  86%|████████▌ | 24/28 [01:59<00:20,  5.09s/it]epoch 2 loss 1.46077:  89%|████████▉ | 25/28 [01:59<00:11,  3.69s/it]epoch 2 loss 1.46345:  89%|████████▉ | 25/28 [01:59<00:11,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6402[0m
[32m  eval_f1 = 0.3307[0m
[32m  eval_mcc = 0.6195[0m
[32m  eval_precision = 0.4279[0m
[32m  eval_recall = 0.3047[0m
[32m  ********************[0m
[32m  Best f1:0.3307[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46345:  93%|█████████▎| 26/28 [02:08<00:10,  5.42s/it]epoch 2 loss 1.46254:  93%|█████████▎| 26/28 [02:08<00:10,  5.42s/it]epoch 2 loss 1.46254:  96%|█████████▋| 27/28 [02:08<00:03,  3.92s/it]epoch 2 loss 1.46412:  96%|█████████▋| 27/28 [02:09<00:03,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6414[0m
[32m  eval_f1 = 0.3317[0m
[32m  eval_mcc = 0.6212[0m
[32m  eval_precision = 0.4435[0m
[32m  eval_recall = 0.3044[0m
[32m  ********************[0m
[32m  Best f1:0.3317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46412: 100%|██████████| 28/28 [02:16<00:00,  5.11s/it]epoch 2 loss 1.46412: 100%|██████████| 28/28 [02:16<00:00,  4.89s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.36084:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.36084:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 3 loss 1.43949:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6416[0m
[32m  eval_f1 = 0.3322[0m
[32m  eval_mcc = 0.622[0m
[32m  eval_precision = 0.4468[0m
[32m  eval_recall = 0.304[0m
[32m  ********************[0m
[32m  Best f1:0.3322[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43949:   7%|▋         | 2/28 [00:11<02:57,  6.81s/it]epoch 3 loss 1.4166:   7%|▋         | 2/28 [00:12<02:57,  6.81s/it] epoch 3 loss 1.4166:  11%|█         | 3/28 [00:12<01:37,  3.89s/it]epoch 3 loss 1.40537:  11%|█         | 3/28 [00:12<01:37,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.3371[0m
[32m  eval_mcc = 0.6232[0m
[32m  eval_precision = 0.469[0m
[32m  eval_recall = 0.307[0m
[32m  ********************[0m
[32m  Best f1:0.3371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40537:  14%|█▍        | 4/28 [00:18<01:53,  4.71s/it]epoch 3 loss 1.39637:  14%|█▍        | 4/28 [00:18<01:53,  4.71s/it]epoch 3 loss 1.39637:  18%|█▊        | 5/28 [00:18<01:12,  3.16s/it]epoch 3 loss 1.39112:  18%|█▊        | 5/28 [00:18<01:12,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6442[0m
[32m  eval_f1 = 0.3369[0m
[32m  eval_mcc = 0.6245[0m
[32m  eval_precision = 0.4706[0m
[32m  eval_recall = 0.3069[0m
[32m  ********************[0m
[32m  Best MCC:0.6245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39112:  21%|██▏       | 6/28 [00:23<01:23,  3.79s/it]epoch 3 loss 1.37803:  21%|██▏       | 6/28 [00:23<01:23,  3.79s/it]epoch 3 loss 1.37803:  25%|██▌       | 7/28 [00:23<00:56,  2.68s/it]epoch 3 loss 1.3796:  25%|██▌       | 7/28 [00:24<00:56,  2.68s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6458[0m
[32m  eval_f1 = 0.3387[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4775[0m
[32m  eval_recall = 0.3091[0m
[32m  ********************[0m
[32m  Best f1:0.3387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3796:  29%|██▊       | 8/28 [00:34<01:44,  5.22s/it]epoch 3 loss 1.37651:  29%|██▊       | 8/28 [00:35<01:44,  5.22s/it]epoch 3 loss 1.37651:  32%|███▏      | 9/28 [00:35<01:10,  3.72s/it]epoch 3 loss 1.37186:  32%|███▏      | 9/28 [00:35<01:10,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6465[0m
[32m  eval_f1 = 0.3381[0m
[32m  eval_mcc = 0.6258[0m
[32m  eval_precision = 0.4874[0m
[32m  eval_recall = 0.3094[0m
[32m  ********************[0m
[32m  Best MCC:0.6258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37186:  36%|███▌      | 10/28 [00:41<01:22,  4.56s/it]epoch 3 loss 1.36829:  36%|███▌      | 10/28 [00:41<01:22,  4.56s/it]epoch 3 loss 1.36829:  39%|███▉      | 11/28 [00:41<00:55,  3.29s/it]epoch 3 loss 1.36569:  39%|███▉      | 11/28 [00:42<00:55,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6477[0m
[32m  eval_f1 = 0.3401[0m
[32m  eval_mcc = 0.6271[0m
[32m  eval_precision = 0.4845[0m
[32m  eval_recall = 0.3118[0m
[32m  ********************[0m
[32m  Best f1:0.3401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36569:  43%|████▎     | 12/28 [00:53<01:32,  5.76s/it]epoch 3 loss 1.37118:  43%|████▎     | 12/28 [00:53<01:32,  5.76s/it]epoch 3 loss 1.37118:  46%|████▋     | 13/28 [00:53<01:02,  4.14s/it]epoch 3 loss 1.37045:  46%|████▋     | 13/28 [00:54<01:02,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.648[0m
[32m  eval_f1 = 0.3396[0m
[32m  eval_mcc = 0.6275[0m
[32m  eval_precision = 0.4678[0m
[32m  eval_recall = 0.3119[0m
[32m  ********************[0m
[32m  Best MCC:0.6275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37045:  50%|█████     | 14/28 [00:59<01:05,  4.67s/it]epoch 3 loss 1.37894:  50%|█████     | 14/28 [00:59<01:05,  4.67s/it]epoch 3 loss 1.37894:  54%|█████▎    | 15/28 [00:59<00:44,  3.39s/it]epoch 3 loss 1.37382:  54%|█████▎    | 15/28 [01:00<00:44,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6489[0m
[32m  eval_f1 = 0.3427[0m
[32m  eval_mcc = 0.6284[0m
[32m  eval_precision = 0.4799[0m
[32m  eval_recall = 0.3145[0m
[32m  ********************[0m
[32m  Best f1:0.3427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37382:  57%|█████▋    | 16/28 [01:10<01:06,  5.57s/it]epoch 3 loss 1.37372:  57%|█████▋    | 16/28 [01:11<01:06,  5.57s/it]epoch 3 loss 1.37372:  61%|██████    | 17/28 [01:11<00:44,  4.02s/it]epoch 3 loss 1.37175:  61%|██████    | 17/28 [01:11<00:44,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6495[0m
[32m  eval_f1 = 0.3459[0m
[32m  eval_mcc = 0.6289[0m
[32m  eval_precision = 0.4702[0m
[32m  eval_recall = 0.3173[0m
[32m  ********************[0m
[32m  Best f1:0.3459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37175:  64%|██████▍   | 18/28 [01:20<00:56,  5.67s/it]epoch 3 loss 1.37223:  64%|██████▍   | 18/28 [01:20<00:56,  5.67s/it]epoch 3 loss 1.37223:  68%|██████▊   | 19/28 [01:20<00:36,  4.09s/it]epoch 3 loss 1.37767:  68%|██████▊   | 19/28 [01:21<00:36,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3495[0m
[32m  eval_mcc = 0.6312[0m
[32m  eval_precision = 0.4809[0m
[32m  eval_recall = 0.3198[0m
[32m  ********************[0m
[32m  Best f1:0.3495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37767:  71%|███████▏  | 20/28 [01:30<00:45,  5.70s/it]epoch 3 loss 1.37457:  71%|███████▏  | 20/28 [01:30<00:45,  5.70s/it]epoch 3 loss 1.37457:  75%|███████▌  | 21/28 [01:30<00:28,  4.11s/it]epoch 3 loss 1.37422:  75%|███████▌  | 21/28 [01:31<00:28,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6529[0m
[32m  eval_f1 = 0.3525[0m
[32m  eval_mcc = 0.633[0m
[32m  eval_precision = 0.4844[0m
[32m  eval_recall = 0.3221[0m
[32m  ********************[0m
[32m  Best f1:0.3525[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37422:  79%|███████▊  | 22/28 [01:40<00:35,  5.84s/it]epoch 3 loss 1.37184:  79%|███████▊  | 22/28 [01:41<00:35,  5.84s/it]epoch 3 loss 1.37184:  82%|████████▏ | 23/28 [01:41<00:21,  4.22s/it]epoch 3 loss 1.37091:  82%|████████▏ | 23/28 [01:41<00:21,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.3521[0m
[32m  eval_mcc = 0.6331[0m
[32m  eval_precision = 0.4729[0m
[32m  eval_recall = 0.3217[0m
[32m  ********************[0m
[32m  Best MCC:0.6331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37091:  86%|████████▌ | 24/28 [01:46<00:18,  4.71s/it]epoch 3 loss 1.37076:  86%|████████▌ | 24/28 [01:47<00:18,  4.71s/it]epoch 3 loss 1.37076:  89%|████████▉ | 25/28 [01:47<00:10,  3.42s/it]epoch 3 loss 1.36428:  89%|████████▉ | 25/28 [01:47<00:10,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3516[0m
[32m  eval_mcc = 0.6338[0m
[32m  eval_precision = 0.4723[0m
[32m  eval_recall = 0.3214[0m
[32m  ********************[0m
[32m  Best MCC:0.6338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36428:  93%|█████████▎| 26/28 [01:53<00:08,  4.26s/it]epoch 3 loss 1.36507:  93%|█████████▎| 26/28 [01:54<00:08,  4.26s/it]epoch 3 loss 1.36507:  96%|█████████▋| 27/28 [01:54<00:03,  3.11s/it]epoch 3 loss 1.36728:  96%|█████████▋| 27/28 [01:54<00:03,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6531[0m
[32m  eval_f1 = 0.3519[0m
[32m  eval_mcc = 0.6339[0m
[32m  eval_precision = 0.4733[0m
[32m  eval_recall = 0.3215[0m
[32m  ********************[0m
[32m  Best MCC:0.6339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36728: 100%|██████████| 28/28 [01:59<00:00,  3.96s/it]epoch 3 loss 1.36728: 100%|██████████| 28/28 [01:59<00:00,  4.29s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.27955:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.27955:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 4 loss 1.33939:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6535[0m
[32m  eval_f1 = 0.3524[0m
[32m  eval_mcc = 0.6342[0m
[32m  eval_precision = 0.4733[0m
[32m  eval_recall = 0.3221[0m
[32m  ********************[0m
[32m  Best MCC:0.6342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33939:   7%|▋         | 2/28 [00:06<01:38,  3.77s/it]epoch 4 loss 1.31315:   7%|▋         | 2/28 [00:06<01:38,  3.77s/it]epoch 4 loss 1.31315:  11%|█         | 3/28 [00:06<00:56,  2.25s/it]epoch 4 loss 1.34184:  11%|█         | 3/28 [00:07<00:56,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6541[0m
[32m  eval_f1 = 0.355[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4842[0m
[32m  eval_recall = 0.3236[0m
[32m  ********************[0m
[32m  Best f1:0.355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34184:  14%|█▍        | 4/28 [00:17<02:08,  5.36s/it]epoch 4 loss 1.33425:  14%|█▍        | 4/28 [00:17<02:08,  5.36s/it]epoch 4 loss 1.33425:  18%|█▊        | 5/28 [00:17<01:22,  3.58s/it]epoch 4 loss 1.33075:  18%|█▊        | 5/28 [00:17<01:22,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6545[0m
[32m  eval_f1 = 0.3554[0m
[32m  eval_mcc = 0.635[0m
[32m  eval_precision = 0.4854[0m
[32m  eval_recall = 0.3237[0m
[32m  ********************[0m
[32m  Best f1:0.3554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.635[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33075:  21%|██▏       | 6/28 [00:27<02:05,  5.70s/it]epoch 4 loss 1.33552:  21%|██▏       | 6/28 [00:27<02:05,  5.70s/it]epoch 4 loss 1.33552:  25%|██▌       | 7/28 [00:27<01:23,  3.97s/it]epoch 4 loss 1.33111:  25%|██▌       | 7/28 [00:28<01:23,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.64it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6548[0m
[32m  eval_f1 = 0.357[0m
[32m  eval_mcc = 0.6353[0m
[32m  eval_precision = 0.4989[0m
[32m  eval_recall = 0.3248[0m
[32m  ********************[0m
[32m  Best f1:0.357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33111:  29%|██▊       | 8/28 [00:36<01:48,  5.44s/it]epoch 4 loss 1.32543:  29%|██▊       | 8/28 [00:36<01:48,  5.44s/it]epoch 4 loss 1.32543:  32%|███▏      | 9/28 [00:36<01:13,  3.87s/it]epoch 4 loss 1.32266:  32%|███▏      | 9/28 [00:37<01:13,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6549[0m
[32m  eval_f1 = 0.3571[0m
[32m  eval_mcc = 0.6353[0m
[32m  eval_precision = 0.498[0m
[32m  eval_recall = 0.3248[0m
[32m  ********************[0m
[32m  Best f1:0.3571[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32266:  36%|███▌      | 10/28 [00:46<01:39,  5.54s/it]epoch 4 loss 1.32317:  36%|███▌      | 10/28 [00:46<01:39,  5.54s/it]epoch 4 loss 1.32317:  39%|███▉      | 11/28 [00:46<01:07,  3.97s/it]epoch 4 loss 1.33115:  39%|███▉      | 11/28 [00:46<01:07,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.655[0m
[32m  eval_f1 = 0.3588[0m
[32m  eval_mcc = 0.6354[0m
[32m  eval_precision = 0.5088[0m
[32m  eval_recall = 0.3256[0m
[32m  ********************[0m
[32m  Best f1:0.3588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33115:  43%|████▎     | 12/28 [00:53<01:19,  4.97s/it]epoch 4 loss 1.32715:  43%|████▎     | 12/28 [00:54<01:19,  4.97s/it]epoch 4 loss 1.32715:  46%|████▋     | 13/28 [00:54<00:53,  3.59s/it]epoch 4 loss 1.3311:  46%|████▋     | 13/28 [00:54<00:53,  3.59s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6555[0m
[32m  eval_f1 = 0.359[0m
[32m  eval_mcc = 0.6358[0m
[32m  eval_precision = 0.5088[0m
[32m  eval_recall = 0.3257[0m
[32m  ********************[0m
[32m  Best f1:0.359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3311:  50%|█████     | 14/28 [01:03<01:15,  5.40s/it]epoch 4 loss 1.33576:  50%|█████     | 14/28 [01:04<01:15,  5.40s/it]epoch 4 loss 1.33576:  54%|█████▎    | 15/28 [01:04<00:50,  3.90s/it]epoch 4 loss 1.33098:  54%|█████▎    | 15/28 [01:04<00:50,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.656[0m
[32m  eval_f1 = 0.3609[0m
[32m  eval_mcc = 0.6362[0m
[32m  eval_precision = 0.5079[0m
[32m  eval_recall = 0.3271[0m
[32m  ********************[0m
[32m  Best f1:0.3609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6362[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33098:  57%|█████▋    | 16/28 [01:11<01:00,  5.07s/it]epoch 4 loss 1.32719:  57%|█████▋    | 16/28 [01:12<01:00,  5.07s/it]epoch 4 loss 1.32719:  61%|██████    | 17/28 [01:12<00:40,  3.68s/it]epoch 4 loss 1.32556:  61%|██████    | 17/28 [01:12<00:40,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6563[0m
[32m  eval_f1 = 0.363[0m
[32m  eval_mcc = 0.6364[0m
[32m  eval_precision = 0.5077[0m
[32m  eval_recall = 0.3285[0m
[32m  ********************[0m
[32m  Best f1:0.363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6364[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32556:  64%|██████▍   | 18/28 [01:21<00:53,  5.33s/it]epoch 4 loss 1.32196:  64%|██████▍   | 18/28 [01:21<00:53,  5.33s/it]epoch 4 loss 1.32196:  68%|██████▊   | 19/28 [01:21<00:34,  3.85s/it]epoch 4 loss 1.32038:  68%|██████▊   | 19/28 [01:22<00:34,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3624[0m
[32m  eval_mcc = 0.6359[0m
[32m  eval_precision = 0.5071[0m
[32m  eval_recall = 0.3278[0m

epoch 4 loss 1.32038:  71%|███████▏  | 20/28 [01:25<00:30,  3.83s/it]epoch 4 loss 1.32239:  71%|███████▏  | 20/28 [01:26<00:30,  3.83s/it]epoch 4 loss 1.32239:  75%|███████▌  | 21/28 [01:26<00:19,  2.80s/it]epoch 4 loss 1.3174:  75%|███████▌  | 21/28 [01:26<00:19,  2.80s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6555[0m
[32m  eval_f1 = 0.3622[0m
[32m  eval_mcc = 0.6355[0m
[32m  eval_precision = 0.507[0m
[32m  eval_recall = 0.3277[0m

epoch 4 loss 1.3174:  79%|███████▊  | 22/28 [01:29<00:18,  3.10s/it]epoch 4 loss 1.32042:  79%|███████▊  | 22/28 [01:30<00:18,  3.10s/it]epoch 4 loss 1.32042:  82%|████████▏ | 23/28 [01:30<00:11,  2.29s/it]epoch 4 loss 1.32475:  82%|████████▏ | 23/28 [01:30<00:11,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3622[0m
[32m  eval_mcc = 0.6353[0m
[32m  eval_precision = 0.5072[0m
[32m  eval_recall = 0.3276[0m

epoch 4 loss 1.32475:  86%|████████▌ | 24/28 [01:34<00:10,  2.74s/it]epoch 4 loss 1.32152:  86%|████████▌ | 24/28 [01:34<00:10,  2.74s/it]epoch 4 loss 1.32152:  89%|████████▉ | 25/28 [01:34<00:06,  2.03s/it]epoch 4 loss 1.32619:  89%|████████▉ | 25/28 [01:34<00:06,  2.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6556[0m
[32m  eval_f1 = 0.3623[0m
[32m  eval_mcc = 0.6357[0m
[32m  eval_precision = 0.5073[0m
[32m  eval_recall = 0.3277[0m

epoch 4 loss 1.32619:  93%|█████████▎| 26/28 [01:38<00:05,  2.56s/it]epoch 4 loss 1.3244:  93%|█████████▎| 26/28 [01:38<00:05,  2.56s/it] epoch 4 loss 1.3244:  96%|█████████▋| 27/28 [01:38<00:01,  1.91s/it]epoch 4 loss 1.32901:  96%|█████████▋| 27/28 [01:38<00:01,  1.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3623[0m
[32m  eval_mcc = 0.6359[0m
[32m  eval_precision = 0.5084[0m
[32m  eval_recall = 0.3278[0m

epoch 4 loss 1.32901: 100%|██████████| 28/28 [01:42<00:00,  2.41s/it]epoch 4 loss 1.32901: 100%|██████████| 28/28 [01:42<00:00,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6563[0m
[32m  eval_f1 = 0.363[0m
[32m  eval_mcc = 0.6364[0m
[32m  eval_precision = 0.5077[0m
[32m  eval_recall = 0.3285[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.3208[0m
[32m  eval_mcc = 0.6193[0m
[32m  eval_precision = 0.4603[0m
[32m  eval_recall = 0.292[0m

