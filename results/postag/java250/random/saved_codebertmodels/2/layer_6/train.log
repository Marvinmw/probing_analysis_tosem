[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=6, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/2/layer_6', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.27245:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.27245:   4%|▎         | 1/28 [00:00<00:20,  1.33it/s]epoch 0 loss 5.27727:   4%|▎         | 1/28 [00:01<00:20,  1.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0139[0m
[32m  eval_f1 = 0.0026[0m
[32m  eval_mcc = 0.0073[0m
[32m  eval_precision = 0.0063[0m
[32m  eval_recall = 0.0061[0m
[32m  ********************[0m
[32m  Best f1:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.27727:   7%|▋         | 2/28 [00:05<01:24,  3.24s/it]epoch 0 loss 5.2714:   7%|▋         | 2/28 [00:06<01:24,  3.24s/it] epoch 0 loss 5.2714:  11%|█         | 3/28 [00:06<00:48,  1.94s/it]epoch 0 loss 5.26068:  11%|█         | 3/28 [00:06<00:48,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0188[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = 0.0082[0m
[32m  eval_precision = 0.005[0m
[32m  eval_recall = 0.0063[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.26068:  14%|█▍        | 4/28 [00:12<01:25,  3.56s/it]epoch 0 loss 5.24161:  14%|█▍        | 4/28 [00:12<01:25,  3.56s/it]epoch 0 loss 5.24161:  18%|█▊        | 5/28 [00:12<00:55,  2.43s/it]epoch 0 loss 5.21036:  18%|█▊        | 5/28 [00:13<00:55,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0331[0m
[32m  eval_f1 = 0.0039[0m
[32m  eval_mcc = 0.0108[0m
[32m  eval_precision = 0.007[0m
[32m  eval_recall = 0.0078[0m
[32m  ********************[0m
[32m  Best f1:0.0039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.21036:  21%|██▏       | 6/28 [00:18<01:20,  3.67s/it]epoch 0 loss 5.17367:  21%|██▏       | 6/28 [00:19<01:20,  3.67s/it]epoch 0 loss 5.17367:  25%|██▌       | 7/28 [00:19<00:54,  2.61s/it]epoch 0 loss 5.13563:  25%|██▌       | 7/28 [00:19<00:54,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0617[0m
[32m  eval_f1 = 0.0069[0m
[32m  eval_mcc = 0.0245[0m
[32m  eval_precision = 0.011[0m
[32m  eval_recall = 0.0127[0m
[32m  ********************[0m
[32m  Best f1:0.0069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.13563:  29%|██▊       | 8/28 [00:25<01:15,  3.78s/it]epoch 0 loss 5.08724:  29%|██▊       | 8/28 [00:25<01:15,  3.78s/it]epoch 0 loss 5.08724:  32%|███▏      | 9/28 [00:25<00:51,  2.73s/it]epoch 0 loss 5.03766:  32%|███▏      | 9/28 [00:26<00:51,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0798[0m
[32m  eval_f1 = 0.0089[0m
[32m  eval_mcc = 0.0323[0m
[32m  eval_precision = 0.0145[0m
[32m  eval_recall = 0.017[0m
[32m  ********************[0m
[32m  Best f1:0.0089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.03766:  36%|███▌      | 10/28 [00:31<01:05,  3.64s/it]epoch 0 loss 4.98477:  36%|███▌      | 10/28 [00:31<01:05,  3.64s/it]epoch 0 loss 4.98477:  39%|███▉      | 11/28 [00:31<00:45,  2.65s/it]epoch 0 loss 4.92299:  39%|███▉      | 11/28 [00:32<00:45,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0933[0m
[32m  eval_f1 = 0.0116[0m
[32m  eval_mcc = 0.0428[0m
[32m  eval_precision = 0.0204[0m
[32m  eval_recall = 0.02[0m
[32m  ********************[0m
[32m  Best f1:0.0116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.92299:  43%|████▎     | 12/28 [00:37<00:58,  3.64s/it]epoch 0 loss 4.85735:  43%|████▎     | 12/28 [00:38<00:58,  3.64s/it]epoch 0 loss 4.85735:  46%|████▋     | 13/28 [00:38<00:40,  2.67s/it]epoch 0 loss 4.7964:  46%|████▋     | 13/28 [00:38<00:40,  2.67s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1074[0m
[32m  eval_f1 = 0.0155[0m
[32m  eval_mcc = 0.0551[0m
[32m  eval_precision = 0.0292[0m
[32m  eval_recall = 0.0227[0m
[32m  ********************[0m
[32m  Best f1:0.0155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0551[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.7964:  50%|█████     | 14/28 [00:44<00:51,  3.65s/it]epoch 0 loss 4.73108:  50%|█████     | 14/28 [00:44<00:51,  3.65s/it]epoch 0 loss 4.73108:  54%|█████▎    | 15/28 [00:44<00:34,  2.67s/it]epoch 0 loss 4.66353:  54%|█████▎    | 15/28 [00:44<00:34,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.13[0m
[32m  eval_f1 = 0.0206[0m
[32m  eval_mcc = 0.079[0m
[32m  eval_precision = 0.0434[0m
[32m  eval_recall = 0.0253[0m
[32m  ********************[0m
[32m  Best f1:0.0206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.66353:  57%|█████▋    | 16/28 [00:50<00:44,  3.68s/it]epoch 0 loss 4.59851:  57%|█████▋    | 16/28 [00:51<00:44,  3.68s/it]epoch 0 loss 4.59851:  61%|██████    | 17/28 [00:51<00:29,  2.70s/it]epoch 0 loss 4.5391:  61%|██████    | 17/28 [00:51<00:29,  2.70s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1723[0m
[32m  eval_f1 = 0.0283[0m
[32m  eval_mcc = 0.1258[0m
[32m  eval_precision = 0.0687[0m
[32m  eval_recall = 0.03[0m
[32m  ********************[0m
[32m  Best f1:0.0283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.5391:  64%|██████▍   | 18/28 [00:57<00:37,  3.71s/it]epoch 0 loss 4.47016:  64%|██████▍   | 18/28 [00:57<00:37,  3.71s/it]epoch 0 loss 4.47016:  68%|██████▊   | 19/28 [00:57<00:24,  2.73s/it]epoch 0 loss 4.40572:  68%|██████▊   | 19/28 [00:57<00:24,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2632[0m
[32m  eval_f1 = 0.0411[0m
[32m  eval_mcc = 0.2137[0m
[32m  eval_precision = 0.0876[0m
[32m  eval_recall = 0.0421[0m
[32m  ********************[0m
[32m  Best f1:0.0411[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.40572:  71%|███████▏  | 20/28 [01:03<00:28,  3.61s/it]epoch 0 loss 4.33765:  71%|███████▏  | 20/28 [01:03<00:28,  3.61s/it]epoch 0 loss 4.33765:  75%|███████▌  | 21/28 [01:03<00:18,  2.65s/it]epoch 0 loss 4.27507:  75%|███████▌  | 21/28 [01:04<00:18,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3226[0m
[32m  eval_f1 = 0.0487[0m
[32m  eval_mcc = 0.2715[0m
[32m  eval_precision = 0.0925[0m
[32m  eval_recall = 0.0519[0m
[32m  ********************[0m
[32m  Best f1:0.0487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2715[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.27507:  79%|███████▊  | 22/28 [01:09<00:22,  3.67s/it]epoch 0 loss 4.21659:  79%|███████▊  | 22/28 [01:10<00:22,  3.67s/it]epoch 0 loss 4.21659:  82%|████████▏ | 23/28 [01:10<00:13,  2.70s/it]epoch 0 loss 4.16069:  82%|████████▏ | 23/28 [01:10<00:13,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3547[0m
[32m  eval_f1 = 0.0841[0m
[32m  eval_mcc = 0.3129[0m
[32m  eval_precision = 0.1359[0m
[32m  eval_recall = 0.081[0m
[32m  ********************[0m
[32m  Best f1:0.0841[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.16069:  86%|████████▌ | 24/28 [01:15<00:14,  3.66s/it]epoch 0 loss 4.1029:  86%|████████▌ | 24/28 [01:16<00:14,  3.66s/it] epoch 0 loss 4.1029:  89%|████████▉ | 25/28 [01:16<00:08,  2.68s/it]epoch 0 loss 4.05237:  89%|████████▉ | 25/28 [01:16<00:08,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3831[0m
[32m  eval_f1 = 0.1072[0m
[32m  eval_mcc = 0.3492[0m
[32m  eval_precision = 0.1808[0m
[32m  eval_recall = 0.0985[0m
[32m  ********************[0m
[32m  Best f1:0.1072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3492[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.05237:  93%|█████████▎| 26/28 [01:22<00:07,  3.68s/it]epoch 0 loss 3.99956:  93%|█████████▎| 26/28 [01:22<00:07,  3.68s/it]epoch 0 loss 3.99956:  96%|█████████▋| 27/28 [01:22<00:02,  2.70s/it]epoch 0 loss 3.9388:  96%|█████████▋| 27/28 [01:23<00:02,  2.70s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4309[0m
[32m  eval_f1 = 0.1423[0m
[32m  eval_mcc = 0.4016[0m
[32m  eval_precision = 0.2036[0m
[32m  eval_recall = 0.1267[0m
[32m  ********************[0m
[32m  Best f1:0.1423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.9388: 100%|██████████| 28/28 [01:28<00:00,  3.63s/it]epoch 0 loss 3.9388: 100%|██████████| 28/28 [01:28<00:00,  3.17s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.40146:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.40146:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 1 loss 2.30543:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4877[0m
[32m  eval_f1 = 0.1651[0m
[32m  eval_mcc = 0.458[0m
[32m  eval_precision = 0.2165[0m
[32m  eval_recall = 0.1565[0m
[32m  ********************[0m
[32m  Best f1:0.1651[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.458[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.30543:   7%|▋         | 2/28 [00:06<01:41,  3.89s/it]epoch 1 loss 2.2651:   7%|▋         | 2/28 [00:07<01:41,  3.89s/it] epoch 1 loss 2.2651:  11%|█         | 3/28 [00:07<00:57,  2.30s/it]epoch 1 loss 2.26775:  11%|█         | 3/28 [00:07<00:57,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5333[0m
[32m  eval_f1 = 0.1771[0m
[32m  eval_mcc = 0.5045[0m
[32m  eval_precision = 0.2242[0m
[32m  eval_recall = 0.1734[0m
[32m  ********************[0m
[32m  Best f1:0.1771[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26775:  14%|█▍        | 4/28 [00:13<01:30,  3.78s/it]epoch 1 loss 2.2437:  14%|█▍        | 4/28 [00:13<01:30,  3.78s/it] epoch 1 loss 2.2437:  18%|█▊        | 5/28 [00:13<00:59,  2.57s/it]epoch 1 loss 2.20821:  18%|█▊        | 5/28 [00:14<00:59,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5676[0m
[32m  eval_f1 = 0.1933[0m
[32m  eval_mcc = 0.5436[0m
[32m  eval_precision = 0.2528[0m
[32m  eval_recall = 0.1891[0m
[32m  ********************[0m
[32m  Best f1:0.1933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20821:  21%|██▏       | 6/28 [00:22<01:42,  4.67s/it]epoch 1 loss 2.17035:  21%|██▏       | 6/28 [00:22<01:42,  4.67s/it]epoch 1 loss 2.17035:  25%|██▌       | 7/28 [00:22<01:08,  3.28s/it]epoch 1 loss 2.14559:  25%|██▌       | 7/28 [00:23<01:08,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5768[0m
[32m  eval_f1 = 0.2058[0m
[32m  eval_mcc = 0.5546[0m
[32m  eval_precision = 0.2714[0m
[32m  eval_recall = 0.1973[0m
[32m  ********************[0m
[32m  Best f1:0.2058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5546[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.14559:  29%|██▊       | 8/28 [00:28<01:23,  4.16s/it]epoch 1 loss 2.11341:  29%|██▊       | 8/28 [00:29<01:23,  4.16s/it]epoch 1 loss 2.11341:  32%|███▏      | 9/28 [00:29<00:56,  3.00s/it]epoch 1 loss 2.07428:  32%|███▏      | 9/28 [00:29<00:56,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.585[0m
[32m  eval_f1 = 0.2225[0m
[32m  eval_mcc = 0.5621[0m
[32m  eval_precision = 0.2946[0m
[32m  eval_recall = 0.2118[0m
[32m  ********************[0m
[32m  Best f1:0.2225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07428:  36%|███▌      | 10/28 [00:40<01:38,  5.49s/it]epoch 1 loss 2.06268:  36%|███▌      | 10/28 [00:40<01:38,  5.49s/it]epoch 1 loss 2.06268:  39%|███▉      | 11/28 [00:40<01:06,  3.94s/it]epoch 1 loss 2.04905:  39%|███▉      | 11/28 [00:41<01:06,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5918[0m
[32m  eval_f1 = 0.2274[0m
[32m  eval_mcc = 0.5679[0m
[32m  eval_precision = 0.2996[0m
[32m  eval_recall = 0.2155[0m
[32m  ********************[0m
[32m  Best f1:0.2274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04905:  43%|████▎     | 12/28 [00:50<01:33,  5.84s/it]epoch 1 loss 2.0264:  43%|████▎     | 12/28 [00:51<01:33,  5.84s/it] epoch 1 loss 2.0264:  46%|████▋     | 13/28 [00:51<01:02,  4.20s/it]epoch 1 loss 2.00982:  46%|████▋     | 13/28 [00:51<01:02,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5943[0m
[32m  eval_f1 = 0.2321[0m
[32m  eval_mcc = 0.5694[0m
[32m  eval_precision = 0.3094[0m
[32m  eval_recall = 0.2189[0m
[32m  ********************[0m
[32m  Best f1:0.2321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00982:  50%|█████     | 14/28 [01:01<01:25,  6.10s/it]epoch 1 loss 2.0014:  50%|█████     | 14/28 [01:02<01:25,  6.10s/it] epoch 1 loss 2.0014:  54%|█████▎    | 15/28 [01:02<00:57,  4.39s/it]epoch 1 loss 1.98481:  54%|█████▎    | 15/28 [01:02<00:57,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5984[0m
[32m  eval_f1 = 0.2381[0m
[32m  eval_mcc = 0.5737[0m
[32m  eval_precision = 0.3269[0m
[32m  eval_recall = 0.2238[0m
[32m  ********************[0m
[32m  Best f1:0.2381[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5737[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98481:  57%|█████▋    | 16/28 [01:12<01:15,  6.28s/it]epoch 1 loss 1.95916:  57%|█████▋    | 16/28 [01:13<01:15,  6.28s/it]epoch 1 loss 1.95916:  61%|██████    | 17/28 [01:13<00:49,  4.52s/it]epoch 1 loss 1.94288:  61%|██████    | 17/28 [01:13<00:49,  4.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6068[0m
[32m  eval_f1 = 0.2492[0m
[32m  eval_mcc = 0.5839[0m
[32m  eval_precision = 0.3507[0m
[32m  eval_recall = 0.2318[0m
[32m  ********************[0m
[32m  Best f1:0.2492[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5839[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94288:  64%|██████▍   | 18/28 [01:23<01:00,  6.05s/it]epoch 1 loss 1.92356:  64%|██████▍   | 18/28 [01:23<01:00,  6.05s/it]epoch 1 loss 1.92356:  68%|██████▊   | 19/28 [01:23<00:39,  4.36s/it]epoch 1 loss 1.89915:  68%|██████▊   | 19/28 [01:23<00:39,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6069[0m
[32m  eval_f1 = 0.2593[0m
[32m  eval_mcc = 0.5874[0m
[32m  eval_precision = 0.3668[0m
[32m  eval_recall = 0.238[0m
[32m  ********************[0m
[32m  Best f1:0.2593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5874[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89915:  71%|███████▏  | 20/28 [01:34<00:51,  6.45s/it]epoch 1 loss 1.88376:  71%|███████▏  | 20/28 [01:35<00:51,  6.45s/it]epoch 1 loss 1.88376:  75%|███████▌  | 21/28 [01:35<00:32,  4.64s/it]epoch 1 loss 1.86798:  75%|███████▌  | 21/28 [01:35<00:32,  4.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6086[0m
[32m  eval_f1 = 0.2614[0m
[32m  eval_mcc = 0.5902[0m
[32m  eval_precision = 0.3675[0m
[32m  eval_recall = 0.2398[0m
[32m  ********************[0m
[32m  Best f1:0.2614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86798:  79%|███████▊  | 22/28 [01:45<00:37,  6.26s/it]epoch 1 loss 1.85473:  79%|███████▊  | 22/28 [01:45<00:37,  6.26s/it]epoch 1 loss 1.85473:  82%|████████▏ | 23/28 [01:45<00:22,  4.51s/it]epoch 1 loss 1.84004:  82%|████████▏ | 23/28 [01:46<00:22,  4.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6136[0m
[32m  eval_f1 = 0.2849[0m
[32m  eval_mcc = 0.5945[0m
[32m  eval_precision = 0.4023[0m
[32m  eval_recall = 0.2625[0m
[32m  ********************[0m
[32m  Best f1:0.2849[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84004:  86%|████████▌ | 24/28 [01:53<00:22,  5.65s/it]epoch 1 loss 1.82579:  86%|████████▌ | 24/28 [01:54<00:22,  5.65s/it]epoch 1 loss 1.82579:  89%|████████▉ | 25/28 [01:54<00:12,  4.08s/it]epoch 1 loss 1.81176:  89%|████████▉ | 25/28 [01:54<00:12,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6198[0m
[32m  eval_f1 = 0.2955[0m
[32m  eval_mcc = 0.5989[0m
[32m  eval_precision = 0.4259[0m
[32m  eval_recall = 0.2713[0m
[32m  ********************[0m
[32m  Best f1:0.2955[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5989[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81176:  93%|█████████▎| 26/28 [02:03<00:11,  5.71s/it]epoch 1 loss 1.80266:  93%|█████████▎| 26/28 [02:04<00:11,  5.71s/it]epoch 1 loss 1.80266:  96%|█████████▋| 27/28 [02:04<00:04,  4.12s/it]epoch 1 loss 1.78931:  96%|█████████▋| 27/28 [02:04<00:04,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6227[0m
[32m  eval_f1 = 0.3014[0m
[32m  eval_mcc = 0.6006[0m
[32m  eval_precision = 0.4231[0m
[32m  eval_recall = 0.2768[0m
[32m  ********************[0m
[32m  Best f1:0.3014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.78931: 100%|██████████| 28/28 [02:11<00:00,  5.06s/it]epoch 1 loss 1.78931: 100%|██████████| 28/28 [02:11<00:00,  4.70s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.30955:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.30955:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.39568:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6251[0m
[32m  eval_f1 = 0.3076[0m
[32m  eval_mcc = 0.6027[0m
[32m  eval_precision = 0.4322[0m
[32m  eval_recall = 0.2835[0m
[32m  ********************[0m
[32m  Best f1:0.3076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39568:   7%|▋         | 2/28 [00:10<02:35,  5.98s/it]epoch 2 loss 1.39016:   7%|▋         | 2/28 [00:10<02:35,  5.98s/it]epoch 2 loss 1.39016:  11%|█         | 3/28 [00:10<01:26,  3.44s/it]epoch 2 loss 1.45412:  11%|█         | 3/28 [00:11<01:26,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6288[0m
[32m  eval_f1 = 0.313[0m
[32m  eval_mcc = 0.6068[0m
[32m  eval_precision = 0.4352[0m
[32m  eval_recall = 0.2896[0m
[32m  ********************[0m
[32m  Best f1:0.313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45412:  14%|█▍        | 4/28 [00:19<02:09,  5.39s/it]epoch 2 loss 1.45292:  14%|█▍        | 4/28 [00:19<02:09,  5.39s/it]epoch 2 loss 1.45292:  18%|█▊        | 5/28 [00:19<01:22,  3.59s/it]epoch 2 loss 1.44849:  18%|█▊        | 5/28 [00:19<01:22,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6309[0m
[32m  eval_f1 = 0.3157[0m
[32m  eval_mcc = 0.6095[0m
[32m  eval_precision = 0.4439[0m
[32m  eval_recall = 0.293[0m
[32m  ********************[0m
[32m  Best f1:0.3157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6095[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44849:  21%|██▏       | 6/28 [00:28<02:02,  5.55s/it]epoch 2 loss 1.44229:  21%|██▏       | 6/28 [00:29<02:02,  5.55s/it]epoch 2 loss 1.44229:  25%|██▌       | 7/28 [00:29<01:21,  3.88s/it]epoch 2 loss 1.45057:  25%|██▌       | 7/28 [00:29<01:21,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6313[0m
[32m  eval_f1 = 0.3187[0m
[32m  eval_mcc = 0.6115[0m
[32m  eval_precision = 0.4469[0m
[32m  eval_recall = 0.2943[0m
[32m  ********************[0m
[32m  Best f1:0.3187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6115[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45057:  29%|██▊       | 8/28 [00:37<01:45,  5.29s/it]epoch 2 loss 1.44531:  29%|██▊       | 8/28 [00:38<01:45,  5.29s/it]epoch 2 loss 1.44531:  32%|███▏      | 9/28 [00:38<01:11,  3.77s/it]epoch 2 loss 1.42501:  32%|███▏      | 9/28 [00:38<01:11,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6329[0m
[32m  eval_f1 = 0.3213[0m
[32m  eval_mcc = 0.6147[0m
[32m  eval_precision = 0.4495[0m
[32m  eval_recall = 0.2964[0m
[32m  ********************[0m
[32m  Best f1:0.3213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42501:  36%|███▌      | 10/28 [00:47<01:39,  5.54s/it]epoch 2 loss 1.42374:  36%|███▌      | 10/28 [00:47<01:39,  5.54s/it]epoch 2 loss 1.42374:  39%|███▉      | 11/28 [00:47<01:07,  3.97s/it]epoch 2 loss 1.4172:  39%|███▉      | 11/28 [00:48<01:07,  3.97s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.63it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6357[0m
[32m  eval_f1 = 0.3214[0m
[32m  eval_mcc = 0.6172[0m
[32m  eval_precision = 0.446[0m
[32m  eval_recall = 0.2972[0m
[32m  ********************[0m
[32m  Best f1:0.3214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4172:  43%|████▎     | 12/28 [00:57<01:28,  5.54s/it]epoch 2 loss 1.41712:  43%|████▎     | 12/28 [00:57<01:28,  5.54s/it]epoch 2 loss 1.41712:  46%|████▋     | 13/28 [00:57<00:59,  3.99s/it]epoch 2 loss 1.40373:  46%|████▋     | 13/28 [00:57<00:59,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6377[0m
[32m  eval_f1 = 0.3233[0m
[32m  eval_mcc = 0.6182[0m
[32m  eval_precision = 0.4458[0m
[32m  eval_recall = 0.2993[0m
[32m  ********************[0m
[32m  Best f1:0.3233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40373:  50%|█████     | 14/28 [01:06<01:16,  5.45s/it]epoch 2 loss 1.40558:  50%|█████     | 14/28 [01:06<01:16,  5.45s/it]epoch 2 loss 1.40558:  54%|█████▎    | 15/28 [01:06<00:51,  3.94s/it]epoch 2 loss 1.40534:  54%|█████▎    | 15/28 [01:07<00:51,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6415[0m
[32m  eval_f1 = 0.3248[0m
[32m  eval_mcc = 0.621[0m
[32m  eval_precision = 0.4463[0m
[32m  eval_recall = 0.301[0m
[32m  ********************[0m
[32m  Best f1:0.3248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40534:  57%|█████▋    | 16/28 [01:16<01:07,  5.61s/it]epoch 2 loss 1.40421:  57%|█████▋    | 16/28 [01:16<01:07,  5.61s/it]epoch 2 loss 1.40421:  61%|██████    | 17/28 [01:16<00:44,  4.05s/it]epoch 2 loss 1.39511:  61%|██████    | 17/28 [01:17<00:44,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6445[0m
[32m  eval_f1 = 0.3279[0m
[32m  eval_mcc = 0.6236[0m
[32m  eval_precision = 0.4437[0m
[32m  eval_recall = 0.3037[0m
[32m  ********************[0m
[32m  Best f1:0.3279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39511:  64%|██████▍   | 18/28 [01:24<00:51,  5.13s/it]epoch 2 loss 1.3922:  64%|██████▍   | 18/28 [01:24<00:51,  5.13s/it] epoch 2 loss 1.3922:  68%|██████▊   | 19/28 [01:24<00:33,  3.72s/it]epoch 2 loss 1.38723:  68%|██████▊   | 19/28 [01:25<00:33,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6483[0m
[32m  eval_f1 = 0.3386[0m
[32m  eval_mcc = 0.6275[0m
[32m  eval_precision = 0.4627[0m
[32m  eval_recall = 0.3117[0m
[32m  ********************[0m
[32m  Best f1:0.3386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38723:  71%|███████▏  | 20/28 [01:30<00:35,  4.43s/it]epoch 2 loss 1.38401:  71%|███████▏  | 20/28 [01:31<00:35,  4.43s/it]epoch 2 loss 1.38401:  75%|███████▌  | 21/28 [01:31<00:22,  3.23s/it]epoch 2 loss 1.38098:  75%|███████▌  | 21/28 [01:31<00:22,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6512[0m
[32m  eval_f1 = 0.3446[0m
[32m  eval_mcc = 0.6306[0m
[32m  eval_precision = 0.4702[0m
[32m  eval_recall = 0.3167[0m
[32m  ********************[0m
[32m  Best f1:0.3446[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38098:  79%|███████▊  | 22/28 [01:37<00:24,  4.08s/it]epoch 2 loss 1.38564:  79%|███████▊  | 22/28 [01:37<00:24,  4.08s/it]epoch 2 loss 1.38564:  82%|████████▏ | 23/28 [01:37<00:14,  2.98s/it]epoch 2 loss 1.38539:  82%|████████▏ | 23/28 [01:38<00:14,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3465[0m
[32m  eval_mcc = 0.6323[0m
[32m  eval_precision = 0.4645[0m
[32m  eval_recall = 0.3186[0m
[32m  ********************[0m
[32m  Best f1:0.3465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38539:  86%|████████▌ | 24/28 [01:43<00:15,  3.89s/it]epoch 2 loss 1.38222:  86%|████████▌ | 24/28 [01:44<00:15,  3.89s/it]epoch 2 loss 1.38222:  89%|████████▉ | 25/28 [01:44<00:08,  2.85s/it]epoch 2 loss 1.3847:  89%|████████▉ | 25/28 [01:44<00:08,  2.85s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6542[0m
[32m  eval_f1 = 0.3553[0m
[32m  eval_mcc = 0.6342[0m
[32m  eval_precision = 0.4895[0m
[32m  eval_recall = 0.3242[0m
[32m  ********************[0m
[32m  Best f1:0.3553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3847:  93%|█████████▎| 26/28 [01:50<00:07,  3.82s/it]epoch 2 loss 1.38396:  93%|█████████▎| 26/28 [01:50<00:07,  3.82s/it]epoch 2 loss 1.38396:  96%|█████████▋| 27/28 [01:50<00:02,  2.80s/it]epoch 2 loss 1.38558:  96%|█████████▋| 27/28 [01:50<00:02,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3583[0m
[32m  eval_mcc = 0.6356[0m
[32m  eval_precision = 0.482[0m
[32m  eval_recall = 0.326[0m
[32m  ********************[0m
[32m  Best f1:0.3583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38558: 100%|██████████| 28/28 [01:56<00:00,  3.72s/it]epoch 2 loss 1.38558: 100%|██████████| 28/28 [01:56<00:00,  4.16s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.27758:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.27758:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 3 loss 1.3606:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3607[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4851[0m
[32m  eval_recall = 0.3268[0m
[32m  ********************[0m
[32m  Best f1:0.3607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3606:   7%|▋         | 2/28 [00:06<01:31,  3.51s/it]epoch 3 loss 1.33562:   7%|▋         | 2/28 [00:06<01:31,  3.51s/it]epoch 3 loss 1.33562:  11%|█         | 3/28 [00:06<00:52,  2.10s/it]epoch 3 loss 1.32566:  11%|█         | 3/28 [00:06<00:52,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3653[0m
[32m  eval_mcc = 0.6381[0m
[32m  eval_precision = 0.5085[0m
[32m  eval_recall = 0.3291[0m
[32m  ********************[0m
[32m  Best f1:0.3653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6381[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32566:  14%|█▍        | 4/28 [00:12<01:28,  3.68s/it]epoch 3 loss 1.31905:  14%|█▍        | 4/28 [00:13<01:28,  3.68s/it]epoch 3 loss 1.31905:  18%|█▊        | 5/28 [00:13<00:57,  2.51s/it]epoch 3 loss 1.31507:  18%|█▊        | 5/28 [00:13<00:57,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3637[0m
[32m  eval_mcc = 0.6363[0m
[32m  eval_precision = 0.5079[0m
[32m  eval_recall = 0.328[0m

epoch 3 loss 1.31507:  21%|██▏       | 6/28 [00:16<01:04,  2.94s/it]epoch 3 loss 1.30152:  21%|██▏       | 6/28 [00:17<01:04,  2.94s/it]epoch 3 loss 1.30152:  25%|██▌       | 7/28 [00:17<00:44,  2.11s/it]epoch 3 loss 1.30383:  25%|██▌       | 7/28 [00:17<00:44,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6567[0m
[32m  eval_f1 = 0.3639[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.5096[0m
[32m  eval_recall = 0.3286[0m

epoch 3 loss 1.30383:  29%|██▊       | 8/28 [00:21<00:52,  2.64s/it]epoch 3 loss 1.30071:  29%|██▊       | 8/28 [00:21<00:52,  2.64s/it]epoch 3 loss 1.30071:  32%|███▏      | 9/28 [00:21<00:36,  1.94s/it]epoch 3 loss 1.29669:  32%|███▏      | 9/28 [00:21<00:36,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6576[0m
[32m  eval_f1 = 0.3615[0m
[32m  eval_mcc = 0.6379[0m
[32m  eval_precision = 0.5084[0m
[32m  eval_recall = 0.3279[0m

epoch 3 loss 1.29669:  36%|███▌      | 10/28 [00:25<00:45,  2.51s/it]epoch 3 loss 1.29377:  36%|███▌      | 10/28 [00:25<00:45,  2.51s/it]epoch 3 loss 1.29377:  39%|███▉      | 11/28 [00:25<00:31,  1.87s/it]epoch 3 loss 1.29161:  39%|███▉      | 11/28 [00:26<00:31,  1.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6596[0m
[32m  eval_f1 = 0.3644[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.5062[0m
[32m  eval_recall = 0.3304[0m
[32m  ********************[0m
[32m  Best MCC:0.64[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29161:  43%|████▎     | 12/28 [00:30<00:44,  2.78s/it]epoch 3 loss 1.29706:  43%|████▎     | 12/28 [00:30<00:44,  2.78s/it]epoch 3 loss 1.29706:  46%|████▋     | 13/28 [00:30<00:30,  2.06s/it]epoch 3 loss 1.29665:  46%|████▋     | 13/28 [00:31<00:30,  2.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6597[0m
[32m  eval_f1 = 0.3647[0m
[32m  eval_mcc = 0.6402[0m
[32m  eval_precision = 0.5071[0m
[32m  eval_recall = 0.3309[0m
[32m  ********************[0m
[32m  Best MCC:0.6402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29665:  50%|█████     | 14/28 [00:35<00:40,  2.92s/it]epoch 3 loss 1.3047:  50%|█████     | 14/28 [00:36<00:40,  2.92s/it] epoch 3 loss 1.3047:  54%|█████▎    | 15/28 [00:36<00:28,  2.16s/it]epoch 3 loss 1.30011:  54%|█████▎    | 15/28 [00:36<00:28,  2.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6603[0m
[32m  eval_f1 = 0.3649[0m
[32m  eval_mcc = 0.6407[0m
[32m  eval_precision = 0.5066[0m
[32m  eval_recall = 0.3315[0m
[32m  ********************[0m
[32m  Best MCC:0.6407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30011:  57%|█████▋    | 16/28 [00:41<00:36,  3.02s/it]epoch 3 loss 1.30029:  57%|█████▋    | 16/28 [00:41<00:36,  3.02s/it]epoch 3 loss 1.30029:  61%|██████    | 17/28 [00:41<00:24,  2.23s/it]epoch 3 loss 1.29843:  61%|██████    | 17/28 [00:42<00:24,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6615[0m
[32m  eval_f1 = 0.3673[0m
[32m  eval_mcc = 0.6419[0m
[32m  eval_precision = 0.5057[0m
[32m  eval_recall = 0.3337[0m
[32m  ********************[0m
[32m  Best f1:0.3673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6419[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29843:  64%|██████▍   | 18/28 [00:47<00:33,  3.39s/it]epoch 3 loss 1.29868:  64%|██████▍   | 18/28 [00:48<00:33,  3.39s/it]epoch 3 loss 1.29868:  68%|██████▊   | 19/28 [00:48<00:22,  2.50s/it]epoch 3 loss 1.30394:  68%|██████▊   | 19/28 [00:48<00:22,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6632[0m
[32m  eval_f1 = 0.3688[0m
[32m  eval_mcc = 0.6438[0m
[32m  eval_precision = 0.5051[0m
[32m  eval_recall = 0.3349[0m
[32m  ********************[0m
[32m  Best f1:0.3688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30394:  71%|███████▏  | 20/28 [00:53<00:27,  3.41s/it]epoch 3 loss 1.30095:  71%|███████▏  | 20/28 [00:54<00:27,  3.41s/it]epoch 3 loss 1.30095:  75%|███████▌  | 21/28 [00:54<00:17,  2.51s/it]epoch 3 loss 1.30084:  75%|███████▌  | 21/28 [00:54<00:17,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6643[0m
[32m  eval_f1 = 0.372[0m
[32m  eval_mcc = 0.6451[0m
[32m  eval_precision = 0.5037[0m
[32m  eval_recall = 0.3379[0m
[32m  ********************[0m
[32m  Best f1:0.372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30084:  79%|███████▊  | 22/28 [00:59<00:20,  3.43s/it]epoch 3 loss 1.2984:  79%|███████▊  | 22/28 [01:00<00:20,  3.43s/it] epoch 3 loss 1.2984:  82%|████████▏ | 23/28 [01:00<00:12,  2.53s/it]epoch 3 loss 1.29736:  82%|████████▏ | 23/28 [01:00<00:12,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6641[0m
[32m  eval_f1 = 0.3734[0m
[32m  eval_mcc = 0.6451[0m
[32m  eval_precision = 0.5046[0m
[32m  eval_recall = 0.3392[0m
[32m  ********************[0m
[32m  Best f1:0.3734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.29736:  86%|████████▌ | 24/28 [01:04<00:12,  3.17s/it]epoch 3 loss 1.2974:  86%|████████▌ | 24/28 [01:05<00:12,  3.17s/it] epoch 3 loss 1.2974:  89%|████████▉ | 25/28 [01:05<00:07,  2.34s/it]epoch 3 loss 1.29124:  89%|████████▉ | 25/28 [01:05<00:07,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6641[0m
[32m  eval_f1 = 0.3735[0m
[32m  eval_mcc = 0.6454[0m
[32m  eval_precision = 0.5035[0m
[32m  eval_recall = 0.3394[0m
[32m  ********************[0m
[32m  Best f1:0.3735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6454[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29124:  93%|█████████▎| 26/28 [01:10<00:06,  3.32s/it]epoch 3 loss 1.29203:  93%|█████████▎| 26/28 [01:11<00:06,  3.32s/it]epoch 3 loss 1.29203:  96%|█████████▋| 27/28 [01:11<00:02,  2.45s/it]epoch 3 loss 1.29443:  96%|█████████▋| 27/28 [01:11<00:02,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.664[0m
[32m  eval_f1 = 0.3736[0m
[32m  eval_mcc = 0.6453[0m
[32m  eval_precision = 0.5026[0m
[32m  eval_recall = 0.3398[0m
[32m  ********************[0m
[32m  Best f1:0.3736[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.29443: 100%|██████████| 28/28 [01:15<00:00,  3.15s/it]epoch 3 loss 1.29443: 100%|██████████| 28/28 [01:15<00:00,  2.71s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.21085:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.21085:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s]epoch 4 loss 1.27251:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.664[0m
[32m  eval_f1 = 0.3739[0m
[32m  eval_mcc = 0.6453[0m
[32m  eval_precision = 0.5031[0m
[32m  eval_recall = 0.3399[0m
[32m  ********************[0m
[32m  Best f1:0.3739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27251:   7%|▋         | 2/28 [00:05<01:18,  3.02s/it]epoch 4 loss 1.2461:   7%|▋         | 2/28 [00:05<01:18,  3.02s/it] epoch 4 loss 1.2461:  11%|█         | 3/28 [00:05<00:45,  1.83s/it]epoch 4 loss 1.2729:  11%|█         | 3/28 [00:06<00:45,  1.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6647[0m
[32m  eval_f1 = 0.3748[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.5041[0m
[32m  eval_recall = 0.3411[0m
[32m  ********************[0m
[32m  Best f1:0.3748[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2729:  14%|█▍        | 4/28 [00:11<01:18,  3.28s/it]epoch 4 loss 1.26349:  14%|█▍        | 4/28 [00:11<01:18,  3.28s/it]epoch 4 loss 1.26349:  18%|█▊        | 5/28 [00:11<00:51,  2.24s/it]epoch 4 loss 1.26019:  18%|█▊        | 5/28 [00:11<00:51,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.665[0m
[32m  eval_f1 = 0.376[0m
[32m  eval_mcc = 0.6462[0m
[32m  eval_precision = 0.5153[0m
[32m  eval_recall = 0.3419[0m
[32m  ********************[0m
[32m  Best f1:0.376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26019:  21%|██▏       | 6/28 [00:17<01:17,  3.52s/it]epoch 4 loss 1.26601:  21%|██▏       | 6/28 [00:17<01:17,  3.52s/it]epoch 4 loss 1.26601:  25%|██▌       | 7/28 [00:17<00:52,  2.51s/it]epoch 4 loss 1.26085:  25%|██▌       | 7/28 [00:18<00:52,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6653[0m
[32m  eval_f1 = 0.3777[0m
[32m  eval_mcc = 0.6464[0m
[32m  eval_precision = 0.5253[0m
[32m  eval_recall = 0.3425[0m
[32m  ********************[0m
[32m  Best f1:0.3777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6464[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26085:  29%|██▊       | 8/28 [00:24<01:12,  3.65s/it]epoch 4 loss 1.25426:  29%|██▊       | 8/28 [00:24<01:12,  3.65s/it]epoch 4 loss 1.25426:  32%|███▏      | 9/28 [00:24<00:50,  2.64s/it]epoch 4 loss 1.25181:  32%|███▏      | 9/28 [00:24<00:50,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3791[0m
[32m  eval_mcc = 0.6464[0m
[32m  eval_precision = 0.5249[0m
[32m  eval_recall = 0.3436[0m
[32m  ********************[0m
[32m  Best f1:0.3791[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6464[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25181:  36%|███▌      | 10/28 [00:30<01:06,  3.70s/it]epoch 4 loss 1.25201:  36%|███▌      | 10/28 [00:30<01:06,  3.70s/it]epoch 4 loss 1.25201:  39%|███▉      | 11/28 [00:30<00:45,  2.69s/it]epoch 4 loss 1.25976:  39%|███▉      | 11/28 [00:31<00:45,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.38[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.5257[0m
[32m  eval_recall = 0.3444[0m
[32m  ********************[0m
[32m  Best f1:0.38[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25976:  43%|████▎     | 12/28 [00:37<00:59,  3.73s/it]epoch 4 loss 1.25643:  43%|████▎     | 12/28 [00:37<00:59,  3.73s/it]epoch 4 loss 1.25643:  46%|████▋     | 13/28 [00:37<00:40,  2.73s/it]epoch 4 loss 1.2607:  46%|████▋     | 13/28 [00:37<00:40,  2.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3803[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.5276[0m
[32m  eval_recall = 0.3446[0m
[32m  ********************[0m
[32m  Best f1:0.3803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2607:  50%|█████     | 14/28 [00:43<00:50,  3.63s/it]epoch 4 loss 1.26501:  50%|█████     | 14/28 [00:43<00:50,  3.63s/it]epoch 4 loss 1.26501:  54%|█████▎    | 15/28 [00:43<00:34,  2.66s/it]epoch 4 loss 1.26055:  54%|█████▎    | 15/28 [00:44<00:34,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.666[0m
[32m  eval_f1 = 0.3824[0m
[32m  eval_mcc = 0.6469[0m
[32m  eval_precision = 0.5377[0m
[32m  eval_recall = 0.3459[0m
[32m  ********************[0m
[32m  Best f1:0.3824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26055:  57%|█████▋    | 16/28 [00:49<00:44,  3.69s/it]epoch 4 loss 1.25673:  57%|█████▋    | 16/28 [00:50<00:44,  3.69s/it]epoch 4 loss 1.25673:  61%|██████    | 17/28 [00:50<00:29,  2.71s/it]epoch 4 loss 1.25573:  61%|██████    | 17/28 [00:50<00:29,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6659[0m
[32m  eval_f1 = 0.3828[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.5348[0m
[32m  eval_recall = 0.346[0m
[32m  ********************[0m
[32m  Best f1:0.3828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.25573:  64%|██████▍   | 18/28 [00:55<00:33,  3.39s/it]epoch 4 loss 1.25243:  64%|██████▍   | 18/28 [00:55<00:33,  3.39s/it]epoch 4 loss 1.25243:  68%|██████▊   | 19/28 [00:55<00:22,  2.49s/it]epoch 4 loss 1.25078:  68%|██████▊   | 19/28 [00:55<00:22,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6662[0m
[32m  eval_f1 = 0.3825[0m
[32m  eval_mcc = 0.647[0m
[32m  eval_precision = 0.5354[0m
[32m  eval_recall = 0.3456[0m
[32m  ********************[0m
[32m  Best MCC:0.647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25078:  71%|███████▏  | 20/28 [01:00<00:25,  3.16s/it]epoch 4 loss 1.25286:  71%|███████▏  | 20/28 [01:00<00:25,  3.16s/it]epoch 4 loss 1.25286:  75%|███████▌  | 21/28 [01:00<00:16,  2.34s/it]epoch 4 loss 1.24812:  75%|███████▌  | 21/28 [01:01<00:16,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6662[0m
[32m  eval_f1 = 0.3821[0m
[32m  eval_mcc = 0.647[0m
[32m  eval_precision = 0.5358[0m
[32m  eval_recall = 0.3453[0m
[32m  ********************[0m
[32m  Best MCC:0.647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24812:  79%|███████▊  | 22/28 [01:05<00:18,  3.14s/it]epoch 4 loss 1.25064:  79%|███████▊  | 22/28 [01:06<00:18,  3.14s/it]epoch 4 loss 1.25064:  82%|████████▏ | 23/28 [01:06<00:11,  2.32s/it]epoch 4 loss 1.25512:  82%|████████▏ | 23/28 [01:06<00:11,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3827[0m
[32m  eval_mcc = 0.6476[0m
[32m  eval_precision = 0.5364[0m
[32m  eval_recall = 0.3458[0m
[32m  ********************[0m
[32m  Best MCC:0.6476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25512:  86%|████████▌ | 24/28 [01:11<00:12,  3.13s/it]epoch 4 loss 1.25134:  86%|████████▌ | 24/28 [01:11<00:12,  3.13s/it]epoch 4 loss 1.25134:  89%|████████▉ | 25/28 [01:11<00:06,  2.31s/it]epoch 4 loss 1.25619:  89%|████████▉ | 25/28 [01:11<00:06,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6669[0m
[32m  eval_f1 = 0.3834[0m
[32m  eval_mcc = 0.6478[0m
[32m  eval_precision = 0.5361[0m
[32m  eval_recall = 0.3462[0m
[32m  ********************[0m
[32m  Best f1:0.3834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25619:  93%|█████████▎| 26/28 [01:17<00:06,  3.44s/it]epoch 4 loss 1.2542:  93%|█████████▎| 26/28 [01:18<00:06,  3.44s/it] epoch 4 loss 1.2542:  96%|█████████▋| 27/28 [01:18<00:02,  2.53s/it]epoch 4 loss 1.25895:  96%|█████████▋| 27/28 [01:18<00:02,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.667[0m
[32m  eval_f1 = 0.3834[0m
[32m  eval_mcc = 0.6478[0m
[32m  eval_precision = 0.536[0m
[32m  eval_recall = 0.3462[0m
[32m  ********************[0m
[32m  Best f1:0.3834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.25895: 100%|██████████| 28/28 [01:25<00:00,  4.00s/it]epoch 4 loss 1.25895: 100%|██████████| 28/28 [01:25<00:00,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.59it/s] 20%|██        | 2/10 [00:00<00:02,  2.68it/s] 30%|███       | 3/10 [00:01<00:02,  2.71it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.68it/s] 60%|██████    | 6/10 [00:02<00:01,  2.70it/s] 70%|███████   | 7/10 [00:02<00:01,  2.72it/s] 80%|████████  | 8/10 [00:02<00:00,  2.72it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.667[0m
[32m  eval_f1 = 0.3834[0m
[32m  eval_mcc = 0.6478[0m
[32m  eval_precision = 0.536[0m
[32m  eval_recall = 0.3462[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6494[0m
[32m  eval_f1 = 0.3353[0m
[32m  eval_mcc = 0.6302[0m
[32m  eval_precision = 0.4559[0m
[32m  eval_recall = 0.3045[0m

