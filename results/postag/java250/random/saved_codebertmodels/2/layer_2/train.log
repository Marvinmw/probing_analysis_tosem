[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=2, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/2/layer_2', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.19313:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.19313:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.20519:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.008[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = 0.0023[0m
[32m  eval_precision = 0.003[0m
[32m  eval_recall = 0.003[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20519:   7%|▋         | 2/28 [00:05<01:24,  3.25s/it]epoch 0 loss 5.19749:   7%|▋         | 2/28 [00:06<01:24,  3.25s/it]epoch 0 loss 5.19749:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.1888:  11%|█         | 3/28 [00:06<00:48,  1.95s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0127[0m
[32m  eval_f1 = 0.0024[0m
[32m  eval_mcc = 0.004[0m
[32m  eval_precision = 0.0081[0m
[32m  eval_recall = 0.0036[0m
[32m  ********************[0m
[32m  Best f1:0.0024[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.1888:  14%|█▍        | 4/28 [00:14<01:51,  4.63s/it]epoch 0 loss 5.1734:  14%|█▍        | 4/28 [00:15<01:51,  4.63s/it]epoch 0 loss 5.1734:  18%|█▊        | 5/28 [00:15<01:11,  3.11s/it]epoch 0 loss 5.14401:  18%|█▊        | 5/28 [00:15<01:11,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0263[0m
[32m  eval_f1 = 0.0045[0m
[32m  eval_mcc = 0.0107[0m
[32m  eval_precision = 0.0097[0m
[32m  eval_recall = 0.0056[0m
[32m  ********************[0m
[32m  Best f1:0.0045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.14401:  21%|██▏       | 6/28 [00:24<01:54,  5.20s/it]epoch 0 loss 5.11046:  21%|██▏       | 6/28 [00:25<01:54,  5.20s/it]epoch 0 loss 5.11046:  25%|██▌       | 7/28 [00:25<01:16,  3.64s/it]epoch 0 loss 5.07435:  25%|██▌       | 7/28 [00:25<01:16,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0514[0m
[32m  eval_f1 = 0.0075[0m
[32m  eval_mcc = 0.0219[0m
[32m  eval_precision = 0.0101[0m
[32m  eval_recall = 0.0112[0m
[32m  ********************[0m
[32m  Best f1:0.0075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.07435:  29%|██▊       | 8/28 [00:32<01:39,  4.98s/it]epoch 0 loss 5.02927:  29%|██▊       | 8/28 [00:33<01:39,  4.98s/it]epoch 0 loss 5.02927:  32%|███▏      | 9/28 [00:33<01:07,  3.56s/it]epoch 0 loss 4.98298:  32%|███▏      | 9/28 [00:33<01:07,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0777[0m
[32m  eval_f1 = 0.0113[0m
[32m  eval_mcc = 0.0351[0m
[32m  eval_precision = 0.0159[0m
[32m  eval_recall = 0.0173[0m
[32m  ********************[0m
[32m  Best f1:0.0113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.98298:  36%|███▌      | 10/28 [00:42<01:34,  5.26s/it]epoch 0 loss 4.93356:  36%|███▌      | 10/28 [00:42<01:34,  5.26s/it]epoch 0 loss 4.93356:  39%|███▉      | 11/28 [00:42<01:04,  3.78s/it]epoch 0 loss 4.87576:  39%|███▉      | 11/28 [00:43<01:04,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1024[0m
[32m  eval_f1 = 0.0168[0m
[32m  eval_mcc = 0.0547[0m
[32m  eval_precision = 0.028[0m
[32m  eval_recall = 0.024[0m
[32m  ********************[0m
[32m  Best f1:0.0168[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.87576:  43%|████▎     | 12/28 [00:50<01:17,  4.83s/it]epoch 0 loss 4.81251:  43%|████▎     | 12/28 [00:50<01:17,  4.83s/it]epoch 0 loss 4.81251:  46%|████▋     | 13/28 [00:50<00:52,  3.49s/it]epoch 0 loss 4.75322:  46%|████▋     | 13/28 [00:50<00:52,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1336[0m
[32m  eval_f1 = 0.0253[0m
[32m  eval_mcc = 0.085[0m
[32m  eval_precision = 0.0428[0m
[32m  eval_recall = 0.032[0m
[32m  ********************[0m
[32m  Best f1:0.0253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.75322:  50%|█████     | 14/28 [00:59<01:13,  5.24s/it]epoch 0 loss 4.68841:  50%|█████     | 14/28 [01:00<01:13,  5.24s/it]epoch 0 loss 4.68841:  54%|█████▎    | 15/28 [01:00<00:49,  3.79s/it]epoch 0 loss 4.62191:  54%|█████▎    | 15/28 [01:00<00:49,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1777[0m
[32m  eval_f1 = 0.0427[0m
[32m  eval_mcc = 0.1336[0m
[32m  eval_precision = 0.0703[0m
[32m  eval_recall = 0.0442[0m
[32m  ********************[0m
[32m  Best f1:0.0427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.62191:  57%|█████▋    | 16/28 [01:08<01:02,  5.20s/it]epoch 0 loss 4.55627:  57%|█████▋    | 16/28 [01:09<01:02,  5.20s/it]epoch 0 loss 4.55627:  61%|██████    | 17/28 [01:09<00:41,  3.76s/it]epoch 0 loss 4.49494:  61%|██████    | 17/28 [01:09<00:41,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2357[0m
[32m  eval_f1 = 0.0556[0m
[32m  eval_mcc = 0.1959[0m
[32m  eval_precision = 0.0909[0m
[32m  eval_recall = 0.054[0m
[32m  ********************[0m
[32m  Best f1:0.0556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.49494:  64%|██████▍   | 18/28 [01:19<00:56,  5.68s/it]epoch 0 loss 4.42532:  64%|██████▍   | 18/28 [01:19<00:56,  5.68s/it]epoch 0 loss 4.42532:  68%|██████▊   | 19/28 [01:19<00:36,  4.10s/it]epoch 0 loss 4.35813:  68%|██████▊   | 19/28 [01:19<00:36,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3185[0m
[32m  eval_f1 = 0.0898[0m
[32m  eval_mcc = 0.2795[0m
[32m  eval_precision = 0.1545[0m
[32m  eval_recall = 0.0809[0m
[32m  ********************[0m
[32m  Best f1:0.0898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2795[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.35813:  71%|███████▏  | 20/28 [01:26<00:40,  5.00s/it]epoch 0 loss 4.28751:  71%|███████▏  | 20/28 [01:27<00:40,  5.00s/it]epoch 0 loss 4.28751:  75%|███████▌  | 21/28 [01:27<00:25,  3.63s/it]epoch 0 loss 4.22113:  75%|███████▌  | 21/28 [01:27<00:25,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3989[0m
[32m  eval_f1 = 0.1194[0m
[32m  eval_mcc = 0.3593[0m
[32m  eval_precision = 0.1934[0m
[32m  eval_recall = 0.1047[0m
[32m  ********************[0m
[32m  Best f1:0.1194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.22113:  79%|███████▊  | 22/28 [01:36<00:31,  5.32s/it]epoch 0 loss 4.15889:  79%|███████▊  | 22/28 [01:36<00:31,  5.32s/it]epoch 0 loss 4.15889:  82%|████████▏ | 23/28 [01:36<00:19,  3.84s/it]epoch 0 loss 4.09792:  82%|████████▏ | 23/28 [01:37<00:19,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4356[0m
[32m  eval_f1 = 0.1358[0m
[32m  eval_mcc = 0.3984[0m
[32m  eval_precision = 0.2121[0m
[32m  eval_recall = 0.1215[0m
[32m  ********************[0m
[32m  Best f1:0.1358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.09792:  86%|████████▌ | 24/28 [01:42<00:17,  4.48s/it]epoch 0 loss 4.03513:  86%|████████▌ | 24/28 [01:43<00:17,  4.48s/it]epoch 0 loss 4.03513:  89%|████████▉ | 25/28 [01:43<00:09,  3.26s/it]epoch 0 loss 3.97972:  89%|████████▉ | 25/28 [01:43<00:09,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4617[0m
[32m  eval_f1 = 0.1509[0m
[32m  eval_mcc = 0.4295[0m
[32m  eval_precision = 0.2128[0m
[32m  eval_recall = 0.1375[0m
[32m  ********************[0m
[32m  Best f1:0.1509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.97972:  93%|█████████▎| 26/28 [01:48<00:07,  3.95s/it]epoch 0 loss 3.92188:  93%|█████████▎| 26/28 [01:49<00:07,  3.95s/it]epoch 0 loss 3.92188:  96%|█████████▋| 27/28 [01:49<00:02,  2.89s/it]epoch 0 loss 3.85656:  96%|█████████▋| 27/28 [01:49<00:02,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4805[0m
[32m  eval_f1 = 0.1612[0m
[32m  eval_mcc = 0.4504[0m
[32m  eval_precision = 0.2089[0m
[32m  eval_recall = 0.1494[0m
[32m  ********************[0m
[32m  Best f1:0.1612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.85656: 100%|██████████| 28/28 [01:54<00:00,  3.78s/it]epoch 0 loss 3.85656: 100%|██████████| 28/28 [01:54<00:00,  4.11s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.18256:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.18256:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 1 loss 2.09349:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.512[0m
[32m  eval_f1 = 0.1736[0m
[32m  eval_mcc = 0.4824[0m
[32m  eval_precision = 0.237[0m
[32m  eval_recall = 0.1657[0m
[32m  ********************[0m
[32m  Best f1:0.1736[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09349:   7%|▋         | 2/28 [00:06<01:36,  3.71s/it]epoch 1 loss 2.05966:   7%|▋         | 2/28 [00:06<01:36,  3.71s/it]epoch 1 loss 2.05966:  11%|█         | 3/28 [00:06<00:55,  2.21s/it]epoch 1 loss 2.07008:  11%|█         | 3/28 [00:07<00:55,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5471[0m
[32m  eval_f1 = 0.1938[0m
[32m  eval_mcc = 0.5189[0m
[32m  eval_precision = 0.2607[0m
[32m  eval_recall = 0.1862[0m
[32m  ********************[0m
[32m  Best f1:0.1938[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07008:  14%|█▍        | 4/28 [00:12<01:28,  3.70s/it]epoch 1 loss 2.04722:  14%|█▍        | 4/28 [00:13<01:28,  3.70s/it]epoch 1 loss 2.04722:  18%|█▊        | 5/28 [00:13<00:57,  2.52s/it]epoch 1 loss 2.01442:  18%|█▊        | 5/28 [00:13<00:57,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5774[0m
[32m  eval_f1 = 0.2111[0m
[32m  eval_mcc = 0.5523[0m
[32m  eval_precision = 0.2589[0m
[32m  eval_recall = 0.2065[0m
[32m  ********************[0m
[32m  Best f1:0.2111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01442:  21%|██▏       | 6/28 [00:19<01:21,  3.68s/it]epoch 1 loss 1.97788:  21%|██▏       | 6/28 [00:19<01:21,  3.68s/it]epoch 1 loss 1.97788:  25%|██▌       | 7/28 [00:19<00:55,  2.62s/it]epoch 1 loss 1.95506:  25%|██▌       | 7/28 [00:20<00:55,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5887[0m
[32m  eval_f1 = 0.2181[0m
[32m  eval_mcc = 0.5662[0m
[32m  eval_precision = 0.2899[0m
[32m  eval_recall = 0.2125[0m
[32m  ********************[0m
[32m  Best f1:0.2181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5662[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95506:  29%|██▊       | 8/28 [00:25<01:14,  3.71s/it]epoch 1 loss 1.9252:  29%|██▊       | 8/28 [00:26<01:14,  3.71s/it] epoch 1 loss 1.9252:  32%|███▏      | 9/28 [00:26<00:50,  2.68s/it]epoch 1 loss 1.8904:  32%|███▏      | 9/28 [00:26<00:50,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.595[0m
[32m  eval_f1 = 0.2237[0m
[32m  eval_mcc = 0.5735[0m
[32m  eval_precision = 0.3133[0m
[32m  eval_recall = 0.2163[0m
[32m  ********************[0m
[32m  Best f1:0.2237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8904:  36%|███▌      | 10/28 [00:32<01:06,  3.71s/it]epoch 1 loss 1.88061:  36%|███▌      | 10/28 [00:32<01:06,  3.71s/it]epoch 1 loss 1.88061:  39%|███▉      | 11/28 [00:32<00:45,  2.71s/it]epoch 1 loss 1.86936:  39%|███▉      | 11/28 [00:32<00:45,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6025[0m
[32m  eval_f1 = 0.2368[0m
[32m  eval_mcc = 0.5807[0m
[32m  eval_precision = 0.3278[0m
[32m  eval_recall = 0.2256[0m
[32m  ********************[0m
[32m  Best f1:0.2368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5807[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86936:  43%|████▎     | 12/28 [00:42<01:17,  4.85s/it]epoch 1 loss 1.84982:  43%|████▎     | 12/28 [00:42<01:17,  4.85s/it]epoch 1 loss 1.84982:  46%|████▋     | 13/28 [00:42<00:52,  3.51s/it]epoch 1 loss 1.83631:  46%|████▋     | 13/28 [00:43<00:52,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.606[0m
[32m  eval_f1 = 0.2495[0m
[32m  eval_mcc = 0.583[0m
[32m  eval_precision = 0.3541[0m
[32m  eval_recall = 0.234[0m
[32m  ********************[0m
[32m  Best f1:0.2495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83631:  50%|█████     | 14/28 [00:52<01:15,  5.41s/it]epoch 1 loss 1.82965:  50%|█████     | 14/28 [00:52<01:15,  5.41s/it]epoch 1 loss 1.82965:  54%|█████▎    | 15/28 [00:52<00:50,  3.91s/it]epoch 1 loss 1.81572:  54%|█████▎    | 15/28 [00:53<00:50,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6106[0m
[32m  eval_f1 = 0.2665[0m
[32m  eval_mcc = 0.5875[0m
[32m  eval_precision = 0.3859[0m
[32m  eval_recall = 0.2461[0m
[32m  ********************[0m
[32m  Best f1:0.2665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81572:  57%|█████▋    | 16/28 [01:03<01:10,  5.90s/it]epoch 1 loss 1.79206:  57%|█████▋    | 16/28 [01:03<01:10,  5.90s/it]epoch 1 loss 1.79206:  61%|██████    | 17/28 [01:03<00:46,  4.25s/it]epoch 1 loss 1.77803:  61%|██████    | 17/28 [01:04<00:46,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6187[0m
[32m  eval_f1 = 0.2765[0m
[32m  eval_mcc = 0.5964[0m
[32m  eval_precision = 0.3871[0m
[32m  eval_recall = 0.2541[0m
[32m  ********************[0m
[32m  Best f1:0.2765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5964[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77803:  64%|██████▍   | 18/28 [01:14<01:01,  6.15s/it]epoch 1 loss 1.76176:  64%|██████▍   | 18/28 [01:14<01:01,  6.15s/it]epoch 1 loss 1.76176:  68%|██████▊   | 19/28 [01:14<00:39,  4.43s/it]epoch 1 loss 1.73973:  68%|██████▊   | 19/28 [01:15<00:39,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.621[0m
[32m  eval_f1 = 0.2946[0m
[32m  eval_mcc = 0.6003[0m
[32m  eval_precision = 0.4031[0m
[32m  eval_recall = 0.2705[0m
[32m  ********************[0m
[32m  Best f1:0.2946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.73973:  71%|███████▏  | 20/28 [01:25<00:51,  6.40s/it]epoch 1 loss 1.72603:  71%|███████▏  | 20/28 [01:26<00:51,  6.40s/it]epoch 1 loss 1.72603:  75%|███████▌  | 21/28 [01:26<00:32,  4.61s/it]epoch 1 loss 1.71142:  75%|███████▌  | 21/28 [01:26<00:32,  4.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6232[0m
[32m  eval_f1 = 0.308[0m
[32m  eval_mcc = 0.6033[0m
[32m  eval_precision = 0.4269[0m
[32m  eval_recall = 0.2829[0m
[32m  ********************[0m
[32m  Best f1:0.308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.71142:  79%|███████▊  | 22/28 [01:36<00:38,  6.42s/it]epoch 1 loss 1.70008:  79%|███████▊  | 22/28 [01:37<00:38,  6.42s/it]epoch 1 loss 1.70008:  82%|████████▏ | 23/28 [01:37<00:23,  4.62s/it]epoch 1 loss 1.68701:  82%|████████▏ | 23/28 [01:37<00:23,  4.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6273[0m
[32m  eval_f1 = 0.3144[0m
[32m  eval_mcc = 0.6078[0m
[32m  eval_precision = 0.4235[0m
[32m  eval_recall = 0.2879[0m
[32m  ********************[0m
[32m  Best f1:0.3144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.68701:  86%|████████▌ | 24/28 [01:47<00:25,  6.34s/it]epoch 1 loss 1.67434:  86%|████████▌ | 24/28 [01:48<00:25,  6.34s/it]epoch 1 loss 1.67434:  89%|████████▉ | 25/28 [01:48<00:13,  4.56s/it]epoch 1 loss 1.66189:  89%|████████▉ | 25/28 [01:48<00:13,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6316[0m
[32m  eval_f1 = 0.3213[0m
[32m  eval_mcc = 0.6116[0m
[32m  eval_precision = 0.4313[0m
[32m  eval_recall = 0.2936[0m
[32m  ********************[0m
[32m  Best f1:0.3213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.66189:  93%|█████████▎| 26/28 [01:57<00:12,  6.14s/it]epoch 1 loss 1.65405:  93%|█████████▎| 26/28 [01:58<00:12,  6.14s/it]epoch 1 loss 1.65405:  96%|█████████▋| 27/28 [01:58<00:04,  4.42s/it]epoch 1 loss 1.6425:  96%|█████████▋| 27/28 [01:58<00:04,  4.42s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6352[0m
[32m  eval_f1 = 0.3288[0m
[32m  eval_mcc = 0.6145[0m
[32m  eval_precision = 0.4268[0m
[32m  eval_recall = 0.3031[0m
[32m  ********************[0m
[32m  Best f1:0.3288[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.6425: 100%|██████████| 28/28 [02:08<00:00,  6.20s/it]epoch 1 loss 1.6425: 100%|██████████| 28/28 [02:08<00:00,  4.60s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.18525:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.18525:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 2 loss 1.27648:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.3352[0m
[32m  eval_mcc = 0.6177[0m
[32m  eval_precision = 0.4396[0m
[32m  eval_recall = 0.3099[0m
[32m  ********************[0m
[32m  Best f1:0.3352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6177[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27648:   7%|▋         | 2/28 [00:10<02:35,  5.96s/it]epoch 2 loss 1.27488:   7%|▋         | 2/28 [00:10<02:35,  5.96s/it]epoch 2 loss 1.27488:  11%|█         | 3/28 [00:10<01:25,  3.43s/it]epoch 2 loss 1.33885:  11%|█         | 3/28 [00:11<01:25,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6425[0m
[32m  eval_f1 = 0.3374[0m
[32m  eval_mcc = 0.6215[0m
[32m  eval_precision = 0.4412[0m
[32m  eval_recall = 0.3127[0m
[32m  ********************[0m
[32m  Best f1:0.3374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33885:  14%|█▍        | 4/28 [00:18<02:04,  5.20s/it]epoch 2 loss 1.34193:  14%|█▍        | 4/28 [00:19<02:04,  5.20s/it]epoch 2 loss 1.34193:  18%|█▊        | 5/28 [00:19<01:19,  3.47s/it]epoch 2 loss 1.3397:  18%|█▊        | 5/28 [00:19<01:19,  3.47s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6464[0m
[32m  eval_f1 = 0.343[0m
[32m  eval_mcc = 0.6259[0m
[32m  eval_precision = 0.4494[0m
[32m  eval_recall = 0.3175[0m
[32m  ********************[0m
[32m  Best f1:0.343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3397:  21%|██▏       | 6/28 [00:28<02:01,  5.53s/it]epoch 2 loss 1.33336:  21%|██▏       | 6/28 [00:28<02:01,  5.53s/it]epoch 2 loss 1.33336:  25%|██▌       | 7/28 [00:28<01:21,  3.86s/it]epoch 2 loss 1.3408:  25%|██▌       | 7/28 [00:29<01:21,  3.86s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6474[0m
[32m  eval_f1 = 0.3409[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.4507[0m
[32m  eval_recall = 0.3148[0m
[32m  ********************[0m
[32m  Best MCC:0.6274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3408:  29%|██▊       | 8/28 [00:34<01:28,  4.42s/it]epoch 2 loss 1.33718:  29%|██▊       | 8/28 [00:34<01:28,  4.42s/it]epoch 2 loss 1.33718:  32%|███▏      | 9/28 [00:34<01:00,  3.17s/it]epoch 2 loss 1.31778:  32%|███▏      | 9/28 [00:35<01:00,  3.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6475[0m
[32m  eval_f1 = 0.3432[0m
[32m  eval_mcc = 0.6284[0m
[32m  eval_precision = 0.4589[0m
[32m  eval_recall = 0.316[0m
[32m  ********************[0m
[32m  Best f1:0.3432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31778:  36%|███▌      | 10/28 [00:44<01:30,  5.02s/it]epoch 2 loss 1.31639:  36%|███▌      | 10/28 [00:44<01:30,  5.02s/it]epoch 2 loss 1.31639:  39%|███▉      | 11/28 [00:44<01:01,  3.61s/it]epoch 2 loss 1.30942:  39%|███▉      | 11/28 [00:44<01:01,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6484[0m
[32m  eval_f1 = 0.3464[0m
[32m  eval_mcc = 0.6294[0m
[32m  eval_precision = 0.463[0m
[32m  eval_recall = 0.3177[0m
[32m  ********************[0m
[32m  Best f1:0.3464[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30942:  43%|████▎     | 12/28 [00:52<01:16,  4.80s/it]epoch 2 loss 1.30958:  43%|████▎     | 12/28 [00:52<01:16,  4.80s/it]epoch 2 loss 1.30958:  46%|████▋     | 13/28 [00:52<00:52,  3.47s/it]epoch 2 loss 1.29664:  46%|████▋     | 13/28 [00:52<00:52,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3487[0m
[32m  eval_mcc = 0.6306[0m
[32m  eval_precision = 0.4664[0m
[32m  eval_recall = 0.32[0m
[32m  ********************[0m
[32m  Best f1:0.3487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29664:  50%|█████     | 14/28 [01:01<01:14,  5.29s/it]epoch 2 loss 1.29871:  50%|█████     | 14/28 [01:02<01:14,  5.29s/it]epoch 2 loss 1.29871:  54%|█████▎    | 15/28 [01:02<00:49,  3.82s/it]epoch 2 loss 1.29935:  54%|█████▎    | 15/28 [01:02<00:49,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6527[0m
[32m  eval_f1 = 0.3512[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.4645[0m
[32m  eval_recall = 0.3229[0m
[32m  ********************[0m
[32m  Best f1:0.3512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29935:  57%|█████▋    | 16/28 [01:10<01:00,  5.01s/it]epoch 2 loss 1.29864:  57%|█████▋    | 16/28 [01:10<01:00,  5.01s/it]epoch 2 loss 1.29864:  61%|██████    | 17/28 [01:10<00:39,  3.63s/it]epoch 2 loss 1.29043:  61%|██████    | 17/28 [01:10<00:39,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6549[0m
[32m  eval_f1 = 0.3514[0m
[32m  eval_mcc = 0.635[0m
[32m  eval_precision = 0.4715[0m
[32m  eval_recall = 0.3242[0m
[32m  ********************[0m
[32m  Best f1:0.3514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.635[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.29043:  64%|██████▍   | 18/28 [01:19<00:53,  5.34s/it]epoch 2 loss 1.28825:  64%|██████▍   | 18/28 [01:20<00:53,  5.34s/it]epoch 2 loss 1.28825:  68%|██████▊   | 19/28 [01:20<00:34,  3.86s/it]epoch 2 loss 1.28362:  68%|██████▊   | 19/28 [01:20<00:34,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6579[0m
[32m  eval_f1 = 0.3548[0m
[32m  eval_mcc = 0.638[0m
[32m  eval_precision = 0.4666[0m
[32m  eval_recall = 0.3282[0m
[32m  ********************[0m
[32m  Best f1:0.3548[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28362:  71%|███████▏  | 20/28 [01:28<00:42,  5.26s/it]epoch 2 loss 1.28156:  71%|███████▏  | 20/28 [01:29<00:42,  5.26s/it]epoch 2 loss 1.28156:  75%|███████▌  | 21/28 [01:29<00:26,  3.81s/it]epoch 2 loss 1.27882:  75%|███████▌  | 21/28 [01:29<00:26,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6607[0m
[32m  eval_f1 = 0.3575[0m
[32m  eval_mcc = 0.6409[0m
[32m  eval_precision = 0.4614[0m
[32m  eval_recall = 0.3312[0m
[32m  ********************[0m
[32m  Best f1:0.3575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27882:  79%|███████▊  | 22/28 [01:39<00:33,  5.61s/it]epoch 2 loss 1.28431:  79%|███████▊  | 22/28 [01:39<00:33,  5.61s/it]epoch 2 loss 1.28431:  82%|████████▏ | 23/28 [01:39<00:20,  4.05s/it]epoch 2 loss 1.28407:  82%|████████▏ | 23/28 [01:39<00:20,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6625[0m
[32m  eval_f1 = 0.3638[0m
[32m  eval_mcc = 0.6428[0m
[32m  eval_precision = 0.4698[0m
[32m  eval_recall = 0.3362[0m
[32m  ********************[0m
[32m  Best f1:0.3638[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6428[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28407:  86%|████████▌ | 24/28 [01:50<00:24,  6.16s/it]epoch 2 loss 1.28122:  86%|████████▌ | 24/28 [01:51<00:24,  6.16s/it]epoch 2 loss 1.28122:  89%|████████▉ | 25/28 [01:51<00:13,  4.44s/it]epoch 2 loss 1.28413:  89%|████████▉ | 25/28 [01:51<00:13,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6643[0m
[32m  eval_f1 = 0.3723[0m
[32m  eval_mcc = 0.6448[0m
[32m  eval_precision = 0.4971[0m
[32m  eval_recall = 0.3419[0m
[32m  ********************[0m
[32m  Best f1:0.3723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28413:  93%|█████████▎| 26/28 [01:59<00:11,  5.52s/it]epoch 2 loss 1.28382:  93%|█████████▎| 26/28 [01:59<00:11,  5.52s/it]epoch 2 loss 1.28382:  96%|█████████▋| 27/28 [01:59<00:03,  3.99s/it]epoch 2 loss 1.2857:  96%|█████████▋| 27/28 [01:59<00:03,  3.99s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3739[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.4796[0m
[32m  eval_recall = 0.3431[0m
[32m  ********************[0m
[32m  Best f1:0.3739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2857: 100%|██████████| 28/28 [02:08<00:00,  5.56s/it]epoch 2 loss 1.2857: 100%|██████████| 28/28 [02:08<00:00,  4.60s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.18204:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.18204:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 3 loss 1.26806:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6653[0m
[32m  eval_f1 = 0.3773[0m
[32m  eval_mcc = 0.6461[0m
[32m  eval_precision = 0.487[0m
[32m  eval_recall = 0.3444[0m
[32m  ********************[0m
[32m  Best f1:0.3773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26806:   7%|▋         | 2/28 [00:06<01:33,  3.58s/it]epoch 3 loss 1.24022:   7%|▋         | 2/28 [00:06<01:33,  3.58s/it]epoch 3 loss 1.24022:  11%|█         | 3/28 [00:06<00:53,  2.14s/it]epoch 3 loss 1.22976:  11%|█         | 3/28 [00:07<00:53,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6653[0m
[32m  eval_f1 = 0.3809[0m
[32m  eval_mcc = 0.6463[0m
[32m  eval_precision = 0.4973[0m
[32m  eval_recall = 0.3466[0m
[32m  ********************[0m
[32m  Best f1:0.3809[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6463[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22976:  14%|█▍        | 4/28 [00:12<01:28,  3.67s/it]epoch 3 loss 1.22308:  14%|█▍        | 4/28 [00:13<01:28,  3.67s/it]epoch 3 loss 1.22308:  18%|█▊        | 5/28 [00:13<00:57,  2.49s/it]epoch 3 loss 1.21991:  18%|█▊        | 5/28 [00:13<00:57,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6656[0m
[32m  eval_f1 = 0.3803[0m
[32m  eval_mcc = 0.6467[0m
[32m  eval_precision = 0.5079[0m
[32m  eval_recall = 0.3459[0m
[32m  ********************[0m
[32m  Best MCC:0.6467[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21991:  21%|██▏       | 6/28 [00:18<01:13,  3.34s/it]epoch 3 loss 1.20664:  21%|██▏       | 6/28 [00:18<01:13,  3.34s/it]epoch 3 loss 1.20664:  25%|██▌       | 7/28 [00:18<00:50,  2.38s/it]epoch 3 loss 1.21008:  25%|██▌       | 7/28 [00:18<00:50,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.382[0m
[32m  eval_mcc = 0.6467[0m
[32m  eval_precision = 0.5194[0m
[32m  eval_recall = 0.347[0m
[32m  ********************[0m
[32m  Best f1:0.382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.21008:  29%|██▊       | 8/28 [00:23<01:03,  3.17s/it]epoch 3 loss 1.2069:  29%|██▊       | 8/28 [00:23<01:03,  3.17s/it] epoch 3 loss 1.2069:  32%|███▏      | 9/28 [00:23<00:43,  2.31s/it]epoch 3 loss 1.20382:  32%|███▏      | 9/28 [00:24<00:43,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6659[0m
[32m  eval_f1 = 0.3826[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.5196[0m
[32m  eval_recall = 0.3478[0m
[32m  ********************[0m
[32m  Best f1:0.3826[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20382:  36%|███▌      | 10/28 [00:29<01:02,  3.45s/it]epoch 3 loss 1.20138:  36%|███▌      | 10/28 [00:30<01:02,  3.45s/it]epoch 3 loss 1.20138:  39%|███▉      | 11/28 [00:30<00:42,  2.53s/it]epoch 3 loss 1.19862:  39%|███▉      | 11/28 [00:30<00:42,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6671[0m
[32m  eval_f1 = 0.3853[0m
[32m  eval_mcc = 0.6481[0m
[32m  eval_precision = 0.5244[0m
[32m  eval_recall = 0.3496[0m
[32m  ********************[0m
[32m  Best f1:0.3853[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19862:  43%|████▎     | 12/28 [00:36<00:57,  3.59s/it]epoch 3 loss 1.20373:  43%|████▎     | 12/28 [00:36<00:57,  3.59s/it]epoch 3 loss 1.20373:  46%|████▋     | 13/28 [00:36<00:39,  2.63s/it]epoch 3 loss 1.20385:  46%|████▋     | 13/28 [00:37<00:39,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6675[0m
[32m  eval_f1 = 0.3868[0m
[32m  eval_mcc = 0.6485[0m
[32m  eval_precision = 0.5205[0m
[32m  eval_recall = 0.351[0m
[32m  ********************[0m
[32m  Best f1:0.3868[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20385:  50%|█████     | 14/28 [00:42<00:50,  3.59s/it]epoch 3 loss 1.21073:  50%|█████     | 14/28 [00:42<00:50,  3.59s/it]epoch 3 loss 1.21073:  54%|█████▎    | 15/28 [00:42<00:34,  2.64s/it]epoch 3 loss 1.20718:  54%|█████▎    | 15/28 [00:43<00:34,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6683[0m
[32m  eval_f1 = 0.3867[0m
[32m  eval_mcc = 0.6493[0m
[32m  eval_precision = 0.5105[0m
[32m  eval_recall = 0.3521[0m
[32m  ********************[0m
[32m  Best MCC:0.6493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20718:  57%|█████▋    | 16/28 [00:47<00:40,  3.35s/it]epoch 3 loss 1.20735:  57%|█████▋    | 16/28 [00:48<00:40,  3.35s/it]epoch 3 loss 1.20735:  61%|██████    | 17/28 [00:48<00:27,  2.46s/it]epoch 3 loss 1.20567:  61%|██████    | 17/28 [00:48<00:27,  2.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6697[0m
[32m  eval_f1 = 0.3881[0m
[32m  eval_mcc = 0.6506[0m
[32m  eval_precision = 0.5091[0m
[32m  eval_recall = 0.3542[0m
[32m  ********************[0m
[32m  Best f1:0.3881[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6506[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20567:  64%|██████▍   | 18/28 [00:54<00:35,  3.51s/it]epoch 3 loss 1.20557:  64%|██████▍   | 18/28 [00:54<00:35,  3.51s/it]epoch 3 loss 1.20557:  68%|██████▊   | 19/28 [00:54<00:23,  2.59s/it]epoch 3 loss 1.21129:  68%|██████▊   | 19/28 [00:55<00:23,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6713[0m
[32m  eval_f1 = 0.3902[0m
[32m  eval_mcc = 0.6523[0m
[32m  eval_precision = 0.5081[0m
[32m  eval_recall = 0.3568[0m
[32m  ********************[0m
[32m  Best f1:0.3902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6523[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21129:  71%|███████▏  | 20/28 [01:00<00:28,  3.61s/it]epoch 3 loss 1.20872:  71%|███████▏  | 20/28 [01:01<00:28,  3.61s/it]epoch 3 loss 1.20872:  75%|███████▌  | 21/28 [01:01<00:18,  2.66s/it]epoch 3 loss 1.20873:  75%|███████▌  | 21/28 [01:01<00:18,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6736[0m
[32m  eval_f1 = 0.3932[0m
[32m  eval_mcc = 0.6549[0m
[32m  eval_precision = 0.5092[0m
[32m  eval_recall = 0.3601[0m
[32m  ********************[0m
[32m  Best f1:0.3932[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20873:  79%|███████▊  | 22/28 [01:07<00:21,  3.66s/it]epoch 3 loss 1.2064:  79%|███████▊  | 22/28 [01:07<00:21,  3.66s/it] epoch 3 loss 1.2064:  82%|████████▏ | 23/28 [01:07<00:13,  2.69s/it]epoch 3 loss 1.20484:  82%|████████▏ | 23/28 [01:07<00:13,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6746[0m
[32m  eval_f1 = 0.3941[0m
[32m  eval_mcc = 0.656[0m
[32m  eval_precision = 0.5102[0m
[32m  eval_recall = 0.3609[0m
[32m  ********************[0m
[32m  Best f1:0.3941[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.656[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20484:  86%|████████▌ | 24/28 [01:13<00:14,  3.64s/it]epoch 3 loss 1.20524:  86%|████████▌ | 24/28 [01:13<00:14,  3.64s/it]epoch 3 loss 1.20524:  89%|████████▉ | 25/28 [01:13<00:08,  2.67s/it]epoch 3 loss 1.19926:  89%|████████▉ | 25/28 [01:14<00:08,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6751[0m
[32m  eval_f1 = 0.3951[0m
[32m  eval_mcc = 0.6567[0m
[32m  eval_precision = 0.5118[0m
[32m  eval_recall = 0.362[0m
[32m  ********************[0m
[32m  Best f1:0.3951[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19926:  93%|█████████▎| 26/28 [01:19<00:07,  3.63s/it]epoch 3 loss 1.20021:  93%|█████████▎| 26/28 [01:20<00:07,  3.63s/it]epoch 3 loss 1.20021:  96%|█████████▋| 27/28 [01:20<00:02,  2.67s/it]epoch 3 loss 1.20257:  96%|█████████▋| 27/28 [01:20<00:02,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6751[0m
[32m  eval_f1 = 0.3937[0m
[32m  eval_mcc = 0.6567[0m
[32m  eval_precision = 0.5098[0m
[32m  eval_recall = 0.361[0m
[32m  ********************[0m
[32m  Best MCC:0.6567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20257: 100%|██████████| 28/28 [01:24<00:00,  3.30s/it]epoch 3 loss 1.20257: 100%|██████████| 28/28 [01:24<00:00,  3.03s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.12765:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.12765:   4%|▎         | 1/28 [00:00<00:11,  2.45it/s]epoch 4 loss 1.1838:   4%|▎         | 1/28 [00:00<00:11,  2.45it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6747[0m
[32m  eval_f1 = 0.3934[0m
[32m  eval_mcc = 0.6563[0m
[32m  eval_precision = 0.5091[0m
[32m  eval_recall = 0.3609[0m

epoch 4 loss 1.1838:   7%|▋         | 2/28 [00:04<01:02,  2.40s/it]epoch 4 loss 1.15922:   7%|▋         | 2/28 [00:04<01:02,  2.40s/it]epoch 4 loss 1.15922:  11%|█         | 3/28 [00:04<00:37,  1.49s/it]epoch 4 loss 1.18387:  11%|█         | 3/28 [00:05<00:37,  1.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6749[0m
[32m  eval_f1 = 0.3937[0m
[32m  eval_mcc = 0.6565[0m
[32m  eval_precision = 0.5096[0m
[32m  eval_recall = 0.3611[0m

epoch 4 loss 1.18387:  14%|█▍        | 4/28 [00:08<00:57,  2.40s/it]epoch 4 loss 1.17405:  14%|█▍        | 4/28 [00:08<00:57,  2.40s/it]epoch 4 loss 1.17405:  18%|█▊        | 5/28 [00:08<00:38,  1.68s/it]epoch 4 loss 1.1721:  18%|█▊        | 5/28 [00:09<00:38,  1.68s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6755[0m
[32m  eval_f1 = 0.3964[0m
[32m  eval_mcc = 0.6571[0m
[32m  eval_precision = 0.5098[0m
[32m  eval_recall = 0.3625[0m
[32m  ********************[0m
[32m  Best f1:0.3964[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6571[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1721:  21%|██▏       | 6/28 [00:14<01:09,  3.17s/it]epoch 4 loss 1.17793:  21%|██▏       | 6/28 [00:15<01:09,  3.17s/it]epoch 4 loss 1.17793:  25%|██▌       | 7/28 [00:15<00:47,  2.27s/it]epoch 4 loss 1.17083:  25%|██▌       | 7/28 [00:15<00:47,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6751[0m
[32m  eval_f1 = 0.3959[0m
[32m  eval_mcc = 0.6567[0m
[32m  eval_precision = 0.5096[0m
[32m  eval_recall = 0.362[0m

epoch 4 loss 1.17083:  29%|██▊       | 8/28 [00:19<00:55,  2.76s/it]epoch 4 loss 1.16401:  29%|██▊       | 8/28 [00:19<00:55,  2.76s/it]epoch 4 loss 1.16401:  32%|███▏      | 9/28 [00:19<00:38,  2.02s/it]epoch 4 loss 1.1613:  32%|███▏      | 9/28 [00:19<00:38,  2.02s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.675[0m
[32m  eval_f1 = 0.3955[0m
[32m  eval_mcc = 0.6566[0m
[32m  eval_precision = 0.5169[0m
[32m  eval_recall = 0.3615[0m

epoch 4 loss 1.1613:  36%|███▌      | 10/28 [00:23<00:46,  2.57s/it]epoch 4 loss 1.16196:  36%|███▌      | 10/28 [00:23<00:46,  2.57s/it]epoch 4 loss 1.16196:  39%|███▉      | 11/28 [00:23<00:32,  1.91s/it]epoch 4 loss 1.16989:  39%|███▉      | 11/28 [00:24<00:32,  1.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6752[0m
[32m  eval_f1 = 0.3966[0m
[32m  eval_mcc = 0.6567[0m
[32m  eval_precision = 0.5185[0m
[32m  eval_recall = 0.3622[0m
[32m  ********************[0m
[32m  Best f1:0.3966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.16989:  43%|████▎     | 12/28 [00:28<00:45,  2.84s/it]epoch 4 loss 1.1669:  43%|████▎     | 12/28 [00:29<00:45,  2.84s/it] epoch 4 loss 1.1669:  46%|████▋     | 13/28 [00:29<00:31,  2.10s/it]epoch 4 loss 1.17109:  46%|████▋     | 13/28 [00:29<00:31,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6752[0m
[32m  eval_f1 = 0.4006[0m
[32m  eval_mcc = 0.6567[0m
[32m  eval_precision = 0.5299[0m
[32m  eval_recall = 0.3649[0m
[32m  ********************[0m
[32m  Best f1:0.4006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.17109:  50%|█████     | 14/28 [00:34<00:41,  2.98s/it]epoch 4 loss 1.17571:  50%|█████     | 14/28 [00:34<00:41,  2.98s/it]epoch 4 loss 1.17571:  54%|█████▎    | 15/28 [00:34<00:28,  2.20s/it]epoch 4 loss 1.17166:  54%|█████▎    | 15/28 [00:34<00:28,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6756[0m
[32m  eval_f1 = 0.4019[0m
[32m  eval_mcc = 0.6571[0m
[32m  eval_precision = 0.5298[0m
[32m  eval_recall = 0.3662[0m
[32m  ********************[0m
[32m  Best f1:0.4019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.17166:  57%|█████▋    | 16/28 [00:39<00:36,  3.04s/it]epoch 4 loss 1.16822:  57%|█████▋    | 16/28 [00:39<00:36,  3.04s/it]epoch 4 loss 1.16822:  61%|██████    | 17/28 [00:39<00:24,  2.25s/it]epoch 4 loss 1.16738:  61%|██████    | 17/28 [00:40<00:24,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6756[0m
[32m  eval_f1 = 0.4015[0m
[32m  eval_mcc = 0.657[0m
[32m  eval_precision = 0.5186[0m
[32m  eval_recall = 0.3663[0m

epoch 4 loss 1.16738:  64%|██████▍   | 18/28 [00:43<00:27,  2.72s/it]epoch 4 loss 1.1643:  64%|██████▍   | 18/28 [00:44<00:27,  2.72s/it] epoch 4 loss 1.1643:  68%|██████▊   | 19/28 [00:44<00:18,  2.02s/it]epoch 4 loss 1.16246:  68%|██████▊   | 19/28 [00:44<00:18,  2.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6756[0m
[32m  eval_f1 = 0.4023[0m
[32m  eval_mcc = 0.657[0m
[32m  eval_precision = 0.5188[0m
[32m  eval_recall = 0.3671[0m
[32m  ********************[0m
[32m  Best f1:0.4023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.16246:  71%|███████▏  | 20/28 [00:49<00:23,  2.91s/it]epoch 4 loss 1.16446:  71%|███████▏  | 20/28 [00:49<00:23,  2.91s/it]epoch 4 loss 1.16446:  75%|███████▌  | 21/28 [00:49<00:15,  2.16s/it]epoch 4 loss 1.16012:  75%|███████▌  | 21/28 [00:49<00:15,  2.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.676[0m
[32m  eval_f1 = 0.4026[0m
[32m  eval_mcc = 0.6574[0m
[32m  eval_precision = 0.519[0m
[32m  eval_recall = 0.3672[0m
[32m  ********************[0m
[32m  Best f1:0.4026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16012:  79%|███████▊  | 22/28 [00:55<00:19,  3.27s/it]epoch 4 loss 1.16188:  79%|███████▊  | 22/28 [00:55<00:19,  3.27s/it]epoch 4 loss 1.16188:  82%|████████▏ | 23/28 [00:55<00:12,  2.42s/it]epoch 4 loss 1.16588:  82%|████████▏ | 23/28 [00:56<00:12,  2.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6762[0m
[32m  eval_f1 = 0.4029[0m
[32m  eval_mcc = 0.6576[0m
[32m  eval_precision = 0.5193[0m
[32m  eval_recall = 0.3675[0m
[32m  ********************[0m
[32m  Best f1:0.4029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16588:  86%|████████▌ | 24/28 [01:02<00:14,  3.59s/it]epoch 4 loss 1.16204:  86%|████████▌ | 24/28 [01:02<00:14,  3.59s/it]epoch 4 loss 1.16204:  89%|████████▉ | 25/28 [01:02<00:07,  2.64s/it]epoch 4 loss 1.16663:  89%|████████▉ | 25/28 [01:02<00:07,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6762[0m
[32m  eval_f1 = 0.4031[0m
[32m  eval_mcc = 0.6576[0m
[32m  eval_precision = 0.5191[0m
[32m  eval_recall = 0.3677[0m
[32m  ********************[0m
[32m  Best f1:0.4031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6576[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16663:  93%|█████████▎| 26/28 [01:08<00:07,  3.67s/it]epoch 4 loss 1.16487:  93%|█████████▎| 26/28 [01:09<00:07,  3.67s/it]epoch 4 loss 1.16487:  96%|█████████▋| 27/28 [01:09<00:02,  2.69s/it]epoch 4 loss 1.16963:  96%|█████████▋| 27/28 [01:09<00:02,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6764[0m
[32m  eval_f1 = 0.4032[0m
[32m  eval_mcc = 0.6578[0m
[32m  eval_precision = 0.5191[0m
[32m  eval_recall = 0.3678[0m
[32m  ********************[0m
[32m  Best f1:0.4032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_2/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.16963: 100%|██████████| 28/28 [01:14<00:00,  3.48s/it]epoch 4 loss 1.16963: 100%|██████████| 28/28 [01:14<00:00,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.55it/s] 20%|██        | 2/10 [00:00<00:03,  2.66it/s] 30%|███       | 3/10 [00:01<00:02,  2.70it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6764[0m
[32m  eval_f1 = 0.4032[0m
[32m  eval_mcc = 0.6578[0m
[32m  eval_precision = 0.5191[0m
[32m  eval_recall = 0.3678[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6612[0m
[32m  eval_f1 = 0.3532[0m
[32m  eval_mcc = 0.6428[0m
[32m  eval_precision = 0.4568[0m
[32m  eval_recall = 0.3228[0m

