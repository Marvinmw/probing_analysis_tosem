[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/2/layer_8', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.28336:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.28336:   4%|▎         | 1/28 [00:00<00:21,  1.28it/s]epoch 0 loss 5.28852:   4%|▎         | 1/28 [00:01<00:21,  1.28it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0067[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = 0.0021[0m
[32m  eval_precision = 0.0037[0m
[32m  eval_recall = 0.0043[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.28852:   7%|▋         | 2/28 [00:05<01:24,  3.25s/it]epoch 0 loss 5.28445:   7%|▋         | 2/28 [00:06<01:24,  3.25s/it]epoch 0 loss 5.28445:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.26934:  11%|█         | 3/28 [00:06<00:48,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.014[0m
[32m  eval_f1 = 0.0031[0m
[32m  eval_mcc = 0.0062[0m
[32m  eval_precision = 0.0056[0m
[32m  eval_recall = 0.0056[0m
[32m  ********************[0m
[32m  Best f1:0.0031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.26934:  14%|█▍        | 4/28 [00:12<01:27,  3.63s/it]epoch 0 loss 5.24688:  14%|█▍        | 4/28 [00:12<01:27,  3.63s/it]epoch 0 loss 5.24688:  18%|█▊        | 5/28 [00:12<00:56,  2.48s/it]epoch 0 loss 5.21467:  18%|█▊        | 5/28 [00:13<00:56,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0286[0m
[32m  eval_f1 = 0.0044[0m
[32m  eval_mcc = 0.0104[0m
[32m  eval_precision = 0.0112[0m
[32m  eval_recall = 0.0074[0m
[32m  ********************[0m
[32m  Best f1:0.0044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.21467:  21%|██▏       | 6/28 [00:19<01:22,  3.76s/it]epoch 0 loss 5.17739:  21%|██▏       | 6/28 [00:19<01:22,  3.76s/it]epoch 0 loss 5.17739:  25%|██▌       | 7/28 [00:19<00:56,  2.67s/it]epoch 0 loss 5.13731:  25%|██▌       | 7/28 [00:19<00:56,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0543[0m
[32m  eval_f1 = 0.0063[0m
[32m  eval_mcc = 0.0171[0m
[32m  eval_precision = 0.0107[0m
[32m  eval_recall = 0.0118[0m
[32m  ********************[0m
[32m  Best f1:0.0063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.13731:  29%|██▊       | 8/28 [00:25<01:16,  3.82s/it]epoch 0 loss 5.08767:  29%|██▊       | 8/28 [00:26<01:16,  3.82s/it]epoch 0 loss 5.08767:  32%|███▏      | 9/28 [00:26<00:52,  2.76s/it]epoch 0 loss 5.03752:  32%|███▏      | 9/28 [00:26<00:52,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0762[0m
[32m  eval_f1 = 0.0084[0m
[32m  eval_mcc = 0.0287[0m
[32m  eval_precision = 0.0128[0m
[32m  eval_recall = 0.0166[0m
[32m  ********************[0m
[32m  Best f1:0.0084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.03752:  36%|███▌      | 10/28 [00:32<01:08,  3.82s/it]epoch 0 loss 4.98366:  36%|███▌      | 10/28 [00:32<01:08,  3.82s/it]epoch 0 loss 4.98366:  39%|███▉      | 11/28 [00:32<00:47,  2.78s/it]epoch 0 loss 4.92102:  39%|███▉      | 11/28 [00:33<00:47,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0957[0m
[32m  eval_f1 = 0.0117[0m
[32m  eval_mcc = 0.043[0m
[32m  eval_precision = 0.018[0m
[32m  eval_recall = 0.0208[0m
[32m  ********************[0m
[32m  Best f1:0.0117[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.92102:  43%|████▎     | 12/28 [00:41<01:11,  4.49s/it]epoch 0 loss 4.85431:  43%|████▎     | 12/28 [00:41<01:11,  4.49s/it]epoch 0 loss 4.85431:  46%|████▋     | 13/28 [00:41<00:48,  3.26s/it]epoch 0 loss 4.79158:  46%|████▋     | 13/28 [00:42<00:48,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1179[0m
[32m  eval_f1 = 0.0167[0m
[32m  eval_mcc = 0.0641[0m
[32m  eval_precision = 0.0276[0m
[32m  eval_recall = 0.0239[0m
[32m  ********************[0m
[32m  Best f1:0.0167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0641[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.79158:  50%|█████     | 14/28 [00:47<00:57,  4.11s/it]epoch 0 loss 4.72459:  50%|█████     | 14/28 [00:48<00:57,  4.11s/it]epoch 0 loss 4.72459:  54%|█████▎    | 15/28 [00:48<00:39,  3.00s/it]epoch 0 loss 4.65607:  54%|█████▎    | 15/28 [00:48<00:39,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1386[0m
[32m  eval_f1 = 0.0208[0m
[32m  eval_mcc = 0.0854[0m
[32m  eval_precision = 0.0419[0m
[32m  eval_recall = 0.0247[0m
[32m  ********************[0m
[32m  Best f1:0.0208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0854[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.65607:  57%|█████▋    | 16/28 [00:58<01:01,  5.15s/it]epoch 0 loss 4.59:  57%|█████▋    | 16/28 [00:58<01:01,  5.15s/it]   epoch 0 loss 4.59:  61%|██████    | 17/28 [00:58<00:40,  3.73s/it]epoch 0 loss 4.53069:  61%|██████    | 17/28 [00:59<00:40,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1876[0m
[32m  eval_f1 = 0.0274[0m
[32m  eval_mcc = 0.1399[0m
[32m  eval_precision = 0.067[0m
[32m  eval_recall = 0.0292[0m
[32m  ********************[0m
[32m  Best f1:0.0274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.53069:  64%|██████▍   | 18/28 [01:04<00:44,  4.46s/it]epoch 0 loss 4.4621:  64%|██████▍   | 18/28 [01:05<00:44,  4.46s/it] epoch 0 loss 4.4621:  68%|██████▊   | 19/28 [01:05<00:29,  3.25s/it]epoch 0 loss 4.398:  68%|██████▊   | 19/28 [01:05<00:29,  3.25s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2751[0m
[32m  eval_f1 = 0.0398[0m
[32m  eval_mcc = 0.2254[0m
[32m  eval_precision = 0.0828[0m
[32m  eval_recall = 0.0412[0m
[32m  ********************[0m
[32m  Best f1:0.0398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.398:  71%|███████▏  | 20/28 [01:13<00:38,  4.86s/it]epoch 0 loss 4.33078:  71%|███████▏  | 20/28 [01:14<00:38,  4.86s/it]epoch 0 loss 4.33078:  75%|███████▌  | 21/28 [01:14<00:24,  3.53s/it]epoch 0 loss 4.26916:  75%|███████▌  | 21/28 [01:14<00:24,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3147[0m
[32m  eval_f1 = 0.0432[0m
[32m  eval_mcc = 0.2647[0m
[32m  eval_precision = 0.0801[0m
[32m  eval_recall = 0.0477[0m
[32m  ********************[0m
[32m  Best f1:0.0432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.26916:  79%|███████▊  | 22/28 [01:21<00:27,  4.61s/it]epoch 0 loss 4.21207:  79%|███████▊  | 22/28 [01:21<00:27,  4.61s/it]epoch 0 loss 4.21207:  82%|████████▏ | 23/28 [01:21<00:16,  3.35s/it]epoch 0 loss 4.15795:  82%|████████▏ | 23/28 [01:22<00:16,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3355[0m
[32m  eval_f1 = 0.0691[0m
[32m  eval_mcc = 0.2937[0m
[32m  eval_precision = 0.1418[0m
[32m  eval_recall = 0.0691[0m
[32m  ********************[0m
[32m  Best f1:0.0691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.15795:  86%|████████▌ | 24/28 [01:33<00:23,  5.88s/it]epoch 0 loss 4.10175:  86%|████████▌ | 24/28 [01:34<00:23,  5.88s/it]epoch 0 loss 4.10175:  89%|████████▉ | 25/28 [01:34<00:12,  4.24s/it]epoch 0 loss 4.05289:  89%|████████▉ | 25/28 [01:34<00:12,  4.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3618[0m
[32m  eval_f1 = 0.0866[0m
[32m  eval_mcc = 0.3236[0m
[32m  eval_precision = 0.1472[0m
[32m  eval_recall = 0.0832[0m
[32m  ********************[0m
[32m  Best f1:0.0866[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.05289:  93%|█████████▎| 26/28 [01:45<00:13,  6.51s/it]epoch 0 loss 4.00176:  93%|█████████▎| 26/28 [01:46<00:13,  6.51s/it]epoch 0 loss 4.00176:  96%|█████████▋| 27/28 [01:46<00:04,  4.68s/it]epoch 0 loss 3.94229:  96%|█████████▋| 27/28 [01:46<00:04,  4.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.434[0m
[32m  eval_f1 = 0.1387[0m
[32m  eval_mcc = 0.4013[0m
[32m  eval_precision = 0.2038[0m
[32m  eval_recall = 0.126[0m
[32m  ********************[0m
[32m  Best f1:0.1387[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.94229: 100%|██████████| 28/28 [01:57<00:00,  6.62s/it]epoch 0 loss 3.94229: 100%|██████████| 28/28 [01:57<00:00,  4.19s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.45034:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.45034:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 1 loss 2.36244:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.499[0m
[32m  eval_f1 = 0.1662[0m
[32m  eval_mcc = 0.4675[0m
[32m  eval_precision = 0.2159[0m
[32m  eval_recall = 0.1569[0m
[32m  ********************[0m
[32m  Best f1:0.1662[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4675[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.36244:   7%|▋         | 2/28 [00:11<02:59,  6.92s/it]epoch 1 loss 2.3238:   7%|▋         | 2/28 [00:12<02:59,  6.92s/it] epoch 1 loss 2.3238:  11%|█         | 3/28 [00:12<01:38,  3.96s/it]epoch 1 loss 2.32748:  11%|█         | 3/28 [00:12<01:38,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5434[0m
[32m  eval_f1 = 0.1808[0m
[32m  eval_mcc = 0.5156[0m
[32m  eval_precision = 0.2408[0m
[32m  eval_recall = 0.1758[0m
[32m  ********************[0m
[32m  Best f1:0.1808[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5156[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32748:  14%|█▍        | 4/28 [00:23<02:44,  6.87s/it]epoch 1 loss 2.30439:  14%|█▍        | 4/28 [00:24<02:44,  6.87s/it]epoch 1 loss 2.30439:  18%|█▊        | 5/28 [00:24<01:44,  4.55s/it]epoch 1 loss 2.27126:  18%|█▊        | 5/28 [00:24<01:44,  4.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5646[0m
[32m  eval_f1 = 0.1912[0m
[32m  eval_mcc = 0.5407[0m
[32m  eval_precision = 0.2651[0m
[32m  eval_recall = 0.1865[0m
[32m  ********************[0m
[32m  Best f1:0.1912[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.27126:  21%|██▏       | 6/28 [00:31<02:01,  5.54s/it]epoch 1 loss 2.23385:  21%|██▏       | 6/28 [00:31<02:01,  5.54s/it]epoch 1 loss 2.23385:  25%|██▌       | 7/28 [00:31<01:21,  3.87s/it]epoch 1 loss 2.20837:  25%|██▌       | 7/28 [00:32<01:21,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5733[0m
[32m  eval_f1 = 0.2036[0m
[32m  eval_mcc = 0.5503[0m
[32m  eval_precision = 0.267[0m
[32m  eval_recall = 0.1953[0m
[32m  ********************[0m
[32m  Best f1:0.2036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20837:  29%|██▊       | 8/28 [00:42<02:02,  6.13s/it]epoch 1 loss 2.1768:  29%|██▊       | 8/28 [00:43<02:02,  6.13s/it] epoch 1 loss 2.1768:  32%|███▏      | 9/28 [00:43<01:22,  4.35s/it]epoch 1 loss 2.13756:  32%|███▏      | 9/28 [00:43<01:22,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.579[0m
[32m  eval_f1 = 0.2093[0m
[32m  eval_mcc = 0.5545[0m
[32m  eval_precision = 0.2774[0m
[32m  eval_recall = 0.2013[0m
[32m  ********************[0m
[32m  Best f1:0.2093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13756:  36%|███▌      | 10/28 [00:50<01:32,  5.12s/it]epoch 1 loss 2.12518:  36%|███▌      | 10/28 [00:50<01:32,  5.12s/it]epoch 1 loss 2.12518:  39%|███▉      | 11/28 [00:50<01:02,  3.68s/it]epoch 1 loss 2.11114:  39%|███▉      | 11/28 [00:51<01:02,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5844[0m
[32m  eval_f1 = 0.2161[0m
[32m  eval_mcc = 0.5589[0m
[32m  eval_precision = 0.283[0m
[32m  eval_recall = 0.2063[0m
[32m  ********************[0m
[32m  Best f1:0.2161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11114:  43%|████▎     | 12/28 [00:59<01:22,  5.16s/it]epoch 1 loss 2.08841:  43%|████▎     | 12/28 [00:59<01:22,  5.16s/it]epoch 1 loss 2.08841:  46%|████▋     | 13/28 [00:59<00:55,  3.73s/it]epoch 1 loss 2.07175:  46%|████▋     | 13/28 [01:00<00:55,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5885[0m
[32m  eval_f1 = 0.2276[0m
[32m  eval_mcc = 0.5628[0m
[32m  eval_precision = 0.299[0m
[32m  eval_recall = 0.2147[0m
[32m  ********************[0m
[32m  Best f1:0.2276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07175:  50%|█████     | 14/28 [01:08<01:12,  5.17s/it]epoch 1 loss 2.06338:  50%|█████     | 14/28 [01:08<01:12,  5.17s/it]epoch 1 loss 2.06338:  54%|█████▎    | 15/28 [01:08<00:48,  3.74s/it]epoch 1 loss 2.04684:  54%|█████▎    | 15/28 [01:08<00:48,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5937[0m
[32m  eval_f1 = 0.233[0m
[32m  eval_mcc = 0.5685[0m
[32m  eval_precision = 0.3065[0m
[32m  eval_recall = 0.2194[0m
[32m  ********************[0m
[32m  Best f1:0.233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5685[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04684:  57%|█████▋    | 16/28 [01:17<01:02,  5.22s/it]epoch 1 loss 2.02057:  57%|█████▋    | 16/28 [01:17<01:02,  5.22s/it]epoch 1 loss 2.02057:  61%|██████    | 17/28 [01:17<00:41,  3.78s/it]epoch 1 loss 2.00459:  61%|██████    | 17/28 [01:18<00:41,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5978[0m
[32m  eval_f1 = 0.2365[0m
[32m  eval_mcc = 0.5743[0m
[32m  eval_precision = 0.3186[0m
[32m  eval_recall = 0.2218[0m
[32m  ********************[0m
[32m  Best f1:0.2365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00459:  64%|██████▍   | 18/28 [01:26<00:52,  5.24s/it]epoch 1 loss 1.98481:  64%|██████▍   | 18/28 [01:26<00:52,  5.24s/it]epoch 1 loss 1.98481:  68%|██████▊   | 19/28 [01:26<00:34,  3.79s/it]epoch 1 loss 1.96045:  68%|██████▊   | 19/28 [01:27<00:34,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5993[0m
[32m  eval_f1 = 0.2404[0m
[32m  eval_mcc = 0.58[0m
[32m  eval_precision = 0.3254[0m
[32m  eval_recall = 0.224[0m
[32m  ********************[0m
[32m  Best f1:0.2404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.58[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.96045:  71%|███████▏  | 20/28 [01:37<00:46,  5.79s/it]epoch 1 loss 1.94449:  71%|███████▏  | 20/28 [01:37<00:46,  5.79s/it]epoch 1 loss 1.94449:  75%|███████▌  | 21/28 [01:37<00:29,  4.18s/it]epoch 1 loss 1.92853:  75%|███████▌  | 21/28 [01:37<00:29,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6046[0m
[32m  eval_f1 = 0.2559[0m
[32m  eval_mcc = 0.5863[0m
[32m  eval_precision = 0.3471[0m
[32m  eval_recall = 0.2378[0m
[32m  ********************[0m
[32m  Best f1:0.2559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5863[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92853:  79%|███████▊  | 22/28 [01:44<00:30,  5.02s/it]epoch 1 loss 1.91467:  79%|███████▊  | 22/28 [01:44<00:30,  5.02s/it]epoch 1 loss 1.91467:  82%|████████▏ | 23/28 [01:44<00:18,  3.64s/it]epoch 1 loss 1.89978:  82%|████████▏ | 23/28 [01:45<00:18,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6089[0m
[32m  eval_f1 = 0.2642[0m
[32m  eval_mcc = 0.5889[0m
[32m  eval_precision = 0.3656[0m
[32m  eval_recall = 0.2447[0m
[32m  ********************[0m
[32m  Best f1:0.2642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5889[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89978:  86%|████████▌ | 24/28 [01:53<00:20,  5.17s/it]epoch 1 loss 1.88496:  86%|████████▌ | 24/28 [01:54<00:20,  5.17s/it]epoch 1 loss 1.88496:  89%|████████▉ | 25/28 [01:54<00:11,  3.74s/it]epoch 1 loss 1.871:  89%|████████▉ | 25/28 [01:54<00:11,  3.74s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6134[0m
[32m  eval_f1 = 0.273[0m
[32m  eval_mcc = 0.5911[0m
[32m  eval_precision = 0.3771[0m
[32m  eval_recall = 0.2515[0m
[32m  ********************[0m
[32m  Best f1:0.273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5911[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.871:  93%|█████████▎| 26/28 [02:03<00:10,  5.35s/it]epoch 1 loss 1.86184:  93%|█████████▎| 26/28 [02:03<00:10,  5.35s/it]epoch 1 loss 1.86184:  96%|█████████▋| 27/28 [02:03<00:03,  3.87s/it]epoch 1 loss 1.84836:  96%|█████████▋| 27/28 [02:03<00:03,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6156[0m
[32m  eval_f1 = 0.289[0m
[32m  eval_mcc = 0.5923[0m
[32m  eval_precision = 0.3997[0m
[32m  eval_recall = 0.2672[0m
[32m  ********************[0m
[32m  Best f1:0.289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84836: 100%|██████████| 28/28 [02:13<00:00,  5.53s/it]epoch 1 loss 1.84836: 100%|██████████| 28/28 [02:13<00:00,  4.75s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.36848:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.36848:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 2 loss 1.45176:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6159[0m
[32m  eval_f1 = 0.2916[0m
[32m  eval_mcc = 0.5926[0m
[32m  eval_precision = 0.4076[0m
[32m  eval_recall = 0.2696[0m
[32m  ********************[0m
[32m  Best f1:0.2916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45176:   7%|▋         | 2/28 [00:06<01:36,  3.72s/it]epoch 2 loss 1.44509:   7%|▋         | 2/28 [00:06<01:36,  3.72s/it]epoch 2 loss 1.44509:  11%|█         | 3/28 [00:06<00:55,  2.22s/it]epoch 2 loss 1.51129:  11%|█         | 3/28 [00:07<00:55,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6175[0m
[32m  eval_f1 = 0.295[0m
[32m  eval_mcc = 0.5945[0m
[32m  eval_precision = 0.4113[0m
[32m  eval_recall = 0.2723[0m
[32m  ********************[0m
[32m  Best f1:0.295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5945[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51129:  14%|█▍        | 4/28 [00:13<01:31,  3.81s/it]epoch 2 loss 1.51026:  14%|█▍        | 4/28 [00:13<01:31,  3.81s/it]epoch 2 loss 1.51026:  18%|█▊        | 5/28 [00:13<00:59,  2.59s/it]epoch 2 loss 1.50537:  18%|█▊        | 5/28 [00:13<00:59,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6203[0m
[32m  eval_f1 = 0.2984[0m
[32m  eval_mcc = 0.5981[0m
[32m  eval_precision = 0.422[0m
[32m  eval_recall = 0.2751[0m
[32m  ********************[0m
[32m  Best f1:0.2984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5981[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50537:  21%|██▏       | 6/28 [00:24<02:02,  5.58s/it]epoch 2 loss 1.49782:  21%|██▏       | 6/28 [00:25<02:02,  5.58s/it]epoch 2 loss 1.49782:  25%|██▌       | 7/28 [00:25<01:21,  3.89s/it]epoch 2 loss 1.50563:  25%|██▌       | 7/28 [00:25<01:21,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6229[0m
[32m  eval_f1 = 0.3028[0m
[32m  eval_mcc = 0.6028[0m
[32m  eval_precision = 0.4308[0m
[32m  eval_recall = 0.2786[0m
[32m  ********************[0m
[32m  Best f1:0.3028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50563:  29%|██▊       | 8/28 [00:37<02:08,  6.44s/it]epoch 2 loss 1.49872:  29%|██▊       | 8/28 [00:37<02:08,  6.44s/it]epoch 2 loss 1.49872:  32%|███▏      | 9/28 [00:37<01:26,  4.56s/it]epoch 2 loss 1.47835:  32%|███▏      | 9/28 [00:38<01:26,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.624[0m
[32m  eval_f1 = 0.3077[0m
[32m  eval_mcc = 0.6057[0m
[32m  eval_precision = 0.4512[0m
[32m  eval_recall = 0.282[0m
[32m  ********************[0m
[32m  Best f1:0.3077[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47835:  36%|███▌      | 10/28 [00:49<02:01,  6.74s/it]epoch 2 loss 1.47594:  36%|███▌      | 10/28 [00:49<02:01,  6.74s/it]epoch 2 loss 1.47594:  39%|███▉      | 11/28 [00:49<01:21,  4.80s/it]epoch 2 loss 1.47006:  39%|███▉      | 11/28 [00:50<01:21,  4.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6263[0m
[32m  eval_f1 = 0.3099[0m
[32m  eval_mcc = 0.6074[0m
[32m  eval_precision = 0.4479[0m
[32m  eval_recall = 0.2848[0m
[32m  ********************[0m
[32m  Best f1:0.3099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47006:  43%|████▎     | 12/28 [01:01<01:48,  6.79s/it]epoch 2 loss 1.46991:  43%|████▎     | 12/28 [01:01<01:48,  6.79s/it]epoch 2 loss 1.46991:  46%|████▋     | 13/28 [01:01<01:12,  4.86s/it]epoch 2 loss 1.45604:  46%|████▋     | 13/28 [01:01<01:12,  4.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6276[0m
[32m  eval_f1 = 0.3133[0m
[32m  eval_mcc = 0.6071[0m
[32m  eval_precision = 0.4431[0m
[32m  eval_recall = 0.2889[0m
[32m  ********************[0m
[32m  Best f1:0.3133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.45604:  50%|█████     | 14/28 [01:06<01:08,  4.86s/it]epoch 2 loss 1.45781:  50%|█████     | 14/28 [01:06<01:08,  4.86s/it]epoch 2 loss 1.45781:  54%|█████▎    | 15/28 [01:06<00:45,  3.51s/it]epoch 2 loss 1.45775:  54%|█████▎    | 15/28 [01:07<00:45,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6305[0m
[32m  eval_f1 = 0.3175[0m
[32m  eval_mcc = 0.6087[0m
[32m  eval_precision = 0.4423[0m
[32m  eval_recall = 0.2928[0m
[32m  ********************[0m
[32m  Best f1:0.3175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45775:  57%|█████▋    | 16/28 [01:15<01:02,  5.20s/it]epoch 2 loss 1.45611:  57%|█████▋    | 16/28 [01:16<01:02,  5.20s/it]epoch 2 loss 1.45611:  61%|██████    | 17/28 [01:16<00:41,  3.76s/it]epoch 2 loss 1.44678:  61%|██████    | 17/28 [01:16<00:41,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6339[0m
[32m  eval_f1 = 0.3236[0m
[32m  eval_mcc = 0.6119[0m
[32m  eval_precision = 0.4494[0m
[32m  eval_recall = 0.2975[0m
[32m  ********************[0m
[32m  Best f1:0.3236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44678:  64%|██████▍   | 18/28 [01:27<01:00,  6.01s/it]epoch 2 loss 1.44439:  64%|██████▍   | 18/28 [01:27<01:00,  6.01s/it]epoch 2 loss 1.44439:  68%|██████▊   | 19/28 [01:27<00:39,  4.33s/it]epoch 2 loss 1.43942:  68%|██████▊   | 19/28 [01:28<00:39,  4.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.3273[0m
[32m  eval_mcc = 0.6157[0m
[32m  eval_precision = 0.4513[0m
[32m  eval_recall = 0.3016[0m
[32m  ********************[0m
[32m  Best f1:0.3273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43942:  71%|███████▏  | 20/28 [01:36<00:45,  5.66s/it]epoch 2 loss 1.43649:  71%|███████▏  | 20/28 [01:37<00:45,  5.66s/it]epoch 2 loss 1.43649:  75%|███████▌  | 21/28 [01:37<00:28,  4.09s/it]epoch 2 loss 1.43326:  75%|███████▌  | 21/28 [01:37<00:28,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.3306[0m
[32m  eval_mcc = 0.618[0m
[32m  eval_precision = 0.4464[0m
[32m  eval_recall = 0.3054[0m
[32m  ********************[0m
[32m  Best f1:0.3306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43326:  79%|███████▊  | 22/28 [01:46<00:34,  5.77s/it]epoch 2 loss 1.43776:  79%|███████▊  | 22/28 [01:47<00:34,  5.77s/it]epoch 2 loss 1.43776:  82%|████████▏ | 23/28 [01:47<00:20,  4.17s/it]epoch 2 loss 1.43744:  82%|████████▏ | 23/28 [01:47<00:20,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6423[0m
[32m  eval_f1 = 0.3344[0m
[32m  eval_mcc = 0.6213[0m
[32m  eval_precision = 0.4335[0m
[32m  eval_recall = 0.3089[0m
[32m  ********************[0m
[32m  Best f1:0.3344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43744:  86%|████████▌ | 24/28 [01:54<00:20,  5.15s/it]epoch 2 loss 1.43421:  86%|████████▌ | 24/28 [01:55<00:20,  5.15s/it]epoch 2 loss 1.43421:  89%|████████▉ | 25/28 [01:55<00:11,  3.73s/it]epoch 2 loss 1.43692:  89%|████████▉ | 25/28 [01:55<00:11,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6435[0m
[32m  eval_f1 = 0.3372[0m
[32m  eval_mcc = 0.6228[0m
[32m  eval_precision = 0.4508[0m
[32m  eval_recall = 0.3101[0m
[32m  ********************[0m
[32m  Best f1:0.3372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43692:  93%|█████████▎| 26/28 [02:03<00:10,  5.20s/it]epoch 2 loss 1.43611:  93%|█████████▎| 26/28 [02:04<00:10,  5.20s/it]epoch 2 loss 1.43611:  96%|█████████▋| 27/28 [02:04<00:03,  3.77s/it]epoch 2 loss 1.43795:  96%|█████████▋| 27/28 [02:04<00:03,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6443[0m
[32m  eval_f1 = 0.3376[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.4531[0m
[32m  eval_recall = 0.3095[0m
[32m  ********************[0m
[32m  Best f1:0.3376[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43795: 100%|██████████| 28/28 [02:11<00:00,  4.94s/it]epoch 2 loss 1.43795: 100%|██████████| 28/28 [02:11<00:00,  4.71s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.33286:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.33286:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 3 loss 1.41191:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6445[0m
[32m  eval_f1 = 0.3421[0m
[32m  eval_mcc = 0.6245[0m
[32m  eval_precision = 0.4699[0m
[32m  eval_recall = 0.311[0m
[32m  ********************[0m
[32m  Best f1:0.3421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41191:   7%|▋         | 2/28 [00:11<02:50,  6.54s/it]epoch 3 loss 1.3905:   7%|▋         | 2/28 [00:11<02:50,  6.54s/it] epoch 3 loss 1.3905:  11%|█         | 3/28 [00:11<01:33,  3.75s/it]epoch 3 loss 1.37877:  11%|█         | 3/28 [00:12<01:33,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6462[0m
[32m  eval_f1 = 0.344[0m
[32m  eval_mcc = 0.6265[0m
[32m  eval_precision = 0.4794[0m
[32m  eval_recall = 0.3121[0m
[32m  ********************[0m
[32m  Best f1:0.344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37877:  14%|█▍        | 4/28 [00:19<02:04,  5.19s/it]epoch 3 loss 1.36991:  14%|█▍        | 4/28 [00:19<02:04,  5.19s/it]epoch 3 loss 1.36991:  18%|█▊        | 5/28 [00:19<01:19,  3.47s/it]epoch 3 loss 1.36442:  18%|█▊        | 5/28 [00:19<01:19,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6477[0m
[32m  eval_f1 = 0.3484[0m
[32m  eval_mcc = 0.6279[0m
[32m  eval_precision = 0.4949[0m
[32m  eval_recall = 0.3148[0m
[32m  ********************[0m
[32m  Best f1:0.3484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36442:  21%|██▏       | 6/28 [00:30<02:15,  6.17s/it]epoch 3 loss 1.35139:  21%|██▏       | 6/28 [00:31<02:15,  6.17s/it]epoch 3 loss 1.35139:  25%|██▌       | 7/28 [00:31<01:30,  4.29s/it]epoch 3 loss 1.35304:  25%|██▌       | 7/28 [00:31<01:30,  4.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6479[0m
[32m  eval_f1 = 0.3482[0m
[32m  eval_mcc = 0.6276[0m
[32m  eval_precision = 0.4939[0m
[32m  eval_recall = 0.3154[0m

epoch 3 loss 1.35304:  29%|██▊       | 8/28 [00:35<01:22,  4.14s/it]epoch 3 loss 1.35:  29%|██▊       | 8/28 [00:35<01:22,  4.14s/it]   epoch 3 loss 1.35:  32%|███▏      | 9/28 [00:35<00:56,  2.97s/it]epoch 3 loss 1.3462:  32%|███▏      | 9/28 [00:35<00:56,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6493[0m
[32m  eval_f1 = 0.3503[0m
[32m  eval_mcc = 0.6289[0m
[32m  eval_precision = 0.5129[0m
[32m  eval_recall = 0.3172[0m
[32m  ********************[0m
[32m  Best f1:0.3503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3462:  36%|███▌      | 10/28 [00:45<01:30,  5.03s/it]epoch 3 loss 1.34324:  36%|███▌      | 10/28 [00:45<01:30,  5.03s/it]epoch 3 loss 1.34324:  39%|███▉      | 11/28 [00:45<01:01,  3.62s/it]epoch 3 loss 1.3408:  39%|███▉      | 11/28 [00:46<01:01,  3.62s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6504[0m
[32m  eval_f1 = 0.3476[0m
[32m  eval_mcc = 0.63[0m
[32m  eval_precision = 0.5009[0m
[32m  eval_recall = 0.3164[0m
[32m  ********************[0m
[32m  Best MCC:0.63[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3408:  43%|████▎     | 12/28 [00:52<01:12,  4.51s/it]epoch 3 loss 1.34629:  43%|████▎     | 12/28 [00:52<01:12,  4.51s/it]epoch 3 loss 1.34629:  46%|████▋     | 13/28 [00:52<00:49,  3.27s/it]epoch 3 loss 1.34539:  46%|████▋     | 13/28 [00:53<00:49,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6507[0m
[32m  eval_f1 = 0.3468[0m
[32m  eval_mcc = 0.6304[0m
[32m  eval_precision = 0.4858[0m
[32m  eval_recall = 0.3165[0m
[32m  ********************[0m
[32m  Best MCC:0.6304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34539:  50%|█████     | 14/28 [00:59<01:01,  4.41s/it]epoch 3 loss 1.35366:  50%|█████     | 14/28 [01:00<01:01,  4.41s/it]epoch 3 loss 1.35366:  54%|█████▎    | 15/28 [01:00<00:41,  3.21s/it]epoch 3 loss 1.34833:  54%|█████▎    | 15/28 [01:00<00:41,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3517[0m
[32m  eval_mcc = 0.6311[0m
[32m  eval_precision = 0.4995[0m
[32m  eval_recall = 0.32[0m
[32m  ********************[0m
[32m  Best f1:0.3517[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6311[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34833:  57%|█████▋    | 16/28 [01:06<00:48,  4.08s/it]epoch 3 loss 1.34855:  57%|█████▋    | 16/28 [01:06<00:48,  4.08s/it]epoch 3 loss 1.34855:  61%|██████    | 17/28 [01:06<00:32,  2.98s/it]epoch 3 loss 1.34654:  61%|██████    | 17/28 [01:06<00:32,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3526[0m
[32m  eval_mcc = 0.6327[0m
[32m  eval_precision = 0.4932[0m
[32m  eval_recall = 0.3216[0m
[32m  ********************[0m
[32m  Best f1:0.3526[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34654:  64%|██████▍   | 18/28 [01:12<00:37,  3.77s/it]epoch 3 loss 1.34701:  64%|██████▍   | 18/28 [01:12<00:37,  3.77s/it]epoch 3 loss 1.34701:  68%|██████▊   | 19/28 [01:12<00:24,  2.77s/it]epoch 3 loss 1.35223:  68%|██████▊   | 19/28 [01:13<00:24,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6547[0m
[32m  eval_f1 = 0.3554[0m
[32m  eval_mcc = 0.6346[0m
[32m  eval_precision = 0.4999[0m
[32m  eval_recall = 0.3239[0m
[32m  ********************[0m
[32m  Best f1:0.3554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35223:  71%|███████▏  | 20/28 [01:18<00:30,  3.78s/it]epoch 3 loss 1.34938:  71%|███████▏  | 20/28 [01:19<00:30,  3.78s/it]epoch 3 loss 1.34938:  75%|███████▌  | 21/28 [01:19<00:19,  2.78s/it]epoch 3 loss 1.34923:  75%|███████▌  | 21/28 [01:19<00:19,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6548[0m
[32m  eval_f1 = 0.3587[0m
[32m  eval_mcc = 0.6349[0m
[32m  eval_precision = 0.5115[0m
[32m  eval_recall = 0.326[0m
[32m  ********************[0m
[32m  Best f1:0.3587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34923:  79%|███████▊  | 22/28 [01:24<00:21,  3.61s/it]epoch 3 loss 1.34676:  79%|███████▊  | 22/28 [01:25<00:21,  3.61s/it]epoch 3 loss 1.34676:  82%|████████▏ | 23/28 [01:25<00:13,  2.66s/it]epoch 3 loss 1.34607:  82%|████████▏ | 23/28 [01:25<00:13,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.656[0m
[32m  eval_f1 = 0.3598[0m
[32m  eval_mcc = 0.6365[0m
[32m  eval_precision = 0.5113[0m
[32m  eval_recall = 0.3269[0m
[32m  ********************[0m
[32m  Best f1:0.3598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34607:  86%|████████▌ | 24/28 [01:31<00:14,  3.70s/it]epoch 3 loss 1.34611:  86%|████████▌ | 24/28 [01:31<00:14,  3.70s/it]epoch 3 loss 1.34611:  89%|████████▉ | 25/28 [01:31<00:08,  2.72s/it]epoch 3 loss 1.33977:  89%|████████▉ | 25/28 [01:32<00:08,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6559[0m
[32m  eval_f1 = 0.359[0m
[32m  eval_mcc = 0.6366[0m
[32m  eval_precision = 0.5118[0m
[32m  eval_recall = 0.3262[0m
[32m  ********************[0m
[32m  Best MCC:0.6366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33977:  93%|█████████▎| 26/28 [01:36<00:06,  3.39s/it]epoch 3 loss 1.34049:  93%|█████████▎| 26/28 [01:37<00:06,  3.39s/it]epoch 3 loss 1.34049:  96%|█████████▋| 27/28 [01:37<00:02,  2.49s/it]epoch 3 loss 1.34289:  96%|█████████▋| 27/28 [01:37<00:02,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6561[0m
[32m  eval_f1 = 0.3597[0m
[32m  eval_mcc = 0.6368[0m
[32m  eval_precision = 0.5122[0m
[32m  eval_recall = 0.3266[0m
[32m  ********************[0m
[32m  Best MCC:0.6368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34289: 100%|██████████| 28/28 [01:41<00:00,  3.09s/it]epoch 3 loss 1.34289: 100%|██████████| 28/28 [01:41<00:00,  3.63s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.25663:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.25663:   4%|▎         | 1/28 [00:00<00:11,  2.45it/s]epoch 4 loss 1.31588:   4%|▎         | 1/28 [00:00<00:11,  2.45it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6564[0m
[32m  eval_f1 = 0.36[0m
[32m  eval_mcc = 0.6371[0m
[32m  eval_precision = 0.5125[0m
[32m  eval_recall = 0.3271[0m
[32m  ********************[0m
[32m  Best f1:0.36[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31588:   7%|▋         | 2/28 [00:06<01:38,  3.78s/it]epoch 4 loss 1.28947:   7%|▋         | 2/28 [00:06<01:38,  3.78s/it]epoch 4 loss 1.28947:  11%|█         | 3/28 [00:06<00:56,  2.25s/it]epoch 4 loss 1.31759:  11%|█         | 3/28 [00:07<00:56,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6564[0m
[32m  eval_f1 = 0.3606[0m
[32m  eval_mcc = 0.637[0m
[32m  eval_precision = 0.5233[0m
[32m  eval_recall = 0.3274[0m
[32m  ********************[0m
[32m  Best f1:0.3606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.31759:  14%|█▍        | 4/28 [00:11<01:18,  3.28s/it]epoch 4 loss 1.30966:  14%|█▍        | 4/28 [00:12<01:18,  3.28s/it]epoch 4 loss 1.30966:  18%|█▊        | 5/28 [00:12<00:51,  2.25s/it]epoch 4 loss 1.3064:  18%|█▊        | 5/28 [00:12<00:51,  2.25s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6567[0m
[32m  eval_f1 = 0.3615[0m
[32m  eval_mcc = 0.6372[0m
[32m  eval_precision = 0.5244[0m
[32m  eval_recall = 0.3279[0m
[32m  ********************[0m
[32m  Best f1:0.3615[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3064:  21%|██▏       | 6/28 [00:18<01:18,  3.57s/it]epoch 4 loss 1.31162:  21%|██▏       | 6/28 [00:18<01:18,  3.57s/it]epoch 4 loss 1.31162:  25%|██▌       | 7/28 [00:18<00:53,  2.54s/it]epoch 4 loss 1.30724:  25%|██▌       | 7/28 [00:19<00:53,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6571[0m
[32m  eval_f1 = 0.3623[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.5256[0m
[32m  eval_recall = 0.3286[0m
[32m  ********************[0m
[32m  Best f1:0.3623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.30724:  29%|██▊       | 8/28 [00:24<01:12,  3.65s/it]epoch 4 loss 1.30143:  29%|██▊       | 8/28 [00:25<01:12,  3.65s/it]epoch 4 loss 1.30143:  32%|███▏      | 9/28 [00:25<00:50,  2.64s/it]epoch 4 loss 1.29845:  32%|███▏      | 9/28 [00:25<00:50,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3624[0m
[32m  eval_mcc = 0.6374[0m
[32m  eval_precision = 0.5284[0m
[32m  eval_recall = 0.3284[0m
[32m  ********************[0m
[32m  Best f1:0.3624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.29845:  36%|███▌      | 10/28 [00:30<01:00,  3.35s/it]epoch 4 loss 1.29896:  36%|███▌      | 10/28 [00:30<01:00,  3.35s/it]epoch 4 loss 1.29896:  39%|███▉      | 11/28 [00:30<00:41,  2.45s/it]epoch 4 loss 1.30684:  39%|███▉      | 11/28 [00:31<00:41,  2.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6578[0m
[32m  eval_f1 = 0.3648[0m
[32m  eval_mcc = 0.6383[0m
[32m  eval_precision = 0.5302[0m
[32m  eval_recall = 0.3296[0m
[32m  ********************[0m
[32m  Best f1:0.3648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.30684:  43%|████▎     | 12/28 [00:36<00:54,  3.41s/it]epoch 4 loss 1.30285:  43%|████▎     | 12/28 [00:36<00:54,  3.41s/it]epoch 4 loss 1.30285:  46%|████▋     | 13/28 [00:36<00:37,  2.50s/it]epoch 4 loss 1.30697:  46%|████▋     | 13/28 [00:37<00:37,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6579[0m
[32m  eval_f1 = 0.3666[0m
[32m  eval_mcc = 0.6383[0m
[32m  eval_precision = 0.531[0m
[32m  eval_recall = 0.3311[0m
[32m  ********************[0m
[32m  Best f1:0.3666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.30697:  50%|█████     | 14/28 [00:41<00:45,  3.24s/it]epoch 4 loss 1.31127:  50%|█████     | 14/28 [00:41<00:45,  3.24s/it]epoch 4 loss 1.31127:  54%|█████▎    | 15/28 [00:41<00:30,  2.38s/it]epoch 4 loss 1.30667:  54%|█████▎    | 15/28 [00:42<00:30,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6579[0m
[32m  eval_f1 = 0.3665[0m
[32m  eval_mcc = 0.6382[0m
[32m  eval_precision = 0.5267[0m
[32m  eval_recall = 0.3311[0m

epoch 4 loss 1.30667:  57%|█████▋    | 16/28 [00:45<00:33,  2.81s/it]epoch 4 loss 1.30289:  57%|█████▋    | 16/28 [00:46<00:33,  2.81s/it]epoch 4 loss 1.30289:  61%|██████    | 17/28 [00:46<00:22,  2.08s/it]epoch 4 loss 1.30156:  61%|██████    | 17/28 [00:46<00:22,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3674[0m
[32m  eval_mcc = 0.6382[0m
[32m  eval_precision = 0.5269[0m
[32m  eval_recall = 0.3316[0m
[32m  ********************[0m
[32m  Best f1:0.3674[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.30156:  64%|██████▍   | 18/28 [00:50<00:28,  2.86s/it]epoch 4 loss 1.29795:  64%|██████▍   | 18/28 [00:51<00:28,  2.86s/it]epoch 4 loss 1.29795:  68%|██████▊   | 19/28 [00:51<00:19,  2.12s/it]epoch 4 loss 1.29638:  68%|██████▊   | 19/28 [00:51<00:19,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6579[0m
[32m  eval_f1 = 0.3671[0m
[32m  eval_mcc = 0.638[0m
[32m  eval_precision = 0.5256[0m
[32m  eval_recall = 0.3314[0m

epoch 4 loss 1.29638:  71%|███████▏  | 20/28 [00:55<00:21,  2.63s/it]epoch 4 loss 1.29856:  71%|███████▏  | 20/28 [00:55<00:21,  2.63s/it]epoch 4 loss 1.29856:  75%|███████▌  | 21/28 [00:55<00:13,  1.96s/it]epoch 4 loss 1.29362:  75%|███████▌  | 21/28 [00:55<00:13,  1.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3671[0m
[32m  eval_mcc = 0.6378[0m
[32m  eval_precision = 0.5259[0m
[32m  eval_recall = 0.3313[0m

epoch 4 loss 1.29362:  79%|███████▊  | 22/28 [00:59<00:15,  2.51s/it]epoch 4 loss 1.29633:  79%|███████▊  | 22/28 [00:59<00:15,  2.51s/it]epoch 4 loss 1.29633:  82%|████████▏ | 23/28 [00:59<00:09,  1.88s/it]epoch 4 loss 1.30059:  82%|████████▏ | 23/28 [01:00<00:09,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3663[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.5249[0m
[32m  eval_recall = 0.3306[0m

epoch 4 loss 1.30059:  86%|████████▌ | 24/28 [01:03<00:09,  2.46s/it]epoch 4 loss 1.29743:  86%|████████▌ | 24/28 [01:03<00:09,  2.46s/it]epoch 4 loss 1.29743:  89%|████████▉ | 25/28 [01:03<00:05,  1.84s/it]epoch 4 loss 1.30221:  89%|████████▉ | 25/28 [01:04<00:05,  1.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6578[0m
[32m  eval_f1 = 0.3664[0m
[32m  eval_mcc = 0.638[0m
[32m  eval_precision = 0.5265[0m
[32m  eval_recall = 0.3308[0m

epoch 4 loss 1.30221:  93%|█████████▎| 26/28 [01:07<00:04,  2.43s/it]epoch 4 loss 1.30048:  93%|█████████▎| 26/28 [01:08<00:04,  2.43s/it]epoch 4 loss 1.30048:  96%|█████████▋| 27/28 [01:08<00:01,  1.82s/it]epoch 4 loss 1.30526:  96%|█████████▋| 27/28 [01:08<00:01,  1.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3664[0m
[32m  eval_mcc = 0.6381[0m
[32m  eval_precision = 0.5269[0m
[32m  eval_recall = 0.3308[0m

epoch 4 loss 1.30526: 100%|██████████| 28/28 [01:11<00:00,  2.36s/it]epoch 4 loss 1.30526: 100%|██████████| 28/28 [01:11<00:00,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.72it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3674[0m
[32m  eval_mcc = 0.6382[0m
[32m  eval_precision = 0.5269[0m
[32m  eval_recall = 0.3316[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.72it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6417[0m
[32m  eval_f1 = 0.3251[0m
[32m  eval_mcc = 0.6223[0m
[32m  eval_precision = 0.4635[0m
[32m  eval_recall = 0.2956[0m

