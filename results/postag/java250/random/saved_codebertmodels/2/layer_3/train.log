[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=3, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/2/layer_3', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.19851:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.19851:   4%|▎         | 1/28 [00:00<00:20,  1.33it/s]epoch 0 loss 5.20922:   4%|▎         | 1/28 [00:01<00:20,  1.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0138[0m
[32m  eval_f1 = 0.0026[0m
[32m  eval_mcc = 0.0066[0m
[32m  eval_precision = 0.0146[0m
[32m  eval_recall = 0.004[0m
[32m  ********************[0m
[32m  Best f1:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20922:   7%|▋         | 2/28 [00:05<01:24,  3.24s/it]epoch 0 loss 5.2047:   7%|▋         | 2/28 [00:06<01:24,  3.24s/it] epoch 0 loss 5.2047:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.1959:  11%|█         | 3/28 [00:06<00:48,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0192[0m
[32m  eval_f1 = 0.003[0m
[32m  eval_mcc = 0.0083[0m
[32m  eval_precision = 0.0063[0m
[32m  eval_recall = 0.0045[0m
[32m  ********************[0m
[32m  Best f1:0.003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.1959:  14%|█▍        | 4/28 [00:15<01:57,  4.91s/it]epoch 0 loss 5.18009:  14%|█▍        | 4/28 [00:16<01:57,  4.91s/it]epoch 0 loss 5.18009:  18%|█▊        | 5/28 [00:16<01:15,  3.29s/it]epoch 0 loss 5.15125:  18%|█▊        | 5/28 [00:16<01:15,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0352[0m
[32m  eval_f1 = 0.0049[0m
[32m  eval_mcc = 0.0151[0m
[32m  eval_precision = 0.0065[0m
[32m  eval_recall = 0.0072[0m
[32m  ********************[0m
[32m  Best f1:0.0049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15125:  21%|██▏       | 6/28 [00:24<01:52,  5.12s/it]epoch 0 loss 5.11732:  21%|██▏       | 6/28 [00:25<01:52,  5.12s/it]epoch 0 loss 5.11732:  25%|██▌       | 7/28 [00:25<01:15,  3.58s/it]epoch 0 loss 5.08058:  25%|██▌       | 7/28 [00:25<01:15,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0585[0m
[32m  eval_f1 = 0.0071[0m
[32m  eval_mcc = 0.0222[0m
[32m  eval_precision = 0.0078[0m
[32m  eval_recall = 0.0115[0m
[32m  ********************[0m
[32m  Best f1:0.0071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0222[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.08058:  29%|██▊       | 8/28 [00:34<01:48,  5.44s/it]epoch 0 loss 5.03544:  29%|██▊       | 8/28 [00:34<01:48,  5.44s/it]epoch 0 loss 5.03544:  32%|███▏      | 9/28 [00:34<01:13,  3.87s/it]epoch 0 loss 4.98865:  32%|███▏      | 9/28 [00:35<01:13,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0852[0m
[32m  eval_f1 = 0.0118[0m
[32m  eval_mcc = 0.0372[0m
[32m  eval_precision = 0.0152[0m
[32m  eval_recall = 0.0181[0m
[32m  ********************[0m
[32m  Best f1:0.0118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.98865:  36%|███▌      | 10/28 [00:43<01:33,  5.17s/it]epoch 0 loss 4.93856:  36%|███▌      | 10/28 [00:43<01:33,  5.17s/it]epoch 0 loss 4.93856:  39%|███▉      | 11/28 [00:43<01:03,  3.72s/it]epoch 0 loss 4.88029:  39%|███▉      | 11/28 [00:43<01:03,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1108[0m
[32m  eval_f1 = 0.0209[0m
[32m  eval_mcc = 0.0609[0m
[32m  eval_precision = 0.0306[0m
[32m  eval_recall = 0.0269[0m
[32m  ********************[0m
[32m  Best f1:0.0209[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.88029:  43%|████▎     | 12/28 [00:50<01:13,  4.59s/it]epoch 0 loss 4.81704:  43%|████▎     | 12/28 [00:50<01:13,  4.59s/it]epoch 0 loss 4.81704:  46%|████▋     | 13/28 [00:50<00:49,  3.33s/it]epoch 0 loss 4.75815:  46%|████▋     | 13/28 [00:50<00:49,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1334[0m
[32m  eval_f1 = 0.0278[0m
[32m  eval_mcc = 0.0859[0m
[32m  eval_precision = 0.0532[0m
[32m  eval_recall = 0.0325[0m
[32m  ********************[0m
[32m  Best f1:0.0278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0859[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.75815:  50%|█████     | 14/28 [00:56<01:00,  4.30s/it]epoch 0 loss 4.69375:  50%|█████     | 14/28 [00:57<01:00,  4.30s/it]epoch 0 loss 4.69375:  54%|█████▎    | 15/28 [00:57<00:40,  3.13s/it]epoch 0 loss 4.62835:  54%|█████▎    | 15/28 [00:57<00:40,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1647[0m
[32m  eval_f1 = 0.0363[0m
[32m  eval_mcc = 0.1232[0m
[32m  eval_precision = 0.0779[0m
[32m  eval_recall = 0.0385[0m
[32m  ********************[0m
[32m  Best f1:0.0363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.62835:  57%|█████▋    | 16/28 [01:06<00:59,  4.93s/it]epoch 0 loss 4.56362:  57%|█████▋    | 16/28 [01:06<00:59,  4.93s/it]epoch 0 loss 4.56362:  61%|██████    | 17/28 [01:06<00:39,  3.57s/it]epoch 0 loss 4.50347:  61%|██████    | 17/28 [01:07<00:39,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2084[0m
[32m  eval_f1 = 0.0478[0m
[32m  eval_mcc = 0.1724[0m
[32m  eval_precision = 0.1037[0m
[32m  eval_recall = 0.0469[0m
[32m  ********************[0m
[32m  Best f1:0.0478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.50347:  64%|██████▍   | 18/28 [01:15<00:49,  4.95s/it]epoch 0 loss 4.43546:  64%|██████▍   | 18/28 [01:15<00:49,  4.95s/it]epoch 0 loss 4.43546:  68%|██████▊   | 19/28 [01:15<00:32,  3.59s/it]epoch 0 loss 4.36997:  68%|██████▊   | 19/28 [01:15<00:32,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2903[0m
[32m  eval_f1 = 0.0768[0m
[32m  eval_mcc = 0.2553[0m
[32m  eval_precision = 0.1363[0m
[32m  eval_recall = 0.0714[0m
[32m  ********************[0m
[32m  Best f1:0.0768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.36997:  71%|███████▏  | 20/28 [01:24<00:42,  5.36s/it]epoch 0 loss 4.30076:  71%|███████▏  | 20/28 [01:25<00:42,  5.36s/it]epoch 0 loss 4.30076:  75%|███████▌  | 21/28 [01:25<00:27,  3.88s/it]epoch 0 loss 4.23595:  75%|███████▌  | 21/28 [01:25<00:27,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3788[0m
[32m  eval_f1 = 0.1165[0m
[32m  eval_mcc = 0.3394[0m
[32m  eval_precision = 0.1742[0m
[32m  eval_recall = 0.1036[0m
[32m  ********************[0m
[32m  Best f1:0.1165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.23595:  79%|███████▊  | 22/28 [01:33<00:30,  5.06s/it]epoch 0 loss 4.17482:  79%|███████▊  | 22/28 [01:33<00:30,  5.06s/it]epoch 0 loss 4.17482:  82%|████████▏ | 23/28 [01:33<00:18,  3.67s/it]epoch 0 loss 4.1151:  82%|████████▏ | 23/28 [01:34<00:18,  3.67s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4244[0m
[32m  eval_f1 = 0.1327[0m
[32m  eval_mcc = 0.3861[0m
[32m  eval_precision = 0.2035[0m
[32m  eval_recall = 0.1191[0m
[32m  ********************[0m
[32m  Best f1:0.1327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3861[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.1151:  86%|████████▌ | 24/28 [01:43<00:21,  5.41s/it]epoch 0 loss 4.05345:  86%|████████▌ | 24/28 [01:43<00:21,  5.41s/it]epoch 0 loss 4.05345:  89%|████████▉ | 25/28 [01:43<00:11,  3.91s/it]epoch 0 loss 3.99909:  89%|████████▉ | 25/28 [01:43<00:11,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4362[0m
[32m  eval_f1 = 0.1393[0m
[32m  eval_mcc = 0.4046[0m
[32m  eval_precision = 0.2134[0m
[32m  eval_recall = 0.1242[0m
[32m  ********************[0m
[32m  Best f1:0.1393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.99909:  93%|█████████▎| 26/28 [01:52<00:10,  5.34s/it]epoch 0 loss 3.94224:  93%|█████████▎| 26/28 [01:52<00:10,  5.34s/it]epoch 0 loss 3.94224:  96%|█████████▋| 27/28 [01:52<00:03,  3.87s/it]epoch 0 loss 3.87814:  96%|█████████▋| 27/28 [01:52<00:03,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4582[0m
[32m  eval_f1 = 0.1545[0m
[32m  eval_mcc = 0.432[0m
[32m  eval_precision = 0.2203[0m
[32m  eval_recall = 0.1411[0m
[32m  ********************[0m
[32m  Best f1:0.1545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.87814: 100%|██████████| 28/28 [02:02<00:00,  5.56s/it]epoch 0 loss 3.87814: 100%|██████████| 28/28 [02:02<00:00,  4.36s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.24375:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.24375:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 1 loss 2.15401:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4912[0m
[32m  eval_f1 = 0.1683[0m
[32m  eval_mcc = 0.4646[0m
[32m  eval_precision = 0.2335[0m
[32m  eval_recall = 0.1591[0m
[32m  ********************[0m
[32m  Best f1:0.1683[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15401:   7%|▋         | 2/28 [00:07<01:58,  4.56s/it]epoch 1 loss 2.11738:   7%|▋         | 2/28 [00:08<01:58,  4.56s/it]epoch 1 loss 2.11738:  11%|█         | 3/28 [00:08<01:06,  2.67s/it]epoch 1 loss 2.12729:  11%|█         | 3/28 [00:08<01:06,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5327[0m
[32m  eval_f1 = 0.1884[0m
[32m  eval_mcc = 0.5052[0m
[32m  eval_precision = 0.2608[0m
[32m  eval_recall = 0.1811[0m
[32m  ********************[0m
[32m  Best f1:0.1884[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12729:  14%|█▍        | 4/28 [00:15<01:50,  4.61s/it]epoch 1 loss 2.10375:  14%|█▍        | 4/28 [00:16<01:50,  4.61s/it]epoch 1 loss 2.10375:  18%|█▊        | 5/28 [00:16<01:11,  3.10s/it]epoch 1 loss 2.07018:  18%|█▊        | 5/28 [00:16<01:11,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5655[0m
[32m  eval_f1 = 0.2069[0m
[32m  eval_mcc = 0.5395[0m
[32m  eval_precision = 0.2744[0m
[32m  eval_recall = 0.2013[0m
[32m  ********************[0m
[32m  Best f1:0.2069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07018:  21%|██▏       | 6/28 [00:23<01:39,  4.53s/it]epoch 1 loss 2.0324:  21%|██▏       | 6/28 [00:24<01:39,  4.53s/it] epoch 1 loss 2.0324:  25%|██▌       | 7/28 [00:24<01:06,  3.19s/it]epoch 1 loss 2.00828:  25%|██▌       | 7/28 [00:24<01:06,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5857[0m
[32m  eval_f1 = 0.2172[0m
[32m  eval_mcc = 0.5629[0m
[32m  eval_precision = 0.2858[0m
[32m  eval_recall = 0.2101[0m
[32m  ********************[0m
[32m  Best f1:0.2172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5629[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00828:  29%|██▊       | 8/28 [00:34<01:46,  5.35s/it]epoch 1 loss 1.97783:  29%|██▊       | 8/28 [00:34<01:46,  5.35s/it]epoch 1 loss 1.97783:  32%|███▏      | 9/28 [00:34<01:12,  3.81s/it]epoch 1 loss 1.94142:  32%|███▏      | 9/28 [00:34<01:12,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5936[0m
[32m  eval_f1 = 0.2203[0m
[32m  eval_mcc = 0.5719[0m
[32m  eval_precision = 0.298[0m
[32m  eval_recall = 0.2129[0m
[32m  ********************[0m
[32m  Best f1:0.2203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5719[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94142:  36%|███▌      | 10/28 [00:44<01:45,  5.86s/it]epoch 1 loss 1.93111:  36%|███▌      | 10/28 [00:45<01:45,  5.86s/it]epoch 1 loss 1.93111:  39%|███▉      | 11/28 [00:45<01:11,  4.19s/it]epoch 1 loss 1.91953:  39%|███▉      | 11/28 [00:45<01:11,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6018[0m
[32m  eval_f1 = 0.2345[0m
[32m  eval_mcc = 0.5798[0m
[32m  eval_precision = 0.3296[0m
[32m  eval_recall = 0.2229[0m
[32m  ********************[0m
[32m  Best f1:0.2345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5798[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91953:  43%|████▎     | 12/28 [00:55<01:36,  6.04s/it]epoch 1 loss 1.899:  43%|████▎     | 12/28 [00:55<01:36,  6.04s/it]  epoch 1 loss 1.899:  46%|████▋     | 13/28 [00:55<01:05,  4.34s/it]epoch 1 loss 1.88433:  46%|████▋     | 13/28 [00:56<01:05,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6061[0m
[32m  eval_f1 = 0.2479[0m
[32m  eval_mcc = 0.583[0m
[32m  eval_precision = 0.3461[0m
[32m  eval_recall = 0.2323[0m
[32m  ********************[0m
[32m  Best f1:0.2479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88433:  50%|█████     | 14/28 [01:06<01:28,  6.29s/it]epoch 1 loss 1.87713:  50%|█████     | 14/28 [01:07<01:28,  6.29s/it]epoch 1 loss 1.87713:  54%|█████▎    | 15/28 [01:07<00:58,  4.52s/it]epoch 1 loss 1.86231:  54%|█████▎    | 15/28 [01:07<00:58,  4.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6117[0m
[32m  eval_f1 = 0.2605[0m
[32m  eval_mcc = 0.5885[0m
[32m  eval_precision = 0.3727[0m
[32m  eval_recall = 0.2423[0m
[32m  ********************[0m
[32m  Best f1:0.2605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5885[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86231:  57%|█████▋    | 16/28 [01:17<01:14,  6.23s/it]epoch 1 loss 1.83797:  57%|█████▋    | 16/28 [01:17<01:14,  6.23s/it]epoch 1 loss 1.83797:  61%|██████    | 17/28 [01:17<00:49,  4.49s/it]epoch 1 loss 1.82294:  61%|██████    | 17/28 [01:18<00:49,  4.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6179[0m
[32m  eval_f1 = 0.2743[0m
[32m  eval_mcc = 0.5953[0m
[32m  eval_precision = 0.3776[0m
[32m  eval_recall = 0.2529[0m
[32m  ********************[0m
[32m  Best f1:0.2743[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.82294:  64%|██████▍   | 18/28 [01:27<01:01,  6.12s/it]epoch 1 loss 1.80569:  64%|██████▍   | 18/28 [01:28<01:01,  6.12s/it]epoch 1 loss 1.80569:  68%|██████▊   | 19/28 [01:28<00:39,  4.41s/it]epoch 1 loss 1.78277:  68%|██████▊   | 19/28 [01:28<00:39,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6198[0m
[32m  eval_f1 = 0.2909[0m
[32m  eval_mcc = 0.599[0m
[32m  eval_precision = 0.4066[0m
[32m  eval_recall = 0.2673[0m
[32m  ********************[0m
[32m  Best f1:0.2909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.78277:  71%|███████▏  | 20/28 [01:37<00:45,  5.74s/it]epoch 1 loss 1.76841:  71%|███████▏  | 20/28 [01:37<00:45,  5.74s/it]epoch 1 loss 1.76841:  75%|███████▌  | 21/28 [01:37<00:29,  4.14s/it]epoch 1 loss 1.75369:  75%|███████▌  | 21/28 [01:37<00:29,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.622[0m
[32m  eval_f1 = 0.3043[0m
[32m  eval_mcc = 0.6023[0m
[32m  eval_precision = 0.4235[0m
[32m  eval_recall = 0.2788[0m
[32m  ********************[0m
[32m  Best f1:0.3043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75369:  79%|███████▊  | 22/28 [01:46<00:34,  5.76s/it]epoch 1 loss 1.74171:  79%|███████▊  | 22/28 [01:47<00:34,  5.76s/it]epoch 1 loss 1.74171:  82%|████████▏ | 23/28 [01:47<00:20,  4.15s/it]epoch 1 loss 1.72803:  82%|████████▏ | 23/28 [01:47<00:20,  4.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6251[0m
[32m  eval_f1 = 0.3093[0m
[32m  eval_mcc = 0.6056[0m
[32m  eval_precision = 0.4322[0m
[32m  eval_recall = 0.2823[0m
[32m  ********************[0m
[32m  Best f1:0.3093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72803:  86%|████████▌ | 24/28 [01:55<00:21,  5.36s/it]epoch 1 loss 1.71515:  86%|████████▌ | 24/28 [01:55<00:21,  5.36s/it]epoch 1 loss 1.71515:  89%|████████▉ | 25/28 [01:55<00:11,  3.88s/it]epoch 1 loss 1.7022:  89%|████████▉ | 25/28 [01:56<00:11,  3.88s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.63[0m
[32m  eval_f1 = 0.3164[0m
[32m  eval_mcc = 0.61[0m
[32m  eval_precision = 0.4209[0m
[32m  eval_recall = 0.2892[0m
[32m  ********************[0m
[32m  Best f1:0.3164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.61[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7022:  93%|█████████▎| 26/28 [02:05<00:11,  5.54s/it]epoch 1 loss 1.69407:  93%|█████████▎| 26/28 [02:05<00:11,  5.54s/it]epoch 1 loss 1.69407:  96%|█████████▋| 27/28 [02:05<00:04,  4.00s/it]epoch 1 loss 1.68195:  96%|█████████▋| 27/28 [02:06<00:04,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6339[0m
[32m  eval_f1 = 0.3238[0m
[32m  eval_mcc = 0.613[0m
[32m  eval_precision = 0.4394[0m
[32m  eval_recall = 0.2974[0m
[32m  ********************[0m
[32m  Best f1:0.3238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.68195: 100%|██████████| 28/28 [02:14<00:00,  5.28s/it]epoch 1 loss 1.68195: 100%|██████████| 28/28 [02:14<00:00,  4.79s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.21624:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.21624:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 2 loss 1.3046:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.3287[0m
[32m  eval_mcc = 0.6159[0m
[32m  eval_precision = 0.4469[0m
[32m  eval_recall = 0.3027[0m
[32m  ********************[0m
[32m  Best f1:0.3287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3046:   7%|▋         | 2/28 [00:10<02:31,  5.82s/it]epoch 2 loss 1.30215:   7%|▋         | 2/28 [00:10<02:31,  5.82s/it]epoch 2 loss 1.30215:  11%|█         | 3/28 [00:10<01:23,  3.35s/it]epoch 2 loss 1.36619:  11%|█         | 3/28 [00:10<01:23,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6399[0m
[32m  eval_f1 = 0.3351[0m
[32m  eval_mcc = 0.6188[0m
[32m  eval_precision = 0.443[0m
[32m  eval_recall = 0.3083[0m
[32m  ********************[0m
[32m  Best f1:0.3351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6188[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36619:  14%|█▍        | 4/28 [00:18<02:04,  5.18s/it]epoch 2 loss 1.36838:  14%|█▍        | 4/28 [00:18<02:04,  5.18s/it]epoch 2 loss 1.36838:  18%|█▊        | 5/28 [00:18<01:19,  3.47s/it]epoch 2 loss 1.36719:  18%|█▊        | 5/28 [00:19<01:19,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6423[0m
[32m  eval_f1 = 0.3348[0m
[32m  eval_mcc = 0.6215[0m
[32m  eval_precision = 0.4419[0m
[32m  eval_recall = 0.3092[0m
[32m  ********************[0m
[32m  Best MCC:0.6215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36719:  21%|██▏       | 6/28 [00:25<01:39,  4.52s/it]epoch 2 loss 1.35999:  21%|██▏       | 6/28 [00:25<01:39,  4.52s/it]epoch 2 loss 1.35999:  25%|██▌       | 7/28 [00:25<01:06,  3.18s/it]epoch 2 loss 1.36754:  25%|██▌       | 7/28 [00:26<01:06,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6475[0m
[32m  eval_f1 = 0.3392[0m
[32m  eval_mcc = 0.6278[0m
[32m  eval_precision = 0.4502[0m
[32m  eval_recall = 0.3121[0m
[32m  ********************[0m
[32m  Best f1:0.3392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36754:  29%|██▊       | 8/28 [00:34<01:41,  5.05s/it]epoch 2 loss 1.36365:  29%|██▊       | 8/28 [00:35<01:41,  5.05s/it]epoch 2 loss 1.36365:  32%|███▏      | 9/28 [00:35<01:08,  3.60s/it]epoch 2 loss 1.34418:  32%|███▏      | 9/28 [00:35<01:08,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6485[0m
[32m  eval_f1 = 0.3404[0m
[32m  eval_mcc = 0.6298[0m
[32m  eval_precision = 0.4495[0m
[32m  eval_recall = 0.3129[0m
[32m  ********************[0m
[32m  Best f1:0.3404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34418:  36%|███▌      | 10/28 [00:44<01:37,  5.42s/it]epoch 2 loss 1.34248:  36%|███▌      | 10/28 [00:45<01:37,  5.42s/it]epoch 2 loss 1.34248:  39%|███▉      | 11/28 [00:45<01:06,  3.89s/it]epoch 2 loss 1.33551:  39%|███▉      | 11/28 [00:45<01:06,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.649[0m
[32m  eval_f1 = 0.3418[0m
[32m  eval_mcc = 0.6303[0m
[32m  eval_precision = 0.4596[0m
[32m  eval_recall = 0.3132[0m
[32m  ********************[0m
[32m  Best f1:0.3418[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33551:  43%|████▎     | 12/28 [00:53<01:24,  5.27s/it]epoch 2 loss 1.33576:  43%|████▎     | 12/28 [00:54<01:24,  5.27s/it]epoch 2 loss 1.33576:  46%|████▋     | 13/28 [00:54<00:56,  3.80s/it]epoch 2 loss 1.3226:  46%|████▋     | 13/28 [00:54<00:56,  3.80s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.3492[0m
[32m  eval_mcc = 0.632[0m
[32m  eval_precision = 0.4802[0m
[32m  eval_recall = 0.3176[0m
[32m  ********************[0m
[32m  Best f1:0.3492[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3226:  50%|█████     | 14/28 [01:03<01:18,  5.60s/it]epoch 2 loss 1.32479:  50%|█████     | 14/28 [01:04<01:18,  5.60s/it]epoch 2 loss 1.32479:  54%|█████▎    | 15/28 [01:04<00:52,  4.04s/it]epoch 2 loss 1.32475:  54%|█████▎    | 15/28 [01:04<00:52,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6533[0m
[32m  eval_f1 = 0.3528[0m
[32m  eval_mcc = 0.6338[0m
[32m  eval_precision = 0.4775[0m
[32m  eval_recall = 0.3218[0m
[32m  ********************[0m
[32m  Best f1:0.3528[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32475:  57%|█████▋    | 16/28 [01:10<00:56,  4.71s/it]epoch 2 loss 1.32404:  57%|█████▋    | 16/28 [01:10<00:56,  4.71s/it]epoch 2 loss 1.32404:  61%|██████    | 17/28 [01:10<00:37,  3.43s/it]epoch 2 loss 1.31567:  61%|██████    | 17/28 [01:11<00:37,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6554[0m
[32m  eval_f1 = 0.3545[0m
[32m  eval_mcc = 0.6355[0m
[32m  eval_precision = 0.4793[0m
[32m  eval_recall = 0.3243[0m
[32m  ********************[0m
[32m  Best f1:0.3545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31567:  64%|██████▍   | 18/28 [01:17<00:44,  4.49s/it]epoch 2 loss 1.31341:  64%|██████▍   | 18/28 [01:18<00:44,  4.49s/it]epoch 2 loss 1.31341:  68%|██████▊   | 19/28 [01:18<00:29,  3.27s/it]epoch 2 loss 1.30879:  68%|██████▊   | 19/28 [01:18<00:29,  3.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6575[0m
[32m  eval_f1 = 0.3565[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4736[0m
[32m  eval_recall = 0.328[0m
[32m  ********************[0m
[32m  Best f1:0.3565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30879:  71%|███████▏  | 20/28 [01:25<00:36,  4.51s/it]epoch 2 loss 1.30643:  71%|███████▏  | 20/28 [01:26<00:36,  4.51s/it]epoch 2 loss 1.30643:  75%|███████▌  | 21/28 [01:26<00:22,  3.28s/it]epoch 2 loss 1.30327:  75%|███████▌  | 21/28 [01:26<00:22,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6606[0m
[32m  eval_f1 = 0.359[0m
[32m  eval_mcc = 0.6407[0m
[32m  eval_precision = 0.469[0m
[32m  eval_recall = 0.3308[0m
[32m  ********************[0m
[32m  Best f1:0.359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30327:  79%|███████▊  | 22/28 [01:33<00:27,  4.56s/it]epoch 2 loss 1.30838:  79%|███████▊  | 22/28 [01:34<00:27,  4.56s/it]epoch 2 loss 1.30838:  82%|████████▏ | 23/28 [01:34<00:16,  3.32s/it]epoch 2 loss 1.30844:  82%|████████▏ | 23/28 [01:34<00:16,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6618[0m
[32m  eval_f1 = 0.367[0m
[32m  eval_mcc = 0.6421[0m
[32m  eval_precision = 0.4782[0m
[32m  eval_recall = 0.3371[0m
[32m  ********************[0m
[32m  Best f1:0.367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30844:  86%|████████▌ | 24/28 [01:44<00:22,  5.50s/it]epoch 2 loss 1.30553:  86%|████████▌ | 24/28 [01:45<00:22,  5.50s/it]epoch 2 loss 1.30553:  89%|████████▉ | 25/28 [01:45<00:11,  3.98s/it]epoch 2 loss 1.30846:  89%|████████▉ | 25/28 [01:45<00:11,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.664[0m
[32m  eval_f1 = 0.3714[0m
[32m  eval_mcc = 0.6444[0m
[32m  eval_precision = 0.4778[0m
[32m  eval_recall = 0.3408[0m
[32m  ********************[0m
[32m  Best f1:0.3714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30846:  93%|█████████▎| 26/28 [01:55<00:11,  5.85s/it]epoch 2 loss 1.30815:  93%|█████████▎| 26/28 [01:55<00:11,  5.85s/it]epoch 2 loss 1.30815:  96%|█████████▋| 27/28 [01:55<00:04,  4.22s/it]epoch 2 loss 1.31012:  96%|█████████▋| 27/28 [01:55<00:04,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6646[0m
[32m  eval_f1 = 0.3721[0m
[32m  eval_mcc = 0.6451[0m
[32m  eval_precision = 0.4796[0m
[32m  eval_recall = 0.3407[0m
[32m  ********************[0m
[32m  Best f1:0.3721[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31012: 100%|██████████| 28/28 [02:06<00:00,  6.11s/it]epoch 2 loss 1.31012: 100%|██████████| 28/28 [02:06<00:00,  4.51s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.20236:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.20236:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 3 loss 1.28755:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6644[0m
[32m  eval_f1 = 0.373[0m
[32m  eval_mcc = 0.6453[0m
[32m  eval_precision = 0.4918[0m
[32m  eval_recall = 0.3403[0m
[32m  ********************[0m
[32m  Best f1:0.373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28755:   7%|▋         | 2/28 [00:10<02:37,  6.07s/it]epoch 3 loss 1.26231:   7%|▋         | 2/28 [00:10<02:37,  6.07s/it]epoch 3 loss 1.26231:  11%|█         | 3/28 [00:10<01:27,  3.49s/it]epoch 3 loss 1.25215:  11%|█         | 3/28 [00:11<01:27,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.664[0m
[32m  eval_f1 = 0.373[0m
[32m  eval_mcc = 0.6451[0m
[32m  eval_precision = 0.493[0m
[32m  eval_recall = 0.34[0m
[32m  ********************[0m
[32m  Best f1:0.373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.25215:  14%|█▍        | 4/28 [00:17<01:56,  4.84s/it]epoch 3 loss 1.24502:  14%|█▍        | 4/28 [00:18<01:56,  4.84s/it]epoch 3 loss 1.24502:  18%|█▊        | 5/28 [00:18<01:14,  3.25s/it]epoch 3 loss 1.24161:  18%|█▊        | 5/28 [00:18<01:14,  3.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6642[0m
[32m  eval_f1 = 0.3734[0m
[32m  eval_mcc = 0.6454[0m
[32m  eval_precision = 0.4982[0m
[32m  eval_recall = 0.3403[0m
[32m  ********************[0m
[32m  Best f1:0.3734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6454[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24161:  21%|██▏       | 6/28 [00:27<01:59,  5.42s/it]epoch 3 loss 1.2285:  21%|██▏       | 6/28 [00:28<01:59,  5.42s/it] epoch 3 loss 1.2285:  25%|██▌       | 7/28 [00:28<01:19,  3.79s/it]epoch 3 loss 1.23149:  25%|██▌       | 7/28 [00:28<01:19,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6649[0m
[32m  eval_f1 = 0.3755[0m
[32m  eval_mcc = 0.6461[0m
[32m  eval_precision = 0.5098[0m
[32m  eval_recall = 0.342[0m
[32m  ********************[0m
[32m  Best f1:0.3755[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23149:  29%|██▊       | 8/28 [00:37<01:51,  5.60s/it]epoch 3 loss 1.2283:  29%|██▊       | 8/28 [00:38<01:51,  5.60s/it] epoch 3 loss 1.2283:  32%|███▏      | 9/28 [00:38<01:15,  3.98s/it]epoch 3 loss 1.22499:  32%|███▏      | 9/28 [00:38<01:15,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3752[0m
[32m  eval_mcc = 0.6464[0m
[32m  eval_precision = 0.5055[0m
[32m  eval_recall = 0.3422[0m
[32m  ********************[0m
[32m  Best MCC:0.6464[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22499:  36%|███▌      | 10/28 [00:45<01:32,  5.11s/it]epoch 3 loss 1.22243:  36%|███▌      | 10/28 [00:46<01:32,  5.11s/it]epoch 3 loss 1.22243:  39%|███▉      | 11/28 [00:46<01:02,  3.68s/it]epoch 3 loss 1.22017:  39%|███▉      | 11/28 [00:46<01:02,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6661[0m
[32m  eval_f1 = 0.3757[0m
[32m  eval_mcc = 0.6471[0m
[32m  eval_precision = 0.5053[0m
[32m  eval_recall = 0.343[0m
[32m  ********************[0m
[32m  Best f1:0.3757[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22017:  43%|████▎     | 12/28 [00:55<01:26,  5.42s/it]epoch 3 loss 1.22529:  43%|████▎     | 12/28 [00:56<01:26,  5.42s/it]epoch 3 loss 1.22529:  46%|████▋     | 13/28 [00:56<00:58,  3.91s/it]epoch 3 loss 1.22535:  46%|████▋     | 13/28 [00:56<00:58,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6674[0m
[32m  eval_f1 = 0.3767[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.5058[0m
[32m  eval_recall = 0.3443[0m
[32m  ********************[0m
[32m  Best f1:0.3767[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22535:  50%|█████     | 14/28 [01:04<01:12,  5.17s/it]epoch 3 loss 1.23265:  50%|█████     | 14/28 [01:04<01:12,  5.17s/it]epoch 3 loss 1.23265:  54%|█████▎    | 15/28 [01:04<00:48,  3.74s/it]epoch 3 loss 1.22883:  54%|█████▎    | 15/28 [01:04<00:48,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6678[0m
[32m  eval_f1 = 0.3774[0m
[32m  eval_mcc = 0.6487[0m
[32m  eval_precision = 0.506[0m
[32m  eval_recall = 0.3453[0m
[32m  ********************[0m
[32m  Best f1:0.3774[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22883:  57%|█████▋    | 16/28 [01:13<01:03,  5.32s/it]epoch 3 loss 1.22911:  57%|█████▋    | 16/28 [01:13<01:03,  5.32s/it]epoch 3 loss 1.22911:  61%|██████    | 17/28 [01:13<00:42,  3.84s/it]epoch 3 loss 1.22742:  61%|██████    | 17/28 [01:14<00:42,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6693[0m
[32m  eval_f1 = 0.3824[0m
[32m  eval_mcc = 0.6502[0m
[32m  eval_precision = 0.5109[0m
[32m  eval_recall = 0.3498[0m
[32m  ********************[0m
[32m  Best f1:0.3824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22742:  64%|██████▍   | 18/28 [01:21<00:50,  5.02s/it]epoch 3 loss 1.22756:  64%|██████▍   | 18/28 [01:22<00:50,  5.02s/it]epoch 3 loss 1.22756:  68%|██████▊   | 19/28 [01:22<00:32,  3.64s/it]epoch 3 loss 1.23329:  68%|██████▊   | 19/28 [01:22<00:32,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6695[0m
[32m  eval_f1 = 0.3827[0m
[32m  eval_mcc = 0.6505[0m
[32m  eval_precision = 0.5091[0m
[32m  eval_recall = 0.3506[0m
[32m  ********************[0m
[32m  Best f1:0.3827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.23329:  71%|███████▏  | 20/28 [01:31<00:43,  5.39s/it]epoch 3 loss 1.23082:  71%|███████▏  | 20/28 [01:32<00:43,  5.39s/it]epoch 3 loss 1.23082:  75%|███████▌  | 21/28 [01:32<00:27,  3.90s/it]epoch 3 loss 1.231:  75%|███████▌  | 21/28 [01:32<00:27,  3.90s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6708[0m
[32m  eval_f1 = 0.3861[0m
[32m  eval_mcc = 0.6519[0m
[32m  eval_precision = 0.5065[0m
[32m  eval_recall = 0.354[0m
[32m  ********************[0m
[32m  Best f1:0.3861[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.231:  79%|███████▊  | 22/28 [01:40<00:31,  5.30s/it]epoch 3 loss 1.22852:  79%|███████▊  | 22/28 [01:41<00:31,  5.30s/it]epoch 3 loss 1.22852:  82%|████████▏ | 23/28 [01:41<00:19,  3.83s/it]epoch 3 loss 1.22702:  82%|████████▏ | 23/28 [01:41<00:19,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.64it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.70it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.71it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.71it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.71it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.71it/s][A100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6717[0m
[32m  eval_f1 = 0.389[0m
[32m  eval_mcc = 0.6529[0m
[32m  eval_precision = 0.5072[0m
[32m  eval_recall = 0.3564[0m
[32m  ********************[0m
[32m  Best f1:0.389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22702:  86%|████████▌ | 24/28 [01:50<00:22,  5.55s/it]epoch 3 loss 1.22729:  86%|████████▌ | 24/28 [01:51<00:22,  5.55s/it]epoch 3 loss 1.22729:  89%|████████▉ | 25/28 [01:51<00:12,  4.01s/it]epoch 3 loss 1.22126:  89%|████████▉ | 25/28 [01:51<00:12,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6723[0m
[32m  eval_f1 = 0.3879[0m
[32m  eval_mcc = 0.6537[0m
[32m  eval_precision = 0.508[0m
[32m  eval_recall = 0.3556[0m
[32m  ********************[0m
[32m  Best MCC:0.6537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22126:  93%|█████████▎| 26/28 [01:56<00:09,  4.54s/it]epoch 3 loss 1.22191:  93%|█████████▎| 26/28 [01:57<00:09,  4.54s/it]epoch 3 loss 1.22191:  96%|█████████▋| 27/28 [01:57<00:03,  3.30s/it]epoch 3 loss 1.2239:  96%|█████████▋| 27/28 [01:57<00:03,  3.30s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6727[0m
[32m  eval_f1 = 0.3868[0m
[32m  eval_mcc = 0.6543[0m
[32m  eval_precision = 0.505[0m
[32m  eval_recall = 0.3551[0m
[32m  ********************[0m
[32m  Best MCC:0.6543[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2239: 100%|██████████| 28/28 [02:03<00:00,  4.23s/it]epoch 3 loss 1.2239: 100%|██████████| 28/28 [02:03<00:00,  4.41s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.14523:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.14523:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 4 loss 1.20126:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6728[0m
[32m  eval_f1 = 0.3889[0m
[32m  eval_mcc = 0.6544[0m
[32m  eval_precision = 0.5062[0m
[32m  eval_recall = 0.3565[0m
[32m  ********************[0m
[32m  Best MCC:0.6544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20126:   7%|▋         | 2/28 [00:06<01:44,  4.03s/it]epoch 4 loss 1.17732:   7%|▋         | 2/28 [00:07<01:44,  4.03s/it]epoch 4 loss 1.17732:  11%|█         | 3/28 [00:07<00:59,  2.39s/it]epoch 4 loss 1.20336:  11%|█         | 3/28 [00:07<00:59,  2.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6727[0m
[32m  eval_f1 = 0.3888[0m
[32m  eval_mcc = 0.6543[0m
[32m  eval_precision = 0.5078[0m
[32m  eval_recall = 0.3562[0m

epoch 4 loss 1.20336:  14%|█▍        | 4/28 [00:11<01:10,  2.95s/it]epoch 4 loss 1.19423:  14%|█▍        | 4/28 [00:11<01:10,  2.95s/it]epoch 4 loss 1.19423:  18%|█▊        | 5/28 [00:11<00:46,  2.03s/it]epoch 4 loss 1.19272:  18%|█▊        | 5/28 [00:12<00:46,  2.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.3902[0m
[32m  eval_mcc = 0.6549[0m
[32m  eval_precision = 0.5101[0m
[32m  eval_recall = 0.3572[0m
[32m  ********************[0m
[32m  Best f1:0.3902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19272:  21%|██▏       | 6/28 [00:18<01:19,  3.60s/it]epoch 4 loss 1.19837:  21%|██▏       | 6/28 [00:18<01:19,  3.60s/it]epoch 4 loss 1.19837:  25%|██▌       | 7/28 [00:18<00:53,  2.56s/it]epoch 4 loss 1.19187:  25%|██▌       | 7/28 [00:19<00:53,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6734[0m
[32m  eval_f1 = 0.3912[0m
[32m  eval_mcc = 0.655[0m
[32m  eval_precision = 0.5089[0m
[32m  eval_recall = 0.3581[0m
[32m  ********************[0m
[32m  Best f1:0.3912[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.655[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.19187:  29%|██▊       | 8/28 [00:25<01:16,  3.84s/it]epoch 4 loss 1.18496:  29%|██▊       | 8/28 [00:25<01:16,  3.84s/it]epoch 4 loss 1.18496:  32%|███▏      | 9/28 [00:25<00:52,  2.77s/it]epoch 4 loss 1.18238:  32%|███▏      | 9/28 [00:26<00:52,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3912[0m
[32m  eval_mcc = 0.6546[0m
[32m  eval_precision = 0.5102[0m
[32m  eval_recall = 0.3578[0m

epoch 4 loss 1.18238:  36%|███▌      | 10/28 [00:29<00:55,  3.09s/it]epoch 4 loss 1.18305:  36%|███▌      | 10/28 [00:29<00:55,  3.09s/it]epoch 4 loss 1.18305:  39%|███▉      | 11/28 [00:29<00:38,  2.27s/it]epoch 4 loss 1.19119:  39%|███▉      | 11/28 [00:30<00:38,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6731[0m
[32m  eval_f1 = 0.3924[0m
[32m  eval_mcc = 0.6547[0m
[32m  eval_precision = 0.5105[0m
[32m  eval_recall = 0.3585[0m
[32m  ********************[0m
[32m  Best f1:0.3924[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.19119:  43%|████▎     | 12/28 [00:36<00:57,  3.61s/it]epoch 4 loss 1.18823:  43%|████▎     | 12/28 [00:36<00:57,  3.61s/it]epoch 4 loss 1.18823:  46%|████▋     | 13/28 [00:36<00:39,  2.64s/it]epoch 4 loss 1.19231:  46%|████▋     | 13/28 [00:37<00:39,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6726[0m
[32m  eval_f1 = 0.3926[0m
[32m  eval_mcc = 0.654[0m
[32m  eval_precision = 0.5101[0m
[32m  eval_recall = 0.3587[0m
[32m  ********************[0m
[32m  Best f1:0.3926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.19231:  50%|█████     | 14/28 [00:41<00:46,  3.31s/it]epoch 4 loss 1.19681:  50%|█████     | 14/28 [00:42<00:46,  3.31s/it]epoch 4 loss 1.19681:  54%|█████▎    | 15/28 [00:42<00:31,  2.44s/it]epoch 4 loss 1.19268:  54%|█████▎    | 15/28 [00:42<00:31,  2.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6727[0m
[32m  eval_f1 = 0.3937[0m
[32m  eval_mcc = 0.6541[0m
[32m  eval_precision = 0.5113[0m
[32m  eval_recall = 0.3596[0m
[32m  ********************[0m
[32m  Best f1:0.3937[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.19268:  57%|█████▋    | 16/28 [00:47<00:39,  3.26s/it]epoch 4 loss 1.18896:  57%|█████▋    | 16/28 [00:47<00:39,  3.26s/it]epoch 4 loss 1.18896:  61%|██████    | 17/28 [00:47<00:26,  2.40s/it]epoch 4 loss 1.18786:  61%|██████    | 17/28 [00:48<00:26,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.73it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6729[0m
[32m  eval_f1 = 0.3938[0m
[32m  eval_mcc = 0.6542[0m
[32m  eval_precision = 0.5107[0m
[32m  eval_recall = 0.3596[0m
[32m  ********************[0m
[32m  Best f1:0.3938[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.18786:  64%|██████▍   | 18/28 [00:52<00:31,  3.18s/it]epoch 4 loss 1.18492:  64%|██████▍   | 18/28 [00:53<00:31,  3.18s/it]epoch 4 loss 1.18492:  68%|██████▊   | 19/28 [00:53<00:21,  2.34s/it]epoch 4 loss 1.1829:  68%|██████▊   | 19/28 [00:53<00:21,  2.34s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6732[0m
[32m  eval_f1 = 0.3939[0m
[32m  eval_mcc = 0.6545[0m
[32m  eval_precision = 0.5117[0m
[32m  eval_recall = 0.3596[0m
[32m  ********************[0m
[32m  Best f1:0.3939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.1829:  71%|███████▏  | 20/28 [00:57<00:24,  3.03s/it]epoch 4 loss 1.18522:  71%|███████▏  | 20/28 [00:58<00:24,  3.03s/it]epoch 4 loss 1.18522:  75%|███████▌  | 21/28 [00:58<00:15,  2.24s/it]epoch 4 loss 1.18063:  75%|███████▌  | 21/28 [00:58<00:15,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6736[0m
[32m  eval_f1 = 0.3941[0m
[32m  eval_mcc = 0.6548[0m
[32m  eval_precision = 0.5114[0m
[32m  eval_recall = 0.3599[0m
[32m  ********************[0m
[32m  Best f1:0.3941[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_3/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.18063:  79%|███████▊  | 22/28 [01:03<00:18,  3.07s/it]epoch 4 loss 1.18254:  79%|███████▊  | 22/28 [01:03<00:18,  3.07s/it]epoch 4 loss 1.18254:  82%|████████▏ | 23/28 [01:03<00:11,  2.27s/it]epoch 4 loss 1.18635:  82%|████████▏ | 23/28 [01:04<00:11,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.3941[0m
[32m  eval_mcc = 0.6546[0m
[32m  eval_precision = 0.5108[0m
[32m  eval_recall = 0.3598[0m

epoch 4 loss 1.18635:  86%|████████▌ | 24/28 [01:07<00:10,  2.74s/it]epoch 4 loss 1.18249:  86%|████████▌ | 24/28 [01:07<00:10,  2.74s/it]epoch 4 loss 1.18249:  89%|████████▉ | 25/28 [01:07<00:06,  2.04s/it]epoch 4 loss 1.18719:  89%|████████▉ | 25/28 [01:08<00:06,  2.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6734[0m
[32m  eval_f1 = 0.394[0m
[32m  eval_mcc = 0.6546[0m
[32m  eval_precision = 0.5106[0m
[32m  eval_recall = 0.3598[0m

epoch 4 loss 1.18719:  93%|█████████▎| 26/28 [01:11<00:05,  2.57s/it]epoch 4 loss 1.18556:  93%|█████████▎| 26/28 [01:12<00:05,  2.57s/it]epoch 4 loss 1.18556:  96%|█████████▋| 27/28 [01:12<00:01,  1.92s/it]epoch 4 loss 1.1904:  96%|█████████▋| 27/28 [01:12<00:01,  1.92s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6734[0m
[32m  eval_f1 = 0.3941[0m
[32m  eval_mcc = 0.6546[0m
[32m  eval_precision = 0.5106[0m
[32m  eval_recall = 0.3599[0m

epoch 4 loss 1.1904: 100%|██████████| 28/28 [01:15<00:00,  2.43s/it]epoch 4 loss 1.1904: 100%|██████████| 28/28 [01:15<00:00,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6736[0m
[32m  eval_f1 = 0.3941[0m
[32m  eval_mcc = 0.6548[0m
[32m  eval_precision = 0.5114[0m
[32m  eval_recall = 0.3599[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3441[0m
[32m  eval_mcc = 0.6386[0m
[32m  eval_precision = 0.4567[0m
[32m  eval_recall = 0.3147[0m

