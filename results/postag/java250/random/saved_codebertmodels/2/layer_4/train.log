[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/2/layer_4', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.27381:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.27381:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.28767:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0133[0m
[32m  eval_f1 = 0.0026[0m
[32m  eval_mcc = 0.0068[0m
[32m  eval_precision = 0.0125[0m
[32m  eval_recall = 0.0074[0m
[32m  ********************[0m
[32m  Best f1:0.0026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.28767:   7%|▋         | 2/28 [00:05<01:24,  3.24s/it]epoch 0 loss 5.28458:   7%|▋         | 2/28 [00:06<01:24,  3.24s/it]epoch 0 loss 5.28458:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.27705:  11%|█         | 3/28 [00:06<00:48,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0185[0m
[32m  eval_f1 = 0.0033[0m
[32m  eval_mcc = 0.009[0m
[32m  eval_precision = 0.0135[0m
[32m  eval_recall = 0.0082[0m
[32m  ********************[0m
[32m  Best f1:0.0033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.27705:  14%|█▍        | 4/28 [00:15<02:01,  5.06s/it]epoch 0 loss 5.25874:  14%|█▍        | 4/28 [00:16<02:01,  5.06s/it]epoch 0 loss 5.25874:  18%|█▊        | 5/28 [00:16<01:17,  3.39s/it]epoch 0 loss 5.22899:  18%|█▊        | 5/28 [00:16<01:17,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0353[0m
[32m  eval_f1 = 0.0055[0m
[32m  eval_mcc = 0.0181[0m
[32m  eval_precision = 0.0134[0m
[32m  eval_recall = 0.0117[0m
[32m  ********************[0m
[32m  Best f1:0.0055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.22899:  21%|██▏       | 6/28 [00:26<02:01,  5.53s/it]epoch 0 loss 5.19378:  21%|██▏       | 6/28 [00:26<02:01,  5.53s/it]epoch 0 loss 5.19378:  25%|██▌       | 7/28 [00:26<01:21,  3.86s/it]epoch 0 loss 5.1562:  25%|██▌       | 7/28 [00:26<01:21,  3.86s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0516[0m
[32m  eval_f1 = 0.006[0m
[32m  eval_mcc = 0.0193[0m
[32m  eval_precision = 0.008[0m
[32m  eval_recall = 0.0141[0m
[32m  ********************[0m
[32m  Best f1:0.006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.1562:  29%|██▊       | 8/28 [00:34<01:43,  5.18s/it]epoch 0 loss 5.11102:  29%|██▊       | 8/28 [00:34<01:43,  5.18s/it]epoch 0 loss 5.11102:  32%|███▏      | 9/28 [00:34<01:10,  3.70s/it]epoch 0 loss 5.06305:  32%|███▏      | 9/28 [00:35<01:10,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0752[0m
[32m  eval_f1 = 0.0094[0m
[32m  eval_mcc = 0.03[0m
[32m  eval_precision = 0.0104[0m
[32m  eval_recall = 0.0156[0m
[32m  ********************[0m
[32m  Best f1:0.0094[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.03[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.06305:  36%|███▌      | 10/28 [00:41<01:22,  4.56s/it]epoch 0 loss 5.01106:  36%|███▌      | 10/28 [00:41<01:22,  4.56s/it]epoch 0 loss 5.01106:  39%|███▉      | 11/28 [00:41<00:55,  3.29s/it]epoch 0 loss 4.95176:  39%|███▉      | 11/28 [00:42<00:55,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0957[0m
[32m  eval_f1 = 0.0135[0m
[32m  eval_mcc = 0.0466[0m
[32m  eval_precision = 0.0169[0m
[32m  eval_recall = 0.0211[0m
[32m  ********************[0m
[32m  Best f1:0.0135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.95176:  43%|████▎     | 12/28 [00:50<01:20,  5.01s/it]epoch 0 loss 4.88759:  43%|████▎     | 12/28 [00:51<01:20,  5.01s/it]epoch 0 loss 4.88759:  46%|████▋     | 13/28 [00:51<00:54,  3.62s/it]epoch 0 loss 4.82807:  46%|████▋     | 13/28 [00:51<00:54,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.117[0m
[32m  eval_f1 = 0.0195[0m
[32m  eval_mcc = 0.068[0m
[32m  eval_precision = 0.0343[0m
[32m  eval_recall = 0.0268[0m
[32m  ********************[0m
[32m  Best f1:0.0195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.82807:  50%|█████     | 14/28 [00:58<01:07,  4.85s/it]epoch 0 loss 4.76248:  50%|█████     | 14/28 [00:59<01:07,  4.85s/it]epoch 0 loss 4.76248:  54%|█████▎    | 15/28 [00:59<00:45,  3.51s/it]epoch 0 loss 4.69609:  54%|█████▎    | 15/28 [00:59<00:45,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1553[0m
[32m  eval_f1 = 0.0324[0m
[32m  eval_mcc = 0.1128[0m
[32m  eval_precision = 0.0702[0m
[32m  eval_recall = 0.0365[0m
[32m  ********************[0m
[32m  Best f1:0.0324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.69609:  57%|█████▋    | 16/28 [01:09<01:04,  5.39s/it]epoch 0 loss 4.63091:  57%|█████▋    | 16/28 [01:09<01:04,  5.39s/it]epoch 0 loss 4.63091:  61%|██████    | 17/28 [01:09<00:42,  3.90s/it]epoch 0 loss 4.57065:  61%|██████    | 17/28 [01:09<00:42,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1982[0m
[32m  eval_f1 = 0.0405[0m
[32m  eval_mcc = 0.1615[0m
[32m  eval_precision = 0.0981[0m
[32m  eval_recall = 0.0429[0m
[32m  ********************[0m
[32m  Best f1:0.0405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1615[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.57065:  64%|██████▍   | 18/28 [01:17<00:51,  5.13s/it]epoch 0 loss 4.50209:  64%|██████▍   | 18/28 [01:17<00:51,  5.13s/it]epoch 0 loss 4.50209:  68%|██████▊   | 19/28 [01:17<00:33,  3.72s/it]epoch 0 loss 4.43611:  68%|██████▊   | 19/28 [01:18<00:33,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2634[0m
[32m  eval_f1 = 0.054[0m
[32m  eval_mcc = 0.2279[0m
[32m  eval_precision = 0.1108[0m
[32m  eval_recall = 0.0541[0m
[32m  ********************[0m
[32m  Best f1:0.054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.43611:  71%|███████▏  | 20/28 [01:24<00:36,  4.56s/it]epoch 0 loss 4.36673:  71%|███████▏  | 20/28 [01:24<00:36,  4.56s/it]epoch 0 loss 4.36673:  75%|███████▌  | 21/28 [01:24<00:23,  3.32s/it]epoch 0 loss 4.30176:  75%|███████▌  | 21/28 [01:25<00:23,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3385[0m
[32m  eval_f1 = 0.073[0m
[32m  eval_mcc = 0.2949[0m
[32m  eval_precision = 0.1397[0m
[32m  eval_recall = 0.0702[0m
[32m  ********************[0m
[32m  Best f1:0.073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2949[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.30176:  79%|███████▊  | 22/28 [01:33<00:29,  4.95s/it]epoch 0 loss 4.24042:  79%|███████▊  | 22/28 [01:34<00:29,  4.95s/it]epoch 0 loss 4.24042:  82%|████████▏ | 23/28 [01:34<00:17,  3.59s/it]epoch 0 loss 4.18065:  82%|████████▏ | 23/28 [01:34<00:17,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3983[0m
[32m  eval_f1 = 0.117[0m
[32m  eval_mcc = 0.3552[0m
[32m  eval_precision = 0.1781[0m
[32m  eval_recall = 0.1068[0m
[32m  ********************[0m
[32m  Best f1:0.117[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.18065:  86%|████████▌ | 24/28 [01:42<00:20,  5.19s/it]epoch 0 loss 4.11937:  86%|████████▌ | 24/28 [01:43<00:20,  5.19s/it]epoch 0 loss 4.11937:  89%|████████▉ | 25/28 [01:43<00:11,  3.76s/it]epoch 0 loss 4.06528:  89%|████████▉ | 25/28 [01:43<00:11,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4145[0m
[32m  eval_f1 = 0.1238[0m
[32m  eval_mcc = 0.3803[0m
[32m  eval_precision = 0.1881[0m
[32m  eval_recall = 0.1118[0m
[32m  ********************[0m
[32m  Best f1:0.1238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.06528:  93%|█████████▎| 26/28 [01:53<00:11,  5.54s/it]epoch 0 loss 4.00903:  93%|█████████▎| 26/28 [01:53<00:11,  5.54s/it]epoch 0 loss 4.00903:  96%|█████████▋| 27/28 [01:53<00:04,  4.01s/it]epoch 0 loss 3.94502:  96%|█████████▋| 27/28 [01:53<00:04,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4397[0m
[32m  eval_f1 = 0.1461[0m
[32m  eval_mcc = 0.4146[0m
[32m  eval_precision = 0.2128[0m
[32m  eval_recall = 0.1321[0m
[32m  ********************[0m
[32m  Best f1:0.1461[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.94502: 100%|██████████| 28/28 [02:01<00:00,  5.08s/it]epoch 0 loss 3.94502: 100%|██████████| 28/28 [02:01<00:00,  4.33s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.32198:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.32198:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 1 loss 2.23123:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4748[0m
[32m  eval_f1 = 0.1634[0m
[32m  eval_mcc = 0.4515[0m
[32m  eval_precision = 0.2395[0m
[32m  eval_recall = 0.152[0m
[32m  ********************[0m
[32m  Best f1:0.1634[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23123:   7%|▋         | 2/28 [00:10<02:35,  5.97s/it]epoch 1 loss 2.19235:   7%|▋         | 2/28 [00:10<02:35,  5.97s/it]epoch 1 loss 2.19235:  11%|█         | 3/28 [00:10<01:25,  3.43s/it]epoch 1 loss 2.19861:  11%|█         | 3/28 [00:11<01:25,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5162[0m
[32m  eval_f1 = 0.1753[0m
[32m  eval_mcc = 0.4898[0m
[32m  eval_precision = 0.2422[0m
[32m  eval_recall = 0.1711[0m
[32m  ********************[0m
[32m  Best f1:0.1753[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.19861:  14%|█▍        | 4/28 [00:16<01:45,  4.40s/it]epoch 1 loss 2.17452:  14%|█▍        | 4/28 [00:16<01:45,  4.40s/it]epoch 1 loss 2.17452:  18%|█▊        | 5/28 [00:16<01:08,  2.96s/it]epoch 1 loss 2.13937:  18%|█▊        | 5/28 [00:17<01:08,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5619[0m
[32m  eval_f1 = 0.196[0m
[32m  eval_mcc = 0.5363[0m
[32m  eval_precision = 0.2504[0m
[32m  eval_recall = 0.1912[0m
[32m  ********************[0m
[32m  Best f1:0.196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13937:  21%|██▏       | 6/28 [00:22<01:27,  3.97s/it]epoch 1 loss 2.10086:  21%|██▏       | 6/28 [00:23<01:27,  3.97s/it]epoch 1 loss 2.10086:  25%|██▌       | 7/28 [00:23<00:59,  2.81s/it]epoch 1 loss 2.07512:  25%|██▌       | 7/28 [00:23<00:59,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5828[0m
[32m  eval_f1 = 0.2111[0m
[32m  eval_mcc = 0.56[0m
[32m  eval_precision = 0.2585[0m
[32m  eval_recall = 0.2039[0m
[32m  ********************[0m
[32m  Best f1:0.2111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.56[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07512:  29%|██▊       | 8/28 [00:33<01:44,  5.23s/it]epoch 1 loss 2.04285:  29%|██▊       | 8/28 [00:34<01:44,  5.23s/it]epoch 1 loss 2.04285:  32%|███▏      | 9/28 [00:34<01:10,  3.72s/it]epoch 1 loss 2.00413:  32%|███▏      | 9/28 [00:34<01:10,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5935[0m
[32m  eval_f1 = 0.2207[0m
[32m  eval_mcc = 0.5718[0m
[32m  eval_precision = 0.2807[0m
[32m  eval_recall = 0.2126[0m
[32m  ********************[0m
[32m  Best f1:0.2207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5718[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00413:  36%|███▌      | 10/28 [00:44<01:42,  5.71s/it]epoch 1 loss 1.99223:  36%|███▌      | 10/28 [00:44<01:42,  5.71s/it]epoch 1 loss 1.99223:  39%|███▉      | 11/28 [00:44<01:09,  4.09s/it]epoch 1 loss 1.97916:  39%|███▉      | 11/28 [00:45<01:09,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5977[0m
[32m  eval_f1 = 0.2292[0m
[32m  eval_mcc = 0.5752[0m
[32m  eval_precision = 0.3135[0m
[32m  eval_recall = 0.2174[0m
[32m  ********************[0m
[32m  Best f1:0.2292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97916:  43%|████▎     | 12/28 [00:55<01:36,  6.00s/it]epoch 1 loss 1.95767:  43%|████▎     | 12/28 [00:55<01:36,  6.00s/it]epoch 1 loss 1.95767:  46%|████▋     | 13/28 [00:55<01:04,  4.31s/it]epoch 1 loss 1.94158:  46%|████▋     | 13/28 [00:55<01:04,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6018[0m
[32m  eval_f1 = 0.2436[0m
[32m  eval_mcc = 0.578[0m
[32m  eval_precision = 0.3451[0m
[32m  eval_recall = 0.2281[0m
[32m  ********************[0m
[32m  Best f1:0.2436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94158:  50%|█████     | 14/28 [01:05<01:25,  6.11s/it]epoch 1 loss 1.93346:  50%|█████     | 14/28 [01:06<01:25,  6.11s/it]epoch 1 loss 1.93346:  54%|█████▎    | 15/28 [01:06<00:57,  4.39s/it]epoch 1 loss 1.91737:  54%|█████▎    | 15/28 [01:06<00:57,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6075[0m
[32m  eval_f1 = 0.2541[0m
[32m  eval_mcc = 0.5837[0m
[32m  eval_precision = 0.3498[0m
[32m  eval_recall = 0.2365[0m
[32m  ********************[0m
[32m  Best f1:0.2541[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5837[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91737:  57%|█████▋    | 16/28 [01:15<01:11,  5.99s/it]epoch 1 loss 1.89223:  57%|█████▋    | 16/28 [01:16<01:11,  5.99s/it]epoch 1 loss 1.89223:  61%|██████    | 17/28 [01:16<00:47,  4.32s/it]epoch 1 loss 1.87606:  61%|██████    | 17/28 [01:16<00:47,  4.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6127[0m
[32m  eval_f1 = 0.2666[0m
[32m  eval_mcc = 0.5898[0m
[32m  eval_precision = 0.3774[0m
[32m  eval_recall = 0.2461[0m
[32m  ********************[0m
[32m  Best f1:0.2666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5898[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87606:  64%|██████▍   | 18/28 [01:26<01:00,  6.08s/it]epoch 1 loss 1.85773:  64%|██████▍   | 18/28 [01:26<01:00,  6.08s/it]epoch 1 loss 1.85773:  68%|██████▊   | 19/28 [01:26<00:39,  4.38s/it]epoch 1 loss 1.83394:  68%|██████▊   | 19/28 [01:27<00:39,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6148[0m
[32m  eval_f1 = 0.2809[0m
[32m  eval_mcc = 0.5939[0m
[32m  eval_precision = 0.3968[0m
[32m  eval_recall = 0.2587[0m
[32m  ********************[0m
[32m  Best f1:0.2809[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83394:  71%|███████▏  | 20/28 [01:36<00:48,  6.02s/it]epoch 1 loss 1.81905:  71%|███████▏  | 20/28 [01:37<00:48,  6.02s/it]epoch 1 loss 1.81905:  75%|███████▌  | 21/28 [01:37<00:30,  4.34s/it]epoch 1 loss 1.80332:  75%|███████▌  | 21/28 [01:37<00:30,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6165[0m
[32m  eval_f1 = 0.2859[0m
[32m  eval_mcc = 0.5969[0m
[32m  eval_precision = 0.417[0m
[32m  eval_recall = 0.2617[0m
[32m  ********************[0m
[32m  Best f1:0.2859[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5969[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80332:  79%|███████▊  | 22/28 [01:46<00:34,  5.81s/it]epoch 1 loss 1.79028:  79%|███████▊  | 22/28 [01:46<00:34,  5.81s/it]epoch 1 loss 1.79028:  82%|████████▏ | 23/28 [01:46<00:20,  4.19s/it]epoch 1 loss 1.7759:  82%|████████▏ | 23/28 [01:47<00:20,  4.19s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.621[0m
[32m  eval_f1 = 0.301[0m
[32m  eval_mcc = 0.6015[0m
[32m  eval_precision = 0.4234[0m
[32m  eval_recall = 0.2756[0m
[32m  ********************[0m
[32m  Best f1:0.301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7759:  86%|████████▌ | 24/28 [01:56<00:22,  5.70s/it]epoch 1 loss 1.762:  86%|████████▌ | 24/28 [01:56<00:22,  5.70s/it] epoch 1 loss 1.762:  89%|████████▉ | 25/28 [01:56<00:12,  4.12s/it]epoch 1 loss 1.74834:  89%|████████▉ | 25/28 [01:56<00:12,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6249[0m
[32m  eval_f1 = 0.3078[0m
[32m  eval_mcc = 0.6045[0m
[32m  eval_precision = 0.4255[0m
[32m  eval_recall = 0.2813[0m
[32m  ********************[0m
[32m  Best f1:0.3078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74834:  93%|█████████▎| 26/28 [02:04<00:10,  5.14s/it]epoch 1 loss 1.73982:  93%|█████████▎| 26/28 [02:04<00:10,  5.14s/it]epoch 1 loss 1.73982:  96%|█████████▋| 27/28 [02:04<00:03,  3.73s/it]epoch 1 loss 1.72699:  96%|█████████▋| 27/28 [02:04<00:03,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6267[0m
[32m  eval_f1 = 0.3133[0m
[32m  eval_mcc = 0.6052[0m
[32m  eval_precision = 0.4251[0m
[32m  eval_recall = 0.2872[0m
[32m  ********************[0m
[32m  Best f1:0.3133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72699: 100%|██████████| 28/28 [02:14<00:00,  5.47s/it]epoch 1 loss 1.72699: 100%|██████████| 28/28 [02:14<00:00,  4.79s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.24666:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.24666:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 2 loss 1.3356:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6307[0m
[32m  eval_f1 = 0.3197[0m
[32m  eval_mcc = 0.6089[0m
[32m  eval_precision = 0.4308[0m
[32m  eval_recall = 0.2934[0m
[32m  ********************[0m
[32m  Best f1:0.3197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3356:   7%|▋         | 2/28 [00:08<02:12,  5.09s/it]epoch 2 loss 1.33108:   7%|▋         | 2/28 [00:09<02:12,  5.09s/it]epoch 2 loss 1.33108:  11%|█         | 3/28 [00:09<01:13,  2.96s/it]epoch 2 loss 1.3959:  11%|█         | 3/28 [00:09<01:13,  2.96s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6351[0m
[32m  eval_f1 = 0.3241[0m
[32m  eval_mcc = 0.6135[0m
[32m  eval_precision = 0.4239[0m
[32m  eval_recall = 0.2989[0m
[32m  ********************[0m
[32m  Best f1:0.3241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3959:  14%|█▍        | 4/28 [00:16<01:50,  4.58s/it]epoch 2 loss 1.39674:  14%|█▍        | 4/28 [00:16<01:50,  4.58s/it]epoch 2 loss 1.39674:  18%|█▊        | 5/28 [00:16<01:10,  3.08s/it]epoch 2 loss 1.39466:  18%|█▊        | 5/28 [00:17<01:10,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.3292[0m
[32m  eval_mcc = 0.6182[0m
[32m  eval_precision = 0.4319[0m
[32m  eval_recall = 0.3034[0m
[32m  ********************[0m
[32m  Best f1:0.3292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39466:  21%|██▏       | 6/28 [00:23<01:32,  4.18s/it]epoch 2 loss 1.38771:  21%|██▏       | 6/28 [00:23<01:32,  4.18s/it]epoch 2 loss 1.38771:  25%|██▌       | 7/28 [00:23<01:02,  2.95s/it]epoch 2 loss 1.39551:  25%|██▌       | 7/28 [00:23<01:02,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6407[0m
[32m  eval_f1 = 0.3323[0m
[32m  eval_mcc = 0.6206[0m
[32m  eval_precision = 0.4537[0m
[32m  eval_recall = 0.3051[0m
[32m  ********************[0m
[32m  Best f1:0.3323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39551:  29%|██▊       | 8/28 [00:32<01:40,  5.04s/it]epoch 2 loss 1.39092:  29%|██▊       | 8/28 [00:33<01:40,  5.04s/it]epoch 2 loss 1.39092:  32%|███▏      | 9/28 [00:33<01:08,  3.59s/it]epoch 2 loss 1.37115:  32%|███▏      | 9/28 [00:33<01:08,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6412[0m
[32m  eval_f1 = 0.3354[0m
[32m  eval_mcc = 0.6223[0m
[32m  eval_precision = 0.4501[0m
[32m  eval_recall = 0.3074[0m
[32m  ********************[0m
[32m  Best f1:0.3354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37115:  36%|███▌      | 10/28 [00:41<01:27,  4.87s/it]epoch 2 loss 1.37001:  36%|███▌      | 10/28 [00:41<01:27,  4.87s/it]epoch 2 loss 1.37001:  39%|███▉      | 11/28 [00:41<00:59,  3.51s/it]epoch 2 loss 1.36316:  39%|███▉      | 11/28 [00:41<00:59,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.643[0m
[32m  eval_f1 = 0.3356[0m
[32m  eval_mcc = 0.6242[0m
[32m  eval_precision = 0.46[0m
[32m  eval_recall = 0.3077[0m
[32m  ********************[0m
[32m  Best f1:0.3356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36316:  43%|████▎     | 12/28 [00:51<01:26,  5.39s/it]epoch 2 loss 1.36348:  43%|████▎     | 12/28 [00:51<01:26,  5.39s/it]epoch 2 loss 1.36348:  46%|████▋     | 13/28 [00:51<00:58,  3.88s/it]epoch 2 loss 1.35006:  46%|████▋     | 13/28 [00:52<00:58,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6446[0m
[32m  eval_f1 = 0.3369[0m
[32m  eval_mcc = 0.6253[0m
[32m  eval_precision = 0.4573[0m
[32m  eval_recall = 0.3092[0m
[32m  ********************[0m
[32m  Best f1:0.3369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35006:  50%|█████     | 14/28 [00:59<01:11,  5.11s/it]epoch 2 loss 1.35214:  50%|█████     | 14/28 [00:59<01:11,  5.11s/it]epoch 2 loss 1.35214:  54%|█████▎    | 15/28 [00:59<00:48,  3.69s/it]epoch 2 loss 1.35236:  54%|█████▎    | 15/28 [01:00<00:48,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6471[0m
[32m  eval_f1 = 0.3401[0m
[32m  eval_mcc = 0.6272[0m
[32m  eval_precision = 0.4548[0m
[32m  eval_recall = 0.3122[0m
[32m  ********************[0m
[32m  Best f1:0.3401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35236:  57%|█████▋    | 16/28 [01:10<01:07,  5.65s/it]epoch 2 loss 1.35132:  57%|█████▋    | 16/28 [01:10<01:07,  5.65s/it]epoch 2 loss 1.35132:  61%|██████    | 17/28 [01:10<00:44,  4.08s/it]epoch 2 loss 1.34256:  61%|██████    | 17/28 [01:10<00:44,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6493[0m
[32m  eval_f1 = 0.3436[0m
[32m  eval_mcc = 0.6289[0m
[32m  eval_precision = 0.465[0m
[32m  eval_recall = 0.3156[0m
[32m  ********************[0m
[32m  Best f1:0.3436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34256:  64%|██████▍   | 18/28 [01:21<01:01,  6.16s/it]epoch 2 loss 1.34005:  64%|██████▍   | 18/28 [01:21<01:01,  6.16s/it]epoch 2 loss 1.34005:  68%|██████▊   | 19/28 [01:21<00:39,  4.44s/it]epoch 2 loss 1.3354:  68%|██████▊   | 19/28 [01:22<00:39,  4.44s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3529[0m
[32m  eval_mcc = 0.6325[0m
[32m  eval_precision = 0.4711[0m
[32m  eval_recall = 0.3235[0m
[32m  ********************[0m
[32m  Best f1:0.3529[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3354:  71%|███████▏  | 20/28 [01:32<00:49,  6.17s/it]epoch 2 loss 1.33259:  71%|███████▏  | 20/28 [01:32<00:49,  6.17s/it]epoch 2 loss 1.33259:  75%|███████▌  | 21/28 [01:32<00:31,  4.44s/it]epoch 2 loss 1.32957:  75%|███████▌  | 21/28 [01:33<00:31,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6561[0m
[32m  eval_f1 = 0.356[0m
[32m  eval_mcc = 0.636[0m
[32m  eval_precision = 0.4725[0m
[32m  eval_recall = 0.3272[0m
[32m  ********************[0m
[32m  Best f1:0.356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.636[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.32957:  79%|███████▊  | 22/28 [01:43<00:38,  6.36s/it]epoch 2 loss 1.33443:  79%|███████▊  | 22/28 [01:43<00:38,  6.36s/it]epoch 2 loss 1.33443:  82%|████████▏ | 23/28 [01:43<00:22,  4.57s/it]epoch 2 loss 1.33452:  82%|████████▏ | 23/28 [01:44<00:22,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6585[0m
[32m  eval_f1 = 0.3615[0m
[32m  eval_mcc = 0.6386[0m
[32m  eval_precision = 0.4775[0m
[32m  eval_recall = 0.3318[0m
[32m  ********************[0m
[32m  Best f1:0.3615[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33452:  86%|████████▌ | 24/28 [01:54<00:25,  6.41s/it]epoch 2 loss 1.33142:  86%|████████▌ | 24/28 [01:54<00:25,  6.41s/it]epoch 2 loss 1.33142:  89%|████████▉ | 25/28 [01:54<00:13,  4.61s/it]epoch 2 loss 1.33405:  89%|████████▉ | 25/28 [01:55<00:13,  4.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6597[0m
[32m  eval_f1 = 0.3673[0m
[32m  eval_mcc = 0.6399[0m
[32m  eval_precision = 0.4816[0m
[32m  eval_recall = 0.3367[0m
[32m  ********************[0m
[32m  Best f1:0.3673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33405:  93%|█████████▎| 26/28 [02:05<00:12,  6.33s/it]epoch 2 loss 1.33352:  93%|█████████▎| 26/28 [02:05<00:12,  6.33s/it]epoch 2 loss 1.33352:  96%|█████████▋| 27/28 [02:05<00:04,  4.56s/it]epoch 2 loss 1.33529:  96%|█████████▋| 27/28 [02:05<00:04,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6609[0m
[32m  eval_f1 = 0.3682[0m
[32m  eval_mcc = 0.6414[0m
[32m  eval_precision = 0.483[0m
[32m  eval_recall = 0.337[0m
[32m  ********************[0m
[32m  Best f1:0.3682[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6414[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33529: 100%|██████████| 28/28 [02:15<00:00,  6.19s/it]epoch 2 loss 1.33529: 100%|██████████| 28/28 [02:15<00:00,  4.85s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.23021:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.23021:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 3 loss 1.31171:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.66[0m
[32m  eval_f1 = 0.3674[0m
[32m  eval_mcc = 0.6407[0m
[32m  eval_precision = 0.4818[0m
[32m  eval_recall = 0.3352[0m

epoch 3 loss 1.31171:   7%|▋         | 2/28 [00:04<01:02,  2.39s/it]epoch 3 loss 1.28741:   7%|▋         | 2/28 [00:04<01:02,  2.39s/it]epoch 3 loss 1.28741:  11%|█         | 3/28 [00:04<00:37,  1.48s/it]epoch 3 loss 1.27782:  11%|█         | 3/28 [00:04<00:37,  1.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6596[0m
[32m  eval_f1 = 0.3673[0m
[32m  eval_mcc = 0.6405[0m
[32m  eval_precision = 0.4831[0m
[32m  eval_recall = 0.3346[0m

epoch 3 loss 1.27782:  14%|█▍        | 4/28 [00:08<00:57,  2.39s/it]epoch 3 loss 1.26992:  14%|█▍        | 4/28 [00:08<00:57,  2.39s/it]epoch 3 loss 1.26992:  18%|█▊        | 5/28 [00:08<00:38,  1.67s/it]epoch 3 loss 1.26617:  18%|█▊        | 5/28 [00:09<00:38,  1.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6605[0m
[32m  eval_f1 = 0.3689[0m
[32m  eval_mcc = 0.6416[0m
[32m  eval_precision = 0.4887[0m
[32m  eval_recall = 0.336[0m
[32m  ********************[0m
[32m  Best f1:0.3689[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6416[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26617:  21%|██▏       | 6/28 [00:16<01:23,  3.81s/it]epoch 3 loss 1.25323:  21%|██▏       | 6/28 [00:17<01:23,  3.81s/it]epoch 3 loss 1.25323:  25%|██▌       | 7/28 [00:17<00:56,  2.70s/it]epoch 3 loss 1.25585:  25%|██▌       | 7/28 [00:17<00:56,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6606[0m
[32m  eval_f1 = 0.37[0m
[32m  eval_mcc = 0.6414[0m
[32m  eval_precision = 0.5008[0m
[32m  eval_recall = 0.3371[0m
[32m  ********************[0m
[32m  Best f1:0.37[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.25585:  29%|██▊       | 8/28 [00:22<01:09,  3.46s/it]epoch 3 loss 1.25271:  29%|██▊       | 8/28 [00:22<01:09,  3.46s/it]epoch 3 loss 1.25271:  32%|███▏      | 9/28 [00:22<00:47,  2.50s/it]epoch 3 loss 1.24898:  32%|███▏      | 9/28 [00:23<00:47,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6618[0m
[32m  eval_f1 = 0.3696[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.4897[0m
[32m  eval_recall = 0.3378[0m
[32m  ********************[0m
[32m  Best MCC:0.6425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24898:  36%|███▌      | 10/28 [00:28<01:05,  3.63s/it]epoch 3 loss 1.24674:  36%|███▌      | 10/28 [00:29<01:05,  3.63s/it]epoch 3 loss 1.24674:  39%|███▉      | 11/28 [00:29<00:45,  2.65s/it]epoch 3 loss 1.24433:  39%|███▉      | 11/28 [00:29<00:45,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6625[0m
[32m  eval_f1 = 0.3733[0m
[32m  eval_mcc = 0.6433[0m
[32m  eval_precision = 0.5036[0m
[32m  eval_recall = 0.3408[0m
[32m  ********************[0m
[32m  Best f1:0.3733[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6433[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24433:  43%|████▎     | 12/28 [00:36<01:05,  4.12s/it]epoch 3 loss 1.24947:  43%|████▎     | 12/28 [00:37<01:05,  4.12s/it]epoch 3 loss 1.24947:  46%|████▋     | 13/28 [00:37<00:44,  3.00s/it]epoch 3 loss 1.2491:  46%|████▋     | 13/28 [00:37<00:44,  3.00s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6636[0m
[32m  eval_f1 = 0.3756[0m
[32m  eval_mcc = 0.6445[0m
[32m  eval_precision = 0.5127[0m
[32m  eval_recall = 0.3428[0m
[32m  ********************[0m
[32m  Best f1:0.3756[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6445[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2491:  50%|█████     | 14/28 [00:46<01:10,  5.03s/it]epoch 3 loss 1.2566:  50%|█████     | 14/28 [00:47<01:10,  5.03s/it]epoch 3 loss 1.2566:  54%|█████▎    | 15/28 [00:47<00:47,  3.64s/it]epoch 3 loss 1.25269:  54%|█████▎    | 15/28 [00:47<00:47,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6646[0m
[32m  eval_f1 = 0.3768[0m
[32m  eval_mcc = 0.6454[0m
[32m  eval_precision = 0.5116[0m
[32m  eval_recall = 0.3441[0m
[32m  ********************[0m
[32m  Best f1:0.3768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6454[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25269:  57%|█████▋    | 16/28 [00:55<00:58,  4.89s/it]epoch 3 loss 1.25296:  57%|█████▋    | 16/28 [00:55<00:58,  4.89s/it]epoch 3 loss 1.25296:  61%|██████    | 17/28 [00:55<00:39,  3.55s/it]epoch 3 loss 1.25111:  61%|██████    | 17/28 [00:55<00:39,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3786[0m
[32m  eval_mcc = 0.6462[0m
[32m  eval_precision = 0.5111[0m
[32m  eval_recall = 0.3459[0m
[32m  ********************[0m
[32m  Best f1:0.3786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25111:  64%|██████▍   | 18/28 [01:05<00:54,  5.45s/it]epoch 3 loss 1.25134:  64%|██████▍   | 18/28 [01:05<00:54,  5.45s/it]epoch 3 loss 1.25134:  68%|██████▊   | 19/28 [01:05<00:35,  3.94s/it]epoch 3 loss 1.2568:  68%|██████▊   | 19/28 [01:06<00:35,  3.94s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6667[0m
[32m  eval_f1 = 0.3796[0m
[32m  eval_mcc = 0.6476[0m
[32m  eval_precision = 0.5077[0m
[32m  eval_recall = 0.3477[0m
[32m  ********************[0m
[32m  Best f1:0.3796[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2568:  71%|███████▏  | 20/28 [01:13<00:41,  5.14s/it]epoch 3 loss 1.25411:  71%|███████▏  | 20/28 [01:14<00:41,  5.14s/it]epoch 3 loss 1.25411:  75%|███████▌  | 21/28 [01:14<00:26,  3.72s/it]epoch 3 loss 1.25404:  75%|███████▌  | 21/28 [01:14<00:26,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6672[0m
[32m  eval_f1 = 0.3806[0m
[32m  eval_mcc = 0.6481[0m
[32m  eval_precision = 0.516[0m
[32m  eval_recall = 0.3488[0m
[32m  ********************[0m
[32m  Best f1:0.3806[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25404:  79%|███████▊  | 22/28 [01:22<00:31,  5.27s/it]epoch 3 loss 1.25173:  79%|███████▊  | 22/28 [01:23<00:31,  5.27s/it]epoch 3 loss 1.25173:  82%|████████▏ | 23/28 [01:23<00:19,  3.81s/it]epoch 3 loss 1.2505:  82%|████████▏ | 23/28 [01:23<00:19,  3.81s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6673[0m
[32m  eval_f1 = 0.3808[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.5154[0m
[32m  eval_recall = 0.349[0m
[32m  ********************[0m
[32m  Best f1:0.3808[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2505:  86%|████████▌ | 24/28 [01:32<00:21,  5.40s/it]epoch 3 loss 1.25057:  86%|████████▌ | 24/28 [01:32<00:21,  5.40s/it]epoch 3 loss 1.25057:  89%|████████▉ | 25/28 [01:32<00:11,  3.91s/it]epoch 3 loss 1.24449:  89%|████████▉ | 25/28 [01:33<00:11,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6673[0m
[32m  eval_f1 = 0.3805[0m
[32m  eval_mcc = 0.6486[0m
[32m  eval_precision = 0.5149[0m
[32m  eval_recall = 0.3488[0m
[32m  ********************[0m
[32m  Best MCC:0.6486[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24449:  93%|█████████▎| 26/28 [01:39<00:09,  4.60s/it]epoch 3 loss 1.24513:  93%|█████████▎| 26/28 [01:39<00:09,  4.60s/it]epoch 3 loss 1.24513:  96%|█████████▋| 27/28 [01:39<00:03,  3.34s/it]epoch 3 loss 1.24725:  96%|█████████▋| 27/28 [01:39<00:03,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6677[0m
[32m  eval_f1 = 0.3806[0m
[32m  eval_mcc = 0.649[0m
[32m  eval_precision = 0.5179[0m
[32m  eval_recall = 0.3486[0m
[32m  ********************[0m
[32m  Best MCC:0.649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24725: 100%|██████████| 28/28 [01:45<00:00,  4.12s/it]epoch 3 loss 1.24725: 100%|██████████| 28/28 [01:45<00:00,  3.77s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.16064:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.16064:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 4 loss 1.22011:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6677[0m
[32m  eval_f1 = 0.3818[0m
[32m  eval_mcc = 0.6491[0m
[32m  eval_precision = 0.5202[0m
[32m  eval_recall = 0.3498[0m
[32m  ********************[0m
[32m  Best f1:0.3818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6491[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22011:   7%|▋         | 2/28 [00:10<02:32,  5.88s/it]epoch 4 loss 1.19589:   7%|▋         | 2/28 [00:10<02:32,  5.88s/it]epoch 4 loss 1.19589:  11%|█         | 3/28 [00:10<01:24,  3.39s/it]epoch 4 loss 1.22399:  11%|█         | 3/28 [00:10<01:24,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6679[0m
[32m  eval_f1 = 0.3819[0m
[32m  eval_mcc = 0.6493[0m
[32m  eval_precision = 0.5209[0m
[32m  eval_recall = 0.3499[0m
[32m  ********************[0m
[32m  Best f1:0.3819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22399:  14%|█▍        | 4/28 [00:18<02:09,  5.38s/it]epoch 4 loss 1.21454:  14%|█▍        | 4/28 [00:19<02:09,  5.38s/it]epoch 4 loss 1.21454:  18%|█▊        | 5/28 [00:19<01:22,  3.59s/it]epoch 4 loss 1.21281:  18%|█▊        | 5/28 [00:19<01:22,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6686[0m
[32m  eval_f1 = 0.3829[0m
[32m  eval_mcc = 0.65[0m
[32m  eval_precision = 0.5115[0m
[32m  eval_recall = 0.3506[0m
[32m  ********************[0m
[32m  Best f1:0.3829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.65[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21281:  21%|██▏       | 6/28 [00:25<01:41,  4.60s/it]epoch 4 loss 1.21892:  21%|██▏       | 6/28 [00:26<01:41,  4.60s/it]epoch 4 loss 1.21892:  25%|██▌       | 7/28 [00:26<01:07,  3.23s/it]epoch 4 loss 1.21339:  25%|██▌       | 7/28 [00:26<01:07,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.669[0m
[32m  eval_f1 = 0.3827[0m
[32m  eval_mcc = 0.6504[0m
[32m  eval_precision = 0.5065[0m
[32m  eval_recall = 0.3503[0m
[32m  ********************[0m
[32m  Best MCC:0.6504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21339:  29%|██▊       | 8/28 [00:31<01:15,  3.78s/it]epoch 4 loss 1.20661:  29%|██▊       | 8/28 [00:31<01:15,  3.78s/it]epoch 4 loss 1.20661:  32%|███▏      | 9/28 [00:31<00:51,  2.73s/it]epoch 4 loss 1.20392:  32%|███▏      | 9/28 [00:32<00:51,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6689[0m
[32m  eval_f1 = 0.3835[0m
[32m  eval_mcc = 0.6502[0m
[32m  eval_precision = 0.5204[0m
[32m  eval_recall = 0.3505[0m
[32m  ********************[0m
[32m  Best f1:0.3835[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.20392:  36%|███▌      | 10/28 [00:36<01:01,  3.42s/it]epoch 4 loss 1.20457:  36%|███▌      | 10/28 [00:37<01:01,  3.42s/it]epoch 4 loss 1.20457:  39%|███▉      | 11/28 [00:37<00:42,  2.50s/it]epoch 4 loss 1.21287:  39%|███▉      | 11/28 [00:37<00:42,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6692[0m
[32m  eval_f1 = 0.384[0m
[32m  eval_mcc = 0.6505[0m
[32m  eval_precision = 0.5207[0m
[32m  eval_recall = 0.3506[0m
[32m  ********************[0m
[32m  Best f1:0.384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21287:  43%|████▎     | 12/28 [00:43<00:56,  3.54s/it]epoch 4 loss 1.20966:  43%|████▎     | 12/28 [00:43<00:56,  3.54s/it]epoch 4 loss 1.20966:  46%|████▋     | 13/28 [00:43<00:38,  2.60s/it]epoch 4 loss 1.21425:  46%|████▋     | 13/28 [00:43<00:38,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6695[0m
[32m  eval_f1 = 0.3857[0m
[32m  eval_mcc = 0.6508[0m
[32m  eval_precision = 0.5223[0m
[32m  eval_recall = 0.352[0m
[32m  ********************[0m
[32m  Best f1:0.3857[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21425:  50%|█████     | 14/28 [00:49<00:50,  3.60s/it]epoch 4 loss 1.2187:  50%|█████     | 14/28 [00:49<00:50,  3.60s/it] epoch 4 loss 1.2187:  54%|█████▎    | 15/28 [00:49<00:34,  2.64s/it]epoch 4 loss 1.21413:  54%|█████▎    | 15/28 [00:50<00:34,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6701[0m
[32m  eval_f1 = 0.386[0m
[32m  eval_mcc = 0.6514[0m
[32m  eval_precision = 0.5218[0m
[32m  eval_recall = 0.3523[0m
[32m  ********************[0m
[32m  Best f1:0.386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6514[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21413:  57%|█████▋    | 16/28 [00:55<00:44,  3.67s/it]epoch 4 loss 1.21035:  57%|█████▋    | 16/28 [00:56<00:44,  3.67s/it]epoch 4 loss 1.21035:  61%|██████    | 17/28 [00:56<00:29,  2.69s/it]epoch 4 loss 1.20946:  61%|██████    | 17/28 [00:56<00:29,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6703[0m
[32m  eval_f1 = 0.3873[0m
[32m  eval_mcc = 0.6515[0m
[32m  eval_precision = 0.5201[0m
[32m  eval_recall = 0.3532[0m
[32m  ********************[0m
[32m  Best f1:0.3873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20946:  64%|██████▍   | 18/28 [01:02<00:37,  3.71s/it]epoch 4 loss 1.20658:  64%|██████▍   | 18/28 [01:02<00:37,  3.71s/it]epoch 4 loss 1.20658:  68%|██████▊   | 19/28 [01:02<00:24,  2.72s/it]epoch 4 loss 1.20468:  68%|██████▊   | 19/28 [01:03<00:24,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6701[0m
[32m  eval_f1 = 0.3871[0m
[32m  eval_mcc = 0.6512[0m
[32m  eval_precision = 0.5166[0m
[32m  eval_recall = 0.353[0m

epoch 4 loss 1.20468:  71%|███████▏  | 20/28 [01:06<00:24,  3.04s/it]epoch 4 loss 1.20688:  71%|███████▏  | 20/28 [01:06<00:24,  3.04s/it]epoch 4 loss 1.20688:  75%|███████▌  | 21/28 [01:06<00:15,  2.25s/it]epoch 4 loss 1.2024:  75%|███████▌  | 21/28 [01:07<00:15,  2.25s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6698[0m
[32m  eval_f1 = 0.3869[0m
[32m  eval_mcc = 0.6509[0m
[32m  eval_precision = 0.5158[0m
[32m  eval_recall = 0.3528[0m

epoch 4 loss 1.2024:  79%|███████▊  | 22/28 [01:10<00:16,  2.71s/it]epoch 4 loss 1.20436:  79%|███████▊  | 22/28 [01:11<00:16,  2.71s/it]epoch 4 loss 1.20436:  82%|████████▏ | 23/28 [01:11<00:10,  2.02s/it]epoch 4 loss 1.20851:  82%|████████▏ | 23/28 [01:11<00:10,  2.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.67[0m
[32m  eval_f1 = 0.3868[0m
[32m  eval_mcc = 0.6511[0m
[32m  eval_precision = 0.5151[0m
[32m  eval_recall = 0.3528[0m

epoch 4 loss 1.20851:  86%|████████▌ | 24/28 [01:14<00:10,  2.56s/it]epoch 4 loss 1.20461:  86%|████████▌ | 24/28 [01:15<00:10,  2.56s/it]epoch 4 loss 1.20461:  89%|████████▉ | 25/28 [01:15<00:05,  1.91s/it]epoch 4 loss 1.20945:  89%|████████▉ | 25/28 [01:15<00:05,  1.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6701[0m
[32m  eval_f1 = 0.3868[0m
[32m  eval_mcc = 0.6512[0m
[32m  eval_precision = 0.5151[0m
[32m  eval_recall = 0.3529[0m

epoch 4 loss 1.20945:  93%|█████████▎| 26/28 [01:19<00:04,  2.48s/it]epoch 4 loss 1.208:  93%|█████████▎| 26/28 [01:19<00:04,  2.48s/it]  epoch 4 loss 1.208:  96%|█████████▋| 27/28 [01:19<00:01,  1.85s/it]epoch 4 loss 1.21288:  96%|█████████▋| 27/28 [01:19<00:01,  1.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6701[0m
[32m  eval_f1 = 0.3868[0m
[32m  eval_mcc = 0.6512[0m
[32m  eval_precision = 0.5149[0m
[32m  eval_recall = 0.3529[0m

epoch 4 loss 1.21288: 100%|██████████| 28/28 [01:23<00:00,  2.38s/it]epoch 4 loss 1.21288: 100%|██████████| 28/28 [01:23<00:00,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6703[0m
[32m  eval_f1 = 0.3873[0m
[32m  eval_mcc = 0.6515[0m
[32m  eval_precision = 0.5201[0m
[32m  eval_recall = 0.3532[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6553[0m
[32m  eval_f1 = 0.3377[0m
[32m  eval_mcc = 0.6366[0m
[32m  eval_precision = 0.459[0m
[32m  eval_recall = 0.3093[0m

