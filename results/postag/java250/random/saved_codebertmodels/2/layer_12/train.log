[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/2/layer_12', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.13629:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.13629:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.12719:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0131[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = 0.0052[0m
[32m  eval_precision = 0.005[0m
[32m  eval_recall = 0.0038[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.12719:   7%|▋         | 2/28 [00:05<01:24,  3.23s/it]epoch 0 loss 5.12756:   7%|▋         | 2/28 [00:06<01:24,  3.23s/it]epoch 0 loss 5.12756:  11%|█         | 3/28 [00:06<00:48,  1.94s/it]epoch 0 loss 5.09879:  11%|█         | 3/28 [00:06<00:48,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0236[0m
[32m  eval_f1 = 0.0035[0m
[32m  eval_mcc = 0.0102[0m
[32m  eval_precision = 0.0102[0m
[32m  eval_recall = 0.0062[0m
[32m  ********************[0m
[32m  Best f1:0.0035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.09879:  14%|█▍        | 4/28 [00:16<02:02,  5.12s/it]epoch 0 loss 5.07536:  14%|█▍        | 4/28 [00:16<02:02,  5.12s/it]epoch 0 loss 5.07536:  18%|█▊        | 5/28 [00:16<01:18,  3.42s/it]epoch 0 loss 5.03973:  18%|█▊        | 5/28 [00:16<01:18,  3.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0428[0m
[32m  eval_f1 = 0.0057[0m
[32m  eval_mcc = 0.0171[0m
[32m  eval_precision = 0.0086[0m
[32m  eval_recall = 0.0102[0m
[32m  ********************[0m
[32m  Best f1:0.0057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.03973:  21%|██▏       | 6/28 [00:26<02:01,  5.55s/it]epoch 0 loss 5.00394:  21%|██▏       | 6/28 [00:26<02:01,  5.55s/it]epoch 0 loss 5.00394:  25%|██▌       | 7/28 [00:26<01:21,  3.87s/it]epoch 0 loss 4.96176:  25%|██▌       | 7/28 [00:27<01:21,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0606[0m
[32m  eval_f1 = 0.0077[0m
[32m  eval_mcc = 0.0244[0m
[32m  eval_precision = 0.0106[0m
[32m  eval_recall = 0.0147[0m
[32m  ********************[0m
[32m  Best f1:0.0077[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.96176:  29%|██▊       | 8/28 [00:34<01:41,  5.10s/it]epoch 0 loss 4.91203:  29%|██▊       | 8/28 [00:34<01:41,  5.10s/it]epoch 0 loss 4.91203:  32%|███▏      | 9/28 [00:34<01:09,  3.64s/it]epoch 0 loss 4.86234:  32%|███▏      | 9/28 [00:35<01:09,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0743[0m
[32m  eval_f1 = 0.0096[0m
[32m  eval_mcc = 0.0345[0m
[32m  eval_precision = 0.0143[0m
[32m  eval_recall = 0.0169[0m
[32m  ********************[0m
[32m  Best f1:0.0096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.86234:  36%|███▌      | 10/28 [00:44<01:39,  5.52s/it]epoch 0 loss 4.80998:  36%|███▌      | 10/28 [00:44<01:39,  5.52s/it]epoch 0 loss 4.80998:  39%|███▉      | 11/28 [00:44<01:07,  3.96s/it]epoch 0 loss 4.74926:  39%|███▉      | 11/28 [00:45<01:07,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0997[0m
[32m  eval_f1 = 0.013[0m
[32m  eval_mcc = 0.0558[0m
[32m  eval_precision = 0.0212[0m
[32m  eval_recall = 0.0203[0m
[32m  ********************[0m
[32m  Best f1:0.013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.74926:  43%|████▎     | 12/28 [00:52<01:23,  5.21s/it]epoch 0 loss 4.68519:  43%|████▎     | 12/28 [00:53<01:23,  5.21s/it]epoch 0 loss 4.68519:  46%|████▋     | 13/28 [00:53<00:56,  3.76s/it]epoch 0 loss 4.62458:  46%|████▋     | 13/28 [00:53<00:56,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1418[0m
[32m  eval_f1 = 0.0173[0m
[32m  eval_mcc = 0.0853[0m
[32m  eval_precision = 0.0382[0m
[32m  eval_recall = 0.0245[0m
[32m  ********************[0m
[32m  Best f1:0.0173[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0853[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.62458:  50%|█████     | 14/28 [01:02<01:16,  5.46s/it]epoch 0 loss 4.5627:  50%|█████     | 14/28 [01:03<01:16,  5.46s/it] epoch 0 loss 4.5627:  54%|█████▎    | 15/28 [01:03<00:51,  3.94s/it]epoch 0 loss 4.49841:  54%|█████▎    | 15/28 [01:03<00:51,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1888[0m
[32m  eval_f1 = 0.0198[0m
[32m  eval_mcc = 0.1228[0m
[32m  eval_precision = 0.0523[0m
[32m  eval_recall = 0.0273[0m
[32m  ********************[0m
[32m  Best f1:0.0198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.49841:  57%|█████▋    | 16/28 [01:10<00:59,  4.98s/it]epoch 0 loss 4.43762:  57%|█████▋    | 16/28 [01:11<00:59,  4.98s/it]epoch 0 loss 4.43762:  61%|██████    | 17/28 [01:11<00:39,  3.61s/it]epoch 0 loss 4.38654:  61%|██████    | 17/28 [01:11<00:39,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1987[0m
[32m  eval_f1 = 0.0165[0m
[32m  eval_mcc = 0.1318[0m
[32m  eval_precision = 0.0517[0m
[32m  eval_recall = 0.0245[0m
[32m  ********************[0m
[32m  Best MCC:0.1318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.38654:  64%|██████▍   | 18/28 [01:17<00:43,  4.37s/it]epoch 0 loss 4.32572:  64%|██████▍   | 18/28 [01:17<00:43,  4.37s/it]epoch 0 loss 4.32572:  68%|██████▊   | 19/28 [01:17<00:28,  3.18s/it]epoch 0 loss 4.26953:  68%|██████▊   | 19/28 [01:18<00:28,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2164[0m
[32m  eval_f1 = 0.0198[0m
[32m  eval_mcc = 0.1531[0m
[32m  eval_precision = 0.0473[0m
[32m  eval_recall = 0.0269[0m
[32m  ********************[0m
[32m  Best f1:0.0198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.26953:  71%|███████▏  | 20/28 [01:27<00:40,  5.07s/it]epoch 0 loss 4.21056:  71%|███████▏  | 20/28 [01:27<00:40,  5.07s/it]epoch 0 loss 4.21056:  75%|███████▌  | 21/28 [01:27<00:25,  3.68s/it]epoch 0 loss 4.15767:  75%|███████▌  | 21/28 [01:27<00:25,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2605[0m
[32m  eval_f1 = 0.0275[0m
[32m  eval_mcc = 0.2053[0m
[32m  eval_precision = 0.0508[0m
[32m  eval_recall = 0.0341[0m
[32m  ********************[0m
[32m  Best f1:0.0275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.15767:  79%|███████▊  | 22/28 [01:34<00:27,  4.58s/it]epoch 0 loss 4.10878:  79%|███████▊  | 22/28 [01:34<00:27,  4.58s/it]epoch 0 loss 4.10878:  82%|████████▏ | 23/28 [01:34<00:16,  3.33s/it]epoch 0 loss 4.06256:  82%|████████▏ | 23/28 [01:35<00:16,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.312[0m
[32m  eval_f1 = 0.0375[0m
[32m  eval_mcc = 0.2609[0m
[32m  eval_precision = 0.0939[0m
[32m  eval_recall = 0.0444[0m
[32m  ********************[0m
[32m  Best f1:0.0375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.06256:  86%|████████▌ | 24/28 [01:44<00:20,  5.25s/it]epoch 0 loss 4.01421:  86%|████████▌ | 24/28 [01:44<00:20,  5.25s/it]epoch 0 loss 4.01421:  89%|████████▉ | 25/28 [01:44<00:11,  3.80s/it]epoch 0 loss 3.97233:  89%|████████▉ | 25/28 [01:45<00:11,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3516[0m
[32m  eval_f1 = 0.0766[0m
[32m  eval_mcc = 0.3159[0m
[32m  eval_precision = 0.1366[0m
[32m  eval_recall = 0.0743[0m
[32m  ********************[0m
[32m  Best f1:0.0766[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.97233:  93%|█████████▎| 26/28 [01:53<00:10,  5.23s/it]epoch 0 loss 3.92788:  93%|█████████▎| 26/28 [01:53<00:10,  5.23s/it]epoch 0 loss 3.92788:  96%|█████████▋| 27/28 [01:53<00:03,  3.79s/it]epoch 0 loss 3.87522:  96%|█████████▋| 27/28 [01:53<00:03,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4194[0m
[32m  eval_f1 = 0.1262[0m
[32m  eval_mcc = 0.3935[0m
[32m  eval_precision = 0.1886[0m
[32m  eval_recall = 0.1134[0m
[32m  ********************[0m
[32m  Best f1:0.1262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.87522: 100%|██████████| 28/28 [02:03<00:00,  5.44s/it]epoch 0 loss 3.87522: 100%|██████████| 28/28 [02:03<00:00,  4.39s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.59086:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.59086:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 1 loss 2.50165:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4979[0m
[32m  eval_f1 = 0.1564[0m
[32m  eval_mcc = 0.4691[0m
[32m  eval_precision = 0.2094[0m
[32m  eval_recall = 0.1488[0m
[32m  ********************[0m
[32m  Best f1:0.1564[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.50165:   7%|▋         | 2/28 [00:08<02:12,  5.11s/it]epoch 1 loss 2.47041:   7%|▋         | 2/28 [00:09<02:12,  5.11s/it]epoch 1 loss 2.47041:  11%|█         | 3/28 [00:09<01:14,  2.97s/it]epoch 1 loss 2.47079:  11%|█         | 3/28 [00:09<01:14,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5272[0m
[32m  eval_f1 = 0.1684[0m
[32m  eval_mcc = 0.4974[0m
[32m  eval_precision = 0.2289[0m
[32m  eval_recall = 0.1649[0m
[32m  ********************[0m
[32m  Best f1:0.1684[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4974[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.47079:  14%|█▍        | 4/28 [00:18<02:15,  5.63s/it]epoch 1 loss 2.45072:  14%|█▍        | 4/28 [00:19<02:15,  5.63s/it]epoch 1 loss 2.45072:  18%|█▊        | 5/28 [00:19<01:26,  3.75s/it]epoch 1 loss 2.42008:  18%|█▊        | 5/28 [00:19<01:26,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5385[0m
[32m  eval_f1 = 0.1766[0m
[32m  eval_mcc = 0.5106[0m
[32m  eval_precision = 0.242[0m
[32m  eval_recall = 0.1725[0m
[32m  ********************[0m
[32m  Best f1:0.1766[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42008:  21%|██▏       | 6/28 [00:26<01:47,  4.89s/it]epoch 1 loss 2.3843:  21%|██▏       | 6/28 [00:26<01:47,  4.89s/it] epoch 1 loss 2.3843:  25%|██▌       | 7/28 [00:26<01:11,  3.43s/it]epoch 1 loss 2.35897:  25%|██▌       | 7/28 [00:27<01:11,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.548[0m
[32m  eval_f1 = 0.1831[0m
[32m  eval_mcc = 0.5216[0m
[32m  eval_precision = 0.2589[0m
[32m  eval_recall = 0.1751[0m
[32m  ********************[0m
[32m  Best f1:0.1831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.35897:  29%|██▊       | 8/28 [00:32<01:25,  4.28s/it]epoch 1 loss 2.32876:  29%|██▊       | 8/28 [00:33<01:25,  4.28s/it]epoch 1 loss 2.32876:  32%|███▏      | 9/28 [00:33<00:58,  3.07s/it]epoch 1 loss 2.29111:  32%|███▏      | 9/28 [00:33<00:58,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5539[0m
[32m  eval_f1 = 0.1862[0m
[32m  eval_mcc = 0.5274[0m
[32m  eval_precision = 0.2675[0m
[32m  eval_recall = 0.1778[0m
[32m  ********************[0m
[32m  Best f1:0.1862[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29111:  36%|███▌      | 10/28 [00:39<01:09,  3.86s/it]epoch 1 loss 2.27924:  36%|███▌      | 10/28 [00:39<01:09,  3.86s/it]epoch 1 loss 2.27924:  39%|███▉      | 11/28 [00:39<00:47,  2.81s/it]epoch 1 loss 2.26493:  39%|███▉      | 11/28 [00:39<00:47,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5676[0m
[32m  eval_f1 = 0.1981[0m
[32m  eval_mcc = 0.5411[0m
[32m  eval_precision = 0.2732[0m
[32m  eval_recall = 0.1877[0m
[32m  ********************[0m
[32m  Best f1:0.1981[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5411[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26493:  43%|████▎     | 12/28 [00:45<01:01,  3.82s/it]epoch 1 loss 2.24277:  43%|████▎     | 12/28 [00:46<01:01,  3.82s/it]epoch 1 loss 2.24277:  46%|████▋     | 13/28 [00:46<00:41,  2.79s/it]epoch 1 loss 2.22622:  46%|████▋     | 13/28 [00:46<00:41,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.577[0m
[32m  eval_f1 = 0.2103[0m
[32m  eval_mcc = 0.5509[0m
[32m  eval_precision = 0.2935[0m
[32m  eval_recall = 0.199[0m
[32m  ********************[0m
[32m  Best f1:0.2103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.22622:  50%|█████     | 14/28 [00:52<00:52,  3.78s/it]epoch 1 loss 2.21728:  50%|█████     | 14/28 [00:52<00:52,  3.78s/it]epoch 1 loss 2.21728:  54%|█████▎    | 15/28 [00:52<00:36,  2.77s/it]epoch 1 loss 2.20024:  54%|█████▎    | 15/28 [00:52<00:36,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5839[0m
[32m  eval_f1 = 0.2226[0m
[32m  eval_mcc = 0.559[0m
[32m  eval_precision = 0.295[0m
[32m  eval_recall = 0.2104[0m
[32m  ********************[0m
[32m  Best f1:0.2226[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20024:  57%|█████▋    | 16/28 [00:58<00:45,  3.75s/it]epoch 1 loss 2.17365:  57%|█████▋    | 16/28 [00:58<00:45,  3.75s/it]epoch 1 loss 2.17365:  61%|██████    | 17/28 [00:58<00:30,  2.75s/it]epoch 1 loss 2.15696:  61%|██████    | 17/28 [00:59<00:30,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5925[0m
[32m  eval_f1 = 0.2283[0m
[32m  eval_mcc = 0.5697[0m
[32m  eval_precision = 0.304[0m
[32m  eval_recall = 0.216[0m
[32m  ********************[0m
[32m  Best f1:0.2283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15696:  64%|██████▍   | 18/28 [01:05<00:38,  3.81s/it]epoch 1 loss 2.13728:  64%|██████▍   | 18/28 [01:05<00:38,  3.81s/it]epoch 1 loss 2.13728:  68%|██████▊   | 19/28 [01:05<00:25,  2.79s/it]epoch 1 loss 2.11194:  68%|██████▊   | 19/28 [01:06<00:25,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5934[0m
[32m  eval_f1 = 0.2306[0m
[32m  eval_mcc = 0.575[0m
[32m  eval_precision = 0.3129[0m
[32m  eval_recall = 0.217[0m
[32m  ********************[0m
[32m  Best f1:0.2306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11194:  71%|███████▏  | 20/28 [01:11<00:29,  3.69s/it]epoch 1 loss 2.09518:  71%|███████▏  | 20/28 [01:11<00:29,  3.69s/it]epoch 1 loss 2.09518:  75%|███████▌  | 21/28 [01:11<00:18,  2.71s/it]epoch 1 loss 2.07883:  75%|███████▌  | 21/28 [01:12<00:18,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5954[0m
[32m  eval_f1 = 0.2332[0m
[32m  eval_mcc = 0.5775[0m
[32m  eval_precision = 0.3124[0m
[32m  eval_recall = 0.2188[0m
[32m  ********************[0m
[32m  Best f1:0.2332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5775[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07883:  79%|███████▊  | 22/28 [01:17<00:22,  3.72s/it]epoch 1 loss 2.06412:  79%|███████▊  | 22/28 [01:18<00:22,  3.72s/it]epoch 1 loss 2.06412:  82%|████████▏ | 23/28 [01:18<00:13,  2.73s/it]epoch 1 loss 2.04824:  82%|████████▏ | 23/28 [01:18<00:13,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6001[0m
[32m  eval_f1 = 0.2367[0m
[32m  eval_mcc = 0.5796[0m
[32m  eval_precision = 0.3179[0m
[32m  eval_recall = 0.2219[0m
[32m  ********************[0m
[32m  Best f1:0.2367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5796[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04824:  86%|████████▌ | 24/28 [01:24<00:14,  3.74s/it]epoch 1 loss 2.03278:  86%|████████▌ | 24/28 [01:24<00:14,  3.74s/it]epoch 1 loss 2.03278:  89%|████████▉ | 25/28 [01:24<00:08,  2.74s/it]epoch 1 loss 2.01811:  89%|████████▉ | 25/28 [01:25<00:08,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6022[0m
[32m  eval_f1 = 0.25[0m
[32m  eval_mcc = 0.5792[0m
[32m  eval_precision = 0.3335[0m
[32m  eval_recall = 0.2345[0m
[32m  ********************[0m
[32m  Best f1:0.25[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 1 loss 2.01811:  93%|█████████▎| 26/28 [01:29<00:06,  3.35s/it]epoch 1 loss 2.0083:  93%|█████████▎| 26/28 [01:30<00:06,  3.35s/it] epoch 1 loss 2.0083:  96%|█████████▋| 27/28 [01:30<00:02,  2.47s/it]epoch 1 loss 1.99374:  96%|█████████▋| 27/28 [01:30<00:02,  2.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6025[0m
[32m  eval_f1 = 0.2547[0m
[32m  eval_mcc = 0.5782[0m
[32m  eval_precision = 0.336[0m
[32m  eval_recall = 0.2399[0m
[32m  ********************[0m
[32m  Best f1:0.2547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 1 loss 1.99374: 100%|██████████| 28/28 [01:34<00:00,  3.16s/it]epoch 1 loss 1.99374: 100%|██████████| 28/28 [01:34<00:00,  3.39s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.4983:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.4983:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s]epoch 2 loss 1.57824:   4%|▎         | 1/28 [00:00<00:10,  2.47it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6036[0m
[32m  eval_f1 = 0.2559[0m
[32m  eval_mcc = 0.5792[0m
[32m  eval_precision = 0.3426[0m
[32m  eval_recall = 0.2416[0m
[32m  ********************[0m
[32m  Best f1:0.2559[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.57824:   7%|▋         | 2/28 [00:05<01:20,  3.08s/it]epoch 2 loss 1.57334:   7%|▋         | 2/28 [00:05<01:20,  3.08s/it]epoch 2 loss 1.57334:  11%|█         | 3/28 [00:05<00:46,  1.86s/it]epoch 2 loss 1.64065:  11%|█         | 3/28 [00:06<00:46,  1.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6062[0m
[32m  eval_f1 = 0.2554[0m
[32m  eval_mcc = 0.5822[0m
[32m  eval_precision = 0.3697[0m
[32m  eval_recall = 0.2411[0m
[32m  ********************[0m
[32m  Best MCC:0.5822[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.64065:  14%|█▍        | 4/28 [00:10<01:12,  3.04s/it]epoch 2 loss 1.63902:  14%|█▍        | 4/28 [00:11<01:12,  3.04s/it]epoch 2 loss 1.63902:  18%|█▊        | 5/28 [00:11<00:48,  2.09s/it]epoch 2 loss 1.63203:  18%|█▊        | 5/28 [00:11<00:48,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6091[0m
[32m  eval_f1 = 0.2605[0m
[32m  eval_mcc = 0.5867[0m
[32m  eval_precision = 0.3764[0m
[32m  eval_recall = 0.245[0m
[32m  ********************[0m
[32m  Best f1:0.2605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5867[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63203:  21%|██▏       | 6/28 [00:17<01:17,  3.51s/it]epoch 2 loss 1.62379:  21%|██▏       | 6/28 [00:17<01:17,  3.51s/it]epoch 2 loss 1.62379:  25%|██▌       | 7/28 [00:17<00:52,  2.50s/it]epoch 2 loss 1.63154:  25%|██▌       | 7/28 [00:18<00:52,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6138[0m
[32m  eval_f1 = 0.2631[0m
[32m  eval_mcc = 0.5948[0m
[32m  eval_precision = 0.387[0m
[32m  eval_recall = 0.2458[0m
[32m  ********************[0m
[32m  Best f1:0.2631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5948[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63154:  29%|██▊       | 8/28 [00:25<01:21,  4.09s/it]epoch 2 loss 1.6248:  29%|██▊       | 8/28 [00:25<01:21,  4.09s/it] epoch 2 loss 1.6248:  32%|███▏      | 9/28 [00:25<00:55,  2.95s/it]epoch 2 loss 1.60392:  32%|███▏      | 9/28 [00:26<00:55,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6143[0m
[32m  eval_f1 = 0.2639[0m
[32m  eval_mcc = 0.5975[0m
[32m  eval_precision = 0.3852[0m
[32m  eval_recall = 0.2455[0m
[32m  ********************[0m
[32m  Best f1:0.2639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60392:  36%|███▌      | 10/28 [00:32<01:15,  4.21s/it]epoch 2 loss 1.6005:  36%|███▌      | 10/28 [00:33<01:15,  4.21s/it] epoch 2 loss 1.6005:  39%|███▉      | 11/28 [00:33<00:51,  3.05s/it]epoch 2 loss 1.59391:  39%|███▉      | 11/28 [00:33<00:51,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6157[0m
[32m  eval_f1 = 0.2661[0m
[32m  eval_mcc = 0.5973[0m
[32m  eval_precision = 0.3803[0m
[32m  eval_recall = 0.2473[0m
[32m  ********************[0m
[32m  Best f1:0.2661[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.59391:  43%|████▎     | 12/28 [00:40<01:11,  4.48s/it]epoch 2 loss 1.59374:  43%|████▎     | 12/28 [00:41<01:11,  4.48s/it]epoch 2 loss 1.59374:  46%|████▋     | 13/28 [00:41<00:48,  3.25s/it]epoch 2 loss 1.57962:  46%|████▋     | 13/28 [00:41<00:48,  3.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6163[0m
[32m  eval_f1 = 0.2736[0m
[32m  eval_mcc = 0.5952[0m
[32m  eval_precision = 0.4248[0m
[32m  eval_recall = 0.2532[0m
[32m  ********************[0m
[32m  Best f1:0.2736[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.57962:  50%|█████     | 14/28 [00:46<00:52,  3.76s/it]epoch 2 loss 1.58096:  50%|█████     | 14/28 [00:46<00:52,  3.76s/it]epoch 2 loss 1.58096:  54%|█████▎    | 15/28 [00:46<00:35,  2.75s/it]epoch 2 loss 1.58052:  54%|█████▎    | 15/28 [00:47<00:35,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6182[0m
[32m  eval_f1 = 0.2894[0m
[32m  eval_mcc = 0.5955[0m
[32m  eval_precision = 0.4204[0m
[32m  eval_recall = 0.2669[0m
[32m  ********************[0m
[32m  Best f1:0.2894[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.58052:  57%|█████▋    | 16/28 [00:51<00:41,  3.42s/it]epoch 2 loss 1.57771:  57%|█████▋    | 16/28 [00:51<00:41,  3.42s/it]epoch 2 loss 1.57771:  61%|██████    | 17/28 [00:51<00:27,  2.51s/it]epoch 2 loss 1.56764:  61%|██████    | 17/28 [00:52<00:27,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6196[0m
[32m  eval_f1 = 0.2942[0m
[32m  eval_mcc = 0.5966[0m
[32m  eval_precision = 0.4222[0m
[32m  eval_recall = 0.273[0m
[32m  ********************[0m
[32m  Best f1:0.2942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.56764:  64%|██████▍   | 18/28 [00:56<00:32,  3.25s/it]epoch 2 loss 1.56575:  64%|██████▍   | 18/28 [00:57<00:32,  3.25s/it]epoch 2 loss 1.56575:  68%|██████▊   | 19/28 [00:57<00:21,  2.40s/it]epoch 2 loss 1.56063:  68%|██████▊   | 19/28 [00:57<00:21,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6225[0m
[32m  eval_f1 = 0.3006[0m
[32m  eval_mcc = 0.5997[0m
[32m  eval_precision = 0.421[0m
[32m  eval_recall = 0.2791[0m
[32m  ********************[0m
[32m  Best f1:0.3006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5997[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56063:  71%|███████▏  | 20/28 [01:03<00:27,  3.44s/it]epoch 2 loss 1.55788:  71%|███████▏  | 20/28 [01:03<00:27,  3.44s/it]epoch 2 loss 1.55788:  75%|███████▌  | 21/28 [01:03<00:17,  2.53s/it]epoch 2 loss 1.55405:  75%|███████▌  | 21/28 [01:04<00:17,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6254[0m
[32m  eval_f1 = 0.3046[0m
[32m  eval_mcc = 0.6029[0m
[32m  eval_precision = 0.4203[0m
[32m  eval_recall = 0.2826[0m
[32m  ********************[0m
[32m  Best f1:0.3046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55405:  79%|███████▊  | 22/28 [01:09<00:21,  3.61s/it]epoch 2 loss 1.55786:  79%|███████▊  | 22/28 [01:10<00:21,  3.61s/it]epoch 2 loss 1.55786:  82%|████████▏ | 23/28 [01:10<00:13,  2.65s/it]epoch 2 loss 1.55729:  82%|████████▏ | 23/28 [01:10<00:13,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6282[0m
[32m  eval_f1 = 0.3084[0m
[32m  eval_mcc = 0.6064[0m
[32m  eval_precision = 0.42[0m
[32m  eval_recall = 0.2854[0m
[32m  ********************[0m
[32m  Best f1:0.3084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55729:  86%|████████▌ | 24/28 [01:16<00:14,  3.68s/it]epoch 2 loss 1.55373:  86%|████████▌ | 24/28 [01:16<00:14,  3.68s/it]epoch 2 loss 1.55373:  89%|████████▉ | 25/28 [01:16<00:08,  2.70s/it]epoch 2 loss 1.55661:  89%|████████▉ | 25/28 [01:17<00:08,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6305[0m
[32m  eval_f1 = 0.3111[0m
[32m  eval_mcc = 0.6095[0m
[32m  eval_precision = 0.4222[0m
[32m  eval_recall = 0.2864[0m
[32m  ********************[0m
[32m  Best f1:0.3111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6095[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55661:  93%|█████████▎| 26/28 [01:22<00:07,  3.72s/it]epoch 2 loss 1.55504:  93%|█████████▎| 26/28 [01:23<00:07,  3.72s/it]epoch 2 loss 1.55504:  96%|█████████▋| 27/28 [01:23<00:02,  2.73s/it]epoch 2 loss 1.55665:  96%|█████████▋| 27/28 [01:23<00:02,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6305[0m
[32m  eval_f1 = 0.311[0m
[32m  eval_mcc = 0.6097[0m
[32m  eval_precision = 0.4225[0m
[32m  eval_recall = 0.2856[0m
[32m  ********************[0m
[32m  Best MCC:0.6097[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55665: 100%|██████████| 28/28 [01:29<00:00,  3.79s/it]epoch 2 loss 1.55665: 100%|██████████| 28/28 [01:29<00:00,  3.19s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.46154:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.46154:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 3 loss 1.53081:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6311[0m
[32m  eval_f1 = 0.3109[0m
[32m  eval_mcc = 0.611[0m
[32m  eval_precision = 0.4275[0m
[32m  eval_recall = 0.2852[0m
[32m  ********************[0m
[32m  Best MCC:0.611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.53081:   7%|▋         | 2/28 [00:05<01:20,  3.11s/it]epoch 3 loss 1.50858:   7%|▋         | 2/28 [00:05<01:20,  3.11s/it]epoch 3 loss 1.50858:  11%|█         | 3/28 [00:05<00:46,  1.87s/it]epoch 3 loss 1.49802:  11%|█         | 3/28 [00:06<00:46,  1.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6317[0m
[32m  eval_f1 = 0.3123[0m
[32m  eval_mcc = 0.6116[0m
[32m  eval_precision = 0.4302[0m
[32m  eval_recall = 0.287[0m
[32m  ********************[0m
[32m  Best f1:0.3123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.49802:  14%|█▍        | 4/28 [00:11<01:22,  3.43s/it]epoch 3 loss 1.48777:  14%|█▍        | 4/28 [00:12<01:22,  3.43s/it]epoch 3 loss 1.48777:  18%|█▊        | 5/28 [00:12<00:53,  2.35s/it]epoch 3 loss 1.48028:  18%|█▊        | 5/28 [00:12<00:53,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6322[0m
[32m  eval_f1 = 0.3142[0m
[32m  eval_mcc = 0.6116[0m
[32m  eval_precision = 0.43[0m
[32m  eval_recall = 0.2892[0m
[32m  ********************[0m
[32m  Best f1:0.3142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48028:  21%|██▏       | 6/28 [00:17<01:18,  3.55s/it]epoch 3 loss 1.46627:  21%|██▏       | 6/28 [00:18<01:18,  3.55s/it]epoch 3 loss 1.46627:  25%|██▌       | 7/28 [00:18<00:53,  2.52s/it]epoch 3 loss 1.46728:  25%|██▌       | 7/28 [00:18<00:53,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6346[0m
[32m  eval_f1 = 0.3171[0m
[32m  eval_mcc = 0.6134[0m
[32m  eval_precision = 0.4407[0m
[32m  eval_recall = 0.2927[0m
[32m  ********************[0m
[32m  Best f1:0.3171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6134[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46728:  29%|██▊       | 8/28 [00:24<01:16,  3.83s/it]epoch 3 loss 1.46352:  29%|██▊       | 8/28 [00:25<01:16,  3.83s/it]epoch 3 loss 1.46352:  32%|███▏      | 9/28 [00:25<00:52,  2.76s/it]epoch 3 loss 1.45847:  32%|███▏      | 9/28 [00:25<00:52,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6362[0m
[32m  eval_f1 = 0.3198[0m
[32m  eval_mcc = 0.6148[0m
[32m  eval_precision = 0.4281[0m
[32m  eval_recall = 0.2959[0m
[32m  ********************[0m
[32m  Best f1:0.3198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45847:  36%|███▌      | 10/28 [00:32<01:13,  4.08s/it]epoch 3 loss 1.45426:  36%|███▌      | 10/28 [00:32<01:13,  4.08s/it]epoch 3 loss 1.45426:  39%|███▉      | 11/28 [00:32<00:50,  2.96s/it]epoch 3 loss 1.45167:  39%|███▉      | 11/28 [00:33<00:50,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.636[0m
[32m  eval_f1 = 0.3213[0m
[32m  eval_mcc = 0.6145[0m
[32m  eval_precision = 0.4293[0m
[32m  eval_recall = 0.2973[0m
[32m  ********************[0m
[32m  Best f1:0.3213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.45167:  43%|████▎     | 12/28 [00:37<00:57,  3.57s/it]epoch 3 loss 1.45619:  43%|████▎     | 12/28 [00:38<00:57,  3.57s/it]epoch 3 loss 1.45619:  46%|████▋     | 13/28 [00:38<00:39,  2.61s/it]epoch 3 loss 1.45504:  46%|████▋     | 13/28 [00:38<00:39,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6353[0m
[32m  eval_f1 = 0.3218[0m
[32m  eval_mcc = 0.6139[0m
[32m  eval_precision = 0.4275[0m
[32m  eval_recall = 0.298[0m
[32m  ********************[0m
[32m  Best f1:0.3218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.45504:  50%|█████     | 14/28 [00:46<00:58,  4.18s/it]epoch 3 loss 1.46396:  50%|█████     | 14/28 [00:46<00:58,  4.18s/it]epoch 3 loss 1.46396:  54%|█████▎    | 15/28 [00:46<00:39,  3.05s/it]epoch 3 loss 1.45808:  54%|█████▎    | 15/28 [00:46<00:39,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6358[0m
[32m  eval_f1 = 0.3217[0m
[32m  eval_mcc = 0.6143[0m
[32m  eval_precision = 0.424[0m
[32m  eval_recall = 0.2983[0m

epoch 3 loss 1.45808:  57%|█████▋    | 16/28 [00:50<00:39,  3.27s/it]epoch 3 loss 1.45866:  57%|█████▋    | 16/28 [00:50<00:39,  3.27s/it]epoch 3 loss 1.45866:  61%|██████    | 17/28 [00:50<00:26,  2.41s/it]epoch 3 loss 1.45629:  61%|██████    | 17/28 [00:51<00:26,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6377[0m
[32m  eval_f1 = 0.324[0m
[32m  eval_mcc = 0.6162[0m
[32m  eval_precision = 0.4241[0m
[32m  eval_recall = 0.3003[0m
[32m  ********************[0m
[32m  Best f1:0.324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45629:  64%|██████▍   | 18/28 [01:00<00:47,  4.78s/it]epoch 3 loss 1.45726:  64%|██████▍   | 18/28 [01:01<00:47,  4.78s/it]epoch 3 loss 1.45726:  68%|██████▊   | 19/28 [01:01<00:31,  3.47s/it]epoch 3 loss 1.46271:  68%|██████▊   | 19/28 [01:01<00:31,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6402[0m
[32m  eval_f1 = 0.3257[0m
[32m  eval_mcc = 0.6192[0m
[32m  eval_precision = 0.4327[0m
[32m  eval_recall = 0.3015[0m
[32m  ********************[0m
[32m  Best f1:0.3257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46271:  71%|███████▏  | 20/28 [01:11<00:42,  5.33s/it]epoch 3 loss 1.45944:  71%|███████▏  | 20/28 [01:11<00:42,  5.33s/it]epoch 3 loss 1.45944:  75%|███████▌  | 21/28 [01:11<00:26,  3.86s/it]epoch 3 loss 1.45856:  75%|███████▌  | 21/28 [01:11<00:26,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6413[0m
[32m  eval_f1 = 0.3267[0m
[32m  eval_mcc = 0.6208[0m
[32m  eval_precision = 0.433[0m
[32m  eval_recall = 0.3023[0m
[32m  ********************[0m
[32m  Best f1:0.3267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45856:  79%|███████▊  | 22/28 [01:19<00:30,  5.15s/it]epoch 3 loss 1.45617:  79%|███████▊  | 22/28 [01:20<00:30,  5.15s/it]epoch 3 loss 1.45617:  82%|████████▏ | 23/28 [01:20<00:18,  3.73s/it]epoch 3 loss 1.45556:  82%|████████▏ | 23/28 [01:20<00:18,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6414[0m
[32m  eval_f1 = 0.3279[0m
[32m  eval_mcc = 0.6213[0m
[32m  eval_precision = 0.4363[0m
[32m  eval_recall = 0.3029[0m
[32m  ********************[0m
[32m  Best f1:0.3279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45556:  86%|████████▌ | 24/28 [01:29<00:21,  5.45s/it]epoch 3 loss 1.45536:  86%|████████▌ | 24/28 [01:29<00:21,  5.45s/it]epoch 3 loss 1.45536:  89%|████████▉ | 25/28 [01:29<00:11,  3.94s/it]epoch 3 loss 1.44858:  89%|████████▉ | 25/28 [01:30<00:11,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6422[0m
[32m  eval_f1 = 0.3286[0m
[32m  eval_mcc = 0.6225[0m
[32m  eval_precision = 0.4369[0m
[32m  eval_recall = 0.3032[0m
[32m  ********************[0m
[32m  Best f1:0.3286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44858:  93%|█████████▎| 26/28 [01:38<00:10,  5.46s/it]epoch 3 loss 1.44921:  93%|█████████▎| 26/28 [01:39<00:10,  5.46s/it]epoch 3 loss 1.44921:  96%|█████████▋| 27/28 [01:39<00:03,  3.95s/it]epoch 3 loss 1.45111:  96%|█████████▋| 27/28 [01:39<00:03,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6423[0m
[32m  eval_f1 = 0.3294[0m
[32m  eval_mcc = 0.6225[0m
[32m  eval_precision = 0.4363[0m
[32m  eval_recall = 0.3038[0m
[32m  ********************[0m
[32m  Best f1:0.3294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45111: 100%|██████████| 28/28 [01:48<00:00,  5.48s/it]epoch 3 loss 1.45111: 100%|██████████| 28/28 [01:48<00:00,  3.87s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.36985:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.36985:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 4 loss 1.42558:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6425[0m
[32m  eval_f1 = 0.3296[0m
[32m  eval_mcc = 0.6224[0m
[32m  eval_precision = 0.437[0m
[32m  eval_recall = 0.3043[0m
[32m  ********************[0m
[32m  Best f1:0.3296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.42558:   7%|▋         | 2/28 [00:07<01:47,  4.12s/it]epoch 4 loss 1.3963:   7%|▋         | 2/28 [00:07<01:47,  4.12s/it] epoch 4 loss 1.3963:  11%|█         | 3/28 [00:07<01:00,  2.43s/it]epoch 4 loss 1.42519:  11%|█         | 3/28 [00:07<01:00,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6424[0m
[32m  eval_f1 = 0.3294[0m
[32m  eval_mcc = 0.622[0m
[32m  eval_precision = 0.4374[0m
[32m  eval_recall = 0.3042[0m

epoch 4 loss 1.42519:  14%|█▍        | 4/28 [00:11<01:11,  2.97s/it]epoch 4 loss 1.41597:  14%|█▍        | 4/28 [00:11<01:11,  2.97s/it]epoch 4 loss 1.41597:  18%|█▊        | 5/28 [00:11<00:47,  2.04s/it]epoch 4 loss 1.41142:  18%|█▊        | 5/28 [00:12<00:47,  2.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6432[0m
[32m  eval_f1 = 0.3296[0m
[32m  eval_mcc = 0.6227[0m
[32m  eval_precision = 0.4391[0m
[32m  eval_recall = 0.3045[0m
[32m  ********************[0m
[32m  Best MCC:0.6227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41142:  21%|██▏       | 6/28 [00:17<01:15,  3.45s/it]epoch 4 loss 1.41535:  21%|██▏       | 6/28 [00:18<01:15,  3.45s/it]epoch 4 loss 1.41535:  25%|██▌       | 7/28 [00:18<00:51,  2.46s/it]epoch 4 loss 1.41208:  25%|██▌       | 7/28 [00:18<00:51,  2.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6436[0m
[32m  eval_f1 = 0.3318[0m
[32m  eval_mcc = 0.6229[0m
[32m  eval_precision = 0.4518[0m
[32m  eval_recall = 0.3059[0m
[32m  ********************[0m
[32m  Best f1:0.3318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41208:  29%|██▊       | 8/28 [00:27<01:33,  4.67s/it]epoch 4 loss 1.4065:  29%|██▊       | 8/28 [00:28<01:33,  4.67s/it] epoch 4 loss 1.4065:  32%|███▏      | 9/28 [00:28<01:03,  3.34s/it]epoch 4 loss 1.40385:  32%|███▏      | 9/28 [00:28<01:03,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.644[0m
[32m  eval_f1 = 0.3332[0m
[32m  eval_mcc = 0.6233[0m
[32m  eval_precision = 0.4507[0m
[32m  eval_recall = 0.3065[0m
[32m  ********************[0m
[32m  Best f1:0.3332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40385:  36%|███▌      | 10/28 [00:35<01:23,  4.63s/it]epoch 4 loss 1.40459:  36%|███▌      | 10/28 [00:36<01:23,  4.63s/it]epoch 4 loss 1.40459:  39%|███▉      | 11/28 [00:36<00:56,  3.34s/it]epoch 4 loss 1.41364:  39%|███▉      | 11/28 [00:36<00:56,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6441[0m
[32m  eval_f1 = 0.3331[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.4506[0m
[32m  eval_recall = 0.3064[0m
[32m  ********************[0m
[32m  Best MCC:0.6235[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41364:  43%|████▎     | 12/28 [00:41<01:03,  3.95s/it]epoch 4 loss 1.4089:  43%|████▎     | 12/28 [00:41<01:03,  3.95s/it] epoch 4 loss 1.4089:  46%|████▋     | 13/28 [00:41<00:43,  2.87s/it]epoch 4 loss 1.41373:  46%|████▋     | 13/28 [00:42<00:43,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6444[0m
[32m  eval_f1 = 0.3336[0m
[32m  eval_mcc = 0.6237[0m
[32m  eval_precision = 0.4504[0m
[32m  eval_recall = 0.3067[0m
[32m  ********************[0m
[32m  Best f1:0.3336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41373:  50%|█████     | 14/28 [00:48<00:54,  3.92s/it]epoch 4 loss 1.41781:  50%|█████     | 14/28 [00:48<00:54,  3.92s/it]epoch 4 loss 1.41781:  54%|█████▎    | 15/28 [00:48<00:37,  2.86s/it]epoch 4 loss 1.41245:  54%|█████▎    | 15/28 [00:48<00:37,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6443[0m
[32m  eval_f1 = 0.3345[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.4501[0m
[32m  eval_recall = 0.3075[0m
[32m  ********************[0m
[32m  Best f1:0.3345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.41245:  57%|█████▋    | 16/28 [00:53<00:42,  3.53s/it]epoch 4 loss 1.40797:  57%|█████▋    | 16/28 [00:54<00:42,  3.53s/it]epoch 4 loss 1.40797:  61%|██████    | 17/28 [00:54<00:28,  2.59s/it]epoch 4 loss 1.40593:  61%|██████    | 17/28 [00:54<00:28,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6447[0m
[32m  eval_f1 = 0.3355[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.4511[0m
[32m  eval_recall = 0.3083[0m
[32m  ********************[0m
[32m  Best f1:0.3355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40593:  64%|██████▍   | 18/28 [01:03<00:45,  4.51s/it]epoch 4 loss 1.40205:  64%|██████▍   | 18/28 [01:03<00:45,  4.51s/it]epoch 4 loss 1.40205:  68%|██████▊   | 19/28 [01:03<00:29,  3.29s/it]epoch 4 loss 1.40098:  68%|██████▊   | 19/28 [01:03<00:29,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6448[0m
[32m  eval_f1 = 0.3355[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.4522[0m
[32m  eval_recall = 0.308[0m
[32m  ********************[0m
[32m  Best MCC:0.6239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40098:  71%|███████▏  | 20/28 [01:09<00:33,  4.13s/it]epoch 4 loss 1.40302:  71%|███████▏  | 20/28 [01:10<00:33,  4.13s/it]epoch 4 loss 1.40302:  75%|███████▌  | 21/28 [01:10<00:21,  3.02s/it]epoch 4 loss 1.39744:  75%|███████▌  | 21/28 [01:10<00:21,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6448[0m
[32m  eval_f1 = 0.3359[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.4536[0m
[32m  eval_recall = 0.3082[0m
[32m  ********************[0m
[32m  Best f1:0.3359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39744:  79%|███████▊  | 22/28 [01:16<00:24,  4.06s/it]epoch 4 loss 1.40084:  79%|███████▊  | 22/28 [01:16<00:24,  4.06s/it]epoch 4 loss 1.40084:  82%|████████▏ | 23/28 [01:16<00:14,  2.97s/it]epoch 4 loss 1.40563:  82%|████████▏ | 23/28 [01:17<00:14,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6451[0m
[32m  eval_f1 = 0.3355[0m
[32m  eval_mcc = 0.6243[0m
[32m  eval_precision = 0.453[0m
[32m  eval_recall = 0.3079[0m
[32m  ********************[0m
[32m  Best MCC:0.6243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40563:  86%|████████▌ | 24/28 [01:21<00:14,  3.57s/it]epoch 4 loss 1.40282:  86%|████████▌ | 24/28 [01:22<00:14,  3.57s/it]epoch 4 loss 1.40282:  89%|████████▉ | 25/28 [01:22<00:07,  2.62s/it]epoch 4 loss 1.40769:  89%|████████▉ | 25/28 [01:22<00:07,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.645[0m
[32m  eval_f1 = 0.3357[0m
[32m  eval_mcc = 0.6242[0m
[32m  eval_precision = 0.4534[0m
[32m  eval_recall = 0.3078[0m

epoch 4 loss 1.40769:  93%|█████████▎| 26/28 [01:26<00:05,  2.97s/it]epoch 4 loss 1.40606:  93%|█████████▎| 26/28 [01:26<00:05,  2.97s/it]epoch 4 loss 1.40606:  96%|█████████▋| 27/28 [01:26<00:02,  2.20s/it]epoch 4 loss 1.41087:  96%|█████████▋| 27/28 [01:26<00:02,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6451[0m
[32m  eval_f1 = 0.3358[0m
[32m  eval_mcc = 0.6243[0m
[32m  eval_precision = 0.4534[0m
[32m  eval_recall = 0.308[0m
[32m  ********************[0m
[32m  Best MCC:0.6243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41087: 100%|██████████| 28/28 [01:31<00:00,  2.98s/it]epoch 4 loss 1.41087: 100%|██████████| 28/28 [01:31<00:00,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.72it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6448[0m
[32m  eval_f1 = 0.3359[0m
[32m  eval_mcc = 0.6239[0m
[32m  eval_precision = 0.4536[0m
[32m  eval_recall = 0.3082[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6299[0m
[32m  eval_f1 = 0.3009[0m
[32m  eval_mcc = 0.6094[0m
[32m  eval_precision = 0.4068[0m
[32m  eval_recall = 0.2769[0m

