[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/2/layer_10', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.21889:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.21889:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.2204:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0154[0m
[32m  eval_f1 = 0.0039[0m
[32m  eval_mcc = 0.0096[0m
[32m  eval_precision = 0.0082[0m
[32m  eval_recall = 0.0089[0m
[32m  ********************[0m
[32m  Best f1:0.0039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.2204:   7%|▋         | 2/28 [00:05<01:24,  3.24s/it]epoch 0 loss 5.22006:   7%|▋         | 2/28 [00:06<01:24,  3.24s/it]epoch 0 loss 5.22006:  11%|█         | 3/28 [00:06<00:48,  1.94s/it]epoch 0 loss 5.20066:  11%|█         | 3/28 [00:06<00:48,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0204[0m
[32m  eval_f1 = 0.0037[0m
[32m  eval_mcc = 0.0107[0m
[32m  eval_precision = 0.0065[0m
[32m  eval_recall = 0.009[0m
[32m  ********************[0m
[32m  Best MCC:0.0107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20066:  14%|█▍        | 4/28 [00:11<01:16,  3.17s/it]epoch 0 loss 5.1779:  14%|█▍        | 4/28 [00:11<01:16,  3.17s/it] epoch 0 loss 5.1779:  18%|█▊        | 5/28 [00:11<00:49,  2.17s/it]epoch 0 loss 5.14521:  18%|█▊        | 5/28 [00:11<00:49,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0364[0m
[32m  eval_f1 = 0.0043[0m
[32m  eval_mcc = 0.0152[0m
[32m  eval_precision = 0.0058[0m
[32m  eval_recall = 0.0119[0m
[32m  ********************[0m
[32m  Best f1:0.0043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0152[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.14521:  21%|██▏       | 6/28 [00:20<01:34,  4.30s/it]epoch 0 loss 5.10851:  21%|██▏       | 6/28 [00:20<01:34,  4.30s/it]epoch 0 loss 5.10851:  25%|██▌       | 7/28 [00:20<01:03,  3.03s/it]epoch 0 loss 5.067:  25%|██▌       | 7/28 [00:20<01:03,  3.03s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.058[0m
[32m  eval_f1 = 0.0059[0m
[32m  eval_mcc = 0.0242[0m
[32m  eval_precision = 0.0166[0m
[32m  eval_recall = 0.015[0m
[32m  ********************[0m
[32m  Best f1:0.0059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.067:  29%|██▊       | 8/28 [00:28<01:29,  4.48s/it]epoch 0 loss 5.01718:  29%|██▊       | 8/28 [00:28<01:29,  4.48s/it]epoch 0 loss 5.01718:  32%|███▏      | 9/28 [00:28<01:01,  3.21s/it]epoch 0 loss 4.96776:  32%|███▏      | 9/28 [00:28<01:01,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0771[0m
[32m  eval_f1 = 0.009[0m
[32m  eval_mcc = 0.0363[0m
[32m  eval_precision = 0.0184[0m
[32m  eval_recall = 0.0192[0m
[32m  ********************[0m
[32m  Best f1:0.009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0363[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.96776:  36%|███▌      | 10/28 [00:37<01:28,  4.92s/it]epoch 0 loss 4.91428:  36%|███▌      | 10/28 [00:37<01:28,  4.92s/it]epoch 0 loss 4.91428:  39%|███▉      | 11/28 [00:37<01:00,  3.54s/it]epoch 0 loss 4.85239:  39%|███▉      | 11/28 [00:38<01:00,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0953[0m
[32m  eval_f1 = 0.0127[0m
[32m  eval_mcc = 0.0489[0m
[32m  eval_precision = 0.0228[0m
[32m  eval_recall = 0.0215[0m
[32m  ********************[0m
[32m  Best f1:0.0127[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.85239:  43%|████▎     | 12/28 [00:45<01:17,  4.86s/it]epoch 0 loss 4.78674:  43%|████▎     | 12/28 [00:45<01:17,  4.86s/it]epoch 0 loss 4.78674:  46%|████▋     | 13/28 [00:45<00:52,  3.52s/it]epoch 0 loss 4.72524:  46%|████▋     | 13/28 [00:46<00:52,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1171[0m
[32m  eval_f1 = 0.0169[0m
[32m  eval_mcc = 0.0637[0m
[32m  eval_precision = 0.036[0m
[32m  eval_recall = 0.0229[0m
[32m  ********************[0m
[32m  Best f1:0.0169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.72524:  50%|█████     | 14/28 [00:54<01:11,  5.09s/it]epoch 0 loss 4.66092:  50%|█████     | 14/28 [00:55<01:11,  5.09s/it]epoch 0 loss 4.66092:  54%|█████▎    | 15/28 [00:55<00:47,  3.68s/it]epoch 0 loss 4.59475:  54%|█████▎    | 15/28 [00:55<00:47,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1451[0m
[32m  eval_f1 = 0.02[0m
[32m  eval_mcc = 0.0818[0m
[32m  eval_precision = 0.0557[0m
[32m  eval_recall = 0.0247[0m
[32m  ********************[0m
[32m  Best f1:0.02[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0818[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.59475:  57%|█████▋    | 16/28 [01:03<01:00,  5.06s/it]epoch 0 loss 4.53146:  57%|█████▋    | 16/28 [01:03<01:00,  5.06s/it]epoch 0 loss 4.53146:  61%|██████    | 17/28 [01:03<00:40,  3.66s/it]epoch 0 loss 4.47557:  61%|██████    | 17/28 [01:04<00:40,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1824[0m
[32m  eval_f1 = 0.0247[0m
[32m  eval_mcc = 0.118[0m
[32m  eval_precision = 0.068[0m
[32m  eval_recall = 0.0268[0m
[32m  ********************[0m
[32m  Best f1:0.0247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.47557:  64%|██████▍   | 18/28 [01:12<00:51,  5.12s/it]epoch 0 loss 4.41057:  64%|██████▍   | 18/28 [01:12<00:51,  5.12s/it]epoch 0 loss 4.41057:  68%|██████▊   | 19/28 [01:12<00:33,  3.71s/it]epoch 0 loss 4.35004:  68%|██████▊   | 19/28 [01:13<00:33,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.23[0m
[32m  eval_f1 = 0.0286[0m
[32m  eval_mcc = 0.1709[0m
[32m  eval_precision = 0.0666[0m
[32m  eval_recall = 0.0318[0m
[32m  ********************[0m
[32m  Best f1:0.0286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1709[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.35004:  71%|███████▏  | 20/28 [01:20<00:39,  4.97s/it]epoch 0 loss 4.28685:  71%|███████▏  | 20/28 [01:20<00:39,  4.97s/it]epoch 0 loss 4.28685:  75%|███████▌  | 21/28 [01:20<00:25,  3.60s/it]epoch 0 loss 4.22939:  75%|███████▌  | 21/28 [01:21<00:25,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2717[0m
[32m  eval_f1 = 0.0364[0m
[32m  eval_mcc = 0.223[0m
[32m  eval_precision = 0.0701[0m
[32m  eval_recall = 0.04[0m
[32m  ********************[0m
[32m  Best f1:0.0364[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.22939:  79%|███████▊  | 22/28 [01:29<00:30,  5.11s/it]epoch 0 loss 4.17633:  79%|███████▊  | 22/28 [01:30<00:30,  5.11s/it]epoch 0 loss 4.17633:  82%|████████▏ | 23/28 [01:30<00:18,  3.70s/it]epoch 0 loss 4.1261:  82%|████████▏ | 23/28 [01:30<00:18,  3.70s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3046[0m
[32m  eval_f1 = 0.0413[0m
[32m  eval_mcc = 0.2587[0m
[32m  eval_precision = 0.0995[0m
[32m  eval_recall = 0.0464[0m
[32m  ********************[0m
[32m  Best f1:0.0413[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.1261:  86%|████████▌ | 24/28 [01:38<00:20,  5.15s/it]epoch 0 loss 4.0739:  86%|████████▌ | 24/28 [01:38<00:20,  5.15s/it]epoch 0 loss 4.0739:  89%|████████▉ | 25/28 [01:38<00:11,  3.73s/it]epoch 0 loss 4.02878:  89%|████████▉ | 25/28 [01:39<00:11,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.34[0m
[32m  eval_f1 = 0.0785[0m
[32m  eval_mcc = 0.298[0m
[32m  eval_precision = 0.1471[0m
[32m  eval_recall = 0.0769[0m
[32m  ********************[0m
[32m  Best f1:0.0785[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.02878:  93%|█████████▎| 26/28 [01:47<00:10,  5.19s/it]epoch 0 loss 3.98084:  93%|█████████▎| 26/28 [01:48<00:10,  5.19s/it]epoch 0 loss 3.98084:  96%|█████████▋| 27/28 [01:48<00:03,  3.76s/it]epoch 0 loss 3.92473:  96%|█████████▋| 27/28 [01:48<00:03,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4078[0m
[32m  eval_f1 = 0.1263[0m
[32m  eval_mcc = 0.3751[0m
[32m  eval_precision = 0.1972[0m
[32m  eval_recall = 0.1163[0m
[32m  ********************[0m
[32m  Best f1:0.1263[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3751[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.92473: 100%|██████████| 28/28 [01:55<00:00,  5.01s/it]epoch 0 loss 3.92473: 100%|██████████| 28/28 [01:55<00:00,  4.14s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.53373:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.53373:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.44419:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4847[0m
[32m  eval_f1 = 0.1594[0m
[32m  eval_mcc = 0.4534[0m
[32m  eval_precision = 0.2115[0m
[32m  eval_recall = 0.1525[0m
[32m  ********************[0m
[32m  Best f1:0.1594[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4534[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.44419:   7%|▋         | 2/28 [00:09<02:25,  5.59s/it]epoch 1 loss 2.40972:   7%|▋         | 2/28 [00:10<02:25,  5.59s/it]epoch 1 loss 2.40972:  11%|█         | 3/28 [00:10<01:20,  3.23s/it]epoch 1 loss 2.41155:  11%|█         | 3/28 [00:10<01:20,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5345[0m
[32m  eval_f1 = 0.1766[0m
[32m  eval_mcc = 0.5062[0m
[32m  eval_precision = 0.2279[0m
[32m  eval_recall = 0.1738[0m
[32m  ********************[0m
[32m  Best f1:0.1766[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.41155:  14%|█▍        | 4/28 [00:16<01:48,  4.54s/it]epoch 1 loss 2.39144:  14%|█▍        | 4/28 [00:17<01:48,  4.54s/it]epoch 1 loss 2.39144:  18%|█▊        | 5/28 [00:17<01:10,  3.06s/it]epoch 1 loss 2.35861:  18%|█▊        | 5/28 [00:17<01:10,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5487[0m
[32m  eval_f1 = 0.182[0m
[32m  eval_mcc = 0.5238[0m
[32m  eval_precision = 0.2609[0m
[32m  eval_recall = 0.1789[0m
[32m  ********************[0m
[32m  Best f1:0.182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.35861:  21%|██▏       | 6/28 [00:23<01:31,  4.16s/it]epoch 1 loss 2.32202:  21%|██▏       | 6/28 [00:23<01:31,  4.16s/it]epoch 1 loss 2.32202:  25%|██▌       | 7/28 [00:23<01:01,  2.94s/it]epoch 1 loss 2.29578:  25%|██▌       | 7/28 [00:24<01:01,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5586[0m
[32m  eval_f1 = 0.1927[0m
[32m  eval_mcc = 0.5345[0m
[32m  eval_precision = 0.2648[0m
[32m  eval_recall = 0.185[0m
[32m  ********************[0m
[32m  Best f1:0.1927[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29578:  29%|██▊       | 8/28 [00:30<01:20,  4.04s/it]epoch 1 loss 2.26455:  29%|██▊       | 8/28 [00:30<01:20,  4.04s/it]epoch 1 loss 2.26455:  32%|███▏      | 9/28 [00:30<00:55,  2.91s/it]epoch 1 loss 2.22519:  32%|███▏      | 9/28 [00:30<00:55,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5638[0m
[32m  eval_f1 = 0.2012[0m
[32m  eval_mcc = 0.5381[0m
[32m  eval_precision = 0.2707[0m
[32m  eval_recall = 0.1928[0m
[32m  ********************[0m
[32m  Best f1:0.2012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5381[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.22519:  36%|███▌      | 10/28 [00:37<01:13,  4.06s/it]epoch 1 loss 2.21313:  36%|███▌      | 10/28 [00:37<01:13,  4.06s/it]epoch 1 loss 2.21313:  39%|███▉      | 11/28 [00:37<00:50,  2.95s/it]epoch 1 loss 2.19825:  39%|███▉      | 11/28 [00:38<00:50,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.571[0m
[32m  eval_f1 = 0.2077[0m
[32m  eval_mcc = 0.5444[0m
[32m  eval_precision = 0.2711[0m
[32m  eval_recall = 0.1981[0m
[32m  ********************[0m
[32m  Best f1:0.2077[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5444[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.19825:  43%|████▎     | 12/28 [00:43<01:03,  3.96s/it]epoch 1 loss 2.17563:  43%|████▎     | 12/28 [00:44<01:03,  3.96s/it]epoch 1 loss 2.17563:  46%|████▋     | 13/28 [00:44<00:43,  2.89s/it]epoch 1 loss 2.15864:  46%|████▋     | 13/28 [00:44<00:43,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5797[0m
[32m  eval_f1 = 0.2139[0m
[32m  eval_mcc = 0.5533[0m
[32m  eval_precision = 0.2827[0m
[32m  eval_recall = 0.2042[0m
[32m  ********************[0m
[32m  Best f1:0.2139[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15864:  50%|█████     | 14/28 [00:50<00:52,  3.74s/it]epoch 1 loss 2.14986:  50%|█████     | 14/28 [00:50<00:52,  3.74s/it]epoch 1 loss 2.14986:  54%|█████▎    | 15/28 [00:50<00:35,  2.74s/it]epoch 1 loss 2.13274:  54%|█████▎    | 15/28 [00:50<00:35,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5889[0m
[32m  eval_f1 = 0.2265[0m
[32m  eval_mcc = 0.5637[0m
[32m  eval_precision = 0.2929[0m
[32m  eval_recall = 0.2147[0m
[32m  ********************[0m
[32m  Best f1:0.2265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13274:  57%|█████▋    | 16/28 [01:00<00:57,  4.82s/it]epoch 1 loss 2.10601:  57%|█████▋    | 16/28 [01:00<00:57,  4.82s/it]epoch 1 loss 2.10601:  61%|██████    | 17/28 [01:00<00:38,  3.50s/it]epoch 1 loss 2.0894:  61%|██████    | 17/28 [01:00<00:38,  3.50s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5929[0m
[32m  eval_f1 = 0.2293[0m
[32m  eval_mcc = 0.57[0m
[32m  eval_precision = 0.3074[0m
[32m  eval_recall = 0.2171[0m
[32m  ********************[0m
[32m  Best f1:0.2293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.57[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0894:  64%|██████▍   | 18/28 [01:09<00:51,  5.16s/it]epoch 1 loss 2.06913:  64%|██████▍   | 18/28 [01:09<00:51,  5.16s/it]epoch 1 loss 2.06913:  68%|██████▊   | 19/28 [01:09<00:33,  3.74s/it]epoch 1 loss 2.04376:  68%|██████▊   | 19/28 [01:10<00:33,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.58it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.64it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.69it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5964[0m
[32m  eval_f1 = 0.2323[0m
[32m  eval_mcc = 0.5787[0m
[32m  eval_precision = 0.3275[0m
[32m  eval_recall = 0.2188[0m
[32m  ********************[0m
[32m  Best f1:0.2323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5787[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04376:  71%|███████▏  | 20/28 [01:20<00:45,  5.70s/it]epoch 1 loss 2.02718:  71%|███████▏  | 20/28 [01:20<00:45,  5.70s/it]epoch 1 loss 2.02718:  75%|███████▌  | 21/28 [01:20<00:28,  4.12s/it]epoch 1 loss 2.0107:  75%|███████▌  | 21/28 [01:21<00:28,  4.12s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.52it/s][A
 20%|██        | 2/10 [00:00<00:03,  2.64it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.66it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.70it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5992[0m
[32m  eval_f1 = 0.2384[0m
[32m  eval_mcc = 0.5817[0m
[32m  eval_precision = 0.3498[0m
[32m  eval_recall = 0.2227[0m
[32m  ********************[0m
[32m  Best f1:0.2384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5817[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0107:  79%|███████▊  | 22/28 [01:32<00:37,  6.29s/it]epoch 1 loss 1.99622:  79%|███████▊  | 22/28 [01:32<00:37,  6.29s/it]epoch 1 loss 1.99622:  82%|████████▏ | 23/28 [01:32<00:22,  4.53s/it]epoch 1 loss 1.98061:  82%|████████▏ | 23/28 [01:32<00:22,  4.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6075[0m
[32m  eval_f1 = 0.2547[0m
[32m  eval_mcc = 0.5876[0m
[32m  eval_precision = 0.3666[0m
[32m  eval_recall = 0.2375[0m
[32m  ********************[0m
[32m  Best f1:0.2547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5876[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98061:  86%|████████▌ | 24/28 [01:41<00:24,  6.02s/it]epoch 1 loss 1.96535:  86%|████████▌ | 24/28 [01:42<00:24,  6.02s/it]epoch 1 loss 1.96535:  89%|████████▉ | 25/28 [01:42<00:13,  4.34s/it]epoch 1 loss 1.95095:  89%|████████▉ | 25/28 [01:42<00:13,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6091[0m
[32m  eval_f1 = 0.2635[0m
[32m  eval_mcc = 0.5864[0m
[32m  eval_precision = 0.3725[0m
[32m  eval_recall = 0.245[0m
[32m  ********************[0m
[32m  Best f1:0.2635[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 1 loss 1.95095:  93%|█████████▎| 26/28 [01:50<00:11,  5.50s/it]epoch 1 loss 1.94127:  93%|█████████▎| 26/28 [01:51<00:11,  5.50s/it]epoch 1 loss 1.94127:  96%|█████████▋| 27/28 [01:51<00:03,  3.98s/it]epoch 1 loss 1.92701:  96%|█████████▋| 27/28 [01:51<00:03,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6093[0m
[32m  eval_f1 = 0.27[0m
[32m  eval_mcc = 0.5855[0m
[32m  eval_precision = 0.4002[0m
[32m  eval_recall = 0.2514[0m
[32m  ********************[0m
[32m  Best f1:0.27[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 1 loss 1.92701: 100%|██████████| 28/28 [01:55<00:00,  4.20s/it]epoch 1 loss 1.92701: 100%|██████████| 28/28 [01:55<00:00,  4.13s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.43284:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.43284:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s]epoch 2 loss 1.51342:   4%|▎         | 1/28 [00:00<00:10,  2.49it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6105[0m
[32m  eval_f1 = 0.2725[0m
[32m  eval_mcc = 0.5866[0m
[32m  eval_precision = 0.4048[0m
[32m  eval_recall = 0.2541[0m
[32m  ********************[0m
[32m  Best f1:0.2725[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.51342:   7%|▋         | 2/28 [00:08<02:01,  4.68s/it]epoch 2 loss 1.50891:   7%|▋         | 2/28 [00:08<02:01,  4.68s/it]epoch 2 loss 1.50891:  11%|█         | 3/28 [00:08<01:08,  2.74s/it]epoch 2 loss 1.57515:  11%|█         | 3/28 [00:08<01:08,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6118[0m
[32m  eval_f1 = 0.2742[0m
[32m  eval_mcc = 0.5883[0m
[32m  eval_precision = 0.4064[0m
[32m  eval_recall = 0.2549[0m
[32m  ********************[0m
[32m  Best f1:0.2742[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5883[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57515:  14%|█▍        | 4/28 [00:17<02:00,  5.03s/it]epoch 2 loss 1.57333:  14%|█▍        | 4/28 [00:17<02:00,  5.03s/it]epoch 2 loss 1.57333:  18%|█▊        | 5/28 [00:17<01:17,  3.36s/it]epoch 2 loss 1.56732:  18%|█▊        | 5/28 [00:17<01:17,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6154[0m
[32m  eval_f1 = 0.2848[0m
[32m  eval_mcc = 0.5933[0m
[32m  eval_precision = 0.4151[0m
[32m  eval_recall = 0.2642[0m
[32m  ********************[0m
[32m  Best f1:0.2848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56732:  21%|██▏       | 6/28 [00:27<02:01,  5.51s/it]epoch 2 loss 1.5592:  21%|██▏       | 6/28 [00:27<02:01,  5.51s/it] epoch 2 loss 1.5592:  25%|██▌       | 7/28 [00:27<01:20,  3.85s/it]epoch 2 loss 1.56794:  25%|██▌       | 7/28 [00:27<01:20,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6204[0m
[32m  eval_f1 = 0.2882[0m
[32m  eval_mcc = 0.6012[0m
[32m  eval_precision = 0.4233[0m
[32m  eval_recall = 0.2664[0m
[32m  ********************[0m
[32m  Best f1:0.2882[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56794:  29%|██▊       | 8/28 [00:36<01:47,  5.39s/it]epoch 2 loss 1.56121:  29%|██▊       | 8/28 [00:36<01:47,  5.39s/it]epoch 2 loss 1.56121:  32%|███▏      | 9/28 [00:36<01:12,  3.83s/it]epoch 2 loss 1.54056:  32%|███▏      | 9/28 [00:37<01:12,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6209[0m
[32m  eval_f1 = 0.2897[0m
[32m  eval_mcc = 0.6038[0m
[32m  eval_precision = 0.4265[0m
[32m  eval_recall = 0.2666[0m
[32m  ********************[0m
[32m  Best f1:0.2897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54056:  36%|███▌      | 10/28 [00:43<01:27,  4.84s/it]epoch 2 loss 1.53836:  36%|███▌      | 10/28 [00:44<01:27,  4.84s/it]epoch 2 loss 1.53836:  39%|███▉      | 11/28 [00:44<00:59,  3.48s/it]epoch 2 loss 1.53216:  39%|███▉      | 11/28 [00:44<00:59,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6238[0m
[32m  eval_f1 = 0.293[0m
[32m  eval_mcc = 0.6053[0m
[32m  eval_precision = 0.4202[0m
[32m  eval_recall = 0.2694[0m
[32m  ********************[0m
[32m  Best f1:0.293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53216:  43%|████▎     | 12/28 [00:54<01:31,  5.69s/it]epoch 2 loss 1.532:  43%|████▎     | 12/28 [00:55<01:31,  5.69s/it]  epoch 2 loss 1.532:  46%|████▋     | 13/28 [00:55<01:01,  4.10s/it]epoch 2 loss 1.51796:  46%|████▋     | 13/28 [00:55<01:01,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6256[0m
[32m  eval_f1 = 0.2978[0m
[32m  eval_mcc = 0.605[0m
[32m  eval_precision = 0.4324[0m
[32m  eval_recall = 0.2746[0m
[32m  ********************[0m
[32m  Best f1:0.2978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.51796:  50%|█████     | 14/28 [01:00<01:01,  4.38s/it]epoch 2 loss 1.51955:  50%|█████     | 14/28 [01:00<01:01,  4.38s/it]epoch 2 loss 1.51955:  54%|█████▎    | 15/28 [01:00<00:41,  3.18s/it]epoch 2 loss 1.51942:  54%|█████▎    | 15/28 [01:01<00:41,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6266[0m
[32m  eval_f1 = 0.3021[0m
[32m  eval_mcc = 0.6045[0m
[32m  eval_precision = 0.4411[0m
[32m  eval_recall = 0.2795[0m
[32m  ********************[0m
[32m  Best f1:0.3021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.51942:  57%|█████▋    | 16/28 [01:05<00:44,  3.72s/it]epoch 2 loss 1.51712:  57%|█████▋    | 16/28 [01:06<00:44,  3.72s/it]epoch 2 loss 1.51712:  61%|██████    | 17/28 [01:06<00:29,  2.72s/it]epoch 2 loss 1.50739:  61%|██████    | 17/28 [01:06<00:29,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6281[0m
[32m  eval_f1 = 0.3061[0m
[32m  eval_mcc = 0.6057[0m
[32m  eval_precision = 0.4408[0m
[32m  eval_recall = 0.2832[0m
[32m  ********************[0m
[32m  Best f1:0.3061[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50739:  64%|██████▍   | 18/28 [01:12<00:37,  3.79s/it]epoch 2 loss 1.5054:  64%|██████▍   | 18/28 [01:12<00:37,  3.79s/it] epoch 2 loss 1.5054:  68%|██████▊   | 19/28 [01:12<00:25,  2.78s/it]epoch 2 loss 1.50048:  68%|██████▊   | 19/28 [01:13<00:25,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6305[0m
[32m  eval_f1 = 0.3113[0m
[32m  eval_mcc = 0.6082[0m
[32m  eval_precision = 0.4371[0m
[32m  eval_recall = 0.2877[0m
[32m  ********************[0m
[32m  Best f1:0.3113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6082[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50048:  71%|███████▏  | 20/28 [01:21<00:37,  4.67s/it]epoch 2 loss 1.49798:  71%|███████▏  | 20/28 [01:22<00:37,  4.67s/it]epoch 2 loss 1.49798:  75%|███████▌  | 21/28 [01:22<00:23,  3.39s/it]epoch 2 loss 1.49418:  75%|███████▌  | 21/28 [01:22<00:23,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6334[0m
[32m  eval_f1 = 0.3167[0m
[32m  eval_mcc = 0.6114[0m
[32m  eval_precision = 0.4238[0m
[32m  eval_recall = 0.2934[0m
[32m  ********************[0m
[32m  Best f1:0.3167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49418:  79%|███████▊  | 22/28 [01:32<00:32,  5.40s/it]epoch 2 loss 1.49825:  79%|███████▊  | 22/28 [01:32<00:32,  5.40s/it]epoch 2 loss 1.49825:  82%|████████▏ | 23/28 [01:32<00:19,  3.90s/it]epoch 2 loss 1.49772:  82%|████████▏ | 23/28 [01:33<00:19,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6369[0m
[32m  eval_f1 = 0.322[0m
[32m  eval_mcc = 0.6157[0m
[32m  eval_precision = 0.4251[0m
[32m  eval_recall = 0.2982[0m
[32m  ********************[0m
[32m  Best f1:0.322[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49772:  86%|████████▌ | 24/28 [01:45<00:26,  6.60s/it]epoch 2 loss 1.49439:  86%|████████▌ | 24/28 [01:46<00:26,  6.60s/it]epoch 2 loss 1.49439:  89%|████████▉ | 25/28 [01:46<00:14,  4.75s/it]epoch 2 loss 1.49712:  89%|████████▉ | 25/28 [01:46<00:14,  4.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.3246[0m
[32m  eval_mcc = 0.6186[0m
[32m  eval_precision = 0.4296[0m
[32m  eval_recall = 0.2994[0m
[32m  ********************[0m
[32m  Best f1:0.3246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49712:  93%|█████████▎| 26/28 [01:55<00:12,  6.05s/it]epoch 2 loss 1.49585:  93%|█████████▎| 26/28 [01:55<00:12,  6.05s/it]epoch 2 loss 1.49585:  96%|█████████▋| 27/28 [01:55<00:04,  4.36s/it]epoch 2 loss 1.49726:  96%|█████████▋| 27/28 [01:55<00:04,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.63it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6399[0m
[32m  eval_f1 = 0.3246[0m
[32m  eval_mcc = 0.6197[0m
[32m  eval_precision = 0.4291[0m
[32m  eval_recall = 0.2989[0m
[32m  ********************[0m
[32m  Best f1:0.3246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6197[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49726: 100%|██████████| 28/28 [02:06<00:00,  6.43s/it]epoch 2 loss 1.49726: 100%|██████████| 28/28 [02:06<00:00,  4.53s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.39652:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.39652:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 3 loss 1.47033:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.3235[0m
[32m  eval_mcc = 0.619[0m
[32m  eval_precision = 0.4316[0m
[32m  eval_recall = 0.2975[0m

epoch 3 loss 1.47033:   7%|▋         | 2/28 [00:04<01:02,  2.41s/it]epoch 3 loss 1.44861:   7%|▋         | 2/28 [00:04<01:02,  2.41s/it]epoch 3 loss 1.44861:  11%|█         | 3/28 [00:04<00:37,  1.50s/it]epoch 3 loss 1.43739:  11%|█         | 3/28 [00:05<00:37,  1.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.3231[0m
[32m  eval_mcc = 0.6196[0m
[32m  eval_precision = 0.4339[0m
[32m  eval_recall = 0.2978[0m

epoch 3 loss 1.43739:  14%|█▍        | 4/28 [00:08<00:57,  2.40s/it]epoch 3 loss 1.42811:  14%|█▍        | 4/28 [00:08<00:57,  2.40s/it]epoch 3 loss 1.42811:  18%|█▊        | 5/28 [00:08<00:38,  1.68s/it]epoch 3 loss 1.42183:  18%|█▊        | 5/28 [00:09<00:38,  1.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6405[0m
[32m  eval_f1 = 0.3251[0m
[32m  eval_mcc = 0.6204[0m
[32m  eval_precision = 0.4541[0m
[32m  eval_recall = 0.2992[0m
[32m  ********************[0m
[32m  Best f1:0.3251[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6204[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42183:  21%|██▏       | 6/28 [00:17<01:29,  4.08s/it]epoch 3 loss 1.40828:  21%|██▏       | 6/28 [00:17<01:29,  4.08s/it]epoch 3 loss 1.40828:  25%|██▌       | 7/28 [00:17<01:00,  2.88s/it]epoch 3 loss 1.41014:  25%|██▌       | 7/28 [00:18<01:00,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6409[0m
[32m  eval_f1 = 0.3256[0m
[32m  eval_mcc = 0.6201[0m
[32m  eval_precision = 0.4543[0m
[32m  eval_recall = 0.3002[0m
[32m  ********************[0m
[32m  Best f1:0.3256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.41014:  29%|██▊       | 8/28 [00:23<01:13,  3.68s/it]epoch 3 loss 1.40625:  29%|██▊       | 8/28 [00:23<01:13,  3.68s/it]epoch 3 loss 1.40625:  32%|███▏      | 9/28 [00:23<00:50,  2.65s/it]epoch 3 loss 1.40148:  32%|███▏      | 9/28 [00:24<00:50,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6411[0m
[32m  eval_f1 = 0.3264[0m
[32m  eval_mcc = 0.6199[0m
[32m  eval_precision = 0.4563[0m
[32m  eval_recall = 0.3019[0m
[32m  ********************[0m
[32m  Best f1:0.3264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.40148:  36%|███▌      | 10/28 [00:28<01:00,  3.34s/it]epoch 3 loss 1.39763:  36%|███▌      | 10/28 [00:29<01:00,  3.34s/it]epoch 3 loss 1.39763:  39%|███▉      | 11/28 [00:29<00:41,  2.44s/it]epoch 3 loss 1.39504:  39%|███▉      | 11/28 [00:29<00:41,  2.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6425[0m
[32m  eval_f1 = 0.3269[0m
[32m  eval_mcc = 0.6214[0m
[32m  eval_precision = 0.4357[0m
[32m  eval_recall = 0.3032[0m
[32m  ********************[0m
[32m  Best f1:0.3269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39504:  43%|████▎     | 12/28 [00:35<01:00,  3.77s/it]epoch 3 loss 1.40042:  43%|████▎     | 12/28 [00:36<01:00,  3.77s/it]epoch 3 loss 1.40042:  46%|████▋     | 13/28 [00:36<00:41,  2.76s/it]epoch 3 loss 1.39979:  46%|████▋     | 13/28 [00:36<00:41,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.643[0m
[32m  eval_f1 = 0.3279[0m
[32m  eval_mcc = 0.6221[0m
[32m  eval_precision = 0.4358[0m
[32m  eval_recall = 0.3043[0m
[32m  ********************[0m
[32m  Best f1:0.3279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39979:  50%|█████     | 14/28 [00:44<01:03,  4.53s/it]epoch 3 loss 1.4082:  50%|█████     | 14/28 [00:45<01:03,  4.53s/it] epoch 3 loss 1.4082:  54%|█████▎    | 15/28 [00:45<00:42,  3.29s/it]epoch 3 loss 1.40301:  54%|█████▎    | 15/28 [00:45<00:42,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6439[0m
[32m  eval_f1 = 0.3297[0m
[32m  eval_mcc = 0.623[0m
[32m  eval_precision = 0.4342[0m
[32m  eval_recall = 0.3058[0m
[32m  ********************[0m
[32m  Best f1:0.3297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40301:  57%|█████▋    | 16/28 [00:54<01:00,  5.05s/it]epoch 3 loss 1.40309:  57%|█████▋    | 16/28 [00:54<01:00,  5.05s/it]epoch 3 loss 1.40309:  61%|██████    | 17/28 [00:54<00:40,  3.66s/it]epoch 3 loss 1.4011:  61%|██████    | 17/28 [00:55<00:40,  3.66s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6449[0m
[32m  eval_f1 = 0.3319[0m
[32m  eval_mcc = 0.624[0m
[32m  eval_precision = 0.4318[0m
[32m  eval_recall = 0.3079[0m
[32m  ********************[0m
[32m  Best f1:0.3319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.4011:  64%|██████▍   | 18/28 [01:03<00:51,  5.18s/it]epoch 3 loss 1.40169:  64%|██████▍   | 18/28 [01:04<00:51,  5.18s/it]epoch 3 loss 1.40169:  68%|██████▊   | 19/28 [01:04<00:33,  3.75s/it]epoch 3 loss 1.40713:  68%|██████▊   | 19/28 [01:04<00:33,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6458[0m
[32m  eval_f1 = 0.3336[0m
[32m  eval_mcc = 0.6252[0m
[32m  eval_precision = 0.4311[0m
[32m  eval_recall = 0.3092[0m
[32m  ********************[0m
[32m  Best f1:0.3336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40713:  71%|███████▏  | 20/28 [01:11<00:37,  4.74s/it]epoch 3 loss 1.40386:  71%|███████▏  | 20/28 [01:11<00:37,  4.74s/it]epoch 3 loss 1.40386:  75%|███████▌  | 21/28 [01:11<00:24,  3.44s/it]epoch 3 loss 1.40334:  75%|███████▌  | 21/28 [01:11<00:24,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6479[0m
[32m  eval_f1 = 0.3372[0m
[32m  eval_mcc = 0.6277[0m
[32m  eval_precision = 0.4436[0m
[32m  eval_recall = 0.3119[0m
[32m  ********************[0m
[32m  Best f1:0.3372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40334:  79%|███████▊  | 22/28 [01:20<00:30,  5.02s/it]epoch 3 loss 1.40082:  79%|███████▊  | 22/28 [01:20<00:30,  5.02s/it]epoch 3 loss 1.40082:  82%|████████▏ | 23/28 [01:20<00:18,  3.64s/it]epoch 3 loss 1.40013:  82%|████████▏ | 23/28 [01:21<00:18,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6483[0m
[32m  eval_f1 = 0.3391[0m
[32m  eval_mcc = 0.6285[0m
[32m  eval_precision = 0.4446[0m
[32m  eval_recall = 0.3132[0m
[32m  ********************[0m
[32m  Best f1:0.3391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40013:  86%|████████▌ | 24/28 [01:29<00:20,  5.22s/it]epoch 3 loss 1.39997:  86%|████████▌ | 24/28 [01:29<00:20,  5.22s/it]epoch 3 loss 1.39997:  89%|████████▉ | 25/28 [01:29<00:11,  3.78s/it]epoch 3 loss 1.39339:  89%|████████▉ | 25/28 [01:30<00:11,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3409[0m
[32m  eval_mcc = 0.6302[0m
[32m  eval_precision = 0.4454[0m
[32m  eval_recall = 0.3143[0m
[32m  ********************[0m
[32m  Best f1:0.3409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39339:  93%|█████████▎| 26/28 [01:37<00:09,  4.86s/it]epoch 3 loss 1.39401:  93%|█████████▎| 26/28 [01:37<00:09,  4.86s/it]epoch 3 loss 1.39401:  96%|█████████▋| 27/28 [01:37<00:03,  3.53s/it]epoch 3 loss 1.39609:  96%|█████████▋| 27/28 [01:37<00:03,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6494[0m
[32m  eval_f1 = 0.3421[0m
[32m  eval_mcc = 0.6299[0m
[32m  eval_precision = 0.4557[0m
[32m  eval_recall = 0.3149[0m
[32m  ********************[0m
[32m  Best f1:0.3421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.39609: 100%|██████████| 28/28 [01:42<00:00,  3.92s/it]epoch 3 loss 1.39609: 100%|██████████| 28/28 [01:42<00:00,  3.66s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.31206:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.31206:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s]epoch 4 loss 1.36856:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6491[0m
[32m  eval_f1 = 0.3445[0m
[32m  eval_mcc = 0.6294[0m
[32m  eval_precision = 0.456[0m
[32m  eval_recall = 0.3168[0m
[32m  ********************[0m
[32m  Best f1:0.3445[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.36856:   7%|▋         | 2/28 [00:08<02:06,  4.85s/it]epoch 4 loss 1.34219:   7%|▋         | 2/28 [00:08<02:06,  4.85s/it]epoch 4 loss 1.34219:  11%|█         | 3/28 [00:08<01:10,  2.83s/it]epoch 4 loss 1.37025:  11%|█         | 3/28 [00:09<01:10,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6492[0m
[32m  eval_f1 = 0.3445[0m
[32m  eval_mcc = 0.6293[0m
[32m  eval_precision = 0.4561[0m
[32m  eval_recall = 0.317[0m
[32m  ********************[0m
[32m  Best f1:0.3445[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.37025:  14%|█▍        | 4/28 [00:13<01:28,  3.71s/it]epoch 4 loss 1.36257:  14%|█▍        | 4/28 [00:14<01:28,  3.71s/it]epoch 4 loss 1.36257:  18%|█▊        | 5/28 [00:14<00:57,  2.52s/it]epoch 4 loss 1.35877:  18%|█▊        | 5/28 [00:14<00:57,  2.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3444[0m
[32m  eval_mcc = 0.6297[0m
[32m  eval_precision = 0.4593[0m
[32m  eval_recall = 0.317[0m

epoch 4 loss 1.35877:  21%|██▏       | 6/28 [00:18<01:04,  2.95s/it]epoch 4 loss 1.36265:  21%|██▏       | 6/28 [00:18<01:04,  2.95s/it]epoch 4 loss 1.36265:  25%|██▌       | 7/28 [00:18<00:44,  2.12s/it]epoch 4 loss 1.35889:  25%|██▌       | 7/28 [00:18<00:44,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3445[0m
[32m  eval_mcc = 0.6295[0m
[32m  eval_precision = 0.4672[0m
[32m  eval_recall = 0.3168[0m

epoch 4 loss 1.35889:  29%|██▊       | 8/28 [00:22<00:52,  2.65s/it]epoch 4 loss 1.35305:  29%|██▊       | 8/28 [00:22<00:52,  2.65s/it]epoch 4 loss 1.35305:  32%|███▏      | 9/28 [00:22<00:36,  1.95s/it]epoch 4 loss 1.35001:  32%|███▏      | 9/28 [00:23<00:36,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6495[0m
[32m  eval_f1 = 0.3464[0m
[32m  eval_mcc = 0.6293[0m
[32m  eval_precision = 0.4683[0m
[32m  eval_recall = 0.3179[0m
[32m  ********************[0m
[32m  Best f1:0.3464[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.35001:  36%|███▌      | 10/28 [00:27<00:52,  2.91s/it]epoch 4 loss 1.35065:  36%|███▌      | 10/28 [00:28<00:52,  2.91s/it]epoch 4 loss 1.35065:  39%|███▉      | 11/28 [00:28<00:36,  2.14s/it]epoch 4 loss 1.35878:  39%|███▉      | 11/28 [00:28<00:36,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6498[0m
[32m  eval_f1 = 0.3464[0m
[32m  eval_mcc = 0.6296[0m
[32m  eval_precision = 0.4665[0m
[32m  eval_recall = 0.3177[0m

epoch 4 loss 1.35878:  43%|████▎     | 12/28 [00:31<00:42,  2.64s/it]epoch 4 loss 1.35448:  43%|████▎     | 12/28 [00:32<00:42,  2.64s/it]epoch 4 loss 1.35448:  46%|████▋     | 13/28 [00:32<00:29,  1.96s/it]epoch 4 loss 1.35849:  46%|████▋     | 13/28 [00:32<00:29,  1.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6503[0m
[32m  eval_f1 = 0.3472[0m
[32m  eval_mcc = 0.63[0m
[32m  eval_precision = 0.4663[0m
[32m  eval_recall = 0.3183[0m
[32m  ********************[0m
[32m  Best f1:0.3472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.35849:  50%|█████     | 14/28 [00:37<00:40,  2.90s/it]epoch 4 loss 1.36288:  50%|█████     | 14/28 [00:37<00:40,  2.90s/it]epoch 4 loss 1.36288:  54%|█████▎    | 15/28 [00:37<00:27,  2.15s/it]epoch 4 loss 1.35816:  54%|█████▎    | 15/28 [00:38<00:27,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6504[0m
[32m  eval_f1 = 0.3479[0m
[32m  eval_mcc = 0.6301[0m
[32m  eval_precision = 0.4687[0m
[32m  eval_recall = 0.3188[0m
[32m  ********************[0m
[32m  Best f1:0.3479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.35816:  57%|█████▋    | 16/28 [00:45<00:45,  3.76s/it]epoch 4 loss 1.35409:  57%|█████▋    | 16/28 [00:45<00:45,  3.76s/it]epoch 4 loss 1.35409:  61%|██████    | 17/28 [00:45<00:30,  2.76s/it]epoch 4 loss 1.35231:  61%|██████    | 17/28 [00:46<00:30,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6506[0m
[32m  eval_f1 = 0.3486[0m
[32m  eval_mcc = 0.6301[0m
[32m  eval_precision = 0.4675[0m
[32m  eval_recall = 0.3192[0m
[32m  ********************[0m
[32m  Best f1:0.3486[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.35231:  64%|██████▍   | 18/28 [00:50<00:34,  3.45s/it]epoch 4 loss 1.34859:  64%|██████▍   | 18/28 [00:51<00:34,  3.45s/it]epoch 4 loss 1.34859:  68%|██████▊   | 19/28 [00:51<00:22,  2.54s/it]epoch 4 loss 1.34707:  68%|██████▊   | 19/28 [00:51<00:22,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.349[0m
[32m  eval_mcc = 0.6305[0m
[32m  eval_precision = 0.4682[0m
[32m  eval_recall = 0.3195[0m
[32m  ********************[0m
[32m  Best f1:0.349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34707:  71%|███████▏  | 20/28 [01:01<00:38,  4.81s/it]epoch 4 loss 1.34906:  71%|███████▏  | 20/28 [01:01<00:38,  4.81s/it]epoch 4 loss 1.34906:  75%|███████▌  | 21/28 [01:01<00:24,  3.49s/it]epoch 4 loss 1.34397:  75%|███████▌  | 21/28 [01:02<00:24,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.3489[0m
[32m  eval_mcc = 0.6305[0m
[32m  eval_precision = 0.4697[0m
[32m  eval_recall = 0.3193[0m
[32m  ********************[0m
[32m  Best MCC:0.6305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.34397:  79%|███████▊  | 22/28 [01:06<00:23,  3.96s/it]epoch 4 loss 1.34713:  79%|███████▊  | 22/28 [01:07<00:23,  3.96s/it]epoch 4 loss 1.34713:  82%|████████▏ | 23/28 [01:07<00:14,  2.90s/it]epoch 4 loss 1.35171:  82%|████████▏ | 23/28 [01:07<00:14,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6512[0m
[32m  eval_f1 = 0.3492[0m
[32m  eval_mcc = 0.6308[0m
[32m  eval_precision = 0.4704[0m
[32m  eval_recall = 0.3195[0m
[32m  ********************[0m
[32m  Best f1:0.3492[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35171:  86%|████████▌ | 24/28 [01:17<00:20,  5.11s/it]epoch 4 loss 1.34872:  86%|████████▌ | 24/28 [01:17<00:20,  5.11s/it]epoch 4 loss 1.34872:  89%|████████▉ | 25/28 [01:17<00:11,  3.70s/it]epoch 4 loss 1.3536:  89%|████████▉ | 25/28 [01:18<00:11,  3.70s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6511[0m
[32m  eval_f1 = 0.349[0m
[32m  eval_mcc = 0.6308[0m
[32m  eval_precision = 0.4702[0m
[32m  eval_recall = 0.3194[0m

epoch 4 loss 1.3536:  93%|█████████▎| 26/28 [01:21<00:07,  3.73s/it]epoch 4 loss 1.35201:  93%|█████████▎| 26/28 [01:22<00:07,  3.73s/it]epoch 4 loss 1.35201:  96%|█████████▋| 27/28 [01:22<00:02,  2.73s/it]epoch 4 loss 1.35643:  96%|█████████▋| 27/28 [01:22<00:02,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6512[0m
[32m  eval_f1 = 0.3491[0m
[32m  eval_mcc = 0.6309[0m
[32m  eval_precision = 0.4704[0m
[32m  eval_recall = 0.3194[0m
[32m  ********************[0m
[32m  Best MCC:0.6309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.35643: 100%|██████████| 28/28 [01:26<00:00,  3.36s/it]epoch 4 loss 1.35643: 100%|██████████| 28/28 [01:26<00:00,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.76it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6512[0m
[32m  eval_f1 = 0.3492[0m
[32m  eval_mcc = 0.6308[0m
[32m  eval_precision = 0.4704[0m
[32m  eval_recall = 0.3195[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6344[0m
[32m  eval_f1 = 0.313[0m
[32m  eval_mcc = 0.6142[0m
[32m  eval_precision = 0.4377[0m
[32m  eval_recall = 0.2865[0m

