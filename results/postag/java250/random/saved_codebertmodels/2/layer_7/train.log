[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=7, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/2/layer_7', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.26604:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.26604:   4%|▎         | 1/28 [00:00<00:20,  1.33it/s]epoch 0 loss 5.26765:   4%|▎         | 1/28 [00:01<00:20,  1.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0125[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = 0.0077[0m
[32m  eval_precision = 0.0043[0m
[32m  eval_recall = 0.0054[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0077[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.26765:   7%|▋         | 2/28 [00:05<01:24,  3.24s/it]epoch 0 loss 5.26363:   7%|▋         | 2/28 [00:06<01:24,  3.24s/it]epoch 0 loss 5.26363:  11%|█         | 3/28 [00:06<00:48,  1.94s/it]epoch 0 loss 5.24892:  11%|█         | 3/28 [00:06<00:48,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0196[0m
[32m  eval_f1 = 0.0036[0m
[32m  eval_mcc = 0.0108[0m
[32m  eval_precision = 0.0039[0m
[32m  eval_recall = 0.0066[0m
[32m  ********************[0m
[32m  Best f1:0.0036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0108[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.24892:  14%|█▍        | 4/28 [00:16<02:06,  5.27s/it]epoch 0 loss 5.22798:  14%|█▍        | 4/28 [00:16<02:06,  5.27s/it]epoch 0 loss 5.22798:  18%|█▊        | 5/28 [00:16<01:20,  3.52s/it]epoch 0 loss 5.19452:  18%|█▊        | 5/28 [00:17<01:20,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0345[0m
[32m  eval_f1 = 0.0039[0m
[32m  eval_mcc = 0.0134[0m
[32m  eval_precision = 0.0114[0m
[32m  eval_recall = 0.0082[0m
[32m  ********************[0m
[32m  Best f1:0.0039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0134[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.19452:  21%|██▏       | 6/28 [00:26<02:04,  5.67s/it]epoch 0 loss 5.15671:  21%|██▏       | 6/28 [00:27<02:04,  5.67s/it]epoch 0 loss 5.15671:  25%|██▌       | 7/28 [00:27<01:23,  3.95s/it]epoch 0 loss 5.11743:  25%|██▌       | 7/28 [00:27<01:23,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.06[0m
[32m  eval_f1 = 0.0054[0m
[32m  eval_mcc = 0.0196[0m
[32m  eval_precision = 0.0161[0m
[32m  eval_recall = 0.0115[0m
[32m  ********************[0m
[32m  Best f1:0.0054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.11743:  29%|██▊       | 8/28 [00:35<01:44,  5.25s/it]epoch 0 loss 5.06749:  29%|██▊       | 8/28 [00:35<01:44,  5.25s/it]epoch 0 loss 5.06749:  32%|███▏      | 9/28 [00:35<01:11,  3.74s/it]epoch 0 loss 5.01679:  32%|███▏      | 9/28 [00:36<01:11,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.079[0m
[32m  eval_f1 = 0.0066[0m
[32m  eval_mcc = 0.0273[0m
[32m  eval_precision = 0.0211[0m
[32m  eval_recall = 0.0148[0m
[32m  ********************[0m
[32m  Best f1:0.0066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.01679:  36%|███▌      | 10/28 [00:45<01:40,  5.61s/it]epoch 0 loss 4.96262:  36%|███▌      | 10/28 [00:45<01:40,  5.61s/it]epoch 0 loss 4.96262:  39%|███▉      | 11/28 [00:45<01:08,  4.02s/it]epoch 0 loss 4.89937:  39%|███▉      | 11/28 [00:46<01:08,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0953[0m
[32m  eval_f1 = 0.01[0m
[32m  eval_mcc = 0.0392[0m
[32m  eval_precision = 0.0259[0m
[32m  eval_recall = 0.0188[0m
[32m  ********************[0m
[32m  Best f1:0.01[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.89937:  43%|████▎     | 12/28 [00:52<01:18,  4.92s/it]epoch 0 loss 4.83193:  43%|████▎     | 12/28 [00:53<01:18,  4.92s/it]epoch 0 loss 4.83193:  46%|████▋     | 13/28 [00:53<00:53,  3.56s/it]epoch 0 loss 4.76912:  46%|████▋     | 13/28 [00:53<00:53,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1112[0m
[32m  eval_f1 = 0.0141[0m
[32m  eval_mcc = 0.054[0m
[32m  eval_precision = 0.0308[0m
[32m  eval_recall = 0.0209[0m
[32m  ********************[0m
[32m  Best f1:0.0141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.76912:  50%|█████     | 14/28 [01:03<01:16,  5.47s/it]epoch 0 loss 4.70238:  50%|█████     | 14/28 [01:03<01:16,  5.47s/it]epoch 0 loss 4.70238:  54%|█████▎    | 15/28 [01:03<00:51,  3.95s/it]epoch 0 loss 4.63381:  54%|█████▎    | 15/28 [01:03<00:51,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1314[0m
[32m  eval_f1 = 0.0186[0m
[32m  eval_mcc = 0.0766[0m
[32m  eval_precision = 0.041[0m
[32m  eval_recall = 0.0229[0m
[32m  ********************[0m
[32m  Best f1:0.0186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0766[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.63381:  57%|█████▋    | 16/28 [01:11<01:01,  5.12s/it]epoch 0 loss 4.56785:  57%|█████▋    | 16/28 [01:11<01:01,  5.12s/it]epoch 0 loss 4.56785:  61%|██████    | 17/28 [01:11<00:40,  3.70s/it]epoch 0 loss 4.50849:  61%|██████    | 17/28 [01:12<00:40,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1843[0m
[32m  eval_f1 = 0.0275[0m
[32m  eval_mcc = 0.1345[0m
[32m  eval_precision = 0.0678[0m
[32m  eval_recall = 0.0293[0m
[32m  ********************[0m
[32m  Best f1:0.0275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.50849:  64%|██████▍   | 18/28 [01:22<00:57,  5.71s/it]epoch 0 loss 4.44009:  64%|██████▍   | 18/28 [01:22<00:57,  5.71s/it]epoch 0 loss 4.44009:  68%|██████▊   | 19/28 [01:22<00:37,  4.12s/it]epoch 0 loss 4.37601:  68%|██████▊   | 19/28 [01:22<00:37,  4.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2764[0m
[32m  eval_f1 = 0.0408[0m
[32m  eval_mcc = 0.2251[0m
[32m  eval_precision = 0.0933[0m
[32m  eval_recall = 0.0423[0m
[32m  ********************[0m
[32m  Best f1:0.0408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2251[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.37601:  71%|███████▏  | 20/28 [01:28<00:36,  4.55s/it]epoch 0 loss 4.30835:  71%|███████▏  | 20/28 [01:28<00:36,  4.55s/it]epoch 0 loss 4.30835:  75%|███████▌  | 21/28 [01:28<00:23,  3.31s/it]epoch 0 loss 4.24657:  75%|███████▌  | 21/28 [01:28<00:23,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3154[0m
[32m  eval_f1 = 0.0453[0m
[32m  eval_mcc = 0.2687[0m
[32m  eval_precision = 0.1033[0m
[32m  eval_recall = 0.0489[0m
[32m  ********************[0m
[32m  Best f1:0.0453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2687[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.24657:  79%|███████▊  | 22/28 [01:34<00:25,  4.22s/it]epoch 0 loss 4.18924:  79%|███████▊  | 22/28 [01:35<00:25,  4.22s/it]epoch 0 loss 4.18924:  82%|████████▏ | 23/28 [01:35<00:15,  3.08s/it]epoch 0 loss 4.13486:  82%|████████▏ | 23/28 [01:35<00:15,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3414[0m
[32m  eval_f1 = 0.0702[0m
[32m  eval_mcc = 0.3015[0m
[32m  eval_precision = 0.1463[0m
[32m  eval_recall = 0.0701[0m
[32m  ********************[0m
[32m  Best f1:0.0702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.13486:  86%|████████▌ | 24/28 [01:41<00:16,  4.10s/it]epoch 0 loss 4.07831:  86%|████████▌ | 24/28 [01:42<00:16,  4.10s/it]epoch 0 loss 4.07831:  89%|████████▉ | 25/28 [01:42<00:08,  3.00s/it]epoch 0 loss 4.02922:  89%|████████▉ | 25/28 [01:42<00:08,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3774[0m
[32m  eval_f1 = 0.0992[0m
[32m  eval_mcc = 0.3415[0m
[32m  eval_precision = 0.1615[0m
[32m  eval_recall = 0.0928[0m
[32m  ********************[0m
[32m  Best f1:0.0992[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.02922:  93%|█████████▎| 26/28 [01:48<00:08,  4.04s/it]epoch 0 loss 3.97764:  93%|█████████▎| 26/28 [01:49<00:08,  4.04s/it]epoch 0 loss 3.97764:  96%|█████████▋| 27/28 [01:49<00:02,  2.96s/it]epoch 0 loss 3.91789:  96%|█████████▋| 27/28 [01:49<00:02,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4442[0m
[32m  eval_f1 = 0.1432[0m
[32m  eval_mcc = 0.4133[0m
[32m  eval_precision = 0.2052[0m
[32m  eval_recall = 0.1301[0m
[32m  ********************[0m
[32m  Best f1:0.1432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.91789: 100%|██████████| 28/28 [01:55<00:00,  3.87s/it]epoch 0 loss 3.91789: 100%|██████████| 28/28 [01:55<00:00,  4.11s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.41853:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.41853:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 1 loss 2.32379:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5014[0m
[32m  eval_f1 = 0.1664[0m
[32m  eval_mcc = 0.4705[0m
[32m  eval_precision = 0.2156[0m
[32m  eval_recall = 0.1576[0m
[32m  ********************[0m
[32m  Best f1:0.1664[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32379:   7%|▋         | 2/28 [00:06<01:30,  3.46s/it]epoch 1 loss 2.28536:   7%|▋         | 2/28 [00:06<01:30,  3.46s/it]epoch 1 loss 2.28536:  11%|█         | 3/28 [00:06<00:51,  2.07s/it]epoch 1 loss 2.28926:  11%|█         | 3/28 [00:06<00:51,  2.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5435[0m
[32m  eval_f1 = 0.1792[0m
[32m  eval_mcc = 0.5157[0m
[32m  eval_precision = 0.2305[0m
[32m  eval_recall = 0.1756[0m
[32m  ********************[0m
[32m  Best f1:0.1792[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.28926:  14%|█▍        | 4/28 [00:12<01:30,  3.77s/it]epoch 1 loss 2.26641:  14%|█▍        | 4/28 [00:13<01:30,  3.77s/it]epoch 1 loss 2.26641:  18%|█▊        | 5/28 [00:13<00:58,  2.56s/it]epoch 1 loss 2.23254:  18%|█▊        | 5/28 [00:13<00:58,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.57[0m
[32m  eval_f1 = 0.1935[0m
[32m  eval_mcc = 0.5472[0m
[32m  eval_precision = 0.2709[0m
[32m  eval_recall = 0.189[0m
[32m  ********************[0m
[32m  Best f1:0.1935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23254:  21%|██▏       | 6/28 [00:19<01:24,  3.84s/it]epoch 1 loss 2.19555:  21%|██▏       | 6/28 [00:19<01:24,  3.84s/it]epoch 1 loss 2.19555:  25%|██▌       | 7/28 [00:19<00:57,  2.72s/it]epoch 1 loss 2.17066:  25%|██▌       | 7/28 [00:20<00:57,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5755[0m
[32m  eval_f1 = 0.2023[0m
[32m  eval_mcc = 0.5533[0m
[32m  eval_precision = 0.2694[0m
[32m  eval_recall = 0.1939[0m
[32m  ********************[0m
[32m  Best f1:0.2023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17066:  29%|██▊       | 8/28 [00:26<01:17,  3.88s/it]epoch 1 loss 2.13955:  29%|██▊       | 8/28 [00:26<01:17,  3.88s/it]epoch 1 loss 2.13955:  32%|███▏      | 9/28 [00:26<00:53,  2.80s/it]epoch 1 loss 2.10099:  32%|███▏      | 9/28 [00:27<00:53,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5792[0m
[32m  eval_f1 = 0.2113[0m
[32m  eval_mcc = 0.5549[0m
[32m  eval_precision = 0.2721[0m
[32m  eval_recall = 0.2018[0m
[32m  ********************[0m
[32m  Best f1:0.2113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.10099:  36%|███▌      | 10/28 [00:33<01:09,  3.87s/it]epoch 1 loss 2.08933:  36%|███▌      | 10/28 [00:33<01:09,  3.87s/it]epoch 1 loss 2.08933:  39%|███▉      | 11/28 [00:33<00:47,  2.81s/it]epoch 1 loss 2.07571:  39%|███▉      | 11/28 [00:33<00:47,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5852[0m
[32m  eval_f1 = 0.2164[0m
[32m  eval_mcc = 0.5598[0m
[32m  eval_precision = 0.2767[0m
[32m  eval_recall = 0.2064[0m
[32m  ********************[0m
[32m  Best f1:0.2164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5598[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07571:  43%|████▎     | 12/28 [00:39<00:59,  3.74s/it]epoch 1 loss 2.05347:  43%|████▎     | 12/28 [00:39<00:59,  3.74s/it]epoch 1 loss 2.05347:  46%|████▋     | 13/28 [00:39<00:41,  2.74s/it]epoch 1 loss 2.0373:  46%|████▋     | 13/28 [00:40<00:41,  2.74s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5902[0m
[32m  eval_f1 = 0.2292[0m
[32m  eval_mcc = 0.5646[0m
[32m  eval_precision = 0.3076[0m
[32m  eval_recall = 0.2158[0m
[32m  ********************[0m
[32m  Best f1:0.2292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0373:  50%|█████     | 14/28 [00:46<00:53,  3.85s/it]epoch 1 loss 2.02965:  50%|█████     | 14/28 [00:46<00:53,  3.85s/it]epoch 1 loss 2.02965:  54%|█████▎    | 15/28 [00:46<00:36,  2.82s/it]epoch 1 loss 2.01356:  54%|█████▎    | 15/28 [00:46<00:36,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5951[0m
[32m  eval_f1 = 0.2331[0m
[32m  eval_mcc = 0.5701[0m
[32m  eval_precision = 0.3119[0m
[32m  eval_recall = 0.2193[0m
[32m  ********************[0m
[32m  Best f1:0.2331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5701[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01356:  57%|█████▋    | 16/28 [00:54<00:53,  4.45s/it]epoch 1 loss 1.98762:  57%|█████▋    | 16/28 [00:55<00:53,  4.45s/it]epoch 1 loss 1.98762:  61%|██████    | 17/28 [00:55<00:35,  3.24s/it]epoch 1 loss 1.97167:  61%|██████    | 17/28 [00:55<00:35,  3.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6001[0m
[32m  eval_f1 = 0.2378[0m
[32m  eval_mcc = 0.5768[0m
[32m  eval_precision = 0.3188[0m
[32m  eval_recall = 0.2231[0m
[32m  ********************[0m
[32m  Best f1:0.2378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97167:  64%|██████▍   | 18/28 [01:01<00:41,  4.18s/it]epoch 1 loss 1.95245:  64%|██████▍   | 18/28 [01:02<00:41,  4.18s/it]epoch 1 loss 1.95245:  68%|██████▊   | 19/28 [01:02<00:27,  3.05s/it]epoch 1 loss 1.92803:  68%|██████▊   | 19/28 [01:02<00:27,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6019[0m
[32m  eval_f1 = 0.2406[0m
[32m  eval_mcc = 0.5829[0m
[32m  eval_precision = 0.3239[0m
[32m  eval_recall = 0.2249[0m
[32m  ********************[0m
[32m  Best f1:0.2406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92803:  71%|███████▏  | 20/28 [01:11<00:39,  4.89s/it]epoch 1 loss 1.9124:  71%|███████▏  | 20/28 [01:11<00:39,  4.89s/it] epoch 1 loss 1.9124:  75%|███████▌  | 21/28 [01:11<00:24,  3.55s/it]epoch 1 loss 1.89694:  75%|███████▌  | 21/28 [01:12<00:24,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6053[0m
[32m  eval_f1 = 0.26[0m
[32m  eval_mcc = 0.5873[0m
[32m  eval_precision = 0.3599[0m
[32m  eval_recall = 0.2406[0m
[32m  ********************[0m
[32m  Best f1:0.26[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89694:  79%|███████▊  | 22/28 [01:23<00:35,  5.91s/it]epoch 1 loss 1.88348:  79%|███████▊  | 22/28 [01:23<00:35,  5.91s/it]epoch 1 loss 1.88348:  82%|████████▏ | 23/28 [01:23<00:21,  4.27s/it]epoch 1 loss 1.86896:  82%|████████▏ | 23/28 [01:23<00:21,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6092[0m
[32m  eval_f1 = 0.2698[0m
[32m  eval_mcc = 0.5896[0m
[32m  eval_precision = 0.3848[0m
[32m  eval_recall = 0.2476[0m
[32m  ********************[0m
[32m  Best f1:0.2698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5896[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86896:  86%|████████▌ | 24/28 [01:35<00:25,  6.46s/it]epoch 1 loss 1.8545:  86%|████████▌ | 24/28 [01:35<00:25,  6.46s/it] epoch 1 loss 1.8545:  89%|████████▉ | 25/28 [01:35<00:13,  4.65s/it]epoch 1 loss 1.84069:  89%|████████▉ | 25/28 [01:35<00:13,  4.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6149[0m
[32m  eval_f1 = 0.2858[0m
[32m  eval_mcc = 0.5929[0m
[32m  eval_precision = 0.4042[0m
[32m  eval_recall = 0.2632[0m
[32m  ********************[0m
[32m  Best f1:0.2858[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84069:  93%|█████████▎| 26/28 [01:47<00:13,  6.74s/it]epoch 1 loss 1.83169:  93%|█████████▎| 26/28 [01:47<00:13,  6.74s/it]epoch 1 loss 1.83169:  96%|█████████▋| 27/28 [01:47<00:04,  4.84s/it]epoch 1 loss 1.81852:  96%|█████████▋| 27/28 [01:47<00:04,  4.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6181[0m
[32m  eval_f1 = 0.2907[0m
[32m  eval_mcc = 0.5951[0m
[32m  eval_precision = 0.4144[0m
[32m  eval_recall = 0.2682[0m
[32m  ********************[0m
[32m  Best f1:0.2907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5951[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81852: 100%|██████████| 28/28 [01:57<00:00,  6.54s/it]epoch 1 loss 1.81852: 100%|██████████| 28/28 [01:57<00:00,  4.21s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.33978:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.33978:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.4273:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6194[0m
[32m  eval_f1 = 0.2943[0m
[32m  eval_mcc = 0.5964[0m
[32m  eval_precision = 0.4233[0m
[32m  eval_recall = 0.2714[0m
[32m  ********************[0m
[32m  Best f1:0.2943[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5964[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4273:   7%|▋         | 2/28 [00:11<02:56,  6.81s/it]epoch 2 loss 1.42207:   7%|▋         | 2/28 [00:12<02:56,  6.81s/it]epoch 2 loss 1.42207:  11%|█         | 3/28 [00:12<01:37,  3.89s/it]epoch 2 loss 1.48722:  11%|█         | 3/28 [00:12<01:37,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6215[0m
[32m  eval_f1 = 0.2991[0m
[32m  eval_mcc = 0.5988[0m
[32m  eval_precision = 0.422[0m
[32m  eval_recall = 0.2754[0m
[32m  ********************[0m
[32m  Best f1:0.2991[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5988[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48722:  14%|█▍        | 4/28 [00:22<02:36,  6.51s/it]epoch 2 loss 1.48574:  14%|█▍        | 4/28 [00:23<02:36,  6.51s/it]epoch 2 loss 1.48574:  18%|█▊        | 5/28 [00:23<01:39,  4.31s/it]epoch 2 loss 1.48087:  18%|█▊        | 5/28 [00:23<01:39,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6242[0m
[32m  eval_f1 = 0.3052[0m
[32m  eval_mcc = 0.6023[0m
[32m  eval_precision = 0.4423[0m
[32m  eval_recall = 0.2822[0m
[32m  ********************[0m
[32m  Best f1:0.3052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48087:  21%|██▏       | 6/28 [00:30<01:56,  5.30s/it]epoch 2 loss 1.4737:  21%|██▏       | 6/28 [00:30<01:56,  5.30s/it] epoch 2 loss 1.4737:  25%|██▌       | 7/28 [00:30<01:17,  3.70s/it]epoch 2 loss 1.48173:  25%|██▌       | 7/28 [00:31<01:17,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6251[0m
[32m  eval_f1 = 0.3096[0m
[32m  eval_mcc = 0.6053[0m
[32m  eval_precision = 0.435[0m
[32m  eval_recall = 0.2845[0m
[32m  ********************[0m
[32m  Best f1:0.3096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48173:  29%|██▊       | 8/28 [00:40<01:55,  5.78s/it]epoch 2 loss 1.47608:  29%|██▊       | 8/28 [00:41<01:55,  5.78s/it]epoch 2 loss 1.47608:  32%|███▏      | 9/28 [00:41<01:18,  4.11s/it]epoch 2 loss 1.45577:  32%|███▏      | 9/28 [00:41<01:18,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6254[0m
[32m  eval_f1 = 0.312[0m
[32m  eval_mcc = 0.6073[0m
[32m  eval_precision = 0.4426[0m
[32m  eval_recall = 0.2857[0m
[32m  ********************[0m
[32m  Best f1:0.312[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45577:  36%|███▌      | 10/28 [00:48<01:31,  5.07s/it]epoch 2 loss 1.45404:  36%|███▌      | 10/28 [00:49<01:31,  5.07s/it]epoch 2 loss 1.45404:  39%|███▉      | 11/28 [00:49<01:02,  3.65s/it]epoch 2 loss 1.44828:  39%|███▉      | 11/28 [00:49<01:02,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6274[0m
[32m  eval_f1 = 0.3151[0m
[32m  eval_mcc = 0.6087[0m
[32m  eval_precision = 0.4521[0m
[32m  eval_recall = 0.2897[0m
[32m  ********************[0m
[32m  Best f1:0.3151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44828:  43%|████▎     | 12/28 [00:58<01:28,  5.56s/it]epoch 2 loss 1.44819:  43%|████▎     | 12/28 [00:59<01:28,  5.56s/it]epoch 2 loss 1.44819:  46%|████▋     | 13/28 [00:59<01:00,  4.00s/it]epoch 2 loss 1.43437:  46%|████▋     | 13/28 [00:59<01:00,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6297[0m
[32m  eval_f1 = 0.317[0m
[32m  eval_mcc = 0.6096[0m
[32m  eval_precision = 0.449[0m
[32m  eval_recall = 0.2923[0m
[32m  ********************[0m
[32m  Best f1:0.317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43437:  50%|█████     | 14/28 [01:07<01:14,  5.30s/it]epoch 2 loss 1.43622:  50%|█████     | 14/28 [01:08<01:14,  5.30s/it]epoch 2 loss 1.43622:  54%|█████▎    | 15/28 [01:08<00:49,  3.83s/it]epoch 2 loss 1.43626:  54%|█████▎    | 15/28 [01:08<00:49,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.62it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6335[0m
[32m  eval_f1 = 0.3182[0m
[32m  eval_mcc = 0.6121[0m
[32m  eval_precision = 0.4411[0m
[32m  eval_recall = 0.2939[0m
[32m  ********************[0m
[32m  Best f1:0.3182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43626:  57%|█████▋    | 16/28 [01:17<01:07,  5.66s/it]epoch 2 loss 1.43466:  57%|█████▋    | 16/28 [01:18<01:07,  5.66s/it]epoch 2 loss 1.43466:  61%|██████    | 17/28 [01:18<00:44,  4.09s/it]epoch 2 loss 1.4252:  61%|██████    | 17/28 [01:18<00:44,  4.09s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6362[0m
[32m  eval_f1 = 0.3248[0m
[32m  eval_mcc = 0.6145[0m
[32m  eval_precision = 0.4483[0m
[32m  eval_recall = 0.2994[0m
[32m  ********************[0m
[32m  Best f1:0.3248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4252:  64%|██████▍   | 18/28 [01:26<00:53,  5.30s/it]epoch 2 loss 1.42249:  64%|██████▍   | 18/28 [01:26<00:53,  5.30s/it]epoch 2 loss 1.42249:  68%|██████▊   | 19/28 [01:26<00:34,  3.84s/it]epoch 2 loss 1.41754:  68%|██████▊   | 19/28 [01:27<00:34,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6396[0m
[32m  eval_f1 = 0.3299[0m
[32m  eval_mcc = 0.618[0m
[32m  eval_precision = 0.445[0m
[32m  eval_recall = 0.3043[0m
[32m  ********************[0m
[32m  Best f1:0.3299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41754:  71%|███████▏  | 20/28 [01:38<00:49,  6.17s/it]epoch 2 loss 1.41455:  71%|███████▏  | 20/28 [01:39<00:49,  6.17s/it]epoch 2 loss 1.41455:  75%|███████▌  | 21/28 [01:39<00:31,  4.45s/it]epoch 2 loss 1.41143:  75%|███████▌  | 21/28 [01:39<00:31,  4.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.3349[0m
[32m  eval_mcc = 0.6215[0m
[32m  eval_precision = 0.4543[0m
[32m  eval_recall = 0.3094[0m
[32m  ********************[0m
[32m  Best f1:0.3349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41143:  79%|███████▊  | 22/28 [01:49<00:38,  6.36s/it]epoch 2 loss 1.41606:  79%|███████▊  | 22/28 [01:50<00:38,  6.36s/it]epoch 2 loss 1.41606:  82%|████████▏ | 23/28 [01:50<00:22,  4.58s/it]epoch 2 loss 1.41575:  82%|████████▏ | 23/28 [01:50<00:22,  4.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6436[0m
[32m  eval_f1 = 0.3369[0m
[32m  eval_mcc = 0.6227[0m
[32m  eval_precision = 0.4433[0m
[32m  eval_recall = 0.3109[0m
[32m  ********************[0m
[32m  Best f1:0.3369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41575:  86%|████████▌ | 24/28 [02:01<00:26,  6.65s/it]epoch 2 loss 1.41276:  86%|████████▌ | 24/28 [02:02<00:26,  6.65s/it]epoch 2 loss 1.41276:  89%|████████▉ | 25/28 [02:02<00:14,  4.78s/it]epoch 2 loss 1.41546:  89%|████████▉ | 25/28 [02:02<00:14,  4.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6453[0m
[32m  eval_f1 = 0.3378[0m
[32m  eval_mcc = 0.6247[0m
[32m  eval_precision = 0.4367[0m
[32m  eval_recall = 0.3112[0m
[32m  ********************[0m
[32m  Best f1:0.3378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6247[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41546:  93%|█████████▎| 26/28 [02:13<00:13,  6.61s/it]epoch 2 loss 1.41464:  93%|█████████▎| 26/28 [02:13<00:13,  6.61s/it]epoch 2 loss 1.41464:  96%|█████████▋| 27/28 [02:13<00:04,  4.75s/it]epoch 2 loss 1.41645:  96%|█████████▋| 27/28 [02:13<00:04,  4.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6459[0m
[32m  eval_f1 = 0.3369[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4371[0m
[32m  eval_recall = 0.3099[0m
[32m  ********************[0m
[32m  Best MCC:0.6256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41645: 100%|██████████| 28/28 [02:20<00:00,  5.36s/it]epoch 2 loss 1.41645: 100%|██████████| 28/28 [02:20<00:00,  5.01s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.30536:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.30536:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 3 loss 1.38906:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6468[0m
[32m  eval_f1 = 0.3439[0m
[32m  eval_mcc = 0.6271[0m
[32m  eval_precision = 0.4759[0m
[32m  eval_recall = 0.3128[0m
[32m  ********************[0m
[32m  Best f1:0.3439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38906:   7%|▋         | 2/28 [00:11<02:52,  6.62s/it]epoch 3 loss 1.36735:   7%|▋         | 2/28 [00:11<02:52,  6.62s/it]epoch 3 loss 1.36735:  11%|█         | 3/28 [00:11<01:34,  3.79s/it]epoch 3 loss 1.35632:  11%|█         | 3/28 [00:12<01:34,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6479[0m
[32m  eval_f1 = 0.3449[0m
[32m  eval_mcc = 0.6284[0m
[32m  eval_precision = 0.4776[0m
[32m  eval_recall = 0.3132[0m
[32m  ********************[0m
[32m  Best f1:0.3449[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35632:  14%|█▍        | 4/28 [00:20<02:21,  5.92s/it]epoch 3 loss 1.34899:  14%|█▍        | 4/28 [00:21<02:21,  5.92s/it]epoch 3 loss 1.34899:  18%|█▊        | 5/28 [00:21<01:30,  3.93s/it]epoch 3 loss 1.34461:  18%|█▊        | 5/28 [00:21<01:30,  3.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6497[0m
[32m  eval_f1 = 0.3459[0m
[32m  eval_mcc = 0.6302[0m
[32m  eval_precision = 0.4915[0m
[32m  eval_recall = 0.3137[0m
[32m  ********************[0m
[32m  Best f1:0.3459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34461:  21%|██▏       | 6/28 [00:32<02:16,  6.22s/it]epoch 3 loss 1.33132:  21%|██▏       | 6/28 [00:32<02:16,  6.22s/it]epoch 3 loss 1.33132:  25%|██▌       | 7/28 [00:32<01:30,  4.33s/it]epoch 3 loss 1.33356:  25%|██▌       | 7/28 [00:32<01:30,  4.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6503[0m
[32m  eval_f1 = 0.3466[0m
[32m  eval_mcc = 0.6303[0m
[32m  eval_precision = 0.4956[0m
[32m  eval_recall = 0.315[0m
[32m  ********************[0m
[32m  Best f1:0.3466[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33356:  29%|██▊       | 8/28 [00:40<01:51,  5.58s/it]epoch 3 loss 1.33014:  29%|██▊       | 8/28 [00:41<01:51,  5.58s/it]epoch 3 loss 1.33014:  32%|███▏      | 9/28 [00:41<01:15,  3.96s/it]epoch 3 loss 1.32626:  32%|███▏      | 9/28 [00:41<01:15,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.651[0m
[32m  eval_f1 = 0.3487[0m
[32m  eval_mcc = 0.6308[0m
[32m  eval_precision = 0.5103[0m
[32m  eval_recall = 0.317[0m
[32m  ********************[0m
[32m  Best f1:0.3487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32626:  36%|███▌      | 10/28 [00:51<01:47,  5.97s/it]epoch 3 loss 1.32317:  36%|███▌      | 10/28 [00:52<01:47,  5.97s/it]epoch 3 loss 1.32317:  39%|███▉      | 11/28 [00:52<01:12,  4.27s/it]epoch 3 loss 1.32116:  39%|███▉      | 11/28 [00:52<01:12,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.652[0m
[32m  eval_f1 = 0.3489[0m
[32m  eval_mcc = 0.6319[0m
[32m  eval_precision = 0.4911[0m
[32m  eval_recall = 0.318[0m
[32m  ********************[0m
[32m  Best f1:0.3489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32116:  43%|████▎     | 12/28 [01:01<01:32,  5.77s/it]epoch 3 loss 1.32648:  43%|████▎     | 12/28 [01:01<01:32,  5.77s/it]epoch 3 loss 1.32648:  46%|████▋     | 13/28 [01:01<01:02,  4.15s/it]epoch 3 loss 1.32589:  46%|████▋     | 13/28 [01:02<01:02,  4.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6542[0m
[32m  eval_f1 = 0.3496[0m
[32m  eval_mcc = 0.6342[0m
[32m  eval_precision = 0.4994[0m
[32m  eval_recall = 0.3192[0m
[32m  ********************[0m
[32m  Best f1:0.3496[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32589:  50%|█████     | 14/28 [01:12<01:24,  6.05s/it]epoch 3 loss 1.33392:  50%|█████     | 14/28 [01:12<01:24,  6.05s/it]epoch 3 loss 1.33392:  54%|█████▎    | 15/28 [01:12<00:56,  4.36s/it]epoch 3 loss 1.3288:  54%|█████▎    | 15/28 [01:12<00:56,  4.36s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6544[0m
[32m  eval_f1 = 0.3531[0m
[32m  eval_mcc = 0.6343[0m
[32m  eval_precision = 0.5039[0m
[32m  eval_recall = 0.3219[0m
[32m  ********************[0m
[32m  Best f1:0.3531[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3288:  57%|█████▋    | 16/28 [01:19<01:02,  5.21s/it]epoch 3 loss 1.3289:  57%|█████▋    | 16/28 [01:20<01:02,  5.21s/it]epoch 3 loss 1.3289:  61%|██████    | 17/28 [01:20<00:41,  3.77s/it]epoch 3 loss 1.32706:  61%|██████    | 17/28 [01:20<00:41,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6551[0m
[32m  eval_f1 = 0.3548[0m
[32m  eval_mcc = 0.635[0m
[32m  eval_precision = 0.4958[0m
[32m  eval_recall = 0.3237[0m
[32m  ********************[0m
[32m  Best f1:0.3548[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.635[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32706:  64%|██████▍   | 18/28 [01:27<00:47,  4.77s/it]epoch 3 loss 1.32745:  64%|██████▍   | 18/28 [01:27<00:47,  4.77s/it]epoch 3 loss 1.32745:  68%|██████▊   | 19/28 [01:27<00:31,  3.46s/it]epoch 3 loss 1.33244:  68%|██████▊   | 19/28 [01:28<00:31,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6572[0m
[32m  eval_f1 = 0.3566[0m
[32m  eval_mcc = 0.6373[0m
[32m  eval_precision = 0.4913[0m
[32m  eval_recall = 0.3254[0m
[32m  ********************[0m
[32m  Best f1:0.3566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33244:  71%|███████▏  | 20/28 [01:38<00:44,  5.58s/it]epoch 3 loss 1.32937:  71%|███████▏  | 20/28 [01:38<00:44,  5.58s/it]epoch 3 loss 1.32937:  75%|███████▌  | 21/28 [01:38<00:28,  4.03s/it]epoch 3 loss 1.32958:  75%|███████▌  | 21/28 [01:39<00:28,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3606[0m
[32m  eval_mcc = 0.6381[0m
[32m  eval_precision = 0.4996[0m
[32m  eval_recall = 0.3282[0m
[32m  ********************[0m
[32m  Best f1:0.3606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6381[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32958:  79%|███████▊  | 22/28 [01:46<00:30,  5.06s/it]epoch 3 loss 1.32716:  79%|███████▊  | 22/28 [01:46<00:30,  5.06s/it]epoch 3 loss 1.32716:  82%|████████▏ | 23/28 [01:46<00:18,  3.67s/it]epoch 3 loss 1.32634:  82%|████████▏ | 23/28 [01:46<00:18,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3609[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4999[0m
[32m  eval_recall = 0.3287[0m
[32m  ********************[0m
[32m  Best f1:0.3609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.32634:  86%|████████▌ | 24/28 [01:53<00:18,  4.60s/it]epoch 3 loss 1.32623:  86%|████████▌ | 24/28 [01:53<00:18,  4.60s/it]epoch 3 loss 1.32623:  89%|████████▉ | 25/28 [01:53<00:10,  3.34s/it]epoch 3 loss 1.32001:  89%|████████▉ | 25/28 [01:54<00:10,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3607[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.4993[0m
[32m  eval_recall = 0.3285[0m

epoch 3 loss 1.32001:  93%|█████████▎| 26/28 [01:57<00:06,  3.47s/it]epoch 3 loss 1.32058:  93%|█████████▎| 26/28 [01:57<00:06,  3.47s/it]epoch 3 loss 1.32058:  96%|█████████▋| 27/28 [01:57<00:02,  2.55s/it]epoch 3 loss 1.32305:  96%|█████████▋| 27/28 [01:58<00:02,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6575[0m
[32m  eval_f1 = 0.3616[0m
[32m  eval_mcc = 0.6384[0m
[32m  eval_precision = 0.5009[0m
[32m  eval_recall = 0.3292[0m
[32m  ********************[0m
[32m  Best f1:0.3616[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32305: 100%|██████████| 28/28 [02:04<00:00,  3.92s/it]epoch 3 loss 1.32305: 100%|██████████| 28/28 [02:04<00:00,  4.46s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.23762:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.23762:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 4 loss 1.29846:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6572[0m
[32m  eval_f1 = 0.3617[0m
[32m  eval_mcc = 0.638[0m
[32m  eval_precision = 0.5008[0m
[32m  eval_recall = 0.3293[0m
[32m  ********************[0m
[32m  Best f1:0.3617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.29846:   7%|▋         | 2/28 [00:07<01:53,  4.37s/it]epoch 4 loss 1.27124:   7%|▋         | 2/28 [00:07<01:53,  4.37s/it]epoch 4 loss 1.27124:  11%|█         | 3/28 [00:07<01:04,  2.56s/it]epoch 4 loss 1.29984:  11%|█         | 3/28 [00:08<01:04,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6578[0m
[32m  eval_f1 = 0.3616[0m
[32m  eval_mcc = 0.6386[0m
[32m  eval_precision = 0.5009[0m
[32m  eval_recall = 0.3293[0m
[32m  ********************[0m
[32m  Best MCC:0.6386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.29984:  14%|█▍        | 4/28 [00:15<01:45,  4.38s/it]epoch 4 loss 1.29113:  14%|█▍        | 4/28 [00:15<01:45,  4.38s/it]epoch 4 loss 1.29113:  18%|█▊        | 5/28 [00:15<01:07,  2.95s/it]epoch 4 loss 1.28736:  18%|█▊        | 5/28 [00:15<01:07,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6585[0m
[32m  eval_f1 = 0.3635[0m
[32m  eval_mcc = 0.6391[0m
[32m  eval_precision = 0.5129[0m
[32m  eval_recall = 0.3307[0m
[32m  ********************[0m
[32m  Best f1:0.3635[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28736:  21%|██▏       | 6/28 [00:22<01:32,  4.19s/it]epoch 4 loss 1.29339:  21%|██▏       | 6/28 [00:22<01:32,  4.19s/it]epoch 4 loss 1.29339:  25%|██▌       | 7/28 [00:22<01:02,  2.96s/it]epoch 4 loss 1.28924:  25%|██▌       | 7/28 [00:22<01:02,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3642[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.5144[0m
[32m  eval_recall = 0.3313[0m
[32m  ********************[0m
[32m  Best f1:0.3642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28924:  29%|██▊       | 8/28 [00:28<01:20,  4.03s/it]epoch 4 loss 1.28331:  29%|██▊       | 8/28 [00:29<01:20,  4.03s/it]epoch 4 loss 1.28331:  32%|███▏      | 9/28 [00:29<00:55,  2.90s/it]epoch 4 loss 1.28033:  32%|███▏      | 9/28 [00:29<00:55,  2.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6592[0m
[32m  eval_f1 = 0.3653[0m
[32m  eval_mcc = 0.6399[0m
[32m  eval_precision = 0.5145[0m
[32m  eval_recall = 0.332[0m
[32m  ********************[0m
[32m  Best f1:0.3653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28033:  36%|███▌      | 10/28 [00:35<01:11,  3.98s/it]epoch 4 loss 1.28043:  36%|███▌      | 10/28 [00:36<01:11,  3.98s/it]epoch 4 loss 1.28043:  39%|███▉      | 11/28 [00:36<00:49,  2.89s/it]epoch 4 loss 1.28809:  39%|███▉      | 11/28 [00:36<00:49,  2.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6593[0m
[32m  eval_f1 = 0.3651[0m
[32m  eval_mcc = 0.6399[0m
[32m  eval_precision = 0.5146[0m
[32m  eval_recall = 0.3318[0m
[32m  ********************[0m
[32m  Best MCC:0.6399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28809:  43%|████▎     | 12/28 [00:41<00:57,  3.58s/it]epoch 4 loss 1.28448:  43%|████▎     | 12/28 [00:41<00:57,  3.58s/it]epoch 4 loss 1.28448:  46%|████▋     | 13/28 [00:41<00:39,  2.62s/it]epoch 4 loss 1.28872:  46%|████▋     | 13/28 [00:42<00:39,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6594[0m
[32m  eval_f1 = 0.3666[0m
[32m  eval_mcc = 0.6399[0m
[32m  eval_precision = 0.5146[0m
[32m  eval_recall = 0.3328[0m
[32m  ********************[0m
[32m  Best f1:0.3666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28872:  50%|█████     | 14/28 [00:47<00:52,  3.72s/it]epoch 4 loss 1.29293:  50%|█████     | 14/28 [00:48<00:52,  3.72s/it]epoch 4 loss 1.29293:  54%|█████▎    | 15/28 [00:48<00:35,  2.73s/it]epoch 4 loss 1.28818:  54%|█████▎    | 15/28 [00:48<00:35,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6595[0m
[32m  eval_f1 = 0.3683[0m
[32m  eval_mcc = 0.6399[0m
[32m  eval_precision = 0.5143[0m
[32m  eval_recall = 0.3342[0m
[32m  ********************[0m
[32m  Best f1:0.3683[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.28818:  57%|█████▋    | 16/28 [00:53<00:40,  3.40s/it]epoch 4 loss 1.28427:  57%|█████▋    | 16/28 [00:53<00:40,  3.40s/it]epoch 4 loss 1.28427:  61%|██████    | 17/28 [00:53<00:27,  2.50s/it]epoch 4 loss 1.28293:  61%|██████    | 17/28 [00:54<00:27,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6596[0m
[32m  eval_f1 = 0.3692[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.5044[0m
[32m  eval_recall = 0.3349[0m
[32m  ********************[0m
[32m  Best f1:0.3692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.64[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28293:  64%|██████▍   | 18/28 [01:00<00:36,  3.66s/it]epoch 4 loss 1.27927:  64%|██████▍   | 18/28 [01:00<00:36,  3.66s/it]epoch 4 loss 1.27927:  68%|██████▊   | 19/28 [01:00<00:24,  2.69s/it]epoch 4 loss 1.2776:  68%|██████▊   | 19/28 [01:00<00:24,  2.69s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6594[0m
[32m  eval_f1 = 0.3693[0m
[32m  eval_mcc = 0.6397[0m
[32m  eval_precision = 0.5037[0m
[32m  eval_recall = 0.335[0m
[32m  ********************[0m
[32m  Best f1:0.3693[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.2776:  71%|███████▏  | 20/28 [01:05<00:26,  3.37s/it]epoch 4 loss 1.2796:  71%|███████▏  | 20/28 [01:05<00:26,  3.37s/it]epoch 4 loss 1.2796:  75%|███████▌  | 21/28 [01:05<00:17,  2.48s/it]epoch 4 loss 1.27472:  75%|███████▌  | 21/28 [01:06<00:17,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6598[0m
[32m  eval_f1 = 0.369[0m
[32m  eval_mcc = 0.6401[0m
[32m  eval_precision = 0.5031[0m
[32m  eval_recall = 0.3345[0m
[32m  ********************[0m
[32m  Best MCC:0.6401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27472:  79%|███████▊  | 22/28 [01:11<00:19,  3.27s/it]epoch 4 loss 1.27743:  79%|███████▊  | 22/28 [01:11<00:19,  3.27s/it]epoch 4 loss 1.27743:  82%|████████▏ | 23/28 [01:11<00:12,  2.41s/it]epoch 4 loss 1.28186:  82%|████████▏ | 23/28 [01:11<00:12,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6595[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.6398[0m
[32m  eval_precision = 0.5024[0m
[32m  eval_recall = 0.3335[0m

epoch 4 loss 1.28186:  86%|████████▌ | 24/28 [01:15<00:11,  2.82s/it]epoch 4 loss 1.27857:  86%|████████▌ | 24/28 [01:15<00:11,  2.82s/it]epoch 4 loss 1.27857:  89%|████████▉ | 25/28 [01:15<00:06,  2.10s/it]epoch 4 loss 1.2832:  89%|████████▉ | 25/28 [01:16<00:06,  2.10s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6597[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.5022[0m
[32m  eval_recall = 0.3335[0m

epoch 4 loss 1.2832:  93%|█████████▎| 26/28 [01:19<00:05,  2.60s/it]epoch 4 loss 1.28147:  93%|█████████▎| 26/28 [01:19<00:05,  2.60s/it]epoch 4 loss 1.28147:  96%|█████████▋| 27/28 [01:19<00:01,  1.94s/it]epoch 4 loss 1.28626:  96%|█████████▋| 27/28 [01:20<00:01,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6597[0m
[32m  eval_f1 = 0.3679[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.5021[0m
[32m  eval_recall = 0.3335[0m

epoch 4 loss 1.28626: 100%|██████████| 28/28 [01:23<00:00,  2.44s/it]epoch 4 loss 1.28626: 100%|██████████| 28/28 [01:23<00:00,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6594[0m
[32m  eval_f1 = 0.3693[0m
[32m  eval_mcc = 0.6397[0m
[32m  eval_precision = 0.5037[0m
[32m  eval_recall = 0.335[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.71it/s] 70%|███████   | 7/10 [00:02<00:01,  2.72it/s] 80%|████████  | 8/10 [00:02<00:00,  2.72it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6443[0m
[32m  eval_f1 = 0.3239[0m
[32m  eval_mcc = 0.6247[0m
[32m  eval_precision = 0.451[0m
[32m  eval_recall = 0.2949[0m

