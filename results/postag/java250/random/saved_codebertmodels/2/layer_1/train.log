[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=1, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/2/layer_1', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.14294:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.14294:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.15347:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0054[0m
[32m  eval_f1 = 0.0019[0m
[32m  eval_mcc = 0.0006[0m
[32m  eval_precision = 0.0062[0m
[32m  eval_recall = 0.0032[0m
[32m  ********************[0m
[32m  Best f1:0.0019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15347:   7%|▋         | 2/28 [00:05<01:24,  3.25s/it]epoch 0 loss 5.14856:   7%|▋         | 2/28 [00:06<01:24,  3.25s/it]epoch 0 loss 5.14856:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.13499:  11%|█         | 3/28 [00:06<00:48,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0078[0m
[32m  eval_f1 = 0.0027[0m
[32m  eval_mcc = 0.0011[0m
[32m  eval_precision = 0.0075[0m
[32m  eval_recall = 0.0038[0m
[32m  ********************[0m
[32m  Best f1:0.0027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.13499:  14%|█▍        | 4/28 [00:14<01:49,  4.55s/it]epoch 0 loss 5.12007:  14%|█▍        | 4/28 [00:15<01:49,  4.55s/it]epoch 0 loss 5.12007:  18%|█▊        | 5/28 [00:15<01:10,  3.06s/it]epoch 0 loss 5.09242:  18%|█▊        | 5/28 [00:15<01:10,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0232[0m
[32m  eval_f1 = 0.0059[0m
[32m  eval_mcc = 0.0106[0m
[32m  eval_precision = 0.0084[0m
[32m  eval_recall = 0.008[0m
[32m  ********************[0m
[32m  Best f1:0.0059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.09242:  21%|██▏       | 6/28 [00:25<01:59,  5.42s/it]epoch 0 loss 5.05982:  21%|██▏       | 6/28 [00:25<01:59,  5.42s/it]epoch 0 loss 5.05982:  25%|██▌       | 7/28 [00:25<01:19,  3.79s/it]epoch 0 loss 5.02366:  25%|██▌       | 7/28 [00:25<01:19,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0434[0m
[32m  eval_f1 = 0.0085[0m
[32m  eval_mcc = 0.0192[0m
[32m  eval_precision = 0.0184[0m
[32m  eval_recall = 0.012[0m
[32m  ********************[0m
[32m  Best f1:0.0085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.02366:  29%|██▊       | 8/28 [00:32<01:35,  4.76s/it]epoch 0 loss 4.97938:  29%|██▊       | 8/28 [00:32<01:35,  4.76s/it]epoch 0 loss 4.97938:  32%|███▏      | 9/28 [00:32<01:04,  3.41s/it]epoch 0 loss 4.93392:  32%|███▏      | 9/28 [00:33<01:04,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0756[0m
[32m  eval_f1 = 0.0144[0m
[32m  eval_mcc = 0.0393[0m
[32m  eval_precision = 0.0229[0m
[32m  eval_recall = 0.0194[0m
[32m  ********************[0m
[32m  Best f1:0.0144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93392:  36%|███▌      | 10/28 [00:42<01:33,  5.21s/it]epoch 0 loss 4.88541:  36%|███▌      | 10/28 [00:42<01:33,  5.21s/it]epoch 0 loss 4.88541:  39%|███▉      | 11/28 [00:42<01:03,  3.74s/it]epoch 0 loss 4.82848:  39%|███▉      | 11/28 [00:42<01:03,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1121[0m
[32m  eval_f1 = 0.0242[0m
[32m  eval_mcc = 0.0686[0m
[32m  eval_precision = 0.0375[0m
[32m  eval_recall = 0.03[0m
[32m  ********************[0m
[32m  Best f1:0.0242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.82848:  43%|████▎     | 12/28 [00:49<01:16,  4.77s/it]epoch 0 loss 4.76621:  43%|████▎     | 12/28 [00:50<01:16,  4.77s/it]epoch 0 loss 4.76621:  46%|████▋     | 13/28 [00:50<00:51,  3.45s/it]epoch 0 loss 4.70704:  46%|████▋     | 13/28 [00:50<00:51,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1582[0m
[32m  eval_f1 = 0.0371[0m
[32m  eval_mcc = 0.111[0m
[32m  eval_precision = 0.0668[0m
[32m  eval_recall = 0.0407[0m
[32m  ********************[0m
[32m  Best f1:0.0371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.70704:  50%|█████     | 14/28 [00:58<01:09,  4.98s/it]epoch 0 loss 4.64269:  50%|█████     | 14/28 [00:58<01:09,  4.98s/it]epoch 0 loss 4.64269:  54%|█████▎    | 15/28 [00:58<00:46,  3.60s/it]epoch 0 loss 4.57601:  54%|█████▎    | 15/28 [00:59<00:46,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2076[0m
[32m  eval_f1 = 0.0602[0m
[32m  eval_mcc = 0.1587[0m
[32m  eval_precision = 0.1024[0m
[32m  eval_recall = 0.058[0m
[32m  ********************[0m
[32m  Best f1:0.0602[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.57601:  57%|█████▋    | 16/28 [01:07<01:01,  5.14s/it]epoch 0 loss 4.51018:  57%|█████▋    | 16/28 [01:08<01:01,  5.14s/it]epoch 0 loss 4.51018:  61%|██████    | 17/28 [01:08<00:40,  3.72s/it]epoch 0 loss 4.44911:  61%|██████    | 17/28 [01:08<00:40,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2769[0m
[32m  eval_f1 = 0.0909[0m
[32m  eval_mcc = 0.2303[0m
[32m  eval_precision = 0.1413[0m
[32m  eval_recall = 0.0808[0m
[32m  ********************[0m
[32m  Best f1:0.0909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.44911:  64%|██████▍   | 18/28 [01:16<00:51,  5.15s/it]epoch 0 loss 4.37917:  64%|██████▍   | 18/28 [01:16<00:51,  5.15s/it]epoch 0 loss 4.37917:  68%|██████▊   | 19/28 [01:16<00:33,  3.73s/it]epoch 0 loss 4.31158:  68%|██████▊   | 19/28 [01:17<00:33,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3527[0m
[32m  eval_f1 = 0.1103[0m
[32m  eval_mcc = 0.3096[0m
[32m  eval_precision = 0.1668[0m
[32m  eval_recall = 0.0975[0m
[32m  ********************[0m
[32m  Best f1:0.1103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.31158:  71%|███████▏  | 20/28 [01:25<00:42,  5.25s/it]epoch 0 loss 4.24042:  71%|███████▏  | 20/28 [01:26<00:42,  5.25s/it]epoch 0 loss 4.24042:  75%|███████▌  | 21/28 [01:26<00:26,  3.80s/it]epoch 0 loss 4.17376:  75%|███████▌  | 21/28 [01:26<00:26,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4152[0m
[32m  eval_f1 = 0.132[0m
[32m  eval_mcc = 0.3765[0m
[32m  eval_precision = 0.2043[0m
[32m  eval_recall = 0.1178[0m
[32m  ********************[0m
[32m  Best f1:0.132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3765[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.17376:  79%|███████▊  | 22/28 [01:36<00:35,  5.89s/it]epoch 0 loss 4.11112:  79%|███████▊  | 22/28 [01:37<00:35,  5.89s/it]epoch 0 loss 4.11112:  82%|████████▏ | 23/28 [01:37<00:21,  4.25s/it]epoch 0 loss 4.05023:  82%|████████▏ | 23/28 [01:37<00:21,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4433[0m
[32m  eval_f1 = 0.1402[0m
[32m  eval_mcc = 0.4077[0m
[32m  eval_precision = 0.2117[0m
[32m  eval_recall = 0.1269[0m
[32m  ********************[0m
[32m  Best f1:0.1402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4077[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.05023:  86%|████████▌ | 24/28 [01:44<00:20,  5.08s/it]epoch 0 loss 3.98707:  86%|████████▌ | 24/28 [01:44<00:20,  5.08s/it]epoch 0 loss 3.98707:  89%|████████▉ | 25/28 [01:44<00:11,  3.68s/it]epoch 0 loss 3.93155:  89%|████████▉ | 25/28 [01:45<00:11,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4693[0m
[32m  eval_f1 = 0.1534[0m
[32m  eval_mcc = 0.4366[0m
[32m  eval_precision = 0.2134[0m
[32m  eval_recall = 0.1396[0m
[32m  ********************[0m
[32m  Best f1:0.1534[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4366[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.93155:  93%|█████████▎| 26/28 [01:54<00:10,  5.40s/it]epoch 0 loss 3.87315:  93%|█████████▎| 26/28 [01:54<00:10,  5.40s/it]epoch 0 loss 3.87315:  96%|█████████▋| 27/28 [01:54<00:03,  3.90s/it]epoch 0 loss 3.80715:  96%|█████████▋| 27/28 [01:54<00:03,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4976[0m
[32m  eval_f1 = 0.1664[0m
[32m  eval_mcc = 0.4667[0m
[32m  eval_precision = 0.2185[0m
[32m  eval_recall = 0.1551[0m
[32m  ********************[0m
[32m  Best f1:0.1664[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.80715: 100%|██████████| 28/28 [02:00<00:00,  4.49s/it]epoch 0 loss 3.80715: 100%|██████████| 28/28 [02:00<00:00,  4.30s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.12116:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.12116:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 1 loss 2.03069:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5285[0m
[32m  eval_f1 = 0.1794[0m
[32m  eval_mcc = 0.4988[0m
[32m  eval_precision = 0.2663[0m
[32m  eval_recall = 0.1716[0m
[32m  ********************[0m
[32m  Best f1:0.1794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4988[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03069:   7%|▋         | 2/28 [00:06<01:42,  3.95s/it]epoch 1 loss 1.99981:   7%|▋         | 2/28 [00:07<01:42,  3.95s/it]epoch 1 loss 1.99981:  11%|█         | 3/28 [00:07<00:58,  2.34s/it]epoch 1 loss 2.01085:  11%|█         | 3/28 [00:07<00:58,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5563[0m
[32m  eval_f1 = 0.2012[0m
[32m  eval_mcc = 0.5285[0m
[32m  eval_precision = 0.2741[0m
[32m  eval_recall = 0.194[0m
[32m  ********************[0m
[32m  Best f1:0.2012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01085:  14%|█▍        | 4/28 [00:14<01:46,  4.44s/it]epoch 1 loss 1.98811:  14%|█▍        | 4/28 [00:15<01:46,  4.44s/it]epoch 1 loss 1.98811:  18%|█▊        | 5/28 [00:15<01:08,  2.99s/it]epoch 1 loss 1.95575:  18%|█▊        | 5/28 [00:15<01:08,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.63it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.579[0m
[32m  eval_f1 = 0.2131[0m
[32m  eval_mcc = 0.5538[0m
[32m  eval_precision = 0.2739[0m
[32m  eval_recall = 0.2096[0m
[32m  ********************[0m
[32m  Best f1:0.2131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95575:  21%|██▏       | 6/28 [00:25<01:57,  5.32s/it]epoch 1 loss 1.92078:  21%|██▏       | 6/28 [00:25<01:57,  5.32s/it]epoch 1 loss 1.92078:  25%|██▌       | 7/28 [00:25<01:18,  3.72s/it]epoch 1 loss 1.89959:  25%|██▌       | 7/28 [00:26<01:18,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5904[0m
[32m  eval_f1 = 0.2282[0m
[32m  eval_mcc = 0.5673[0m
[32m  eval_precision = 0.2867[0m
[32m  eval_recall = 0.2212[0m
[32m  ********************[0m
[32m  Best f1:0.2282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89959:  29%|██▊       | 8/28 [00:36<02:01,  6.06s/it]epoch 1 loss 1.87044:  29%|██▊       | 8/28 [00:37<02:01,  6.06s/it]epoch 1 loss 1.87044:  32%|███▏      | 9/28 [00:37<01:21,  4.30s/it]epoch 1 loss 1.83671:  32%|███▏      | 9/28 [00:37<01:21,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5971[0m
[32m  eval_f1 = 0.2325[0m
[32m  eval_mcc = 0.5751[0m
[32m  eval_precision = 0.3145[0m
[32m  eval_recall = 0.2243[0m
[32m  ********************[0m
[32m  Best f1:0.2325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5751[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83671:  36%|███▌      | 10/28 [00:48<01:55,  6.41s/it]epoch 1 loss 1.82767:  36%|███▌      | 10/28 [00:48<01:55,  6.41s/it]epoch 1 loss 1.82767:  39%|███▉      | 11/28 [00:48<01:17,  4.57s/it]epoch 1 loss 1.8171:  39%|███▉      | 11/28 [00:49<01:17,  4.57s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6061[0m
[32m  eval_f1 = 0.2454[0m
[32m  eval_mcc = 0.5848[0m
[32m  eval_precision = 0.3248[0m
[32m  eval_recall = 0.2327[0m
[32m  ********************[0m
[32m  Best f1:0.2454[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5848[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8171:  43%|████▎     | 12/28 [01:00<01:48,  6.76s/it]epoch 1 loss 1.79845:  43%|████▎     | 12/28 [01:00<01:48,  6.76s/it]epoch 1 loss 1.79845:  46%|████▋     | 13/28 [01:00<01:12,  4.84s/it]epoch 1 loss 1.78599:  46%|████▋     | 13/28 [01:01<01:12,  4.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6115[0m
[32m  eval_f1 = 0.257[0m
[32m  eval_mcc = 0.5896[0m
[32m  eval_precision = 0.3532[0m
[32m  eval_recall = 0.2414[0m
[32m  ********************[0m
[32m  Best f1:0.257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5896[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.78599:  50%|█████     | 14/28 [01:12<01:35,  6.83s/it]epoch 1 loss 1.77983:  50%|█████     | 14/28 [01:12<01:35,  6.83s/it]epoch 1 loss 1.77983:  54%|█████▎    | 15/28 [01:12<01:03,  4.90s/it]epoch 1 loss 1.76652:  54%|█████▎    | 15/28 [01:13<01:03,  4.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6202[0m
[32m  eval_f1 = 0.2697[0m
[32m  eval_mcc = 0.5984[0m
[32m  eval_precision = 0.3786[0m
[32m  eval_recall = 0.2528[0m
[32m  ********************[0m
[32m  Best f1:0.2697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76652:  57%|█████▋    | 16/28 [01:23<01:21,  6.76s/it]epoch 1 loss 1.74383:  57%|█████▋    | 16/28 [01:24<01:21,  6.76s/it]epoch 1 loss 1.74383:  61%|██████    | 17/28 [01:24<00:53,  4.85s/it]epoch 1 loss 1.73038:  61%|██████    | 17/28 [01:24<00:53,  4.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6229[0m
[32m  eval_f1 = 0.282[0m
[32m  eval_mcc = 0.6014[0m
[32m  eval_precision = 0.3927[0m
[32m  eval_recall = 0.2611[0m
[32m  ********************[0m
[32m  Best f1:0.282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.73038:  64%|██████▍   | 18/28 [01:33<01:00,  6.10s/it]epoch 1 loss 1.71447:  64%|██████▍   | 18/28 [01:33<01:00,  6.10s/it]epoch 1 loss 1.71447:  68%|██████▊   | 19/28 [01:33<00:39,  4.40s/it]epoch 1 loss 1.69311:  68%|██████▊   | 19/28 [01:34<00:39,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6257[0m
[32m  eval_f1 = 0.31[0m
[32m  eval_mcc = 0.6057[0m
[32m  eval_precision = 0.4269[0m
[32m  eval_recall = 0.2853[0m
[32m  ********************[0m
[32m  Best f1:0.31[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.69311:  71%|███████▏  | 20/28 [01:44<00:51,  6.41s/it]epoch 1 loss 1.67981:  71%|███████▏  | 20/28 [01:45<00:51,  6.41s/it]epoch 1 loss 1.67981:  75%|███████▌  | 21/28 [01:45<00:32,  4.61s/it]epoch 1 loss 1.66576:  75%|███████▌  | 21/28 [01:45<00:32,  4.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6273[0m
[32m  eval_f1 = 0.3129[0m
[32m  eval_mcc = 0.6078[0m
[32m  eval_precision = 0.4353[0m
[32m  eval_recall = 0.2874[0m
[32m  ********************[0m
[32m  Best f1:0.3129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.66576:  79%|███████▊  | 22/28 [01:56<00:39,  6.54s/it]epoch 1 loss 1.65514:  79%|███████▊  | 22/28 [01:56<00:39,  6.54s/it]epoch 1 loss 1.65514:  82%|████████▏ | 23/28 [01:56<00:23,  4.70s/it]epoch 1 loss 1.64275:  82%|████████▏ | 23/28 [01:57<00:23,  4.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6306[0m
[32m  eval_f1 = 0.3167[0m
[32m  eval_mcc = 0.6113[0m
[32m  eval_precision = 0.4237[0m
[32m  eval_recall = 0.2913[0m
[32m  ********************[0m
[32m  Best f1:0.3167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.64275:  86%|████████▌ | 24/28 [02:04<00:22,  5.67s/it]epoch 1 loss 1.6308:  86%|████████▌ | 24/28 [02:04<00:22,  5.67s/it] epoch 1 loss 1.6308:  89%|████████▉ | 25/28 [02:04<00:12,  4.09s/it]epoch 1 loss 1.61896:  89%|████████▉ | 25/28 [02:05<00:12,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6366[0m
[32m  eval_f1 = 0.328[0m
[32m  eval_mcc = 0.6169[0m
[32m  eval_precision = 0.4263[0m
[32m  eval_recall = 0.3024[0m
[32m  ********************[0m
[32m  Best f1:0.328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.61896:  93%|█████████▎| 26/28 [02:15<00:11,  5.92s/it]epoch 1 loss 1.61164:  93%|█████████▎| 26/28 [02:15<00:11,  5.92s/it]epoch 1 loss 1.61164:  96%|█████████▋| 27/28 [02:15<00:04,  4.27s/it]epoch 1 loss 1.60069:  96%|█████████▋| 27/28 [02:15<00:04,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.3325[0m
[32m  eval_mcc = 0.6185[0m
[32m  eval_precision = 0.4299[0m
[32m  eval_recall = 0.3079[0m
[32m  ********************[0m
[32m  Best f1:0.3325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.60069: 100%|██████████| 28/28 [02:23<00:00,  5.26s/it]epoch 1 loss 1.60069: 100%|██████████| 28/28 [02:23<00:00,  5.11s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.15454:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.15454:   4%|▎         | 1/28 [00:00<00:11,  2.43it/s]epoch 2 loss 1.24419:   4%|▎         | 1/28 [00:00<00:11,  2.43it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.3385[0m
[32m  eval_mcc = 0.6221[0m
[32m  eval_precision = 0.4428[0m
[32m  eval_recall = 0.3139[0m
[32m  ********************[0m
[32m  Best f1:0.3385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24419:   7%|▋         | 2/28 [00:11<02:49,  6.51s/it]epoch 2 loss 1.24288:   7%|▋         | 2/28 [00:11<02:49,  6.51s/it]epoch 2 loss 1.24288:  11%|█         | 3/28 [00:11<01:33,  3.73s/it]epoch 2 loss 1.3073:  11%|█         | 3/28 [00:12<01:33,  3.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6458[0m
[32m  eval_f1 = 0.3429[0m
[32m  eval_mcc = 0.6252[0m
[32m  eval_precision = 0.4423[0m
[32m  eval_recall = 0.3179[0m
[32m  ********************[0m
[32m  Best f1:0.3429[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3073:  14%|█▍        | 4/28 [00:18<02:03,  5.14s/it]epoch 2 loss 1.31069:  14%|█▍        | 4/28 [00:19<02:03,  5.14s/it]epoch 2 loss 1.31069:  18%|█▊        | 5/28 [00:19<01:19,  3.44s/it]epoch 2 loss 1.30921:  18%|█▊        | 5/28 [00:19<01:19,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6475[0m
[32m  eval_f1 = 0.3451[0m
[32m  eval_mcc = 0.6271[0m
[32m  eval_precision = 0.4512[0m
[32m  eval_recall = 0.3204[0m
[32m  ********************[0m
[32m  Best f1:0.3451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.30921:  21%|██▏       | 6/28 [00:29<02:02,  5.56s/it]epoch 2 loss 1.30332:  21%|██▏       | 6/28 [00:29<02:02,  5.56s/it]epoch 2 loss 1.30332:  25%|██▌       | 7/28 [00:29<01:21,  3.88s/it]epoch 2 loss 1.31124:  25%|██▌       | 7/28 [00:29<01:21,  3.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6493[0m
[32m  eval_f1 = 0.3465[0m
[32m  eval_mcc = 0.6296[0m
[32m  eval_precision = 0.4516[0m
[32m  eval_recall = 0.3202[0m
[32m  ********************[0m
[32m  Best f1:0.3465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6296[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.31124:  29%|██▊       | 8/28 [00:37<01:45,  5.28s/it]epoch 2 loss 1.30779:  29%|██▊       | 8/28 [00:38<01:45,  5.28s/it]epoch 2 loss 1.30779:  32%|███▏      | 9/28 [00:38<01:11,  3.76s/it]epoch 2 loss 1.2889:  32%|███▏      | 9/28 [00:38<01:11,  3.76s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6508[0m
[32m  eval_f1 = 0.3498[0m
[32m  eval_mcc = 0.6319[0m
[32m  eval_precision = 0.4632[0m
[32m  eval_recall = 0.323[0m
[32m  ********************[0m
[32m  Best f1:0.3498[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2889:  36%|███▌      | 10/28 [00:48<01:47,  5.95s/it]epoch 2 loss 1.28772:  36%|███▌      | 10/28 [00:49<01:47,  5.95s/it]epoch 2 loss 1.28772:  39%|███▉      | 11/28 [00:49<01:12,  4.26s/it]epoch 2 loss 1.28072:  39%|███▉      | 11/28 [00:49<01:12,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.652[0m
[32m  eval_f1 = 0.3516[0m
[32m  eval_mcc = 0.6331[0m
[32m  eval_precision = 0.4608[0m
[32m  eval_recall = 0.3246[0m
[32m  ********************[0m
[32m  Best f1:0.3516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6331[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.28072:  43%|████▎     | 12/28 [01:00<01:42,  6.42s/it]epoch 2 loss 1.28117:  43%|████▎     | 12/28 [01:01<01:42,  6.42s/it]epoch 2 loss 1.28117:  46%|████▋     | 13/28 [01:01<01:09,  4.61s/it]epoch 2 loss 1.268:  46%|████▋     | 13/28 [01:01<01:09,  4.61s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6529[0m
[32m  eval_f1 = 0.3547[0m
[32m  eval_mcc = 0.6339[0m
[32m  eval_precision = 0.4581[0m
[32m  eval_recall = 0.3273[0m
[32m  ********************[0m
[32m  Best f1:0.3547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.268:  50%|█████     | 14/28 [01:12<01:31,  6.56s/it]epoch 2 loss 1.27009:  50%|█████     | 14/28 [01:12<01:31,  6.56s/it]epoch 2 loss 1.27009:  54%|█████▎    | 15/28 [01:12<01:01,  4.71s/it]epoch 2 loss 1.27078:  54%|█████▎    | 15/28 [01:13<01:01,  4.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3553[0m
[32m  eval_mcc = 0.6359[0m
[32m  eval_precision = 0.4593[0m
[32m  eval_recall = 0.3284[0m
[32m  ********************[0m
[32m  Best f1:0.3553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.27078:  57%|█████▋    | 16/28 [01:23<01:19,  6.62s/it]epoch 2 loss 1.26984:  57%|█████▋    | 16/28 [01:24<01:19,  6.62s/it]epoch 2 loss 1.26984:  61%|██████    | 17/28 [01:24<00:52,  4.76s/it]epoch 2 loss 1.26194:  61%|██████    | 17/28 [01:24<00:52,  4.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6582[0m
[32m  eval_f1 = 0.3556[0m
[32m  eval_mcc = 0.6386[0m
[32m  eval_precision = 0.4625[0m
[32m  eval_recall = 0.3293[0m
[32m  ********************[0m
[32m  Best f1:0.3556[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6386[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26194:  64%|██████▍   | 18/28 [01:35<01:06,  6.63s/it]epoch 2 loss 1.26002:  64%|██████▍   | 18/28 [01:35<01:06,  6.63s/it]epoch 2 loss 1.26002:  68%|██████▊   | 19/28 [01:35<00:42,  4.76s/it]epoch 2 loss 1.25541:  68%|██████▊   | 19/28 [01:35<00:42,  4.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6603[0m
[32m  eval_f1 = 0.357[0m
[32m  eval_mcc = 0.6407[0m
[32m  eval_precision = 0.456[0m
[32m  eval_recall = 0.3318[0m
[32m  ********************[0m
[32m  Best f1:0.357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25541:  71%|███████▏  | 20/28 [01:46<00:53,  6.71s/it]epoch 2 loss 1.25349:  71%|███████▏  | 20/28 [01:47<00:53,  6.71s/it]epoch 2 loss 1.25349:  75%|███████▌  | 21/28 [01:47<00:33,  4.82s/it]epoch 2 loss 1.25088:  75%|███████▌  | 21/28 [01:47<00:33,  4.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6638[0m
[32m  eval_f1 = 0.365[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4738[0m
[32m  eval_recall = 0.338[0m
[32m  ********************[0m
[32m  Best f1:0.365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25088:  79%|███████▊  | 22/28 [01:55<00:35,  5.95s/it]epoch 2 loss 1.25629:  79%|███████▊  | 22/28 [01:56<00:35,  5.95s/it]epoch 2 loss 1.25629:  82%|████████▏ | 23/28 [01:56<00:21,  4.29s/it]epoch 2 loss 1.25625:  82%|████████▏ | 23/28 [01:56<00:21,  4.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6661[0m
[32m  eval_f1 = 0.371[0m
[32m  eval_mcc = 0.6467[0m
[32m  eval_precision = 0.4755[0m
[32m  eval_recall = 0.343[0m
[32m  ********************[0m
[32m  Best f1:0.371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6467[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25625:  86%|████████▌ | 24/28 [02:07<00:25,  6.27s/it]epoch 2 loss 1.25367:  86%|████████▌ | 24/28 [02:07<00:25,  6.27s/it]epoch 2 loss 1.25367:  89%|████████▉ | 25/28 [02:07<00:13,  4.52s/it]epoch 2 loss 1.2565:  89%|████████▉ | 25/28 [02:07<00:13,  4.52s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6668[0m
[32m  eval_f1 = 0.3787[0m
[32m  eval_mcc = 0.6475[0m
[32m  eval_precision = 0.4787[0m
[32m  eval_recall = 0.349[0m
[32m  ********************[0m
[32m  Best f1:0.3787[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6475[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2565:  93%|█████████▎| 26/28 [02:18<00:12,  6.45s/it]epoch 2 loss 1.25613:  93%|█████████▎| 26/28 [02:18<00:12,  6.45s/it]epoch 2 loss 1.25613:  96%|█████████▋| 27/28 [02:18<00:04,  4.64s/it]epoch 2 loss 1.25785:  96%|█████████▋| 27/28 [02:19<00:04,  4.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6687[0m
[32m  eval_f1 = 0.3803[0m
[32m  eval_mcc = 0.6496[0m
[32m  eval_precision = 0.4823[0m
[32m  eval_recall = 0.3495[0m
[32m  ********************[0m
[32m  Best f1:0.3803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6496[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25785: 100%|██████████| 28/28 [02:25<00:00,  5.19s/it]epoch 2 loss 1.25785: 100%|██████████| 28/28 [02:25<00:00,  5.19s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.15814:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.15814:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 3 loss 1.24332:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6693[0m
[32m  eval_f1 = 0.3824[0m
[32m  eval_mcc = 0.6504[0m
[32m  eval_precision = 0.4926[0m
[32m  eval_recall = 0.3499[0m
[32m  ********************[0m
[32m  Best f1:0.3824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24332:   7%|▋         | 2/28 [00:08<02:13,  5.13s/it]epoch 3 loss 1.21487:   7%|▋         | 2/28 [00:09<02:13,  5.13s/it]epoch 3 loss 1.21487:  11%|█         | 3/28 [00:09<01:14,  2.98s/it]epoch 3 loss 1.20357:  11%|█         | 3/28 [00:09<01:14,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6684[0m
[32m  eval_f1 = 0.3824[0m
[32m  eval_mcc = 0.6496[0m
[32m  eval_precision = 0.4933[0m
[32m  eval_recall = 0.3496[0m
[32m  ********************[0m
[32m  Best f1:0.3824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.20357:  14%|█▍        | 4/28 [00:14<01:30,  3.79s/it]epoch 3 loss 1.19676:  14%|█▍        | 4/28 [00:14<01:30,  3.79s/it]epoch 3 loss 1.19676:  18%|█▊        | 5/28 [00:14<00:59,  2.57s/it]epoch 3 loss 1.19395:  18%|█▊        | 5/28 [00:15<00:59,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6691[0m
[32m  eval_f1 = 0.3847[0m
[32m  eval_mcc = 0.6505[0m
[32m  eval_precision = 0.505[0m
[32m  eval_recall = 0.351[0m
[32m  ********************[0m
[32m  Best f1:0.3847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19395:  21%|██▏       | 6/28 [00:24<01:53,  5.15s/it]epoch 3 loss 1.1799:  21%|██▏       | 6/28 [00:25<01:53,  5.15s/it] epoch 3 loss 1.1799:  25%|██▌       | 7/28 [00:25<01:15,  3.60s/it]epoch 3 loss 1.18292:  25%|██▌       | 7/28 [00:25<01:15,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6688[0m
[32m  eval_f1 = 0.3856[0m
[32m  eval_mcc = 0.65[0m
[32m  eval_precision = 0.5107[0m
[32m  eval_recall = 0.3519[0m
[32m  ********************[0m
[32m  Best f1:0.3856[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.18292:  29%|██▊       | 8/28 [00:30<01:21,  4.07s/it]epoch 3 loss 1.17994:  29%|██▊       | 8/28 [00:30<01:21,  4.07s/it]epoch 3 loss 1.17994:  32%|███▏      | 9/28 [00:30<00:55,  2.93s/it]epoch 3 loss 1.17663:  32%|███▏      | 9/28 [00:31<00:55,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6692[0m
[32m  eval_f1 = 0.3848[0m
[32m  eval_mcc = 0.6504[0m
[32m  eval_precision = 0.5075[0m
[32m  eval_recall = 0.3516[0m

epoch 3 loss 1.17663:  36%|███▌      | 10/28 [00:34<00:57,  3.19s/it]epoch 3 loss 1.17378:  36%|███▌      | 10/28 [00:34<00:57,  3.19s/it]epoch 3 loss 1.17378:  39%|███▉      | 11/28 [00:34<00:39,  2.34s/it]epoch 3 loss 1.17112:  39%|███▉      | 11/28 [00:35<00:39,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6696[0m
[32m  eval_f1 = 0.3847[0m
[32m  eval_mcc = 0.6509[0m
[32m  eval_precision = 0.4982[0m
[32m  eval_recall = 0.3516[0m
[32m  ********************[0m
[32m  Best MCC:0.6509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17112:  43%|████▎     | 12/28 [00:40<00:53,  3.32s/it]epoch 3 loss 1.17612:  43%|████▎     | 12/28 [00:40<00:53,  3.32s/it]epoch 3 loss 1.17612:  46%|████▋     | 13/28 [00:40<00:36,  2.43s/it]epoch 3 loss 1.17624:  46%|████▋     | 13/28 [00:41<00:36,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6705[0m
[32m  eval_f1 = 0.3852[0m
[32m  eval_mcc = 0.6518[0m
[32m  eval_precision = 0.499[0m
[32m  eval_recall = 0.3526[0m
[32m  ********************[0m
[32m  Best MCC:0.6518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17624:  50%|█████     | 14/28 [00:45<00:44,  3.19s/it]epoch 3 loss 1.18272:  50%|█████     | 14/28 [00:46<00:44,  3.19s/it]epoch 3 loss 1.18272:  54%|█████▎    | 15/28 [00:46<00:30,  2.35s/it]epoch 3 loss 1.17951:  54%|█████▎    | 15/28 [00:46<00:30,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6715[0m
[32m  eval_f1 = 0.3855[0m
[32m  eval_mcc = 0.6527[0m
[32m  eval_precision = 0.4973[0m
[32m  eval_recall = 0.3536[0m
[32m  ********************[0m
[32m  Best MCC:0.6527[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17951:  57%|█████▋    | 16/28 [00:51<00:40,  3.34s/it]epoch 3 loss 1.17982:  57%|█████▋    | 16/28 [00:52<00:40,  3.34s/it]epoch 3 loss 1.17982:  61%|██████    | 17/28 [00:52<00:27,  2.47s/it]epoch 3 loss 1.17867:  61%|██████    | 17/28 [00:52<00:27,  2.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6726[0m
[32m  eval_f1 = 0.3881[0m
[32m  eval_mcc = 0.6538[0m
[32m  eval_precision = 0.4962[0m
[32m  eval_recall = 0.3562[0m
[32m  ********************[0m
[32m  Best f1:0.3881[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6538[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17867:  64%|██████▍   | 18/28 [00:58<00:37,  3.71s/it]epoch 3 loss 1.17866:  64%|██████▍   | 18/28 [00:59<00:37,  3.71s/it]epoch 3 loss 1.17866:  68%|██████▊   | 19/28 [00:59<00:24,  2.72s/it]epoch 3 loss 1.18422:  68%|██████▊   | 19/28 [00:59<00:24,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6733[0m
[32m  eval_f1 = 0.389[0m
[32m  eval_mcc = 0.6545[0m
[32m  eval_precision = 0.4968[0m
[32m  eval_recall = 0.3573[0m
[32m  ********************[0m
[32m  Best f1:0.389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.18422:  71%|███████▏  | 20/28 [01:07<00:35,  4.47s/it]epoch 3 loss 1.18182:  71%|███████▏  | 20/28 [01:08<00:35,  4.47s/it]epoch 3 loss 1.18182:  75%|███████▌  | 21/28 [01:08<00:22,  3.26s/it]epoch 3 loss 1.1821:  75%|███████▌  | 21/28 [01:08<00:22,  3.26s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6748[0m
[32m  eval_f1 = 0.3916[0m
[32m  eval_mcc = 0.6561[0m
[32m  eval_precision = 0.5014[0m
[32m  eval_recall = 0.3597[0m
[32m  ********************[0m
[32m  Best f1:0.3916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1821:  79%|███████▊  | 22/28 [01:16<00:29,  4.85s/it]epoch 3 loss 1.18006:  79%|███████▊  | 22/28 [01:17<00:29,  4.85s/it]epoch 3 loss 1.18006:  82%|████████▏ | 23/28 [01:17<00:17,  3.52s/it]epoch 3 loss 1.17857:  82%|████████▏ | 23/28 [01:17<00:17,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6753[0m
[32m  eval_f1 = 0.3921[0m
[32m  eval_mcc = 0.6568[0m
[32m  eval_precision = 0.4986[0m
[32m  eval_recall = 0.3611[0m
[32m  ********************[0m
[32m  Best f1:0.3921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17857:  86%|████████▌ | 24/28 [01:27<00:22,  5.60s/it]epoch 3 loss 1.17905:  86%|████████▌ | 24/28 [01:28<00:22,  5.60s/it]epoch 3 loss 1.17905:  89%|████████▉ | 25/28 [01:28<00:12,  4.05s/it]epoch 3 loss 1.17333:  89%|████████▉ | 25/28 [01:28<00:12,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6756[0m
[32m  eval_f1 = 0.3917[0m
[32m  eval_mcc = 0.6572[0m
[32m  eval_precision = 0.4979[0m
[32m  eval_recall = 0.3607[0m
[32m  ********************[0m
[32m  Best MCC:0.6572[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17333:  93%|█████████▎| 26/28 [01:34<00:09,  4.69s/it]epoch 3 loss 1.17426:  93%|█████████▎| 26/28 [01:34<00:09,  4.69s/it]epoch 3 loss 1.17426:  96%|█████████▋| 27/28 [01:34<00:03,  3.41s/it]epoch 3 loss 1.17652:  96%|█████████▋| 27/28 [01:34<00:03,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6757[0m
[32m  eval_f1 = 0.3924[0m
[32m  eval_mcc = 0.6574[0m
[32m  eval_precision = 0.5003[0m
[32m  eval_recall = 0.361[0m
[32m  ********************[0m
[32m  Best f1:0.3924[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.17652: 100%|██████████| 28/28 [01:45<00:00,  5.73s/it]epoch 3 loss 1.17652: 100%|██████████| 28/28 [01:45<00:00,  3.78s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.10214:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.10214:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s]epoch 4 loss 1.15881:   4%|▎         | 1/28 [00:00<00:11,  2.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6757[0m
[32m  eval_f1 = 0.3928[0m
[32m  eval_mcc = 0.6573[0m
[32m  eval_precision = 0.5038[0m
[32m  eval_recall = 0.3609[0m
[32m  ********************[0m
[32m  Best f1:0.3928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.15881:   7%|▋         | 2/28 [00:05<01:16,  2.93s/it]epoch 4 loss 1.13617:   7%|▋         | 2/28 [00:05<01:16,  2.93s/it]epoch 4 loss 1.13617:  11%|█         | 3/28 [00:05<00:44,  1.78s/it]epoch 4 loss 1.15896:  11%|█         | 3/28 [00:05<00:44,  1.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6762[0m
[32m  eval_f1 = 0.3944[0m
[32m  eval_mcc = 0.6579[0m
[32m  eval_precision = 0.5031[0m
[32m  eval_recall = 0.3624[0m
[32m  ********************[0m
[32m  Best f1:0.3944[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.15896:  14%|█▍        | 4/28 [00:14<01:48,  4.51s/it]epoch 4 loss 1.14891:  14%|█▍        | 4/28 [00:14<01:48,  4.51s/it]epoch 4 loss 1.14891:  18%|█▊        | 5/28 [00:14<01:09,  3.03s/it]epoch 4 loss 1.14775:  18%|█▊        | 5/28 [00:15<01:09,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6761[0m
[32m  eval_f1 = 0.3958[0m
[32m  eval_mcc = 0.6578[0m
[32m  eval_precision = 0.5033[0m
[32m  eval_recall = 0.3632[0m
[32m  ********************[0m
[32m  Best f1:0.3958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.14775:  21%|██▏       | 6/28 [00:23<01:48,  4.91s/it]epoch 4 loss 1.15301:  21%|██▏       | 6/28 [00:23<01:48,  4.91s/it]epoch 4 loss 1.15301:  25%|██▌       | 7/28 [00:23<01:12,  3.45s/it]epoch 4 loss 1.14579:  25%|██▌       | 7/28 [00:24<01:12,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6765[0m
[32m  eval_f1 = 0.3972[0m
[32m  eval_mcc = 0.6582[0m
[32m  eval_precision = 0.5044[0m
[32m  eval_recall = 0.3642[0m
[32m  ********************[0m
[32m  Best f1:0.3972[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14579:  29%|██▊       | 8/28 [00:33<01:49,  5.49s/it]epoch 4 loss 1.13959:  29%|██▊       | 8/28 [00:33<01:49,  5.49s/it]epoch 4 loss 1.13959:  32%|███▏      | 9/28 [00:33<01:14,  3.91s/it]epoch 4 loss 1.13727:  32%|███▏      | 9/28 [00:34<01:14,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6763[0m
[32m  eval_f1 = 0.3975[0m
[32m  eval_mcc = 0.658[0m
[32m  eval_precision = 0.5039[0m
[32m  eval_recall = 0.3646[0m
[32m  ********************[0m
[32m  Best f1:0.3975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.13727:  36%|███▌      | 10/28 [00:39<01:21,  4.55s/it]epoch 4 loss 1.13725:  36%|███▌      | 10/28 [00:40<01:21,  4.55s/it]epoch 4 loss 1.13725:  39%|███▉      | 11/28 [00:40<00:55,  3.28s/it]epoch 4 loss 1.14487:  39%|███▉      | 11/28 [00:40<00:55,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6767[0m
[32m  eval_f1 = 0.3975[0m
[32m  eval_mcc = 0.6584[0m
[32m  eval_precision = 0.5107[0m
[32m  eval_recall = 0.3646[0m
[32m  ********************[0m
[32m  Best f1:0.3975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14487:  43%|████▎     | 12/28 [00:49<01:21,  5.10s/it]epoch 4 loss 1.14168:  43%|████▎     | 12/28 [00:49<01:21,  5.10s/it]epoch 4 loss 1.14168:  46%|████▋     | 13/28 [00:49<00:55,  3.69s/it]epoch 4 loss 1.14591:  46%|████▋     | 13/28 [00:50<00:55,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6768[0m
[32m  eval_f1 = 0.3982[0m
[32m  eval_mcc = 0.6585[0m
[32m  eval_precision = 0.5071[0m
[32m  eval_recall = 0.3655[0m
[32m  ********************[0m
[32m  Best f1:0.3982[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14591:  50%|█████     | 14/28 [01:01<01:23,  5.94s/it]epoch 4 loss 1.15058:  50%|█████     | 14/28 [01:01<01:23,  5.94s/it]epoch 4 loss 1.15058:  54%|█████▎    | 15/28 [01:01<00:55,  4.28s/it]epoch 4 loss 1.14654:  54%|█████▎    | 15/28 [01:01<00:55,  4.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6766[0m
[32m  eval_f1 = 0.3972[0m
[32m  eval_mcc = 0.6582[0m
[32m  eval_precision = 0.4985[0m
[32m  eval_recall = 0.3648[0m

epoch 4 loss 1.14654:  57%|█████▋    | 16/28 [01:05<00:49,  4.13s/it]epoch 4 loss 1.14321:  57%|█████▋    | 16/28 [01:05<00:49,  4.13s/it]epoch 4 loss 1.14321:  61%|██████    | 17/28 [01:05<00:33,  3.01s/it]epoch 4 loss 1.14264:  61%|██████    | 17/28 [01:06<00:33,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6769[0m
[32m  eval_f1 = 0.3982[0m
[32m  eval_mcc = 0.6585[0m
[32m  eval_precision = 0.4999[0m
[32m  eval_recall = 0.3656[0m
[32m  ********************[0m
[32m  Best f1:0.3982[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.14264:  64%|██████▍   | 18/28 [01:10<00:36,  3.63s/it]epoch 4 loss 1.13969:  64%|██████▍   | 18/28 [01:11<00:36,  3.63s/it]epoch 4 loss 1.13969:  68%|██████▊   | 19/28 [01:11<00:23,  2.66s/it]epoch 4 loss 1.13789:  68%|██████▊   | 19/28 [01:11<00:23,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6766[0m
[32m  eval_f1 = 0.398[0m
[32m  eval_mcc = 0.6581[0m
[32m  eval_precision = 0.4986[0m
[32m  eval_recall = 0.3654[0m

epoch 4 loss 1.13789:  71%|███████▏  | 20/28 [01:16<00:27,  3.49s/it]epoch 4 loss 1.13983:  71%|███████▏  | 20/28 [01:17<00:27,  3.49s/it]epoch 4 loss 1.13983:  75%|███████▌  | 21/28 [01:17<00:17,  2.56s/it]epoch 4 loss 1.13557:  75%|███████▌  | 21/28 [01:17<00:17,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.677[0m
[32m  eval_f1 = 0.3978[0m
[32m  eval_mcc = 0.6585[0m
[32m  eval_precision = 0.4984[0m
[32m  eval_recall = 0.3653[0m

epoch 4 loss 1.13557:  79%|███████▊  | 22/28 [01:20<00:17,  2.93s/it]epoch 4 loss 1.13721:  79%|███████▊  | 22/28 [01:21<00:17,  2.93s/it]epoch 4 loss 1.13721:  82%|████████▏ | 23/28 [01:21<00:10,  2.17s/it]epoch 4 loss 1.14125:  82%|████████▏ | 23/28 [01:21<00:10,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6773[0m
[32m  eval_f1 = 0.3979[0m
[32m  eval_mcc = 0.6589[0m
[32m  eval_precision = 0.4988[0m
[32m  eval_recall = 0.3654[0m
[32m  ********************[0m
[32m  Best MCC:0.6589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14125:  86%|████████▌ | 24/28 [01:28<00:14,  3.67s/it]epoch 4 loss 1.13763:  86%|████████▌ | 24/28 [01:28<00:14,  3.67s/it]epoch 4 loss 1.13763:  89%|████████▉ | 25/28 [01:28<00:08,  2.70s/it]epoch 4 loss 1.14216:  89%|████████▉ | 25/28 [01:29<00:08,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6775[0m
[32m  eval_f1 = 0.398[0m
[32m  eval_mcc = 0.659[0m
[32m  eval_precision = 0.4988[0m
[32m  eval_recall = 0.3655[0m
[32m  ********************[0m
[32m  Best MCC:0.659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14216:  93%|█████████▎| 26/28 [01:36<00:08,  4.04s/it]epoch 4 loss 1.14073:  93%|█████████▎| 26/28 [01:36<00:08,  4.04s/it]epoch 4 loss 1.14073:  96%|█████████▋| 27/28 [01:36<00:02,  2.95s/it]epoch 4 loss 1.14548:  96%|█████████▋| 27/28 [01:36<00:02,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6776[0m
[32m  eval_f1 = 0.3981[0m
[32m  eval_mcc = 0.6591[0m
[32m  eval_precision = 0.499[0m
[32m  eval_recall = 0.3655[0m
[32m  ********************[0m
[32m  Best MCC:0.6591[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_1/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14548: 100%|██████████| 28/28 [01:43<00:00,  4.13s/it]epoch 4 loss 1.14548: 100%|██████████| 28/28 [01:43<00:00,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.57it/s] 20%|██        | 2/10 [00:00<00:03,  2.62it/s] 30%|███       | 3/10 [00:01<00:02,  2.68it/s] 40%|████      | 4/10 [00:01<00:02,  2.71it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6769[0m
[32m  eval_f1 = 0.3982[0m
[32m  eval_mcc = 0.6585[0m
[32m  eval_precision = 0.4999[0m
[32m  eval_recall = 0.3656[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6641[0m
[32m  eval_f1 = 0.3537[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.454[0m
[32m  eval_recall = 0.3241[0m

