[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=11, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/2/layer_11', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.19632:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.19632:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.19239:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0101[0m
[32m  eval_f1 = 0.0029[0m
[32m  eval_mcc = 0.0059[0m
[32m  eval_precision = 0.0091[0m
[32m  eval_recall = 0.0073[0m
[32m  ********************[0m
[32m  Best f1:0.0029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.19239:   7%|▋         | 2/28 [00:05<01:24,  3.26s/it]epoch 0 loss 5.19221:   7%|▋         | 2/28 [00:06<01:24,  3.26s/it]epoch 0 loss 5.19221:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.16919:  11%|█         | 3/28 [00:06<00:48,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0166[0m
[32m  eval_f1 = 0.0046[0m
[32m  eval_mcc = 0.0094[0m
[32m  eval_precision = 0.0122[0m
[32m  eval_recall = 0.0079[0m
[32m  ********************[0m
[32m  Best f1:0.0046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0094[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.16919:  14%|█▍        | 4/28 [00:15<01:59,  4.98s/it]epoch 0 loss 5.14475:  14%|█▍        | 4/28 [00:16<01:59,  4.98s/it]epoch 0 loss 5.14475:  18%|█▊        | 5/28 [00:16<01:16,  3.34s/it]epoch 0 loss 5.11079:  18%|█▊        | 5/28 [00:16<01:16,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0268[0m
[32m  eval_f1 = 0.005[0m
[32m  eval_mcc = 0.0093[0m
[32m  eval_precision = 0.0097[0m
[32m  eval_recall = 0.0102[0m
[32m  ********************[0m
[32m  Best f1:0.005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.11079:  21%|██▏       | 6/28 [00:22<01:37,  4.45s/it]epoch 0 loss 5.07507:  21%|██▏       | 6/28 [00:23<01:37,  4.45s/it]epoch 0 loss 5.07507:  25%|██▌       | 7/28 [00:23<01:05,  3.13s/it]epoch 0 loss 5.03184:  25%|██▌       | 7/28 [00:23<01:05,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0462[0m
[32m  eval_f1 = 0.0064[0m
[32m  eval_mcc = 0.0155[0m
[32m  eval_precision = 0.0101[0m
[32m  eval_recall = 0.014[0m
[32m  ********************[0m
[32m  Best f1:0.0064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.03184:  29%|██▊       | 8/28 [00:31<01:36,  4.84s/it]epoch 0 loss 4.98295:  29%|██▊       | 8/28 [00:32<01:36,  4.84s/it]epoch 0 loss 4.98295:  32%|███▏      | 9/28 [00:32<01:05,  3.46s/it]epoch 0 loss 4.93271:  32%|███▏      | 9/28 [00:32<01:05,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0577[0m
[32m  eval_f1 = 0.0083[0m
[32m  eval_mcc = 0.0191[0m
[32m  eval_precision = 0.0166[0m
[32m  eval_recall = 0.0165[0m
[32m  ********************[0m
[32m  Best f1:0.0083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93271:  36%|███▌      | 10/28 [00:38<01:18,  4.35s/it]epoch 0 loss 4.87938:  36%|███▌      | 10/28 [00:38<01:18,  4.35s/it]epoch 0 loss 4.87938:  39%|███▉      | 11/28 [00:38<00:53,  3.15s/it]epoch 0 loss 4.81866:  39%|███▉      | 11/28 [00:39<00:53,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0788[0m
[32m  eval_f1 = 0.012[0m
[32m  eval_mcc = 0.0355[0m
[32m  eval_precision = 0.0202[0m
[32m  eval_recall = 0.0202[0m
[32m  ********************[0m
[32m  Best f1:0.012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.81866:  43%|████▎     | 12/28 [00:45<01:06,  4.13s/it]epoch 0 loss 4.75303:  43%|████▎     | 12/28 [00:45<01:06,  4.13s/it]epoch 0 loss 4.75303:  46%|████▋     | 13/28 [00:45<00:45,  3.00s/it]epoch 0 loss 4.69158:  46%|████▋     | 13/28 [00:46<00:45,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1091[0m
[32m  eval_f1 = 0.0175[0m
[32m  eval_mcc = 0.0589[0m
[32m  eval_precision = 0.0316[0m
[32m  eval_recall = 0.0234[0m
[32m  ********************[0m
[32m  Best f1:0.0175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.69158:  50%|█████     | 14/28 [00:52<00:56,  4.01s/it]epoch 0 loss 4.62781:  50%|█████     | 14/28 [00:52<00:56,  4.01s/it]epoch 0 loss 4.62781:  54%|█████▎    | 15/28 [00:52<00:38,  2.93s/it]epoch 0 loss 4.56226:  54%|█████▎    | 15/28 [00:52<00:38,  2.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1515[0m
[32m  eval_f1 = 0.0227[0m
[32m  eval_mcc = 0.0883[0m
[32m  eval_precision = 0.0565[0m
[32m  eval_recall = 0.0271[0m
[32m  ********************[0m
[32m  Best f1:0.0227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0883[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.56226:  57%|█████▋    | 16/28 [00:59<00:48,  4.02s/it]epoch 0 loss 4.49933:  57%|█████▋    | 16/28 [00:59<00:48,  4.02s/it]epoch 0 loss 4.49933:  61%|██████    | 17/28 [00:59<00:32,  2.94s/it]epoch 0 loss 4.44523:  61%|██████    | 17/28 [00:59<00:32,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1978[0m
[32m  eval_f1 = 0.0267[0m
[32m  eval_mcc = 0.1298[0m
[32m  eval_precision = 0.0757[0m
[32m  eval_recall = 0.0296[0m
[32m  ********************[0m
[32m  Best f1:0.0267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.44523:  64%|██████▍   | 18/28 [01:05<00:38,  3.82s/it]epoch 0 loss 4.38195:  64%|██████▍   | 18/28 [01:05<00:38,  3.82s/it]epoch 0 loss 4.38195:  68%|██████▊   | 19/28 [01:05<00:25,  2.80s/it]epoch 0 loss 4.32286:  68%|██████▊   | 19/28 [01:06<00:25,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2274[0m
[32m  eval_f1 = 0.025[0m
[32m  eval_mcc = 0.1636[0m
[32m  eval_precision = 0.0568[0m
[32m  eval_recall = 0.0303[0m
[32m  ********************[0m
[32m  Best MCC:0.1636[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.32286:  71%|███████▏  | 20/28 [01:10<00:27,  3.46s/it]epoch 0 loss 4.26099:  71%|███████▏  | 20/28 [01:11<00:27,  3.46s/it]epoch 0 loss 4.26099:  75%|███████▌  | 21/28 [01:11<00:17,  2.54s/it]epoch 0 loss 4.20554:  75%|███████▌  | 21/28 [01:11<00:17,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2655[0m
[32m  eval_f1 = 0.033[0m
[32m  eval_mcc = 0.2114[0m
[32m  eval_precision = 0.0722[0m
[32m  eval_recall = 0.0375[0m
[32m  ********************[0m
[32m  Best f1:0.033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2114[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.20554:  79%|███████▊  | 22/28 [01:17<00:22,  3.69s/it]epoch 0 loss 4.15431:  79%|███████▊  | 22/28 [01:17<00:22,  3.69s/it]epoch 0 loss 4.15431:  82%|████████▏ | 23/28 [01:17<00:13,  2.71s/it]epoch 0 loss 4.10593:  82%|████████▏ | 23/28 [01:18<00:13,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3037[0m
[32m  eval_f1 = 0.0408[0m
[32m  eval_mcc = 0.256[0m
[32m  eval_precision = 0.0783[0m
[32m  eval_recall = 0.0457[0m
[32m  ********************[0m
[32m  Best f1:0.0408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.10593:  86%|████████▌ | 24/28 [01:24<00:15,  3.85s/it]epoch 0 loss 4.05564:  86%|████████▌ | 24/28 [01:24<00:15,  3.85s/it]epoch 0 loss 4.05564:  89%|████████▉ | 25/28 [01:24<00:08,  2.82s/it]epoch 0 loss 4.0119:  89%|████████▉ | 25/28 [01:25<00:08,  2.82s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3526[0m
[32m  eval_f1 = 0.0814[0m
[32m  eval_mcc = 0.3139[0m
[32m  eval_precision = 0.1481[0m
[32m  eval_recall = 0.0791[0m
[32m  ********************[0m
[32m  Best f1:0.0814[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3139[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.0119:  93%|█████████▎| 26/28 [01:31<00:07,  3.90s/it]epoch 0 loss 3.9655:  93%|█████████▎| 26/28 [01:31<00:07,  3.90s/it]epoch 0 loss 3.9655:  96%|█████████▋| 27/28 [01:31<00:02,  2.86s/it]epoch 0 loss 3.91078:  96%|█████████▋| 27/28 [01:31<00:02,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4242[0m
[32m  eval_f1 = 0.1273[0m
[32m  eval_mcc = 0.3925[0m
[32m  eval_precision = 0.1878[0m
[32m  eval_recall = 0.1166[0m
[32m  ********************[0m
[32m  Best f1:0.1273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3925[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.91078: 100%|██████████| 28/28 [01:37<00:00,  3.61s/it]epoch 0 loss 3.91078: 100%|██████████| 28/28 [01:37<00:00,  3.47s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.55662:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.55662:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 1 loss 2.46756:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4936[0m
[32m  eval_f1 = 0.1563[0m
[32m  eval_mcc = 0.4621[0m
[32m  eval_precision = 0.212[0m
[32m  eval_recall = 0.1493[0m
[32m  ********************[0m
[32m  Best f1:0.1563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.46756:   7%|▋         | 2/28 [00:06<01:44,  4.01s/it]epoch 1 loss 2.43375:   7%|▋         | 2/28 [00:07<01:44,  4.01s/it]epoch 1 loss 2.43375:  11%|█         | 3/28 [00:07<00:59,  2.37s/it]epoch 1 loss 2.43652:  11%|█         | 3/28 [00:07<00:59,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5361[0m
[32m  eval_f1 = 0.1742[0m
[32m  eval_mcc = 0.5073[0m
[32m  eval_precision = 0.2202[0m
[32m  eval_recall = 0.1704[0m
[32m  ********************[0m
[32m  Best f1:0.1742[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.43652:  14%|█▍        | 4/28 [00:14<01:38,  4.10s/it]epoch 1 loss 2.41654:  14%|█▍        | 4/28 [00:14<01:38,  4.10s/it]epoch 1 loss 2.41654:  18%|█▊        | 5/28 [00:14<01:03,  2.77s/it]epoch 1 loss 2.38486:  18%|█▊        | 5/28 [00:14<01:03,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5496[0m
[32m  eval_f1 = 0.1792[0m
[32m  eval_mcc = 0.5232[0m
[32m  eval_precision = 0.2423[0m
[32m  eval_recall = 0.1761[0m
[32m  ********************[0m
[32m  Best f1:0.1792[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.38486:  21%|██▏       | 6/28 [00:20<01:25,  3.87s/it]epoch 1 loss 2.34817:  21%|██▏       | 6/28 [00:20<01:25,  3.87s/it]epoch 1 loss 2.34817:  25%|██▌       | 7/28 [00:20<00:57,  2.74s/it]epoch 1 loss 2.3231:  25%|██▌       | 7/28 [00:21<00:57,  2.74s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5572[0m
[32m  eval_f1 = 0.1857[0m
[32m  eval_mcc = 0.5318[0m
[32m  eval_precision = 0.2667[0m
[32m  eval_recall = 0.1787[0m
[32m  ********************[0m
[32m  Best f1:0.1857[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.3231:  29%|██▊       | 8/28 [00:27<01:19,  3.96s/it]epoch 1 loss 2.29213:  29%|██▊       | 8/28 [00:27<01:19,  3.96s/it]epoch 1 loss 2.29213:  32%|███▏      | 9/28 [00:27<00:54,  2.86s/it]epoch 1 loss 2.25366:  32%|███▏      | 9/28 [00:28<00:54,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5604[0m
[32m  eval_f1 = 0.1929[0m
[32m  eval_mcc = 0.5342[0m
[32m  eval_precision = 0.278[0m
[32m  eval_recall = 0.1836[0m
[32m  ********************[0m
[32m  Best f1:0.1929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.25366:  36%|███▌      | 10/28 [00:33<01:08,  3.80s/it]epoch 1 loss 2.24202:  36%|███▌      | 10/28 [00:34<01:08,  3.80s/it]epoch 1 loss 2.24202:  39%|███▉      | 11/28 [00:34<00:47,  2.77s/it]epoch 1 loss 2.22735:  39%|███▉      | 11/28 [00:34<00:47,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5683[0m
[32m  eval_f1 = 0.2015[0m
[32m  eval_mcc = 0.5416[0m
[32m  eval_precision = 0.2843[0m
[32m  eval_recall = 0.1906[0m
[32m  ********************[0m
[32m  Best f1:0.2015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5416[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.22735:  43%|████▎     | 12/28 [00:40<01:01,  3.87s/it]epoch 1 loss 2.20461:  43%|████▎     | 12/28 [00:41<01:01,  3.87s/it]epoch 1 loss 2.20461:  46%|████▋     | 13/28 [00:41<00:42,  2.83s/it]epoch 1 loss 2.18814:  46%|████▋     | 13/28 [00:41<00:42,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5779[0m
[32m  eval_f1 = 0.2169[0m
[32m  eval_mcc = 0.5516[0m
[32m  eval_precision = 0.2978[0m
[32m  eval_recall = 0.2045[0m
[32m  ********************[0m
[32m  Best f1:0.2169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.18814:  50%|█████     | 14/28 [00:48<00:59,  4.27s/it]epoch 1 loss 2.1794:  50%|█████     | 14/28 [00:49<00:59,  4.27s/it] epoch 1 loss 2.1794:  54%|█████▎    | 15/28 [00:49<00:40,  3.12s/it]epoch 1 loss 2.16256:  54%|█████▎    | 15/28 [00:49<00:40,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5864[0m
[32m  eval_f1 = 0.2252[0m
[32m  eval_mcc = 0.5613[0m
[32m  eval_precision = 0.3062[0m
[32m  eval_recall = 0.2122[0m
[32m  ********************[0m
[32m  Best f1:0.2252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16256:  57%|█████▋    | 16/28 [00:57<00:57,  4.79s/it]epoch 1 loss 2.136:  57%|█████▋    | 16/28 [00:58<00:57,  4.79s/it]  epoch 1 loss 2.136:  61%|██████    | 17/28 [00:58<00:38,  3.48s/it]epoch 1 loss 2.11927:  61%|██████    | 17/28 [00:58<00:38,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5923[0m
[32m  eval_f1 = 0.2303[0m
[32m  eval_mcc = 0.5695[0m
[32m  eval_precision = 0.3146[0m
[32m  eval_recall = 0.2169[0m
[32m  ********************[0m
[32m  Best f1:0.2303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5695[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11927:  64%|██████▍   | 18/28 [01:09<00:57,  5.71s/it]epoch 1 loss 2.09947:  64%|██████▍   | 18/28 [01:09<00:57,  5.71s/it]epoch 1 loss 2.09947:  68%|██████▊   | 19/28 [01:09<00:37,  4.13s/it]epoch 1 loss 2.07389:  68%|██████▊   | 19/28 [01:10<00:37,  4.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5955[0m
[32m  eval_f1 = 0.232[0m
[32m  eval_mcc = 0.5779[0m
[32m  eval_precision = 0.3024[0m
[32m  eval_recall = 0.218[0m
[32m  ********************[0m
[32m  Best f1:0.232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5779[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07389:  71%|███████▏  | 20/28 [01:20<00:49,  6.17s/it]epoch 1 loss 2.05705:  71%|███████▏  | 20/28 [01:20<00:49,  6.17s/it]epoch 1 loss 2.05705:  75%|███████▌  | 21/28 [01:20<00:31,  4.44s/it]epoch 1 loss 2.04086:  75%|███████▌  | 21/28 [01:21<00:31,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5991[0m
[32m  eval_f1 = 0.2338[0m
[32m  eval_mcc = 0.5819[0m
[32m  eval_precision = 0.3063[0m
[32m  eval_recall = 0.2197[0m
[32m  ********************[0m
[32m  Best f1:0.2338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5819[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04086:  79%|███████▊  | 22/28 [01:31<00:37,  6.25s/it]epoch 1 loss 2.02627:  79%|███████▊  | 22/28 [01:31<00:37,  6.25s/it]epoch 1 loss 2.02627:  82%|████████▏ | 23/28 [01:31<00:22,  4.50s/it]epoch 1 loss 2.01057:  82%|████████▏ | 23/28 [01:32<00:22,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.603[0m
[32m  eval_f1 = 0.2482[0m
[32m  eval_mcc = 0.5829[0m
[32m  eval_precision = 0.339[0m
[32m  eval_recall = 0.2334[0m
[32m  ********************[0m
[32m  Best f1:0.2482[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01057:  86%|████████▌ | 24/28 [01:42<00:25,  6.38s/it]epoch 1 loss 1.995:  86%|████████▌ | 24/28 [01:43<00:25,  6.38s/it]  epoch 1 loss 1.995:  89%|████████▉ | 25/28 [01:43<00:13,  4.59s/it]epoch 1 loss 1.98046:  89%|████████▉ | 25/28 [01:43<00:13,  4.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6034[0m
[32m  eval_f1 = 0.2513[0m
[32m  eval_mcc = 0.5804[0m
[32m  eval_precision = 0.3289[0m
[32m  eval_recall = 0.237[0m
[32m  ********************[0m
[32m  Best f1:0.2513[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 1 loss 1.98046:  93%|█████████▎| 26/28 [01:50<00:10,  5.35s/it]epoch 1 loss 1.97058:  93%|█████████▎| 26/28 [01:50<00:10,  5.35s/it]epoch 1 loss 1.97058:  96%|█████████▋| 27/28 [01:50<00:03,  3.87s/it]epoch 1 loss 1.95621:  96%|█████████▋| 27/28 [01:50<00:03,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6054[0m
[32m  eval_f1 = 0.2552[0m
[32m  eval_mcc = 0.5813[0m
[32m  eval_precision = 0.3336[0m
[32m  eval_recall = 0.2408[0m
[32m  ********************[0m
[32m  Best f1:0.2552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 1 loss 1.95621: 100%|██████████| 28/28 [01:57<00:00,  4.74s/it]epoch 1 loss 1.95621: 100%|██████████| 28/28 [01:57<00:00,  4.19s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.46168:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.46168:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 2 loss 1.54166:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6076[0m
[32m  eval_f1 = 0.2594[0m
[32m  eval_mcc = 0.5836[0m
[32m  eval_precision = 0.3655[0m
[32m  eval_recall = 0.2444[0m
[32m  ********************[0m
[32m  Best f1:0.2594[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5836[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54166:   7%|▋         | 2/28 [00:10<02:32,  5.86s/it]epoch 2 loss 1.53794:   7%|▋         | 2/28 [00:10<02:32,  5.86s/it]epoch 2 loss 1.53794:  11%|█         | 3/28 [00:10<01:24,  3.38s/it]epoch 2 loss 1.60466:  11%|█         | 3/28 [00:10<01:24,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6105[0m
[32m  eval_f1 = 0.2614[0m
[32m  eval_mcc = 0.587[0m
[32m  eval_precision = 0.3991[0m
[32m  eval_recall = 0.2465[0m
[32m  ********************[0m
[32m  Best f1:0.2614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.60466:  14%|█▍        | 4/28 [00:20<02:23,  5.99s/it]epoch 2 loss 1.60318:  14%|█▍        | 4/28 [00:20<02:23,  5.99s/it]epoch 2 loss 1.60318:  18%|█▊        | 5/28 [00:20<01:31,  3.98s/it]epoch 2 loss 1.59706:  18%|█▊        | 5/28 [00:21<01:31,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6137[0m
[32m  eval_f1 = 0.2625[0m
[32m  eval_mcc = 0.5916[0m
[32m  eval_precision = 0.4029[0m
[32m  eval_recall = 0.2476[0m
[32m  ********************[0m
[32m  Best f1:0.2625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59706:  21%|██▏       | 6/28 [00:30<02:11,  5.98s/it]epoch 2 loss 1.5891:  21%|██▏       | 6/28 [00:31<02:11,  5.98s/it] epoch 2 loss 1.5891:  25%|██▌       | 7/28 [00:31<01:27,  4.16s/it]epoch 2 loss 1.59679:  25%|██▌       | 7/28 [00:31<01:27,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6165[0m
[32m  eval_f1 = 0.2643[0m
[32m  eval_mcc = 0.5978[0m
[32m  eval_precision = 0.4098[0m
[32m  eval_recall = 0.2474[0m
[32m  ********************[0m
[32m  Best f1:0.2643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59679:  29%|██▊       | 8/28 [00:38<01:45,  5.27s/it]epoch 2 loss 1.59008:  29%|██▊       | 8/28 [00:39<01:45,  5.27s/it]epoch 2 loss 1.59008:  32%|███▏      | 9/28 [00:39<01:11,  3.76s/it]epoch 2 loss 1.56923:  32%|███▏      | 9/28 [00:39<01:11,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6156[0m
[32m  eval_f1 = 0.2699[0m
[32m  eval_mcc = 0.5988[0m
[32m  eval_precision = 0.4147[0m
[32m  eval_recall = 0.2499[0m
[32m  ********************[0m
[32m  Best f1:0.2699[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5988[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56923:  36%|███▌      | 10/28 [00:49<01:42,  5.67s/it]epoch 2 loss 1.56665:  36%|███▌      | 10/28 [00:49<01:42,  5.67s/it]epoch 2 loss 1.56665:  39%|███▉      | 11/28 [00:49<01:09,  4.07s/it]epoch 2 loss 1.56015:  39%|███▉      | 11/28 [00:50<01:09,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6179[0m
[32m  eval_f1 = 0.2706[0m
[32m  eval_mcc = 0.5995[0m
[32m  eval_precision = 0.4245[0m
[32m  eval_recall = 0.2514[0m
[32m  ********************[0m
[32m  Best f1:0.2706[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5995[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.56015:  43%|████▎     | 12/28 [00:57<01:24,  5.28s/it]epoch 2 loss 1.55978:  43%|████▎     | 12/28 [00:58<01:24,  5.28s/it]epoch 2 loss 1.55978:  46%|████▋     | 13/28 [00:58<00:57,  3.81s/it]epoch 2 loss 1.54573:  46%|████▋     | 13/28 [00:58<00:57,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6219[0m
[32m  eval_f1 = 0.2844[0m
[32m  eval_mcc = 0.601[0m
[32m  eval_precision = 0.431[0m
[32m  eval_recall = 0.2631[0m
[32m  ********************[0m
[32m  Best f1:0.2844[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54573:  50%|█████     | 14/28 [01:08<01:19,  5.64s/it]epoch 2 loss 1.54687:  50%|█████     | 14/28 [01:08<01:19,  5.64s/it]epoch 2 loss 1.54687:  54%|█████▎    | 15/28 [01:08<00:52,  4.07s/it]epoch 2 loss 1.54679:  54%|█████▎    | 15/28 [01:08<00:52,  4.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6236[0m
[32m  eval_f1 = 0.2942[0m
[32m  eval_mcc = 0.6012[0m
[32m  eval_precision = 0.4302[0m
[32m  eval_recall = 0.2748[0m
[32m  ********************[0m
[32m  Best f1:0.2942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54679:  57%|█████▋    | 16/28 [01:16<01:02,  5.17s/it]epoch 2 loss 1.54417:  57%|█████▋    | 16/28 [01:16<01:02,  5.17s/it]epoch 2 loss 1.54417:  61%|██████    | 17/28 [01:16<00:41,  3.74s/it]epoch 2 loss 1.53416:  61%|██████    | 17/28 [01:16<00:41,  3.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.624[0m
[32m  eval_f1 = 0.2987[0m
[32m  eval_mcc = 0.6013[0m
[32m  eval_precision = 0.4308[0m
[32m  eval_recall = 0.2785[0m
[32m  ********************[0m
[32m  Best f1:0.2987[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53416:  64%|██████▍   | 18/28 [01:26<00:55,  5.58s/it]epoch 2 loss 1.53209:  64%|██████▍   | 18/28 [01:26<00:55,  5.58s/it]epoch 2 loss 1.53209:  68%|██████▊   | 19/28 [01:26<00:36,  4.03s/it]epoch 2 loss 1.52713:  68%|██████▊   | 19/28 [01:27<00:36,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6262[0m
[32m  eval_f1 = 0.3046[0m
[32m  eval_mcc = 0.6036[0m
[32m  eval_precision = 0.4312[0m
[32m  eval_recall = 0.283[0m
[32m  ********************[0m
[32m  Best f1:0.3046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52713:  71%|███████▏  | 20/28 [01:34<00:41,  5.15s/it]epoch 2 loss 1.52475:  71%|███████▏  | 20/28 [01:35<00:41,  5.15s/it]epoch 2 loss 1.52475:  75%|███████▌  | 21/28 [01:35<00:26,  3.73s/it]epoch 2 loss 1.52104:  75%|███████▌  | 21/28 [01:35<00:26,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6306[0m
[32m  eval_f1 = 0.3096[0m
[32m  eval_mcc = 0.6086[0m
[32m  eval_precision = 0.4338[0m
[32m  eval_recall = 0.2873[0m
[32m  ********************[0m
[32m  Best f1:0.3096[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52104:  79%|███████▊  | 22/28 [01:42<00:29,  4.91s/it]epoch 2 loss 1.52497:  79%|███████▊  | 22/28 [01:43<00:29,  4.91s/it]epoch 2 loss 1.52497:  82%|████████▏ | 23/28 [01:43<00:17,  3.57s/it]epoch 2 loss 1.52448:  82%|████████▏ | 23/28 [01:43<00:17,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6334[0m
[32m  eval_f1 = 0.3131[0m
[32m  eval_mcc = 0.612[0m
[32m  eval_precision = 0.4308[0m
[32m  eval_recall = 0.2896[0m
[32m  ********************[0m
[32m  Best f1:0.3131[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52448:  86%|████████▌ | 24/28 [01:49<00:17,  4.41s/it]epoch 2 loss 1.52091:  86%|████████▌ | 24/28 [01:49<00:17,  4.41s/it]epoch 2 loss 1.52091:  89%|████████▉ | 25/28 [01:49<00:09,  3.21s/it]epoch 2 loss 1.52377:  89%|████████▉ | 25/28 [01:50<00:09,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6348[0m
[32m  eval_f1 = 0.3143[0m
[32m  eval_mcc = 0.6141[0m
[32m  eval_precision = 0.4296[0m
[32m  eval_recall = 0.2897[0m
[32m  ********************[0m
[32m  Best f1:0.3143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52377:  93%|█████████▎| 26/28 [01:56<00:08,  4.12s/it]epoch 2 loss 1.52246:  93%|█████████▎| 26/28 [01:56<00:08,  4.12s/it]epoch 2 loss 1.52246:  96%|█████████▋| 27/28 [01:56<00:03,  3.01s/it]epoch 2 loss 1.52405:  96%|█████████▋| 27/28 [01:56<00:03,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6351[0m
[32m  eval_f1 = 0.315[0m
[32m  eval_mcc = 0.6146[0m
[32m  eval_precision = 0.4305[0m
[32m  eval_recall = 0.2894[0m
[32m  ********************[0m
[32m  Best f1:0.315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52405: 100%|██████████| 28/28 [02:02<00:00,  3.96s/it]epoch 2 loss 1.52405: 100%|██████████| 28/28 [02:02<00:00,  4.39s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.42805:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.42805:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 3 loss 1.49948:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6353[0m
[32m  eval_f1 = 0.3139[0m
[32m  eval_mcc = 0.6154[0m
[32m  eval_precision = 0.4377[0m
[32m  eval_recall = 0.2882[0m
[32m  ********************[0m
[32m  Best MCC:0.6154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.49948:   7%|▋         | 2/28 [00:05<01:20,  3.11s/it]epoch 3 loss 1.47777:   7%|▋         | 2/28 [00:05<01:20,  3.11s/it]epoch 3 loss 1.47777:  11%|█         | 3/28 [00:05<00:46,  1.87s/it]epoch 3 loss 1.46675:  11%|█         | 3/28 [00:06<00:46,  1.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6365[0m
[32m  eval_f1 = 0.3154[0m
[32m  eval_mcc = 0.6166[0m
[32m  eval_precision = 0.4451[0m
[32m  eval_recall = 0.2898[0m
[32m  ********************[0m
[32m  Best f1:0.3154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46675:  14%|█▍        | 4/28 [00:12<01:27,  3.67s/it]epoch 3 loss 1.45684:  14%|█▍        | 4/28 [00:12<01:27,  3.67s/it]epoch 3 loss 1.45684:  18%|█▊        | 5/28 [00:12<00:57,  2.49s/it]epoch 3 loss 1.44983:  18%|█▊        | 5/28 [00:13<00:57,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6368[0m
[32m  eval_f1 = 0.3183[0m
[32m  eval_mcc = 0.6164[0m
[32m  eval_precision = 0.4445[0m
[32m  eval_recall = 0.2926[0m
[32m  ********************[0m
[32m  Best f1:0.3183[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.44983:  21%|██▏       | 6/28 [00:17<01:13,  3.34s/it]epoch 3 loss 1.43573:  21%|██▏       | 6/28 [00:18<01:13,  3.34s/it]epoch 3 loss 1.43573:  25%|██▌       | 7/28 [00:18<00:50,  2.38s/it]epoch 3 loss 1.43693:  25%|██▌       | 7/28 [00:18<00:50,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6366[0m
[32m  eval_f1 = 0.3194[0m
[32m  eval_mcc = 0.6155[0m
[32m  eval_precision = 0.4422[0m
[32m  eval_recall = 0.2946[0m
[32m  ********************[0m
[32m  Best f1:0.3194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.43693:  29%|██▊       | 8/28 [00:23<01:04,  3.24s/it]epoch 3 loss 1.43307:  29%|██▊       | 8/28 [00:23<01:04,  3.24s/it]epoch 3 loss 1.43307:  32%|███▏      | 9/28 [00:23<00:44,  2.35s/it]epoch 3 loss 1.42816:  32%|███▏      | 9/28 [00:23<00:44,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6372[0m
[32m  eval_f1 = 0.3206[0m
[32m  eval_mcc = 0.6158[0m
[32m  eval_precision = 0.4414[0m
[32m  eval_recall = 0.2965[0m
[32m  ********************[0m
[32m  Best f1:0.3206[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.42816:  36%|███▌      | 10/28 [00:28<00:55,  3.08s/it]epoch 3 loss 1.42402:  36%|███▌      | 10/28 [00:28<00:55,  3.08s/it]epoch 3 loss 1.42402:  39%|███▉      | 11/28 [00:28<00:38,  2.26s/it]epoch 3 loss 1.42132:  39%|███▉      | 11/28 [00:29<00:38,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6377[0m
[32m  eval_f1 = 0.3214[0m
[32m  eval_mcc = 0.6164[0m
[32m  eval_precision = 0.4462[0m
[32m  eval_recall = 0.2983[0m
[32m  ********************[0m
[32m  Best f1:0.3214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.42132:  43%|████▎     | 12/28 [00:33<00:49,  3.09s/it]epoch 3 loss 1.42614:  43%|████▎     | 12/28 [00:34<00:49,  3.09s/it]epoch 3 loss 1.42614:  46%|████▋     | 13/28 [00:34<00:34,  2.28s/it]epoch 3 loss 1.42532:  46%|████▋     | 13/28 [00:34<00:34,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.323[0m
[32m  eval_mcc = 0.6177[0m
[32m  eval_precision = 0.4363[0m
[32m  eval_recall = 0.3001[0m
[32m  ********************[0m
[32m  Best f1:0.323[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6177[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42532:  50%|█████     | 14/28 [00:43<01:04,  4.59s/it]epoch 3 loss 1.43408:  50%|█████     | 14/28 [00:44<01:04,  4.59s/it]epoch 3 loss 1.43408:  54%|█████▎    | 15/28 [00:44<00:43,  3.33s/it]epoch 3 loss 1.42882:  54%|█████▎    | 15/28 [00:44<00:43,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.64[0m
[32m  eval_f1 = 0.3239[0m
[32m  eval_mcc = 0.6189[0m
[32m  eval_precision = 0.4358[0m
[32m  eval_recall = 0.3008[0m
[32m  ********************[0m
[32m  Best f1:0.3239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42882:  57%|█████▋    | 16/28 [00:55<01:09,  5.78s/it]epoch 3 loss 1.42889:  57%|█████▋    | 16/28 [00:56<01:09,  5.78s/it]epoch 3 loss 1.42889:  61%|██████    | 17/28 [00:56<00:45,  4.17s/it]epoch 3 loss 1.42656:  61%|██████    | 17/28 [00:56<00:45,  4.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6418[0m
[32m  eval_f1 = 0.3279[0m
[32m  eval_mcc = 0.6208[0m
[32m  eval_precision = 0.4361[0m
[32m  eval_recall = 0.3042[0m
[32m  ********************[0m
[32m  Best f1:0.3279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42656:  64%|██████▍   | 18/28 [01:06<01:00,  6.09s/it]epoch 3 loss 1.42737:  64%|██████▍   | 18/28 [01:07<01:00,  6.09s/it]epoch 3 loss 1.42737:  68%|██████▊   | 19/28 [01:07<00:39,  4.39s/it]epoch 3 loss 1.43296:  68%|██████▊   | 19/28 [01:07<00:39,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.644[0m
[32m  eval_f1 = 0.3301[0m
[32m  eval_mcc = 0.6233[0m
[32m  eval_precision = 0.434[0m
[32m  eval_recall = 0.3059[0m
[32m  ********************[0m
[32m  Best f1:0.3301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6233[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43296:  71%|███████▏  | 20/28 [01:17<00:49,  6.25s/it]epoch 3 loss 1.42964:  71%|███████▏  | 20/28 [01:18<00:49,  6.25s/it]epoch 3 loss 1.42964:  75%|███████▌  | 21/28 [01:18<00:31,  4.50s/it]epoch 3 loss 1.42923:  75%|███████▌  | 21/28 [01:18<00:31,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6447[0m
[32m  eval_f1 = 0.3313[0m
[32m  eval_mcc = 0.6244[0m
[32m  eval_precision = 0.4311[0m
[32m  eval_recall = 0.3066[0m
[32m  ********************[0m
[32m  Best f1:0.3313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42923:  79%|███████▊  | 22/28 [01:28<00:37,  6.21s/it]epoch 3 loss 1.42681:  79%|███████▊  | 22/28 [01:28<00:37,  6.21s/it]epoch 3 loss 1.42681:  82%|████████▏ | 23/28 [01:28<00:22,  4.47s/it]epoch 3 loss 1.42588:  82%|████████▏ | 23/28 [01:29<00:22,  4.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6452[0m
[32m  eval_f1 = 0.3313[0m
[32m  eval_mcc = 0.6252[0m
[32m  eval_precision = 0.4304[0m
[32m  eval_recall = 0.3066[0m
[32m  ********************[0m
[32m  Best f1:0.3313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42588:  86%|████████▌ | 24/28 [01:39<00:24,  6.22s/it]epoch 3 loss 1.42569:  86%|████████▌ | 24/28 [01:39<00:24,  6.22s/it]epoch 3 loss 1.42569:  89%|████████▉ | 25/28 [01:39<00:13,  4.48s/it]epoch 3 loss 1.41887:  89%|████████▉ | 25/28 [01:39<00:13,  4.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.646[0m
[32m  eval_f1 = 0.333[0m
[32m  eval_mcc = 0.6264[0m
[32m  eval_precision = 0.4321[0m
[32m  eval_recall = 0.308[0m
[32m  ********************[0m
[32m  Best f1:0.333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41887:  93%|█████████▎| 26/28 [01:49<00:12,  6.17s/it]epoch 3 loss 1.4196:  93%|█████████▎| 26/28 [01:50<00:12,  6.17s/it] epoch 3 loss 1.4196:  96%|█████████▋| 27/28 [01:50<00:04,  4.44s/it]epoch 3 loss 1.42146:  96%|█████████▋| 27/28 [01:50<00:04,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6462[0m
[32m  eval_f1 = 0.3341[0m
[32m  eval_mcc = 0.6265[0m
[32m  eval_precision = 0.4331[0m
[32m  eval_recall = 0.309[0m
[32m  ********************[0m
[32m  Best f1:0.3341[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42146: 100%|██████████| 28/28 [01:58<00:00,  5.62s/it]epoch 3 loss 1.42146: 100%|██████████| 28/28 [01:58<00:00,  4.23s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.33699:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.33699:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 4 loss 1.39462:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6459[0m
[32m  eval_f1 = 0.3352[0m
[32m  eval_mcc = 0.626[0m
[32m  eval_precision = 0.4444[0m
[32m  eval_recall = 0.3097[0m
[32m  ********************[0m
[32m  Best f1:0.3352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.39462:   7%|▋         | 2/28 [00:06<01:36,  3.72s/it]epoch 4 loss 1.36646:   7%|▋         | 2/28 [00:06<01:36,  3.72s/it]epoch 4 loss 1.36646:  11%|█         | 3/28 [00:06<00:55,  2.22s/it]epoch 4 loss 1.39505:  11%|█         | 3/28 [00:07<00:55,  2.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6462[0m
[32m  eval_f1 = 0.3368[0m
[32m  eval_mcc = 0.626[0m
[32m  eval_precision = 0.4445[0m
[32m  eval_recall = 0.3108[0m
[32m  ********************[0m
[32m  Best f1:0.3368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.39505:  14%|█▍        | 4/28 [00:13<01:33,  3.91s/it]epoch 4 loss 1.38606:  14%|█▍        | 4/28 [00:13<01:33,  3.91s/it]epoch 4 loss 1.38606:  18%|█▊        | 5/28 [00:13<01:00,  2.65s/it]epoch 4 loss 1.38225:  18%|█▊        | 5/28 [00:14<01:00,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.646[0m
[32m  eval_f1 = 0.3362[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4436[0m
[32m  eval_recall = 0.3108[0m

epoch 4 loss 1.38225:  21%|██▏       | 6/28 [00:17<01:06,  3.03s/it]epoch 4 loss 1.38606:  21%|██▏       | 6/28 [00:17<01:06,  3.03s/it]epoch 4 loss 1.38606:  25%|██▌       | 7/28 [00:17<00:45,  2.17s/it]epoch 4 loss 1.38265:  25%|██▌       | 7/28 [00:18<00:45,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6461[0m
[32m  eval_f1 = 0.3363[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4436[0m
[32m  eval_recall = 0.311[0m

epoch 4 loss 1.38265:  29%|██▊       | 8/28 [00:21<00:53,  2.68s/it]epoch 4 loss 1.377:  29%|██▊       | 8/28 [00:22<00:53,  2.68s/it]  epoch 4 loss 1.377:  32%|███▏      | 9/28 [00:22<00:37,  1.97s/it]epoch 4 loss 1.37437:  32%|███▏      | 9/28 [00:22<00:37,  1.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6462[0m
[32m  eval_f1 = 0.3364[0m
[32m  eval_mcc = 0.6257[0m
[32m  eval_precision = 0.4547[0m
[32m  eval_recall = 0.3106[0m

epoch 4 loss 1.37437:  36%|███▌      | 10/28 [00:25<00:45,  2.53s/it]epoch 4 loss 1.37491:  36%|███▌      | 10/28 [00:26<00:45,  2.53s/it]epoch 4 loss 1.37491:  39%|███▉      | 11/28 [00:26<00:31,  1.88s/it]epoch 4 loss 1.38346:  39%|███▉      | 11/28 [00:26<00:31,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6464[0m
[32m  eval_f1 = 0.3366[0m
[32m  eval_mcc = 0.626[0m
[32m  eval_precision = 0.456[0m
[32m  eval_recall = 0.3109[0m

epoch 4 loss 1.38346:  43%|████▎     | 12/28 [00:30<00:39,  2.46s/it]epoch 4 loss 1.37901:  43%|████▎     | 12/28 [00:30<00:39,  2.46s/it]epoch 4 loss 1.37901:  46%|████▋     | 13/28 [00:30<00:27,  1.83s/it]epoch 4 loss 1.38315:  46%|████▋     | 13/28 [00:30<00:27,  1.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6471[0m
[32m  eval_f1 = 0.3369[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.4561[0m
[32m  eval_recall = 0.311[0m
[32m  ********************[0m
[32m  Best f1:0.3369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38315:  50%|█████     | 14/28 [00:38<00:50,  3.59s/it]epoch 4 loss 1.38743:  50%|█████     | 14/28 [00:38<00:50,  3.59s/it]epoch 4 loss 1.38743:  54%|█████▎    | 15/28 [00:38<00:34,  2.64s/it]epoch 4 loss 1.38247:  54%|█████▎    | 15/28 [00:39<00:34,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6472[0m
[32m  eval_f1 = 0.3382[0m
[32m  eval_mcc = 0.6267[0m
[32m  eval_precision = 0.4554[0m
[32m  eval_recall = 0.3118[0m
[32m  ********************[0m
[32m  Best f1:0.3382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38247:  57%|█████▋    | 16/28 [00:45<00:46,  3.91s/it]epoch 4 loss 1.37823:  57%|█████▋    | 16/28 [00:45<00:46,  3.91s/it]epoch 4 loss 1.37823:  61%|██████    | 17/28 [00:45<00:31,  2.86s/it]epoch 4 loss 1.37652:  61%|██████    | 17/28 [00:46<00:31,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6474[0m
[32m  eval_f1 = 0.3396[0m
[32m  eval_mcc = 0.6268[0m
[32m  eval_precision = 0.4555[0m
[32m  eval_recall = 0.3123[0m
[32m  ********************[0m
[32m  Best f1:0.3396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37652:  64%|██████▍   | 18/28 [00:52<00:40,  4.08s/it]epoch 4 loss 1.37263:  64%|██████▍   | 18/28 [00:53<00:40,  4.08s/it]epoch 4 loss 1.37263:  68%|██████▊   | 19/28 [00:53<00:26,  2.99s/it]epoch 4 loss 1.37137:  68%|██████▊   | 19/28 [00:53<00:26,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6476[0m
[32m  eval_f1 = 0.3398[0m
[32m  eval_mcc = 0.627[0m
[32m  eval_precision = 0.4559[0m
[32m  eval_recall = 0.3124[0m
[32m  ********************[0m
[32m  Best f1:0.3398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37137:  71%|███████▏  | 20/28 [01:00<00:33,  4.17s/it]epoch 4 loss 1.37321:  71%|███████▏  | 20/28 [01:00<00:33,  4.17s/it]epoch 4 loss 1.37321:  75%|███████▌  | 21/28 [01:00<00:21,  3.04s/it]epoch 4 loss 1.36781:  75%|███████▌  | 21/28 [01:01<00:21,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.648[0m
[32m  eval_f1 = 0.3399[0m
[32m  eval_mcc = 0.6274[0m
[32m  eval_precision = 0.4566[0m
[32m  eval_recall = 0.3124[0m
[32m  ********************[0m
[32m  Best f1:0.3399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36781:  79%|███████▊  | 22/28 [01:10<00:30,  5.05s/it]epoch 4 loss 1.37122:  79%|███████▊  | 22/28 [01:10<00:30,  5.05s/it]epoch 4 loss 1.37122:  82%|████████▏ | 23/28 [01:10<00:18,  3.66s/it]epoch 4 loss 1.37595:  82%|████████▏ | 23/28 [01:11<00:18,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6481[0m
[32m  eval_f1 = 0.3403[0m
[32m  eval_mcc = 0.6275[0m
[32m  eval_precision = 0.4573[0m
[32m  eval_recall = 0.3125[0m
[32m  ********************[0m
[32m  Best f1:0.3403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37595:  86%|████████▌ | 24/28 [01:18<00:19,  4.96s/it]epoch 4 loss 1.37286:  86%|████████▌ | 24/28 [01:19<00:19,  4.96s/it]epoch 4 loss 1.37286:  89%|████████▉ | 25/28 [01:19<00:10,  3.60s/it]epoch 4 loss 1.37765:  89%|████████▉ | 25/28 [01:19<00:10,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6483[0m
[32m  eval_f1 = 0.3407[0m
[32m  eval_mcc = 0.6277[0m
[32m  eval_precision = 0.4576[0m
[32m  eval_recall = 0.3127[0m
[32m  ********************[0m
[32m  Best f1:0.3407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.37765:  93%|█████████▎| 26/28 [01:28<00:10,  5.46s/it]epoch 4 loss 1.37604:  93%|█████████▎| 26/28 [01:29<00:10,  5.46s/it]epoch 4 loss 1.37604:  96%|█████████▋| 27/28 [01:29<00:03,  3.95s/it]epoch 4 loss 1.38054:  96%|█████████▋| 27/28 [01:29<00:03,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6485[0m
[32m  eval_f1 = 0.3407[0m
[32m  eval_mcc = 0.6279[0m
[32m  eval_precision = 0.4577[0m
[32m  eval_recall = 0.3128[0m
[32m  ********************[0m
[32m  Best f1:0.3407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38054: 100%|██████████| 28/28 [01:37<00:00,  5.19s/it]epoch 4 loss 1.38054: 100%|██████████| 28/28 [01:37<00:00,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.56it/s] 20%|██        | 2/10 [00:00<00:02,  2.67it/s] 30%|███       | 3/10 [00:01<00:02,  2.71it/s] 40%|████      | 4/10 [00:01<00:02,  2.71it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.72it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6485[0m
[32m  eval_f1 = 0.3407[0m
[32m  eval_mcc = 0.6279[0m
[32m  eval_precision = 0.4577[0m
[32m  eval_recall = 0.3128[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6324[0m
[32m  eval_f1 = 0.3085[0m
[32m  eval_mcc = 0.612[0m
[32m  eval_precision = 0.4341[0m
[32m  eval_recall = 0.283[0m

