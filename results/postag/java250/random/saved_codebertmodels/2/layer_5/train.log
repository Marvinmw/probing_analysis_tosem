[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=5, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/2/layer_5', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.25974:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.25974:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.26872:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0103[0m
[32m  eval_f1 = 0.0021[0m
[32m  eval_mcc = 0.0037[0m
[32m  eval_precision = 0.0071[0m
[32m  eval_recall = 0.0036[0m
[32m  ********************[0m
[32m  Best f1:0.0021[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.26872:   7%|▋         | 2/28 [00:05<01:23,  3.23s/it]epoch 0 loss 5.26362:   7%|▋         | 2/28 [00:06<01:23,  3.23s/it]epoch 0 loss 5.26362:  11%|█         | 3/28 [00:06<00:48,  1.94s/it]epoch 0 loss 5.25172:  11%|█         | 3/28 [00:06<00:48,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0161[0m
[32m  eval_f1 = 0.0027[0m
[32m  eval_mcc = 0.0058[0m
[32m  eval_precision = 0.0056[0m
[32m  eval_recall = 0.0041[0m
[32m  ********************[0m
[32m  Best f1:0.0027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.25172:  14%|█▍        | 4/28 [00:15<02:01,  5.06s/it]epoch 0 loss 5.23278:  14%|█▍        | 4/28 [00:16<02:01,  5.06s/it]epoch 0 loss 5.23278:  18%|█▊        | 5/28 [00:16<01:17,  3.38s/it]epoch 0 loss 5.20261:  18%|█▊        | 5/28 [00:16<01:17,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0279[0m
[32m  eval_f1 = 0.0041[0m
[32m  eval_mcc = 0.0078[0m
[32m  eval_precision = 0.0095[0m
[32m  eval_recall = 0.0058[0m
[32m  ********************[0m
[32m  Best f1:0.0041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20261:  21%|██▏       | 6/28 [00:22<01:37,  4.44s/it]epoch 0 loss 5.16621:  21%|██▏       | 6/28 [00:23<01:37,  4.44s/it]epoch 0 loss 5.16621:  25%|██▌       | 7/28 [00:23<01:05,  3.12s/it]epoch 0 loss 5.12789:  25%|██▌       | 7/28 [00:23<01:05,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0532[0m
[32m  eval_f1 = 0.0066[0m
[32m  eval_mcc = 0.0178[0m
[32m  eval_precision = 0.0086[0m
[32m  eval_recall = 0.0111[0m
[32m  ********************[0m
[32m  Best f1:0.0066[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.12789:  29%|██▊       | 8/28 [00:32<01:42,  5.14s/it]epoch 0 loss 5.08119:  29%|██▊       | 8/28 [00:33<01:42,  5.14s/it]epoch 0 loss 5.08119:  32%|███▏      | 9/28 [00:33<01:09,  3.66s/it]epoch 0 loss 5.03193:  32%|███▏      | 9/28 [00:33<01:09,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0705[0m
[32m  eval_f1 = 0.0089[0m
[32m  eval_mcc = 0.0252[0m
[32m  eval_precision = 0.0149[0m
[32m  eval_recall = 0.0154[0m
[32m  ********************[0m
[32m  Best f1:0.0089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.03193:  36%|███▌      | 10/28 [00:40<01:28,  4.91s/it]epoch 0 loss 4.97881:  36%|███▌      | 10/28 [00:41<01:28,  4.91s/it]epoch 0 loss 4.97881:  39%|███▉      | 11/28 [00:41<01:00,  3.53s/it]epoch 0 loss 4.9181:  39%|███▉      | 11/28 [00:41<01:00,  3.53s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.091[0m
[32m  eval_f1 = 0.0128[0m
[32m  eval_mcc = 0.041[0m
[32m  eval_precision = 0.0245[0m
[32m  eval_recall = 0.0208[0m
[32m  ********************[0m
[32m  Best f1:0.0128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.9181:  43%|████▎     | 12/28 [00:51<01:28,  5.51s/it]epoch 0 loss 4.85273:  43%|████▎     | 12/28 [00:51<01:28,  5.51s/it]epoch 0 loss 4.85273:  46%|████▋     | 13/28 [00:51<00:59,  3.97s/it]epoch 0 loss 4.79218:  46%|████▋     | 13/28 [00:52<00:59,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1114[0m
[32m  eval_f1 = 0.0186[0m
[32m  eval_mcc = 0.061[0m
[32m  eval_precision = 0.0386[0m
[32m  eval_recall = 0.025[0m
[32m  ********************[0m
[32m  Best f1:0.0186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.061[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.79218:  50%|█████     | 14/28 [00:59<01:13,  5.24s/it]epoch 0 loss 4.72682:  50%|█████     | 14/28 [01:00<01:13,  5.24s/it]epoch 0 loss 4.72682:  54%|█████▎    | 15/28 [01:00<00:49,  3.79s/it]epoch 0 loss 4.65973:  54%|█████▎    | 15/28 [01:00<00:49,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1433[0m
[32m  eval_f1 = 0.0287[0m
[32m  eval_mcc = 0.0957[0m
[32m  eval_precision = 0.067[0m
[32m  eval_recall = 0.0308[0m
[32m  ********************[0m
[32m  Best f1:0.0287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.65973:  57%|█████▋    | 16/28 [01:06<00:55,  4.63s/it]epoch 0 loss 4.59457:  57%|█████▋    | 16/28 [01:07<00:55,  4.63s/it]epoch 0 loss 4.59457:  61%|██████    | 17/28 [01:07<00:36,  3.36s/it]epoch 0 loss 4.53537:  61%|██████    | 17/28 [01:07<00:36,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1871[0m
[32m  eval_f1 = 0.0336[0m
[32m  eval_mcc = 0.1436[0m
[32m  eval_precision = 0.0799[0m
[32m  eval_recall = 0.0346[0m
[32m  ********************[0m
[32m  Best f1:0.0336[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.53537:  64%|██████▍   | 18/28 [01:16<00:52,  5.26s/it]epoch 0 loss 4.46657:  64%|██████▍   | 18/28 [01:17<00:52,  5.26s/it]epoch 0 loss 4.46657:  68%|██████▊   | 19/28 [01:17<00:34,  3.80s/it]epoch 0 loss 4.40172:  68%|██████▊   | 19/28 [01:17<00:34,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2569[0m
[32m  eval_f1 = 0.044[0m
[32m  eval_mcc = 0.2126[0m
[32m  eval_precision = 0.0911[0m
[32m  eval_recall = 0.0449[0m
[32m  ********************[0m
[32m  Best f1:0.044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2126[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.40172:  71%|███████▏  | 20/28 [01:25<00:39,  4.99s/it]epoch 0 loss 4.33354:  71%|███████▏  | 20/28 [01:25<00:39,  4.99s/it]epoch 0 loss 4.33354:  75%|███████▌  | 21/28 [01:25<00:25,  3.62s/it]epoch 0 loss 4.27034:  75%|███████▌  | 21/28 [01:25<00:25,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3259[0m
[32m  eval_f1 = 0.0586[0m
[32m  eval_mcc = 0.2781[0m
[32m  eval_precision = 0.1143[0m
[32m  eval_recall = 0.0594[0m
[32m  ********************[0m
[32m  Best f1:0.0586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2781[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.27034:  79%|███████▊  | 22/28 [01:35<00:33,  5.53s/it]epoch 0 loss 4.21104:  79%|███████▊  | 22/28 [01:35<00:33,  5.53s/it]epoch 0 loss 4.21104:  82%|████████▏ | 23/28 [01:35<00:19,  3.99s/it]epoch 0 loss 4.1537:  82%|████████▏ | 23/28 [01:36<00:19,  3.99s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3784[0m
[32m  eval_f1 = 0.0893[0m
[32m  eval_mcc = 0.3344[0m
[32m  eval_precision = 0.1547[0m
[32m  eval_recall = 0.0838[0m
[32m  ********************[0m
[32m  Best f1:0.0893[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.1537:  86%|████████▌ | 24/28 [01:43<00:20,  5.04s/it]epoch 0 loss 4.09452:  86%|████████▌ | 24/28 [01:43<00:20,  5.04s/it]epoch 0 loss 4.09452:  89%|████████▉ | 25/28 [01:43<00:10,  3.65s/it]epoch 0 loss 4.04256:  89%|████████▉ | 25/28 [01:44<00:10,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4075[0m
[32m  eval_f1 = 0.1208[0m
[32m  eval_mcc = 0.3749[0m
[32m  eval_precision = 0.1937[0m
[32m  eval_recall = 0.1091[0m
[32m  ********************[0m
[32m  Best f1:0.1208[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3749[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.04256:  93%|█████████▎| 26/28 [01:49<00:08,  4.37s/it]epoch 0 loss 3.98829:  93%|█████████▎| 26/28 [01:50<00:08,  4.37s/it]epoch 0 loss 3.98829:  96%|█████████▋| 27/28 [01:50<00:03,  3.18s/it]epoch 0 loss 3.9265:  96%|█████████▋| 27/28 [01:50<00:03,  3.18s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4452[0m
[32m  eval_f1 = 0.1493[0m
[32m  eval_mcc = 0.42[0m
[32m  eval_precision = 0.2049[0m
[32m  eval_recall = 0.1345[0m
[32m  ********************[0m
[32m  Best f1:0.1493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.42[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.9265: 100%|██████████| 28/28 [01:56<00:00,  4.00s/it]epoch 0 loss 3.9265: 100%|██████████| 28/28 [01:56<00:00,  4.15s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.35991:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.35991:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 2.26604:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.489[0m
[32m  eval_f1 = 0.1663[0m
[32m  eval_mcc = 0.4633[0m
[32m  eval_precision = 0.2186[0m
[32m  eval_recall = 0.157[0m
[32m  ********************[0m
[32m  Best f1:0.1663[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4633[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26604:   7%|▋         | 2/28 [00:06<01:33,  3.61s/it]epoch 1 loss 2.22606:   7%|▋         | 2/28 [00:06<01:33,  3.61s/it]epoch 1 loss 2.22606:  11%|█         | 3/28 [00:06<00:53,  2.16s/it]epoch 1 loss 2.23066:  11%|█         | 3/28 [00:07<00:53,  2.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5291[0m
[32m  eval_f1 = 0.1749[0m
[32m  eval_mcc = 0.5014[0m
[32m  eval_precision = 0.2299[0m
[32m  eval_recall = 0.1722[0m
[32m  ********************[0m
[32m  Best f1:0.1749[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.23066:  14%|█▍        | 4/28 [00:12<01:26,  3.62s/it]epoch 1 loss 2.20637:  14%|█▍        | 4/28 [00:12<01:26,  3.62s/it]epoch 1 loss 2.20637:  18%|█▊        | 5/28 [00:12<00:56,  2.47s/it]epoch 1 loss 2.1707:  18%|█▊        | 5/28 [00:13<00:56,  2.47s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5649[0m
[32m  eval_f1 = 0.1953[0m
[32m  eval_mcc = 0.5398[0m
[32m  eval_precision = 0.2555[0m
[32m  eval_recall = 0.1899[0m
[32m  ********************[0m
[32m  Best f1:0.1953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1707:  21%|██▏       | 6/28 [00:18<01:20,  3.65s/it]epoch 1 loss 2.13249:  21%|██▏       | 6/28 [00:19<01:20,  3.65s/it]epoch 1 loss 2.13249:  25%|██▌       | 7/28 [00:19<00:54,  2.59s/it]epoch 1 loss 2.10709:  25%|██▌       | 7/28 [00:19<00:54,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.581[0m
[32m  eval_f1 = 0.21[0m
[32m  eval_mcc = 0.5588[0m
[32m  eval_precision = 0.283[0m
[32m  eval_recall = 0.2008[0m
[32m  ********************[0m
[32m  Best f1:0.21[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5588[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.10709:  29%|██▊       | 8/28 [00:29<01:38,  4.92s/it]epoch 1 loss 2.07461:  29%|██▊       | 8/28 [00:29<01:38,  4.92s/it]epoch 1 loss 2.07461:  32%|███▏      | 9/28 [00:29<01:06,  3.51s/it]epoch 1 loss 2.03556:  32%|███▏      | 9/28 [00:30<01:06,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5889[0m
[32m  eval_f1 = 0.2174[0m
[32m  eval_mcc = 0.5668[0m
[32m  eval_precision = 0.2933[0m
[32m  eval_recall = 0.2084[0m
[32m  ********************[0m
[32m  Best f1:0.2174[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5668[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03556:  36%|███▌      | 10/28 [00:40<01:41,  5.64s/it]epoch 1 loss 2.02384:  36%|███▌      | 10/28 [00:40<01:41,  5.64s/it]epoch 1 loss 2.02384:  39%|███▉      | 11/28 [00:40<01:08,  4.04s/it]epoch 1 loss 2.01039:  39%|███▉      | 11/28 [00:40<01:08,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5976[0m
[32m  eval_f1 = 0.2326[0m
[32m  eval_mcc = 0.575[0m
[32m  eval_precision = 0.3104[0m
[32m  eval_recall = 0.2193[0m
[32m  ********************[0m
[32m  Best f1:0.2326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01039:  43%|████▎     | 12/28 [00:50<01:31,  5.71s/it]epoch 1 loss 1.98806:  43%|████▎     | 12/28 [00:50<01:31,  5.71s/it]epoch 1 loss 1.98806:  46%|████▋     | 13/28 [00:50<01:01,  4.11s/it]epoch 1 loss 1.97148:  46%|████▋     | 13/28 [00:50<01:01,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6017[0m
[32m  eval_f1 = 0.2378[0m
[32m  eval_mcc = 0.5779[0m
[32m  eval_precision = 0.3102[0m
[32m  eval_recall = 0.2239[0m
[32m  ********************[0m
[32m  Best f1:0.2378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5779[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97148:  50%|█████     | 14/28 [01:00<01:24,  6.03s/it]epoch 1 loss 1.96311:  50%|█████     | 14/28 [01:01<01:24,  6.03s/it]epoch 1 loss 1.96311:  54%|█████▎    | 15/28 [01:01<00:56,  4.34s/it]epoch 1 loss 1.94679:  54%|█████▎    | 15/28 [01:01<00:56,  4.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6081[0m
[32m  eval_f1 = 0.2505[0m
[32m  eval_mcc = 0.5845[0m
[32m  eval_precision = 0.3574[0m
[32m  eval_recall = 0.2333[0m
[32m  ********************[0m
[32m  Best f1:0.2505[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5845[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94679:  57%|█████▋    | 16/28 [01:09<01:04,  5.40s/it]epoch 1 loss 1.92156:  57%|█████▋    | 16/28 [01:09<01:04,  5.40s/it]epoch 1 loss 1.92156:  61%|██████    | 17/28 [01:09<00:42,  3.90s/it]epoch 1 loss 1.90529:  61%|██████    | 17/28 [01:09<00:42,  3.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6145[0m
[32m  eval_f1 = 0.2632[0m
[32m  eval_mcc = 0.5923[0m
[32m  eval_precision = 0.3767[0m
[32m  eval_recall = 0.2426[0m
[32m  ********************[0m
[32m  Best f1:0.2632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90529:  64%|██████▍   | 18/28 [01:18<00:54,  5.45s/it]epoch 1 loss 1.88645:  64%|██████▍   | 18/28 [01:19<00:54,  5.45s/it]epoch 1 loss 1.88645:  68%|██████▊   | 19/28 [01:19<00:35,  3.94s/it]epoch 1 loss 1.86216:  68%|██████▊   | 19/28 [01:19<00:35,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6148[0m
[32m  eval_f1 = 0.2659[0m
[32m  eval_mcc = 0.5953[0m
[32m  eval_precision = 0.3868[0m
[32m  eval_recall = 0.244[0m
[32m  ********************[0m
[32m  Best f1:0.2659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5953[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86216:  71%|███████▏  | 20/28 [01:27<00:41,  5.16s/it]epoch 1 loss 1.84678:  71%|███████▏  | 20/28 [01:27<00:41,  5.16s/it]epoch 1 loss 1.84678:  75%|███████▌  | 21/28 [01:27<00:26,  3.73s/it]epoch 1 loss 1.83096:  75%|███████▌  | 21/28 [01:27<00:26,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6163[0m
[32m  eval_f1 = 0.2793[0m
[32m  eval_mcc = 0.5979[0m
[32m  eval_precision = 0.4025[0m
[32m  eval_recall = 0.2563[0m
[32m  ********************[0m
[32m  Best f1:0.2793[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83096:  79%|███████▊  | 22/28 [01:36<00:32,  5.42s/it]epoch 1 loss 1.81816:  79%|███████▊  | 22/28 [01:37<00:32,  5.42s/it]epoch 1 loss 1.81816:  82%|████████▏ | 23/28 [01:37<00:19,  3.91s/it]epoch 1 loss 1.80372:  82%|████████▏ | 23/28 [01:37<00:19,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6191[0m
[32m  eval_f1 = 0.2923[0m
[32m  eval_mcc = 0.6002[0m
[32m  eval_precision = 0.4316[0m
[32m  eval_recall = 0.2689[0m
[32m  ********************[0m
[32m  Best f1:0.2923[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80372:  86%|████████▌ | 24/28 [01:45<00:20,  5.10s/it]epoch 1 loss 1.78958:  86%|████████▌ | 24/28 [01:45<00:20,  5.10s/it]epoch 1 loss 1.78958:  89%|████████▉ | 25/28 [01:45<00:11,  3.70s/it]epoch 1 loss 1.77563:  89%|████████▉ | 25/28 [01:45<00:11,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6224[0m
[32m  eval_f1 = 0.3001[0m
[32m  eval_mcc = 0.6019[0m
[32m  eval_precision = 0.436[0m
[32m  eval_recall = 0.2759[0m
[32m  ********************[0m
[32m  Best f1:0.3001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6019[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77563:  93%|█████████▎| 26/28 [01:55<00:11,  5.57s/it]epoch 1 loss 1.76683:  93%|█████████▎| 26/28 [01:55<00:11,  5.57s/it]epoch 1 loss 1.76683:  96%|█████████▋| 27/28 [01:55<00:04,  4.03s/it]epoch 1 loss 1.75365:  96%|█████████▋| 27/28 [01:56<00:04,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6261[0m
[32m  eval_f1 = 0.308[0m
[32m  eval_mcc = 0.6045[0m
[32m  eval_precision = 0.4411[0m
[32m  eval_recall = 0.283[0m
[32m  ********************[0m
[32m  Best f1:0.308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75365: 100%|██████████| 28/28 [02:04<00:00,  5.27s/it]epoch 1 loss 1.75365: 100%|██████████| 28/28 [02:04<00:00,  4.43s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.26974:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.26974:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 2 loss 1.35919:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6294[0m
[32m  eval_f1 = 0.3129[0m
[32m  eval_mcc = 0.6075[0m
[32m  eval_precision = 0.4299[0m
[32m  eval_recall = 0.2878[0m
[32m  ********************[0m
[32m  Best f1:0.3129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6075[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35919:   7%|▋         | 2/28 [00:10<02:36,  6.00s/it]epoch 2 loss 1.35495:   7%|▋         | 2/28 [00:10<02:36,  6.00s/it]epoch 2 loss 1.35495:  11%|█         | 3/28 [00:10<01:26,  3.46s/it]epoch 2 loss 1.42063:  11%|█         | 3/28 [00:11<01:26,  3.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6337[0m
[32m  eval_f1 = 0.3213[0m
[32m  eval_mcc = 0.6121[0m
[32m  eval_precision = 0.4328[0m
[32m  eval_recall = 0.2967[0m
[32m  ********************[0m
[32m  Best f1:0.3213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42063:  14%|█▍        | 4/28 [00:19<02:12,  5.50s/it]epoch 2 loss 1.42018:  14%|█▍        | 4/28 [00:19<02:12,  5.50s/it]epoch 2 loss 1.42018:  18%|█▊        | 5/28 [00:19<01:24,  3.67s/it]epoch 2 loss 1.41728:  18%|█▊        | 5/28 [00:20<01:24,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6375[0m
[32m  eval_f1 = 0.321[0m
[32m  eval_mcc = 0.6167[0m
[32m  eval_precision = 0.4434[0m
[32m  eval_recall = 0.2983[0m
[32m  ********************[0m
[32m  Best MCC:0.6167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41728:  21%|██▏       | 6/28 [00:26<01:41,  4.61s/it]epoch 2 loss 1.41033:  21%|██▏       | 6/28 [00:26<01:41,  4.61s/it]epoch 2 loss 1.41033:  25%|██▌       | 7/28 [00:26<01:08,  3.24s/it]epoch 2 loss 1.41861:  25%|██▌       | 7/28 [00:27<01:08,  3.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.641[0m
[32m  eval_f1 = 0.325[0m
[32m  eval_mcc = 0.6217[0m
[32m  eval_precision = 0.4458[0m
[32m  eval_recall = 0.301[0m
[32m  ********************[0m
[32m  Best f1:0.325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41861:  29%|██▊       | 8/28 [00:36<01:45,  5.26s/it]epoch 2 loss 1.41344:  29%|██▊       | 8/28 [00:36<01:45,  5.26s/it]epoch 2 loss 1.41344:  32%|███▏      | 9/28 [00:36<01:11,  3.75s/it]epoch 2 loss 1.39354:  32%|███▏      | 9/28 [00:37<01:11,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6395[0m
[32m  eval_f1 = 0.3258[0m
[32m  eval_mcc = 0.6214[0m
[32m  eval_precision = 0.44[0m
[32m  eval_recall = 0.3014[0m
[32m  ********************[0m
[32m  Best f1:0.3258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.39354:  36%|███▌      | 10/28 [00:41<01:14,  4.11s/it]epoch 2 loss 1.39237:  36%|███▌      | 10/28 [00:42<01:14,  4.11s/it]epoch 2 loss 1.39237:  39%|███▉      | 11/28 [00:42<00:50,  2.98s/it]epoch 2 loss 1.38579:  39%|███▉      | 11/28 [00:42<00:50,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6407[0m
[32m  eval_f1 = 0.3293[0m
[32m  eval_mcc = 0.6223[0m
[32m  eval_precision = 0.4506[0m
[32m  eval_recall = 0.3043[0m
[32m  ********************[0m
[32m  Best f1:0.3293[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38579:  43%|████▎     | 12/28 [00:48<01:02,  3.92s/it]epoch 2 loss 1.38607:  43%|████▎     | 12/28 [00:48<01:02,  3.92s/it]epoch 2 loss 1.38607:  46%|████▋     | 13/28 [00:48<00:42,  2.86s/it]epoch 2 loss 1.37294:  46%|████▋     | 13/28 [00:48<00:42,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.3317[0m
[32m  eval_mcc = 0.6236[0m
[32m  eval_precision = 0.4531[0m
[32m  eval_recall = 0.3065[0m
[32m  ********************[0m
[32m  Best f1:0.3317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6236[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37294:  50%|█████     | 14/28 [00:54<00:52,  3.75s/it]epoch 2 loss 1.37495:  50%|█████     | 14/28 [00:54<00:52,  3.75s/it]epoch 2 loss 1.37495:  54%|█████▎    | 15/28 [00:54<00:35,  2.74s/it]epoch 2 loss 1.37499:  54%|█████▎    | 15/28 [00:55<00:35,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6472[0m
[32m  eval_f1 = 0.3377[0m
[32m  eval_mcc = 0.6273[0m
[32m  eval_precision = 0.4605[0m
[32m  eval_recall = 0.3104[0m
[32m  ********************[0m
[32m  Best f1:0.3377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37499:  57%|█████▋    | 16/28 [01:00<00:44,  3.74s/it]epoch 2 loss 1.37411:  57%|█████▋    | 16/28 [01:01<00:44,  3.74s/it]epoch 2 loss 1.37411:  61%|██████    | 17/28 [01:01<00:30,  2.74s/it]epoch 2 loss 1.36507:  61%|██████    | 17/28 [01:01<00:30,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.649[0m
[32m  eval_f1 = 0.3434[0m
[32m  eval_mcc = 0.6286[0m
[32m  eval_precision = 0.459[0m
[32m  eval_recall = 0.3152[0m
[32m  ********************[0m
[32m  Best f1:0.3434[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36507:  64%|██████▍   | 18/28 [01:07<00:37,  3.74s/it]epoch 2 loss 1.36229:  64%|██████▍   | 18/28 [01:07<00:37,  3.74s/it]epoch 2 loss 1.36229:  68%|██████▊   | 19/28 [01:07<00:24,  2.74s/it]epoch 2 loss 1.35767:  68%|██████▊   | 19/28 [01:08<00:24,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3463[0m
[32m  eval_mcc = 0.6324[0m
[32m  eval_precision = 0.4576[0m
[32m  eval_recall = 0.3185[0m
[32m  ********************[0m
[32m  Best f1:0.3463[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35767:  71%|███████▏  | 20/28 [01:14<00:30,  3.85s/it]epoch 2 loss 1.35456:  71%|███████▏  | 20/28 [01:14<00:30,  3.85s/it]epoch 2 loss 1.35456:  75%|███████▌  | 21/28 [01:14<00:19,  2.82s/it]epoch 2 loss 1.35159:  75%|███████▌  | 21/28 [01:14<00:19,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3504[0m
[32m  eval_mcc = 0.6356[0m
[32m  eval_precision = 0.4721[0m
[32m  eval_recall = 0.3228[0m
[32m  ********************[0m
[32m  Best f1:0.3504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35159:  79%|███████▊  | 22/28 [01:21<00:25,  4.18s/it]epoch 2 loss 1.35631:  79%|███████▊  | 22/28 [01:22<00:25,  4.18s/it]epoch 2 loss 1.35631:  82%|████████▏ | 23/28 [01:22<00:15,  3.05s/it]epoch 2 loss 1.35619:  82%|████████▏ | 23/28 [01:22<00:15,  3.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.3552[0m
[32m  eval_mcc = 0.637[0m
[32m  eval_precision = 0.4759[0m
[32m  eval_recall = 0.3263[0m
[32m  ********************[0m
[32m  Best f1:0.3552[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35619:  86%|████████▌ | 24/28 [01:28<00:15,  3.92s/it]epoch 2 loss 1.35311:  86%|████████▌ | 24/28 [01:28<00:15,  3.92s/it]epoch 2 loss 1.35311:  89%|████████▉ | 25/28 [01:28<00:08,  2.87s/it]epoch 2 loss 1.35569:  89%|████████▉ | 25/28 [01:29<00:08,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6576[0m
[32m  eval_f1 = 0.3583[0m
[32m  eval_mcc = 0.6379[0m
[32m  eval_precision = 0.4774[0m
[32m  eval_recall = 0.3277[0m
[32m  ********************[0m
[32m  Best f1:0.3583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6379[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35569:  93%|█████████▎| 26/28 [01:38<00:09,  4.95s/it]epoch 2 loss 1.35516:  93%|█████████▎| 26/28 [01:38<00:09,  4.95s/it]epoch 2 loss 1.35516:  96%|█████████▋| 27/28 [01:38<00:03,  3.59s/it]epoch 2 loss 1.35709:  96%|█████████▋| 27/28 [01:39<00:03,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6597[0m
[32m  eval_f1 = 0.3657[0m
[32m  eval_mcc = 0.6402[0m
[32m  eval_precision = 0.4909[0m
[32m  eval_recall = 0.3323[0m
[32m  ********************[0m
[32m  Best f1:0.3657[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35709: 100%|██████████| 28/28 [01:45<00:00,  4.40s/it]epoch 2 loss 1.35709: 100%|██████████| 28/28 [01:45<00:00,  3.76s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.25304:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.25304:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 3 loss 1.33364:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6596[0m
[32m  eval_f1 = 0.3664[0m
[32m  eval_mcc = 0.6407[0m
[32m  eval_precision = 0.493[0m
[32m  eval_recall = 0.3316[0m
[32m  ********************[0m
[32m  Best f1:0.3664[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33364:   7%|▋         | 2/28 [00:09<02:30,  5.80s/it]epoch 3 loss 1.30772:   7%|▋         | 2/28 [00:10<02:30,  5.80s/it]epoch 3 loss 1.30772:  11%|█         | 3/28 [00:10<01:23,  3.35s/it]epoch 3 loss 1.29693:  11%|█         | 3/28 [00:10<01:23,  3.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6593[0m
[32m  eval_f1 = 0.3682[0m
[32m  eval_mcc = 0.6406[0m
[32m  eval_precision = 0.4958[0m
[32m  eval_recall = 0.3328[0m
[32m  ********************[0m
[32m  Best f1:0.3682[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.29693:  14%|█▍        | 4/28 [00:15<01:33,  3.91s/it]epoch 3 loss 1.29012:  14%|█▍        | 4/28 [00:15<01:33,  3.91s/it]epoch 3 loss 1.29012:  18%|█▊        | 5/28 [00:15<01:00,  2.65s/it]epoch 3 loss 1.28656:  18%|█▊        | 5/28 [00:15<01:00,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6591[0m
[32m  eval_f1 = 0.3698[0m
[32m  eval_mcc = 0.6404[0m
[32m  eval_precision = 0.4982[0m
[32m  eval_recall = 0.3342[0m
[32m  ********************[0m
[32m  Best f1:0.3698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.28656:  21%|██▏       | 6/28 [00:20<01:14,  3.38s/it]epoch 3 loss 1.2738:  21%|██▏       | 6/28 [00:20<01:14,  3.38s/it] epoch 3 loss 1.2738:  25%|██▌       | 7/28 [00:20<00:50,  2.41s/it]epoch 3 loss 1.27552:  25%|██▌       | 7/28 [00:21<00:50,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6595[0m
[32m  eval_f1 = 0.37[0m
[32m  eval_mcc = 0.6404[0m
[32m  eval_precision = 0.4972[0m
[32m  eval_recall = 0.335[0m
[32m  ********************[0m
[32m  Best f1:0.37[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.27552:  29%|██▊       | 8/28 [00:25<01:03,  3.19s/it]epoch 3 loss 1.27261:  29%|██▊       | 8/28 [00:26<01:03,  3.19s/it]epoch 3 loss 1.27261:  32%|███▏      | 9/28 [00:26<00:44,  2.32s/it]epoch 3 loss 1.26841:  32%|███▏      | 9/28 [00:26<00:44,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.3682[0m
[32m  eval_mcc = 0.642[0m
[32m  eval_precision = 0.497[0m
[32m  eval_recall = 0.3338[0m
[32m  ********************[0m
[32m  Best MCC:0.642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26841:  36%|███▌      | 10/28 [00:32<01:05,  3.62s/it]epoch 3 loss 1.26571:  36%|███▌      | 10/28 [00:33<01:05,  3.62s/it]epoch 3 loss 1.26571:  39%|███▉      | 11/28 [00:33<00:44,  2.64s/it]epoch 3 loss 1.26343:  39%|███▉      | 11/28 [00:33<00:44,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6628[0m
[32m  eval_f1 = 0.3711[0m
[32m  eval_mcc = 0.6436[0m
[32m  eval_precision = 0.5017[0m
[32m  eval_recall = 0.3368[0m
[32m  ********************[0m
[32m  Best f1:0.3711[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26343:  43%|████▎     | 12/28 [00:42<01:15,  4.71s/it]epoch 3 loss 1.26885:  43%|████▎     | 12/28 [00:42<01:15,  4.71s/it]epoch 3 loss 1.26885:  46%|████▋     | 13/28 [00:42<00:51,  3.41s/it]epoch 3 loss 1.26876:  46%|████▋     | 13/28 [00:43<00:51,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6621[0m
[32m  eval_f1 = 0.3706[0m
[32m  eval_mcc = 0.6428[0m
[32m  eval_precision = 0.5006[0m
[32m  eval_recall = 0.3369[0m

epoch 3 loss 1.26876:  50%|█████     | 14/28 [00:46<00:49,  3.53s/it]epoch 3 loss 1.2764:  50%|█████     | 14/28 [00:47<00:49,  3.53s/it] epoch 3 loss 1.2764:  54%|█████▎    | 15/28 [00:47<00:33,  2.58s/it]epoch 3 loss 1.27213:  54%|█████▎    | 15/28 [00:47<00:33,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6634[0m
[32m  eval_f1 = 0.3716[0m
[32m  eval_mcc = 0.6441[0m
[32m  eval_precision = 0.5011[0m
[32m  eval_recall = 0.338[0m
[32m  ********************[0m
[32m  Best f1:0.3716[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27213:  57%|█████▋    | 16/28 [00:56<00:56,  4.71s/it]epoch 3 loss 1.27242:  57%|█████▋    | 16/28 [00:57<00:56,  4.71s/it]epoch 3 loss 1.27242:  61%|██████    | 17/28 [00:57<00:37,  3.42s/it]epoch 3 loss 1.2706:  61%|██████    | 17/28 [00:57<00:37,  3.42s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6648[0m
[32m  eval_f1 = 0.3748[0m
[32m  eval_mcc = 0.6455[0m
[32m  eval_precision = 0.5093[0m
[32m  eval_recall = 0.3409[0m
[32m  ********************[0m
[32m  Best f1:0.3748[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2706:  64%|██████▍   | 18/28 [01:06<00:52,  5.28s/it]epoch 3 loss 1.27089:  64%|██████▍   | 18/28 [01:07<00:52,  5.28s/it]epoch 3 loss 1.27089:  68%|██████▊   | 19/28 [01:07<00:34,  3.82s/it]epoch 3 loss 1.27639:  68%|██████▊   | 19/28 [01:07<00:34,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6659[0m
[32m  eval_f1 = 0.3771[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.5054[0m
[32m  eval_recall = 0.3438[0m
[32m  ********************[0m
[32m  Best f1:0.3771[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27639:  71%|███████▏  | 20/28 [01:13<00:37,  4.71s/it]epoch 3 loss 1.27363:  71%|███████▏  | 20/28 [01:14<00:37,  4.71s/it]epoch 3 loss 1.27363:  75%|███████▌  | 21/28 [01:14<00:23,  3.43s/it]epoch 3 loss 1.27361:  75%|███████▌  | 21/28 [01:14<00:23,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6669[0m
[32m  eval_f1 = 0.3789[0m
[32m  eval_mcc = 0.648[0m
[32m  eval_precision = 0.514[0m
[32m  eval_recall = 0.3455[0m
[32m  ********************[0m
[32m  Best f1:0.3789[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27361:  79%|███████▊  | 22/28 [01:23<00:31,  5.22s/it]epoch 3 loss 1.27137:  79%|███████▊  | 22/28 [01:24<00:31,  5.22s/it]epoch 3 loss 1.27137:  82%|████████▏ | 23/28 [01:24<00:18,  3.78s/it]epoch 3 loss 1.27021:  82%|████████▏ | 23/28 [01:24<00:18,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6674[0m
[32m  eval_f1 = 0.379[0m
[32m  eval_mcc = 0.6488[0m
[32m  eval_precision = 0.5149[0m
[32m  eval_recall = 0.346[0m
[32m  ********************[0m
[32m  Best f1:0.379[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6488[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27021:  86%|████████▌ | 24/28 [01:31<00:19,  4.96s/it]epoch 3 loss 1.2704:  86%|████████▌ | 24/28 [01:32<00:19,  4.96s/it] epoch 3 loss 1.2704:  89%|████████▉ | 25/28 [01:32<00:10,  3.60s/it]epoch 3 loss 1.26441:  89%|████████▉ | 25/28 [01:32<00:10,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6673[0m
[32m  eval_f1 = 0.3784[0m
[32m  eval_mcc = 0.6488[0m
[32m  eval_precision = 0.518[0m
[32m  eval_recall = 0.3456[0m
[32m  ********************[0m
[32m  Best MCC:0.6488[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26441:  93%|█████████▎| 26/28 [01:38<00:08,  4.43s/it]epoch 3 loss 1.26504:  93%|█████████▎| 26/28 [01:39<00:08,  4.43s/it]epoch 3 loss 1.26504:  96%|█████████▋| 27/28 [01:39<00:03,  3.23s/it]epoch 3 loss 1.2675:  96%|█████████▋| 27/28 [01:39<00:03,  3.23s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6677[0m
[32m  eval_f1 = 0.3773[0m
[32m  eval_mcc = 0.6493[0m
[32m  eval_precision = 0.5076[0m
[32m  eval_recall = 0.3453[0m
[32m  ********************[0m
[32m  Best MCC:0.6493[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2675: 100%|██████████| 28/28 [01:46<00:00,  4.42s/it]epoch 3 loss 1.2675: 100%|██████████| 28/28 [01:46<00:00,  3.80s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.18376:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.18376:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 4 loss 1.2459:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6678[0m
[32m  eval_f1 = 0.3775[0m
[32m  eval_mcc = 0.6494[0m
[32m  eval_precision = 0.5077[0m
[32m  eval_recall = 0.3456[0m
[32m  ********************[0m
[32m  Best MCC:0.6494[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2459:   7%|▋         | 2/28 [00:06<01:39,  3.82s/it]epoch 4 loss 1.21873:   7%|▋         | 2/28 [00:07<01:39,  3.82s/it]epoch 4 loss 1.21873:  11%|█         | 3/28 [00:07<00:56,  2.27s/it]epoch 4 loss 1.24598:  11%|█         | 3/28 [00:07<00:56,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6675[0m
[32m  eval_f1 = 0.3771[0m
[32m  eval_mcc = 0.649[0m
[32m  eval_precision = 0.5052[0m
[32m  eval_recall = 0.3454[0m

epoch 4 loss 1.24598:  14%|█▍        | 4/28 [00:10<01:08,  2.87s/it]epoch 4 loss 1.23663:  14%|█▍        | 4/28 [00:11<01:08,  2.87s/it]epoch 4 loss 1.23663:  18%|█▊        | 5/28 [00:11<00:45,  1.98s/it]epoch 4 loss 1.23359:  18%|█▊        | 5/28 [00:11<00:45,  1.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6677[0m
[32m  eval_f1 = 0.3786[0m
[32m  eval_mcc = 0.6492[0m
[32m  eval_precision = 0.5061[0m
[32m  eval_recall = 0.3463[0m

epoch 4 loss 1.23359:  21%|██▏       | 6/28 [00:15<00:57,  2.60s/it]epoch 4 loss 1.23919:  21%|██▏       | 6/28 [00:15<00:57,  2.60s/it]epoch 4 loss 1.23919:  25%|██▌       | 7/28 [00:15<00:39,  1.88s/it]epoch 4 loss 1.23402:  25%|██▌       | 7/28 [00:15<00:39,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6681[0m
[32m  eval_f1 = 0.3786[0m
[32m  eval_mcc = 0.6495[0m
[32m  eval_precision = 0.501[0m
[32m  eval_recall = 0.3461[0m
[32m  ********************[0m
[32m  Best MCC:0.6495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23402:  29%|██▊       | 8/28 [00:21<01:05,  3.26s/it]epoch 4 loss 1.22761:  29%|██▊       | 8/28 [00:22<01:05,  3.26s/it]epoch 4 loss 1.22761:  32%|███▏      | 9/28 [00:22<00:45,  2.38s/it]epoch 4 loss 1.22508:  32%|███▏      | 9/28 [00:22<00:45,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6685[0m
[32m  eval_f1 = 0.3801[0m
[32m  eval_mcc = 0.6498[0m
[32m  eval_precision = 0.512[0m
[32m  eval_recall = 0.3468[0m
[32m  ********************[0m
[32m  Best f1:0.3801[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6498[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22508:  36%|███▌      | 10/28 [00:31<01:22,  4.58s/it]epoch 4 loss 1.22542:  36%|███▌      | 10/28 [00:32<01:22,  4.58s/it]epoch 4 loss 1.22542:  39%|███▉      | 11/28 [00:32<00:56,  3.31s/it]epoch 4 loss 1.23351:  39%|███▉      | 11/28 [00:32<00:56,  3.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6686[0m
[32m  eval_f1 = 0.3825[0m
[32m  eval_mcc = 0.65[0m
[32m  eval_precision = 0.5129[0m
[32m  eval_recall = 0.3486[0m
[32m  ********************[0m
[32m  Best f1:0.3825[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.65[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23351:  43%|████▎     | 12/28 [00:41<01:21,  5.11s/it]epoch 4 loss 1.23038:  43%|████▎     | 12/28 [00:41<01:21,  5.11s/it]epoch 4 loss 1.23038:  46%|████▋     | 13/28 [00:41<00:55,  3.69s/it]epoch 4 loss 1.23442:  46%|████▋     | 13/28 [00:42<00:55,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6688[0m
[32m  eval_f1 = 0.3841[0m
[32m  eval_mcc = 0.6501[0m
[32m  eval_precision = 0.5128[0m
[32m  eval_recall = 0.3494[0m
[32m  ********************[0m
[32m  Best f1:0.3841[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6501[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23442:  50%|█████     | 14/28 [00:49<01:07,  4.81s/it]epoch 4 loss 1.23885:  50%|█████     | 14/28 [00:49<01:07,  4.81s/it]epoch 4 loss 1.23885:  54%|█████▎    | 15/28 [00:49<00:45,  3.49s/it]epoch 4 loss 1.23438:  54%|█████▎    | 15/28 [00:49<00:45,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6688[0m
[32m  eval_f1 = 0.3842[0m
[32m  eval_mcc = 0.65[0m
[32m  eval_precision = 0.5138[0m
[32m  eval_recall = 0.3494[0m
[32m  ********************[0m
[32m  Best f1:0.3842[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.23438:  57%|█████▋    | 16/28 [00:54<00:46,  3.85s/it]epoch 4 loss 1.23062:  57%|█████▋    | 16/28 [00:54<00:46,  3.85s/it]epoch 4 loss 1.23062:  61%|██████    | 17/28 [00:54<00:30,  2.82s/it]epoch 4 loss 1.22949:  61%|██████    | 17/28 [00:55<00:30,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6684[0m
[32m  eval_f1 = 0.384[0m
[32m  eval_mcc = 0.6495[0m
[32m  eval_precision = 0.5135[0m
[32m  eval_recall = 0.3492[0m

epoch 4 loss 1.22949:  64%|██████▍   | 18/28 [00:58<00:31,  3.11s/it]epoch 4 loss 1.2262:  64%|██████▍   | 18/28 [00:58<00:31,  3.11s/it] epoch 4 loss 1.2262:  68%|██████▊   | 19/28 [00:58<00:20,  2.30s/it]epoch 4 loss 1.2245:  68%|██████▊   | 19/28 [00:59<00:20,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6686[0m
[32m  eval_f1 = 0.3842[0m
[32m  eval_mcc = 0.6496[0m
[32m  eval_precision = 0.5132[0m
[32m  eval_recall = 0.3493[0m
[32m  ********************[0m
[32m  Best f1:0.3842[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.2245:  71%|███████▏  | 20/28 [01:03<00:24,  3.01s/it]epoch 4 loss 1.22676:  71%|███████▏  | 20/28 [01:03<00:24,  3.01s/it]epoch 4 loss 1.22676:  75%|███████▌  | 21/28 [01:03<00:15,  2.23s/it]epoch 4 loss 1.22211:  75%|███████▌  | 21/28 [01:04<00:15,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6687[0m
[32m  eval_f1 = 0.3842[0m
[32m  eval_mcc = 0.6497[0m
[32m  eval_precision = 0.5126[0m
[32m  eval_recall = 0.3493[0m

epoch 4 loss 1.22211:  79%|███████▊  | 22/28 [01:07<00:16,  2.70s/it]epoch 4 loss 1.2244:  79%|███████▊  | 22/28 [01:08<00:16,  2.70s/it] epoch 4 loss 1.2244:  82%|████████▏ | 23/28 [01:08<00:10,  2.01s/it]epoch 4 loss 1.22857:  82%|████████▏ | 23/28 [01:08<00:10,  2.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6687[0m
[32m  eval_f1 = 0.3842[0m
[32m  eval_mcc = 0.6497[0m
[32m  eval_precision = 0.5131[0m
[32m  eval_recall = 0.3493[0m

epoch 4 loss 1.22857:  86%|████████▌ | 24/28 [01:11<00:10,  2.55s/it]epoch 4 loss 1.22493:  86%|████████▌ | 24/28 [01:12<00:10,  2.55s/it]epoch 4 loss 1.22493:  89%|████████▉ | 25/28 [01:12<00:05,  1.90s/it]epoch 4 loss 1.22977:  89%|████████▉ | 25/28 [01:12<00:05,  1.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6691[0m
[32m  eval_f1 = 0.3844[0m
[32m  eval_mcc = 0.6502[0m
[32m  eval_precision = 0.5134[0m
[32m  eval_recall = 0.3495[0m
[32m  ********************[0m
[32m  Best f1:0.3844[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6502[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.22977:  93%|█████████▎| 26/28 [01:17<00:06,  3.00s/it]epoch 4 loss 1.22811:  93%|█████████▎| 26/28 [01:18<00:06,  3.00s/it]epoch 4 loss 1.22811:  96%|█████████▋| 27/28 [01:18<00:02,  2.23s/it]epoch 4 loss 1.23295:  96%|█████████▋| 27/28 [01:18<00:02,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6692[0m
[32m  eval_f1 = 0.3846[0m
[32m  eval_mcc = 0.6503[0m
[32m  eval_precision = 0.5134[0m
[32m  eval_recall = 0.3496[0m
[32m  ********************[0m
[32m  Best f1:0.3846[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23295: 100%|██████████| 28/28 [01:23<00:00,  3.17s/it]epoch 4 loss 1.23295: 100%|██████████| 28/28 [01:23<00:00,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.56it/s] 20%|██        | 2/10 [00:00<00:02,  2.67it/s] 30%|███       | 3/10 [00:01<00:02,  2.70it/s] 40%|████      | 4/10 [00:01<00:02,  2.70it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6692[0m
[32m  eval_f1 = 0.3846[0m
[32m  eval_mcc = 0.6503[0m
[32m  eval_precision = 0.5134[0m
[32m  eval_recall = 0.3496[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.72it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6534[0m
[32m  eval_f1 = 0.3371[0m
[32m  eval_mcc = 0.6345[0m
[32m  eval_precision = 0.4517[0m
[32m  eval_recall = 0.3083[0m

