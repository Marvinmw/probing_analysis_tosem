[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=0, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/2/layer_0', posratio=0.5, seed=926, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.1618:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.1618:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.17419:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0154[0m
[32m  eval_f1 = 0.0045[0m
[32m  eval_mcc = 0.0093[0m
[32m  eval_precision = 0.0169[0m
[32m  eval_recall = 0.0064[0m
[32m  ********************[0m
[32m  Best f1:0.0045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0093[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.17419:   7%|▋         | 2/28 [00:05<01:24,  3.25s/it]epoch 0 loss 5.1701:   7%|▋         | 2/28 [00:06<01:24,  3.25s/it] epoch 0 loss 5.1701:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.15506:  11%|█         | 3/28 [00:06<00:48,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0171[0m
[32m  eval_f1 = 0.0045[0m
[32m  eval_mcc = 0.009[0m
[32m  eval_precision = 0.0166[0m
[32m  eval_recall = 0.0067[0m

epoch 0 loss 5.15506:  14%|█▍        | 4/28 [00:09<01:04,  2.68s/it]epoch 0 loss 5.13963:  14%|█▍        | 4/28 [00:10<01:04,  2.68s/it]epoch 0 loss 5.13963:  18%|█▊        | 5/28 [00:10<00:42,  1.85s/it]epoch 0 loss 5.11022:  18%|█▊        | 5/28 [00:10<00:42,  1.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0251[0m
[32m  eval_f1 = 0.0056[0m
[32m  eval_mcc = 0.0111[0m
[32m  eval_precision = 0.0104[0m
[32m  eval_recall = 0.0087[0m
[32m  ********************[0m
[32m  Best f1:0.0056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.11022:  21%|██▏       | 6/28 [00:19<01:36,  4.37s/it]epoch 0 loss 5.07718:  21%|██▏       | 6/28 [00:20<01:36,  4.37s/it]epoch 0 loss 5.07718:  25%|██▌       | 7/28 [00:20<01:04,  3.08s/it]epoch 0 loss 5.04028:  25%|██▌       | 7/28 [00:20<01:04,  3.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0513[0m
[32m  eval_f1 = 0.0103[0m
[32m  eval_mcc = 0.0274[0m
[32m  eval_precision = 0.0177[0m
[32m  eval_recall = 0.0141[0m
[32m  ********************[0m
[32m  Best f1:0.0103[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0274[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04028:  29%|██▊       | 8/28 [00:28<01:38,  4.94s/it]epoch 0 loss 4.99404:  29%|██▊       | 8/28 [00:29<01:38,  4.94s/it]epoch 0 loss 4.99404:  32%|███▏      | 9/28 [00:29<01:07,  3.53s/it]epoch 0 loss 4.94668:  32%|███▏      | 9/28 [00:29<01:07,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0858[0m
[32m  eval_f1 = 0.0161[0m
[32m  eval_mcc = 0.0497[0m
[32m  eval_precision = 0.0237[0m
[32m  eval_recall = 0.0209[0m
[32m  ********************[0m
[32m  Best f1:0.0161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94668:  36%|███▌      | 10/28 [00:37<01:29,  4.99s/it]epoch 0 loss 4.89508:  36%|███▌      | 10/28 [00:38<01:29,  4.99s/it]epoch 0 loss 4.89508:  39%|███▉      | 11/28 [00:38<01:01,  3.59s/it]epoch 0 loss 4.83592:  39%|███▉      | 11/28 [00:38<01:01,  3.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1295[0m
[32m  eval_f1 = 0.0321[0m
[32m  eval_mcc = 0.0868[0m
[32m  eval_precision = 0.0428[0m
[32m  eval_recall = 0.0375[0m
[32m  ********************[0m
[32m  Best f1:0.0321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0868[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.83592:  43%|████▎     | 12/28 [00:45<01:14,  4.67s/it]epoch 0 loss 4.77163:  43%|████▎     | 12/28 [00:45<01:14,  4.67s/it]epoch 0 loss 4.77163:  46%|████▋     | 13/28 [00:45<00:50,  3.39s/it]epoch 0 loss 4.70951:  46%|████▋     | 13/28 [00:46<00:50,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.189[0m
[32m  eval_f1 = 0.0653[0m
[32m  eval_mcc = 0.1439[0m
[32m  eval_precision = 0.0931[0m
[32m  eval_recall = 0.0646[0m
[32m  ********************[0m
[32m  Best f1:0.0653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1439[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.70951:  50%|█████     | 14/28 [00:52<01:04,  4.57s/it]epoch 0 loss 4.64221:  50%|█████     | 14/28 [00:53<01:04,  4.57s/it]epoch 0 loss 4.64221:  54%|█████▎    | 15/28 [00:53<00:43,  3.32s/it]epoch 0 loss 4.57259:  54%|█████▎    | 15/28 [00:53<00:43,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2386[0m
[32m  eval_f1 = 0.0829[0m
[32m  eval_mcc = 0.192[0m
[32m  eval_precision = 0.1118[0m
[32m  eval_recall = 0.0788[0m
[32m  ********************[0m
[32m  Best f1:0.0829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.57259:  57%|█████▋    | 16/28 [01:03<01:03,  5.30s/it]epoch 0 loss 4.50439:  57%|█████▋    | 16/28 [01:03<01:03,  5.30s/it]epoch 0 loss 4.50439:  61%|██████    | 17/28 [01:03<00:42,  3.83s/it]epoch 0 loss 4.44087:  61%|██████    | 17/28 [01:04<00:42,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3045[0m
[32m  eval_f1 = 0.1079[0m
[32m  eval_mcc = 0.2577[0m
[32m  eval_precision = 0.1516[0m
[32m  eval_recall = 0.0967[0m
[32m  ********************[0m
[32m  Best f1:0.1079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.44087:  64%|██████▍   | 18/28 [01:11<00:50,  5.02s/it]epoch 0 loss 4.36769:  64%|██████▍   | 18/28 [01:11<00:50,  5.02s/it]epoch 0 loss 4.36769:  68%|██████▊   | 19/28 [01:11<00:32,  3.64s/it]epoch 0 loss 4.29732:  68%|██████▊   | 19/28 [01:12<00:32,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3703[0m
[32m  eval_f1 = 0.1304[0m
[32m  eval_mcc = 0.3266[0m
[32m  eval_precision = 0.1925[0m
[32m  eval_recall = 0.1144[0m
[32m  ********************[0m
[32m  Best f1:0.1304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.29732:  71%|███████▏  | 20/28 [01:21<00:44,  5.51s/it]epoch 0 loss 4.22353:  71%|███████▏  | 20/28 [01:22<00:44,  5.51s/it]epoch 0 loss 4.22353:  75%|███████▌  | 21/28 [01:22<00:27,  3.98s/it]epoch 0 loss 4.15418:  75%|███████▌  | 21/28 [01:22<00:27,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4316[0m
[32m  eval_f1 = 0.1468[0m
[32m  eval_mcc = 0.3928[0m
[32m  eval_precision = 0.2152[0m
[32m  eval_recall = 0.1299[0m
[32m  ********************[0m
[32m  Best f1:0.1468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.15418:  79%|███████▊  | 22/28 [01:30<00:31,  5.20s/it]epoch 0 loss 4.0892:  79%|███████▊  | 22/28 [01:30<00:31,  5.20s/it] epoch 0 loss 4.0892:  82%|████████▏ | 23/28 [01:30<00:18,  3.77s/it]epoch 0 loss 4.02618:  82%|████████▏ | 23/28 [01:31<00:18,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4576[0m
[32m  eval_f1 = 0.1495[0m
[32m  eval_mcc = 0.4224[0m
[32m  eval_precision = 0.2161[0m
[32m  eval_recall = 0.1355[0m
[32m  ********************[0m
[32m  Best f1:0.1495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4224[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.02618:  86%|████████▌ | 24/28 [01:42<00:24,  6.10s/it]epoch 0 loss 3.96089:  86%|████████▌ | 24/28 [01:42<00:24,  6.10s/it]epoch 0 loss 3.96089:  89%|████████▉ | 25/28 [01:42<00:13,  4.40s/it]epoch 0 loss 3.90353:  89%|████████▉ | 25/28 [01:42<00:13,  4.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.484[0m
[32m  eval_f1 = 0.1604[0m
[32m  eval_mcc = 0.4515[0m
[32m  eval_precision = 0.2167[0m
[32m  eval_recall = 0.1474[0m
[32m  ********************[0m
[32m  Best f1:0.1604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.90353:  93%|█████████▎| 26/28 [01:48<00:09,  4.88s/it]epoch 0 loss 3.84323:  93%|█████████▎| 26/28 [01:49<00:09,  4.88s/it]epoch 0 loss 3.84323:  96%|█████████▋| 27/28 [01:49<00:03,  3.54s/it]epoch 0 loss 3.77521:  96%|█████████▋| 27/28 [01:49<00:03,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5155[0m
[32m  eval_f1 = 0.1714[0m
[32m  eval_mcc = 0.4851[0m
[32m  eval_precision = 0.2303[0m
[32m  eval_recall = 0.1639[0m
[32m  ********************[0m
[32m  Best f1:0.1714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.77521: 100%|██████████| 28/28 [01:54<00:00,  4.20s/it]epoch 0 loss 3.77521: 100%|██████████| 28/28 [01:54<00:00,  4.10s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.03062:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.03062:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 1 loss 1.94267:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5433[0m
[32m  eval_f1 = 0.1895[0m
[32m  eval_mcc = 0.5144[0m
[32m  eval_precision = 0.2657[0m
[32m  eval_recall = 0.1817[0m
[32m  ********************[0m
[32m  Best f1:0.1895[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5144[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94267:   7%|▋         | 2/28 [00:11<02:53,  6.67s/it]epoch 1 loss 1.91308:   7%|▋         | 2/28 [00:11<02:53,  6.67s/it]epoch 1 loss 1.91308:  11%|█         | 3/28 [00:11<01:35,  3.82s/it]epoch 1 loss 1.92772:  11%|█         | 3/28 [00:12<01:35,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5713[0m
[32m  eval_f1 = 0.2111[0m
[32m  eval_mcc = 0.5449[0m
[32m  eval_precision = 0.2732[0m
[32m  eval_recall = 0.2054[0m
[32m  ********************[0m
[32m  Best f1:0.2111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5449[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.92772:  14%|█▍        | 4/28 [00:22<02:34,  6.45s/it]epoch 1 loss 1.90764:  14%|█▍        | 4/28 [00:22<02:34,  6.45s/it]epoch 1 loss 1.90764:  18%|█▊        | 5/28 [00:22<01:38,  4.27s/it]epoch 1 loss 1.87725:  18%|█▊        | 5/28 [00:23<01:38,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5867[0m
[32m  eval_f1 = 0.2259[0m
[32m  eval_mcc = 0.5623[0m
[32m  eval_precision = 0.296[0m
[32m  eval_recall = 0.2204[0m
[32m  ********************[0m
[32m  Best f1:0.2259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87725:  21%|██▏       | 6/28 [00:33<02:21,  6.43s/it]epoch 1 loss 1.84471:  21%|██▏       | 6/28 [00:33<02:21,  6.43s/it]epoch 1 loss 1.84471:  25%|██▌       | 7/28 [00:33<01:33,  4.46s/it]epoch 1 loss 1.82554:  25%|██▌       | 7/28 [00:34<01:33,  4.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5948[0m
[32m  eval_f1 = 0.2313[0m
[32m  eval_mcc = 0.5718[0m
[32m  eval_precision = 0.3119[0m
[32m  eval_recall = 0.2243[0m
[32m  ********************[0m
[32m  Best f1:0.2313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5718[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.82554:  29%|██▊       | 8/28 [00:44<02:09,  6.47s/it]epoch 1 loss 1.79812:  29%|██▊       | 8/28 [00:44<02:09,  6.47s/it]epoch 1 loss 1.79812:  32%|███▏      | 9/28 [00:44<01:27,  4.58s/it]epoch 1 loss 1.76575:  32%|███▏      | 9/28 [00:45<01:27,  4.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6073[0m
[32m  eval_f1 = 0.2441[0m
[32m  eval_mcc = 0.5855[0m
[32m  eval_precision = 0.3316[0m
[32m  eval_recall = 0.2332[0m
[32m  ********************[0m
[32m  Best f1:0.2441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5855[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.76575:  36%|███▌      | 10/28 [00:54<01:52,  6.23s/it]epoch 1 loss 1.75808:  36%|███▌      | 10/28 [00:55<01:52,  6.23s/it]epoch 1 loss 1.75808:  39%|███▉      | 11/28 [00:55<01:15,  4.45s/it]epoch 1 loss 1.74887:  39%|███▉      | 11/28 [00:55<01:15,  4.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6141[0m
[32m  eval_f1 = 0.258[0m
[32m  eval_mcc = 0.5926[0m
[32m  eval_precision = 0.3528[0m
[32m  eval_recall = 0.2432[0m
[32m  ********************[0m
[32m  Best f1:0.258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5926[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74887:  43%|████▎     | 12/28 [01:05<01:39,  6.24s/it]epoch 1 loss 1.73125:  43%|████▎     | 12/28 [01:06<01:39,  6.24s/it]epoch 1 loss 1.73125:  46%|████▋     | 13/28 [01:06<01:07,  4.47s/it]epoch 1 loss 1.71998:  46%|████▋     | 13/28 [01:06<01:07,  4.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6191[0m
[32m  eval_f1 = 0.2665[0m
[32m  eval_mcc = 0.5971[0m
[32m  eval_precision = 0.3734[0m
[32m  eval_recall = 0.2506[0m
[32m  ********************[0m
[32m  Best f1:0.2665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5971[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.71998:  50%|█████     | 14/28 [01:15<01:25,  6.11s/it]epoch 1 loss 1.71372:  50%|█████     | 14/28 [01:16<01:25,  6.11s/it]epoch 1 loss 1.71372:  54%|█████▎    | 15/28 [01:16<00:57,  4.39s/it]epoch 1 loss 1.70099:  54%|█████▎    | 15/28 [01:16<00:57,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6252[0m
[32m  eval_f1 = 0.2781[0m
[32m  eval_mcc = 0.6033[0m
[32m  eval_precision = 0.3897[0m
[32m  eval_recall = 0.2591[0m
[32m  ********************[0m
[32m  Best f1:0.2781[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.70099:  57%|█████▋    | 16/28 [01:24<01:05,  5.47s/it]epoch 1 loss 1.67918:  57%|█████▋    | 16/28 [01:24<01:05,  5.47s/it]epoch 1 loss 1.67918:  61%|██████    | 17/28 [01:24<00:43,  3.95s/it]epoch 1 loss 1.6668:  61%|██████    | 17/28 [01:25<00:43,  3.95s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6302[0m
[32m  eval_f1 = 0.2919[0m
[32m  eval_mcc = 0.609[0m
[32m  eval_precision = 0.3922[0m
[32m  eval_recall = 0.2694[0m
[32m  ********************[0m
[32m  Best f1:0.2919[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.6668:  64%|██████▍   | 18/28 [01:33<00:55,  5.52s/it]epoch 1 loss 1.65167:  64%|██████▍   | 18/28 [01:34<00:55,  5.52s/it]epoch 1 loss 1.65167:  68%|██████▊   | 19/28 [01:34<00:35,  3.99s/it]epoch 1 loss 1.63118:  68%|██████▊   | 19/28 [01:34<00:35,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6365[0m
[32m  eval_f1 = 0.3192[0m
[32m  eval_mcc = 0.617[0m
[32m  eval_precision = 0.4143[0m
[32m  eval_recall = 0.294[0m
[32m  ********************[0m
[32m  Best f1:0.3192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.63118:  71%|███████▏  | 20/28 [01:42<00:41,  5.23s/it]epoch 1 loss 1.61881:  71%|███████▏  | 20/28 [01:42<00:41,  5.23s/it]epoch 1 loss 1.61881:  75%|███████▌  | 21/28 [01:42<00:26,  3.79s/it]epoch 1 loss 1.60521:  75%|███████▌  | 21/28 [01:43<00:26,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6385[0m
[32m  eval_f1 = 0.3258[0m
[32m  eval_mcc = 0.6196[0m
[32m  eval_precision = 0.4145[0m
[32m  eval_recall = 0.3007[0m
[32m  ********************[0m
[32m  Best f1:0.3258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6196[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.60521:  79%|███████▊  | 22/28 [01:52<00:33,  5.51s/it]epoch 1 loss 1.59528:  79%|███████▊  | 22/28 [01:52<00:33,  5.51s/it]epoch 1 loss 1.59528:  82%|████████▏ | 23/28 [01:52<00:19,  3.98s/it]epoch 1 loss 1.58366:  82%|████████▏ | 23/28 [01:53<00:19,  3.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6416[0m
[32m  eval_f1 = 0.3295[0m
[32m  eval_mcc = 0.6229[0m
[32m  eval_precision = 0.4304[0m
[32m  eval_recall = 0.3045[0m
[32m  ********************[0m
[32m  Best f1:0.3295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.58366:  86%|████████▌ | 24/28 [02:00<00:20,  5.18s/it]epoch 1 loss 1.57248:  86%|████████▌ | 24/28 [02:01<00:20,  5.18s/it]epoch 1 loss 1.57248:  89%|████████▉ | 25/28 [02:01<00:11,  3.76s/it]epoch 1 loss 1.56135:  89%|████████▉ | 25/28 [02:01<00:11,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6447[0m
[32m  eval_f1 = 0.3371[0m
[32m  eval_mcc = 0.6254[0m
[32m  eval_precision = 0.4455[0m
[32m  eval_recall = 0.3112[0m
[32m  ********************[0m
[32m  Best f1:0.3371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.56135:  93%|█████████▎| 26/28 [02:10<00:11,  5.52s/it]epoch 1 loss 1.55452:  93%|█████████▎| 26/28 [02:11<00:11,  5.52s/it]epoch 1 loss 1.55452:  96%|█████████▋| 27/28 [02:11<00:03,  3.99s/it]epoch 1 loss 1.54432:  96%|█████████▋| 27/28 [02:11<00:03,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3448[0m
[32m  eval_mcc = 0.6269[0m
[32m  eval_precision = 0.4557[0m
[32m  eval_recall = 0.3184[0m
[32m  ********************[0m
[32m  Best f1:0.3448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.54432: 100%|██████████| 28/28 [02:19<00:00,  5.26s/it]epoch 1 loss 1.54432: 100%|██████████| 28/28 [02:19<00:00,  4.98s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.11524:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.11524:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 2 loss 1.20563:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6504[0m
[32m  eval_f1 = 0.3483[0m
[32m  eval_mcc = 0.6301[0m
[32m  eval_precision = 0.4441[0m
[32m  eval_recall = 0.3236[0m
[32m  ********************[0m
[32m  Best f1:0.3483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.20563:   7%|▋         | 2/28 [00:11<02:57,  6.84s/it]epoch 2 loss 1.20445:   7%|▋         | 2/28 [00:12<02:57,  6.84s/it]epoch 2 loss 1.20445:  11%|█         | 3/28 [00:12<01:37,  3.91s/it]epoch 2 loss 1.26688:  11%|█         | 3/28 [00:12<01:37,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6536[0m
[32m  eval_f1 = 0.3519[0m
[32m  eval_mcc = 0.6335[0m
[32m  eval_precision = 0.4454[0m
[32m  eval_recall = 0.3276[0m
[32m  ********************[0m
[32m  Best f1:0.3519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26688:  14%|█▍        | 4/28 [00:22<02:34,  6.44s/it]epoch 2 loss 1.26929:  14%|█▍        | 4/28 [00:22<02:34,  6.44s/it]epoch 2 loss 1.26929:  18%|█▊        | 5/28 [00:22<01:38,  4.27s/it]epoch 2 loss 1.26832:  18%|█▊        | 5/28 [00:23<01:38,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6566[0m
[32m  eval_f1 = 0.3585[0m
[32m  eval_mcc = 0.6368[0m
[32m  eval_precision = 0.4658[0m
[32m  eval_recall = 0.3332[0m
[32m  ********************[0m
[32m  Best f1:0.3585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26832:  21%|██▏       | 6/28 [00:32<02:12,  6.01s/it]epoch 2 loss 1.26219:  21%|██▏       | 6/28 [00:32<02:12,  6.01s/it]epoch 2 loss 1.26219:  25%|██▌       | 7/28 [00:32<01:27,  4.19s/it]epoch 2 loss 1.26983:  25%|██▌       | 7/28 [00:33<01:27,  4.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6565[0m
[32m  eval_f1 = 0.3583[0m
[32m  eval_mcc = 0.6371[0m
[32m  eval_precision = 0.4692[0m
[32m  eval_recall = 0.332[0m
[32m  ********************[0m
[32m  Best MCC:0.6371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26983:  29%|██▊       | 8/28 [00:39<01:43,  5.17s/it]epoch 2 loss 1.26688:  29%|██▊       | 8/28 [00:40<01:43,  5.17s/it]epoch 2 loss 1.26688:  32%|███▏      | 9/28 [00:40<01:09,  3.68s/it]epoch 2 loss 1.24841:  32%|███▏      | 9/28 [00:40<01:09,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6578[0m
[32m  eval_f1 = 0.3599[0m
[32m  eval_mcc = 0.6392[0m
[32m  eval_precision = 0.4706[0m
[32m  eval_recall = 0.3336[0m
[32m  ********************[0m
[32m  Best f1:0.3599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6392[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24841:  36%|███▌      | 10/28 [00:50<01:40,  5.59s/it]epoch 2 loss 1.24756:  36%|███▌      | 10/28 [00:50<01:40,  5.59s/it]epoch 2 loss 1.24756:  39%|███▉      | 11/28 [00:50<01:08,  4.01s/it]epoch 2 loss 1.24013:  39%|███▉      | 11/28 [00:51<01:08,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6591[0m
[32m  eval_f1 = 0.3637[0m
[32m  eval_mcc = 0.6406[0m
[32m  eval_precision = 0.4803[0m
[32m  eval_recall = 0.3351[0m
[32m  ********************[0m
[32m  Best f1:0.3637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24013:  43%|████▎     | 12/28 [01:00<01:32,  5.76s/it]epoch 2 loss 1.23981:  43%|████▎     | 12/28 [01:00<01:32,  5.76s/it]epoch 2 loss 1.23981:  46%|████▋     | 13/28 [01:00<01:02,  4.14s/it]epoch 2 loss 1.22664:  46%|████▋     | 13/28 [01:01<01:02,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6604[0m
[32m  eval_f1 = 0.365[0m
[32m  eval_mcc = 0.6418[0m
[32m  eval_precision = 0.4791[0m
[32m  eval_recall = 0.3366[0m
[32m  ********************[0m
[32m  Best f1:0.365[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6418[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.22664:  50%|█████     | 14/28 [01:10<01:22,  5.92s/it]epoch 2 loss 1.22863:  50%|█████     | 14/28 [01:11<01:22,  5.92s/it]epoch 2 loss 1.22863:  54%|█████▎    | 15/28 [01:11<00:55,  4.26s/it]epoch 2 loss 1.22953:  54%|█████▎    | 15/28 [01:11<00:55,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6629[0m
[32m  eval_f1 = 0.3666[0m
[32m  eval_mcc = 0.644[0m
[32m  eval_precision = 0.4763[0m
[32m  eval_recall = 0.3383[0m
[32m  ********************[0m
[32m  Best f1:0.3666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.644[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.22953:  57%|█████▋    | 16/28 [01:19<01:06,  5.55s/it]epoch 2 loss 1.22865:  57%|█████▋    | 16/28 [01:20<01:06,  5.55s/it]epoch 2 loss 1.22865:  61%|██████    | 17/28 [01:20<00:44,  4.01s/it]epoch 2 loss 1.22099:  61%|██████    | 17/28 [01:20<00:44,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.664[0m
[32m  eval_f1 = 0.3666[0m
[32m  eval_mcc = 0.6448[0m
[32m  eval_precision = 0.476[0m
[32m  eval_recall = 0.3388[0m
[32m  ********************[0m
[32m  Best f1:0.3666[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.22099:  64%|██████▍   | 18/28 [01:30<00:57,  5.74s/it]epoch 2 loss 1.21886:  64%|██████▍   | 18/28 [01:30<00:57,  5.74s/it]epoch 2 loss 1.21886:  68%|██████▊   | 19/28 [01:30<00:37,  4.14s/it]epoch 2 loss 1.21426:  68%|██████▊   | 19/28 [01:30<00:37,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6666[0m
[32m  eval_f1 = 0.3698[0m
[32m  eval_mcc = 0.6474[0m
[32m  eval_precision = 0.4694[0m
[32m  eval_recall = 0.3426[0m
[32m  ********************[0m
[32m  Best f1:0.3698[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.21426:  71%|███████▏  | 20/28 [01:38<00:42,  5.32s/it]epoch 2 loss 1.21232:  71%|███████▏  | 20/28 [01:38<00:42,  5.32s/it]epoch 2 loss 1.21232:  75%|███████▌  | 21/28 [01:38<00:26,  3.85s/it]epoch 2 loss 1.20974:  75%|███████▌  | 21/28 [01:39<00:26,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6706[0m
[32m  eval_f1 = 0.3807[0m
[32m  eval_mcc = 0.6515[0m
[32m  eval_precision = 0.4809[0m
[32m  eval_recall = 0.3524[0m
[32m  ********************[0m
[32m  Best f1:0.3807[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.20974:  79%|███████▊  | 22/28 [01:48<00:33,  5.58s/it]epoch 2 loss 1.21543:  79%|███████▊  | 22/28 [01:48<00:33,  5.58s/it]epoch 2 loss 1.21543:  82%|████████▏ | 23/28 [01:48<00:20,  4.03s/it]epoch 2 loss 1.2157:  82%|████████▏ | 23/28 [01:49<00:20,  4.03s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6723[0m
[32m  eval_f1 = 0.3873[0m
[32m  eval_mcc = 0.6533[0m
[32m  eval_precision = 0.4942[0m
[32m  eval_recall = 0.3582[0m
[32m  ********************[0m
[32m  Best f1:0.3873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6533[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2157:  86%|████████▌ | 24/28 [01:56<00:20,  5.12s/it]epoch 2 loss 1.21321:  86%|████████▌ | 24/28 [01:57<00:20,  5.12s/it]epoch 2 loss 1.21321:  89%|████████▉ | 25/28 [01:57<00:11,  3.71s/it]epoch 2 loss 1.21619:  89%|████████▉ | 25/28 [01:57<00:11,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6721[0m
[32m  eval_f1 = 0.3895[0m
[32m  eval_mcc = 0.6532[0m
[32m  eval_precision = 0.493[0m
[32m  eval_recall = 0.3598[0m
[32m  ********************[0m
[32m  Best f1:0.3895[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.21619:  93%|█████████▎| 26/28 [02:02<00:08,  4.12s/it]epoch 2 loss 1.21596:  93%|█████████▎| 26/28 [02:02<00:08,  4.12s/it]epoch 2 loss 1.21596:  96%|█████████▋| 27/28 [02:02<00:03,  3.00s/it]epoch 2 loss 1.21749:  96%|█████████▋| 27/28 [02:02<00:03,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6743[0m
[32m  eval_f1 = 0.3915[0m
[32m  eval_mcc = 0.6555[0m
[32m  eval_precision = 0.49[0m
[32m  eval_recall = 0.3612[0m
[32m  ********************[0m
[32m  Best f1:0.3915[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.21749: 100%|██████████| 28/28 [02:11<00:00,  4.87s/it]epoch 2 loss 1.21749: 100%|██████████| 28/28 [02:11<00:00,  4.71s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.11867:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.11867:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 3 loss 1.20577:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6746[0m
[32m  eval_f1 = 0.3915[0m
[32m  eval_mcc = 0.6561[0m
[32m  eval_precision = 0.4902[0m
[32m  eval_recall = 0.3609[0m
[32m  ********************[0m
[32m  Best f1:0.3915[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.20577:   7%|▋         | 2/28 [00:09<02:26,  5.62s/it]epoch 3 loss 1.17525:   7%|▋         | 2/28 [00:10<02:26,  5.62s/it]epoch 3 loss 1.17525:  11%|█         | 3/28 [00:10<01:21,  3.24s/it]epoch 3 loss 1.1653:  11%|█         | 3/28 [00:10<01:21,  3.24s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6758[0m
[32m  eval_f1 = 0.3921[0m
[32m  eval_mcc = 0.6574[0m
[32m  eval_precision = 0.4885[0m
[32m  eval_recall = 0.361[0m
[32m  ********************[0m
[32m  Best f1:0.3921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1653:  14%|█▍        | 4/28 [00:17<01:55,  4.81s/it]epoch 3 loss 1.15962:  14%|█▍        | 4/28 [00:17<01:55,  4.81s/it]epoch 3 loss 1.15962:  18%|█▊        | 5/28 [00:17<01:14,  3.23s/it]epoch 3 loss 1.15767:  18%|█▊        | 5/28 [00:18<01:14,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6761[0m
[32m  eval_f1 = 0.3916[0m
[32m  eval_mcc = 0.6578[0m
[32m  eval_precision = 0.4942[0m
[32m  eval_recall = 0.3604[0m
[32m  ********************[0m
[32m  Best MCC:0.6578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15767:  21%|██▏       | 6/28 [00:22<01:22,  3.77s/it]epoch 3 loss 1.1441:  21%|██▏       | 6/28 [00:22<01:22,  3.77s/it] epoch 3 loss 1.1441:  25%|██▌       | 7/28 [00:22<00:56,  2.67s/it]epoch 3 loss 1.14678:  25%|██▌       | 7/28 [00:23<00:56,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6759[0m
[32m  eval_f1 = 0.3959[0m
[32m  eval_mcc = 0.6575[0m
[32m  eval_precision = 0.4984[0m
[32m  eval_recall = 0.3642[0m
[32m  ********************[0m
[32m  Best f1:0.3959[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.14678:  29%|██▊       | 8/28 [00:27<01:07,  3.39s/it]epoch 3 loss 1.14404:  29%|██▊       | 8/28 [00:28<01:07,  3.39s/it]epoch 3 loss 1.14404:  32%|███▏      | 9/28 [00:28<00:46,  2.46s/it]epoch 3 loss 1.1408:  32%|███▏      | 9/28 [00:28<00:46,  2.46s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6767[0m
[32m  eval_f1 = 0.3964[0m
[32m  eval_mcc = 0.6583[0m
[32m  eval_precision = 0.4994[0m
[32m  eval_recall = 0.3648[0m
[32m  ********************[0m
[32m  Best f1:0.3964[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1408:  36%|███▌      | 10/28 [00:34<01:03,  3.52s/it]epoch 3 loss 1.13764:  36%|███▌      | 10/28 [00:34<01:03,  3.52s/it]epoch 3 loss 1.13764:  39%|███▉      | 11/28 [00:34<00:43,  2.57s/it]epoch 3 loss 1.13539:  39%|███▉      | 11/28 [00:34<00:43,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6761[0m
[32m  eval_f1 = 0.3959[0m
[32m  eval_mcc = 0.6577[0m
[32m  eval_precision = 0.498[0m
[32m  eval_recall = 0.3649[0m

epoch 3 loss 1.13539:  43%|████▎     | 12/28 [00:38<00:46,  2.94s/it]epoch 3 loss 1.14014:  43%|████▎     | 12/28 [00:38<00:46,  2.94s/it]epoch 3 loss 1.14014:  46%|████▋     | 13/28 [00:38<00:32,  2.17s/it]epoch 3 loss 1.1407:  46%|████▋     | 13/28 [00:39<00:32,  2.17s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6776[0m
[32m  eval_f1 = 0.3971[0m
[32m  eval_mcc = 0.6593[0m
[32m  eval_precision = 0.4956[0m
[32m  eval_recall = 0.3657[0m
[32m  ********************[0m
[32m  Best f1:0.3971[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.1407:  50%|█████     | 14/28 [00:45<00:49,  3.52s/it]epoch 3 loss 1.14654:  50%|█████     | 14/28 [00:45<00:49,  3.52s/it]epoch 3 loss 1.14654:  54%|█████▎    | 15/28 [00:45<00:33,  2.59s/it]epoch 3 loss 1.14326:  54%|█████▎    | 15/28 [00:46<00:33,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6791[0m
[32m  eval_f1 = 0.3988[0m
[32m  eval_mcc = 0.6609[0m
[32m  eval_precision = 0.4948[0m
[32m  eval_recall = 0.3681[0m
[32m  ********************[0m
[32m  Best f1:0.3988[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14326:  57%|█████▋    | 16/28 [00:51<00:42,  3.56s/it]epoch 3 loss 1.14314:  57%|█████▋    | 16/28 [00:52<00:42,  3.56s/it]epoch 3 loss 1.14314:  61%|██████    | 17/28 [00:52<00:28,  2.62s/it]epoch 3 loss 1.14225:  61%|██████    | 17/28 [00:52<00:28,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6797[0m
[32m  eval_f1 = 0.4007[0m
[32m  eval_mcc = 0.6613[0m
[32m  eval_precision = 0.4984[0m
[32m  eval_recall = 0.3704[0m
[32m  ********************[0m
[32m  Best f1:0.4007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6613[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14225:  64%|██████▍   | 18/28 [01:02<00:48,  4.85s/it]epoch 3 loss 1.14226:  64%|██████▍   | 18/28 [01:02<00:48,  4.85s/it]epoch 3 loss 1.14226:  68%|██████▊   | 19/28 [01:02<00:31,  3.52s/it]epoch 3 loss 1.14748:  68%|██████▊   | 19/28 [01:02<00:31,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6804[0m
[32m  eval_f1 = 0.4022[0m
[32m  eval_mcc = 0.6621[0m
[32m  eval_precision = 0.5006[0m
[32m  eval_recall = 0.3718[0m
[32m  ********************[0m
[32m  Best f1:0.4022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14748:  71%|███████▏  | 20/28 [01:12<00:44,  5.59s/it]epoch 3 loss 1.14494:  71%|███████▏  | 20/28 [01:13<00:44,  5.59s/it]epoch 3 loss 1.14494:  75%|███████▌  | 21/28 [01:13<00:28,  4.04s/it]epoch 3 loss 1.14523:  75%|███████▌  | 21/28 [01:13<00:28,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6814[0m
[32m  eval_f1 = 0.4027[0m
[32m  eval_mcc = 0.6632[0m
[32m  eval_precision = 0.5001[0m
[32m  eval_recall = 0.3725[0m
[32m  ********************[0m
[32m  Best f1:0.4027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14523:  79%|███████▊  | 22/28 [01:23<00:35,  5.97s/it]epoch 3 loss 1.14307:  79%|███████▊  | 22/28 [01:24<00:35,  5.97s/it]epoch 3 loss 1.14307:  82%|████████▏ | 23/28 [01:24<00:21,  4.31s/it]epoch 3 loss 1.14151:  82%|████████▏ | 23/28 [01:24<00:21,  4.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6823[0m
[32m  eval_f1 = 0.4056[0m
[32m  eval_mcc = 0.6642[0m
[32m  eval_precision = 0.5126[0m
[32m  eval_recall = 0.3743[0m
[32m  ********************[0m
[32m  Best f1:0.4056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6642[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14151:  86%|████████▌ | 24/28 [01:35<00:24,  6.23s/it]epoch 3 loss 1.14212:  86%|████████▌ | 24/28 [01:35<00:24,  6.23s/it]epoch 3 loss 1.14212:  89%|████████▉ | 25/28 [01:35<00:13,  4.49s/it]epoch 3 loss 1.13643:  89%|████████▉ | 25/28 [01:35<00:13,  4.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6826[0m
[32m  eval_f1 = 0.4047[0m
[32m  eval_mcc = 0.6646[0m
[32m  eval_precision = 0.5083[0m
[32m  eval_recall = 0.3737[0m
[32m  ********************[0m
[32m  Best MCC:0.6646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.13643:  93%|█████████▎| 26/28 [01:42<00:10,  5.12s/it]epoch 3 loss 1.13748:  93%|█████████▎| 26/28 [01:42<00:10,  5.12s/it]epoch 3 loss 1.13748:  96%|█████████▋| 27/28 [01:42<00:03,  3.71s/it]epoch 3 loss 1.14006:  96%|█████████▋| 27/28 [01:42<00:03,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6833[0m
[32m  eval_f1 = 0.4051[0m
[32m  eval_mcc = 0.6654[0m
[32m  eval_precision = 0.5087[0m
[32m  eval_recall = 0.3742[0m
[32m  ********************[0m
[32m  Best MCC:0.6654[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14006: 100%|██████████| 28/28 [01:48<00:00,  4.28s/it]epoch 3 loss 1.14006: 100%|██████████| 28/28 [01:48<00:00,  3.86s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.06776:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.06776:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.12257:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6837[0m
[32m  eval_f1 = 0.4045[0m
[32m  eval_mcc = 0.6659[0m
[32m  eval_precision = 0.5101[0m
[32m  eval_recall = 0.3736[0m
[32m  ********************[0m
[32m  Best MCC:0.6659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12257:   7%|▋         | 2/28 [00:06<01:41,  3.91s/it]epoch 4 loss 1.09959:   7%|▋         | 2/28 [00:07<01:41,  3.91s/it]epoch 4 loss 1.09959:  11%|█         | 3/28 [00:07<00:57,  2.31s/it]epoch 4 loss 1.12274:  11%|█         | 3/28 [00:07<00:57,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6837[0m
[32m  eval_f1 = 0.405[0m
[32m  eval_mcc = 0.6659[0m
[32m  eval_precision = 0.5097[0m
[32m  eval_recall = 0.3739[0m
[32m  ********************[0m
[32m  Best MCC:0.6659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.12274:  14%|█▍        | 4/28 [00:14<01:44,  4.36s/it]epoch 4 loss 1.11366:  14%|█▍        | 4/28 [00:15<01:44,  4.36s/it]epoch 4 loss 1.11366:  18%|█▊        | 5/28 [00:15<01:07,  2.94s/it]epoch 4 loss 1.11317:  18%|█▊        | 5/28 [00:15<01:07,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6843[0m
[32m  eval_f1 = 0.4049[0m
[32m  eval_mcc = 0.6665[0m
[32m  eval_precision = 0.5094[0m
[32m  eval_recall = 0.3736[0m
[32m  ********************[0m
[32m  Best MCC:0.6665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.11317:  21%|██▏       | 6/28 [00:21<01:28,  4.03s/it]epoch 4 loss 1.1185:  21%|██▏       | 6/28 [00:21<01:28,  4.03s/it] epoch 4 loss 1.1185:  25%|██▌       | 7/28 [00:21<00:59,  2.85s/it]epoch 4 loss 1.11054:  25%|██▌       | 7/28 [00:22<00:59,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6841[0m
[32m  eval_f1 = 0.4061[0m
[32m  eval_mcc = 0.6663[0m
[32m  eval_precision = 0.5099[0m
[32m  eval_recall = 0.3746[0m
[32m  ********************[0m
[32m  Best f1:0.4061[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.11054:  29%|██▊       | 8/28 [00:26<01:09,  3.46s/it]epoch 4 loss 1.10476:  29%|██▊       | 8/28 [00:26<01:09,  3.46s/it]epoch 4 loss 1.10476:  32%|███▏      | 9/28 [00:26<00:47,  2.51s/it]epoch 4 loss 1.10197:  32%|███▏      | 9/28 [00:27<00:47,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6839[0m
[32m  eval_f1 = 0.4068[0m
[32m  eval_mcc = 0.6661[0m
[32m  eval_precision = 0.517[0m
[32m  eval_recall = 0.3751[0m
[32m  ********************[0m
[32m  Best f1:0.4068[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.10197:  36%|███▌      | 10/28 [00:31<00:57,  3.18s/it]epoch 4 loss 1.10231:  36%|███▌      | 10/28 [00:31<00:57,  3.18s/it]epoch 4 loss 1.10231:  39%|███▉      | 11/28 [00:31<00:39,  2.33s/it]epoch 4 loss 1.10947:  39%|███▉      | 11/28 [00:32<00:39,  2.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6841[0m
[32m  eval_f1 = 0.4071[0m
[32m  eval_mcc = 0.6663[0m
[32m  eval_precision = 0.5175[0m
[32m  eval_recall = 0.3753[0m
[32m  ********************[0m
[32m  Best f1:0.4071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.10947:  43%|████▎     | 12/28 [00:36<00:49,  3.11s/it]epoch 4 loss 1.10656:  43%|████▎     | 12/28 [00:37<00:49,  3.11s/it]epoch 4 loss 1.10656:  46%|████▋     | 13/28 [00:37<00:34,  2.29s/it]epoch 4 loss 1.11082:  46%|████▋     | 13/28 [00:37<00:34,  2.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6843[0m
[32m  eval_f1 = 0.407[0m
[32m  eval_mcc = 0.6664[0m
[32m  eval_precision = 0.5173[0m
[32m  eval_recall = 0.3752[0m

epoch 4 loss 1.11082:  50%|█████     | 14/28 [00:41<00:38,  2.75s/it]epoch 4 loss 1.11567:  50%|█████     | 14/28 [00:41<00:38,  2.75s/it]epoch 4 loss 1.11567:  54%|█████▎    | 15/28 [00:41<00:26,  2.04s/it]epoch 4 loss 1.1116:  54%|█████▎    | 15/28 [00:41<00:26,  2.04s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6846[0m
[32m  eval_f1 = 0.407[0m
[32m  eval_mcc = 0.6667[0m
[32m  eval_precision = 0.5165[0m
[32m  eval_recall = 0.3753[0m
[32m  ********************[0m
[32m  Best MCC:0.6667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.1116:  57%|█████▋    | 16/28 [00:47<00:39,  3.30s/it]epoch 4 loss 1.1085:  57%|█████▋    | 16/28 [00:48<00:39,  3.30s/it]epoch 4 loss 1.1085:  61%|██████    | 17/28 [00:48<00:26,  2.43s/it]epoch 4 loss 1.10818:  61%|██████    | 17/28 [00:48<00:26,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6843[0m
[32m  eval_f1 = 0.4065[0m
[32m  eval_mcc = 0.6663[0m
[32m  eval_precision = 0.5098[0m
[32m  eval_recall = 0.375[0m

epoch 4 loss 1.10818:  64%|██████▍   | 18/28 [00:51<00:28,  2.84s/it]epoch 4 loss 1.10564:  64%|██████▍   | 18/28 [00:52<00:28,  2.84s/it]epoch 4 loss 1.10564:  68%|██████▊   | 19/28 [00:52<00:18,  2.11s/it]epoch 4 loss 1.10376:  68%|██████▊   | 19/28 [00:52<00:18,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6847[0m
[32m  eval_f1 = 0.4061[0m
[32m  eval_mcc = 0.6667[0m
[32m  eval_precision = 0.5089[0m
[32m  eval_recall = 0.3748[0m
[32m  ********************[0m
[32m  Best MCC:0.6667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.10376:  71%|███████▏  | 20/28 [00:58<00:25,  3.22s/it]epoch 4 loss 1.10557:  71%|███████▏  | 20/28 [00:58<00:25,  3.22s/it]epoch 4 loss 1.10557:  75%|███████▌  | 21/28 [00:58<00:16,  2.38s/it]epoch 4 loss 1.10161:  75%|███████▌  | 21/28 [00:58<00:16,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6847[0m
[32m  eval_f1 = 0.4105[0m
[32m  eval_mcc = 0.6667[0m
[32m  eval_precision = 0.5187[0m
[32m  eval_recall = 0.3776[0m
[32m  ********************[0m
[32m  Best f1:0.4105[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.10161:  79%|███████▊  | 22/28 [01:03<00:19,  3.18s/it]epoch 4 loss 1.1029:  79%|███████▊  | 22/28 [01:03<00:19,  3.18s/it] epoch 4 loss 1.1029:  82%|████████▏ | 23/28 [01:03<00:11,  2.35s/it]epoch 4 loss 1.10662:  82%|████████▏ | 23/28 [01:04<00:11,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6846[0m
[32m  eval_f1 = 0.4105[0m
[32m  eval_mcc = 0.6666[0m
[32m  eval_precision = 0.5185[0m
[32m  eval_recall = 0.3777[0m
[32m  ********************[0m
[32m  Best f1:0.4105[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/2/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.10662:  86%|████████▌ | 24/28 [01:11<00:15,  3.86s/it]epoch 4 loss 1.10273:  86%|████████▌ | 24/28 [01:11<00:15,  3.86s/it]epoch 4 loss 1.10273:  89%|████████▉ | 25/28 [01:11<00:08,  2.83s/it]epoch 4 loss 1.10699:  89%|████████▉ | 25/28 [01:12<00:08,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6845[0m
[32m  eval_f1 = 0.4104[0m
[32m  eval_mcc = 0.6665[0m
[32m  eval_precision = 0.5177[0m
[32m  eval_recall = 0.3777[0m

epoch 4 loss 1.10699:  93%|█████████▎| 26/28 [01:15<00:06,  3.12s/it]epoch 4 loss 1.1056:  93%|█████████▎| 26/28 [01:15<00:06,  3.12s/it] epoch 4 loss 1.1056:  96%|█████████▋| 27/28 [01:15<00:02,  2.30s/it]epoch 4 loss 1.11023:  96%|█████████▋| 27/28 [01:16<00:02,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6845[0m
[32m  eval_f1 = 0.4104[0m
[32m  eval_mcc = 0.6665[0m
[32m  eval_precision = 0.5177[0m
[32m  eval_recall = 0.3777[0m

epoch 4 loss 1.11023: 100%|██████████| 28/28 [01:19<00:00,  2.69s/it]epoch 4 loss 1.11023: 100%|██████████| 28/28 [01:19<00:00,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.72it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6846[0m
[32m  eval_f1 = 0.4105[0m
[32m  eval_mcc = 0.6666[0m
[32m  eval_precision = 0.5185[0m
[32m  eval_recall = 0.3777[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.72it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.71it/s] 80%|████████  | 8/10 [00:02<00:00,  2.72it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6704[0m
[32m  eval_f1 = 0.3614[0m
[32m  eval_mcc = 0.6525[0m
[32m  eval_precision = 0.459[0m
[32m  eval_recall = 0.3325[0m

