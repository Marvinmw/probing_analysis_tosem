[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=7, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/1/layer_7', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.06644:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.06644:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.06732:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0038[0m
[32m  eval_f1 = 0.0012[0m
[32m  eval_mcc = -0.0008[0m
[32m  eval_precision = 0.0107[0m
[32m  eval_recall = 0.0011[0m
[32m  ********************[0m
[32m  Best f1:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.06732:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.06137:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.06137:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 5.0454:  11%|█         | 3/28 [00:05<00:43,  1.75s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0069[0m
[32m  eval_f1 = 0.0017[0m
[32m  eval_mcc = -0.0019[0m
[32m  eval_precision = 0.0108[0m
[32m  eval_recall = 0.0017[0m
[32m  ********************[0m
[32m  Best f1:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.0454:  14%|█▍        | 4/28 [00:10<01:13,  3.06s/it]epoch 0 loss 5.02336:  14%|█▍        | 4/28 [00:11<01:13,  3.06s/it]epoch 0 loss 5.02336:  18%|█▊        | 5/28 [00:11<00:48,  2.10s/it]epoch 0 loss 4.99586:  18%|█▊        | 5/28 [00:11<00:48,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.018[0m
[32m  eval_f1 = 0.0032[0m
[32m  eval_mcc = -0.0023[0m
[32m  eval_precision = 0.0096[0m
[32m  eval_recall = 0.004[0m
[32m  ********************[0m
[32m  Best f1:0.0032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.99586:  21%|██▏       | 6/28 [00:15<01:04,  2.95s/it]epoch 0 loss 4.96083:  21%|██▏       | 6/28 [00:16<01:04,  2.95s/it]epoch 0 loss 4.96083:  25%|██▌       | 7/28 [00:16<00:44,  2.12s/it]epoch 0 loss 4.92259:  25%|██▌       | 7/28 [00:16<00:44,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.043[0m
[32m  eval_f1 = 0.0111[0m
[32m  eval_mcc = 0.0076[0m
[32m  eval_precision = 0.0209[0m
[32m  eval_recall = 0.0127[0m
[32m  ********************[0m
[32m  Best f1:0.0111[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.92259:  29%|██▊       | 8/28 [00:21<01:05,  3.25s/it]epoch 0 loss 4.87477:  29%|██▊       | 8/28 [00:22<01:05,  3.25s/it]epoch 0 loss 4.87477:  32%|███▏      | 9/28 [00:22<00:44,  2.37s/it]epoch 0 loss 4.82295:  32%|███▏      | 9/28 [00:22<00:44,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0591[0m
[32m  eval_f1 = 0.0149[0m
[32m  eval_mcc = 0.0164[0m
[32m  eval_precision = 0.0275[0m
[32m  eval_recall = 0.0178[0m
[32m  ********************[0m
[32m  Best f1:0.0149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0164[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.82295:  36%|███▌      | 10/28 [00:32<01:29,  4.97s/it]epoch 0 loss 4.77124:  36%|███▌      | 10/28 [00:33<01:29,  4.97s/it]epoch 0 loss 4.77124:  39%|███▉      | 11/28 [00:33<01:00,  3.58s/it]epoch 0 loss 4.71252:  39%|███▉      | 11/28 [00:33<01:00,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0811[0m
[32m  eval_f1 = 0.0194[0m
[32m  eval_mcc = 0.035[0m
[32m  eval_precision = 0.0327[0m
[32m  eval_recall = 0.0225[0m
[32m  ********************[0m
[32m  Best f1:0.0194[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.035[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.71252:  43%|████▎     | 12/28 [00:43<01:27,  5.49s/it]epoch 0 loss 4.65287:  43%|████▎     | 12/28 [00:43<01:27,  5.49s/it]epoch 0 loss 4.65287:  46%|████▋     | 13/28 [00:43<00:59,  3.95s/it]epoch 0 loss 4.59247:  46%|████▋     | 13/28 [00:44<00:59,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1214[0m
[32m  eval_f1 = 0.0286[0m
[32m  eval_mcc = 0.0727[0m
[32m  eval_precision = 0.0438[0m
[32m  eval_recall = 0.0324[0m
[32m  ********************[0m
[32m  Best f1:0.0286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.59247:  50%|█████     | 14/28 [00:49<01:05,  4.68s/it]epoch 0 loss 4.53525:  50%|█████     | 14/28 [00:50<01:05,  4.68s/it]epoch 0 loss 4.53525:  54%|█████▎    | 15/28 [00:50<00:44,  3.40s/it]epoch 0 loss 4.47577:  54%|█████▎    | 15/28 [00:50<00:44,  3.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1808[0m
[32m  eval_f1 = 0.0395[0m
[32m  eval_mcc = 0.1302[0m
[32m  eval_precision = 0.0608[0m
[32m  eval_recall = 0.0422[0m
[32m  ********************[0m
[32m  Best f1:0.0395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.47577:  57%|█████▋    | 16/28 [01:00<01:03,  5.30s/it]epoch 0 loss 4.41636:  57%|█████▋    | 16/28 [01:00<01:03,  5.30s/it]epoch 0 loss 4.41636:  61%|██████    | 17/28 [01:00<00:42,  3.83s/it]epoch 0 loss 4.35443:  61%|██████    | 17/28 [01:00<00:42,  3.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2288[0m
[32m  eval_f1 = 0.0404[0m
[32m  eval_mcc = 0.1747[0m
[32m  eval_precision = 0.0745[0m
[32m  eval_recall = 0.0439[0m
[32m  ********************[0m
[32m  Best f1:0.0404[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.35443:  64%|██████▍   | 18/28 [01:07<00:47,  4.70s/it]epoch 0 loss 4.29258:  64%|██████▍   | 18/28 [01:07<00:47,  4.70s/it]epoch 0 loss 4.29258:  68%|██████▊   | 19/28 [01:07<00:30,  3.41s/it]epoch 0 loss 4.2342:  68%|██████▊   | 19/28 [01:08<00:30,  3.41s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2836[0m
[32m  eval_f1 = 0.046[0m
[32m  eval_mcc = 0.2288[0m
[32m  eval_precision = 0.0914[0m
[32m  eval_recall = 0.0499[0m
[32m  ********************[0m
[32m  Best f1:0.046[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2288[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.2342:  71%|███████▏  | 20/28 [01:14<00:34,  4.34s/it]epoch 0 loss 4.17561:  71%|███████▏  | 20/28 [01:14<00:34,  4.34s/it]epoch 0 loss 4.17561:  75%|███████▌  | 21/28 [01:14<00:22,  3.16s/it]epoch 0 loss 4.11794:  75%|███████▌  | 21/28 [01:14<00:22,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3363[0m
[32m  eval_f1 = 0.0565[0m
[32m  eval_mcc = 0.2851[0m
[32m  eval_precision = 0.0991[0m
[32m  eval_recall = 0.0626[0m
[32m  ********************[0m
[32m  Best f1:0.0565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2851[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.11794:  79%|███████▊  | 22/28 [01:21<00:24,  4.16s/it]epoch 0 loss 4.06219:  79%|███████▊  | 22/28 [01:21<00:24,  4.16s/it]epoch 0 loss 4.06219:  82%|████████▏ | 23/28 [01:21<00:15,  3.04s/it]epoch 0 loss 4.01172:  82%|████████▏ | 23/28 [01:21<00:15,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3701[0m
[32m  eval_f1 = 0.081[0m
[32m  eval_mcc = 0.3286[0m
[32m  eval_precision = 0.1407[0m
[32m  eval_recall = 0.0815[0m
[32m  ********************[0m
[32m  Best f1:0.081[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.01172:  86%|████████▌ | 24/28 [01:27<00:15,  3.83s/it]epoch 0 loss 3.95745:  86%|████████▌ | 24/28 [01:27<00:15,  3.83s/it]epoch 0 loss 3.95745:  89%|████████▉ | 25/28 [01:27<00:08,  2.81s/it]epoch 0 loss 3.90977:  89%|████████▉ | 25/28 [01:28<00:08,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4032[0m
[32m  eval_f1 = 0.1135[0m
[32m  eval_mcc = 0.3697[0m
[32m  eval_precision = 0.1777[0m
[32m  eval_recall = 0.1078[0m
[32m  ********************[0m
[32m  Best f1:0.1135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.90977:  93%|█████████▎| 26/28 [01:33<00:07,  3.78s/it]epoch 0 loss 3.85864:  93%|█████████▎| 26/28 [01:34<00:07,  3.78s/it]epoch 0 loss 3.85864:  96%|█████████▋| 27/28 [01:34<00:02,  2.77s/it]epoch 0 loss 3.80891:  96%|█████████▋| 27/28 [01:34<00:02,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4508[0m
[32m  eval_f1 = 0.1401[0m
[32m  eval_mcc = 0.4229[0m
[32m  eval_precision = 0.1947[0m
[32m  eval_recall = 0.1319[0m
[32m  ********************[0m
[32m  Best f1:0.1401[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.80891: 100%|██████████| 28/28 [01:39<00:00,  3.71s/it]epoch 0 loss 3.80891: 100%|██████████| 28/28 [01:39<00:00,  3.57s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.5423:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.5423:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 1 loss 2.44891:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5094[0m
[32m  eval_f1 = 0.1691[0m
[32m  eval_mcc = 0.4828[0m
[32m  eval_precision = 0.2243[0m
[32m  eval_recall = 0.1611[0m
[32m  ********************[0m
[32m  Best f1:0.1691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.44891:   7%|▋         | 2/28 [00:05<01:29,  3.43s/it]epoch 1 loss 2.39722:   7%|▋         | 2/28 [00:06<01:29,  3.43s/it]epoch 1 loss 2.39722:  11%|█         | 3/28 [00:06<00:51,  2.05s/it]epoch 1 loss 2.35995:  11%|█         | 3/28 [00:06<00:51,  2.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5367[0m
[32m  eval_f1 = 0.1837[0m
[32m  eval_mcc = 0.5084[0m
[32m  eval_precision = 0.2323[0m
[32m  eval_recall = 0.1794[0m
[32m  ********************[0m
[32m  Best f1:0.1837[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.35995:  14%|█▍        | 4/28 [00:12<01:27,  3.63s/it]epoch 1 loss 2.3172:  14%|█▍        | 4/28 [00:12<01:27,  3.63s/it] epoch 1 loss 2.3172:  18%|█▊        | 5/28 [00:12<00:56,  2.47s/it]epoch 1 loss 2.25803:  18%|█▊        | 5/28 [00:13<00:56,  2.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5572[0m
[32m  eval_f1 = 0.193[0m
[32m  eval_mcc = 0.5289[0m
[32m  eval_precision = 0.2331[0m
[32m  eval_recall = 0.1893[0m
[32m  ********************[0m
[32m  Best f1:0.193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.25803:  21%|██▏       | 6/28 [00:19<01:24,  3.84s/it]epoch 1 loss 2.2269:  21%|██▏       | 6/28 [00:19<01:24,  3.84s/it] epoch 1 loss 2.2269:  25%|██▌       | 7/28 [00:19<00:57,  2.72s/it]epoch 1 loss 2.18369:  25%|██▌       | 7/28 [00:20<00:57,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5717[0m
[32m  eval_f1 = 0.1979[0m
[32m  eval_mcc = 0.5447[0m
[32m  eval_precision = 0.252[0m
[32m  eval_recall = 0.193[0m
[32m  ********************[0m
[32m  Best f1:0.1979[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.18369:  29%|██▊       | 8/28 [00:26<01:21,  4.09s/it]epoch 1 loss 2.15946:  29%|██▊       | 8/28 [00:27<01:21,  4.09s/it]epoch 1 loss 2.15946:  32%|███▏      | 9/28 [00:27<00:55,  2.94s/it]epoch 1 loss 2.11512:  32%|███▏      | 9/28 [00:27<00:55,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5786[0m
[32m  eval_f1 = 0.2011[0m
[32m  eval_mcc = 0.5532[0m
[32m  eval_precision = 0.2584[0m
[32m  eval_recall = 0.1938[0m
[32m  ********************[0m
[32m  Best f1:0.2011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5532[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11512:  36%|███▌      | 10/28 [00:33<01:10,  3.93s/it]epoch 1 loss 2.0888:  36%|███▌      | 10/28 [00:33<01:10,  3.93s/it] epoch 1 loss 2.0888:  39%|███▉      | 11/28 [00:33<00:48,  2.85s/it]epoch 1 loss 2.06043:  39%|███▉      | 11/28 [00:34<00:48,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5821[0m
[32m  eval_f1 = 0.2071[0m
[32m  eval_mcc = 0.5593[0m
[32m  eval_precision = 0.2671[0m
[32m  eval_recall = 0.1951[0m
[32m  ********************[0m
[32m  Best f1:0.2071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.06043:  43%|████▎     | 12/28 [00:39<00:58,  3.68s/it]epoch 1 loss 2.03529:  43%|████▎     | 12/28 [00:39<00:58,  3.68s/it]epoch 1 loss 2.03529:  46%|████▋     | 13/28 [00:39<00:40,  2.69s/it]epoch 1 loss 2.01668:  46%|████▋     | 13/28 [00:40<00:40,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5878[0m
[32m  eval_f1 = 0.2184[0m
[32m  eval_mcc = 0.5671[0m
[32m  eval_precision = 0.282[0m
[32m  eval_recall = 0.2039[0m
[32m  ********************[0m
[32m  Best f1:0.2184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5671[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01668:  50%|█████     | 14/28 [00:45<00:51,  3.71s/it]epoch 1 loss 1.9995:  50%|█████     | 14/28 [00:46<00:51,  3.71s/it] epoch 1 loss 1.9995:  54%|█████▎    | 15/28 [00:46<00:35,  2.72s/it]epoch 1 loss 1.97899:  54%|█████▎    | 15/28 [00:46<00:35,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.591[0m
[32m  eval_f1 = 0.2268[0m
[32m  eval_mcc = 0.57[0m
[32m  eval_precision = 0.3039[0m
[32m  eval_recall = 0.2127[0m
[32m  ********************[0m
[32m  Best f1:0.2268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.57[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97899:  57%|█████▋    | 16/28 [00:55<00:54,  4.56s/it]epoch 1 loss 1.95654:  57%|█████▋    | 16/28 [00:55<00:54,  4.56s/it]epoch 1 loss 1.95654:  61%|██████    | 17/28 [00:55<00:36,  3.32s/it]epoch 1 loss 1.93978:  61%|██████    | 17/28 [00:55<00:36,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5955[0m
[32m  eval_f1 = 0.2418[0m
[32m  eval_mcc = 0.5745[0m
[32m  eval_precision = 0.3404[0m
[32m  eval_recall = 0.2263[0m
[32m  ********************[0m
[32m  Best f1:0.2418[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93978:  64%|██████▍   | 18/28 [01:01<00:41,  4.11s/it]epoch 1 loss 1.91884:  64%|██████▍   | 18/28 [01:01<00:41,  4.11s/it]epoch 1 loss 1.91884:  68%|██████▊   | 19/28 [01:01<00:27,  3.00s/it]epoch 1 loss 1.91067:  68%|██████▊   | 19/28 [01:02<00:27,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6005[0m
[32m  eval_f1 = 0.2497[0m
[32m  eval_mcc = 0.579[0m
[32m  eval_precision = 0.3447[0m
[32m  eval_recall = 0.2345[0m
[32m  ********************[0m
[32m  Best f1:0.2497[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91067:  71%|███████▏  | 20/28 [01:10<00:37,  4.66s/it]epoch 1 loss 1.89992:  71%|███████▏  | 20/28 [01:10<00:37,  4.66s/it]epoch 1 loss 1.89992:  75%|███████▌  | 21/28 [01:10<00:23,  3.38s/it]epoch 1 loss 1.89469:  75%|███████▌  | 21/28 [01:11<00:23,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6078[0m
[32m  eval_f1 = 0.2581[0m
[32m  eval_mcc = 0.586[0m
[32m  eval_precision = 0.3353[0m
[32m  eval_recall = 0.2422[0m
[32m  ********************[0m
[32m  Best f1:0.2581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.586[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89469:  79%|███████▊  | 22/28 [01:16<00:25,  4.19s/it]epoch 1 loss 1.88737:  79%|███████▊  | 22/28 [01:17<00:25,  4.19s/it]epoch 1 loss 1.88737:  82%|████████▏ | 23/28 [01:17<00:15,  3.06s/it]epoch 1 loss 1.87978:  82%|████████▏ | 23/28 [01:17<00:15,  3.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6121[0m
[32m  eval_f1 = 0.2652[0m
[32m  eval_mcc = 0.5896[0m
[32m  eval_precision = 0.3487[0m
[32m  eval_recall = 0.25[0m
[32m  ********************[0m
[32m  Best f1:0.2652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5896[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87978:  86%|████████▌ | 24/28 [01:27<00:20,  5.21s/it]epoch 1 loss 1.86657:  86%|████████▌ | 24/28 [01:27<00:20,  5.21s/it]epoch 1 loss 1.86657:  89%|████████▉ | 25/28 [01:27<00:11,  3.77s/it]epoch 1 loss 1.84874:  89%|████████▉ | 25/28 [01:28<00:11,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.614[0m
[32m  eval_f1 = 0.2735[0m
[32m  eval_mcc = 0.5916[0m
[32m  eval_precision = 0.3676[0m
[32m  eval_recall = 0.2569[0m
[32m  ********************[0m
[32m  Best f1:0.2735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5916[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84874:  93%|█████████▎| 26/28 [01:34<00:08,  4.47s/it]epoch 1 loss 1.8354:  93%|█████████▎| 26/28 [01:34<00:08,  4.47s/it] epoch 1 loss 1.8354:  96%|█████████▋| 27/28 [01:34<00:03,  3.26s/it]epoch 1 loss 1.82248:  96%|█████████▋| 27/28 [01:34<00:03,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6168[0m
[32m  eval_f1 = 0.2865[0m
[32m  eval_mcc = 0.5947[0m
[32m  eval_precision = 0.3831[0m
[32m  eval_recall = 0.2682[0m
[32m  ********************[0m
[32m  Best f1:0.2865[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5947[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.82248: 100%|██████████| 28/28 [01:40<00:00,  4.06s/it]epoch 1 loss 1.82248: 100%|██████████| 28/28 [01:40<00:00,  3.59s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.48002:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.48002:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 2 loss 1.45418:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6212[0m
[32m  eval_f1 = 0.2913[0m
[32m  eval_mcc = 0.5995[0m
[32m  eval_precision = 0.402[0m
[32m  eval_recall = 0.2708[0m
[32m  ********************[0m
[32m  Best f1:0.2913[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5995[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45418:   7%|▋         | 2/28 [00:06<01:37,  3.76s/it]epoch 2 loss 1.48326:   7%|▋         | 2/28 [00:06<01:37,  3.76s/it]epoch 2 loss 1.48326:  11%|█         | 3/28 [00:06<00:55,  2.24s/it]epoch 2 loss 1.47153:  11%|█         | 3/28 [00:07<00:55,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6264[0m
[32m  eval_f1 = 0.2973[0m
[32m  eval_mcc = 0.6056[0m
[32m  eval_precision = 0.4075[0m
[32m  eval_recall = 0.2747[0m
[32m  ********************[0m
[32m  Best f1:0.2973[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47153:  14%|█▍        | 4/28 [00:13<01:30,  3.78s/it]epoch 2 loss 1.47584:  14%|█▍        | 4/28 [00:13<01:30,  3.78s/it]epoch 2 loss 1.47584:  18%|█▊        | 5/28 [00:13<00:59,  2.57s/it]epoch 2 loss 1.45396:  18%|█▊        | 5/28 [00:13<00:59,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6288[0m
[32m  eval_f1 = 0.3034[0m
[32m  eval_mcc = 0.6085[0m
[32m  eval_precision = 0.4124[0m
[32m  eval_recall = 0.2786[0m
[32m  ********************[0m
[32m  Best f1:0.3034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45396:  21%|██▏       | 6/28 [00:19<01:23,  3.80s/it]epoch 2 loss 1.45444:  21%|██▏       | 6/28 [00:20<01:23,  3.80s/it]epoch 2 loss 1.45444:  25%|██▌       | 7/28 [00:20<00:56,  2.70s/it]epoch 2 loss 1.46191:  25%|██▌       | 7/28 [00:20<00:56,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6298[0m
[32m  eval_f1 = 0.3062[0m
[32m  eval_mcc = 0.6092[0m
[32m  eval_precision = 0.4138[0m
[32m  eval_recall = 0.2816[0m
[32m  ********************[0m
[32m  Best f1:0.3062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46191:  29%|██▊       | 8/28 [00:27<01:26,  4.32s/it]epoch 2 loss 1.44908:  29%|██▊       | 8/28 [00:28<01:26,  4.32s/it]epoch 2 loss 1.44908:  32%|███▏      | 9/28 [00:28<00:58,  3.10s/it]epoch 2 loss 1.43599:  32%|███▏      | 9/28 [00:28<00:58,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6298[0m
[32m  eval_f1 = 0.3047[0m
[32m  eval_mcc = 0.6089[0m
[32m  eval_precision = 0.4126[0m
[32m  eval_recall = 0.2809[0m

epoch 2 loss 1.43599:  36%|███▌      | 10/28 [00:32<00:59,  3.32s/it]epoch 2 loss 1.43564:  36%|███▌      | 10/28 [00:32<00:59,  3.32s/it]epoch 2 loss 1.43564:  39%|███▉      | 11/28 [00:32<00:41,  2.43s/it]epoch 2 loss 1.43632:  39%|███▉      | 11/28 [00:32<00:41,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.631[0m
[32m  eval_f1 = 0.3142[0m
[32m  eval_mcc = 0.6099[0m
[32m  eval_precision = 0.4178[0m
[32m  eval_recall = 0.2907[0m
[32m  ********************[0m
[32m  Best f1:0.3142[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43632:  43%|████▎     | 12/28 [00:38<00:57,  3.57s/it]epoch 2 loss 1.43967:  43%|████▎     | 12/28 [00:39<00:57,  3.57s/it]epoch 2 loss 1.43967:  46%|████▋     | 13/28 [00:39<00:39,  2.62s/it]epoch 2 loss 1.42997:  46%|████▋     | 13/28 [00:39<00:39,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6337[0m
[32m  eval_f1 = 0.3158[0m
[32m  eval_mcc = 0.6121[0m
[32m  eval_precision = 0.4142[0m
[32m  eval_recall = 0.293[0m
[32m  ********************[0m
[32m  Best f1:0.3158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6121[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42997:  50%|█████     | 14/28 [00:45<00:52,  3.78s/it]epoch 2 loss 1.42645:  50%|█████     | 14/28 [00:46<00:52,  3.78s/it]epoch 2 loss 1.42645:  54%|█████▎    | 15/28 [00:46<00:36,  2.77s/it]epoch 2 loss 1.42658:  54%|█████▎    | 15/28 [00:46<00:36,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6363[0m
[32m  eval_f1 = 0.3158[0m
[32m  eval_mcc = 0.615[0m
[32m  eval_precision = 0.4214[0m
[32m  eval_recall = 0.2958[0m
[32m  ********************[0m
[32m  Best f1:0.3158[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.615[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42658:  57%|█████▋    | 16/28 [00:51<00:43,  3.59s/it]epoch 2 loss 1.43224:  57%|█████▋    | 16/28 [00:51<00:43,  3.59s/it]epoch 2 loss 1.43224:  61%|██████    | 17/28 [00:51<00:29,  2.64s/it]epoch 2 loss 1.43884:  61%|██████    | 17/28 [00:52<00:29,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6399[0m
[32m  eval_f1 = 0.3227[0m
[32m  eval_mcc = 0.6191[0m
[32m  eval_precision = 0.4089[0m
[32m  eval_recall = 0.3027[0m
[32m  ********************[0m
[32m  Best f1:0.3227[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43884:  64%|██████▍   | 18/28 [00:58<00:39,  3.90s/it]epoch 2 loss 1.4352:  64%|██████▍   | 18/28 [00:59<00:39,  3.90s/it] epoch 2 loss 1.4352:  68%|██████▊   | 19/28 [00:59<00:25,  2.86s/it]epoch 2 loss 1.43575:  68%|██████▊   | 19/28 [00:59<00:25,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6429[0m
[32m  eval_f1 = 0.3269[0m
[32m  eval_mcc = 0.6229[0m
[32m  eval_precision = 0.416[0m
[32m  eval_recall = 0.3058[0m
[32m  ********************[0m
[32m  Best f1:0.3269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43575:  71%|███████▏  | 20/28 [01:06<00:34,  4.32s/it]epoch 2 loss 1.43184:  71%|███████▏  | 20/28 [01:07<00:34,  4.32s/it]epoch 2 loss 1.43184:  75%|███████▌  | 21/28 [01:07<00:22,  3.15s/it]epoch 2 loss 1.42863:  75%|███████▌  | 21/28 [01:07<00:22,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6442[0m
[32m  eval_f1 = 0.3287[0m
[32m  eval_mcc = 0.6251[0m
[32m  eval_precision = 0.4169[0m
[32m  eval_recall = 0.3061[0m
[32m  ********************[0m
[32m  Best f1:0.3287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6251[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.42863:  79%|███████▊  | 22/28 [01:15<00:27,  4.52s/it]epoch 2 loss 1.42573:  79%|███████▊  | 22/28 [01:15<00:27,  4.52s/it]epoch 2 loss 1.42573:  82%|████████▏ | 23/28 [01:15<00:16,  3.28s/it]epoch 2 loss 1.42399:  82%|████████▏ | 23/28 [01:15<00:16,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6433[0m
[32m  eval_f1 = 0.3277[0m
[32m  eval_mcc = 0.6246[0m
[32m  eval_precision = 0.4241[0m
[32m  eval_recall = 0.3047[0m

epoch 2 loss 1.42399:  86%|████████▌ | 24/28 [01:19<00:13,  3.45s/it]epoch 2 loss 1.42341:  86%|████████▌ | 24/28 [01:19<00:13,  3.45s/it]epoch 2 loss 1.42341:  89%|████████▉ | 25/28 [01:19<00:07,  2.53s/it]epoch 2 loss 1.42786:  89%|████████▉ | 25/28 [01:20<00:07,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6436[0m
[32m  eval_f1 = 0.3292[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.427[0m
[32m  eval_recall = 0.3052[0m
[32m  ********************[0m
[32m  Best f1:0.3292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.42786:  93%|█████████▎| 26/28 [01:24<00:06,  3.29s/it]epoch 2 loss 1.42558:  93%|█████████▎| 26/28 [01:25<00:06,  3.29s/it]epoch 2 loss 1.42558:  96%|█████████▋| 27/28 [01:25<00:02,  2.43s/it]epoch 2 loss 1.4188:  96%|█████████▋| 27/28 [01:25<00:02,  2.43s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6439[0m
[32m  eval_f1 = 0.3326[0m
[32m  eval_mcc = 0.6252[0m
[32m  eval_precision = 0.447[0m
[32m  eval_recall = 0.3069[0m
[32m  ********************[0m
[32m  Best f1:0.3326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4188: 100%|██████████| 28/28 [01:35<00:00,  4.90s/it]epoch 2 loss 1.4188: 100%|██████████| 28/28 [01:35<00:00,  3.42s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.28215:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.28215:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s]epoch 3 loss 1.2941:   4%|▎         | 1/28 [00:00<00:11,  2.40it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6474[0m
[32m  eval_f1 = 0.3389[0m
[32m  eval_mcc = 0.6285[0m
[32m  eval_precision = 0.4571[0m
[32m  eval_recall = 0.312[0m
[32m  ********************[0m
[32m  Best f1:0.3389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2941:   7%|▋         | 2/28 [00:10<02:39,  6.14s/it]epoch 3 loss 1.2723:   7%|▋         | 2/28 [00:10<02:39,  6.14s/it]epoch 3 loss 1.2723:  11%|█         | 3/28 [00:10<01:28,  3.53s/it]epoch 3 loss 1.26587:  11%|█         | 3/28 [00:11<01:28,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6493[0m
[32m  eval_f1 = 0.3415[0m
[32m  eval_mcc = 0.6299[0m
[32m  eval_precision = 0.4562[0m
[32m  eval_recall = 0.3139[0m
[32m  ********************[0m
[32m  Best f1:0.3415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26587:  14%|█▍        | 4/28 [00:19<02:08,  5.37s/it]epoch 3 loss 1.27566:  14%|█▍        | 4/28 [00:19<02:08,  5.37s/it]epoch 3 loss 1.27566:  18%|█▊        | 5/28 [00:19<01:22,  3.58s/it]epoch 3 loss 1.3014:  18%|█▊        | 5/28 [00:19<01:22,  3.58s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6519[0m
[32m  eval_f1 = 0.346[0m
[32m  eval_mcc = 0.6324[0m
[32m  eval_precision = 0.4625[0m
[32m  eval_recall = 0.3178[0m
[32m  ********************[0m
[32m  Best f1:0.346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3014:  21%|██▏       | 6/28 [00:29<02:09,  5.87s/it]epoch 3 loss 1.33503:  21%|██▏       | 6/28 [00:30<02:09,  5.87s/it]epoch 3 loss 1.33503:  25%|██▌       | 7/28 [00:30<01:25,  4.08s/it]epoch 3 loss 1.33331:  25%|██▌       | 7/28 [00:30<01:25,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3483[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4698[0m
[32m  eval_recall = 0.32[0m
[32m  ********************[0m
[32m  Best f1:0.3483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33331:  29%|██▊       | 8/28 [00:37<01:39,  4.99s/it]epoch 3 loss 1.33093:  29%|██▊       | 8/28 [00:37<01:39,  4.99s/it]epoch 3 loss 1.33093:  32%|███▏      | 9/28 [00:37<01:07,  3.56s/it]epoch 3 loss 1.32161:  32%|███▏      | 9/28 [00:38<01:07,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3489[0m
[32m  eval_mcc = 0.633[0m
[32m  eval_precision = 0.4763[0m
[32m  eval_recall = 0.3211[0m
[32m  ********************[0m
[32m  Best f1:0.3489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.32161:  36%|███▌      | 10/28 [00:45<01:26,  4.81s/it]epoch 3 loss 1.32924:  36%|███▌      | 10/28 [00:45<01:26,  4.81s/it]epoch 3 loss 1.32924:  39%|███▉      | 11/28 [00:45<00:58,  3.47s/it]epoch 3 loss 1.34095:  39%|███▉      | 11/28 [00:46<00:58,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3515[0m
[32m  eval_mcc = 0.6329[0m
[32m  eval_precision = 0.4746[0m
[32m  eval_recall = 0.3232[0m
[32m  ********************[0m
[32m  Best f1:0.3515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.34095:  43%|████▎     | 12/28 [00:50<01:03,  3.95s/it]epoch 3 loss 1.33557:  43%|████▎     | 12/28 [00:51<01:03,  3.95s/it]epoch 3 loss 1.33557:  46%|████▋     | 13/28 [00:51<00:43,  2.88s/it]epoch 3 loss 1.32633:  46%|████▋     | 13/28 [00:51<00:43,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6522[0m
[32m  eval_f1 = 0.3521[0m
[32m  eval_mcc = 0.6325[0m
[32m  eval_precision = 0.4786[0m
[32m  eval_recall = 0.3228[0m
[32m  ********************[0m
[32m  Best f1:0.3521[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.32633:  50%|█████     | 14/28 [00:58<00:59,  4.26s/it]epoch 3 loss 1.3265:  50%|█████     | 14/28 [00:59<00:59,  4.26s/it] epoch 3 loss 1.3265:  54%|█████▎    | 15/28 [00:59<00:40,  3.11s/it]epoch 3 loss 1.32117:  54%|█████▎    | 15/28 [00:59<00:40,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6516[0m
[32m  eval_f1 = 0.3535[0m
[32m  eval_mcc = 0.6323[0m
[32m  eval_precision = 0.4801[0m
[32m  eval_recall = 0.323[0m
[32m  ********************[0m
[32m  Best f1:0.3535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.32117:  57%|█████▋    | 16/28 [01:04<00:44,  3.69s/it]epoch 3 loss 1.31999:  57%|█████▋    | 16/28 [01:04<00:44,  3.69s/it]epoch 3 loss 1.31999:  61%|██████    | 17/28 [01:04<00:29,  2.70s/it]epoch 3 loss 1.32186:  61%|██████    | 17/28 [01:04<00:29,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6517[0m
[32m  eval_f1 = 0.3531[0m
[32m  eval_mcc = 0.6324[0m
[32m  eval_precision = 0.4799[0m
[32m  eval_recall = 0.3228[0m

epoch 3 loss 1.32186:  64%|██████▍   | 18/28 [01:08<00:30,  3.03s/it]epoch 3 loss 1.3201:  64%|██████▍   | 18/28 [01:08<00:30,  3.03s/it] epoch 3 loss 1.3201:  68%|██████▊   | 19/28 [01:08<00:20,  2.24s/it]epoch 3 loss 1.31754:  68%|██████▊   | 19/28 [01:09<00:20,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6531[0m
[32m  eval_f1 = 0.354[0m
[32m  eval_mcc = 0.6342[0m
[32m  eval_precision = 0.4898[0m
[32m  eval_recall = 0.3237[0m
[32m  ********************[0m
[32m  Best f1:0.354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31754:  71%|███████▏  | 20/28 [01:18<00:36,  4.55s/it]epoch 3 loss 1.31467:  71%|███████▏  | 20/28 [01:19<00:36,  4.55s/it]epoch 3 loss 1.31467:  75%|███████▌  | 21/28 [01:19<00:23,  3.32s/it]epoch 3 loss 1.32064:  75%|███████▌  | 21/28 [01:19<00:23,  3.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6538[0m
[32m  eval_f1 = 0.3548[0m
[32m  eval_mcc = 0.6353[0m
[32m  eval_precision = 0.4909[0m
[32m  eval_recall = 0.3248[0m
[32m  ********************[0m
[32m  Best f1:0.3548[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32064:  79%|███████▊  | 22/28 [01:25<00:26,  4.34s/it]epoch 3 loss 1.32238:  79%|███████▊  | 22/28 [01:26<00:26,  4.34s/it]epoch 3 loss 1.32238:  82%|████████▏ | 23/28 [01:26<00:15,  3.16s/it]epoch 3 loss 1.32426:  82%|████████▏ | 23/28 [01:26<00:15,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3555[0m
[32m  eval_mcc = 0.6368[0m
[32m  eval_precision = 0.4886[0m
[32m  eval_recall = 0.3257[0m
[32m  ********************[0m
[32m  Best f1:0.3555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32426:  86%|████████▌ | 24/28 [01:36<00:20,  5.17s/it]epoch 3 loss 1.32388:  86%|████████▌ | 24/28 [01:36<00:20,  5.17s/it]epoch 3 loss 1.32388:  89%|████████▉ | 25/28 [01:36<00:11,  3.75s/it]epoch 3 loss 1.32564:  89%|████████▉ | 25/28 [01:36<00:11,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.657[0m
[32m  eval_f1 = 0.3567[0m
[32m  eval_mcc = 0.6385[0m
[32m  eval_precision = 0.4958[0m
[32m  eval_recall = 0.3271[0m
[32m  ********************[0m
[32m  Best f1:0.3567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32564:  93%|█████████▎| 26/28 [01:44<00:09,  4.93s/it]epoch 3 loss 1.32247:  93%|█████████▎| 26/28 [01:44<00:09,  4.93s/it]epoch 3 loss 1.32247:  96%|█████████▋| 27/28 [01:44<00:03,  3.58s/it]epoch 3 loss 1.3154:  96%|█████████▋| 27/28 [01:44<00:03,  3.58s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.3572[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.4925[0m
[32m  eval_recall = 0.3278[0m
[32m  ********************[0m
[32m  Best f1:0.3572[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.64[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3154: 100%|██████████| 28/28 [01:54<00:00,  5.44s/it]epoch 3 loss 1.3154: 100%|██████████| 28/28 [01:54<00:00,  4.09s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.40399:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.40399:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.32962:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6594[0m
[32m  eval_f1 = 0.3577[0m
[32m  eval_mcc = 0.6403[0m
[32m  eval_precision = 0.4939[0m
[32m  eval_recall = 0.328[0m
[32m  ********************[0m
[32m  Best f1:0.3577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.32962:   7%|▋         | 2/28 [00:07<01:46,  4.10s/it]epoch 4 loss 1.33773:   7%|▋         | 2/28 [00:07<01:46,  4.10s/it]epoch 4 loss 1.33773:  11%|█         | 3/28 [00:07<01:00,  2.42s/it]epoch 4 loss 1.33608:  11%|█         | 3/28 [00:07<01:00,  2.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6587[0m
[32m  eval_f1 = 0.3578[0m
[32m  eval_mcc = 0.6394[0m
[32m  eval_precision = 0.4972[0m
[32m  eval_recall = 0.3274[0m
[32m  ********************[0m
[32m  Best f1:0.3578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.33608:  14%|█▍        | 4/28 [00:12<01:21,  3.42s/it]epoch 4 loss 1.29947:  14%|█▍        | 4/28 [00:12<01:21,  3.42s/it]epoch 4 loss 1.29947:  18%|█▊        | 5/28 [00:12<00:53,  2.33s/it]epoch 4 loss 1.29001:  18%|█▊        | 5/28 [00:13<00:53,  2.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6579[0m
[32m  eval_f1 = 0.3573[0m
[32m  eval_mcc = 0.6385[0m
[32m  eval_precision = 0.4975[0m
[32m  eval_recall = 0.3266[0m

epoch 4 loss 1.29001:  21%|██▏       | 6/28 [00:16<01:02,  2.83s/it]epoch 4 loss 1.30428:  21%|██▏       | 6/28 [00:17<01:02,  2.83s/it]epoch 4 loss 1.30428:  25%|██▌       | 7/28 [00:17<00:42,  2.03s/it]epoch 4 loss 1.29711:  25%|██▌       | 7/28 [00:17<00:42,  2.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6578[0m
[32m  eval_f1 = 0.3569[0m
[32m  eval_mcc = 0.6385[0m
[32m  eval_precision = 0.4948[0m
[32m  eval_recall = 0.3265[0m

epoch 4 loss 1.29711:  29%|██▊       | 8/28 [00:20<00:51,  2.59s/it]epoch 4 loss 1.29528:  29%|██▊       | 8/28 [00:21<00:51,  2.59s/it]epoch 4 loss 1.29528:  32%|███▏      | 9/28 [00:21<00:36,  1.91s/it]epoch 4 loss 1.29677:  32%|███▏      | 9/28 [00:21<00:36,  1.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6574[0m
[32m  eval_f1 = 0.3568[0m
[32m  eval_mcc = 0.6381[0m
[32m  eval_precision = 0.4946[0m
[32m  eval_recall = 0.3265[0m

epoch 4 loss 1.29677:  36%|███▌      | 10/28 [00:25<00:44,  2.49s/it]epoch 4 loss 1.30704:  36%|███▌      | 10/28 [00:25<00:44,  2.49s/it]epoch 4 loss 1.30704:  39%|███▉      | 11/28 [00:25<00:31,  1.85s/it]epoch 4 loss 1.30233:  39%|███▉      | 11/28 [00:25<00:31,  1.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6571[0m
[32m  eval_f1 = 0.3572[0m
[32m  eval_mcc = 0.6379[0m
[32m  eval_precision = 0.4949[0m
[32m  eval_recall = 0.3267[0m

epoch 4 loss 1.30233:  43%|████▎     | 12/28 [00:29<00:39,  2.44s/it]epoch 4 loss 1.30033:  43%|████▎     | 12/28 [00:29<00:39,  2.44s/it]epoch 4 loss 1.30033:  46%|████▋     | 13/28 [00:29<00:27,  1.82s/it]epoch 4 loss 1.29212:  46%|████▋     | 13/28 [00:30<00:27,  1.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6569[0m
[32m  eval_f1 = 0.358[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.4952[0m
[32m  eval_recall = 0.3276[0m
[32m  ********************[0m
[32m  Best f1:0.358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.29212:  50%|█████     | 14/28 [00:34<00:37,  2.68s/it]epoch 4 loss 1.29139:  50%|█████     | 14/28 [00:34<00:37,  2.68s/it]epoch 4 loss 1.29139:  54%|█████▎    | 15/28 [00:34<00:25,  2.00s/it]epoch 4 loss 1.29354:  54%|█████▎    | 15/28 [00:35<00:25,  2.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6573[0m
[32m  eval_f1 = 0.358[0m
[32m  eval_mcc = 0.6381[0m
[32m  eval_precision = 0.4942[0m
[32m  eval_recall = 0.3279[0m
[32m  ********************[0m
[32m  Best f1:0.358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.29354:  57%|█████▋    | 16/28 [00:39<00:33,  2.81s/it]epoch 4 loss 1.29254:  57%|█████▋    | 16/28 [00:39<00:33,  2.81s/it]epoch 4 loss 1.29254:  61%|██████    | 17/28 [00:39<00:22,  2.09s/it]epoch 4 loss 1.28544:  61%|██████    | 17/28 [00:40<00:22,  2.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6577[0m
[32m  eval_f1 = 0.3578[0m
[32m  eval_mcc = 0.6385[0m
[32m  eval_precision = 0.4934[0m
[32m  eval_recall = 0.3279[0m

epoch 4 loss 1.28544:  64%|██████▍   | 18/28 [00:43<00:26,  2.61s/it]epoch 4 loss 1.28502:  64%|██████▍   | 18/28 [00:44<00:26,  2.61s/it]epoch 4 loss 1.28502:  68%|██████▊   | 19/28 [00:44<00:17,  1.94s/it]epoch 4 loss 1.28864:  68%|██████▊   | 19/28 [00:44<00:17,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6583[0m
[32m  eval_f1 = 0.3581[0m
[32m  eval_mcc = 0.6392[0m
[32m  eval_precision = 0.4934[0m
[32m  eval_recall = 0.3282[0m
[32m  ********************[0m
[32m  Best f1:0.3581[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.28864:  71%|███████▏  | 20/28 [00:48<00:22,  2.76s/it]epoch 4 loss 1.28583:  71%|███████▏  | 20/28 [00:49<00:22,  2.76s/it]epoch 4 loss 1.28583:  75%|███████▌  | 21/28 [00:49<00:14,  2.05s/it]epoch 4 loss 1.28763:  75%|███████▌  | 21/28 [00:49<00:14,  2.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.3584[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.4933[0m
[32m  eval_recall = 0.3285[0m
[32m  ********************[0m
[32m  Best f1:0.3584[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_7/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.28763:  79%|███████▊  | 22/28 [00:53<00:16,  2.83s/it]epoch 4 loss 1.28607:  79%|███████▊  | 22/28 [00:54<00:16,  2.83s/it]epoch 4 loss 1.28607:  82%|████████▏ | 23/28 [00:54<00:10,  2.11s/it]epoch 4 loss 1.28805:  82%|████████▏ | 23/28 [00:54<00:10,  2.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.659[0m
[32m  eval_f1 = 0.3583[0m
[32m  eval_mcc = 0.6398[0m
[32m  eval_precision = 0.493[0m
[32m  eval_recall = 0.3285[0m

epoch 4 loss 1.28805:  86%|████████▌ | 24/28 [00:57<00:10,  2.61s/it]epoch 4 loss 1.28635:  86%|████████▌ | 24/28 [00:58<00:10,  2.61s/it]epoch 4 loss 1.28635:  89%|████████▉ | 25/28 [00:58<00:05,  1.95s/it]epoch 4 loss 1.28642:  89%|████████▉ | 25/28 [00:58<00:05,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6591[0m
[32m  eval_f1 = 0.3583[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.4932[0m
[32m  eval_recall = 0.3286[0m

epoch 4 loss 1.28642:  93%|█████████▎| 26/28 [01:02<00:05,  2.51s/it]epoch 4 loss 1.2865:  93%|█████████▎| 26/28 [01:02<00:05,  2.51s/it] epoch 4 loss 1.2865:  96%|█████████▋| 27/28 [01:02<00:01,  1.88s/it]epoch 4 loss 1.28171:  96%|█████████▋| 27/28 [01:02<00:01,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6592[0m
[32m  eval_f1 = 0.3584[0m
[32m  eval_mcc = 0.64[0m
[32m  eval_precision = 0.4932[0m
[32m  eval_recall = 0.3286[0m

epoch 4 loss 1.28171: 100%|██████████| 28/28 [01:06<00:00,  2.40s/it]epoch 4 loss 1.28171: 100%|██████████| 28/28 [01:06<00:00,  2.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.72it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6588[0m
[32m  eval_f1 = 0.3584[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.4933[0m
[32m  eval_recall = 0.3285[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.74it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.71it/s] 70%|███████   | 7/10 [00:02<00:01,  2.72it/s] 80%|████████  | 8/10 [00:02<00:00,  2.72it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6426[0m
[32m  eval_f1 = 0.3174[0m
[32m  eval_mcc = 0.6237[0m
[32m  eval_precision = 0.435[0m
[32m  eval_recall = 0.2923[0m

