[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=9, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/1/layer_9', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.16217:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.16217:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.16598:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.005[0m
[32m  eval_f1 = 0.0013[0m
[32m  eval_mcc = -0.0015[0m
[32m  eval_precision = 0.0078[0m
[32m  eval_recall = 0.0018[0m
[32m  ********************[0m
[32m  Best f1:0.0013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.16598:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.15938:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 5.15938:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 5.14125:  11%|█         | 3/28 [00:05<00:43,  1.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0085[0m
[32m  eval_f1 = 0.0017[0m
[32m  eval_mcc = -0.0015[0m
[32m  eval_precision = 0.0038[0m
[32m  eval_recall = 0.0029[0m
[32m  ********************[0m
[32m  Best f1:0.0017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.14125:  14%|█▍        | 4/28 [00:10<01:13,  3.05s/it]epoch 0 loss 5.11625:  14%|█▍        | 4/28 [00:10<01:13,  3.05s/it]epoch 0 loss 5.11625:  18%|█▊        | 5/28 [00:10<00:48,  2.10s/it]epoch 0 loss 5.08816:  18%|█▊        | 5/28 [00:11<00:48,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0172[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = -0.0009[0m
[32m  eval_precision = 0.004[0m
[32m  eval_recall = 0.0057[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.08816:  21%|██▏       | 6/28 [00:15<01:07,  3.07s/it]epoch 0 loss 5.05243:  21%|██▏       | 6/28 [00:16<01:07,  3.07s/it]epoch 0 loss 5.05243:  25%|██▌       | 7/28 [00:16<00:46,  2.20s/it]epoch 0 loss 5.01266:  25%|██▌       | 7/28 [00:16<00:46,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0307[0m
[32m  eval_f1 = 0.005[0m
[32m  eval_mcc = 0.0022[0m
[32m  eval_precision = 0.0119[0m
[32m  eval_recall = 0.0107[0m
[32m  ********************[0m
[32m  Best f1:0.005[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0022[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.01266:  29%|██▊       | 8/28 [00:21<01:04,  3.23s/it]epoch 0 loss 4.96214:  29%|██▊       | 8/28 [00:22<01:04,  3.23s/it]epoch 0 loss 4.96214:  32%|███▏      | 9/28 [00:22<00:44,  2.34s/it]epoch 0 loss 4.9073:  32%|███▏      | 9/28 [00:22<00:44,  2.34s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0501[0m
[32m  eval_f1 = 0.0116[0m
[32m  eval_mcc = 0.017[0m
[32m  eval_precision = 0.0242[0m
[32m  eval_recall = 0.0173[0m
[32m  ********************[0m
[32m  Best f1:0.0116[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.017[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.9073:  36%|███▌      | 10/28 [00:32<01:24,  4.67s/it]epoch 0 loss 4.85478:  36%|███▌      | 10/28 [00:32<01:24,  4.67s/it]epoch 0 loss 4.85478:  39%|███▉      | 11/28 [00:32<00:57,  3.37s/it]epoch 0 loss 4.79333:  39%|███▉      | 11/28 [00:32<00:57,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0721[0m
[32m  eval_f1 = 0.018[0m
[32m  eval_mcc = 0.0329[0m
[32m  eval_precision = 0.035[0m
[32m  eval_recall = 0.0231[0m
[32m  ********************[0m
[32m  Best f1:0.018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.79333:  43%|████▎     | 12/28 [00:40<01:14,  4.63s/it]epoch 0 loss 4.73138:  43%|████▎     | 12/28 [00:40<01:14,  4.63s/it]epoch 0 loss 4.73138:  46%|████▋     | 13/28 [00:40<00:50,  3.36s/it]epoch 0 loss 4.66831:  46%|████▋     | 13/28 [00:40<00:50,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1112[0m
[32m  eval_f1 = 0.025[0m
[32m  eval_mcc = 0.0623[0m
[32m  eval_precision = 0.0394[0m
[32m  eval_recall = 0.0285[0m
[32m  ********************[0m
[32m  Best f1:0.025[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.66831:  50%|█████     | 14/28 [00:47<01:00,  4.33s/it]epoch 0 loss 4.60884:  50%|█████     | 14/28 [00:47<01:00,  4.33s/it]epoch 0 loss 4.60884:  54%|█████▎    | 15/28 [00:47<00:40,  3.15s/it]epoch 0 loss 4.54702:  54%|█████▎    | 15/28 [00:47<00:40,  3.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1703[0m
[32m  eval_f1 = 0.0351[0m
[32m  eval_mcc = 0.1172[0m
[32m  eval_precision = 0.0622[0m
[32m  eval_recall = 0.0377[0m
[32m  ********************[0m
[32m  Best f1:0.0351[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.54702:  57%|█████▋    | 16/28 [00:57<01:01,  5.10s/it]epoch 0 loss 4.48615:  57%|█████▋    | 16/28 [00:57<01:01,  5.10s/it]epoch 0 loss 4.48615:  61%|██████    | 17/28 [00:57<00:40,  3.70s/it]epoch 0 loss 4.42296:  61%|██████    | 17/28 [00:57<00:40,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2126[0m
[32m  eval_f1 = 0.0383[0m
[32m  eval_mcc = 0.1611[0m
[32m  eval_precision = 0.0732[0m
[32m  eval_recall = 0.0418[0m
[32m  ********************[0m
[32m  Best f1:0.0383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.42296:  64%|██████▍   | 18/28 [01:06<00:52,  5.26s/it]epoch 0 loss 4.36017:  64%|██████▍   | 18/28 [01:06<00:52,  5.26s/it]epoch 0 loss 4.36017:  68%|██████▊   | 19/28 [01:06<00:34,  3.81s/it]epoch 0 loss 4.30137:  68%|██████▊   | 19/28 [01:07<00:34,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2561[0m
[32m  eval_f1 = 0.038[0m
[32m  eval_mcc = 0.2027[0m
[32m  eval_precision = 0.0781[0m
[32m  eval_recall = 0.0435[0m
[32m  ********************[0m
[32m  Best MCC:0.2027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.30137:  71%|███████▏  | 20/28 [01:14<00:40,  5.00s/it]epoch 0 loss 4.2423:  71%|███████▏  | 20/28 [01:15<00:40,  5.00s/it] epoch 0 loss 4.2423:  75%|███████▌  | 21/28 [01:15<00:25,  3.63s/it]epoch 0 loss 4.18447:  75%|███████▌  | 21/28 [01:15<00:25,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3039[0m
[32m  eval_f1 = 0.0415[0m
[32m  eval_mcc = 0.2476[0m
[32m  eval_precision = 0.0609[0m
[32m  eval_recall = 0.0476[0m
[32m  ********************[0m
[32m  Best f1:0.0415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.18447:  79%|███████▊  | 22/28 [01:21<00:27,  4.53s/it]epoch 0 loss 4.12876:  79%|███████▊  | 22/28 [01:22<00:27,  4.53s/it]epoch 0 loss 4.12876:  82%|████████▏ | 23/28 [01:22<00:16,  3.30s/it]epoch 0 loss 4.07903:  82%|████████▏ | 23/28 [01:22<00:16,  3.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.331[0m
[32m  eval_f1 = 0.0617[0m
[32m  eval_mcc = 0.2871[0m
[32m  eval_precision = 0.0879[0m
[32m  eval_recall = 0.0637[0m
[32m  ********************[0m
[32m  Best f1:0.0617[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.07903:  86%|████████▌ | 24/28 [01:30<00:19,  4.81s/it]epoch 0 loss 4.02563:  86%|████████▌ | 24/28 [01:30<00:19,  4.81s/it]epoch 0 loss 4.02563:  89%|████████▉ | 25/28 [01:30<00:10,  3.49s/it]epoch 0 loss 3.97893:  89%|████████▉ | 25/28 [01:31<00:10,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.367[0m
[32m  eval_f1 = 0.0905[0m
[32m  eval_mcc = 0.3368[0m
[32m  eval_precision = 0.1712[0m
[32m  eval_recall = 0.0847[0m
[32m  ********************[0m
[32m  Best f1:0.0905[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.97893:  93%|█████████▎| 26/28 [01:36<00:08,  4.26s/it]epoch 0 loss 3.92902:  93%|█████████▎| 26/28 [01:37<00:08,  4.26s/it]epoch 0 loss 3.92902:  96%|█████████▋| 27/28 [01:37<00:03,  3.11s/it]epoch 0 loss 3.88095:  96%|█████████▋| 27/28 [01:37<00:03,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4227[0m
[32m  eval_f1 = 0.1309[0m
[32m  eval_mcc = 0.4002[0m
[32m  eval_precision = 0.1995[0m
[32m  eval_recall = 0.1227[0m
[32m  ********************[0m
[32m  Best f1:0.1309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.88095: 100%|██████████| 28/28 [01:43<00:00,  3.95s/it]epoch 0 loss 3.88095: 100%|██████████| 28/28 [01:43<00:00,  3.69s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.65622:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.65622:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 1 loss 2.559:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4691[0m
[32m  eval_f1 = 0.1503[0m
[32m  eval_mcc = 0.4455[0m
[32m  eval_precision = 0.2035[0m
[32m  eval_recall = 0.1439[0m
[32m  ********************[0m
[32m  Best f1:0.1503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.559:   7%|▋         | 2/28 [00:06<01:38,  3.77s/it]epoch 1 loss 2.5108:   7%|▋         | 2/28 [00:06<01:38,  3.77s/it]epoch 1 loss 2.5108:  11%|█         | 3/28 [00:06<00:56,  2.24s/it]epoch 1 loss 2.471:  11%|█         | 3/28 [00:07<00:56,  2.24s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5149[0m
[32m  eval_f1 = 0.1744[0m
[32m  eval_mcc = 0.4871[0m
[32m  eval_precision = 0.2302[0m
[32m  eval_recall = 0.1667[0m
[32m  ********************[0m
[32m  Best f1:0.1744[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4871[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.471:  14%|█▍        | 4/28 [00:13<01:30,  3.76s/it]epoch 1 loss 2.4269:  14%|█▍        | 4/28 [00:13<01:30,  3.76s/it]epoch 1 loss 2.4269:  18%|█▊        | 5/28 [00:13<00:58,  2.56s/it]epoch 1 loss 2.36707:  18%|█▊        | 5/28 [00:13<00:58,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5476[0m
[32m  eval_f1 = 0.1882[0m
[32m  eval_mcc = 0.5189[0m
[32m  eval_precision = 0.2375[0m
[32m  eval_recall = 0.1831[0m
[32m  ********************[0m
[32m  Best f1:0.1882[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.36707:  21%|██▏       | 6/28 [00:19<01:21,  3.72s/it]epoch 1 loss 2.33476:  21%|██▏       | 6/28 [00:19<01:21,  3.72s/it]epoch 1 loss 2.33476:  25%|██▌       | 7/28 [00:19<00:55,  2.64s/it]epoch 1 loss 2.29098:  25%|██▌       | 7/28 [00:20<00:55,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5623[0m
[32m  eval_f1 = 0.1941[0m
[32m  eval_mcc = 0.5346[0m
[32m  eval_precision = 0.2341[0m
[32m  eval_recall = 0.1873[0m
[32m  ********************[0m
[32m  Best f1:0.1941[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29098:  29%|██▊       | 8/28 [00:26<01:15,  3.77s/it]epoch 1 loss 2.26608:  29%|██▊       | 8/28 [00:26<01:15,  3.77s/it]epoch 1 loss 2.26608:  32%|███▏      | 9/28 [00:26<00:51,  2.72s/it]epoch 1 loss 2.22086:  32%|███▏      | 9/28 [00:26<00:51,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5688[0m
[32m  eval_f1 = 0.1977[0m
[32m  eval_mcc = 0.542[0m
[32m  eval_precision = 0.2389[0m
[32m  eval_recall = 0.1888[0m
[32m  ********************[0m
[32m  Best f1:0.1977[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.22086:  36%|███▌      | 10/28 [00:36<01:31,  5.08s/it]epoch 1 loss 2.19346:  36%|███▌      | 10/28 [00:37<01:31,  5.08s/it]epoch 1 loss 2.19346:  39%|███▉      | 11/28 [00:37<01:02,  3.66s/it]epoch 1 loss 2.16407:  39%|███▉      | 11/28 [00:37<01:02,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5741[0m
[32m  eval_f1 = 0.2003[0m
[32m  eval_mcc = 0.5503[0m
[32m  eval_precision = 0.2531[0m
[32m  eval_recall = 0.1895[0m
[32m  ********************[0m
[32m  Best f1:0.2003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16407:  43%|████▎     | 12/28 [00:47<01:30,  5.63s/it]epoch 1 loss 2.13771:  43%|████▎     | 12/28 [00:47<01:30,  5.63s/it]epoch 1 loss 2.13771:  46%|████▋     | 13/28 [00:47<01:00,  4.05s/it]epoch 1 loss 2.11743:  46%|████▋     | 13/28 [00:48<01:00,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5786[0m
[32m  eval_f1 = 0.2113[0m
[32m  eval_mcc = 0.5585[0m
[32m  eval_precision = 0.2912[0m
[32m  eval_recall = 0.197[0m
[32m  ********************[0m
[32m  Best f1:0.2113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11743:  50%|█████     | 14/28 [00:56<01:18,  5.58s/it]epoch 1 loss 2.0998:  50%|█████     | 14/28 [00:57<01:18,  5.58s/it] epoch 1 loss 2.0998:  54%|█████▎    | 15/28 [00:57<00:52,  4.02s/it]epoch 1 loss 2.07796:  54%|█████▎    | 15/28 [00:57<00:52,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5822[0m
[32m  eval_f1 = 0.2169[0m
[32m  eval_mcc = 0.5623[0m
[32m  eval_precision = 0.2856[0m
[32m  eval_recall = 0.2033[0m
[32m  ********************[0m
[32m  Best f1:0.2169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07796:  57%|█████▋    | 16/28 [01:06<01:08,  5.68s/it]epoch 1 loss 2.05456:  57%|█████▋    | 16/28 [01:07<01:08,  5.68s/it]epoch 1 loss 2.05456:  61%|██████    | 17/28 [01:07<00:45,  4.10s/it]epoch 1 loss 2.03687:  61%|██████    | 17/28 [01:07<00:45,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5853[0m
[32m  eval_f1 = 0.2252[0m
[32m  eval_mcc = 0.5647[0m
[32m  eval_precision = 0.3167[0m
[32m  eval_recall = 0.2118[0m
[32m  ********************[0m
[32m  Best f1:0.2252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03687:  64%|██████▍   | 18/28 [01:15<00:52,  5.26s/it]epoch 1 loss 2.01541:  64%|██████▍   | 18/28 [01:15<00:52,  5.26s/it]epoch 1 loss 2.01541:  68%|██████▊   | 19/28 [01:15<00:34,  3.80s/it]epoch 1 loss 2.00633:  68%|██████▊   | 19/28 [01:16<00:34,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5891[0m
[32m  eval_f1 = 0.2337[0m
[32m  eval_mcc = 0.567[0m
[32m  eval_precision = 0.3245[0m
[32m  eval_recall = 0.2217[0m
[32m  ********************[0m
[32m  Best f1:0.2337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00633:  71%|███████▏  | 20/28 [01:25<00:44,  5.60s/it]epoch 1 loss 1.99496:  71%|███████▏  | 20/28 [01:25<00:44,  5.60s/it]epoch 1 loss 1.99496:  75%|███████▌  | 21/28 [01:25<00:28,  4.05s/it]epoch 1 loss 1.98852:  75%|███████▌  | 21/28 [01:26<00:28,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5956[0m
[32m  eval_f1 = 0.242[0m
[32m  eval_mcc = 0.5727[0m
[32m  eval_precision = 0.3224[0m
[32m  eval_recall = 0.2282[0m
[32m  ********************[0m
[32m  Best f1:0.242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98852:  79%|███████▊  | 22/28 [01:33<00:31,  5.25s/it]epoch 1 loss 1.98029:  79%|███████▊  | 22/28 [01:34<00:31,  5.25s/it]epoch 1 loss 1.98029:  82%|████████▏ | 23/28 [01:34<00:19,  3.80s/it]epoch 1 loss 1.9717:  82%|████████▏ | 23/28 [01:34<00:19,  3.80s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.64it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.605[0m
[32m  eval_f1 = 0.2547[0m
[32m  eval_mcc = 0.5815[0m
[32m  eval_precision = 0.3523[0m
[32m  eval_recall = 0.2391[0m
[32m  ********************[0m
[32m  Best f1:0.2547[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5815[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9717:  86%|████████▌ | 24/28 [01:43<00:22,  5.52s/it]epoch 1 loss 1.95718:  86%|████████▌ | 24/28 [01:44<00:22,  5.52s/it]epoch 1 loss 1.95718:  89%|████████▉ | 25/28 [01:44<00:11,  3.99s/it]epoch 1 loss 1.93844:  89%|████████▉ | 25/28 [01:44<00:11,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6055[0m
[32m  eval_f1 = 0.258[0m
[32m  eval_mcc = 0.582[0m
[32m  eval_precision = 0.3602[0m
[32m  eval_recall = 0.2418[0m
[32m  ********************[0m
[32m  Best f1:0.258[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.582[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93844:  93%|█████████▎| 26/28 [01:53<00:11,  5.68s/it]epoch 1 loss 1.92423:  93%|█████████▎| 26/28 [01:54<00:11,  5.68s/it]epoch 1 loss 1.92423:  96%|█████████▋| 27/28 [01:54<00:04,  4.10s/it]epoch 1 loss 1.91018:  96%|█████████▋| 27/28 [01:54<00:04,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.609[0m
[32m  eval_f1 = 0.2659[0m
[32m  eval_mcc = 0.5861[0m
[32m  eval_precision = 0.3818[0m
[32m  eval_recall = 0.2465[0m
[32m  ********************[0m
[32m  Best f1:0.2659[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5861[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.91018: 100%|██████████| 28/28 [02:05<00:00,  6.22s/it]epoch 1 loss 1.91018: 100%|██████████| 28/28 [02:05<00:00,  4.48s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.54272:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.54272:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 2 loss 1.51976:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6136[0m
[32m  eval_f1 = 0.2786[0m
[32m  eval_mcc = 0.5913[0m
[32m  eval_precision = 0.4013[0m
[32m  eval_recall = 0.2582[0m
[32m  ********************[0m
[32m  Best f1:0.2786[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5913[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51976:   7%|▋         | 2/28 [00:06<01:38,  3.77s/it]epoch 2 loss 1.55044:   7%|▋         | 2/28 [00:06<01:38,  3.77s/it]epoch 2 loss 1.55044:  11%|█         | 3/28 [00:06<00:56,  2.25s/it]epoch 2 loss 1.53813:  11%|█         | 3/28 [00:07<00:56,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6161[0m
[32m  eval_f1 = 0.2845[0m
[32m  eval_mcc = 0.5947[0m
[32m  eval_precision = 0.3923[0m
[32m  eval_recall = 0.2633[0m
[32m  ********************[0m
[32m  Best f1:0.2845[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5947[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53813:  14%|█▍        | 4/28 [00:14<01:45,  4.39s/it]epoch 2 loss 1.54095:  14%|█▍        | 4/28 [00:15<01:45,  4.39s/it]epoch 2 loss 1.54095:  18%|█▊        | 5/28 [00:15<01:08,  2.96s/it]epoch 2 loss 1.51755:  18%|█▊        | 5/28 [00:15<01:08,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6193[0m
[32m  eval_f1 = 0.2899[0m
[32m  eval_mcc = 0.5988[0m
[32m  eval_precision = 0.3938[0m
[32m  eval_recall = 0.2673[0m
[32m  ********************[0m
[32m  Best f1:0.2899[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5988[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51755:  21%|██▏       | 6/28 [00:21<01:34,  4.30s/it]epoch 2 loss 1.51646:  21%|██▏       | 6/28 [00:22<01:34,  4.30s/it]epoch 2 loss 1.51646:  25%|██▌       | 7/28 [00:22<01:03,  3.04s/it]epoch 2 loss 1.52298:  25%|██▌       | 7/28 [00:22<01:03,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6235[0m
[32m  eval_f1 = 0.2942[0m
[32m  eval_mcc = 0.6029[0m
[32m  eval_precision = 0.3927[0m
[32m  eval_recall = 0.2715[0m
[32m  ********************[0m
[32m  Best f1:0.2942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52298:  29%|██▊       | 8/28 [00:29<01:28,  4.44s/it]epoch 2 loss 1.50986:  29%|██▊       | 8/28 [00:30<01:28,  4.44s/it]epoch 2 loss 1.50986:  32%|███▏      | 9/28 [00:30<01:00,  3.18s/it]epoch 2 loss 1.49633:  32%|███▏      | 9/28 [00:30<01:00,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6233[0m
[32m  eval_f1 = 0.2928[0m
[32m  eval_mcc = 0.6021[0m
[32m  eval_precision = 0.3909[0m
[32m  eval_recall = 0.271[0m

epoch 2 loss 1.49633:  36%|███▌      | 10/28 [00:34<01:00,  3.38s/it]epoch 2 loss 1.49566:  36%|███▌      | 10/28 [00:34<01:00,  3.38s/it]epoch 2 loss 1.49566:  39%|███▉      | 11/28 [00:34<00:41,  2.47s/it]epoch 2 loss 1.49671:  39%|███▉      | 11/28 [00:34<00:41,  2.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6251[0m
[32m  eval_f1 = 0.2935[0m
[32m  eval_mcc = 0.6036[0m
[32m  eval_precision = 0.3897[0m
[32m  eval_recall = 0.2717[0m
[32m  ********************[0m
[32m  Best MCC:0.6036[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49671:  43%|████▎     | 12/28 [00:39<00:51,  3.23s/it]epoch 2 loss 1.49957:  43%|████▎     | 12/28 [00:39<00:51,  3.23s/it]epoch 2 loss 1.49957:  46%|████▋     | 13/28 [00:39<00:35,  2.37s/it]epoch 2 loss 1.49022:  46%|████▋     | 13/28 [00:40<00:35,  2.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6282[0m
[32m  eval_f1 = 0.2951[0m
[32m  eval_mcc = 0.6064[0m
[32m  eval_precision = 0.3964[0m
[32m  eval_recall = 0.2751[0m
[32m  ********************[0m
[32m  Best f1:0.2951[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49022:  50%|█████     | 14/28 [00:45<00:48,  3.50s/it]epoch 2 loss 1.48705:  50%|█████     | 14/28 [00:46<00:48,  3.50s/it]epoch 2 loss 1.48705:  54%|█████▎    | 15/28 [00:46<00:33,  2.57s/it]epoch 2 loss 1.48701:  54%|█████▎    | 15/28 [00:46<00:33,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6304[0m
[32m  eval_f1 = 0.297[0m
[32m  eval_mcc = 0.6087[0m
[32m  eval_precision = 0.3828[0m
[32m  eval_recall = 0.2788[0m
[32m  ********************[0m
[32m  Best f1:0.297[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48701:  57%|█████▋    | 16/28 [00:52<00:42,  3.50s/it]epoch 2 loss 1.49264:  57%|█████▋    | 16/28 [00:52<00:42,  3.50s/it]epoch 2 loss 1.49264:  61%|██████    | 17/28 [00:52<00:28,  2.58s/it]epoch 2 loss 1.49984:  61%|██████    | 17/28 [00:52<00:28,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6324[0m
[32m  eval_f1 = 0.3091[0m
[32m  eval_mcc = 0.6112[0m
[32m  eval_precision = 0.4013[0m
[32m  eval_recall = 0.2894[0m
[32m  ********************[0m
[32m  Best f1:0.3091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6112[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49984:  64%|██████▍   | 18/28 [00:58<00:36,  3.66s/it]epoch 2 loss 1.49635:  64%|██████▍   | 18/28 [00:59<00:36,  3.66s/it]epoch 2 loss 1.49635:  68%|██████▊   | 19/28 [00:59<00:24,  2.68s/it]epoch 2 loss 1.49702:  68%|██████▊   | 19/28 [00:59<00:24,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6349[0m
[32m  eval_f1 = 0.3176[0m
[32m  eval_mcc = 0.6145[0m
[32m  eval_precision = 0.3977[0m
[32m  eval_recall = 0.2976[0m
[32m  ********************[0m
[32m  Best f1:0.3176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49702:  71%|███████▏  | 20/28 [01:05<00:29,  3.66s/it]epoch 2 loss 1.4932:  71%|███████▏  | 20/28 [01:05<00:29,  3.66s/it] epoch 2 loss 1.4932:  75%|███████▌  | 21/28 [01:05<00:18,  2.69s/it]epoch 2 loss 1.48962:  75%|███████▌  | 21/28 [01:05<00:18,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6364[0m
[32m  eval_f1 = 0.3184[0m
[32m  eval_mcc = 0.6172[0m
[32m  eval_precision = 0.4002[0m
[32m  eval_recall = 0.2973[0m
[32m  ********************[0m
[32m  Best f1:0.3184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48962:  79%|███████▊  | 22/28 [01:11<00:22,  3.72s/it]epoch 2 loss 1.48631:  79%|███████▊  | 22/28 [01:11<00:22,  3.72s/it]epoch 2 loss 1.48631:  82%|████████▏ | 23/28 [01:11<00:13,  2.73s/it]epoch 2 loss 1.48434:  82%|████████▏ | 23/28 [01:12<00:13,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6364[0m
[32m  eval_f1 = 0.3184[0m
[32m  eval_mcc = 0.6176[0m
[32m  eval_precision = 0.4098[0m
[32m  eval_recall = 0.2968[0m
[32m  ********************[0m
[32m  Best MCC:0.6176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.48434:  86%|████████▌ | 24/28 [01:16<00:13,  3.41s/it]epoch 2 loss 1.48388:  86%|████████▌ | 24/28 [01:17<00:13,  3.41s/it]epoch 2 loss 1.48388:  89%|████████▉ | 25/28 [01:17<00:07,  2.50s/it]epoch 2 loss 1.48823:  89%|████████▉ | 25/28 [01:17<00:07,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.636[0m
[32m  eval_f1 = 0.3178[0m
[32m  eval_mcc = 0.6169[0m
[32m  eval_precision = 0.421[0m
[32m  eval_recall = 0.2962[0m

epoch 2 loss 1.48823:  93%|█████████▎| 26/28 [01:21<00:05,  2.89s/it]epoch 2 loss 1.48563:  93%|█████████▎| 26/28 [01:21<00:05,  2.89s/it]epoch 2 loss 1.48563:  96%|█████████▋| 27/28 [01:21<00:02,  2.14s/it]epoch 2 loss 1.47887:  96%|█████████▋| 27/28 [01:21<00:02,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6369[0m
[32m  eval_f1 = 0.318[0m
[32m  eval_mcc = 0.6179[0m
[32m  eval_precision = 0.4215[0m
[32m  eval_recall = 0.2962[0m
[32m  ********************[0m
[32m  Best MCC:0.6179[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47887: 100%|██████████| 28/28 [01:26<00:00,  2.93s/it]epoch 2 loss 1.47887: 100%|██████████| 28/28 [01:26<00:00,  3.08s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.33845:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.33845:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s]epoch 3 loss 1.34888:   4%|▎         | 1/28 [00:00<00:10,  2.48it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6408[0m
[32m  eval_f1 = 0.3225[0m
[32m  eval_mcc = 0.6215[0m
[32m  eval_precision = 0.412[0m
[32m  eval_recall = 0.2996[0m
[32m  ********************[0m
[32m  Best f1:0.3225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34888:   7%|▋         | 2/28 [00:06<01:37,  3.75s/it]epoch 3 loss 1.32743:   7%|▋         | 2/28 [00:06<01:37,  3.75s/it]epoch 3 loss 1.32743:  11%|█         | 3/28 [00:06<00:55,  2.23s/it]epoch 3 loss 1.32091:  11%|█         | 3/28 [00:07<00:55,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.3267[0m
[32m  eval_mcc = 0.623[0m
[32m  eval_precision = 0.4211[0m
[32m  eval_recall = 0.3027[0m
[32m  ********************[0m
[32m  Best f1:0.3267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32091:  14%|█▍        | 4/28 [00:13<01:30,  3.79s/it]epoch 3 loss 1.33125:  14%|█▍        | 4/28 [00:13<01:30,  3.79s/it]epoch 3 loss 1.33125:  18%|█▊        | 5/28 [00:13<00:59,  2.57s/it]epoch 3 loss 1.35666:  18%|█▊        | 5/28 [00:13<00:59,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6444[0m
[32m  eval_f1 = 0.3282[0m
[32m  eval_mcc = 0.6245[0m
[32m  eval_precision = 0.4187[0m
[32m  eval_recall = 0.3043[0m
[32m  ********************[0m
[32m  Best f1:0.3282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35666:  21%|██▏       | 6/28 [00:19<01:23,  3.77s/it]epoch 3 loss 1.39123:  21%|██▏       | 6/28 [00:20<01:23,  3.77s/it]epoch 3 loss 1.39123:  25%|██▌       | 7/28 [00:20<00:56,  2.68s/it]epoch 3 loss 1.38938:  25%|██▌       | 7/28 [00:20<00:56,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6454[0m
[32m  eval_f1 = 0.3302[0m
[32m  eval_mcc = 0.6254[0m
[32m  eval_precision = 0.427[0m
[32m  eval_recall = 0.3063[0m
[32m  ********************[0m
[32m  Best f1:0.3302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38938:  29%|██▊       | 8/28 [00:26<01:14,  3.74s/it]epoch 3 loss 1.38666:  29%|██▊       | 8/28 [00:26<01:14,  3.74s/it]epoch 3 loss 1.38666:  32%|███▏      | 9/28 [00:26<00:51,  2.70s/it]epoch 3 loss 1.37774:  32%|███▏      | 9/28 [00:26<00:51,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6467[0m
[32m  eval_f1 = 0.3347[0m
[32m  eval_mcc = 0.6265[0m
[32m  eval_precision = 0.4471[0m
[32m  eval_recall = 0.3097[0m
[32m  ********************[0m
[32m  Best f1:0.3347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37774:  36%|███▌      | 10/28 [00:32<01:07,  3.74s/it]epoch 3 loss 1.38488:  36%|███▌      | 10/28 [00:32<01:07,  3.74s/it]epoch 3 loss 1.38488:  39%|███▉      | 11/28 [00:32<00:46,  2.72s/it]epoch 3 loss 1.39568:  39%|███▉      | 11/28 [00:33<00:46,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6465[0m
[32m  eval_f1 = 0.3355[0m
[32m  eval_mcc = 0.6263[0m
[32m  eval_precision = 0.4577[0m
[32m  eval_recall = 0.3102[0m
[32m  ********************[0m
[32m  Best f1:0.3355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.39568:  43%|████▎     | 12/28 [00:37<00:54,  3.41s/it]epoch 3 loss 1.39041:  43%|████▎     | 12/28 [00:38<00:54,  3.41s/it]epoch 3 loss 1.39041:  46%|████▋     | 13/28 [00:38<00:37,  2.50s/it]epoch 3 loss 1.38149:  46%|████▋     | 13/28 [00:38<00:37,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6457[0m
[32m  eval_f1 = 0.3356[0m
[32m  eval_mcc = 0.6259[0m
[32m  eval_precision = 0.4562[0m
[32m  eval_recall = 0.3101[0m
[32m  ********************[0m
[32m  Best f1:0.3356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.38149:  50%|█████     | 14/28 [00:44<00:50,  3.64s/it]epoch 3 loss 1.38199:  50%|█████     | 14/28 [00:45<00:50,  3.64s/it]epoch 3 loss 1.38199:  54%|█████▎    | 15/28 [00:45<00:34,  2.67s/it]epoch 3 loss 1.37685:  54%|█████▎    | 15/28 [00:45<00:34,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6442[0m
[32m  eval_f1 = 0.3351[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.459[0m
[32m  eval_recall = 0.3086[0m

epoch 3 loss 1.37685:  57%|█████▋    | 16/28 [00:48<00:36,  3.01s/it]epoch 3 loss 1.37549:  57%|█████▋    | 16/28 [00:49<00:36,  3.01s/it]epoch 3 loss 1.37549:  61%|██████    | 17/28 [00:49<00:24,  2.23s/it]epoch 3 loss 1.3777:  61%|██████    | 17/28 [00:49<00:24,  2.23s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6452[0m
[32m  eval_f1 = 0.3345[0m
[32m  eval_mcc = 0.6259[0m
[32m  eval_precision = 0.4591[0m
[32m  eval_recall = 0.3082[0m

epoch 3 loss 1.3777:  64%|██████▍   | 18/28 [00:53<00:26,  2.70s/it]epoch 3 loss 1.37572:  64%|██████▍   | 18/28 [00:53<00:26,  2.70s/it]epoch 3 loss 1.37572:  68%|██████▊   | 19/28 [00:53<00:18,  2.01s/it]epoch 3 loss 1.37284:  68%|██████▊   | 19/28 [00:53<00:18,  2.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.73it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6465[0m
[32m  eval_f1 = 0.3353[0m
[32m  eval_mcc = 0.6275[0m
[32m  eval_precision = 0.4617[0m
[32m  eval_recall = 0.3093[0m
[32m  ********************[0m
[32m  Best MCC:0.6275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37284:  71%|███████▏  | 20/28 [00:58<00:23,  2.91s/it]epoch 3 loss 1.36947:  71%|███████▏  | 20/28 [00:58<00:23,  2.91s/it]epoch 3 loss 1.36947:  75%|███████▌  | 21/28 [00:58<00:15,  2.16s/it]epoch 3 loss 1.37559:  75%|███████▌  | 21/28 [00:59<00:15,  2.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6467[0m
[32m  eval_f1 = 0.3353[0m
[32m  eval_mcc = 0.6281[0m
[32m  eval_precision = 0.4628[0m
[32m  eval_recall = 0.3096[0m
[32m  ********************[0m
[32m  Best MCC:0.6281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37559:  79%|███████▊  | 22/28 [01:03<00:18,  3.01s/it]epoch 3 loss 1.3775:  79%|███████▊  | 22/28 [01:04<00:18,  3.01s/it] epoch 3 loss 1.3775:  82%|████████▏ | 23/28 [01:04<00:11,  2.23s/it]epoch 3 loss 1.37964:  82%|████████▏ | 23/28 [01:04<00:11,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6486[0m
[32m  eval_f1 = 0.3361[0m
[32m  eval_mcc = 0.6302[0m
[32m  eval_precision = 0.4621[0m
[32m  eval_recall = 0.311[0m
[32m  ********************[0m
[32m  Best f1:0.3361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6302[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37964:  86%|████████▌ | 24/28 [01:10<00:13,  3.40s/it]epoch 3 loss 1.37913:  86%|████████▌ | 24/28 [01:10<00:13,  3.40s/it]epoch 3 loss 1.37913:  89%|████████▉ | 25/28 [01:10<00:07,  2.51s/it]epoch 3 loss 1.38101:  89%|████████▉ | 25/28 [01:11<00:07,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.70it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.3375[0m
[32m  eval_mcc = 0.6324[0m
[32m  eval_precision = 0.4605[0m
[32m  eval_recall = 0.313[0m
[32m  ********************[0m
[32m  Best f1:0.3375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.38101:  93%|█████████▎| 26/28 [01:16<00:06,  3.43s/it]epoch 3 loss 1.37775:  93%|█████████▎| 26/28 [01:16<00:06,  3.43s/it]epoch 3 loss 1.37775:  96%|█████████▋| 27/28 [01:16<00:02,  2.53s/it]epoch 3 loss 1.37071:  96%|█████████▋| 27/28 [01:17<00:02,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.73it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6524[0m
[32m  eval_f1 = 0.3397[0m
[32m  eval_mcc = 0.6335[0m
[32m  eval_precision = 0.4601[0m
[32m  eval_recall = 0.3149[0m
[32m  ********************[0m
[32m  Best f1:0.3397[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37071: 100%|██████████| 28/28 [01:22<00:00,  3.55s/it]epoch 3 loss 1.37071: 100%|██████████| 28/28 [01:22<00:00,  2.96s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.46482:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.46482:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 4 loss 1.38814:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3412[0m
[32m  eval_mcc = 0.6337[0m
[32m  eval_precision = 0.4483[0m
[32m  eval_recall = 0.3156[0m
[32m  ********************[0m
[32m  Best f1:0.3412[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38814:   7%|▋         | 2/28 [00:06<01:37,  3.75s/it]epoch 4 loss 1.39544:   7%|▋         | 2/28 [00:06<01:37,  3.75s/it]epoch 4 loss 1.39544:  11%|█         | 3/28 [00:06<00:55,  2.23s/it]epoch 4 loss 1.39233:  11%|█         | 3/28 [00:07<00:55,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6531[0m
[32m  eval_f1 = 0.3415[0m
[32m  eval_mcc = 0.6335[0m
[32m  eval_precision = 0.4483[0m
[32m  eval_recall = 0.3155[0m
[32m  ********************[0m
[32m  Best f1:0.3415[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.39233:  14%|█▍        | 4/28 [00:11<01:19,  3.31s/it]epoch 4 loss 1.35302:  14%|█▍        | 4/28 [00:12<01:19,  3.31s/it]epoch 4 loss 1.35302:  18%|█▊        | 5/28 [00:12<00:52,  2.26s/it]epoch 4 loss 1.343:  18%|█▊        | 5/28 [00:12<00:52,  2.26s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6522[0m
[32m  eval_f1 = 0.3414[0m
[32m  eval_mcc = 0.6326[0m
[32m  eval_precision = 0.4495[0m
[32m  eval_recall = 0.315[0m

epoch 4 loss 1.343:  21%|██▏       | 6/28 [00:16<01:01,  2.79s/it]epoch 4 loss 1.3576:  21%|██▏       | 6/28 [00:16<01:01,  2.79s/it]epoch 4 loss 1.3576:  25%|██▌       | 7/28 [00:16<00:42,  2.01s/it]epoch 4 loss 1.35055:  25%|██▌       | 7/28 [00:16<00:42,  2.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6516[0m
[32m  eval_f1 = 0.3411[0m
[32m  eval_mcc = 0.632[0m
[32m  eval_precision = 0.4607[0m
[32m  eval_recall = 0.3147[0m

epoch 4 loss 1.35055:  29%|██▊       | 8/28 [00:20<00:51,  2.58s/it]epoch 4 loss 1.34758:  29%|██▊       | 8/28 [00:20<00:51,  2.58s/it]epoch 4 loss 1.34758:  32%|███▏      | 9/28 [00:20<00:36,  1.90s/it]epoch 4 loss 1.34989:  32%|███▏      | 9/28 [00:21<00:36,  1.90s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6509[0m
[32m  eval_f1 = 0.3409[0m
[32m  eval_mcc = 0.6313[0m
[32m  eval_precision = 0.4604[0m
[32m  eval_recall = 0.3146[0m

epoch 4 loss 1.34989:  36%|███▌      | 10/28 [00:24<00:44,  2.49s/it]epoch 4 loss 1.36032:  36%|███▌      | 10/28 [00:24<00:44,  2.49s/it]epoch 4 loss 1.36032:  39%|███▉      | 11/28 [00:24<00:31,  1.85s/it]epoch 4 loss 1.35478:  39%|███▉      | 11/28 [00:25<00:31,  1.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6511[0m
[32m  eval_f1 = 0.3414[0m
[32m  eval_mcc = 0.6316[0m
[32m  eval_precision = 0.4609[0m
[32m  eval_recall = 0.3148[0m

epoch 4 loss 1.35478:  43%|████▎     | 12/28 [00:28<00:39,  2.44s/it]epoch 4 loss 1.35292:  43%|████▎     | 12/28 [00:29<00:39,  2.44s/it]epoch 4 loss 1.35292:  46%|████▋     | 13/28 [00:29<00:27,  1.83s/it]epoch 4 loss 1.34484:  46%|████▋     | 13/28 [00:29<00:27,  1.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6514[0m
[32m  eval_f1 = 0.3417[0m
[32m  eval_mcc = 0.632[0m
[32m  eval_precision = 0.4607[0m
[32m  eval_recall = 0.3152[0m
[32m  ********************[0m
[32m  Best f1:0.3417[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.34484:  50%|█████     | 14/28 [00:34<00:38,  2.78s/it]epoch 4 loss 1.34423:  50%|█████     | 14/28 [00:34<00:38,  2.78s/it]epoch 4 loss 1.34423:  54%|█████▎    | 15/28 [00:34<00:26,  2.07s/it]epoch 4 loss 1.34634:  54%|█████▎    | 15/28 [00:34<00:26,  2.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6519[0m
[32m  eval_f1 = 0.3423[0m
[32m  eval_mcc = 0.6325[0m
[32m  eval_precision = 0.4606[0m
[32m  eval_recall = 0.3158[0m
[32m  ********************[0m
[32m  Best f1:0.3423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.34634:  57%|█████▋    | 16/28 [00:39<00:34,  2.85s/it]epoch 4 loss 1.34495:  57%|█████▋    | 16/28 [00:39<00:34,  2.85s/it]epoch 4 loss 1.34495:  61%|██████    | 17/28 [00:39<00:23,  2.12s/it]epoch 4 loss 1.33814:  61%|██████    | 17/28 [00:39<00:23,  2.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3429[0m
[32m  eval_mcc = 0.6331[0m
[32m  eval_precision = 0.4604[0m
[32m  eval_recall = 0.3165[0m
[32m  ********************[0m
[32m  Best f1:0.3429[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.33814:  64%|██████▍   | 18/28 [00:44<00:29,  2.93s/it]epoch 4 loss 1.33755:  64%|██████▍   | 18/28 [00:44<00:29,  2.93s/it]epoch 4 loss 1.33755:  68%|██████▊   | 19/28 [00:44<00:19,  2.17s/it]epoch 4 loss 1.34147:  68%|██████▊   | 19/28 [00:45<00:19,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3429[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.46[0m
[32m  eval_recall = 0.3166[0m

epoch 4 loss 1.34147:  71%|███████▏  | 20/28 [00:48<00:21,  2.66s/it]epoch 4 loss 1.33844:  71%|███████▏  | 20/28 [00:49<00:21,  2.66s/it]epoch 4 loss 1.33844:  75%|███████▌  | 21/28 [00:49<00:13,  1.98s/it]epoch 4 loss 1.34028:  75%|███████▌  | 21/28 [00:49<00:13,  1.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3431[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.4702[0m
[32m  eval_recall = 0.3168[0m
[32m  ********************[0m
[32m  Best f1:0.3431[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.34028:  79%|███████▊  | 22/28 [00:53<00:17,  2.88s/it]epoch 4 loss 1.33871:  79%|███████▊  | 22/28 [00:54<00:17,  2.88s/it]epoch 4 loss 1.33871:  82%|████████▏ | 23/28 [00:54<00:10,  2.14s/it]epoch 4 loss 1.3407:  82%|████████▏ | 23/28 [00:54<00:10,  2.14s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6526[0m
[32m  eval_f1 = 0.3427[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4692[0m
[32m  eval_recall = 0.3166[0m

epoch 4 loss 1.3407:  86%|████████▌ | 24/28 [00:58<00:10,  2.64s/it]epoch 4 loss 1.33859:  86%|████████▌ | 24/28 [00:58<00:10,  2.64s/it]epoch 4 loss 1.33859:  89%|████████▉ | 25/28 [00:58<00:05,  1.97s/it]epoch 4 loss 1.33868:  89%|████████▉ | 25/28 [00:58<00:05,  1.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3428[0m
[32m  eval_mcc = 0.6337[0m
[32m  eval_precision = 0.4693[0m
[32m  eval_recall = 0.3167[0m
[32m  ********************[0m
[32m  Best MCC:0.6337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_9/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.33868:  93%|█████████▎| 26/28 [01:03<00:05,  2.87s/it]epoch 4 loss 1.33869:  93%|█████████▎| 26/28 [01:03<00:05,  2.87s/it]epoch 4 loss 1.33869:  96%|█████████▋| 27/28 [01:03<00:02,  2.13s/it]epoch 4 loss 1.33432:  96%|█████████▋| 27/28 [01:04<00:02,  2.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3426[0m
[32m  eval_mcc = 0.6337[0m
[32m  eval_precision = 0.4691[0m
[32m  eval_recall = 0.3166[0m

epoch 4 loss 1.33432: 100%|██████████| 28/28 [01:07<00:00,  2.57s/it]epoch 4 loss 1.33432: 100%|██████████| 28/28 [01:07<00:00,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.74it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3431[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.4702[0m
[32m  eval_recall = 0.3168[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.72it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6363[0m
[32m  eval_f1 = 0.306[0m
[32m  eval_mcc = 0.6172[0m
[32m  eval_precision = 0.406[0m
[32m  eval_recall = 0.2826[0m

