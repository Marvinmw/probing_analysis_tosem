[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=5, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/1/layer_5', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 4.99136:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 4.99136:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 4.99638:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0073[0m
[32m  eval_f1 = 0.0018[0m
[32m  eval_mcc = -0.0[0m
[32m  eval_precision = 0.0084[0m
[32m  eval_recall = 0.0142[0m
[32m  ********************[0m
[32m  Best f1:0.0018[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.99638:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]epoch 0 loss 4.988:   7%|▋         | 2/28 [00:05<01:15,  2.89s/it]  epoch 0 loss 4.988:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 4.97203:  11%|█         | 3/28 [00:05<00:43,  1.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0163[0m
[32m  eval_f1 = 0.0033[0m
[32m  eval_mcc = 0.003[0m
[32m  eval_precision = 0.0094[0m
[32m  eval_recall = 0.016[0m
[32m  ********************[0m
[32m  Best f1:0.0033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.97203:  14%|█▍        | 4/28 [00:11<01:19,  3.30s/it]epoch 0 loss 4.9547:  14%|█▍        | 4/28 [00:11<01:19,  3.30s/it] epoch 0 loss 4.9547:  18%|█▊        | 5/28 [00:11<00:51,  2.26s/it]epoch 0 loss 4.93:  18%|█▊        | 5/28 [00:12<00:51,  2.26s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0335[0m
[32m  eval_f1 = 0.0053[0m
[32m  eval_mcc = 0.0043[0m
[32m  eval_precision = 0.0082[0m
[32m  eval_recall = 0.0105[0m
[32m  ********************[0m
[32m  Best f1:0.0053[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0043[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93:  21%|██▏       | 6/28 [00:18<01:21,  3.69s/it]epoch 0 loss 4.8941:  21%|██▏       | 6/28 [00:18<01:21,  3.69s/it]epoch 0 loss 4.8941:  25%|██▌       | 7/28 [00:18<00:54,  2.62s/it]epoch 0 loss 4.85704:  25%|██▌       | 7/28 [00:18<00:54,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0548[0m
[32m  eval_f1 = 0.0074[0m
[32m  eval_mcc = 0.0092[0m
[32m  eval_precision = 0.0104[0m
[32m  eval_recall = 0.0103[0m
[32m  ********************[0m
[32m  Best f1:0.0074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.85704:  29%|██▊       | 8/28 [00:24<01:16,  3.83s/it]epoch 0 loss 4.81053:  29%|██▊       | 8/28 [00:25<01:16,  3.83s/it]epoch 0 loss 4.81053:  32%|███▏      | 9/28 [00:25<00:52,  2.76s/it]epoch 0 loss 4.75957:  32%|███▏      | 9/28 [00:25<00:52,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0727[0m
[32m  eval_f1 = 0.0107[0m
[32m  eval_mcc = 0.0218[0m
[32m  eval_precision = 0.0156[0m
[32m  eval_recall = 0.015[0m
[32m  ********************[0m
[32m  Best f1:0.0107[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0218[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.75957:  36%|███▌      | 10/28 [00:32<01:14,  4.11s/it]epoch 0 loss 4.70908:  36%|███▌      | 10/28 [00:32<01:14,  4.11s/it]epoch 0 loss 4.70908:  39%|███▉      | 11/28 [00:32<00:50,  2.99s/it]epoch 0 loss 4.65054:  39%|███▉      | 11/28 [00:33<00:50,  2.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1022[0m
[32m  eval_f1 = 0.0205[0m
[32m  eval_mcc = 0.0509[0m
[32m  eval_precision = 0.0282[0m
[32m  eval_recall = 0.0242[0m
[32m  ********************[0m
[32m  Best f1:0.0205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.65054:  43%|████▎     | 12/28 [00:42<01:17,  4.85s/it]epoch 0 loss 4.59219:  43%|████▎     | 12/28 [00:42<01:17,  4.85s/it]epoch 0 loss 4.59219:  46%|████▋     | 13/28 [00:42<00:52,  3.51s/it]epoch 0 loss 4.53222:  46%|████▋     | 13/28 [00:42<00:52,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1361[0m
[32m  eval_f1 = 0.0279[0m
[32m  eval_mcc = 0.0845[0m
[32m  eval_precision = 0.0463[0m
[32m  eval_recall = 0.0306[0m
[32m  ********************[0m
[32m  Best f1:0.0279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0845[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.53222:  50%|█████     | 14/28 [00:51<01:11,  5.10s/it]epoch 0 loss 4.47566:  50%|█████     | 14/28 [00:51<01:11,  5.10s/it]epoch 0 loss 4.47566:  54%|█████▎    | 15/28 [00:51<00:48,  3.69s/it]epoch 0 loss 4.41658:  54%|█████▎    | 15/28 [00:52<00:48,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1878[0m
[32m  eval_f1 = 0.0429[0m
[32m  eval_mcc = 0.1384[0m
[32m  eval_precision = 0.058[0m
[32m  eval_recall = 0.0441[0m
[32m  ********************[0m
[32m  Best f1:0.0429[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1384[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.41658:  57%|█████▋    | 16/28 [01:01<01:05,  5.44s/it]epoch 0 loss 4.3582:  57%|█████▋    | 16/28 [01:01<01:05,  5.44s/it] epoch 0 loss 4.3582:  61%|██████    | 17/28 [01:01<00:43,  3.93s/it]epoch 0 loss 4.2967:  61%|██████    | 17/28 [01:01<00:43,  3.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.234[0m
[32m  eval_f1 = 0.0478[0m
[32m  eval_mcc = 0.1824[0m
[32m  eval_precision = 0.0685[0m
[32m  eval_recall = 0.0493[0m
[32m  ********************[0m
[32m  Best f1:0.0478[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1824[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.2967:  64%|██████▍   | 18/28 [01:11<00:57,  5.74s/it]epoch 0 loss 4.23529:  64%|██████▍   | 18/28 [01:11<00:57,  5.74s/it]epoch 0 loss 4.23529:  68%|██████▊   | 19/28 [01:11<00:37,  4.14s/it]epoch 0 loss 4.17678:  68%|██████▊   | 19/28 [01:12<00:37,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3047[0m
[32m  eval_f1 = 0.057[0m
[32m  eval_mcc = 0.2537[0m
[32m  eval_precision = 0.1088[0m
[32m  eval_recall = 0.06[0m
[32m  ********************[0m
[32m  Best f1:0.057[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2537[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.17678:  71%|███████▏  | 20/28 [01:21<00:44,  5.62s/it]epoch 0 loss 4.11835:  71%|███████▏  | 20/28 [01:21<00:44,  5.62s/it]epoch 0 loss 4.11835:  75%|███████▌  | 21/28 [01:21<00:28,  4.06s/it]epoch 0 loss 4.06001:  75%|███████▌  | 21/28 [01:21<00:28,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3611[0m
[32m  eval_f1 = 0.0658[0m
[32m  eval_mcc = 0.313[0m
[32m  eval_precision = 0.1203[0m
[32m  eval_recall = 0.0709[0m
[32m  ********************[0m
[32m  Best f1:0.0658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.06001:  79%|███████▊  | 22/28 [01:32<00:36,  6.03s/it]epoch 0 loss 4.00306:  79%|███████▊  | 22/28 [01:32<00:36,  6.03s/it]epoch 0 loss 4.00306:  82%|████████▏ | 23/28 [01:32<00:21,  4.35s/it]epoch 0 loss 3.95162:  82%|████████▏ | 23/28 [01:32<00:21,  4.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3982[0m
[32m  eval_f1 = 0.1063[0m
[32m  eval_mcc = 0.3579[0m
[32m  eval_precision = 0.181[0m
[32m  eval_recall = 0.1034[0m
[32m  ********************[0m
[32m  Best f1:0.1063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.95162:  86%|████████▌ | 24/28 [01:39<00:20,  5.04s/it]epoch 0 loss 3.89637:  86%|████████▌ | 24/28 [01:39<00:20,  5.04s/it]epoch 0 loss 3.89637:  89%|████████▉ | 25/28 [01:39<00:10,  3.65s/it]epoch 0 loss 3.84736:  89%|████████▉ | 25/28 [01:39<00:10,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4341[0m
[32m  eval_f1 = 0.1277[0m
[32m  eval_mcc = 0.4006[0m
[32m  eval_precision = 0.1963[0m
[32m  eval_recall = 0.1205[0m
[32m  ********************[0m
[32m  Best f1:0.1277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4006[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.84736:  93%|█████████▎| 26/28 [01:45<00:08,  4.31s/it]epoch 0 loss 3.79479:  93%|█████████▎| 26/28 [01:45<00:08,  4.31s/it]epoch 0 loss 3.79479:  96%|█████████▋| 27/28 [01:45<00:03,  3.14s/it]epoch 0 loss 3.7437:  96%|█████████▋| 27/28 [01:46<00:03,  3.14s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.476[0m
[32m  eval_f1 = 0.1489[0m
[32m  eval_mcc = 0.4475[0m
[32m  eval_precision = 0.2005[0m
[32m  eval_recall = 0.1413[0m
[32m  ********************[0m
[32m  Best f1:0.1489[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4475[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.7437: 100%|██████████| 28/28 [01:51<00:00,  3.97s/it]epoch 0 loss 3.7437: 100%|██████████| 28/28 [01:51<00:00,  3.99s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.44907:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.44907:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 1 loss 2.35647:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5175[0m
[32m  eval_f1 = 0.1727[0m
[32m  eval_mcc = 0.4901[0m
[32m  eval_precision = 0.2234[0m
[32m  eval_recall = 0.1666[0m
[32m  ********************[0m
[32m  Best f1:0.1727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4901[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.35647:   7%|▋         | 2/28 [00:05<01:29,  3.45s/it]epoch 1 loss 2.30687:   7%|▋         | 2/28 [00:06<01:29,  3.45s/it]epoch 1 loss 2.30687:  11%|█         | 3/28 [00:06<00:51,  2.07s/it]epoch 1 loss 2.26651:  11%|█         | 3/28 [00:06<00:51,  2.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5526[0m
[32m  eval_f1 = 0.1876[0m
[32m  eval_mcc = 0.525[0m
[32m  eval_precision = 0.2303[0m
[32m  eval_recall = 0.1873[0m
[32m  ********************[0m
[32m  Best f1:0.1876[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.525[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26651:  14%|█▍        | 4/28 [00:12<01:27,  3.66s/it]epoch 1 loss 2.22496:  14%|█▍        | 4/28 [00:12<01:27,  3.66s/it]epoch 1 loss 2.22496:  18%|█▊        | 5/28 [00:12<00:57,  2.49s/it]epoch 1 loss 2.16432:  18%|█▊        | 5/28 [00:13<00:57,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5681[0m
[32m  eval_f1 = 0.1958[0m
[32m  eval_mcc = 0.5407[0m
[32m  eval_precision = 0.244[0m
[32m  eval_recall = 0.194[0m
[32m  ********************[0m
[32m  Best f1:0.1958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5407[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16432:  21%|██▏       | 6/28 [00:18<01:20,  3.66s/it]epoch 1 loss 2.13352:  21%|██▏       | 6/28 [00:19<01:20,  3.66s/it]epoch 1 loss 2.13352:  25%|██▌       | 7/28 [00:19<00:54,  2.60s/it]epoch 1 loss 2.09105:  25%|██▌       | 7/28 [00:19<00:54,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5792[0m
[32m  eval_f1 = 0.2092[0m
[32m  eval_mcc = 0.553[0m
[32m  eval_precision = 0.2705[0m
[32m  eval_recall = 0.2032[0m
[32m  ********************[0m
[32m  Best f1:0.2092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.553[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09105:  29%|██▊       | 8/28 [00:25<01:13,  3.66s/it]epoch 1 loss 2.06796:  29%|██▊       | 8/28 [00:25<01:13,  3.66s/it]epoch 1 loss 2.06796:  32%|███▏      | 9/28 [00:25<00:50,  2.65s/it]epoch 1 loss 2.02481:  32%|███▏      | 9/28 [00:26<00:50,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5857[0m
[32m  eval_f1 = 0.2153[0m
[32m  eval_mcc = 0.5612[0m
[32m  eval_precision = 0.2861[0m
[32m  eval_recall = 0.2066[0m
[32m  ********************[0m
[32m  Best f1:0.2153[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02481:  36%|███▌      | 10/28 [00:31<01:06,  3.72s/it]epoch 1 loss 1.99895:  36%|███▌      | 10/28 [00:32<01:06,  3.72s/it]epoch 1 loss 1.99895:  39%|███▉      | 11/28 [00:32<00:46,  2.71s/it]epoch 1 loss 1.97253:  39%|███▉      | 11/28 [00:32<00:46,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5876[0m
[32m  eval_f1 = 0.2217[0m
[32m  eval_mcc = 0.5653[0m
[32m  eval_precision = 0.2921[0m
[32m  eval_recall = 0.2085[0m
[32m  ********************[0m
[32m  Best f1:0.2217[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.97253:  43%|████▎     | 12/28 [00:41<01:14,  4.68s/it]epoch 1 loss 1.94865:  43%|████▎     | 12/28 [00:41<01:14,  4.68s/it]epoch 1 loss 1.94865:  46%|████▋     | 13/28 [00:41<00:50,  3.39s/it]epoch 1 loss 1.93085:  46%|████▋     | 13/28 [00:42<00:50,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5893[0m
[32m  eval_f1 = 0.2283[0m
[32m  eval_mcc = 0.568[0m
[32m  eval_precision = 0.2919[0m
[32m  eval_recall = 0.2137[0m
[32m  ********************[0m
[32m  Best f1:0.2283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93085:  50%|█████     | 14/28 [00:51<01:13,  5.24s/it]epoch 1 loss 1.91436:  50%|█████     | 14/28 [00:51<01:13,  5.24s/it]epoch 1 loss 1.91436:  54%|█████▎    | 15/28 [00:51<00:49,  3.79s/it]epoch 1 loss 1.89477:  54%|█████▎    | 15/28 [00:52<00:49,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5963[0m
[32m  eval_f1 = 0.2408[0m
[32m  eval_mcc = 0.5747[0m
[32m  eval_precision = 0.3137[0m
[32m  eval_recall = 0.2248[0m
[32m  ********************[0m
[32m  Best f1:0.2408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5747[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89477:  57%|█████▋    | 16/28 [01:01<01:08,  5.68s/it]epoch 1 loss 1.87307:  57%|█████▋    | 16/28 [01:02<01:08,  5.68s/it]epoch 1 loss 1.87307:  61%|██████    | 17/28 [01:02<00:45,  4.10s/it]epoch 1 loss 1.85734:  61%|██████    | 17/28 [01:02<00:45,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6045[0m
[32m  eval_f1 = 0.2474[0m
[32m  eval_mcc = 0.5833[0m
[32m  eval_precision = 0.3325[0m
[32m  eval_recall = 0.232[0m
[32m  ********************[0m
[32m  Best f1:0.2474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.85734:  64%|██████▍   | 18/28 [01:09<00:51,  5.11s/it]epoch 1 loss 1.83731:  64%|██████▍   | 18/28 [01:10<00:51,  5.11s/it]epoch 1 loss 1.83731:  68%|██████▊   | 19/28 [01:10<00:33,  3.70s/it]epoch 1 loss 1.83014:  68%|██████▊   | 19/28 [01:10<00:33,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6083[0m
[32m  eval_f1 = 0.2587[0m
[32m  eval_mcc = 0.587[0m
[32m  eval_precision = 0.3479[0m
[32m  eval_recall = 0.2433[0m
[32m  ********************[0m
[32m  Best f1:0.2587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.587[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83014:  71%|███████▏  | 20/28 [01:18<00:41,  5.24s/it]epoch 1 loss 1.82035:  71%|███████▏  | 20/28 [01:19<00:41,  5.24s/it]epoch 1 loss 1.82035:  75%|███████▌  | 21/28 [01:19<00:26,  3.79s/it]epoch 1 loss 1.81549:  75%|███████▌  | 21/28 [01:19<00:26,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6149[0m
[32m  eval_f1 = 0.2688[0m
[32m  eval_mcc = 0.5934[0m
[32m  eval_precision = 0.3731[0m
[32m  eval_recall = 0.2511[0m
[32m  ********************[0m
[32m  Best f1:0.2688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5934[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81549:  79%|███████▊  | 22/28 [01:27<00:29,  4.98s/it]epoch 1 loss 1.80891:  79%|███████▊  | 22/28 [01:27<00:29,  4.98s/it]epoch 1 loss 1.80891:  82%|████████▏ | 23/28 [01:27<00:18,  3.61s/it]epoch 1 loss 1.80163:  82%|████████▏ | 23/28 [01:27<00:18,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6198[0m
[32m  eval_f1 = 0.2889[0m
[32m  eval_mcc = 0.5978[0m
[32m  eval_precision = 0.3784[0m
[32m  eval_recall = 0.2714[0m
[32m  ********************[0m
[32m  Best f1:0.2889[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5978[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80163:  86%|████████▌ | 24/28 [01:33<00:17,  4.40s/it]epoch 1 loss 1.78918:  86%|████████▌ | 24/28 [01:34<00:17,  4.40s/it]epoch 1 loss 1.78918:  89%|████████▉ | 25/28 [01:34<00:09,  3.20s/it]epoch 1 loss 1.77209:  89%|████████▉ | 25/28 [01:34<00:09,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6212[0m
[32m  eval_f1 = 0.2931[0m
[32m  eval_mcc = 0.5994[0m
[32m  eval_precision = 0.375[0m
[32m  eval_recall = 0.2755[0m
[32m  ********************[0m
[32m  Best f1:0.2931[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5994[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.77209:  93%|█████████▎| 26/28 [01:40<00:08,  4.26s/it]epoch 1 loss 1.75979:  93%|█████████▎| 26/28 [01:41<00:08,  4.26s/it]epoch 1 loss 1.75979:  96%|█████████▋| 27/28 [01:41<00:03,  3.11s/it]epoch 1 loss 1.74757:  96%|█████████▋| 27/28 [01:41<00:03,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6244[0m
[32m  eval_f1 = 0.3071[0m
[32m  eval_mcc = 0.6027[0m
[32m  eval_precision = 0.3885[0m
[32m  eval_recall = 0.2875[0m
[32m  ********************[0m
[32m  Best f1:0.3071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.74757: 100%|██████████| 28/28 [01:50<00:00,  4.83s/it]epoch 1 loss 1.74757: 100%|██████████| 28/28 [01:50<00:00,  3.93s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.42935:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.42935:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 2 loss 1.40202:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6293[0m
[32m  eval_f1 = 0.3137[0m
[32m  eval_mcc = 0.6079[0m
[32m  eval_precision = 0.4083[0m
[32m  eval_recall = 0.2934[0m
[32m  ********************[0m
[32m  Best f1:0.3137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40202:   7%|▋         | 2/28 [00:09<02:19,  5.38s/it]epoch 2 loss 1.42848:   7%|▋         | 2/28 [00:09<02:19,  5.38s/it]epoch 2 loss 1.42848:  11%|█         | 3/28 [00:09<01:17,  3.12s/it]epoch 2 loss 1.41521:  11%|█         | 3/28 [00:10<01:17,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6318[0m
[32m  eval_f1 = 0.3178[0m
[32m  eval_mcc = 0.6109[0m
[32m  eval_precision = 0.4019[0m
[32m  eval_recall = 0.2963[0m
[32m  ********************[0m
[32m  Best f1:0.3178[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6109[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41521:  14%|█▍        | 4/28 [00:19<02:13,  5.56s/it]epoch 2 loss 1.41955:  14%|█▍        | 4/28 [00:19<02:13,  5.56s/it]epoch 2 loss 1.41955:  18%|█▊        | 5/28 [00:19<01:25,  3.71s/it]epoch 2 loss 1.39871:  18%|█▊        | 5/28 [00:19<01:25,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6345[0m
[32m  eval_f1 = 0.3228[0m
[32m  eval_mcc = 0.614[0m
[32m  eval_precision = 0.4259[0m
[32m  eval_recall = 0.2996[0m
[32m  ********************[0m
[32m  Best f1:0.3228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39871:  21%|██▏       | 6/28 [00:28<02:03,  5.60s/it]epoch 2 loss 1.39828:  21%|██▏       | 6/28 [00:29<02:03,  5.60s/it]epoch 2 loss 1.39828:  25%|██▌       | 7/28 [00:29<01:22,  3.91s/it]epoch 2 loss 1.40656:  25%|██▌       | 7/28 [00:29<01:22,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6369[0m
[32m  eval_f1 = 0.3238[0m
[32m  eval_mcc = 0.6162[0m
[32m  eval_precision = 0.4276[0m
[32m  eval_recall = 0.3006[0m
[32m  ********************[0m
[32m  Best f1:0.3238[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40656:  29%|██▊       | 8/28 [00:40<02:02,  6.14s/it]epoch 2 loss 1.39376:  29%|██▊       | 8/28 [00:40<02:02,  6.14s/it]epoch 2 loss 1.39376:  32%|███▏      | 9/28 [00:40<01:22,  4.36s/it]epoch 2 loss 1.38106:  32%|███▏      | 9/28 [00:40<01:22,  4.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6362[0m
[32m  eval_f1 = 0.3233[0m
[32m  eval_mcc = 0.6153[0m
[32m  eval_precision = 0.4135[0m
[32m  eval_recall = 0.3004[0m

epoch 2 loss 1.38106:  36%|███▌      | 10/28 [00:44<01:15,  4.18s/it]epoch 2 loss 1.38079:  36%|███▌      | 10/28 [00:44<01:15,  4.18s/it]epoch 2 loss 1.38079:  39%|███▉      | 11/28 [00:44<00:51,  3.02s/it]epoch 2 loss 1.38196:  39%|███▉      | 11/28 [00:45<00:51,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.638[0m
[32m  eval_f1 = 0.3252[0m
[32m  eval_mcc = 0.6171[0m
[32m  eval_precision = 0.4133[0m
[32m  eval_recall = 0.3021[0m
[32m  ********************[0m
[32m  Best f1:0.3252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6171[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38196:  43%|████▎     | 12/28 [00:54<01:23,  5.20s/it]epoch 2 loss 1.38615:  43%|████▎     | 12/28 [00:55<01:23,  5.20s/it]epoch 2 loss 1.38615:  46%|████▋     | 13/28 [00:55<00:56,  3.75s/it]epoch 2 loss 1.37591:  46%|████▋     | 13/28 [00:55<00:56,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6421[0m
[32m  eval_f1 = 0.3301[0m
[32m  eval_mcc = 0.6211[0m
[32m  eval_precision = 0.4324[0m
[32m  eval_recall = 0.3064[0m
[32m  ********************[0m
[32m  Best f1:0.3301[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37591:  50%|█████     | 14/28 [01:01<01:01,  4.39s/it]epoch 2 loss 1.3725:  50%|█████     | 14/28 [01:01<01:01,  4.39s/it] epoch 2 loss 1.3725:  54%|█████▎    | 15/28 [01:01<00:41,  3.20s/it]epoch 2 loss 1.37241:  54%|█████▎    | 15/28 [01:01<00:41,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6453[0m
[32m  eval_f1 = 0.3305[0m
[32m  eval_mcc = 0.6245[0m
[32m  eval_precision = 0.4256[0m
[32m  eval_recall = 0.3087[0m
[32m  ********************[0m
[32m  Best f1:0.3305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37241:  57%|█████▋    | 16/28 [01:07<00:48,  4.03s/it]epoch 2 loss 1.37846:  57%|█████▋    | 16/28 [01:07<00:48,  4.03s/it]epoch 2 loss 1.37846:  61%|██████    | 17/28 [01:07<00:32,  2.95s/it]epoch 2 loss 1.38531:  61%|██████    | 17/28 [01:08<00:32,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6462[0m
[32m  eval_f1 = 0.3309[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4234[0m
[32m  eval_recall = 0.3104[0m
[32m  ********************[0m
[32m  Best f1:0.3309[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38531:  64%|██████▍   | 18/28 [01:15<00:43,  4.37s/it]epoch 2 loss 1.38166:  64%|██████▍   | 18/28 [01:16<00:43,  4.37s/it]epoch 2 loss 1.38166:  68%|██████▊   | 19/28 [01:16<00:28,  3.18s/it]epoch 2 loss 1.38207:  68%|██████▊   | 19/28 [01:16<00:28,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.64it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6495[0m
[32m  eval_f1 = 0.3337[0m
[32m  eval_mcc = 0.6295[0m
[32m  eval_precision = 0.4139[0m
[32m  eval_recall = 0.313[0m
[32m  ********************[0m
[32m  Best f1:0.3337[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38207:  71%|███████▏  | 20/28 [01:26<00:42,  5.33s/it]epoch 2 loss 1.37826:  71%|███████▏  | 20/28 [01:26<00:42,  5.33s/it]epoch 2 loss 1.37826:  75%|███████▌  | 21/28 [01:26<00:27,  3.86s/it]epoch 2 loss 1.37506:  75%|███████▌  | 21/28 [01:27<00:27,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6498[0m
[32m  eval_f1 = 0.3349[0m
[32m  eval_mcc = 0.6305[0m
[32m  eval_precision = 0.4226[0m
[32m  eval_recall = 0.3132[0m
[32m  ********************[0m
[32m  Best f1:0.3349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37506:  79%|███████▊  | 22/28 [01:37<00:35,  5.88s/it]epoch 2 loss 1.37241:  79%|███████▊  | 22/28 [01:37<00:35,  5.88s/it]epoch 2 loss 1.37241:  82%|████████▏ | 23/28 [01:37<00:21,  4.24s/it]epoch 2 loss 1.3708:  82%|████████▏ | 23/28 [01:38<00:21,  4.24s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6498[0m
[32m  eval_f1 = 0.3357[0m
[32m  eval_mcc = 0.6308[0m
[32m  eval_precision = 0.4251[0m
[32m  eval_recall = 0.3136[0m
[32m  ********************[0m
[32m  Best f1:0.3357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.3708:  86%|████████▌ | 24/28 [01:48<00:24,  6.19s/it]epoch 2 loss 1.3704:  86%|████████▌ | 24/28 [01:48<00:24,  6.19s/it]epoch 2 loss 1.3704:  89%|████████▉ | 25/28 [01:48<00:13,  4.46s/it]epoch 2 loss 1.37467:  89%|████████▉ | 25/28 [01:49<00:13,  4.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.65[0m
[32m  eval_f1 = 0.3397[0m
[32m  eval_mcc = 0.631[0m
[32m  eval_precision = 0.4528[0m
[32m  eval_recall = 0.3154[0m
[32m  ********************[0m
[32m  Best f1:0.3397[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37467:  93%|█████████▎| 26/28 [01:58<00:12,  6.09s/it]epoch 2 loss 1.37251:  93%|█████████▎| 26/28 [01:59<00:12,  6.09s/it]epoch 2 loss 1.37251:  96%|█████████▋| 27/28 [01:59<00:04,  4.39s/it]epoch 2 loss 1.36584:  96%|█████████▋| 27/28 [01:59<00:04,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6506[0m
[32m  eval_f1 = 0.3449[0m
[32m  eval_mcc = 0.6317[0m
[32m  eval_precision = 0.4649[0m
[32m  eval_recall = 0.3183[0m
[32m  ********************[0m
[32m  Best f1:0.3449[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36584: 100%|██████████| 28/28 [02:09<00:00,  6.06s/it]epoch 2 loss 1.36584: 100%|██████████| 28/28 [02:09<00:00,  4.62s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.22867:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.22867:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 3 loss 1.2419:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6535[0m
[32m  eval_f1 = 0.347[0m
[32m  eval_mcc = 0.6345[0m
[32m  eval_precision = 0.4646[0m
[32m  eval_recall = 0.3203[0m
[32m  ********************[0m
[32m  Best f1:0.347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2419:   7%|▋         | 2/28 [00:10<02:42,  6.24s/it]epoch 3 loss 1.22415:   7%|▋         | 2/28 [00:11<02:42,  6.24s/it]epoch 3 loss 1.22415:  11%|█         | 3/28 [00:11<01:29,  3.58s/it]epoch 3 loss 1.21622:  11%|█         | 3/28 [00:11<01:29,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6548[0m
[32m  eval_f1 = 0.3522[0m
[32m  eval_mcc = 0.6355[0m
[32m  eval_precision = 0.4715[0m
[32m  eval_recall = 0.3246[0m
[32m  ********************[0m
[32m  Best f1:0.3522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.21622:  14%|█▍        | 4/28 [00:20<02:22,  5.94s/it]epoch 3 loss 1.22803:  14%|█▍        | 4/28 [00:21<02:22,  5.94s/it]epoch 3 loss 1.22803:  18%|█▊        | 5/28 [00:21<01:30,  3.95s/it]epoch 3 loss 1.25307:  18%|█▊        | 5/28 [00:21<01:30,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6567[0m
[32m  eval_f1 = 0.3535[0m
[32m  eval_mcc = 0.6372[0m
[32m  eval_precision = 0.4711[0m
[32m  eval_recall = 0.3259[0m
[32m  ********************[0m
[32m  Best f1:0.3535[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6372[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25307:  21%|██▏       | 6/28 [00:30<02:10,  5.95s/it]epoch 3 loss 1.28539:  21%|██▏       | 6/28 [00:31<02:10,  5.95s/it]epoch 3 loss 1.28539:  25%|██▌       | 7/28 [00:31<01:27,  4.15s/it]epoch 3 loss 1.28485:  25%|██▌       | 7/28 [00:31<01:27,  4.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6585[0m
[32m  eval_f1 = 0.3596[0m
[32m  eval_mcc = 0.6389[0m
[32m  eval_precision = 0.4804[0m
[32m  eval_recall = 0.3311[0m
[32m  ********************[0m
[32m  Best f1:0.3596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28485:  29%|██▊       | 8/28 [00:39<01:50,  5.50s/it]epoch 3 loss 1.28196:  29%|██▊       | 8/28 [00:40<01:50,  5.50s/it]epoch 3 loss 1.28196:  32%|███▏      | 9/28 [00:40<01:14,  3.91s/it]epoch 3 loss 1.27223:  32%|███▏      | 9/28 [00:40<01:14,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6592[0m
[32m  eval_f1 = 0.3643[0m
[32m  eval_mcc = 0.6395[0m
[32m  eval_precision = 0.4869[0m
[32m  eval_recall = 0.335[0m
[32m  ********************[0m
[32m  Best f1:0.3643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27223:  36%|███▌      | 10/28 [00:50<01:46,  5.91s/it]epoch 3 loss 1.28004:  36%|███▌      | 10/28 [00:51<01:46,  5.91s/it]epoch 3 loss 1.28004:  39%|███▉      | 11/28 [00:51<01:11,  4.23s/it]epoch 3 loss 1.29234:  39%|███▉      | 11/28 [00:51<01:11,  4.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3672[0m
[32m  eval_mcc = 0.6391[0m
[32m  eval_precision = 0.4869[0m
[32m  eval_recall = 0.3372[0m
[32m  ********************[0m
[32m  Best f1:0.3672[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.29234:  43%|████▎     | 12/28 [00:58<01:21,  5.09s/it]epoch 3 loss 1.28694:  43%|████▎     | 12/28 [00:58<01:21,  5.09s/it]epoch 3 loss 1.28694:  46%|████▋     | 13/28 [00:58<00:55,  3.67s/it]epoch 3 loss 1.278:  46%|████▋     | 13/28 [00:58<00:55,  3.67s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6585[0m
[32m  eval_f1 = 0.3673[0m
[32m  eval_mcc = 0.6389[0m
[32m  eval_precision = 0.4843[0m
[32m  eval_recall = 0.337[0m
[32m  ********************[0m
[32m  Best f1:0.3673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.278:  50%|█████     | 14/28 [01:05<01:07,  4.80s/it]epoch 3 loss 1.27744:  50%|█████     | 14/28 [01:06<01:07,  4.80s/it]epoch 3 loss 1.27744:  54%|█████▎    | 15/28 [01:06<00:45,  3.48s/it]epoch 3 loss 1.27247:  54%|█████▎    | 15/28 [01:06<00:45,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6589[0m
[32m  eval_f1 = 0.3665[0m
[32m  eval_mcc = 0.6396[0m
[32m  eval_precision = 0.4844[0m
[32m  eval_recall = 0.3361[0m
[32m  ********************[0m
[32m  Best MCC:0.6396[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27247:  57%|█████▋    | 16/28 [01:12<00:51,  4.30s/it]epoch 3 loss 1.27122:  57%|█████▋    | 16/28 [01:12<00:51,  4.30s/it]epoch 3 loss 1.27122:  61%|██████    | 17/28 [01:12<00:34,  3.13s/it]epoch 3 loss 1.27283:  61%|██████    | 17/28 [01:13<00:34,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6607[0m
[32m  eval_f1 = 0.3669[0m
[32m  eval_mcc = 0.6416[0m
[32m  eval_precision = 0.4865[0m
[32m  eval_recall = 0.3364[0m
[32m  ********************[0m
[32m  Best MCC:0.6416[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27283:  64%|██████▍   | 18/28 [01:19<00:40,  4.02s/it]epoch 3 loss 1.27147:  64%|██████▍   | 18/28 [01:19<00:40,  4.02s/it]epoch 3 loss 1.27147:  68%|██████▊   | 19/28 [01:19<00:26,  2.94s/it]epoch 3 loss 1.26891:  68%|██████▊   | 19/28 [01:19<00:26,  2.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6613[0m
[32m  eval_f1 = 0.365[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.4894[0m
[32m  eval_recall = 0.3354[0m
[32m  ********************[0m
[32m  Best MCC:0.6425[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26891:  71%|███████▏  | 20/28 [01:25<00:31,  3.89s/it]epoch 3 loss 1.26575:  71%|███████▏  | 20/28 [01:25<00:31,  3.89s/it]epoch 3 loss 1.26575:  75%|███████▌  | 21/28 [01:25<00:19,  2.85s/it]epoch 3 loss 1.27177:  75%|███████▌  | 21/28 [01:26<00:19,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6619[0m
[32m  eval_f1 = 0.3647[0m
[32m  eval_mcc = 0.6434[0m
[32m  eval_precision = 0.4787[0m
[32m  eval_recall = 0.3357[0m
[32m  ********************[0m
[32m  Best MCC:0.6434[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27177:  79%|███████▊  | 22/28 [01:32<00:24,  4.04s/it]epoch 3 loss 1.27313:  79%|███████▊  | 22/28 [01:33<00:24,  4.04s/it]epoch 3 loss 1.27313:  82%|████████▏ | 23/28 [01:33<00:14,  2.95s/it]epoch 3 loss 1.27503:  82%|████████▏ | 23/28 [01:33<00:14,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.663[0m
[32m  eval_f1 = 0.3654[0m
[32m  eval_mcc = 0.6447[0m
[32m  eval_precision = 0.4803[0m
[32m  eval_recall = 0.3367[0m
[32m  ********************[0m
[32m  Best MCC:0.6447[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27503:  86%|████████▌ | 24/28 [01:39<00:15,  3.91s/it]epoch 3 loss 1.27481:  86%|████████▌ | 24/28 [01:39<00:15,  3.91s/it]epoch 3 loss 1.27481:  89%|████████▉ | 25/28 [01:39<00:08,  2.87s/it]epoch 3 loss 1.27658:  89%|████████▉ | 25/28 [01:40<00:08,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6641[0m
[32m  eval_f1 = 0.367[0m
[32m  eval_mcc = 0.6456[0m
[32m  eval_precision = 0.4903[0m
[32m  eval_recall = 0.3383[0m
[32m  ********************[0m
[32m  Best MCC:0.6456[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27658:  93%|█████████▎| 26/28 [01:45<00:07,  3.64s/it]epoch 3 loss 1.27356:  93%|█████████▎| 26/28 [01:45<00:07,  3.64s/it]epoch 3 loss 1.27356:  96%|█████████▋| 27/28 [01:45<00:02,  2.67s/it]epoch 3 loss 1.26666:  96%|█████████▋| 27/28 [01:45<00:02,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3689[0m
[32m  eval_mcc = 0.6467[0m
[32m  eval_precision = 0.4875[0m
[32m  eval_recall = 0.3398[0m
[32m  ********************[0m
[32m  Best f1:0.3689[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6467[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26666: 100%|██████████| 28/28 [01:54<00:00,  4.65s/it]epoch 3 loss 1.26666: 100%|██████████| 28/28 [01:54<00:00,  4.10s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.35204:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.35204:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 4 loss 1.28198:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.666[0m
[32m  eval_f1 = 0.3692[0m
[32m  eval_mcc = 0.647[0m
[32m  eval_precision = 0.4911[0m
[32m  eval_recall = 0.3397[0m
[32m  ********************[0m
[32m  Best f1:0.3692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28198:   7%|▋         | 2/28 [00:08<02:03,  4.74s/it]epoch 4 loss 1.2907:   7%|▋         | 2/28 [00:08<02:03,  4.74s/it] epoch 4 loss 1.2907:  11%|█         | 3/28 [00:08<01:09,  2.77s/it]epoch 4 loss 1.28877:  11%|█         | 3/28 [00:09<01:09,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6664[0m
[32m  eval_f1 = 0.3702[0m
[32m  eval_mcc = 0.6474[0m
[32m  eval_precision = 0.4921[0m
[32m  eval_recall = 0.3404[0m
[32m  ********************[0m
[32m  Best f1:0.3702[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.28877:  14%|█▍        | 4/28 [00:18<02:12,  5.53s/it]epoch 4 loss 1.25406:  14%|█▍        | 4/28 [00:18<02:12,  5.53s/it]epoch 4 loss 1.25406:  18%|█▊        | 5/28 [00:18<01:24,  3.69s/it]epoch 4 loss 1.24395:  18%|█▊        | 5/28 [00:19<01:24,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6655[0m
[32m  eval_f1 = 0.3722[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.5038[0m
[32m  eval_recall = 0.341[0m
[32m  ********************[0m
[32m  Best f1:0.3722[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24395:  21%|██▏       | 6/28 [00:23<01:29,  4.06s/it]epoch 4 loss 1.2581:  21%|██▏       | 6/28 [00:23<01:29,  4.06s/it] epoch 4 loss 1.2581:  25%|██▌       | 7/28 [00:23<01:00,  2.87s/it]epoch 4 loss 1.25039:  25%|██▌       | 7/28 [00:24<01:00,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3746[0m
[32m  eval_mcc = 0.6464[0m
[32m  eval_precision = 0.5045[0m
[32m  eval_recall = 0.3427[0m
[32m  ********************[0m
[32m  Best f1:0.3746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.25039:  29%|██▊       | 8/28 [00:28<01:10,  3.54s/it]epoch 4 loss 1.24828:  29%|██▊       | 8/28 [00:29<01:10,  3.54s/it]epoch 4 loss 1.24828:  32%|███▏      | 9/28 [00:29<00:48,  2.56s/it]epoch 4 loss 1.24938:  32%|███▏      | 9/28 [00:29<00:48,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6652[0m
[32m  eval_f1 = 0.375[0m
[32m  eval_mcc = 0.6462[0m
[32m  eval_precision = 0.5046[0m
[32m  eval_recall = 0.343[0m
[32m  ********************[0m
[32m  Best f1:0.375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24938:  36%|███▌      | 10/28 [00:34<00:59,  3.30s/it]epoch 4 loss 1.25935:  36%|███▌      | 10/28 [00:34<00:59,  3.30s/it]epoch 4 loss 1.25935:  39%|███▉      | 11/28 [00:34<00:41,  2.41s/it]epoch 4 loss 1.2548:  39%|███▉      | 11/28 [00:35<00:41,  2.41s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6654[0m
[32m  eval_f1 = 0.3752[0m
[32m  eval_mcc = 0.6464[0m
[32m  eval_precision = 0.5016[0m
[32m  eval_recall = 0.3433[0m
[32m  ********************[0m
[32m  Best f1:0.3752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.2548:  43%|████▎     | 12/28 [00:39<00:50,  3.18s/it]epoch 4 loss 1.2529:  43%|████▎     | 12/28 [00:40<00:50,  3.18s/it]epoch 4 loss 1.2529:  46%|████▋     | 13/28 [00:40<00:35,  2.34s/it]epoch 4 loss 1.2449:  46%|████▋     | 13/28 [00:40<00:35,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3757[0m
[32m  eval_mcc = 0.6468[0m
[32m  eval_precision = 0.5019[0m
[32m  eval_recall = 0.3438[0m
[32m  ********************[0m
[32m  Best f1:0.3757[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.2449:  50%|█████     | 14/28 [00:45<00:43,  3.13s/it]epoch 4 loss 1.24413:  50%|█████     | 14/28 [00:45<00:43,  3.13s/it]epoch 4 loss 1.24413:  54%|█████▎    | 15/28 [00:45<00:30,  2.31s/it]epoch 4 loss 1.24626:  54%|█████▎    | 15/28 [00:45<00:30,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6662[0m
[32m  eval_f1 = 0.3768[0m
[32m  eval_mcc = 0.6473[0m
[32m  eval_precision = 0.5013[0m
[32m  eval_recall = 0.3449[0m
[32m  ********************[0m
[32m  Best f1:0.3768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.24626:  57%|█████▋    | 16/28 [00:50<00:36,  3.06s/it]epoch 4 loss 1.24521:  57%|█████▋    | 16/28 [00:50<00:36,  3.06s/it]epoch 4 loss 1.24521:  61%|██████    | 17/28 [00:50<00:24,  2.27s/it]epoch 4 loss 1.23847:  61%|██████    | 17/28 [00:51<00:24,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6665[0m
[32m  eval_f1 = 0.3767[0m
[32m  eval_mcc = 0.6476[0m
[32m  eval_precision = 0.5007[0m
[32m  eval_recall = 0.345[0m
[32m  ********************[0m
[32m  Best MCC:0.6476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23847:  64%|██████▍   | 18/28 [00:55<00:30,  3.04s/it]epoch 4 loss 1.23743:  64%|██████▍   | 18/28 [00:55<00:30,  3.04s/it]epoch 4 loss 1.23743:  68%|██████▊   | 19/28 [00:55<00:20,  2.25s/it]epoch 4 loss 1.24109:  68%|██████▊   | 19/28 [00:56<00:20,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.667[0m
[32m  eval_f1 = 0.377[0m
[32m  eval_mcc = 0.6481[0m
[32m  eval_precision = 0.5012[0m
[32m  eval_recall = 0.3453[0m
[32m  ********************[0m
[32m  Best f1:0.377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24109:  71%|███████▏  | 20/28 [01:01<00:26,  3.28s/it]epoch 4 loss 1.23836:  71%|███████▏  | 20/28 [01:02<00:26,  3.28s/it]epoch 4 loss 1.23836:  75%|███████▌  | 21/28 [01:02<00:16,  2.42s/it]epoch 4 loss 1.2401:  75%|███████▌  | 21/28 [01:02<00:16,  2.42s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.667[0m
[32m  eval_f1 = 0.377[0m
[32m  eval_mcc = 0.6481[0m
[32m  eval_precision = 0.5008[0m
[32m  eval_recall = 0.3454[0m
[32m  ********************[0m
[32m  Best MCC:0.6481[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2401:  79%|███████▊  | 22/28 [01:06<00:19,  3.19s/it]epoch 4 loss 1.23874:  79%|███████▊  | 22/28 [01:07<00:19,  3.19s/it]epoch 4 loss 1.23874:  82%|████████▏ | 23/28 [01:07<00:11,  2.35s/it]epoch 4 loss 1.24068:  82%|████████▏ | 23/28 [01:07<00:11,  2.35s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6673[0m
[32m  eval_f1 = 0.3773[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.5005[0m
[32m  eval_recall = 0.3457[0m
[32m  ********************[0m
[32m  Best f1:0.3773[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_5/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.24068:  86%|████████▌ | 24/28 [01:13<00:13,  3.46s/it]epoch 4 loss 1.23894:  86%|████████▌ | 24/28 [01:13<00:13,  3.46s/it]epoch 4 loss 1.23894:  89%|████████▉ | 25/28 [01:13<00:07,  2.55s/it]epoch 4 loss 1.23916:  89%|████████▉ | 25/28 [01:14<00:07,  2.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6673[0m
[32m  eval_f1 = 0.3771[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.5002[0m
[32m  eval_recall = 0.3457[0m

epoch 4 loss 1.23916:  93%|█████████▎| 26/28 [01:17<00:05,  2.92s/it]epoch 4 loss 1.239:  93%|█████████▎| 26/28 [01:18<00:05,  2.92s/it]  epoch 4 loss 1.239:  96%|█████████▋| 27/28 [01:18<00:02,  2.17s/it]epoch 4 loss 1.23436:  96%|█████████▋| 27/28 [01:18<00:02,  2.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6672[0m
[32m  eval_f1 = 0.377[0m
[32m  eval_mcc = 0.6483[0m
[32m  eval_precision = 0.5[0m
[32m  eval_recall = 0.3456[0m

epoch 4 loss 1.23436: 100%|██████████| 28/28 [01:21<00:00,  2.60s/it]epoch 4 loss 1.23436: 100%|██████████| 28/28 [01:21<00:00,  2.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6673[0m
[32m  eval_f1 = 0.3773[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.5005[0m
[32m  eval_recall = 0.3457[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6498[0m
[32m  eval_f1 = 0.3298[0m
[32m  eval_mcc = 0.6311[0m
[32m  eval_precision = 0.4418[0m
[32m  eval_recall = 0.3053[0m

