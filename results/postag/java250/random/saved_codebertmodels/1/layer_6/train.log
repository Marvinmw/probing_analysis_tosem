[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=6, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/1/layer_6', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.02191:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.02191:   4%|▎         | 1/28 [00:00<00:20,  1.33it/s]epoch 0 loss 5.02346:   4%|▎         | 1/28 [00:01<00:20,  1.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0034[0m
[32m  eval_f1 = 0.0009[0m
[32m  eval_mcc = -0.0023[0m
[32m  eval_precision = 0.0089[0m
[32m  eval_recall = 0.0129[0m
[32m  ********************[0m
[32m  Best f1:0.0009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.02346:   7%|▋         | 2/28 [00:05<01:14,  2.87s/it]epoch 0 loss 5.01822:   7%|▋         | 2/28 [00:05<01:14,  2.87s/it]epoch 0 loss 5.01822:  11%|█         | 3/28 [00:05<00:43,  1.74s/it]epoch 0 loss 5.00159:  11%|█         | 3/28 [00:05<00:43,  1.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0071[0m
[32m  eval_f1 = 0.0015[0m
[32m  eval_mcc = -0.0033[0m
[32m  eval_precision = 0.0067[0m
[32m  eval_recall = 0.0136[0m
[32m  ********************[0m
[32m  Best f1:0.0015[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.00159:  14%|█▍        | 4/28 [00:10<01:13,  3.05s/it]epoch 0 loss 4.98155:  14%|█▍        | 4/28 [00:10<01:13,  3.05s/it]epoch 0 loss 4.98155:  18%|█▊        | 5/28 [00:10<00:48,  2.10s/it]epoch 0 loss 4.95636:  18%|█▊        | 5/28 [00:11<00:48,  2.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0207[0m
[32m  eval_f1 = 0.0032[0m
[32m  eval_mcc = -0.0025[0m
[32m  eval_precision = 0.0079[0m
[32m  eval_recall = 0.008[0m
[32m  ********************[0m
[32m  Best f1:0.0032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.95636:  21%|██▏       | 6/28 [00:15<01:05,  2.98s/it]epoch 0 loss 4.92065:  21%|██▏       | 6/28 [00:16<01:05,  2.98s/it]epoch 0 loss 4.92065:  25%|██▌       | 7/28 [00:16<00:44,  2.14s/it]epoch 0 loss 4.88275:  25%|██▌       | 7/28 [00:16<00:44,  2.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0391[0m
[32m  eval_f1 = 0.0052[0m
[32m  eval_mcc = -0.0031[0m
[32m  eval_precision = 0.0088[0m
[32m  eval_recall = 0.0121[0m
[32m  ********************[0m
[32m  Best f1:0.0052[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 0 loss 4.88275:  29%|██▊       | 8/28 [00:21<01:01,  3.06s/it]epoch 0 loss 4.83498:  29%|██▊       | 8/28 [00:21<01:01,  3.06s/it]epoch 0 loss 4.83498:  32%|███▏      | 9/28 [00:21<00:42,  2.23s/it]epoch 0 loss 4.78342:  32%|███▏      | 9/28 [00:21<00:42,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0578[0m
[32m  eval_f1 = 0.0076[0m
[32m  eval_mcc = 0.0056[0m
[32m  eval_precision = 0.0133[0m
[32m  eval_recall = 0.0114[0m
[32m  ********************[0m
[32m  Best f1:0.0076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.78342:  36%|███▌      | 10/28 [00:27<00:59,  3.30s/it]epoch 0 loss 4.73196:  36%|███▌      | 10/28 [00:27<00:59,  3.30s/it]epoch 0 loss 4.73196:  39%|███▉      | 11/28 [00:27<00:41,  2.42s/it]epoch 0 loss 4.67299:  39%|███▉      | 11/28 [00:28<00:41,  2.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0869[0m
[32m  eval_f1 = 0.0122[0m
[32m  eval_mcc = 0.0305[0m
[32m  eval_precision = 0.0182[0m
[32m  eval_recall = 0.0164[0m
[32m  ********************[0m
[32m  Best f1:0.0122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0305[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.67299:  43%|████▎     | 12/28 [00:34<01:02,  3.90s/it]epoch 0 loss 4.6135:  43%|████▎     | 12/28 [00:35<01:02,  3.90s/it] epoch 0 loss 4.6135:  46%|████▋     | 13/28 [00:35<00:42,  2.84s/it]epoch 0 loss 4.55303:  46%|████▋     | 13/28 [00:35<00:42,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1193[0m
[32m  eval_f1 = 0.0228[0m
[32m  eval_mcc = 0.06[0m
[32m  eval_precision = 0.034[0m
[32m  eval_recall = 0.0252[0m
[32m  ********************[0m
[32m  Best f1:0.0228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.06[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.55303:  50%|█████     | 14/28 [00:41<00:55,  3.98s/it]epoch 0 loss 4.49632:  50%|█████     | 14/28 [00:42<00:55,  3.98s/it]epoch 0 loss 4.49632:  54%|█████▎    | 15/28 [00:42<00:37,  2.91s/it]epoch 0 loss 4.43725:  54%|█████▎    | 15/28 [00:42<00:37,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1592[0m
[32m  eval_f1 = 0.0299[0m
[32m  eval_mcc = 0.0984[0m
[32m  eval_precision = 0.0545[0m
[32m  eval_recall = 0.0313[0m
[32m  ********************[0m
[32m  Best f1:0.0299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0984[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.43725:  57%|█████▋    | 16/28 [00:52<01:02,  5.21s/it]epoch 0 loss 4.37868:  57%|█████▋    | 16/28 [00:53<01:02,  5.21s/it]epoch 0 loss 4.37868:  61%|██████    | 17/28 [00:53<00:41,  3.77s/it]epoch 0 loss 4.31724:  61%|██████    | 17/28 [00:53<00:41,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2123[0m
[32m  eval_f1 = 0.0374[0m
[32m  eval_mcc = 0.1545[0m
[32m  eval_precision = 0.0686[0m
[32m  eval_recall = 0.0405[0m
[32m  ********************[0m
[32m  Best f1:0.0374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.31724:  64%|██████▍   | 18/28 [01:00<00:46,  4.67s/it]epoch 0 loss 4.25642:  64%|██████▍   | 18/28 [01:00<00:46,  4.67s/it]epoch 0 loss 4.25642:  68%|██████▊   | 19/28 [01:00<00:30,  3.40s/it]epoch 0 loss 4.1988:  68%|██████▊   | 19/28 [01:00<00:30,  3.40s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.275[0m
[32m  eval_f1 = 0.0451[0m
[32m  eval_mcc = 0.2186[0m
[32m  eval_precision = 0.0695[0m
[32m  eval_recall = 0.0495[0m
[32m  ********************[0m
[32m  Best f1:0.0451[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.1988:  71%|███████▏  | 20/28 [01:09<00:41,  5.20s/it]epoch 0 loss 4.14103:  71%|███████▏  | 20/28 [01:10<00:41,  5.20s/it]epoch 0 loss 4.14103:  75%|███████▌  | 21/28 [01:10<00:26,  3.77s/it]epoch 0 loss 4.0842:  75%|███████▌  | 21/28 [01:10<00:26,  3.77s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3479[0m
[32m  eval_f1 = 0.0585[0m
[32m  eval_mcc = 0.2985[0m
[32m  eval_precision = 0.0774[0m
[32m  eval_recall = 0.0646[0m
[32m  ********************[0m
[32m  Best f1:0.0585[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2985[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.0842:  79%|███████▊  | 22/28 [01:19<00:31,  5.28s/it]epoch 0 loss 4.02861:  79%|███████▊  | 22/28 [01:19<00:31,  5.28s/it]epoch 0 loss 4.02861:  82%|████████▏ | 23/28 [01:19<00:19,  3.82s/it]epoch 0 loss 3.97839:  82%|████████▏ | 23/28 [01:19<00:19,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.378[0m
[32m  eval_f1 = 0.0845[0m
[32m  eval_mcc = 0.3383[0m
[32m  eval_precision = 0.1386[0m
[32m  eval_recall = 0.0844[0m
[32m  ********************[0m
[32m  Best f1:0.0845[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3383[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.97839:  86%|████████▌ | 24/28 [01:29<00:23,  5.79s/it]epoch 0 loss 3.92408:  86%|████████▌ | 24/28 [01:30<00:23,  5.79s/it]epoch 0 loss 3.92408:  89%|████████▉ | 25/28 [01:30<00:12,  4.18s/it]epoch 0 loss 3.87624:  89%|████████▉ | 25/28 [01:30<00:12,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4176[0m
[32m  eval_f1 = 0.1248[0m
[32m  eval_mcc = 0.3879[0m
[32m  eval_precision = 0.1982[0m
[32m  eval_recall = 0.1161[0m
[32m  ********************[0m
[32m  Best f1:0.1248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.87624:  93%|█████████▎| 26/28 [01:37<00:09,  4.99s/it]epoch 0 loss 3.82489:  93%|█████████▎| 26/28 [01:37<00:09,  4.99s/it]epoch 0 loss 3.82489:  96%|█████████▋| 27/28 [01:37<00:03,  3.62s/it]epoch 0 loss 3.77508:  96%|█████████▋| 27/28 [01:37<00:03,  3.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4599[0m
[32m  eval_f1 = 0.1473[0m
[32m  eval_mcc = 0.435[0m
[32m  eval_precision = 0.2018[0m
[32m  eval_recall = 0.1376[0m
[32m  ********************[0m
[32m  Best f1:0.1473[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.77508: 100%|██████████| 28/28 [01:43<00:00,  4.27s/it]epoch 0 loss 3.77508: 100%|██████████| 28/28 [01:43<00:00,  3.69s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.5076:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.5076:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 1 loss 2.41462:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5105[0m
[32m  eval_f1 = 0.1714[0m
[32m  eval_mcc = 0.4847[0m
[32m  eval_precision = 0.2241[0m
[32m  eval_recall = 0.1638[0m
[32m  ********************[0m
[32m  Best f1:0.1714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.41462:   7%|▋         | 2/28 [00:08<02:12,  5.10s/it]epoch 1 loss 2.36552:   7%|▋         | 2/28 [00:09<02:12,  5.10s/it]epoch 1 loss 2.36552:  11%|█         | 3/28 [00:09<01:14,  2.96s/it]epoch 1 loss 2.32621:  11%|█         | 3/28 [00:09<01:14,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.542[0m
[32m  eval_f1 = 0.1847[0m
[32m  eval_mcc = 0.5141[0m
[32m  eval_precision = 0.2299[0m
[32m  eval_recall = 0.1831[0m
[32m  ********************[0m
[32m  Best f1:0.1847[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5141[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32621:  14%|█▍        | 4/28 [00:20<02:26,  6.12s/it]epoch 1 loss 2.28349:  14%|█▍        | 4/28 [00:20<02:26,  6.12s/it]epoch 1 loss 2.28349:  18%|█▊        | 5/28 [00:20<01:33,  4.06s/it]epoch 1 loss 2.22252:  18%|█▊        | 5/28 [00:21<01:33,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5631[0m
[32m  eval_f1 = 0.1933[0m
[32m  eval_mcc = 0.5353[0m
[32m  eval_precision = 0.2339[0m
[32m  eval_recall = 0.1908[0m
[32m  ********************[0m
[32m  Best f1:0.1933[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.22252:  21%|██▏       | 6/28 [00:29<02:03,  5.62s/it]epoch 1 loss 2.19088:  21%|██▏       | 6/28 [00:29<02:03,  5.62s/it]epoch 1 loss 2.19088:  25%|██▌       | 7/28 [00:29<01:22,  3.92s/it]epoch 1 loss 2.14758:  25%|██▌       | 7/28 [00:30<01:22,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5753[0m
[32m  eval_f1 = 0.1986[0m
[32m  eval_mcc = 0.549[0m
[32m  eval_precision = 0.2631[0m
[32m  eval_recall = 0.1931[0m
[32m  ********************[0m
[32m  Best f1:0.1986[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.549[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.14758:  29%|██▊       | 8/28 [00:40<02:03,  6.20s/it]epoch 1 loss 2.12379:  29%|██▊       | 8/28 [00:41<02:03,  6.20s/it]epoch 1 loss 2.12379:  32%|███▏      | 9/28 [00:41<01:23,  4.39s/it]epoch 1 loss 2.07973:  32%|███▏      | 9/28 [00:41<01:23,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.582[0m
[32m  eval_f1 = 0.2089[0m
[32m  eval_mcc = 0.5578[0m
[32m  eval_precision = 0.2974[0m
[32m  eval_recall = 0.1982[0m
[32m  ********************[0m
[32m  Best f1:0.2089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5578[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.07973:  36%|███▌      | 10/28 [00:52<01:55,  6.41s/it]epoch 1 loss 2.05326:  36%|███▌      | 10/28 [00:52<01:55,  6.41s/it]epoch 1 loss 2.05326:  39%|███▉      | 11/28 [00:52<01:17,  4.58s/it]epoch 1 loss 2.02527:  39%|███▉      | 11/28 [00:52<01:17,  4.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5857[0m
[32m  eval_f1 = 0.2181[0m
[32m  eval_mcc = 0.5639[0m
[32m  eval_precision = 0.286[0m
[32m  eval_recall = 0.2042[0m
[32m  ********************[0m
[32m  Best f1:0.2181[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02527:  43%|████▎     | 12/28 [01:03<01:43,  6.49s/it]epoch 1 loss 2.00107:  43%|████▎     | 12/28 [01:03<01:43,  6.49s/it]epoch 1 loss 2.00107:  46%|████▋     | 13/28 [01:03<01:09,  4.65s/it]epoch 1 loss 1.98271:  46%|████▋     | 13/28 [01:04<01:09,  4.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5902[0m
[32m  eval_f1 = 0.2252[0m
[32m  eval_mcc = 0.5696[0m
[32m  eval_precision = 0.2907[0m
[32m  eval_recall = 0.2109[0m
[32m  ********************[0m
[32m  Best f1:0.2252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5696[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98271:  50%|█████     | 14/28 [01:14<01:29,  6.37s/it]epoch 1 loss 1.96574:  50%|█████     | 14/28 [01:14<01:29,  6.37s/it]epoch 1 loss 1.96574:  54%|█████▎    | 15/28 [01:14<00:59,  4.57s/it]epoch 1 loss 1.94555:  54%|█████▎    | 15/28 [01:14<00:59,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5936[0m
[32m  eval_f1 = 0.2308[0m
[32m  eval_mcc = 0.5723[0m
[32m  eval_precision = 0.3005[0m
[32m  eval_recall = 0.217[0m
[32m  ********************[0m
[32m  Best f1:0.2308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5723[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94555:  57%|█████▋    | 16/28 [01:24<01:15,  6.33s/it]epoch 1 loss 1.92362:  57%|█████▋    | 16/28 [01:25<01:15,  6.33s/it]epoch 1 loss 1.92362:  61%|██████    | 17/28 [01:25<00:50,  4.55s/it]epoch 1 loss 1.90731:  61%|██████    | 17/28 [01:25<00:50,  4.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5996[0m
[32m  eval_f1 = 0.2465[0m
[32m  eval_mcc = 0.5784[0m
[32m  eval_precision = 0.3341[0m
[32m  eval_recall = 0.2309[0m
[32m  ********************[0m
[32m  Best f1:0.2465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90731:  64%|██████▍   | 18/28 [01:35<01:02,  6.24s/it]epoch 1 loss 1.8868:  64%|██████▍   | 18/28 [01:35<01:02,  6.24s/it] epoch 1 loss 1.8868:  68%|██████▊   | 19/28 [01:35<00:40,  4.50s/it]epoch 1 loss 1.87906:  68%|██████▊   | 19/28 [01:36<00:40,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6046[0m
[32m  eval_f1 = 0.2522[0m
[32m  eval_mcc = 0.5833[0m
[32m  eval_precision = 0.3395[0m
[32m  eval_recall = 0.2378[0m
[32m  ********************[0m
[32m  Best f1:0.2522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5833[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87906:  71%|███████▏  | 20/28 [01:44<00:45,  5.66s/it]epoch 1 loss 1.86875:  71%|███████▏  | 20/28 [01:44<00:45,  5.66s/it]epoch 1 loss 1.86875:  75%|███████▌  | 21/28 [01:44<00:28,  4.08s/it]epoch 1 loss 1.86349:  75%|███████▌  | 21/28 [01:45<00:28,  4.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6127[0m
[32m  eval_f1 = 0.2606[0m
[32m  eval_mcc = 0.5914[0m
[32m  eval_precision = 0.352[0m
[32m  eval_recall = 0.2443[0m
[32m  ********************[0m
[32m  Best f1:0.2606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5914[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.86349:  79%|███████▊  | 22/28 [01:55<00:35,  6.00s/it]epoch 1 loss 1.85651:  79%|███████▊  | 22/28 [01:55<00:35,  6.00s/it]epoch 1 loss 1.85651:  82%|████████▏ | 23/28 [01:55<00:21,  4.33s/it]epoch 1 loss 1.8491:  82%|████████▏ | 23/28 [01:56<00:21,  4.33s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6163[0m
[32m  eval_f1 = 0.2691[0m
[32m  eval_mcc = 0.5944[0m
[32m  eval_precision = 0.3697[0m
[32m  eval_recall = 0.2524[0m
[32m  ********************[0m
[32m  Best f1:0.2691[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5944[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.8491:  86%|████████▌ | 24/28 [02:02<00:20,  5.13s/it]epoch 1 loss 1.83622:  86%|████████▌ | 24/28 [02:03<00:20,  5.13s/it]epoch 1 loss 1.83622:  89%|████████▉ | 25/28 [02:03<00:11,  3.72s/it]epoch 1 loss 1.81868:  89%|████████▉ | 25/28 [02:03<00:11,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6166[0m
[32m  eval_f1 = 0.2739[0m
[32m  eval_mcc = 0.5948[0m
[32m  eval_precision = 0.3668[0m
[32m  eval_recall = 0.2561[0m
[32m  ********************[0m
[32m  Best f1:0.2739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5948[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.81868:  93%|█████████▎| 26/28 [02:10<00:09,  4.96s/it]epoch 1 loss 1.80568:  93%|█████████▎| 26/28 [02:11<00:09,  4.96s/it]epoch 1 loss 1.80568:  96%|█████████▋| 27/28 [02:11<00:03,  3.60s/it]epoch 1 loss 1.79309:  96%|█████████▋| 27/28 [02:11<00:03,  3.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6199[0m
[32m  eval_f1 = 0.2829[0m
[32m  eval_mcc = 0.5983[0m
[32m  eval_precision = 0.3902[0m
[32m  eval_recall = 0.2623[0m
[32m  ********************[0m
[32m  Best f1:0.2829[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.79309: 100%|██████████| 28/28 [02:20<00:00,  5.19s/it]epoch 1 loss 1.79309: 100%|██████████| 28/28 [02:20<00:00,  5.01s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.45926:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.45926:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.43244:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6235[0m
[32m  eval_f1 = 0.3042[0m
[32m  eval_mcc = 0.602[0m
[32m  eval_precision = 0.4132[0m
[32m  eval_recall = 0.2825[0m
[32m  ********************[0m
[32m  Best f1:0.3042[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.602[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43244:   7%|▋         | 2/28 [00:06<01:37,  3.77s/it]epoch 2 loss 1.4615:   7%|▋         | 2/28 [00:06<01:37,  3.77s/it] epoch 2 loss 1.4615:  11%|█         | 3/28 [00:06<00:55,  2.24s/it]epoch 2 loss 1.44984:  11%|█         | 3/28 [00:07<00:55,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6286[0m
[32m  eval_f1 = 0.3135[0m
[32m  eval_mcc = 0.6078[0m
[32m  eval_precision = 0.4157[0m
[32m  eval_recall = 0.2892[0m
[32m  ********************[0m
[32m  Best f1:0.3135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6078[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.44984:  14%|█▍        | 4/28 [00:14<01:48,  4.53s/it]epoch 2 loss 1.45399:  14%|█▍        | 4/28 [00:15<01:48,  4.53s/it]epoch 2 loss 1.45399:  18%|█▊        | 5/28 [00:15<01:10,  3.04s/it]epoch 2 loss 1.43241:  18%|█▊        | 5/28 [00:15<01:10,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6323[0m
[32m  eval_f1 = 0.316[0m
[32m  eval_mcc = 0.612[0m
[32m  eval_precision = 0.4211[0m
[32m  eval_recall = 0.2907[0m
[32m  ********************[0m
[32m  Best f1:0.316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.43241:  21%|██▏       | 6/28 [00:21<01:30,  4.10s/it]epoch 2 loss 1.43223:  21%|██▏       | 6/28 [00:21<01:30,  4.10s/it]epoch 2 loss 1.43223:  25%|██▌       | 7/28 [00:21<01:00,  2.90s/it]epoch 2 loss 1.4407:  25%|██▌       | 7/28 [00:22<01:00,  2.90s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6328[0m
[32m  eval_f1 = 0.3191[0m
[32m  eval_mcc = 0.6123[0m
[32m  eval_precision = 0.4195[0m
[32m  eval_recall = 0.2944[0m
[32m  ********************[0m
[32m  Best f1:0.3191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.4407:  29%|██▊       | 8/28 [00:32<01:44,  5.21s/it]epoch 2 loss 1.42742:  29%|██▊       | 8/28 [00:32<01:44,  5.21s/it]epoch 2 loss 1.42742:  32%|███▏      | 9/28 [00:32<01:10,  3.71s/it]epoch 2 loss 1.41427:  32%|███▏      | 9/28 [00:32<01:10,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6337[0m
[32m  eval_f1 = 0.3189[0m
[32m  eval_mcc = 0.6129[0m
[32m  eval_precision = 0.4201[0m
[32m  eval_recall = 0.2946[0m
[32m  ********************[0m
[32m  Best MCC:0.6129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41427:  36%|███▌      | 10/28 [00:37<01:13,  4.10s/it]epoch 2 loss 1.41409:  36%|███▌      | 10/28 [00:37<01:13,  4.10s/it]epoch 2 loss 1.41409:  39%|███▉      | 11/28 [00:37<00:50,  2.97s/it]epoch 2 loss 1.41528:  39%|███▉      | 11/28 [00:38<00:50,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6357[0m
[32m  eval_f1 = 0.3207[0m
[32m  eval_mcc = 0.6149[0m
[32m  eval_precision = 0.4166[0m
[32m  eval_recall = 0.2964[0m
[32m  ********************[0m
[32m  Best f1:0.3207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6149[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41528:  43%|████▎     | 12/28 [00:45<01:12,  4.52s/it]epoch 2 loss 1.419:  43%|████▎     | 12/28 [00:46<01:12,  4.52s/it]  epoch 2 loss 1.419:  46%|████▋     | 13/28 [00:46<00:49,  3.28s/it]epoch 2 loss 1.40905:  46%|████▋     | 13/28 [00:46<00:49,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6386[0m
[32m  eval_f1 = 0.3228[0m
[32m  eval_mcc = 0.6175[0m
[32m  eval_precision = 0.4257[0m
[32m  eval_recall = 0.299[0m
[32m  ********************[0m
[32m  Best f1:0.3228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6175[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40905:  50%|█████     | 14/28 [00:57<01:17,  5.57s/it]epoch 2 loss 1.40588:  50%|█████     | 14/28 [00:57<01:17,  5.57s/it]epoch 2 loss 1.40588:  54%|█████▎    | 15/28 [00:57<00:52,  4.02s/it]epoch 2 loss 1.40567:  54%|█████▎    | 15/28 [00:58<00:52,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6407[0m
[32m  eval_f1 = 0.3246[0m
[32m  eval_mcc = 0.6198[0m
[32m  eval_precision = 0.4235[0m
[32m  eval_recall = 0.302[0m
[32m  ********************[0m
[32m  Best f1:0.3246[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40567:  57%|█████▋    | 16/28 [01:08<01:11,  5.93s/it]epoch 2 loss 1.41164:  57%|█████▋    | 16/28 [01:08<01:11,  5.93s/it]epoch 2 loss 1.41164:  61%|██████    | 17/28 [01:08<00:47,  4.28s/it]epoch 2 loss 1.41832:  61%|██████    | 17/28 [01:08<00:47,  4.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6437[0m
[32m  eval_f1 = 0.3271[0m
[32m  eval_mcc = 0.6232[0m
[32m  eval_precision = 0.4178[0m
[32m  eval_recall = 0.3056[0m
[32m  ********************[0m
[32m  Best f1:0.3271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41832:  64%|██████▍   | 18/28 [01:19<01:01,  6.15s/it]epoch 2 loss 1.41467:  64%|██████▍   | 18/28 [01:19<01:01,  6.15s/it]epoch 2 loss 1.41467:  68%|██████▊   | 19/28 [01:19<00:39,  4.43s/it]epoch 2 loss 1.41506:  68%|██████▊   | 19/28 [01:19<00:39,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.646[0m
[32m  eval_f1 = 0.3286[0m
[32m  eval_mcc = 0.6262[0m
[32m  eval_precision = 0.4163[0m
[32m  eval_recall = 0.3072[0m
[32m  ********************[0m
[32m  Best f1:0.3286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.41506:  71%|███████▏  | 20/28 [01:29<00:50,  6.26s/it]epoch 2 loss 1.41123:  71%|███████▏  | 20/28 [01:30<00:50,  6.26s/it]epoch 2 loss 1.41123:  75%|███████▌  | 21/28 [01:30<00:31,  4.51s/it]epoch 2 loss 1.40821:  75%|███████▌  | 21/28 [01:30<00:31,  4.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6457[0m
[32m  eval_f1 = 0.3287[0m
[32m  eval_mcc = 0.6268[0m
[32m  eval_precision = 0.4199[0m
[32m  eval_recall = 0.3051[0m
[32m  ********************[0m
[32m  Best f1:0.3287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6268[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40821:  79%|███████▊  | 22/28 [01:37<00:31,  5.33s/it]epoch 2 loss 1.40534:  79%|███████▊  | 22/28 [01:38<00:31,  5.33s/it]epoch 2 loss 1.40534:  82%|████████▏ | 23/28 [01:38<00:19,  3.86s/it]epoch 2 loss 1.40369:  82%|████████▏ | 23/28 [01:38<00:19,  3.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6455[0m
[32m  eval_f1 = 0.3294[0m
[32m  eval_mcc = 0.6269[0m
[32m  eval_precision = 0.4236[0m
[32m  eval_recall = 0.3048[0m
[32m  ********************[0m
[32m  Best f1:0.3294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40369:  86%|████████▌ | 24/28 [01:48<00:23,  5.83s/it]epoch 2 loss 1.40322:  86%|████████▌ | 24/28 [01:48<00:23,  5.83s/it]epoch 2 loss 1.40322:  89%|████████▉ | 25/28 [01:48<00:12,  4.20s/it]epoch 2 loss 1.40745:  89%|████████▉ | 25/28 [01:49<00:12,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.646[0m
[32m  eval_f1 = 0.3335[0m
[32m  eval_mcc = 0.6273[0m
[32m  eval_precision = 0.4594[0m
[32m  eval_recall = 0.3075[0m
[32m  ********************[0m
[32m  Best f1:0.3335[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.40745:  93%|█████████▎| 26/28 [01:55<00:10,  5.06s/it]epoch 2 loss 1.40515:  93%|█████████▎| 26/28 [01:56<00:10,  5.06s/it]epoch 2 loss 1.40515:  96%|█████████▋| 27/28 [01:56<00:03,  3.67s/it]epoch 2 loss 1.39836:  96%|█████████▋| 27/28 [01:56<00:03,  3.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6481[0m
[32m  eval_f1 = 0.3446[0m
[32m  eval_mcc = 0.6295[0m
[32m  eval_precision = 0.4783[0m
[32m  eval_recall = 0.3155[0m
[32m  ********************[0m
[32m  Best f1:0.3446[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6295[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.39836: 100%|██████████| 28/28 [02:06<00:00,  5.61s/it]epoch 2 loss 1.39836: 100%|██████████| 28/28 [02:06<00:00,  4.52s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.26015:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.26015:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 3 loss 1.27286:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6508[0m
[32m  eval_f1 = 0.3468[0m
[32m  eval_mcc = 0.632[0m
[32m  eval_precision = 0.466[0m
[32m  eval_recall = 0.318[0m
[32m  ********************[0m
[32m  Best f1:0.3468[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.632[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.27286:   7%|▋         | 2/28 [00:09<02:19,  5.36s/it]epoch 3 loss 1.25361:   7%|▋         | 2/28 [00:09<02:19,  5.36s/it]epoch 3 loss 1.25361:  11%|█         | 3/28 [00:09<01:17,  3.11s/it]epoch 3 loss 1.24624:  11%|█         | 3/28 [00:10<01:17,  3.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6525[0m
[32m  eval_f1 = 0.3469[0m
[32m  eval_mcc = 0.6333[0m
[32m  eval_precision = 0.4605[0m
[32m  eval_recall = 0.319[0m
[32m  ********************[0m
[32m  Best f1:0.3469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24624:  14%|█▍        | 4/28 [00:20<02:25,  6.05s/it]epoch 3 loss 1.25697:  14%|█▍        | 4/28 [00:20<02:25,  6.05s/it]epoch 3 loss 1.25697:  18%|█▊        | 5/28 [00:20<01:32,  4.02s/it]epoch 3 loss 1.28278:  18%|█▊        | 5/28 [00:21<01:32,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6538[0m
[32m  eval_f1 = 0.3501[0m
[32m  eval_mcc = 0.6344[0m
[32m  eval_precision = 0.4608[0m
[32m  eval_recall = 0.3214[0m
[32m  ********************[0m
[32m  Best f1:0.3501[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.28278:  21%|██▏       | 6/28 [00:31<02:16,  6.23s/it]epoch 3 loss 1.31594:  21%|██▏       | 6/28 [00:31<02:16,  6.23s/it]epoch 3 loss 1.31594:  25%|██▌       | 7/28 [00:31<01:30,  4.33s/it]epoch 3 loss 1.31502:  25%|██▌       | 7/28 [00:31<01:30,  4.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6548[0m
[32m  eval_f1 = 0.3565[0m
[32m  eval_mcc = 0.6352[0m
[32m  eval_precision = 0.4688[0m
[32m  eval_recall = 0.3271[0m
[32m  ********************[0m
[32m  Best f1:0.3565[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.31502:  29%|██▊       | 8/28 [00:40<01:57,  5.89s/it]epoch 3 loss 1.31222:  29%|██▊       | 8/28 [00:41<01:57,  5.89s/it]epoch 3 loss 1.31222:  32%|███▏      | 9/28 [00:41<01:19,  4.18s/it]epoch 3 loss 1.30295:  32%|███▏      | 9/28 [00:41<01:19,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6558[0m
[32m  eval_f1 = 0.3589[0m
[32m  eval_mcc = 0.636[0m
[32m  eval_precision = 0.4772[0m
[32m  eval_recall = 0.3297[0m
[32m  ********************[0m
[32m  Best f1:0.3589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.636[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30295:  36%|███▌      | 10/28 [00:51<01:50,  6.14s/it]epoch 3 loss 1.31029:  36%|███▌      | 10/28 [00:52<01:50,  6.14s/it]epoch 3 loss 1.31029:  39%|███▉      | 11/28 [00:52<01:14,  4.39s/it]epoch 3 loss 1.32247:  39%|███▉      | 11/28 [00:52<01:14,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3593[0m
[32m  eval_mcc = 0.6354[0m
[32m  eval_precision = 0.4758[0m
[32m  eval_recall = 0.3303[0m
[32m  ********************[0m
[32m  Best f1:0.3593[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.32247:  43%|████▎     | 12/28 [00:57<01:13,  4.62s/it]epoch 3 loss 1.31701:  43%|████▎     | 12/28 [00:57<01:13,  4.62s/it]epoch 3 loss 1.31701:  46%|████▋     | 13/28 [00:57<00:50,  3.34s/it]epoch 3 loss 1.30791:  46%|████▋     | 13/28 [00:58<00:50,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6551[0m
[32m  eval_f1 = 0.3595[0m
[32m  eval_mcc = 0.6356[0m
[32m  eval_precision = 0.475[0m
[32m  eval_recall = 0.3299[0m
[32m  ********************[0m
[32m  Best f1:0.3595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.30791:  50%|█████     | 14/28 [01:05<01:04,  4.58s/it]epoch 3 loss 1.30792:  50%|█████     | 14/28 [01:05<01:04,  4.58s/it]epoch 3 loss 1.30792:  54%|█████▎    | 15/28 [01:05<00:43,  3.33s/it]epoch 3 loss 1.30276:  54%|█████▎    | 15/28 [01:06<00:43,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6544[0m
[32m  eval_f1 = 0.3595[0m
[32m  eval_mcc = 0.6352[0m
[32m  eval_precision = 0.4862[0m
[32m  eval_recall = 0.3289[0m
[32m  ********************[0m
[32m  Best f1:0.3595[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.30276:  57%|█████▋    | 16/28 [01:10<00:45,  3.82s/it]epoch 3 loss 1.30131:  57%|█████▋    | 16/28 [01:10<00:45,  3.82s/it]epoch 3 loss 1.30131:  61%|██████    | 17/28 [01:10<00:30,  2.80s/it]epoch 3 loss 1.30296:  61%|██████    | 17/28 [01:11<00:30,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6548[0m
[32m  eval_f1 = 0.3576[0m
[32m  eval_mcc = 0.6358[0m
[32m  eval_precision = 0.4861[0m
[32m  eval_recall = 0.3279[0m

epoch 3 loss 1.30296:  64%|██████▍   | 18/28 [01:14<00:30,  3.09s/it]epoch 3 loss 1.30141:  64%|██████▍   | 18/28 [01:15<00:30,  3.09s/it]epoch 3 loss 1.30141:  68%|██████▊   | 19/28 [01:15<00:20,  2.28s/it]epoch 3 loss 1.29873:  68%|██████▊   | 19/28 [01:15<00:20,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6563[0m
[32m  eval_f1 = 0.3585[0m
[32m  eval_mcc = 0.6375[0m
[32m  eval_precision = 0.4873[0m
[32m  eval_recall = 0.329[0m
[32m  ********************[0m
[32m  Best MCC:0.6375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29873:  71%|███████▏  | 20/28 [01:20<00:24,  3.09s/it]epoch 3 loss 1.29559:  71%|███████▏  | 20/28 [01:20<00:24,  3.09s/it]epoch 3 loss 1.29559:  75%|███████▌  | 21/28 [01:20<00:15,  2.28s/it]epoch 3 loss 1.3016:  75%|███████▌  | 21/28 [01:20<00:15,  2.28s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6573[0m
[32m  eval_f1 = 0.3605[0m
[32m  eval_mcc = 0.639[0m
[32m  eval_precision = 0.4892[0m
[32m  eval_recall = 0.3305[0m
[32m  ********************[0m
[32m  Best f1:0.3605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.639[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3016:  79%|███████▊  | 22/28 [01:26<00:20,  3.41s/it]epoch 3 loss 1.30322:  79%|███████▊  | 22/28 [01:26<00:20,  3.41s/it]epoch 3 loss 1.30322:  82%|████████▏ | 23/28 [01:26<00:12,  2.51s/it]epoch 3 loss 1.3053:  82%|████████▏ | 23/28 [01:27<00:12,  2.51s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6584[0m
[32m  eval_f1 = 0.3629[0m
[32m  eval_mcc = 0.6402[0m
[32m  eval_precision = 0.4902[0m
[32m  eval_recall = 0.3325[0m
[32m  ********************[0m
[32m  Best f1:0.3629[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3053:  86%|████████▌ | 24/28 [01:33<00:14,  3.57s/it]epoch 3 loss 1.30509:  86%|████████▌ | 24/28 [01:33<00:14,  3.57s/it]epoch 3 loss 1.30509:  89%|████████▉ | 25/28 [01:33<00:07,  2.62s/it]epoch 3 loss 1.30693:  89%|████████▉ | 25/28 [01:33<00:07,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6606[0m
[32m  eval_f1 = 0.3643[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.4911[0m
[32m  eval_recall = 0.3343[0m
[32m  ********************[0m
[32m  Best f1:0.3643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6424[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.30693:  93%|█████████▎| 26/28 [01:42<00:09,  4.52s/it]epoch 3 loss 1.30382:  93%|█████████▎| 26/28 [01:42<00:09,  4.52s/it]epoch 3 loss 1.30382:  96%|█████████▋| 27/28 [01:42<00:03,  3.29s/it]epoch 3 loss 1.29684:  96%|█████████▋| 27/28 [01:43<00:03,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6617[0m
[32m  eval_f1 = 0.3648[0m
[32m  eval_mcc = 0.6432[0m
[32m  eval_precision = 0.4911[0m
[32m  eval_recall = 0.335[0m
[32m  ********************[0m
[32m  Best f1:0.3648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.29684: 100%|██████████| 28/28 [01:48<00:00,  4.05s/it]epoch 3 loss 1.29684: 100%|██████████| 28/28 [01:48<00:00,  3.88s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.38186:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.38186:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.31158:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6629[0m
[32m  eval_f1 = 0.3686[0m
[32m  eval_mcc = 0.6441[0m
[32m  eval_precision = 0.5011[0m
[32m  eval_recall = 0.3373[0m
[32m  ********************[0m
[32m  Best f1:0.3686[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.31158:   7%|▋         | 2/28 [00:10<02:37,  6.06s/it]epoch 4 loss 1.32007:   7%|▋         | 2/28 [00:10<02:37,  6.06s/it]epoch 4 loss 1.32007:  11%|█         | 3/28 [00:10<01:27,  3.48s/it]epoch 4 loss 1.31763:  11%|█         | 3/28 [00:11<01:27,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6624[0m
[32m  eval_f1 = 0.369[0m
[32m  eval_mcc = 0.6433[0m
[32m  eval_precision = 0.5015[0m
[32m  eval_recall = 0.3373[0m
[32m  ********************[0m
[32m  Best f1:0.369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.31763:  14%|█▍        | 4/28 [00:15<01:37,  4.06s/it]epoch 4 loss 1.28262:  14%|█▍        | 4/28 [00:16<01:37,  4.06s/it]epoch 4 loss 1.28262:  18%|█▊        | 5/28 [00:16<01:03,  2.74s/it]epoch 4 loss 1.2731:  18%|█▊        | 5/28 [00:16<01:03,  2.74s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6619[0m
[32m  eval_f1 = 0.3692[0m
[32m  eval_mcc = 0.6428[0m
[32m  eval_precision = 0.5046[0m
[32m  eval_recall = 0.3371[0m
[32m  ********************[0m
[32m  Best f1:0.3692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.2731:  21%|██▏       | 6/28 [00:21<01:16,  3.50s/it]epoch 4 loss 1.28774:  21%|██▏       | 6/28 [00:21<01:16,  3.50s/it]epoch 4 loss 1.28774:  25%|██▌       | 7/28 [00:21<00:52,  2.48s/it]epoch 4 loss 1.28029:  25%|██▌       | 7/28 [00:21<00:52,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6616[0m
[32m  eval_f1 = 0.3694[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.5052[0m
[32m  eval_recall = 0.3374[0m
[32m  ********************[0m
[32m  Best f1:0.3694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.28029:  29%|██▊       | 8/28 [00:26<01:03,  3.18s/it]epoch 4 loss 1.27779:  29%|██▊       | 8/28 [00:26<01:03,  3.18s/it]epoch 4 loss 1.27779:  32%|███▏      | 9/28 [00:26<00:44,  2.32s/it]epoch 4 loss 1.27871:  32%|███▏      | 9/28 [00:27<00:44,  2.32s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6616[0m
[32m  eval_f1 = 0.3697[0m
[32m  eval_mcc = 0.6425[0m
[32m  eval_precision = 0.5041[0m
[32m  eval_recall = 0.3377[0m
[32m  ********************[0m
[32m  Best f1:0.3697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27871:  36%|███▌      | 10/28 [00:31<00:56,  3.13s/it]epoch 4 loss 1.28917:  36%|███▌      | 10/28 [00:32<00:56,  3.13s/it]epoch 4 loss 1.28917:  39%|███▉      | 11/28 [00:32<00:39,  2.30s/it]epoch 4 loss 1.28463:  39%|███▉      | 11/28 [00:32<00:39,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6614[0m
[32m  eval_f1 = 0.37[0m
[32m  eval_mcc = 0.6424[0m
[32m  eval_precision = 0.5036[0m
[32m  eval_recall = 0.3381[0m
[32m  ********************[0m
[32m  Best f1:0.37[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.28463:  43%|████▎     | 12/28 [00:36<00:49,  3.06s/it]epoch 4 loss 1.28265:  43%|████▎     | 12/28 [00:37<00:49,  3.06s/it]epoch 4 loss 1.28265:  46%|████▋     | 13/28 [00:37<00:33,  2.26s/it]epoch 4 loss 1.27458:  46%|████▋     | 13/28 [00:37<00:33,  2.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6616[0m
[32m  eval_f1 = 0.3704[0m
[32m  eval_mcc = 0.6427[0m
[32m  eval_precision = 0.5029[0m
[32m  eval_recall = 0.3387[0m
[32m  ********************[0m
[32m  Best f1:0.3704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27458:  50%|█████     | 14/28 [00:41<00:41,  2.99s/it]epoch 4 loss 1.27382:  50%|█████     | 14/28 [00:42<00:41,  2.99s/it]epoch 4 loss 1.27382:  54%|█████▎    | 15/28 [00:42<00:28,  2.21s/it]epoch 4 loss 1.27598:  54%|█████▎    | 15/28 [00:42<00:28,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6624[0m
[32m  eval_f1 = 0.3707[0m
[32m  eval_mcc = 0.6436[0m
[32m  eval_precision = 0.5022[0m
[32m  eval_recall = 0.3393[0m
[32m  ********************[0m
[32m  Best f1:0.3707[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.27598:  57%|█████▋    | 16/28 [00:47<00:36,  3.04s/it]epoch 4 loss 1.27484:  57%|█████▋    | 16/28 [00:47<00:36,  3.04s/it]epoch 4 loss 1.27484:  61%|██████    | 17/28 [00:47<00:24,  2.24s/it]epoch 4 loss 1.26793:  61%|██████    | 17/28 [00:48<00:24,  2.24s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6627[0m
[32m  eval_f1 = 0.371[0m
[32m  eval_mcc = 0.6439[0m
[32m  eval_precision = 0.5022[0m
[32m  eval_recall = 0.3398[0m
[32m  ********************[0m
[32m  Best f1:0.371[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.26793:  64%|██████▍   | 18/28 [00:52<00:30,  3.04s/it]epoch 4 loss 1.26725:  64%|██████▍   | 18/28 [00:52<00:30,  3.04s/it]epoch 4 loss 1.26725:  68%|██████▊   | 19/28 [00:52<00:20,  2.25s/it]epoch 4 loss 1.27095:  68%|██████▊   | 19/28 [00:53<00:20,  2.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.663[0m
[32m  eval_f1 = 0.3716[0m
[32m  eval_mcc = 0.6441[0m
[32m  eval_precision = 0.5023[0m
[32m  eval_recall = 0.3405[0m
[32m  ********************[0m
[32m  Best f1:0.3716[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27095:  71%|███████▏  | 20/28 [00:58<00:26,  3.28s/it]epoch 4 loss 1.26815:  71%|███████▏  | 20/28 [00:59<00:26,  3.28s/it]epoch 4 loss 1.26815:  75%|███████▌  | 21/28 [00:59<00:16,  2.43s/it]epoch 4 loss 1.27:  75%|███████▌  | 21/28 [00:59<00:16,  2.43s/it]   [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.663[0m
[32m  eval_f1 = 0.3717[0m
[32m  eval_mcc = 0.6442[0m
[32m  eval_precision = 0.5025[0m
[32m  eval_recall = 0.3407[0m
[32m  ********************[0m
[32m  Best f1:0.3717[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6442[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27:  79%|███████▊  | 22/28 [01:05<00:21,  3.55s/it]epoch 4 loss 1.26853:  79%|███████▊  | 22/28 [01:05<00:21,  3.55s/it]epoch 4 loss 1.26853:  82%|████████▏ | 23/28 [01:05<00:13,  2.61s/it]epoch 4 loss 1.27052:  82%|████████▏ | 23/28 [01:06<00:13,  2.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6633[0m
[32m  eval_f1 = 0.3719[0m
[32m  eval_mcc = 0.6445[0m
[32m  eval_precision = 0.5025[0m
[32m  eval_recall = 0.3409[0m
[32m  ********************[0m
[32m  Best f1:0.3719[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6445[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_6/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.27052:  86%|████████▌ | 24/28 [01:14<00:17,  4.40s/it]epoch 4 loss 1.26883:  86%|████████▌ | 24/28 [01:14<00:17,  4.40s/it]epoch 4 loss 1.26883:  89%|████████▉ | 25/28 [01:14<00:09,  3.21s/it]epoch 4 loss 1.26898:  89%|████████▉ | 25/28 [01:15<00:09,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6632[0m
[32m  eval_f1 = 0.3718[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.5026[0m
[32m  eval_recall = 0.3408[0m

epoch 4 loss 1.26898:  93%|█████████▎| 26/28 [01:18<00:06,  3.39s/it]epoch 4 loss 1.2689:  93%|█████████▎| 26/28 [01:18<00:06,  3.39s/it] epoch 4 loss 1.2689:  96%|█████████▋| 27/28 [01:18<00:02,  2.49s/it]epoch 4 loss 1.26431:  96%|█████████▋| 27/28 [01:19<00:02,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6633[0m
[32m  eval_f1 = 0.3718[0m
[32m  eval_mcc = 0.6445[0m
[32m  eval_precision = 0.5027[0m
[32m  eval_recall = 0.3409[0m

epoch 4 loss 1.26431: 100%|██████████| 28/28 [01:22<00:00,  2.82s/it]epoch 4 loss 1.26431: 100%|██████████| 28/28 [01:22<00:00,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6633[0m
[32m  eval_f1 = 0.3719[0m
[32m  eval_mcc = 0.6445[0m
[32m  eval_precision = 0.5025[0m
[32m  eval_recall = 0.3409[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.72it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6455[0m
[32m  eval_f1 = 0.3265[0m
[32m  eval_mcc = 0.6268[0m
[32m  eval_precision = 0.4447[0m
[32m  eval_recall = 0.3012[0m

