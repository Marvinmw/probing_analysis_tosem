[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=8, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/1/layer_8', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.15298:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.15298:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.15547:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0041[0m
[32m  eval_f1 = 0.0011[0m
[32m  eval_mcc = -0.0013[0m
[32m  eval_precision = 0.0046[0m
[32m  eval_recall = 0.0016[0m
[32m  ********************[0m
[32m  Best f1:0.0011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.15547:   7%|▋         | 2/28 [00:05<01:14,  2.88s/it]epoch 0 loss 5.15023:   7%|▋         | 2/28 [00:05<01:14,  2.88s/it]epoch 0 loss 5.15023:  11%|█         | 3/28 [00:05<00:43,  1.75s/it]epoch 0 loss 5.13244:  11%|█         | 3/28 [00:05<00:43,  1.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0082[0m
[32m  eval_f1 = 0.002[0m
[32m  eval_mcc = -0.0005[0m
[32m  eval_precision = 0.0038[0m
[32m  eval_recall = 0.003[0m
[32m  ********************[0m
[32m  Best f1:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.13244:  14%|█▍        | 4/28 [00:10<01:10,  2.94s/it]epoch 0 loss 5.10704:  14%|█▍        | 4/28 [00:10<01:10,  2.94s/it]epoch 0 loss 5.10704:  18%|█▊        | 5/28 [00:10<00:46,  2.02s/it]epoch 0 loss 5.07868:  18%|█▊        | 5/28 [00:11<00:46,  2.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0162[0m
[32m  eval_f1 = 0.0028[0m
[32m  eval_mcc = -0.0004[0m
[32m  eval_precision = 0.004[0m
[32m  eval_recall = 0.005[0m
[32m  ********************[0m
[32m  Best f1:0.0028[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m

epoch 0 loss 5.07868:  21%|██▏       | 6/28 [00:15<01:05,  2.96s/it]epoch 0 loss 5.04335:  21%|██▏       | 6/28 [00:15<01:05,  2.96s/it]epoch 0 loss 5.04335:  25%|██▌       | 7/28 [00:15<00:44,  2.13s/it]epoch 0 loss 5.00427:  25%|██▌       | 7/28 [00:16<00:44,  2.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0347[0m
[32m  eval_f1 = 0.0094[0m
[32m  eval_mcc = 0.0076[0m
[32m  eval_precision = 0.0208[0m
[32m  eval_recall = 0.014[0m
[32m  ********************[0m
[32m  Best f1:0.0094[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.00427:  29%|██▊       | 8/28 [00:21<01:03,  3.17s/it]epoch 0 loss 4.95393:  29%|██▊       | 8/28 [00:21<01:03,  3.17s/it]epoch 0 loss 4.95393:  32%|███▏      | 9/28 [00:21<00:43,  2.30s/it]epoch 0 loss 4.90006:  32%|███▏      | 9/28 [00:22<00:43,  2.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0484[0m
[32m  eval_f1 = 0.0129[0m
[32m  eval_mcc = 0.0157[0m
[32m  eval_precision = 0.0312[0m
[32m  eval_recall = 0.0189[0m
[32m  ********************[0m
[32m  Best f1:0.0129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.90006:  36%|███▌      | 10/28 [00:27<01:03,  3.51s/it]epoch 0 loss 4.84724:  36%|███▌      | 10/28 [00:28<01:03,  3.51s/it]epoch 0 loss 4.84724:  39%|███▉      | 11/28 [00:28<00:43,  2.56s/it]epoch 0 loss 4.78637:  39%|███▉      | 11/28 [00:28<00:43,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0732[0m
[32m  eval_f1 = 0.0192[0m
[32m  eval_mcc = 0.0367[0m
[32m  eval_precision = 0.0412[0m
[32m  eval_recall = 0.0245[0m
[32m  ********************[0m
[32m  Best f1:0.0192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0367[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.78637:  43%|████▎     | 12/28 [00:34<00:58,  3.66s/it]epoch 0 loss 4.72447:  43%|████▎     | 12/28 [00:34<00:58,  3.66s/it]epoch 0 loss 4.72447:  46%|████▋     | 13/28 [00:34<00:40,  2.67s/it]epoch 0 loss 4.66168:  46%|████▋     | 13/28 [00:35<00:40,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1192[0m
[32m  eval_f1 = 0.0282[0m
[32m  eval_mcc = 0.0762[0m
[32m  eval_precision = 0.0404[0m
[32m  eval_recall = 0.0323[0m
[32m  ********************[0m
[32m  Best f1:0.0282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0762[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.66168:  50%|█████     | 14/28 [00:41<00:52,  3.73s/it]epoch 0 loss 4.60192:  50%|█████     | 14/28 [00:41<00:52,  3.73s/it]epoch 0 loss 4.60192:  54%|█████▎    | 15/28 [00:41<00:35,  2.74s/it]epoch 0 loss 4.54027:  54%|█████▎    | 15/28 [00:41<00:35,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1843[0m
[32m  eval_f1 = 0.0405[0m
[32m  eval_mcc = 0.1339[0m
[32m  eval_precision = 0.0565[0m
[32m  eval_recall = 0.0422[0m
[32m  ********************[0m
[32m  Best f1:0.0405[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1339[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.54027:  57%|█████▋    | 16/28 [00:47<00:44,  3.71s/it]epoch 0 loss 4.47892:  57%|█████▋    | 16/28 [00:47<00:44,  3.71s/it]epoch 0 loss 4.47892:  61%|██████    | 17/28 [00:47<00:29,  2.72s/it]epoch 0 loss 4.41539:  61%|██████    | 17/28 [00:48<00:29,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.233[0m
[32m  eval_f1 = 0.0438[0m
[32m  eval_mcc = 0.1809[0m
[32m  eval_precision = 0.0795[0m
[32m  eval_recall = 0.0459[0m
[32m  ********************[0m
[32m  Best f1:0.0438[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1809[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.41539:  64%|██████▍   | 18/28 [00:55<00:42,  4.21s/it]epoch 0 loss 4.35189:  64%|██████▍   | 18/28 [00:55<00:42,  4.21s/it]epoch 0 loss 4.35189:  68%|██████▊   | 19/28 [00:55<00:27,  3.07s/it]epoch 0 loss 4.29232:  68%|██████▊   | 19/28 [00:56<00:27,  3.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2752[0m
[32m  eval_f1 = 0.0416[0m
[32m  eval_mcc = 0.2215[0m
[32m  eval_precision = 0.0795[0m
[32m  eval_recall = 0.0465[0m
[32m  ********************[0m
[32m  Best MCC:0.2215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.29232:  71%|███████▏  | 20/28 [01:03<00:34,  4.27s/it]epoch 0 loss 4.23242:  71%|███████▏  | 20/28 [01:03<00:34,  4.27s/it]epoch 0 loss 4.23242:  75%|███████▌  | 21/28 [01:03<00:21,  3.12s/it]epoch 0 loss 4.17398:  75%|███████▌  | 21/28 [01:03<00:21,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3206[0m
[32m  eval_f1 = 0.0508[0m
[32m  eval_mcc = 0.2674[0m
[32m  eval_precision = 0.0769[0m
[32m  eval_recall = 0.055[0m
[32m  ********************[0m
[32m  Best f1:0.0508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2674[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.17398:  79%|███████▊  | 22/28 [01:15<00:34,  5.72s/it]epoch 0 loss 4.11749:  79%|███████▊  | 22/28 [01:15<00:34,  5.72s/it]epoch 0 loss 4.11749:  82%|████████▏ | 23/28 [01:15<00:20,  4.14s/it]epoch 0 loss 4.06689:  82%|████████▏ | 23/28 [01:16<00:20,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3446[0m
[32m  eval_f1 = 0.0646[0m
[32m  eval_mcc = 0.2999[0m
[32m  eval_precision = 0.1179[0m
[32m  eval_recall = 0.0653[0m
[32m  ********************[0m
[32m  Best f1:0.0646[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2999[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.06689:  86%|████████▌ | 24/28 [01:26<00:24,  6.18s/it]epoch 0 loss 4.01261:  86%|████████▌ | 24/28 [01:27<00:24,  6.18s/it]epoch 0 loss 4.01261:  89%|████████▉ | 25/28 [01:27<00:13,  4.45s/it]epoch 0 loss 3.96513:  89%|████████▉ | 25/28 [01:27<00:13,  4.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3763[0m
[32m  eval_f1 = 0.0908[0m
[32m  eval_mcc = 0.3411[0m
[32m  eval_precision = 0.1483[0m
[32m  eval_recall = 0.0875[0m
[32m  ********************[0m
[32m  Best f1:0.0908[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3411[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.96513:  93%|█████████▎| 26/28 [01:34<00:10,  5.22s/it]epoch 0 loss 3.91417:  93%|█████████▎| 26/28 [01:34<00:10,  5.22s/it]epoch 0 loss 3.91417:  96%|█████████▋| 27/28 [01:34<00:03,  3.78s/it]epoch 0 loss 3.86481:  96%|█████████▋| 27/28 [01:34<00:03,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4368[0m
[32m  eval_f1 = 0.1324[0m
[32m  eval_mcc = 0.4097[0m
[32m  eval_precision = 0.1984[0m
[32m  eval_recall = 0.1263[0m
[32m  ********************[0m
[32m  Best f1:0.1324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4097[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.86481: 100%|██████████| 28/28 [01:44<00:00,  5.64s/it]epoch 0 loss 3.86481: 100%|██████████| 28/28 [01:44<00:00,  3.73s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.61036:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.61036:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 1 loss 2.51428:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4827[0m
[32m  eval_f1 = 0.1583[0m
[32m  eval_mcc = 0.456[0m
[32m  eval_precision = 0.2127[0m
[32m  eval_recall = 0.1507[0m
[32m  ********************[0m
[32m  Best f1:0.1583[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.456[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.51428:   7%|▋         | 2/28 [00:07<01:54,  4.39s/it]epoch 1 loss 2.46309:   7%|▋         | 2/28 [00:08<01:54,  4.39s/it]epoch 1 loss 2.46309:  11%|█         | 3/28 [00:08<01:04,  2.58s/it]epoch 1 loss 2.42286:  11%|█         | 3/28 [00:08<01:04,  2.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5295[0m
[32m  eval_f1 = 0.1813[0m
[32m  eval_mcc = 0.5012[0m
[32m  eval_precision = 0.2367[0m
[32m  eval_recall = 0.1767[0m
[32m  ********************[0m
[32m  Best f1:0.1813[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42286:  14%|█▍        | 4/28 [00:16<02:01,  5.06s/it]epoch 1 loss 2.38019:  14%|█▍        | 4/28 [00:17<02:01,  5.06s/it]epoch 1 loss 2.38019:  18%|█▊        | 5/28 [00:17<01:17,  3.39s/it]epoch 1 loss 2.32014:  18%|█▊        | 5/28 [00:17<01:17,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5497[0m
[32m  eval_f1 = 0.1907[0m
[32m  eval_mcc = 0.521[0m
[32m  eval_precision = 0.2337[0m
[32m  eval_recall = 0.1872[0m
[32m  ********************[0m
[32m  Best f1:0.1907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.521[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.32014:  21%|██▏       | 6/28 [00:26<01:54,  5.20s/it]epoch 1 loss 2.28785:  21%|██▏       | 6/28 [00:26<01:54,  5.20s/it]epoch 1 loss 2.28785:  25%|██▌       | 7/28 [00:26<01:16,  3.64s/it]epoch 1 loss 2.24437:  25%|██▌       | 7/28 [00:26<01:16,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5665[0m
[32m  eval_f1 = 0.1964[0m
[32m  eval_mcc = 0.5389[0m
[32m  eval_precision = 0.2462[0m
[32m  eval_recall = 0.1912[0m
[32m  ********************[0m
[32m  Best f1:0.1964[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5389[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.24437:  29%|██▊       | 8/28 [00:35<01:46,  5.30s/it]epoch 1 loss 2.2196:  29%|██▊       | 8/28 [00:35<01:46,  5.30s/it] epoch 1 loss 2.2196:  32%|███▏      | 9/28 [00:35<01:11,  3.78s/it]epoch 1 loss 2.17485:  32%|███▏      | 9/28 [00:36<01:11,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5742[0m
[32m  eval_f1 = 0.2001[0m
[32m  eval_mcc = 0.5479[0m
[32m  eval_precision = 0.2668[0m
[32m  eval_recall = 0.1914[0m
[32m  ********************[0m
[32m  Best f1:0.2001[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5479[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.17485:  36%|███▌      | 10/28 [00:42<01:27,  4.85s/it]epoch 1 loss 2.14797:  36%|███▌      | 10/28 [00:43<01:27,  4.85s/it]epoch 1 loss 2.14797:  39%|███▉      | 11/28 [00:43<00:59,  3.49s/it]epoch 1 loss 2.11903:  39%|███▉      | 11/28 [00:43<00:59,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5789[0m
[32m  eval_f1 = 0.2089[0m
[32m  eval_mcc = 0.5554[0m
[32m  eval_precision = 0.2705[0m
[32m  eval_recall = 0.1958[0m
[32m  ********************[0m
[32m  Best f1:0.2089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5554[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11903:  43%|████▎     | 12/28 [00:49<01:10,  4.43s/it]epoch 1 loss 2.09293:  43%|████▎     | 12/28 [00:50<01:10,  4.43s/it]epoch 1 loss 2.09293:  46%|████▋     | 13/28 [00:50<00:48,  3.21s/it]epoch 1 loss 2.0732:  46%|████▋     | 13/28 [00:50<00:48,  3.21s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5817[0m
[32m  eval_f1 = 0.2148[0m
[32m  eval_mcc = 0.5611[0m
[32m  eval_precision = 0.2797[0m
[32m  eval_recall = 0.2015[0m
[32m  ********************[0m
[32m  Best f1:0.2148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.0732:  50%|█████     | 14/28 [00:58<01:06,  4.78s/it]epoch 1 loss 2.05562:  50%|█████     | 14/28 [00:59<01:06,  4.78s/it]epoch 1 loss 2.05562:  54%|█████▎    | 15/28 [00:59<00:45,  3.47s/it]epoch 1 loss 2.03437:  54%|█████▎    | 15/28 [00:59<00:45,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5856[0m
[32m  eval_f1 = 0.2229[0m
[32m  eval_mcc = 0.5653[0m
[32m  eval_precision = 0.3092[0m
[32m  eval_recall = 0.2088[0m
[32m  ********************[0m
[32m  Best f1:0.2229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03437:  57%|█████▋    | 16/28 [01:05<00:51,  4.29s/it]epoch 1 loss 2.01126:  57%|█████▋    | 16/28 [01:05<00:51,  4.29s/it]epoch 1 loss 2.01126:  61%|██████    | 17/28 [01:05<00:34,  3.12s/it]epoch 1 loss 1.99396:  61%|██████    | 17/28 [01:06<00:34,  3.12s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.59[0m
[32m  eval_f1 = 0.2319[0m
[32m  eval_mcc = 0.5694[0m
[32m  eval_precision = 0.3108[0m
[32m  eval_recall = 0.2191[0m
[32m  ********************[0m
[32m  Best f1:0.2319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5694[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.99396:  64%|██████▍   | 18/28 [01:14<00:48,  4.82s/it]epoch 1 loss 1.97264:  64%|██████▍   | 18/28 [01:15<00:48,  4.82s/it]epoch 1 loss 1.97264:  68%|██████▊   | 19/28 [01:15<00:31,  3.50s/it]epoch 1 loss 1.96384:  68%|██████▊   | 19/28 [01:15<00:31,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.591[0m
[32m  eval_f1 = 0.2399[0m
[32m  eval_mcc = 0.5688[0m
[32m  eval_precision = 0.3269[0m
[32m  eval_recall = 0.2274[0m
[32m  ********************[0m
[32m  Best f1:0.2399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m

epoch 1 loss 1.96384:  71%|███████▏  | 20/28 [01:19<00:31,  3.94s/it]epoch 1 loss 1.95291:  71%|███████▏  | 20/28 [01:20<00:31,  3.94s/it]epoch 1 loss 1.95291:  75%|███████▌  | 21/28 [01:20<00:20,  2.88s/it]epoch 1 loss 1.94708:  75%|███████▌  | 21/28 [01:20<00:20,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5969[0m
[32m  eval_f1 = 0.2469[0m
[32m  eval_mcc = 0.5739[0m
[32m  eval_precision = 0.3539[0m
[32m  eval_recall = 0.233[0m
[32m  ********************[0m
[32m  Best f1:0.2469[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5739[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.94708:  79%|███████▊  | 22/28 [01:26<00:22,  3.82s/it]epoch 1 loss 1.93936:  79%|███████▊  | 22/28 [01:26<00:22,  3.82s/it]epoch 1 loss 1.93936:  82%|████████▏ | 23/28 [01:26<00:14,  2.80s/it]epoch 1 loss 1.93137:  82%|████████▏ | 23/28 [01:27<00:14,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6042[0m
[32m  eval_f1 = 0.2589[0m
[32m  eval_mcc = 0.5806[0m
[32m  eval_precision = 0.3493[0m
[32m  eval_recall = 0.2436[0m
[32m  ********************[0m
[32m  Best f1:0.2589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5806[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.93137:  86%|████████▌ | 24/28 [01:33<00:15,  3.84s/it]epoch 1 loss 1.91751:  86%|████████▌ | 24/28 [01:33<00:15,  3.84s/it]epoch 1 loss 1.91751:  89%|████████▉ | 25/28 [01:33<00:08,  2.81s/it]epoch 1 loss 1.89917:  89%|████████▉ | 25/28 [01:33<00:08,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6082[0m
[32m  eval_f1 = 0.2622[0m
[32m  eval_mcc = 0.5849[0m
[32m  eval_precision = 0.3464[0m
[32m  eval_recall = 0.2466[0m
[32m  ********************[0m
[32m  Best f1:0.2622[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5849[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.89917:  93%|█████████▎| 26/28 [01:39<00:07,  3.84s/it]epoch 1 loss 1.88528:  93%|█████████▎| 26/28 [01:40<00:07,  3.84s/it]epoch 1 loss 1.88528:  96%|█████████▋| 27/28 [01:40<00:02,  2.82s/it]epoch 1 loss 1.87166:  96%|█████████▋| 27/28 [01:40<00:02,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6123[0m
[32m  eval_f1 = 0.2687[0m
[32m  eval_mcc = 0.5895[0m
[32m  eval_precision = 0.3741[0m
[32m  eval_recall = 0.2514[0m
[32m  ********************[0m
[32m  Best f1:0.2687[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5895[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.87166: 100%|██████████| 28/28 [01:46<00:00,  3.72s/it]epoch 1 loss 1.87166: 100%|██████████| 28/28 [01:46<00:00,  3.79s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.51508:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.51508:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 2 loss 1.49043:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6152[0m
[32m  eval_f1 = 0.2752[0m
[32m  eval_mcc = 0.5929[0m
[32m  eval_precision = 0.3962[0m
[32m  eval_recall = 0.2555[0m
[32m  ********************[0m
[32m  Best f1:0.2752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5929[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49043:   7%|▋         | 2/28 [00:07<01:56,  4.48s/it]epoch 2 loss 1.52114:   7%|▋         | 2/28 [00:08<01:56,  4.48s/it]epoch 2 loss 1.52114:  11%|█         | 3/28 [00:08<01:05,  2.63s/it]epoch 2 loss 1.50927:  11%|█         | 3/28 [00:08<01:05,  2.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6189[0m
[32m  eval_f1 = 0.2892[0m
[32m  eval_mcc = 0.5975[0m
[32m  eval_precision = 0.4101[0m
[32m  eval_recall = 0.2673[0m
[32m  ********************[0m
[32m  Best f1:0.2892[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.50927:  14%|█▍        | 4/28 [00:18<02:16,  5.67s/it]epoch 2 loss 1.51317:  14%|█▍        | 4/28 [00:18<02:16,  5.67s/it]epoch 2 loss 1.51317:  18%|█▊        | 5/28 [00:18<01:26,  3.78s/it]epoch 2 loss 1.49132:  18%|█▊        | 5/28 [00:19<01:26,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6217[0m
[32m  eval_f1 = 0.2942[0m
[32m  eval_mcc = 0.601[0m
[32m  eval_precision = 0.4026[0m
[32m  eval_recall = 0.2707[0m
[32m  ********************[0m
[32m  Best f1:0.2942[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49132:  21%|██▏       | 6/28 [00:30<02:23,  6.53s/it]epoch 2 loss 1.49131:  21%|██▏       | 6/28 [00:31<02:23,  6.53s/it]epoch 2 loss 1.49131:  25%|██▌       | 7/28 [00:31<01:35,  4.54s/it]epoch 2 loss 1.49838:  25%|██▌       | 7/28 [00:31<01:35,  4.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6241[0m
[32m  eval_f1 = 0.2957[0m
[32m  eval_mcc = 0.6032[0m
[32m  eval_precision = 0.3929[0m
[32m  eval_recall = 0.2722[0m
[32m  ********************[0m
[32m  Best f1:0.2957[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6032[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.49838:  29%|██▊       | 8/28 [00:42<02:11,  6.56s/it]epoch 2 loss 1.48498:  29%|██▊       | 8/28 [00:42<02:11,  6.56s/it]epoch 2 loss 1.48498:  32%|███▏      | 9/28 [00:42<01:28,  4.65s/it]epoch 2 loss 1.47157:  32%|███▏      | 9/28 [00:42<01:28,  4.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.625[0m
[32m  eval_f1 = 0.2951[0m
[32m  eval_mcc = 0.6038[0m
[32m  eval_precision = 0.4025[0m
[32m  eval_recall = 0.2727[0m
[32m  ********************[0m
[32m  Best MCC:0.6038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47157:  36%|███▌      | 10/28 [00:49<01:37,  5.39s/it]epoch 2 loss 1.4707:  36%|███▌      | 10/28 [00:50<01:37,  5.39s/it] epoch 2 loss 1.4707:  39%|███▉      | 11/28 [00:50<01:05,  3.87s/it]epoch 2 loss 1.47125:  39%|███▉      | 11/28 [00:50<01:05,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6265[0m
[32m  eval_f1 = 0.2974[0m
[32m  eval_mcc = 0.6051[0m
[32m  eval_precision = 0.4029[0m
[32m  eval_recall = 0.2748[0m
[32m  ********************[0m
[32m  Best f1:0.2974[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6051[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47125:  43%|████▎     | 12/28 [00:59<01:29,  5.58s/it]epoch 2 loss 1.47433:  43%|████▎     | 12/28 [00:59<01:29,  5.58s/it]epoch 2 loss 1.47433:  46%|████▋     | 13/28 [00:59<01:00,  4.01s/it]epoch 2 loss 1.46448:  46%|████▋     | 13/28 [01:00<01:00,  4.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6283[0m
[32m  eval_f1 = 0.3069[0m
[32m  eval_mcc = 0.6064[0m
[32m  eval_precision = 0.4156[0m
[32m  eval_recall = 0.2856[0m
[32m  ********************[0m
[32m  Best f1:0.3069[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46448:  50%|█████     | 14/28 [01:10<01:21,  5.84s/it]epoch 2 loss 1.46096:  50%|█████     | 14/28 [01:10<01:21,  5.84s/it]epoch 2 loss 1.46096:  54%|█████▎    | 15/28 [01:10<00:54,  4.21s/it]epoch 2 loss 1.461:  54%|█████▎    | 15/28 [01:10<00:54,  4.21s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6301[0m
[32m  eval_f1 = 0.3101[0m
[32m  eval_mcc = 0.6083[0m
[32m  eval_precision = 0.4249[0m
[32m  eval_recall = 0.2898[0m
[32m  ********************[0m
[32m  Best f1:0.3101[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.461:  57%|█████▋    | 16/28 [01:18<01:03,  5.31s/it]epoch 2 loss 1.46655:  57%|█████▋    | 16/28 [01:18<01:03,  5.31s/it]epoch 2 loss 1.46655:  61%|██████    | 17/28 [01:18<00:42,  3.84s/it]epoch 2 loss 1.47333:  61%|██████    | 17/28 [01:19<00:42,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6324[0m
[32m  eval_f1 = 0.316[0m
[32m  eval_mcc = 0.611[0m
[32m  eval_precision = 0.4141[0m
[32m  eval_recall = 0.2961[0m
[32m  ********************[0m
[32m  Best f1:0.316[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.611[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47333:  64%|██████▍   | 18/28 [01:27<00:52,  5.23s/it]epoch 2 loss 1.46954:  64%|██████▍   | 18/28 [01:27<00:52,  5.23s/it]epoch 2 loss 1.46954:  68%|██████▊   | 19/28 [01:27<00:34,  3.79s/it]epoch 2 loss 1.47021:  68%|██████▊   | 19/28 [01:28<00:34,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6353[0m
[32m  eval_f1 = 0.3193[0m
[32m  eval_mcc = 0.6147[0m
[32m  eval_precision = 0.4125[0m
[32m  eval_recall = 0.2991[0m
[32m  ********************[0m
[32m  Best f1:0.3193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6147[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.47021:  71%|███████▏  | 20/28 [01:35<00:40,  5.08s/it]epoch 2 loss 1.4664:  71%|███████▏  | 20/28 [01:36<00:40,  5.08s/it] epoch 2 loss 1.4664:  75%|███████▌  | 21/28 [01:36<00:25,  3.68s/it]epoch 2 loss 1.46304:  75%|███████▌  | 21/28 [01:36<00:25,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6389[0m
[32m  eval_f1 = 0.3215[0m
[32m  eval_mcc = 0.6195[0m
[32m  eval_precision = 0.4139[0m
[32m  eval_recall = 0.3002[0m
[32m  ********************[0m
[32m  Best f1:0.3215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6195[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.46304:  79%|███████▊  | 22/28 [01:46<00:33,  5.60s/it]epoch 2 loss 1.45983:  79%|███████▊  | 22/28 [01:46<00:33,  5.60s/it]epoch 2 loss 1.45983:  82%|████████▏ | 23/28 [01:46<00:20,  4.04s/it]epoch 2 loss 1.45799:  82%|████████▏ | 23/28 [01:47<00:20,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6387[0m
[32m  eval_f1 = 0.321[0m
[32m  eval_mcc = 0.6198[0m
[32m  eval_precision = 0.4176[0m
[32m  eval_recall = 0.299[0m
[32m  ********************[0m
[32m  Best MCC:0.6198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45799:  86%|████████▌ | 24/28 [01:52<00:18,  4.62s/it]epoch 2 loss 1.4575:  86%|████████▌ | 24/28 [01:53<00:18,  4.62s/it] epoch 2 loss 1.4575:  89%|████████▉ | 25/28 [01:53<00:10,  3.37s/it]epoch 2 loss 1.46191:  89%|████████▉ | 25/28 [01:53<00:10,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6378[0m
[32m  eval_f1 = 0.321[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.4305[0m
[32m  eval_recall = 0.2986[0m

epoch 2 loss 1.46191:  93%|█████████▎| 26/28 [01:56<00:06,  3.50s/it]epoch 2 loss 1.45942:  93%|█████████▎| 26/28 [01:57<00:06,  3.50s/it]epoch 2 loss 1.45942:  96%|█████████▋| 27/28 [01:57<00:02,  2.57s/it]epoch 2 loss 1.45262:  96%|█████████▋| 27/28 [01:57<00:02,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6389[0m
[32m  eval_f1 = 0.3228[0m
[32m  eval_mcc = 0.6199[0m
[32m  eval_precision = 0.4533[0m
[32m  eval_recall = 0.2995[0m
[32m  ********************[0m
[32m  Best f1:0.3228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.45262: 100%|██████████| 28/28 [02:05<00:00,  4.22s/it]epoch 2 loss 1.45262: 100%|██████████| 28/28 [02:05<00:00,  4.48s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.31156:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.31156:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s]epoch 3 loss 1.32478:   4%|▎         | 1/28 [00:00<00:11,  2.37it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6424[0m
[32m  eval_f1 = 0.328[0m
[32m  eval_mcc = 0.6232[0m
[32m  eval_precision = 0.4525[0m
[32m  eval_recall = 0.3032[0m
[32m  ********************[0m
[32m  Best f1:0.328[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6232[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.32478:   7%|▋         | 2/28 [00:09<02:27,  5.65s/it]epoch 3 loss 1.30267:   7%|▋         | 2/28 [00:10<02:27,  5.65s/it]epoch 3 loss 1.30267:  11%|█         | 3/28 [00:10<01:21,  3.27s/it]epoch 3 loss 1.2967:  11%|█         | 3/28 [00:10<01:21,  3.27s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6442[0m
[32m  eval_f1 = 0.3338[0m
[32m  eval_mcc = 0.6245[0m
[32m  eval_precision = 0.4512[0m
[32m  eval_recall = 0.3077[0m
[32m  ********************[0m
[32m  Best f1:0.3338[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2967:  14%|█▍        | 4/28 [00:18<02:09,  5.40s/it]epoch 3 loss 1.30599:  14%|█▍        | 4/28 [00:19<02:09,  5.40s/it]epoch 3 loss 1.30599:  18%|█▊        | 5/28 [00:19<01:22,  3.61s/it]epoch 3 loss 1.33192:  18%|█▊        | 5/28 [00:19<01:22,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6464[0m
[32m  eval_f1 = 0.3364[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.45[0m
[32m  eval_recall = 0.3103[0m
[32m  ********************[0m
[32m  Best f1:0.3364[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.33192:  21%|██▏       | 6/28 [00:28<02:04,  5.64s/it]epoch 3 loss 1.36644:  21%|██▏       | 6/28 [00:29<02:04,  5.64s/it]epoch 3 loss 1.36644:  25%|██▌       | 7/28 [00:29<01:22,  3.94s/it]epoch 3 loss 1.36482:  25%|██▌       | 7/28 [00:29<01:22,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6476[0m
[32m  eval_f1 = 0.3378[0m
[32m  eval_mcc = 0.6276[0m
[32m  eval_precision = 0.4571[0m
[32m  eval_recall = 0.312[0m
[32m  ********************[0m
[32m  Best f1:0.3378[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6276[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.36482:  29%|██▊       | 8/28 [00:35<01:31,  4.58s/it]epoch 3 loss 1.3624:  29%|██▊       | 8/28 [00:35<01:31,  4.58s/it] epoch 3 loss 1.3624:  32%|███▏      | 9/28 [00:35<01:02,  3.28s/it]epoch 3 loss 1.35331:  32%|███▏      | 9/28 [00:36<01:02,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6473[0m
[32m  eval_f1 = 0.3377[0m
[32m  eval_mcc = 0.627[0m
[32m  eval_precision = 0.4539[0m
[32m  eval_recall = 0.3126[0m

epoch 3 loss 1.35331:  36%|███▌      | 10/28 [00:39<01:01,  3.44s/it]epoch 3 loss 1.36055:  36%|███▌      | 10/28 [00:39<01:01,  3.44s/it]epoch 3 loss 1.36055:  39%|███▉      | 11/28 [00:39<00:42,  2.51s/it]epoch 3 loss 1.37216:  39%|███▉      | 11/28 [00:40<00:42,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6482[0m
[32m  eval_f1 = 0.3393[0m
[32m  eval_mcc = 0.628[0m
[32m  eval_precision = 0.4497[0m
[32m  eval_recall = 0.3143[0m
[32m  ********************[0m
[32m  Best f1:0.3393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37216:  43%|████▎     | 12/28 [00:45<00:57,  3.57s/it]epoch 3 loss 1.36681:  43%|████▎     | 12/28 [00:46<00:57,  3.57s/it]epoch 3 loss 1.36681:  46%|████▋     | 13/28 [00:46<00:39,  2.62s/it]epoch 3 loss 1.35787:  46%|████▋     | 13/28 [00:46<00:39,  2.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6479[0m
[32m  eval_f1 = 0.3395[0m
[32m  eval_mcc = 0.628[0m
[32m  eval_precision = 0.4484[0m
[32m  eval_recall = 0.314[0m
[32m  ********************[0m
[32m  Best f1:0.3395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.628[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35787:  50%|█████     | 14/28 [00:51<00:49,  3.55s/it]epoch 3 loss 1.35803:  50%|█████     | 14/28 [00:52<00:49,  3.55s/it]epoch 3 loss 1.35803:  54%|█████▎    | 15/28 [00:52<00:33,  2.60s/it]epoch 3 loss 1.35286:  54%|█████▎    | 15/28 [00:52<00:33,  2.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6473[0m
[32m  eval_f1 = 0.3391[0m
[32m  eval_mcc = 0.6279[0m
[32m  eval_precision = 0.451[0m
[32m  eval_recall = 0.3127[0m

epoch 3 loss 1.35286:  57%|█████▋    | 16/28 [00:56<00:35,  2.96s/it]epoch 3 loss 1.35145:  57%|█████▋    | 16/28 [00:56<00:35,  2.96s/it]epoch 3 loss 1.35145:  61%|██████    | 17/28 [00:56<00:24,  2.19s/it]epoch 3 loss 1.35338:  61%|██████    | 17/28 [00:56<00:24,  2.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6484[0m
[32m  eval_f1 = 0.3391[0m
[32m  eval_mcc = 0.6292[0m
[32m  eval_precision = 0.4534[0m
[32m  eval_recall = 0.313[0m
[32m  ********************[0m
[32m  Best MCC:0.6292[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35338:  64%|██████▍   | 18/28 [01:01<00:29,  2.93s/it]epoch 3 loss 1.35134:  64%|██████▍   | 18/28 [01:01<00:29,  2.93s/it]epoch 3 loss 1.35134:  68%|██████▊   | 19/28 [01:01<00:19,  2.18s/it]epoch 3 loss 1.34843:  68%|██████▊   | 19/28 [01:02<00:19,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6494[0m
[32m  eval_f1 = 0.3399[0m
[32m  eval_mcc = 0.6304[0m
[32m  eval_precision = 0.4646[0m
[32m  eval_recall = 0.3135[0m
[32m  ********************[0m
[32m  Best f1:0.3399[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34843:  71%|███████▏  | 20/28 [01:07<00:25,  3.19s/it]epoch 3 loss 1.34529:  71%|███████▏  | 20/28 [01:07<00:25,  3.19s/it]epoch 3 loss 1.34529:  75%|███████▌  | 21/28 [01:07<00:16,  2.36s/it]epoch 3 loss 1.35122:  75%|███████▌  | 21/28 [01:08<00:16,  2.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6503[0m
[32m  eval_f1 = 0.3416[0m
[32m  eval_mcc = 0.6317[0m
[32m  eval_precision = 0.4668[0m
[32m  eval_recall = 0.3146[0m
[32m  ********************[0m
[32m  Best f1:0.3416[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35122:  79%|███████▊  | 22/28 [01:13<00:21,  3.50s/it]epoch 3 loss 1.35299:  79%|███████▊  | 22/28 [01:14<00:21,  3.50s/it]epoch 3 loss 1.35299:  82%|████████▏ | 23/28 [01:14<00:12,  2.58s/it]epoch 3 loss 1.3548:  82%|████████▏ | 23/28 [01:14<00:12,  2.58s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6516[0m
[32m  eval_f1 = 0.3455[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.4799[0m
[32m  eval_recall = 0.3176[0m
[32m  ********************[0m
[32m  Best f1:0.3455[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3548:  86%|████████▌ | 24/28 [01:20<00:14,  3.65s/it]epoch 3 loss 1.35442:  86%|████████▌ | 24/28 [01:20<00:14,  3.65s/it]epoch 3 loss 1.35442:  89%|████████▉ | 25/28 [01:20<00:08,  2.69s/it]epoch 3 loss 1.35638:  89%|████████▉ | 25/28 [01:21<00:08,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3465[0m
[32m  eval_mcc = 0.6343[0m
[32m  eval_precision = 0.4743[0m
[32m  eval_recall = 0.3194[0m
[32m  ********************[0m
[32m  Best f1:0.3465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.35638:  93%|█████████▎| 26/28 [01:26<00:07,  3.73s/it]epoch 3 loss 1.3531:  93%|█████████▎| 26/28 [01:27<00:07,  3.73s/it] epoch 3 loss 1.3531:  96%|█████████▋| 27/28 [01:27<00:02,  2.74s/it]epoch 3 loss 1.34623:  96%|█████████▋| 27/28 [01:27<00:02,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6538[0m
[32m  eval_f1 = 0.3484[0m
[32m  eval_mcc = 0.6349[0m
[32m  eval_precision = 0.4744[0m
[32m  eval_recall = 0.3208[0m
[32m  ********************[0m
[32m  Best f1:0.3484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6349[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.34623: 100%|██████████| 28/28 [01:33<00:00,  3.71s/it]epoch 3 loss 1.34623: 100%|██████████| 28/28 [01:33<00:00,  3.33s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.44057:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.44057:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 4 loss 1.3636:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6546[0m
[32m  eval_f1 = 0.3495[0m
[32m  eval_mcc = 0.6353[0m
[32m  eval_precision = 0.4752[0m
[32m  eval_recall = 0.3212[0m
[32m  ********************[0m
[32m  Best f1:0.3495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3636:   7%|▋         | 2/28 [00:06<01:33,  3.59s/it]epoch 4 loss 1.37152:   7%|▋         | 2/28 [00:06<01:33,  3.59s/it]epoch 4 loss 1.37152:  11%|█         | 3/28 [00:06<00:53,  2.14s/it]epoch 4 loss 1.3701:  11%|█         | 3/28 [00:07<00:53,  2.14s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6552[0m
[32m  eval_f1 = 0.3508[0m
[32m  eval_mcc = 0.6357[0m
[32m  eval_precision = 0.4769[0m
[32m  eval_recall = 0.3218[0m
[32m  ********************[0m
[32m  Best f1:0.3508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3701:  14%|█▍        | 4/28 [00:12<01:30,  3.75s/it]epoch 4 loss 1.33213:  14%|█▍        | 4/28 [00:13<01:30,  3.75s/it]epoch 4 loss 1.33213:  18%|█▊        | 5/28 [00:13<00:58,  2.55s/it]epoch 4 loss 1.3215:  18%|█▊        | 5/28 [00:13<00:58,  2.55s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6542[0m
[32m  eval_f1 = 0.3504[0m
[32m  eval_mcc = 0.6346[0m
[32m  eval_precision = 0.4779[0m
[32m  eval_recall = 0.3211[0m

epoch 4 loss 1.3215:  21%|██▏       | 6/28 [00:17<01:05,  2.98s/it]epoch 4 loss 1.33585:  21%|██▏       | 6/28 [00:17<01:05,  2.98s/it]epoch 4 loss 1.33585:  25%|██▌       | 7/28 [00:17<00:44,  2.13s/it]epoch 4 loss 1.3282:  25%|██▌       | 7/28 [00:17<00:44,  2.13s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6535[0m
[32m  eval_f1 = 0.3508[0m
[32m  eval_mcc = 0.634[0m
[32m  eval_precision = 0.4771[0m
[32m  eval_recall = 0.3215[0m
[32m  ********************[0m
[32m  Best f1:0.3508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.3282:  29%|██▊       | 8/28 [00:22<00:59,  2.95s/it]epoch 4 loss 1.32547:  29%|██▊       | 8/28 [00:22<00:59,  2.95s/it]epoch 4 loss 1.32547:  32%|███▏      | 9/28 [00:22<00:40,  2.16s/it]epoch 4 loss 1.32746:  32%|███▏      | 9/28 [00:23<00:40,  2.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6528[0m
[32m  eval_f1 = 0.3507[0m
[32m  eval_mcc = 0.6332[0m
[32m  eval_precision = 0.4772[0m
[32m  eval_recall = 0.3213[0m

epoch 4 loss 1.32746:  36%|███▌      | 10/28 [00:26<00:47,  2.66s/it]epoch 4 loss 1.33776:  36%|███▌      | 10/28 [00:26<00:47,  2.66s/it]epoch 4 loss 1.33776:  39%|███▉      | 11/28 [00:26<00:33,  1.97s/it]epoch 4 loss 1.33268:  39%|███▉      | 11/28 [00:27<00:33,  1.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.653[0m
[32m  eval_f1 = 0.3504[0m
[32m  eval_mcc = 0.6335[0m
[32m  eval_precision = 0.486[0m
[32m  eval_recall = 0.3212[0m

epoch 4 loss 1.33268:  43%|████▎     | 12/28 [00:30<00:40,  2.53s/it]epoch 4 loss 1.33019:  43%|████▎     | 12/28 [00:31<00:40,  2.53s/it]epoch 4 loss 1.33019:  46%|████▋     | 13/28 [00:31<00:28,  1.88s/it]epoch 4 loss 1.32224:  46%|████▋     | 13/28 [00:31<00:28,  1.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6529[0m
[32m  eval_f1 = 0.3502[0m
[32m  eval_mcc = 0.6335[0m
[32m  eval_precision = 0.4849[0m
[32m  eval_recall = 0.3214[0m

epoch 4 loss 1.32224:  50%|█████     | 14/28 [00:34<00:34,  2.46s/it]epoch 4 loss 1.3217:  50%|█████     | 14/28 [00:35<00:34,  2.46s/it] epoch 4 loss 1.3217:  54%|█████▎    | 15/28 [00:35<00:23,  1.84s/it]epoch 4 loss 1.32408:  54%|█████▎    | 15/28 [00:35<00:23,  1.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6536[0m
[32m  eval_f1 = 0.3507[0m
[32m  eval_mcc = 0.6343[0m
[32m  eval_precision = 0.479[0m
[32m  eval_recall = 0.3221[0m

epoch 4 loss 1.32408:  57%|█████▋    | 16/28 [00:39<00:29,  2.44s/it]epoch 4 loss 1.32294:  57%|█████▋    | 16/28 [00:39<00:29,  2.44s/it]epoch 4 loss 1.32294:  61%|██████    | 17/28 [00:39<00:20,  1.82s/it]epoch 4 loss 1.31595:  61%|██████    | 17/28 [00:39<00:20,  1.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6538[0m
[32m  eval_f1 = 0.3508[0m
[32m  eval_mcc = 0.6344[0m
[32m  eval_precision = 0.4805[0m
[32m  eval_recall = 0.3224[0m
[32m  ********************[0m
[32m  Best f1:0.3508[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.31595:  64%|██████▍   | 18/28 [00:44<00:27,  2.77s/it]epoch 4 loss 1.31567:  64%|██████▍   | 18/28 [00:44<00:27,  2.77s/it]epoch 4 loss 1.31567:  68%|██████▊   | 19/28 [00:44<00:18,  2.06s/it]epoch 4 loss 1.3193:  68%|██████▊   | 19/28 [00:45<00:18,  2.06s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.654[0m
[32m  eval_f1 = 0.3511[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4805[0m
[32m  eval_recall = 0.3226[0m
[32m  ********************[0m
[32m  Best f1:0.3511[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.3193:  71%|███████▏  | 20/28 [00:49<00:23,  2.94s/it]epoch 4 loss 1.31615:  71%|███████▏  | 20/28 [00:50<00:23,  2.94s/it]epoch 4 loss 1.31615:  75%|███████▌  | 21/28 [00:50<00:15,  2.18s/it]epoch 4 loss 1.31774:  75%|███████▌  | 21/28 [00:50<00:15,  2.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.654[0m
[32m  eval_f1 = 0.3508[0m
[32m  eval_mcc = 0.6347[0m
[32m  eval_precision = 0.4805[0m
[32m  eval_recall = 0.3223[0m

epoch 4 loss 1.31774:  79%|███████▊  | 22/28 [00:54<00:16,  2.67s/it]epoch 4 loss 1.31601:  79%|███████▊  | 22/28 [00:54<00:16,  2.67s/it]epoch 4 loss 1.31601:  82%|████████▏ | 23/28 [00:54<00:09,  1.99s/it]epoch 4 loss 1.31805:  82%|████████▏ | 23/28 [00:54<00:09,  1.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6544[0m
[32m  eval_f1 = 0.3541[0m
[32m  eval_mcc = 0.6352[0m
[32m  eval_precision = 0.4909[0m
[32m  eval_recall = 0.3243[0m
[32m  ********************[0m
[32m  Best f1:0.3541[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_8/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.31805:  86%|████████▌ | 24/28 [00:59<00:11,  2.80s/it]epoch 4 loss 1.31589:  86%|████████▌ | 24/28 [00:59<00:11,  2.80s/it]epoch 4 loss 1.31589:  89%|████████▉ | 25/28 [00:59<00:06,  2.08s/it]epoch 4 loss 1.31605:  89%|████████▉ | 25/28 [00:59<00:06,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6545[0m
[32m  eval_f1 = 0.354[0m
[32m  eval_mcc = 0.6353[0m
[32m  eval_precision = 0.4908[0m
[32m  eval_recall = 0.3243[0m

epoch 4 loss 1.31605:  93%|█████████▎| 26/28 [01:03<00:05,  2.60s/it]epoch 4 loss 1.31613:  93%|█████████▎| 26/28 [01:03<00:05,  2.60s/it]epoch 4 loss 1.31613:  96%|█████████▋| 27/28 [01:03<00:01,  1.94s/it]epoch 4 loss 1.31144:  96%|█████████▋| 27/28 [01:03<00:01,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6546[0m
[32m  eval_f1 = 0.354[0m
[32m  eval_mcc = 0.6353[0m
[32m  eval_precision = 0.4908[0m
[32m  eval_recall = 0.3243[0m

epoch 4 loss 1.31144: 100%|██████████| 28/28 [01:07<00:00,  2.44s/it]epoch 4 loss 1.31144: 100%|██████████| 28/28 [01:07<00:00,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6544[0m
[32m  eval_f1 = 0.3541[0m
[32m  eval_mcc = 0.6352[0m
[32m  eval_precision = 0.4909[0m
[32m  eval_recall = 0.3243[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.74it/s] 20%|██        | 2/10 [00:00<00:02,  2.73it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.72it/s] 70%|███████   | 7/10 [00:02<00:01,  2.73it/s] 80%|████████  | 8/10 [00:02<00:00,  2.73it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.73it/s]100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6393[0m
[32m  eval_f1 = 0.3087[0m
[32m  eval_mcc = 0.62[0m
[32m  eval_precision = 0.4061[0m
[32m  eval_recall = 0.285[0m

