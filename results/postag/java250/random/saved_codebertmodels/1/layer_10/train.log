[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=10, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/1/layer_10', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.20019:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.20019:   4%|▎         | 1/28 [00:00<00:21,  1.28it/s]epoch 0 loss 5.20445:   4%|▎         | 1/28 [00:01<00:21,  1.28it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.72it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0109[0m
[32m  eval_f1 = 0.0016[0m
[32m  eval_mcc = 0.0031[0m
[32m  eval_precision = 0.0029[0m
[32m  eval_recall = 0.0049[0m
[32m  ********************[0m
[32m  Best f1:0.0016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0031[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.20445:   7%|▋         | 2/28 [00:05<01:24,  3.24s/it]epoch 0 loss 5.19477:   7%|▋         | 2/28 [00:06<01:24,  3.24s/it]epoch 0 loss 5.19477:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.17789:  11%|█         | 3/28 [00:06<00:48,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0195[0m
[32m  eval_f1 = 0.0065[0m
[32m  eval_mcc = 0.0098[0m
[32m  eval_precision = 0.0088[0m
[32m  eval_recall = 0.0095[0m
[32m  ********************[0m
[32m  Best f1:0.0065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.17789:  14%|█▍        | 4/28 [00:14<01:47,  4.46s/it]epoch 0 loss 5.15273:  14%|█▍        | 4/28 [00:14<01:47,  4.46s/it]epoch 0 loss 5.15273:  18%|█▊        | 5/28 [00:14<01:09,  3.01s/it]epoch 0 loss 5.12265:  18%|█▊        | 5/28 [00:15<01:09,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0273[0m
[32m  eval_f1 = 0.0076[0m
[32m  eval_mcc = 0.0115[0m
[32m  eval_precision = 0.0081[0m
[32m  eval_recall = 0.0129[0m
[32m  ********************[0m
[32m  Best f1:0.0076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0115[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.12265:  21%|██▏       | 6/28 [00:23<01:47,  4.90s/it]epoch 0 loss 5.08648:  21%|██▏       | 6/28 [00:23<01:47,  4.90s/it]epoch 0 loss 5.08648:  25%|██▌       | 7/28 [00:23<01:12,  3.43s/it]epoch 0 loss 5.04641:  25%|██▌       | 7/28 [00:24<01:12,  3.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0402[0m
[32m  eval_f1 = 0.0094[0m
[32m  eval_mcc = 0.0166[0m
[32m  eval_precision = 0.0144[0m
[32m  eval_recall = 0.0178[0m
[32m  ********************[0m
[32m  Best f1:0.0094[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0166[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04641:  29%|██▊       | 8/28 [00:32<01:42,  5.14s/it]epoch 0 loss 4.99626:  29%|██▊       | 8/28 [00:33<01:42,  5.14s/it]epoch 0 loss 4.99626:  32%|███▏      | 9/28 [00:33<01:09,  3.66s/it]epoch 0 loss 4.94231:  32%|███▏      | 9/28 [00:33<01:09,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0525[0m
[32m  eval_f1 = 0.0122[0m
[32m  eval_mcc = 0.0242[0m
[32m  eval_precision = 0.0179[0m
[32m  eval_recall = 0.022[0m
[32m  ********************[0m
[32m  Best f1:0.0122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0242[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94231:  36%|███▌      | 10/28 [00:41<01:32,  5.13s/it]epoch 0 loss 4.88899:  36%|███▌      | 10/28 [00:41<01:32,  5.13s/it]epoch 0 loss 4.88899:  39%|███▉      | 11/28 [00:41<01:02,  3.69s/it]epoch 0 loss 4.82783:  39%|███▉      | 11/28 [00:42<01:02,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0703[0m
[32m  eval_f1 = 0.0184[0m
[32m  eval_mcc = 0.0379[0m
[32m  eval_precision = 0.0408[0m
[32m  eval_recall = 0.026[0m
[32m  ********************[0m
[32m  Best f1:0.0184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0379[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.82783:  43%|████▎     | 12/28 [00:51<01:28,  5.50s/it]epoch 0 loss 4.76613:  43%|████▎     | 12/28 [00:52<01:28,  5.50s/it]epoch 0 loss 4.76613:  46%|████▋     | 13/28 [00:52<00:59,  3.97s/it]epoch 0 loss 4.70301:  46%|████▋     | 13/28 [00:52<00:59,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1068[0m
[32m  eval_f1 = 0.0271[0m
[32m  eval_mcc = 0.0697[0m
[32m  eval_precision = 0.0478[0m
[32m  eval_recall = 0.0315[0m
[32m  ********************[0m
[32m  Best f1:0.0271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0697[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.70301:  50%|█████     | 14/28 [01:00<01:13,  5.25s/it]epoch 0 loss 4.64268:  50%|█████     | 14/28 [01:00<01:13,  5.25s/it]epoch 0 loss 4.64268:  54%|█████▎    | 15/28 [01:00<00:49,  3.79s/it]epoch 0 loss 4.5797:  54%|█████▎    | 15/28 [01:01<00:49,  3.79s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1747[0m
[32m  eval_f1 = 0.0357[0m
[32m  eval_mcc = 0.1266[0m
[32m  eval_precision = 0.0646[0m
[32m  eval_recall = 0.0398[0m
[32m  ********************[0m
[32m  Best f1:0.0357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1266[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.5797:  57%|█████▋    | 16/28 [01:08<01:01,  5.09s/it]epoch 0 loss 4.51806:  57%|█████▋    | 16/28 [01:09<01:01,  5.09s/it]epoch 0 loss 4.51806:  61%|██████    | 17/28 [01:09<00:40,  3.69s/it]epoch 0 loss 4.45402:  61%|██████    | 17/28 [01:09<00:40,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2358[0m
[32m  eval_f1 = 0.0388[0m
[32m  eval_mcc = 0.1805[0m
[32m  eval_precision = 0.076[0m
[32m  eval_recall = 0.0444[0m
[32m  ********************[0m
[32m  Best f1:0.0388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1805[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.45402:  64%|██████▍   | 18/28 [01:17<00:50,  5.07s/it]epoch 0 loss 4.39017:  64%|██████▍   | 18/28 [01:17<00:50,  5.07s/it]epoch 0 loss 4.39017:  68%|██████▊   | 19/28 [01:17<00:33,  3.68s/it]epoch 0 loss 4.33059:  68%|██████▊   | 19/28 [01:18<00:33,  3.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2691[0m
[32m  eval_f1 = 0.0383[0m
[32m  eval_mcc = 0.2119[0m
[32m  eval_precision = 0.065[0m
[32m  eval_recall = 0.0445[0m
[32m  ********************[0m
[32m  Best MCC:0.2119[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.33059:  71%|███████▏  | 20/28 [01:24<00:37,  4.65s/it]epoch 0 loss 4.27068:  71%|███████▏  | 20/28 [01:25<00:37,  4.65s/it]epoch 0 loss 4.27068:  75%|███████▌  | 21/28 [01:25<00:23,  3.38s/it]epoch 0 loss 4.21272:  75%|███████▌  | 21/28 [01:25<00:23,  3.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2981[0m
[32m  eval_f1 = 0.0406[0m
[32m  eval_mcc = 0.2435[0m
[32m  eval_precision = 0.063[0m
[32m  eval_recall = 0.0458[0m
[32m  ********************[0m
[32m  Best f1:0.0406[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2435[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.21272:  79%|███████▊  | 22/28 [01:33<00:29,  4.85s/it]epoch 0 loss 4.15658:  79%|███████▊  | 22/28 [01:33<00:29,  4.85s/it]epoch 0 loss 4.15658:  82%|████████▏ | 23/28 [01:33<00:17,  3.52s/it]epoch 0 loss 4.10718:  82%|████████▏ | 23/28 [01:34<00:17,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.311[0m
[32m  eval_f1 = 0.0432[0m
[32m  eval_mcc = 0.262[0m
[32m  eval_precision = 0.0805[0m
[32m  eval_recall = 0.0474[0m
[32m  ********************[0m
[32m  Best f1:0.0432[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.10718:  86%|████████▌ | 24/28 [01:41<00:19,  4.79s/it]epoch 0 loss 4.05408:  86%|████████▌ | 24/28 [01:42<00:19,  4.79s/it]epoch 0 loss 4.05408:  89%|████████▉ | 25/28 [01:42<00:10,  3.48s/it]epoch 0 loss 4.00798:  89%|████████▉ | 25/28 [01:42<00:10,  3.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3572[0m
[32m  eval_f1 = 0.0852[0m
[32m  eval_mcc = 0.3202[0m
[32m  eval_precision = 0.1769[0m
[32m  eval_recall = 0.0785[0m
[32m  ********************[0m
[32m  Best f1:0.0852[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.00798:  93%|█████████▎| 26/28 [01:48<00:08,  4.31s/it]epoch 0 loss 3.95858:  93%|█████████▎| 26/28 [01:48<00:08,  4.31s/it]epoch 0 loss 3.95858:  96%|█████████▋| 27/28 [01:48<00:03,  3.14s/it]epoch 0 loss 3.91112:  96%|█████████▋| 27/28 [01:48<00:03,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4279[0m
[32m  eval_f1 = 0.1291[0m
[32m  eval_mcc = 0.3983[0m
[32m  eval_precision = 0.1909[0m
[32m  eval_recall = 0.1222[0m
[32m  ********************[0m
[32m  Best f1:0.1291[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3983[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.91112: 100%|██████████| 28/28 [01:54<00:00,  3.82s/it]epoch 0 loss 3.91112: 100%|██████████| 28/28 [01:54<00:00,  4.08s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.70155:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.70155:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s]epoch 1 loss 2.60505:   4%|▎         | 1/28 [00:00<00:11,  2.41it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.472[0m
[32m  eval_f1 = 0.15[0m
[32m  eval_mcc = 0.4436[0m
[32m  eval_precision = 0.2152[0m
[32m  eval_recall = 0.1446[0m
[32m  ********************[0m
[32m  Best f1:0.15[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.60505:   7%|▋         | 2/28 [00:06<01:35,  3.69s/it]epoch 1 loss 2.55469:   7%|▋         | 2/28 [00:06<01:35,  3.69s/it]epoch 1 loss 2.55469:  11%|█         | 3/28 [00:06<00:54,  2.20s/it]epoch 1 loss 2.51393:  11%|█         | 3/28 [00:07<00:54,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5191[0m
[32m  eval_f1 = 0.1757[0m
[32m  eval_mcc = 0.4897[0m
[32m  eval_precision = 0.2299[0m
[32m  eval_recall = 0.167[0m
[32m  ********************[0m
[32m  Best f1:0.1757[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4897[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.51393:  14%|█▍        | 4/28 [00:13<01:31,  3.81s/it]epoch 1 loss 2.46892:  14%|█▍        | 4/28 [00:13<01:31,  3.81s/it]epoch 1 loss 2.46892:  18%|█▊        | 5/28 [00:13<00:59,  2.59s/it]epoch 1 loss 2.41127:  18%|█▊        | 5/28 [00:13<00:59,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5423[0m
[32m  eval_f1 = 0.1863[0m
[32m  eval_mcc = 0.5132[0m
[32m  eval_precision = 0.2359[0m
[32m  eval_recall = 0.1811[0m
[32m  ********************[0m
[32m  Best f1:0.1863[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5132[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.41127:  21%|██▏       | 6/28 [00:19<01:24,  3.83s/it]epoch 1 loss 2.37958:  21%|██▏       | 6/28 [00:20<01:24,  3.83s/it]epoch 1 loss 2.37958:  25%|██▌       | 7/28 [00:20<00:57,  2.72s/it]epoch 1 loss 2.33713:  25%|██▌       | 7/28 [00:20<00:57,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5559[0m
[32m  eval_f1 = 0.1895[0m
[32m  eval_mcc = 0.5279[0m
[32m  eval_precision = 0.232[0m
[32m  eval_recall = 0.1839[0m
[32m  ********************[0m
[32m  Best f1:0.1895[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.33713:  29%|██▊       | 8/28 [00:26<01:16,  3.84s/it]epoch 1 loss 2.31207:  29%|██▊       | 8/28 [00:26<01:16,  3.84s/it]epoch 1 loss 2.31207:  32%|███▏      | 9/28 [00:26<00:52,  2.77s/it]epoch 1 loss 2.26673:  32%|███▏      | 9/28 [00:27<00:52,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5625[0m
[32m  eval_f1 = 0.1935[0m
[32m  eval_mcc = 0.5354[0m
[32m  eval_precision = 0.2382[0m
[32m  eval_recall = 0.1853[0m
[32m  ********************[0m
[32m  Best f1:0.1935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.26673:  36%|███▌      | 10/28 [00:32<01:05,  3.63s/it]epoch 1 loss 2.23946:  36%|███▌      | 10/28 [00:32<01:05,  3.63s/it]epoch 1 loss 2.23946:  39%|███▉      | 11/28 [00:32<00:45,  2.65s/it]epoch 1 loss 2.21026:  39%|███▉      | 11/28 [00:33<00:45,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5685[0m
[32m  eval_f1 = 0.1958[0m
[32m  eval_mcc = 0.543[0m
[32m  eval_precision = 0.2538[0m
[32m  eval_recall = 0.1865[0m
[32m  ********************[0m
[32m  Best f1:0.1958[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.543[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.21026:  43%|████▎     | 12/28 [00:38<00:59,  3.71s/it]epoch 1 loss 2.18378:  43%|████▎     | 12/28 [00:39<00:59,  3.71s/it]epoch 1 loss 2.18378:  46%|████▋     | 13/28 [00:39<00:40,  2.71s/it]epoch 1 loss 2.1638:  46%|████▋     | 13/28 [00:39<00:40,  2.71s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5697[0m
[32m  eval_f1 = 0.1988[0m
[32m  eval_mcc = 0.5483[0m
[32m  eval_precision = 0.2727[0m
[32m  eval_recall = 0.1884[0m
[32m  ********************[0m
[32m  Best f1:0.1988[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1638:  50%|█████     | 14/28 [00:45<00:52,  3.75s/it]epoch 1 loss 2.14606:  50%|█████     | 14/28 [00:45<00:52,  3.75s/it]epoch 1 loss 2.14606:  54%|█████▎    | 15/28 [00:45<00:35,  2.75s/it]epoch 1 loss 2.12383:  54%|█████▎    | 15/28 [00:46<00:35,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5755[0m
[32m  eval_f1 = 0.207[0m
[32m  eval_mcc = 0.5558[0m
[32m  eval_precision = 0.2757[0m
[32m  eval_recall = 0.1953[0m
[32m  ********************[0m
[32m  Best f1:0.207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.12383:  57%|█████▋    | 16/28 [00:52<00:45,  3.79s/it]epoch 1 loss 2.09986:  57%|█████▋    | 16/28 [00:52<00:45,  3.79s/it]epoch 1 loss 2.09986:  61%|██████    | 17/28 [00:52<00:30,  2.78s/it]epoch 1 loss 2.08166:  61%|██████    | 17/28 [00:53<00:30,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5801[0m
[32m  eval_f1 = 0.2138[0m
[32m  eval_mcc = 0.5604[0m
[32m  eval_precision = 0.2797[0m
[32m  eval_recall = 0.2033[0m
[32m  ********************[0m
[32m  Best f1:0.2138[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5604[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08166:  64%|██████▍   | 18/28 [00:58<00:38,  3.83s/it]epoch 1 loss 2.06042:  64%|██████▍   | 18/28 [00:59<00:38,  3.83s/it]epoch 1 loss 2.06042:  68%|██████▊   | 19/28 [00:59<00:25,  2.81s/it]epoch 1 loss 2.05125:  68%|██████▊   | 19/28 [00:59<00:25,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5841[0m
[32m  eval_f1 = 0.2278[0m
[32m  eval_mcc = 0.5625[0m
[32m  eval_precision = 0.3236[0m
[32m  eval_recall = 0.2168[0m
[32m  ********************[0m
[32m  Best f1:0.2278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5625[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05125:  71%|███████▏  | 20/28 [01:07<00:35,  4.43s/it]epoch 1 loss 2.0395:  71%|███████▏  | 20/28 [01:07<00:35,  4.43s/it] epoch 1 loss 2.0395:  75%|███████▌  | 21/28 [01:07<00:22,  3.22s/it]epoch 1 loss 2.03304:  75%|███████▌  | 21/28 [01:08<00:22,  3.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.592[0m
[32m  eval_f1 = 0.2359[0m
[32m  eval_mcc = 0.569[0m
[32m  eval_precision = 0.3242[0m
[32m  eval_recall = 0.2231[0m
[32m  ********************[0m
[32m  Best f1:0.2359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.569[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03304:  79%|███████▊  | 22/28 [01:18<00:32,  5.38s/it]epoch 1 loss 2.02479:  79%|███████▊  | 22/28 [01:18<00:32,  5.38s/it]epoch 1 loss 2.02479:  82%|████████▏ | 23/28 [01:18<00:19,  3.89s/it]epoch 1 loss 2.01588:  82%|████████▏ | 23/28 [01:19<00:19,  3.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5949[0m
[32m  eval_f1 = 0.2471[0m
[32m  eval_mcc = 0.5705[0m
[32m  eval_precision = 0.3492[0m
[32m  eval_recall = 0.232[0m
[32m  ********************[0m
[32m  Best f1:0.2471[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5705[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.01588:  86%|████████▌ | 24/28 [01:27<00:21,  5.40s/it]epoch 1 loss 2.00092:  86%|████████▌ | 24/28 [01:28<00:21,  5.40s/it]epoch 1 loss 2.00092:  89%|████████▉ | 25/28 [01:28<00:11,  3.91s/it]epoch 1 loss 1.98181:  89%|████████▉ | 25/28 [01:28<00:11,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5979[0m
[32m  eval_f1 = 0.2516[0m
[32m  eval_mcc = 0.5736[0m
[32m  eval_precision = 0.3442[0m
[32m  eval_recall = 0.2363[0m
[32m  ********************[0m
[32m  Best f1:0.2516[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5736[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.98181:  93%|█████████▎| 26/28 [01:37<00:11,  5.58s/it]epoch 1 loss 1.96729:  93%|█████████▎| 26/28 [01:38<00:11,  5.58s/it]epoch 1 loss 1.96729:  96%|█████████▋| 27/28 [01:38<00:04,  4.03s/it]epoch 1 loss 1.95291:  96%|█████████▋| 27/28 [01:38<00:04,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6028[0m
[32m  eval_f1 = 0.2577[0m
[32m  eval_mcc = 0.579[0m
[32m  eval_precision = 0.3663[0m
[32m  eval_recall = 0.2402[0m
[32m  ********************[0m
[32m  Best f1:0.2577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.95291: 100%|██████████| 28/28 [01:44<00:00,  4.81s/it]epoch 1 loss 1.95291: 100%|██████████| 28/28 [01:44<00:00,  3.74s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.58139:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.58139:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 2 loss 1.55696:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6066[0m
[32m  eval_f1 = 0.2714[0m
[32m  eval_mcc = 0.5834[0m
[32m  eval_precision = 0.3676[0m
[32m  eval_recall = 0.2515[0m
[32m  ********************[0m
[32m  Best f1:0.2714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55696:   7%|▋         | 2/28 [00:07<01:46,  4.08s/it]epoch 2 loss 1.589:   7%|▋         | 2/28 [00:07<01:46,  4.08s/it]  epoch 2 loss 1.589:  11%|█         | 3/28 [00:07<01:00,  2.41s/it]epoch 2 loss 1.57624:  11%|█         | 3/28 [00:07<01:00,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6102[0m
[32m  eval_f1 = 0.2762[0m
[32m  eval_mcc = 0.5884[0m
[32m  eval_precision = 0.3894[0m
[32m  eval_recall = 0.255[0m
[32m  ********************[0m
[32m  Best f1:0.2762[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5884[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57624:  14%|█▍        | 4/28 [00:17<02:11,  5.47s/it]epoch 2 loss 1.57834:  14%|█▍        | 4/28 [00:18<02:11,  5.47s/it]epoch 2 loss 1.57834:  18%|█▊        | 5/28 [00:18<01:23,  3.65s/it]epoch 2 loss 1.55495:  18%|█▊        | 5/28 [00:18<01:23,  3.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6134[0m
[32m  eval_f1 = 0.2802[0m
[32m  eval_mcc = 0.5928[0m
[32m  eval_precision = 0.4075[0m
[32m  eval_recall = 0.258[0m
[32m  ********************[0m
[32m  Best f1:0.2802[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5928[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55495:  21%|██▏       | 6/28 [00:24<01:43,  4.69s/it]epoch 2 loss 1.55337:  21%|██▏       | 6/28 [00:25<01:43,  4.69s/it]epoch 2 loss 1.55337:  25%|██▌       | 7/28 [00:25<01:09,  3.29s/it]epoch 2 loss 1.55974:  25%|██▌       | 7/28 [00:25<01:09,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6155[0m
[32m  eval_f1 = 0.2823[0m
[32m  eval_mcc = 0.5949[0m
[32m  eval_precision = 0.3944[0m
[32m  eval_recall = 0.26[0m
[32m  ********************[0m
[32m  Best f1:0.2823[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5949[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55974:  29%|██▊       | 8/28 [00:34<01:43,  5.18s/it]epoch 2 loss 1.5461:  29%|██▊       | 8/28 [00:34<01:43,  5.18s/it] epoch 2 loss 1.5461:  32%|███▏      | 9/28 [00:34<01:10,  3.69s/it]epoch 2 loss 1.53174:  32%|███▏      | 9/28 [00:35<01:10,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6164[0m
[32m  eval_f1 = 0.2811[0m
[32m  eval_mcc = 0.5952[0m
[32m  eval_precision = 0.3929[0m
[32m  eval_recall = 0.26[0m
[32m  ********************[0m
[32m  Best MCC:0.5952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53174:  36%|███▌      | 10/28 [00:41<01:22,  4.57s/it]epoch 2 loss 1.53039:  36%|███▌      | 10/28 [00:41<01:22,  4.57s/it]epoch 2 loss 1.53039:  39%|███▉      | 11/28 [00:41<00:56,  3.30s/it]epoch 2 loss 1.53116:  39%|███▉      | 11/28 [00:42<00:56,  3.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.618[0m
[32m  eval_f1 = 0.2831[0m
[32m  eval_mcc = 0.5963[0m
[32m  eval_precision = 0.3944[0m
[32m  eval_recall = 0.262[0m
[32m  ********************[0m
[32m  Best f1:0.2831[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5963[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53116:  43%|████▎     | 12/28 [00:49<01:16,  4.79s/it]epoch 2 loss 1.5338:  43%|████▎     | 12/28 [00:50<01:16,  4.79s/it] epoch 2 loss 1.5338:  46%|████▋     | 13/28 [00:50<00:51,  3.47s/it]epoch 2 loss 1.52455:  46%|████▋     | 13/28 [00:50<00:51,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6218[0m
[32m  eval_f1 = 0.2894[0m
[32m  eval_mcc = 0.5994[0m
[32m  eval_precision = 0.4125[0m
[32m  eval_recall = 0.2696[0m
[32m  ********************[0m
[32m  Best f1:0.2894[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5994[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52455:  50%|█████     | 14/28 [00:57<01:05,  4.64s/it]epoch 2 loss 1.52145:  50%|█████     | 14/28 [00:58<01:05,  4.64s/it]epoch 2 loss 1.52145:  54%|█████▎    | 15/28 [00:58<00:43,  3.37s/it]epoch 2 loss 1.52126:  54%|█████▎    | 15/28 [00:58<00:43,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6233[0m
[32m  eval_f1 = 0.2977[0m
[32m  eval_mcc = 0.6011[0m
[32m  eval_precision = 0.3936[0m
[32m  eval_recall = 0.2802[0m
[32m  ********************[0m
[32m  Best f1:0.2977[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52126:  57%|█████▋    | 16/28 [01:06<00:57,  4.76s/it]epoch 2 loss 1.52663:  57%|█████▋    | 16/28 [01:06<00:57,  4.76s/it]epoch 2 loss 1.52663:  61%|██████    | 17/28 [01:06<00:37,  3.45s/it]epoch 2 loss 1.53373:  61%|██████    | 17/28 [01:06<00:37,  3.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6257[0m
[32m  eval_f1 = 0.3039[0m
[32m  eval_mcc = 0.6038[0m
[32m  eval_precision = 0.4006[0m
[32m  eval_recall = 0.2857[0m
[32m  ********************[0m
[32m  Best f1:0.3039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6038[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53373:  64%|██████▍   | 18/28 [01:15<00:51,  5.10s/it]epoch 2 loss 1.53034:  64%|██████▍   | 18/28 [01:15<00:51,  5.10s/it]epoch 2 loss 1.53034:  68%|██████▊   | 19/28 [01:15<00:33,  3.70s/it]epoch 2 loss 1.53121:  68%|██████▊   | 19/28 [01:16<00:33,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6298[0m
[32m  eval_f1 = 0.3124[0m
[32m  eval_mcc = 0.6089[0m
[32m  eval_precision = 0.4098[0m
[32m  eval_recall = 0.2928[0m
[32m  ********************[0m
[32m  Best f1:0.3124[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6089[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53121:  71%|███████▏  | 20/28 [01:22<00:35,  4.47s/it]epoch 2 loss 1.52713:  71%|███████▏  | 20/28 [01:22<00:35,  4.47s/it]epoch 2 loss 1.52713:  75%|███████▌  | 21/28 [01:22<00:22,  3.25s/it]epoch 2 loss 1.52355:  75%|███████▌  | 21/28 [01:23<00:22,  3.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.631[0m
[32m  eval_f1 = 0.3135[0m
[32m  eval_mcc = 0.6113[0m
[32m  eval_precision = 0.3985[0m
[32m  eval_recall = 0.2921[0m
[32m  ********************[0m
[32m  Best f1:0.3135[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.52355:  79%|███████▊  | 22/28 [01:30<00:27,  4.66s/it]epoch 2 loss 1.52003:  79%|███████▊  | 22/28 [01:31<00:27,  4.66s/it]epoch 2 loss 1.52003:  82%|████████▏ | 23/28 [01:31<00:16,  3.39s/it]epoch 2 loss 1.51802:  82%|████████▏ | 23/28 [01:31<00:16,  3.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6333[0m
[32m  eval_f1 = 0.3146[0m
[32m  eval_mcc = 0.6143[0m
[32m  eval_precision = 0.404[0m
[32m  eval_recall = 0.2928[0m
[32m  ********************[0m
[32m  Best f1:0.3146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6143[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.51802:  86%|████████▌ | 24/28 [01:37<00:17,  4.25s/it]epoch 2 loss 1.5175:  86%|████████▌ | 24/28 [01:37<00:17,  4.25s/it] epoch 2 loss 1.5175:  89%|████████▉ | 25/28 [01:37<00:09,  3.10s/it]epoch 2 loss 1.52186:  89%|████████▉ | 25/28 [01:38<00:09,  3.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6331[0m
[32m  eval_f1 = 0.3154[0m
[32m  eval_mcc = 0.614[0m
[32m  eval_precision = 0.4073[0m
[32m  eval_recall = 0.2936[0m
[32m  ********************[0m
[32m  Best f1:0.3154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.52186:  93%|█████████▎| 26/28 [01:42<00:07,  3.66s/it]epoch 2 loss 1.51916:  93%|█████████▎| 26/28 [01:43<00:07,  3.66s/it]epoch 2 loss 1.51916:  96%|█████████▋| 27/28 [01:43<00:02,  2.69s/it]epoch 2 loss 1.51236:  96%|█████████▋| 27/28 [01:43<00:02,  2.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6331[0m
[32m  eval_f1 = 0.3157[0m
[32m  eval_mcc = 0.6141[0m
[32m  eval_precision = 0.4208[0m
[32m  eval_recall = 0.2936[0m
[32m  ********************[0m
[32m  Best f1:0.3157[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.51236: 100%|██████████| 28/28 [01:47<00:00,  3.23s/it]epoch 2 loss 1.51236: 100%|██████████| 28/28 [01:47<00:00,  3.84s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.36875:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.36875:   4%|▎         | 1/28 [00:00<00:11,  2.45it/s]epoch 3 loss 1.37953:   4%|▎         | 1/28 [00:00<00:11,  2.45it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6355[0m
[32m  eval_f1 = 0.3186[0m
[32m  eval_mcc = 0.616[0m
[32m  eval_precision = 0.4349[0m
[32m  eval_recall = 0.2954[0m
[32m  ********************[0m
[32m  Best f1:0.3186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.616[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37953:   7%|▋         | 2/28 [00:06<01:38,  3.79s/it]epoch 3 loss 1.35839:   7%|▋         | 2/28 [00:06<01:38,  3.79s/it]epoch 3 loss 1.35839:  11%|█         | 3/28 [00:06<00:56,  2.25s/it]epoch 3 loss 1.3523:  11%|█         | 3/28 [00:07<00:56,  2.25s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6381[0m
[32m  eval_f1 = 0.3228[0m
[32m  eval_mcc = 0.6182[0m
[32m  eval_precision = 0.4326[0m
[32m  eval_recall = 0.2983[0m
[32m  ********************[0m
[32m  Best f1:0.3228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.3523:  14%|█▍        | 4/28 [00:13<01:30,  3.78s/it]epoch 3 loss 1.36314:  14%|█▍        | 4/28 [00:13<01:30,  3.78s/it]epoch 3 loss 1.36314:  18%|█▊        | 5/28 [00:13<00:59,  2.57s/it]epoch 3 loss 1.38898:  18%|█▊        | 5/28 [00:13<00:59,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.638[0m
[32m  eval_f1 = 0.3245[0m
[32m  eval_mcc = 0.6178[0m
[32m  eval_precision = 0.4288[0m
[32m  eval_recall = 0.2997[0m
[32m  ********************[0m
[32m  Best f1:0.3245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.38898:  21%|██▏       | 6/28 [00:18<01:14,  3.38s/it]epoch 3 loss 1.42364:  21%|██▏       | 6/28 [00:18<01:14,  3.38s/it]epoch 3 loss 1.42364:  25%|██▌       | 7/28 [00:18<00:50,  2.41s/it]epoch 3 loss 1.42146:  25%|██▌       | 7/28 [00:19<00:50,  2.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6375[0m
[32m  eval_f1 = 0.3254[0m
[32m  eval_mcc = 0.6169[0m
[32m  eval_precision = 0.4268[0m
[32m  eval_recall = 0.301[0m
[32m  ********************[0m
[32m  Best f1:0.3254[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.42146:  29%|██▊       | 8/28 [00:23<01:04,  3.22s/it]epoch 3 loss 1.41864:  29%|██▊       | 8/28 [00:24<01:04,  3.22s/it]epoch 3 loss 1.41864:  32%|███▏      | 9/28 [00:24<00:44,  2.34s/it]epoch 3 loss 1.41029:  32%|███▏      | 9/28 [00:24<00:44,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6394[0m
[32m  eval_f1 = 0.3262[0m
[32m  eval_mcc = 0.6186[0m
[32m  eval_precision = 0.4224[0m
[32m  eval_recall = 0.3022[0m
[32m  ********************[0m
[32m  Best f1:0.3262[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6186[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41029:  36%|███▌      | 10/28 [00:30<01:05,  3.62s/it]epoch 3 loss 1.41703:  36%|███▌      | 10/28 [00:31<01:05,  3.62s/it]epoch 3 loss 1.41703:  39%|███▉      | 11/28 [00:31<00:44,  2.64s/it]epoch 3 loss 1.42752:  39%|███▉      | 11/28 [00:31<00:44,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6405[0m
[32m  eval_f1 = 0.3267[0m
[32m  eval_mcc = 0.6198[0m
[32m  eval_precision = 0.4226[0m
[32m  eval_recall = 0.3024[0m
[32m  ********************[0m
[32m  Best f1:0.3267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42752:  43%|████▎     | 12/28 [00:37<00:58,  3.69s/it]epoch 3 loss 1.42226:  43%|████▎     | 12/28 [00:37<00:58,  3.69s/it]epoch 3 loss 1.42226:  46%|████▋     | 13/28 [00:37<00:40,  2.70s/it]epoch 3 loss 1.41337:  46%|████▋     | 13/28 [00:38<00:40,  2.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6408[0m
[32m  eval_f1 = 0.3279[0m
[32m  eval_mcc = 0.6205[0m
[32m  eval_precision = 0.4343[0m
[32m  eval_recall = 0.3029[0m
[32m  ********************[0m
[32m  Best f1:0.3279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41337:  50%|█████     | 14/28 [00:43<00:52,  3.77s/it]epoch 3 loss 1.41427:  50%|█████     | 14/28 [00:44<00:52,  3.77s/it]epoch 3 loss 1.41427:  54%|█████▎    | 15/28 [00:44<00:35,  2.76s/it]epoch 3 loss 1.40882:  54%|█████▎    | 15/28 [00:44<00:35,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.641[0m
[32m  eval_f1 = 0.3281[0m
[32m  eval_mcc = 0.6213[0m
[32m  eval_precision = 0.4364[0m
[32m  eval_recall = 0.3022[0m
[32m  ********************[0m
[32m  Best f1:0.3281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40882:  57%|█████▋    | 16/28 [00:50<00:45,  3.79s/it]epoch 3 loss 1.40739:  57%|█████▋    | 16/28 [00:50<00:45,  3.79s/it]epoch 3 loss 1.40739:  61%|██████    | 17/28 [00:50<00:30,  2.78s/it]epoch 3 loss 1.40957:  61%|██████    | 17/28 [00:51<00:30,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6425[0m
[32m  eval_f1 = 0.3289[0m
[32m  eval_mcc = 0.6229[0m
[32m  eval_precision = 0.4365[0m
[32m  eval_recall = 0.3032[0m
[32m  ********************[0m
[32m  Best f1:0.3289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40957:  64%|██████▍   | 18/28 [00:56<00:37,  3.77s/it]epoch 3 loss 1.40712:  64%|██████▍   | 18/28 [00:57<00:37,  3.77s/it]epoch 3 loss 1.40712:  68%|██████▊   | 19/28 [00:57<00:24,  2.77s/it]epoch 3 loss 1.40421:  68%|██████▊   | 19/28 [00:57<00:24,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.3294[0m
[32m  eval_mcc = 0.6234[0m
[32m  eval_precision = 0.4389[0m
[32m  eval_recall = 0.304[0m
[32m  ********************[0m
[32m  Best f1:0.3294[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40421:  71%|███████▏  | 20/28 [01:03<00:29,  3.73s/it]epoch 3 loss 1.40077:  71%|███████▏  | 20/28 [01:03<00:29,  3.73s/it]epoch 3 loss 1.40077:  75%|███████▌  | 21/28 [01:03<00:19,  2.74s/it]epoch 3 loss 1.40705:  75%|███████▌  | 21/28 [01:04<00:19,  2.74s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6444[0m
[32m  eval_f1 = 0.3299[0m
[32m  eval_mcc = 0.6257[0m
[32m  eval_precision = 0.4325[0m
[32m  eval_recall = 0.3047[0m
[32m  ********************[0m
[32m  Best f1:0.3299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40705:  79%|███████▊  | 22/28 [01:10<00:24,  4.05s/it]epoch 3 loss 1.40899:  79%|███████▊  | 22/28 [01:11<00:24,  4.05s/it]epoch 3 loss 1.40899:  82%|████████▏ | 23/28 [01:11<00:14,  2.96s/it]epoch 3 loss 1.41106:  82%|████████▏ | 23/28 [01:11<00:14,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.645[0m
[32m  eval_f1 = 0.3285[0m
[32m  eval_mcc = 0.6264[0m
[32m  eval_precision = 0.432[0m
[32m  eval_recall = 0.3042[0m
[32m  ********************[0m
[32m  Best MCC:0.6264[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41106:  86%|████████▌ | 24/28 [01:18<00:17,  4.31s/it]epoch 3 loss 1.41063:  86%|████████▌ | 24/28 [01:19<00:17,  4.31s/it]epoch 3 loss 1.41063:  89%|████████▉ | 25/28 [01:19<00:09,  3.14s/it]epoch 3 loss 1.41249:  89%|████████▉ | 25/28 [01:19<00:09,  3.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6464[0m
[32m  eval_f1 = 0.3295[0m
[32m  eval_mcc = 0.6277[0m
[32m  eval_precision = 0.431[0m
[32m  eval_recall = 0.3054[0m
[32m  ********************[0m
[32m  Best MCC:0.6277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41249:  93%|█████████▎| 26/28 [01:26<00:08,  4.50s/it]epoch 3 loss 1.40913:  93%|█████████▎| 26/28 [01:27<00:08,  4.50s/it]epoch 3 loss 1.40913:  96%|█████████▋| 27/28 [01:27<00:03,  3.28s/it]epoch 3 loss 1.40202:  96%|█████████▋| 27/28 [01:27<00:03,  3.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6475[0m
[32m  eval_f1 = 0.3313[0m
[32m  eval_mcc = 0.6283[0m
[32m  eval_precision = 0.4401[0m
[32m  eval_recall = 0.3065[0m
[32m  ********************[0m
[32m  Best f1:0.3313[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6283[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40202: 100%|██████████| 28/28 [01:38<00:00,  5.68s/it]epoch 3 loss 1.40202: 100%|██████████| 28/28 [01:38<00:00,  3.52s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.49237:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.49237:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 4 loss 1.41638:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6472[0m
[32m  eval_f1 = 0.3319[0m
[32m  eval_mcc = 0.6276[0m
[32m  eval_precision = 0.4396[0m
[32m  eval_recall = 0.3067[0m
[32m  ********************[0m
[32m  Best f1:0.3319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.41638:   7%|▋         | 2/28 [00:05<01:21,  3.15s/it]epoch 4 loss 1.42523:   7%|▋         | 2/28 [00:05<01:21,  3.15s/it]epoch 4 loss 1.42523:  11%|█         | 3/28 [00:05<00:47,  1.89s/it]epoch 4 loss 1.42241:  11%|█         | 3/28 [00:06<00:47,  1.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6477[0m
[32m  eval_f1 = 0.3324[0m
[32m  eval_mcc = 0.6278[0m
[32m  eval_precision = 0.4393[0m
[32m  eval_recall = 0.3068[0m
[32m  ********************[0m
[32m  Best f1:0.3324[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.42241:  14%|█▍        | 4/28 [00:13<01:37,  4.08s/it]epoch 4 loss 1.38304:  14%|█▍        | 4/28 [00:13<01:37,  4.08s/it]epoch 4 loss 1.38304:  18%|█▊        | 5/28 [00:13<01:03,  2.76s/it]epoch 4 loss 1.37247:  18%|█▊        | 5/28 [00:14<01:03,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6475[0m
[32m  eval_f1 = 0.3318[0m
[32m  eval_mcc = 0.6277[0m
[32m  eval_precision = 0.4405[0m
[32m  eval_recall = 0.3061[0m

epoch 4 loss 1.37247:  21%|██▏       | 6/28 [00:17<01:08,  3.11s/it]epoch 4 loss 1.38686:  21%|██▏       | 6/28 [00:17<01:08,  3.11s/it]epoch 4 loss 1.38686:  25%|██▌       | 7/28 [00:17<00:46,  2.23s/it]epoch 4 loss 1.38014:  25%|██▌       | 7/28 [00:18<00:46,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6468[0m
[32m  eval_f1 = 0.3329[0m
[32m  eval_mcc = 0.6269[0m
[32m  eval_precision = 0.4512[0m
[32m  eval_recall = 0.307[0m
[32m  ********************[0m
[32m  Best f1:0.3329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.38014:  29%|██▊       | 8/28 [00:23<01:02,  3.13s/it]epoch 4 loss 1.3773:  29%|██▊       | 8/28 [00:23<01:02,  3.13s/it] epoch 4 loss 1.3773:  32%|███▏      | 9/28 [00:23<00:43,  2.28s/it]epoch 4 loss 1.37979:  32%|███▏      | 9/28 [00:23<00:43,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6464[0m
[32m  eval_f1 = 0.3333[0m
[32m  eval_mcc = 0.6265[0m
[32m  eval_precision = 0.4513[0m
[32m  eval_recall = 0.3074[0m
[32m  ********************[0m
[32m  Best f1:0.3333[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.37979:  36%|███▌      | 10/28 [00:31<01:10,  3.94s/it]epoch 4 loss 1.39088:  36%|███▌      | 10/28 [00:31<01:10,  3.94s/it]epoch 4 loss 1.39088:  39%|███▉      | 11/28 [00:31<00:48,  2.86s/it]epoch 4 loss 1.3849:  39%|███▉      | 11/28 [00:31<00:48,  2.86s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6464[0m
[32m  eval_f1 = 0.3331[0m
[32m  eval_mcc = 0.6266[0m
[32m  eval_precision = 0.4409[0m
[32m  eval_recall = 0.3074[0m

epoch 4 loss 1.3849:  43%|████▎     | 12/28 [00:35<00:50,  3.15s/it]epoch 4 loss 1.38331:  43%|████▎     | 12/28 [00:35<00:50,  3.15s/it]epoch 4 loss 1.38331:  46%|████▋     | 13/28 [00:35<00:34,  2.31s/it]epoch 4 loss 1.37468:  46%|████▋     | 13/28 [00:36<00:34,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6469[0m
[32m  eval_f1 = 0.3333[0m
[32m  eval_mcc = 0.6272[0m
[32m  eval_precision = 0.4411[0m
[32m  eval_recall = 0.3077[0m

epoch 4 loss 1.37468:  50%|█████     | 14/28 [00:39<00:38,  2.76s/it]epoch 4 loss 1.37419:  50%|█████     | 14/28 [00:39<00:38,  2.76s/it]epoch 4 loss 1.37419:  54%|█████▎    | 15/28 [00:39<00:26,  2.05s/it]epoch 4 loss 1.37662:  54%|█████▎    | 15/28 [00:40<00:26,  2.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.647[0m
[32m  eval_f1 = 0.3345[0m
[32m  eval_mcc = 0.6273[0m
[32m  eval_precision = 0.451[0m
[32m  eval_recall = 0.3086[0m
[32m  ********************[0m
[32m  Best f1:0.3345[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.37662:  57%|█████▋    | 16/28 [00:47<00:44,  3.71s/it]epoch 4 loss 1.37512:  57%|█████▋    | 16/28 [00:47<00:44,  3.71s/it]epoch 4 loss 1.37512:  61%|██████    | 17/28 [00:47<00:29,  2.73s/it]epoch 4 loss 1.36817:  61%|██████    | 17/28 [00:48<00:29,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6476[0m
[32m  eval_f1 = 0.3355[0m
[32m  eval_mcc = 0.6279[0m
[32m  eval_precision = 0.4511[0m
[32m  eval_recall = 0.3096[0m
[32m  ********************[0m
[32m  Best f1:0.3355[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.36817:  64%|██████▍   | 18/28 [00:52<00:34,  3.43s/it]epoch 4 loss 1.36806:  64%|██████▍   | 18/28 [00:53<00:34,  3.43s/it]epoch 4 loss 1.36806:  68%|██████▊   | 19/28 [00:53<00:22,  2.52s/it]epoch 4 loss 1.3719:  68%|██████▊   | 19/28 [00:53<00:22,  2.52s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6478[0m
[32m  eval_f1 = 0.3357[0m
[32m  eval_mcc = 0.6281[0m
[32m  eval_precision = 0.4528[0m
[32m  eval_recall = 0.3099[0m
[32m  ********************[0m
[32m  Best f1:0.3357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.3719:  71%|███████▏  | 20/28 [01:00<00:31,  3.93s/it]epoch 4 loss 1.36861:  71%|███████▏  | 20/28 [01:01<00:31,  3.93s/it]epoch 4 loss 1.36861:  75%|███████▌  | 21/28 [01:01<00:20,  2.88s/it]epoch 4 loss 1.37055:  75%|███████▌  | 21/28 [01:01<00:20,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6477[0m
[32m  eval_f1 = 0.3357[0m
[32m  eval_mcc = 0.6281[0m
[32m  eval_precision = 0.4522[0m
[32m  eval_recall = 0.31[0m
[32m  ********************[0m
[32m  Best f1:0.3357[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.37055:  79%|███████▊  | 22/28 [01:06<00:21,  3.53s/it]epoch 4 loss 1.36887:  79%|███████▊  | 22/28 [01:06<00:21,  3.53s/it]epoch 4 loss 1.36887:  82%|████████▏ | 23/28 [01:06<00:12,  2.60s/it]epoch 4 loss 1.371:  82%|████████▏ | 23/28 [01:06<00:12,  2.60s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6479[0m
[32m  eval_f1 = 0.3358[0m
[32m  eval_mcc = 0.6283[0m
[32m  eval_precision = 0.4522[0m
[32m  eval_recall = 0.3101[0m
[32m  ********************[0m
[32m  Best f1:0.3358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.371:  86%|████████▌ | 24/28 [01:11<00:13,  3.29s/it]epoch 4 loss 1.36881:  86%|████████▌ | 24/28 [01:11<00:13,  3.29s/it]epoch 4 loss 1.36881:  89%|████████▉ | 25/28 [01:11<00:07,  2.43s/it]epoch 4 loss 1.36893:  89%|████████▉ | 25/28 [01:12<00:07,  2.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6481[0m
[32m  eval_f1 = 0.3359[0m
[32m  eval_mcc = 0.6284[0m
[32m  eval_precision = 0.4524[0m
[32m  eval_recall = 0.3102[0m
[32m  ********************[0m
[32m  Best f1:0.3359[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.36893:  93%|█████████▎| 26/28 [01:18<00:07,  3.61s/it]epoch 4 loss 1.36895:  93%|█████████▎| 26/28 [01:18<00:07,  3.61s/it]epoch 4 loss 1.36895:  96%|█████████▋| 27/28 [01:18<00:02,  2.66s/it]epoch 4 loss 1.3645:  96%|█████████▋| 27/28 [01:18<00:02,  2.66s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6482[0m
[32m  eval_f1 = 0.3358[0m
[32m  eval_mcc = 0.6286[0m
[32m  eval_precision = 0.4524[0m
[32m  eval_recall = 0.3102[0m
[32m  ********************[0m
[32m  Best MCC:0.6286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_10/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.3645: 100%|██████████| 28/28 [01:23<00:00,  3.32s/it]epoch 4 loss 1.3645: 100%|██████████| 28/28 [01:23<00:00,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.61it/s] 20%|██        | 2/10 [00:00<00:02,  2.69it/s] 30%|███       | 3/10 [00:01<00:02,  2.71it/s] 40%|████      | 4/10 [00:01<00:02,  2.73it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6481[0m
[32m  eval_f1 = 0.3359[0m
[32m  eval_mcc = 0.6284[0m
[32m  eval_precision = 0.4524[0m
[32m  eval_recall = 0.3102[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6339[0m
[32m  eval_f1 = 0.3022[0m
[32m  eval_mcc = 0.6147[0m
[32m  eval_precision = 0.3963[0m
[32m  eval_recall = 0.2789[0m

