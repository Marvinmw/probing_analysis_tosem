[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=12, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/1/layer_12', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.15849:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.15849:   4%|▎         | 1/28 [00:00<00:20,  1.31it/s]epoch 0 loss 5.15944:   4%|▎         | 1/28 [00:01<00:20,  1.31it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0054[0m
[32m  eval_f1 = 0.002[0m
[32m  eval_mcc = 0.0003[0m
[32m  eval_precision = 0.0092[0m
[32m  eval_recall = 0.0034[0m
[32m  ********************[0m
[32m  Best f1:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0003[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.15944:   7%|▋         | 2/28 [00:05<01:24,  3.24s/it]epoch 0 loss 5.1479:   7%|▋         | 2/28 [00:06<01:24,  3.24s/it] epoch 0 loss 5.1479:  11%|█         | 3/28 [00:06<00:48,  1.94s/it]epoch 0 loss 5.12837:  11%|█         | 3/28 [00:06<00:48,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0156[0m
[32m  eval_f1 = 0.0067[0m
[32m  eval_mcc = 0.0084[0m
[32m  eval_precision = 0.0105[0m
[32m  eval_recall = 0.0087[0m
[32m  ********************[0m
[32m  Best f1:0.0067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.12837:  14%|█▍        | 4/28 [00:15<01:56,  4.87s/it]epoch 0 loss 5.10375:  14%|█▍        | 4/28 [00:15<01:56,  4.87s/it]epoch 0 loss 5.10375:  18%|█▊        | 5/28 [00:15<01:15,  3.26s/it]epoch 0 loss 5.07513:  18%|█▊        | 5/28 [00:16<01:15,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0297[0m
[32m  eval_f1 = 0.0084[0m
[32m  eval_mcc = 0.016[0m
[32m  eval_precision = 0.0107[0m
[32m  eval_recall = 0.0145[0m
[32m  ********************[0m
[32m  Best f1:0.0084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.016[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.07513:  21%|██▏       | 6/28 [00:25<01:57,  5.36s/it]epoch 0 loss 5.03819:  21%|██▏       | 6/28 [00:25<01:57,  5.36s/it]epoch 0 loss 5.03819:  25%|██▌       | 7/28 [00:25<01:18,  3.75s/it]epoch 0 loss 4.9978:  25%|██▌       | 7/28 [00:26<01:18,  3.75s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0487[0m
[32m  eval_f1 = 0.0086[0m
[32m  eval_mcc = 0.0253[0m
[32m  eval_precision = 0.0103[0m
[32m  eval_recall = 0.0188[0m
[32m  ********************[0m
[32m  Best f1:0.0086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0253[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.9978:  29%|██▊       | 8/28 [00:35<01:55,  5.76s/it]epoch 0 loss 4.94573:  29%|██▊       | 8/28 [00:36<01:55,  5.76s/it]epoch 0 loss 4.94573:  32%|███▏      | 9/28 [00:36<01:17,  4.09s/it]epoch 0 loss 4.89105:  32%|███▏      | 9/28 [00:36<01:17,  4.09s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0738[0m
[32m  eval_f1 = 0.0133[0m
[32m  eval_mcc = 0.0449[0m
[32m  eval_precision = 0.0455[0m
[32m  eval_recall = 0.0256[0m
[32m  ********************[0m
[32m  Best f1:0.0133[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0449[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.89105:  36%|███▌      | 10/28 [00:45<01:41,  5.66s/it]epoch 0 loss 4.83805:  36%|███▌      | 10/28 [00:45<01:41,  5.66s/it]epoch 0 loss 4.83805:  39%|███▉      | 11/28 [00:45<01:08,  4.05s/it]epoch 0 loss 4.77621:  39%|███▉      | 11/28 [00:46<01:08,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0946[0m
[32m  eval_f1 = 0.0189[0m
[32m  eval_mcc = 0.0616[0m
[32m  eval_precision = 0.0473[0m
[32m  eval_recall = 0.0293[0m
[32m  ********************[0m
[32m  Best f1:0.0189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0616[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.77621:  43%|████▎     | 12/28 [00:53<01:23,  5.19s/it]epoch 0 loss 4.71482:  43%|████▎     | 12/28 [00:54<01:23,  5.19s/it]epoch 0 loss 4.71482:  46%|████▋     | 13/28 [00:54<00:56,  3.75s/it]epoch 0 loss 4.65167:  46%|████▋     | 13/28 [00:54<00:56,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1267[0m
[32m  eval_f1 = 0.0257[0m
[32m  eval_mcc = 0.0875[0m
[32m  eval_precision = 0.0429[0m
[32m  eval_recall = 0.0324[0m
[32m  ********************[0m
[32m  Best f1:0.0257[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.65167:  50%|█████     | 14/28 [01:03<01:16,  5.48s/it]epoch 0 loss 4.59296:  50%|█████     | 14/28 [01:03<01:16,  5.48s/it]epoch 0 loss 4.59296:  54%|█████▎    | 15/28 [01:03<00:51,  3.95s/it]epoch 0 loss 4.53241:  54%|█████▎    | 15/28 [01:04<00:51,  3.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1773[0m
[32m  eval_f1 = 0.0298[0m
[32m  eval_mcc = 0.1306[0m
[32m  eval_precision = 0.0454[0m
[32m  eval_recall = 0.0382[0m
[32m  ********************[0m
[32m  Best f1:0.0298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1306[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.53241:  57%|█████▋    | 16/28 [01:12<01:03,  5.27s/it]epoch 0 loss 4.47296:  57%|█████▋    | 16/28 [01:12<01:03,  5.27s/it]epoch 0 loss 4.47296:  61%|██████    | 17/28 [01:12<00:41,  3.81s/it]epoch 0 loss 4.41133:  61%|██████    | 17/28 [01:13<00:41,  3.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2229[0m
[32m  eval_f1 = 0.0334[0m
[32m  eval_mcc = 0.1721[0m
[32m  eval_precision = 0.0578[0m
[32m  eval_recall = 0.042[0m
[32m  ********************[0m
[32m  Best f1:0.0334[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1721[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.41133:  64%|██████▍   | 18/28 [01:22<00:56,  5.61s/it]epoch 0 loss 4.35025:  64%|██████▍   | 18/28 [01:22<00:56,  5.61s/it]epoch 0 loss 4.35025:  68%|██████▊   | 19/28 [01:22<00:36,  4.05s/it]epoch 0 loss 4.29402:  68%|██████▊   | 19/28 [01:23<00:36,  4.05s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.252[0m
[32m  eval_f1 = 0.0344[0m
[32m  eval_mcc = 0.1946[0m
[32m  eval_precision = 0.0587[0m
[32m  eval_recall = 0.0404[0m
[32m  ********************[0m
[32m  Best f1:0.0344[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1946[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.29402:  71%|███████▏  | 20/28 [01:33<00:48,  6.10s/it]epoch 0 loss 4.23723:  71%|███████▏  | 20/28 [01:34<00:48,  6.10s/it]epoch 0 loss 4.23723:  75%|███████▌  | 21/28 [01:34<00:30,  4.39s/it]epoch 0 loss 4.18286:  75%|███████▌  | 21/28 [01:34<00:30,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2684[0m
[32m  eval_f1 = 0.028[0m
[32m  eval_mcc = 0.207[0m
[32m  eval_precision = 0.05[0m
[32m  eval_recall = 0.0349[0m
[32m  ********************[0m
[32m  Best MCC:0.207[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.18286:  79%|███████▊  | 22/28 [01:41<00:31,  5.21s/it]epoch 0 loss 4.13031:  79%|███████▊  | 22/28 [01:41<00:31,  5.21s/it]epoch 0 loss 4.13031:  82%|████████▏ | 23/28 [01:41<00:18,  3.77s/it]epoch 0 loss 4.08423:  82%|████████▏ | 23/28 [01:42<00:18,  3.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2724[0m
[32m  eval_f1 = 0.0337[0m
[32m  eval_mcc = 0.22[0m
[32m  eval_precision = 0.0861[0m
[32m  eval_recall = 0.037[0m
[32m  ********************[0m
[32m  Best MCC:0.22[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.08423:  86%|████████▌ | 24/28 [01:48<00:19,  4.82s/it]epoch 0 loss 4.03451:  86%|████████▌ | 24/28 [01:49<00:19,  4.82s/it]epoch 0 loss 4.03451:  89%|████████▉ | 25/28 [01:49<00:10,  3.50s/it]epoch 0 loss 3.9913:  89%|████████▉ | 25/28 [01:49<00:10,  3.50s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3109[0m
[32m  eval_f1 = 0.0727[0m
[32m  eval_mcc = 0.2741[0m
[32m  eval_precision = 0.1491[0m
[32m  eval_recall = 0.0658[0m
[32m  ********************[0m
[32m  Best f1:0.0727[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2741[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.9913:  93%|█████████▎| 26/28 [02:01<00:12,  6.13s/it]epoch 0 loss 3.94456:  93%|█████████▎| 26/28 [02:02<00:12,  6.13s/it]epoch 0 loss 3.94456:  96%|█████████▋| 27/28 [02:02<00:04,  4.41s/it]epoch 0 loss 3.90072:  96%|█████████▋| 27/28 [02:02<00:04,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3975[0m
[32m  eval_f1 = 0.1215[0m
[32m  eval_mcc = 0.3734[0m
[32m  eval_precision = 0.1952[0m
[32m  eval_recall = 0.1129[0m
[32m  ********************[0m
[32m  Best f1:0.1215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3734[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.90072: 100%|██████████| 28/28 [02:12<00:00,  6.12s/it]epoch 0 loss 3.90072: 100%|██████████| 28/28 [02:12<00:00,  4.72s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.77315:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.77315:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 1 loss 2.67493:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.46[0m
[32m  eval_f1 = 0.1453[0m
[32m  eval_mcc = 0.4356[0m
[32m  eval_precision = 0.2139[0m
[32m  eval_recall = 0.1401[0m
[32m  ********************[0m
[32m  Best f1:0.1453[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.67493:   7%|▋         | 2/28 [00:10<02:40,  6.18s/it]epoch 1 loss 2.6293:   7%|▋         | 2/28 [00:11<02:40,  6.18s/it] epoch 1 loss 2.6293:  11%|█         | 3/28 [00:11<01:28,  3.55s/it]epoch 1 loss 2.5897:  11%|█         | 3/28 [00:11<01:28,  3.55s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.505[0m
[32m  eval_f1 = 0.1678[0m
[32m  eval_mcc = 0.4758[0m
[32m  eval_precision = 0.2206[0m
[32m  eval_recall = 0.1606[0m
[32m  ********************[0m
[32m  Best f1:0.1678[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4758[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.5897:  14%|█▍        | 4/28 [00:19<02:09,  5.41s/it]epoch 1 loss 2.54859:  14%|█▍        | 4/28 [00:19<02:09,  5.41s/it]epoch 1 loss 2.54859:  18%|█▊        | 5/28 [00:19<01:23,  3.61s/it]epoch 1 loss 2.49258:  18%|█▊        | 5/28 [00:20<01:23,  3.61s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5378[0m
[32m  eval_f1 = 0.1803[0m
[32m  eval_mcc = 0.5083[0m
[32m  eval_precision = 0.2191[0m
[32m  eval_recall = 0.1734[0m
[32m  ********************[0m
[32m  Best f1:0.1803[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5083[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.49258:  21%|██▏       | 6/28 [00:30<02:14,  6.12s/it]epoch 1 loss 2.46191:  21%|██▏       | 6/28 [00:31<02:14,  6.12s/it]epoch 1 loss 2.46191:  25%|██▌       | 7/28 [00:31<01:29,  4.26s/it]epoch 1 loss 2.42025:  25%|██▌       | 7/28 [00:31<01:29,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5489[0m
[32m  eval_f1 = 0.184[0m
[32m  eval_mcc = 0.5202[0m
[32m  eval_precision = 0.24[0m
[32m  eval_recall = 0.1758[0m
[32m  ********************[0m
[32m  Best f1:0.184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5202[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.42025:  29%|██▊       | 8/28 [00:39<01:51,  5.56s/it]epoch 1 loss 2.39582:  29%|██▊       | 8/28 [00:39<01:51,  5.56s/it]epoch 1 loss 2.39582:  32%|███▏      | 9/28 [00:39<01:15,  3.95s/it]epoch 1 loss 2.3504:  32%|███▏      | 9/28 [00:40<01:15,  3.95s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5516[0m
[32m  eval_f1 = 0.1852[0m
[32m  eval_mcc = 0.5237[0m
[32m  eval_precision = 0.2448[0m
[32m  eval_recall = 0.1749[0m
[32m  ********************[0m
[32m  Best f1:0.1852[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.3504:  36%|███▌      | 10/28 [00:49<01:39,  5.54s/it]epoch 1 loss 2.32291:  36%|███▌      | 10/28 [00:49<01:39,  5.54s/it]epoch 1 loss 2.32291:  39%|███▉      | 11/28 [00:49<01:07,  3.97s/it]epoch 1 loss 2.29347:  39%|███▉      | 11/28 [00:49<01:07,  3.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.557[0m
[32m  eval_f1 = 0.1874[0m
[32m  eval_mcc = 0.5317[0m
[32m  eval_precision = 0.245[0m
[32m  eval_recall = 0.178[0m
[32m  ********************[0m
[32m  Best f1:0.1874[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29347:  43%|████▎     | 12/28 [00:59<01:32,  5.81s/it]epoch 1 loss 2.26753:  43%|████▎     | 12/28 [00:59<01:32,  5.81s/it]epoch 1 loss 2.26753:  46%|████▋     | 13/28 [00:59<01:02,  4.18s/it]epoch 1 loss 2.24723:  46%|████▋     | 13/28 [01:00<01:02,  4.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5598[0m
[32m  eval_f1 = 0.1903[0m
[32m  eval_mcc = 0.5381[0m
[32m  eval_precision = 0.2458[0m
[32m  eval_recall = 0.1823[0m
[32m  ********************[0m
[32m  Best f1:0.1903[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5381[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.24723:  50%|█████     | 14/28 [01:09<01:21,  5.82s/it]epoch 1 loss 2.22877:  50%|█████     | 14/28 [01:09<01:21,  5.82s/it]epoch 1 loss 2.22877:  54%|█████▎    | 15/28 [01:09<00:54,  4.20s/it]epoch 1 loss 2.20594:  54%|█████▎    | 15/28 [01:10<00:54,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5644[0m
[32m  eval_f1 = 0.1944[0m
[32m  eval_mcc = 0.543[0m
[32m  eval_precision = 0.2475[0m
[32m  eval_recall = 0.1869[0m
[32m  ********************[0m
[32m  Best f1:0.1944[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.543[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.20594:  57%|█████▋    | 16/28 [01:21<01:15,  6.30s/it]epoch 1 loss 2.18122:  57%|█████▋    | 16/28 [01:21<01:15,  6.30s/it]epoch 1 loss 2.18122:  61%|██████    | 17/28 [01:21<00:49,  4.53s/it]epoch 1 loss 2.16269:  61%|██████    | 17/28 [01:21<00:49,  4.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.78it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5699[0m
[32m  eval_f1 = 0.2004[0m
[32m  eval_mcc = 0.5482[0m
[32m  eval_precision = 0.2771[0m
[32m  eval_recall = 0.193[0m
[32m  ********************[0m
[32m  Best f1:0.2004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5482[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.16269:  64%|██████▍   | 18/28 [01:29<00:55,  5.56s/it]epoch 1 loss 2.14108:  64%|██████▍   | 18/28 [01:29<00:55,  5.56s/it]epoch 1 loss 2.14108:  68%|██████▊   | 19/28 [01:29<00:36,  4.02s/it]epoch 1 loss 2.13107:  68%|██████▊   | 19/28 [01:30<00:36,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5719[0m
[32m  eval_f1 = 0.2056[0m
[32m  eval_mcc = 0.5485[0m
[32m  eval_precision = 0.2777[0m
[32m  eval_recall = 0.1988[0m
[32m  ********************[0m
[32m  Best f1:0.2056[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5485[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.13107:  71%|███████▏  | 20/28 [01:41<00:49,  6.17s/it]epoch 1 loss 2.11911:  71%|███████▏  | 20/28 [01:41<00:49,  6.17s/it]epoch 1 loss 2.11911:  75%|███████▌  | 21/28 [01:41<00:31,  4.44s/it]epoch 1 loss 2.11224:  75%|███████▌  | 21/28 [01:41<00:31,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5815[0m
[32m  eval_f1 = 0.2162[0m
[32m  eval_mcc = 0.5575[0m
[32m  eval_precision = 0.3117[0m
[32m  eval_recall = 0.2065[0m
[32m  ********************[0m
[32m  Best f1:0.2162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5575[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11224:  79%|███████▊  | 22/28 [01:53<00:39,  6.66s/it]epoch 1 loss 2.1036:  79%|███████▊  | 22/28 [01:53<00:39,  6.66s/it] epoch 1 loss 2.1036:  82%|████████▏ | 23/28 [01:53<00:23,  4.79s/it]epoch 1 loss 2.09403:  82%|████████▏ | 23/28 [01:54<00:23,  4.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5873[0m
[32m  eval_f1 = 0.2298[0m
[32m  eval_mcc = 0.5624[0m
[32m  eval_precision = 0.343[0m
[32m  eval_recall = 0.2165[0m
[32m  ********************[0m
[32m  Best f1:0.2298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5624[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09403:  86%|████████▌ | 24/28 [02:03<00:24,  6.24s/it]epoch 1 loss 2.07847:  86%|████████▌ | 24/28 [02:03<00:24,  6.24s/it]epoch 1 loss 2.07847:  89%|████████▉ | 25/28 [02:03<00:13,  4.50s/it]epoch 1 loss 2.05894:  89%|████████▉ | 25/28 [02:04<00:13,  4.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5904[0m
[32m  eval_f1 = 0.2394[0m
[32m  eval_mcc = 0.5658[0m
[32m  eval_precision = 0.344[0m
[32m  eval_recall = 0.2234[0m
[32m  ********************[0m
[32m  Best f1:0.2394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5658[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.05894:  93%|█████████▎| 26/28 [02:15<00:13,  6.74s/it]epoch 1 loss 2.04383:  93%|█████████▎| 26/28 [02:16<00:13,  6.74s/it]epoch 1 loss 2.04383:  96%|█████████▋| 27/28 [02:16<00:04,  4.85s/it]epoch 1 loss 2.02874:  96%|█████████▋| 27/28 [02:16<00:04,  4.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5951[0m
[32m  eval_f1 = 0.243[0m
[32m  eval_mcc = 0.5712[0m
[32m  eval_precision = 0.3378[0m
[32m  eval_recall = 0.2258[0m
[32m  ********************[0m
[32m  Best f1:0.243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5712[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.02874: 100%|██████████| 28/28 [02:26<00:00,  6.36s/it]epoch 1 loss 2.02874: 100%|██████████| 28/28 [02:26<00:00,  5.22s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.64413:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.64413:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.62319:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.598[0m
[32m  eval_f1 = 0.2487[0m
[32m  eval_mcc = 0.5746[0m
[32m  eval_precision = 0.3389[0m
[32m  eval_recall = 0.2301[0m
[32m  ********************[0m
[32m  Best f1:0.2487[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5746[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62319:   7%|▋         | 2/28 [00:10<02:40,  6.16s/it]epoch 2 loss 1.64966:   7%|▋         | 2/28 [00:11<02:40,  6.16s/it]epoch 2 loss 1.64966:  11%|█         | 3/28 [00:11<01:28,  3.54s/it]epoch 2 loss 1.63641:  11%|█         | 3/28 [00:11<01:28,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6009[0m
[32m  eval_f1 = 0.2648[0m
[32m  eval_mcc = 0.5788[0m
[32m  eval_precision = 0.366[0m
[32m  eval_recall = 0.2453[0m
[32m  ********************[0m
[32m  Best f1:0.2648[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5788[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.63641:  14%|█▍        | 4/28 [00:21<02:29,  6.24s/it]epoch 2 loss 1.64005:  14%|█▍        | 4/28 [00:21<02:29,  6.24s/it]epoch 2 loss 1.64005:  18%|█▊        | 5/28 [00:21<01:35,  4.14s/it]epoch 2 loss 1.61716:  18%|█▊        | 5/28 [00:22<01:35,  4.14s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6048[0m
[32m  eval_f1 = 0.2688[0m
[32m  eval_mcc = 0.5835[0m
[32m  eval_precision = 0.3659[0m
[32m  eval_recall = 0.2497[0m
[32m  ********************[0m
[32m  Best f1:0.2688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5835[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.61716:  21%|██▏       | 6/28 [00:33<02:24,  6.59s/it]epoch 2 loss 1.6147:  21%|██▏       | 6/28 [00:33<02:24,  6.59s/it] epoch 2 loss 1.6147:  25%|██▌       | 7/28 [00:33<01:36,  4.57s/it]epoch 2 loss 1.62006:  25%|██▌       | 7/28 [00:33<01:36,  4.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.609[0m
[32m  eval_f1 = 0.2735[0m
[32m  eval_mcc = 0.5873[0m
[32m  eval_precision = 0.3677[0m
[32m  eval_recall = 0.2531[0m
[32m  ********************[0m
[32m  Best f1:0.2735[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5873[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.62006:  29%|██▊       | 8/28 [00:44<02:09,  6.48s/it]epoch 2 loss 1.60633:  29%|██▊       | 8/28 [00:44<02:09,  6.48s/it]epoch 2 loss 1.60633:  32%|███▏      | 9/28 [00:44<01:27,  4.58s/it]epoch 2 loss 1.59176:  32%|███▏      | 9/28 [00:44<01:27,  4.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.02it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6093[0m
[32m  eval_f1 = 0.2728[0m
[32m  eval_mcc = 0.5869[0m
[32m  eval_precision = 0.3697[0m
[32m  eval_recall = 0.2531[0m

epoch 2 loss 1.59176:  36%|███▌      | 10/28 [00:48<01:17,  4.33s/it]epoch 2 loss 1.59005:  36%|███▌      | 10/28 [00:48<01:17,  4.33s/it]epoch 2 loss 1.59005:  39%|███▉      | 11/28 [00:48<00:53,  3.13s/it]epoch 2 loss 1.59035:  39%|███▉      | 11/28 [00:49<00:53,  3.13s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6102[0m
[32m  eval_f1 = 0.278[0m
[32m  eval_mcc = 0.5875[0m
[32m  eval_precision = 0.3768[0m
[32m  eval_recall = 0.2579[0m
[32m  ********************[0m
[32m  Best f1:0.278[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59035:  43%|████▎     | 12/28 [00:57<01:15,  4.71s/it]epoch 2 loss 1.59234:  43%|████▎     | 12/28 [00:57<01:15,  4.71s/it]epoch 2 loss 1.59234:  46%|████▋     | 13/28 [00:57<00:51,  3.41s/it]epoch 2 loss 1.58299:  46%|████▋     | 13/28 [00:57<00:51,  3.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6137[0m
[32m  eval_f1 = 0.2834[0m
[32m  eval_mcc = 0.5907[0m
[32m  eval_precision = 0.376[0m
[32m  eval_recall = 0.2671[0m
[32m  ********************[0m
[32m  Best f1:0.2834[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58299:  50%|█████     | 14/28 [01:08<01:17,  5.57s/it]epoch 2 loss 1.58002:  50%|█████     | 14/28 [01:08<01:17,  5.57s/it]epoch 2 loss 1.58002:  54%|█████▎    | 15/28 [01:08<00:52,  4.02s/it]epoch 2 loss 1.57992:  54%|█████▎    | 15/28 [01:08<00:52,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6158[0m
[32m  eval_f1 = 0.2881[0m
[32m  eval_mcc = 0.5931[0m
[32m  eval_precision = 0.3692[0m
[32m  eval_recall = 0.2722[0m
[32m  ********************[0m
[32m  Best f1:0.2881[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5931[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57992:  57%|█████▋    | 16/28 [01:17<01:07,  5.62s/it]epoch 2 loss 1.58502:  57%|█████▋    | 16/28 [01:18<01:07,  5.62s/it]epoch 2 loss 1.58502:  61%|██████    | 17/28 [01:18<00:44,  4.06s/it]epoch 2 loss 1.59226:  61%|██████    | 17/28 [01:18<00:44,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.619[0m
[32m  eval_f1 = 0.2935[0m
[32m  eval_mcc = 0.5971[0m
[32m  eval_precision = 0.3808[0m
[32m  eval_recall = 0.2769[0m
[32m  ********************[0m
[32m  Best f1:0.2935[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5971[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59226:  64%|██████▍   | 18/28 [01:26<00:54,  5.42s/it]epoch 2 loss 1.58917:  64%|██████▍   | 18/28 [01:27<00:54,  5.42s/it]epoch 2 loss 1.58917:  68%|██████▊   | 19/28 [01:27<00:35,  3.92s/it]epoch 2 loss 1.58986:  68%|██████▊   | 19/28 [01:27<00:35,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6215[0m
[32m  eval_f1 = 0.2969[0m
[32m  eval_mcc = 0.6007[0m
[32m  eval_precision = 0.3921[0m
[32m  eval_recall = 0.2792[0m
[32m  ********************[0m
[32m  Best f1:0.2969[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58986:  71%|███████▏  | 20/28 [01:34<00:40,  5.02s/it]epoch 2 loss 1.58552:  71%|███████▏  | 20/28 [01:35<00:40,  5.02s/it]epoch 2 loss 1.58552:  75%|███████▌  | 21/28 [01:35<00:25,  3.64s/it]epoch 2 loss 1.58198:  75%|███████▌  | 21/28 [01:35<00:25,  3.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.77it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6229[0m
[32m  eval_f1 = 0.2997[0m
[32m  eval_mcc = 0.6037[0m
[32m  eval_precision = 0.3923[0m
[32m  eval_recall = 0.2798[0m
[32m  ********************[0m
[32m  Best f1:0.2997[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6037[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58198:  79%|███████▊  | 22/28 [01:44<00:31,  5.28s/it]epoch 2 loss 1.57771:  79%|███████▊  | 22/28 [01:44<00:31,  5.28s/it]epoch 2 loss 1.57771:  82%|████████▏ | 23/28 [01:44<00:19,  3.82s/it]epoch 2 loss 1.57584:  82%|████████▏ | 23/28 [01:45<00:19,  3.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6224[0m
[32m  eval_f1 = 0.3011[0m
[32m  eval_mcc = 0.6034[0m
[32m  eval_precision = 0.3972[0m
[32m  eval_recall = 0.2803[0m
[32m  ********************[0m
[32m  Best f1:0.3011[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.57584:  86%|████████▌ | 24/28 [01:50<00:18,  4.52s/it]epoch 2 loss 1.57538:  86%|████████▌ | 24/28 [01:51<00:18,  4.52s/it]epoch 2 loss 1.57538:  89%|████████▉ | 25/28 [01:51<00:09,  3.29s/it]epoch 2 loss 1.57959:  89%|████████▉ | 25/28 [01:51<00:09,  3.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6221[0m
[32m  eval_f1 = 0.3009[0m
[32m  eval_mcc = 0.6022[0m
[32m  eval_precision = 0.396[0m
[32m  eval_recall = 0.2805[0m

epoch 2 loss 1.57959:  93%|█████████▎| 26/28 [01:55<00:06,  3.44s/it]epoch 2 loss 1.57673:  93%|█████████▎| 26/28 [01:55<00:06,  3.44s/it]epoch 2 loss 1.57673:  96%|█████████▋| 27/28 [01:55<00:02,  2.53s/it]epoch 2 loss 1.56986:  96%|█████████▋| 27/28 [01:55<00:02,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6224[0m
[32m  eval_f1 = 0.3026[0m
[32m  eval_mcc = 0.6023[0m
[32m  eval_precision = 0.4155[0m
[32m  eval_recall = 0.2813[0m
[32m  ********************[0m
[32m  Best f1:0.3026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.56986: 100%|██████████| 28/28 [02:02<00:00,  3.73s/it]epoch 2 loss 1.56986: 100%|██████████| 28/28 [02:02<00:00,  4.36s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.4219:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.4219:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 3 loss 1.43366:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6252[0m
[32m  eval_f1 = 0.3065[0m
[32m  eval_mcc = 0.6047[0m
[32m  eval_precision = 0.4053[0m
[32m  eval_recall = 0.2849[0m
[32m  ********************[0m
[32m  Best f1:0.3065[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6047[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43366:   7%|▋         | 2/28 [00:09<02:23,  5.54s/it]epoch 3 loss 1.41003:   7%|▋         | 2/28 [00:09<02:23,  5.54s/it]epoch 3 loss 1.41003:  11%|█         | 3/28 [00:09<01:20,  3.20s/it]epoch 3 loss 1.40643:  11%|█         | 3/28 [00:10<01:20,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6268[0m
[32m  eval_f1 = 0.3104[0m
[32m  eval_mcc = 0.6059[0m
[32m  eval_precision = 0.4146[0m
[32m  eval_recall = 0.2877[0m
[32m  ********************[0m
[32m  Best f1:0.3104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.40643:  14%|█▍        | 4/28 [00:20<02:22,  5.93s/it]epoch 3 loss 1.41703:  14%|█▍        | 4/28 [00:20<02:22,  5.93s/it]epoch 3 loss 1.41703:  18%|█▊        | 5/28 [00:20<01:30,  3.94s/it]epoch 3 loss 1.44445:  18%|█▊        | 5/28 [00:20<01:30,  3.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6289[0m
[32m  eval_f1 = 0.3123[0m
[32m  eval_mcc = 0.6079[0m
[32m  eval_precision = 0.4264[0m
[32m  eval_recall = 0.2891[0m
[32m  ********************[0m
[32m  Best f1:0.3123[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44445:  21%|██▏       | 6/28 [00:29<02:00,  5.50s/it]epoch 3 loss 1.47896:  21%|██▏       | 6/28 [00:29<02:00,  5.50s/it]epoch 3 loss 1.47896:  25%|██▌       | 7/28 [00:29<01:20,  3.84s/it]epoch 3 loss 1.47538:  25%|██▌       | 7/28 [00:29<01:20,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6308[0m
[32m  eval_f1 = 0.3155[0m
[32m  eval_mcc = 0.6099[0m
[32m  eval_precision = 0.4347[0m
[32m  eval_recall = 0.2918[0m
[32m  ********************[0m
[32m  Best f1:0.3155[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.47538:  29%|██▊       | 8/28 [00:35<01:30,  4.54s/it]epoch 3 loss 1.47191:  29%|██▊       | 8/28 [00:35<01:30,  4.54s/it]epoch 3 loss 1.47191:  32%|███▏      | 9/28 [00:35<01:01,  3.26s/it]epoch 3 loss 1.46321:  32%|███▏      | 9/28 [00:36<01:01,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6315[0m
[32m  eval_f1 = 0.3167[0m
[32m  eval_mcc = 0.6104[0m
[32m  eval_precision = 0.4295[0m
[32m  eval_recall = 0.2931[0m
[32m  ********************[0m
[32m  Best f1:0.3167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46321:  36%|███▌      | 10/28 [00:42<01:14,  4.13s/it]epoch 3 loss 1.46947:  36%|███▌      | 10/28 [00:42<01:14,  4.13s/it]epoch 3 loss 1.46947:  39%|███▉      | 11/28 [00:42<00:50,  3.00s/it]epoch 3 loss 1.48012:  39%|███▉      | 11/28 [00:42<00:50,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6317[0m
[32m  eval_f1 = 0.3163[0m
[32m  eval_mcc = 0.6106[0m
[32m  eval_precision = 0.427[0m
[32m  eval_recall = 0.2933[0m
[32m  ********************[0m
[32m  Best MCC:0.6106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.48012:  43%|████▎     | 12/28 [00:47<00:58,  3.63s/it]epoch 3 loss 1.47508:  43%|████▎     | 12/28 [00:47<00:58,  3.63s/it]epoch 3 loss 1.47508:  46%|████▋     | 13/28 [00:47<00:39,  2.65s/it]epoch 3 loss 1.46617:  46%|████▋     | 13/28 [00:48<00:39,  2.65s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6319[0m
[32m  eval_f1 = 0.3153[0m
[32m  eval_mcc = 0.6113[0m
[32m  eval_precision = 0.4273[0m
[32m  eval_recall = 0.292[0m
[32m  ********************[0m
[32m  Best MCC:0.6113[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46617:  50%|█████     | 14/28 [00:52<00:47,  3.38s/it]epoch 3 loss 1.46764:  50%|█████     | 14/28 [00:53<00:47,  3.38s/it]epoch 3 loss 1.46764:  54%|█████▎    | 15/28 [00:53<00:32,  2.49s/it]epoch 3 loss 1.46191:  54%|█████▎    | 15/28 [00:53<00:32,  2.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6328[0m
[32m  eval_f1 = 0.3154[0m
[32m  eval_mcc = 0.6129[0m
[32m  eval_precision = 0.4292[0m
[32m  eval_recall = 0.2917[0m
[32m  ********************[0m
[32m  Best MCC:0.6129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46191:  57%|█████▋    | 16/28 [00:58<00:38,  3.23s/it]epoch 3 loss 1.46009:  57%|█████▋    | 16/28 [00:58<00:38,  3.23s/it]epoch 3 loss 1.46009:  61%|██████    | 17/28 [00:58<00:26,  2.38s/it]epoch 3 loss 1.46252:  61%|██████    | 17/28 [00:59<00:26,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6343[0m
[32m  eval_f1 = 0.3163[0m
[32m  eval_mcc = 0.6146[0m
[32m  eval_precision = 0.4308[0m
[32m  eval_recall = 0.2927[0m
[32m  ********************[0m
[32m  Best MCC:0.6146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46252:  64%|██████▍   | 18/28 [01:03<00:31,  3.17s/it]epoch 3 loss 1.45988:  64%|██████▍   | 18/28 [01:04<00:31,  3.17s/it]epoch 3 loss 1.45988:  68%|██████▊   | 19/28 [01:04<00:21,  2.34s/it]epoch 3 loss 1.45669:  68%|██████▊   | 19/28 [01:04<00:21,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6355[0m
[32m  eval_f1 = 0.317[0m
[32m  eval_mcc = 0.6159[0m
[32m  eval_precision = 0.4113[0m
[32m  eval_recall = 0.2936[0m
[32m  ********************[0m
[32m  Best f1:0.317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6159[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45669:  71%|███████▏  | 20/28 [01:10<00:27,  3.43s/it]epoch 3 loss 1.45329:  71%|███████▏  | 20/28 [01:10<00:27,  3.43s/it]epoch 3 loss 1.45329:  75%|███████▌  | 21/28 [01:10<00:17,  2.53s/it]epoch 3 loss 1.45946:  75%|███████▌  | 21/28 [01:10<00:17,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6366[0m
[32m  eval_f1 = 0.3184[0m
[32m  eval_mcc = 0.6176[0m
[32m  eval_precision = 0.4209[0m
[32m  eval_recall = 0.2951[0m
[32m  ********************[0m
[32m  Best f1:0.3184[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45946:  79%|███████▊  | 22/28 [01:16<00:21,  3.63s/it]epoch 3 loss 1.46125:  79%|███████▊  | 22/28 [01:17<00:21,  3.63s/it]epoch 3 loss 1.46125:  82%|████████▏ | 23/28 [01:17<00:13,  2.67s/it]epoch 3 loss 1.46333:  82%|████████▏ | 23/28 [01:17<00:13,  2.67s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6375[0m
[32m  eval_f1 = 0.3199[0m
[32m  eval_mcc = 0.6185[0m
[32m  eval_precision = 0.4322[0m
[32m  eval_recall = 0.2971[0m
[32m  ********************[0m
[32m  Best f1:0.3199[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.46333:  86%|████████▌ | 24/28 [01:24<00:16,  4.11s/it]epoch 3 loss 1.46293:  86%|████████▌ | 24/28 [01:25<00:16,  4.11s/it]epoch 3 loss 1.46293:  89%|████████▉ | 25/28 [01:25<00:09,  3.00s/it]epoch 3 loss 1.46458:  89%|████████▉ | 25/28 [01:25<00:09,  3.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.3219[0m
[32m  eval_mcc = 0.6181[0m
[32m  eval_precision = 0.4312[0m
[32m  eval_recall = 0.299[0m
[32m  ********************[0m
[32m  Best f1:0.3219[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.46458:  93%|█████████▎| 26/28 [01:30<00:07,  3.60s/it]epoch 3 loss 1.46084:  93%|█████████▎| 26/28 [01:30<00:07,  3.60s/it]epoch 3 loss 1.46084:  96%|█████████▋| 27/28 [01:30<00:02,  2.64s/it]epoch 3 loss 1.45355:  96%|█████████▋| 27/28 [01:30<00:02,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6383[0m
[32m  eval_f1 = 0.3245[0m
[32m  eval_mcc = 0.6185[0m
[32m  eval_precision = 0.4307[0m
[32m  eval_recall = 0.3008[0m
[32m  ********************[0m
[32m  Best f1:0.3245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6185[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.45355: 100%|██████████| 28/28 [01:38<00:00,  4.14s/it]epoch 3 loss 1.45355: 100%|██████████| 28/28 [01:38<00:00,  3.50s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.55429:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.55429:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s]epoch 4 loss 1.47817:   4%|▎         | 1/28 [00:00<00:11,  2.34it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6388[0m
[32m  eval_f1 = 0.3261[0m
[32m  eval_mcc = 0.6187[0m
[32m  eval_precision = 0.4292[0m
[32m  eval_recall = 0.3018[0m
[32m  ********************[0m
[32m  Best f1:0.3261[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.47817:   7%|▋         | 2/28 [00:06<01:37,  3.74s/it]epoch 4 loss 1.48175:   7%|▋         | 2/28 [00:06<01:37,  3.74s/it]epoch 4 loss 1.48175:  11%|█         | 3/28 [00:06<00:55,  2.23s/it]epoch 4 loss 1.47848:  11%|█         | 3/28 [00:07<00:55,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6393[0m
[32m  eval_f1 = 0.3269[0m
[32m  eval_mcc = 0.6189[0m
[32m  eval_precision = 0.4383[0m
[32m  eval_recall = 0.3019[0m
[32m  ********************[0m
[32m  Best f1:0.3269[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.47848:  14%|█▍        | 4/28 [00:17<02:16,  5.69s/it]epoch 4 loss 1.43746:  14%|█▍        | 4/28 [00:18<02:16,  5.69s/it]epoch 4 loss 1.43746:  18%|█▊        | 5/28 [00:18<01:27,  3.79s/it]epoch 4 loss 1.42744:  18%|█▊        | 5/28 [00:18<01:27,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6389[0m
[32m  eval_f1 = 0.3268[0m
[32m  eval_mcc = 0.6185[0m
[32m  eval_precision = 0.4396[0m
[32m  eval_recall = 0.3015[0m

epoch 4 loss 1.42744:  21%|██▏       | 6/28 [00:22<01:23,  3.79s/it]epoch 4 loss 1.44171:  21%|██▏       | 6/28 [00:22<01:23,  3.79s/it]epoch 4 loss 1.44171:  25%|██▌       | 7/28 [00:22<00:56,  2.68s/it]epoch 4 loss 1.43481:  25%|██▌       | 7/28 [00:22<00:56,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6385[0m
[32m  eval_f1 = 0.3269[0m
[32m  eval_mcc = 0.6182[0m
[32m  eval_precision = 0.4403[0m
[32m  eval_recall = 0.3014[0m

epoch 4 loss 1.43481:  29%|██▊       | 8/28 [00:26<01:00,  3.03s/it]epoch 4 loss 1.43241:  29%|██▊       | 8/28 [00:26<01:00,  3.03s/it]epoch 4 loss 1.43241:  32%|███▏      | 9/28 [00:26<00:41,  2.21s/it]epoch 4 loss 1.43398:  32%|███▏      | 9/28 [00:27<00:41,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.3272[0m
[32m  eval_mcc = 0.6189[0m
[32m  eval_precision = 0.4411[0m
[32m  eval_recall = 0.3018[0m
[32m  ********************[0m
[32m  Best f1:0.3272[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.43398:  36%|███▌      | 10/28 [00:34<01:08,  3.83s/it]epoch 4 loss 1.44449:  36%|███▌      | 10/28 [00:34<01:08,  3.83s/it]epoch 4 loss 1.44449:  39%|███▉      | 11/28 [00:34<00:47,  2.79s/it]epoch 4 loss 1.43777:  39%|███▉      | 11/28 [00:34<00:47,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6402[0m
[32m  eval_f1 = 0.3277[0m
[32m  eval_mcc = 0.6203[0m
[32m  eval_precision = 0.4429[0m
[32m  eval_recall = 0.3022[0m
[32m  ********************[0m
[32m  Best f1:0.3277[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6203[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.43777:  43%|████▎     | 12/28 [00:45<01:25,  5.37s/it]epoch 4 loss 1.43604:  43%|████▎     | 12/28 [00:46<01:25,  5.37s/it]epoch 4 loss 1.43604:  46%|████▋     | 13/28 [00:46<00:58,  3.87s/it]epoch 4 loss 1.42698:  46%|████▋     | 13/28 [00:46<00:58,  3.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6412[0m
[32m  eval_f1 = 0.3282[0m
[32m  eval_mcc = 0.6215[0m
[32m  eval_precision = 0.4431[0m
[32m  eval_recall = 0.3027[0m
[32m  ********************[0m
[32m  Best f1:0.3282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6215[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42698:  50%|█████     | 14/28 [00:57<01:26,  6.17s/it]epoch 4 loss 1.42643:  50%|█████     | 14/28 [00:58<01:26,  6.17s/it]epoch 4 loss 1.42643:  54%|█████▎    | 15/28 [00:58<00:57,  4.44s/it]epoch 4 loss 1.42887:  54%|█████▎    | 15/28 [00:58<00:57,  4.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6418[0m
[32m  eval_f1 = 0.3284[0m
[32m  eval_mcc = 0.6221[0m
[32m  eval_precision = 0.4425[0m
[32m  eval_recall = 0.3031[0m
[32m  ********************[0m
[32m  Best f1:0.3284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6221[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42887:  57%|█████▋    | 16/28 [01:05<01:05,  5.44s/it]epoch 4 loss 1.42684:  57%|█████▋    | 16/28 [01:06<01:05,  5.44s/it]epoch 4 loss 1.42684:  61%|██████    | 17/28 [01:06<00:43,  3.93s/it]epoch 4 loss 1.4192:  61%|██████    | 17/28 [01:06<00:43,  3.93s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6421[0m
[32m  eval_f1 = 0.3285[0m
[32m  eval_mcc = 0.6223[0m
[32m  eval_precision = 0.4411[0m
[32m  eval_recall = 0.3034[0m
[32m  ********************[0m
[32m  Best f1:0.3285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6223[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.4192:  64%|██████▍   | 18/28 [01:16<00:59,  5.90s/it]epoch 4 loss 1.41913:  64%|██████▍   | 18/28 [01:17<00:59,  5.90s/it]epoch 4 loss 1.41913:  68%|██████▊   | 19/28 [01:17<00:38,  4.26s/it]epoch 4 loss 1.42293:  68%|██████▊   | 19/28 [01:17<00:38,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6425[0m
[32m  eval_f1 = 0.3286[0m
[32m  eval_mcc = 0.6228[0m
[32m  eval_precision = 0.4402[0m
[32m  eval_recall = 0.3036[0m
[32m  ********************[0m
[32m  Best f1:0.3286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.42293:  71%|███████▏  | 20/28 [01:24<00:41,  5.23s/it]epoch 4 loss 1.41955:  71%|███████▏  | 20/28 [01:25<00:41,  5.23s/it]epoch 4 loss 1.41955:  75%|███████▌  | 21/28 [01:25<00:26,  3.79s/it]epoch 4 loss 1.42122:  75%|███████▌  | 21/28 [01:25<00:26,  3.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6424[0m
[32m  eval_f1 = 0.3285[0m
[32m  eval_mcc = 0.6227[0m
[32m  eval_precision = 0.4396[0m
[32m  eval_recall = 0.3036[0m

epoch 4 loss 1.42122:  79%|███████▊  | 22/28 [01:29<00:22,  3.78s/it]epoch 4 loss 1.41973:  79%|███████▊  | 22/28 [01:29<00:22,  3.78s/it]epoch 4 loss 1.41973:  82%|████████▏ | 23/28 [01:29<00:13,  2.77s/it]epoch 4 loss 1.42183:  82%|████████▏ | 23/28 [01:29<00:13,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6425[0m
[32m  eval_f1 = 0.3285[0m
[32m  eval_mcc = 0.6227[0m
[32m  eval_precision = 0.439[0m
[32m  eval_recall = 0.3036[0m

epoch 4 loss 1.42183:  86%|████████▌ | 24/28 [01:33<00:12,  3.07s/it]epoch 4 loss 1.41945:  86%|████████▌ | 24/28 [01:33<00:12,  3.07s/it]epoch 4 loss 1.41945:  89%|████████▉ | 25/28 [01:33<00:06,  2.27s/it]epoch 4 loss 1.41959:  89%|████████▉ | 25/28 [01:33<00:06,  2.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6427[0m
[32m  eval_f1 = 0.3286[0m
[32m  eval_mcc = 0.623[0m
[32m  eval_precision = 0.4392[0m
[32m  eval_recall = 0.3038[0m
[32m  ********************[0m
[32m  Best f1:0.3286[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.623[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.41959:  93%|█████████▎| 26/28 [01:41<00:08,  4.06s/it]epoch 4 loss 1.4197:  93%|█████████▎| 26/28 [01:42<00:08,  4.06s/it] epoch 4 loss 1.4197:  96%|█████████▋| 27/28 [01:42<00:02,  2.97s/it]epoch 4 loss 1.4154:  96%|█████████▋| 27/28 [01:42<00:02,  2.97s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.3287[0m
[32m  eval_mcc = 0.6231[0m
[32m  eval_precision = 0.4393[0m
[32m  eval_recall = 0.3038[0m
[32m  ********************[0m
[32m  Best f1:0.3287[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6231[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_12/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.4154: 100%|██████████| 28/28 [01:50<00:00,  4.69s/it]epoch 4 loss 1.4154: 100%|██████████| 28/28 [01:50<00:00,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.60it/s] 20%|██        | 2/10 [00:00<00:02,  2.69it/s] 30%|███       | 3/10 [00:01<00:02,  2.72it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.76it/s] 80%|████████  | 8/10 [00:02<00:00,  2.76it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.3287[0m
[32m  eval_mcc = 0.6231[0m
[32m  eval_precision = 0.4393[0m
[32m  eval_recall = 0.3038[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.76it/s] 50%|█████     | 5/10 [00:01<00:01,  2.76it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.629[0m
[32m  eval_f1 = 0.2938[0m
[32m  eval_mcc = 0.61[0m
[32m  eval_precision = 0.3944[0m
[32m  eval_recall = 0.2721[0m

