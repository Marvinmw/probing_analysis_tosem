[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=0, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/1/layer_0', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.0408:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.0408:   4%|▎         | 1/28 [00:00<00:20,  1.32it/s]epoch 0 loss 5.04859:   4%|▎         | 1/28 [00:01<00:20,  1.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0087[0m
[32m  eval_f1 = 0.0045[0m
[32m  eval_mcc = 0.0012[0m
[32m  eval_precision = 0.0093[0m
[32m  eval_recall = 0.0065[0m
[32m  ********************[0m
[32m  Best f1:0.0045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0012[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.04859:   7%|▋         | 2/28 [00:05<01:24,  3.25s/it]epoch 0 loss 5.03696:   7%|▋         | 2/28 [00:06<01:24,  3.25s/it]epoch 0 loss 5.03696:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.01977:  11%|█         | 3/28 [00:06<00:48,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0125[0m
[32m  eval_f1 = 0.0054[0m
[32m  eval_mcc = 0.0014[0m
[32m  eval_precision = 0.0113[0m
[32m  eval_recall = 0.007[0m
[32m  ********************[0m
[32m  Best f1:0.0054[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0014[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.01977:  14%|█▍        | 4/28 [00:11<01:21,  3.38s/it]epoch 0 loss 5.00058:  14%|█▍        | 4/28 [00:12<01:21,  3.38s/it]epoch 0 loss 5.00058:  18%|█▊        | 5/28 [00:12<00:53,  2.31s/it]epoch 0 loss 4.9715:  18%|█▊        | 5/28 [00:12<00:53,  2.31s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0235[0m
[32m  eval_f1 = 0.0074[0m
[32m  eval_mcc = 0.0049[0m
[32m  eval_precision = 0.0126[0m
[32m  eval_recall = 0.0084[0m
[32m  ********************[0m
[32m  Best f1:0.0074[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0049[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.9715:  21%|██▏       | 6/28 [00:17<01:14,  3.40s/it]epoch 0 loss 4.93978:  21%|██▏       | 6/28 [00:18<01:14,  3.40s/it]epoch 0 loss 4.93978:  25%|██▌       | 7/28 [00:18<00:50,  2.43s/it]epoch 0 loss 4.9033:  25%|██▌       | 7/28 [00:18<00:50,  2.43s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.066[0m
[32m  eval_f1 = 0.0172[0m
[32m  eval_mcc = 0.0319[0m
[32m  eval_precision = 0.0189[0m
[32m  eval_recall = 0.0195[0m
[32m  ********************[0m
[32m  Best f1:0.0172[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0319[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.9033:  29%|██▊       | 8/28 [00:23<01:08,  3.41s/it]epoch 0 loss 4.85764:  29%|██▊       | 8/28 [00:24<01:08,  3.41s/it]epoch 0 loss 4.85764:  32%|███▏      | 9/28 [00:24<00:46,  2.47s/it]epoch 0 loss 4.80616:  32%|███▏      | 9/28 [00:24<00:46,  2.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1046[0m
[32m  eval_f1 = 0.026[0m
[32m  eval_mcc = 0.0596[0m
[32m  eval_precision = 0.0271[0m
[32m  eval_recall = 0.0288[0m
[32m  ********************[0m
[32m  Best f1:0.026[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0596[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.80616:  36%|███▌      | 10/28 [00:29<01:01,  3.43s/it]epoch 0 loss 4.75473:  36%|███▌      | 10/28 [00:30<01:01,  3.43s/it]epoch 0 loss 4.75473:  39%|███▉      | 11/28 [00:30<00:42,  2.51s/it]epoch 0 loss 4.69561:  39%|███▉      | 11/28 [00:30<00:42,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1536[0m
[32m  eval_f1 = 0.0441[0m
[32m  eval_mcc = 0.1071[0m
[32m  eval_precision = 0.0497[0m
[32m  eval_recall = 0.0464[0m
[32m  ********************[0m
[32m  Best f1:0.0441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.69561:  43%|████▎     | 12/28 [00:35<00:55,  3.44s/it]epoch 0 loss 4.63448:  43%|████▎     | 12/28 [00:36<00:55,  3.44s/it]epoch 0 loss 4.63448:  46%|████▋     | 13/28 [00:36<00:37,  2.53s/it]epoch 0 loss 4.57119:  46%|████▋     | 13/28 [00:36<00:37,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2039[0m
[32m  eval_f1 = 0.0616[0m
[32m  eval_mcc = 0.1574[0m
[32m  eval_precision = 0.0868[0m
[32m  eval_recall = 0.0621[0m
[32m  ********************[0m
[32m  Best f1:0.0616[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.57119:  50%|█████     | 14/28 [00:41<00:48,  3.46s/it]epoch 0 loss 4.50867:  50%|█████     | 14/28 [00:42<00:48,  3.46s/it]epoch 0 loss 4.50867:  54%|█████▎    | 15/28 [00:42<00:33,  2.54s/it]epoch 0 loss 4.44417:  54%|█████▎    | 15/28 [00:42<00:33,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2504[0m
[32m  eval_f1 = 0.072[0m
[32m  eval_mcc = 0.2033[0m
[32m  eval_precision = 0.1085[0m
[32m  eval_recall = 0.0709[0m
[32m  ********************[0m
[32m  Best f1:0.072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2033[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.44417:  57%|█████▋    | 16/28 [00:48<00:43,  3.60s/it]epoch 0 loss 4.37929:  57%|█████▋    | 16/28 [00:48<00:43,  3.60s/it]epoch 0 loss 4.37929:  61%|██████    | 17/28 [00:48<00:29,  2.64s/it]epoch 0 loss 4.31131:  61%|██████    | 17/28 [00:48<00:29,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3139[0m
[32m  eval_f1 = 0.0905[0m
[32m  eval_mcc = 0.2679[0m
[32m  eval_precision = 0.1401[0m
[32m  eval_recall = 0.0859[0m
[32m  ********************[0m
[32m  Best f1:0.0905[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2679[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.31131:  64%|██████▍   | 18/28 [00:54<00:37,  3.76s/it]epoch 0 loss 4.24259:  64%|██████▍   | 18/28 [00:55<00:37,  3.76s/it]epoch 0 loss 4.24259:  68%|██████▊   | 19/28 [00:55<00:24,  2.76s/it]epoch 0 loss 4.17662:  68%|██████▊   | 19/28 [00:55<00:24,  2.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3775[0m
[32m  eval_f1 = 0.1071[0m
[32m  eval_mcc = 0.3327[0m
[32m  eval_precision = 0.1729[0m
[32m  eval_recall = 0.0994[0m
[32m  ********************[0m
[32m  Best f1:0.1071[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3327[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.17662:  71%|███████▏  | 20/28 [01:01<00:29,  3.71s/it]epoch 0 loss 4.11028:  71%|███████▏  | 20/28 [01:01<00:29,  3.71s/it]epoch 0 loss 4.11028:  75%|███████▌  | 21/28 [01:01<00:19,  2.72s/it]epoch 0 loss 4.04254:  75%|███████▌  | 21/28 [01:02<00:19,  2.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4355[0m
[32m  eval_f1 = 0.1304[0m
[32m  eval_mcc = 0.3952[0m
[32m  eval_precision = 0.2019[0m
[32m  eval_recall = 0.1197[0m
[32m  ********************[0m
[32m  Best f1:0.1304[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3952[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.04254:  79%|███████▊  | 22/28 [01:07<00:22,  3.75s/it]epoch 0 loss 3.9771:  79%|███████▊  | 22/28 [01:08<00:22,  3.75s/it] epoch 0 loss 3.9771:  82%|████████▏ | 23/28 [01:08<00:13,  2.75s/it]epoch 0 loss 3.91608:  82%|████████▏ | 23/28 [01:08<00:13,  2.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.468[0m
[32m  eval_f1 = 0.1391[0m
[32m  eval_mcc = 0.4326[0m
[32m  eval_precision = 0.2038[0m
[32m  eval_recall = 0.1282[0m
[32m  ********************[0m
[32m  Best f1:0.1391[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.91608:  86%|████████▌ | 24/28 [01:15<00:16,  4.15s/it]epoch 0 loss 3.85166:  86%|████████▌ | 24/28 [01:16<00:16,  4.15s/it]epoch 0 loss 3.85166:  89%|████████▉ | 25/28 [01:16<00:09,  3.03s/it]epoch 0 loss 3.79404:  89%|████████▉ | 25/28 [01:16<00:09,  3.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.502[0m
[32m  eval_f1 = 0.1564[0m
[32m  eval_mcc = 0.4717[0m
[32m  eval_precision = 0.2099[0m
[32m  eval_recall = 0.1462[0m
[32m  ********************[0m
[32m  Best f1:0.1564[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4717[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.79404:  93%|█████████▎| 26/28 [01:21<00:07,  3.88s/it]epoch 0 loss 3.73365:  93%|█████████▎| 26/28 [01:22<00:07,  3.88s/it]epoch 0 loss 3.73365:  96%|█████████▋| 27/28 [01:22<00:02,  2.84s/it]epoch 0 loss 3.67431:  96%|█████████▋| 27/28 [01:22<00:02,  2.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5246[0m
[32m  eval_f1 = 0.1683[0m
[32m  eval_mcc = 0.4963[0m
[32m  eval_precision = 0.2228[0m
[32m  eval_recall = 0.161[0m
[32m  ********************[0m
[32m  Best f1:0.1683[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4963[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.67431: 100%|██████████| 28/28 [01:31<00:00,  4.76s/it]epoch 0 loss 3.67431: 100%|██████████| 28/28 [01:31<00:00,  3.27s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.18058:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.18058:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s]epoch 1 loss 2.09439:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5517[0m
[32m  eval_f1 = 0.1838[0m
[32m  eval_mcc = 0.5244[0m
[32m  eval_precision = 0.2435[0m
[32m  eval_recall = 0.18[0m
[32m  ********************[0m
[32m  Best f1:0.1838[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.09439:   7%|▋         | 2/28 [00:11<03:00,  6.93s/it]epoch 1 loss 2.04056:   7%|▋         | 2/28 [00:12<03:00,  6.93s/it]epoch 1 loss 2.04056:  11%|█         | 3/28 [00:12<01:39,  3.96s/it]epoch 1 loss 2.00627:  11%|█         | 3/28 [00:12<01:39,  3.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5724[0m
[32m  eval_f1 = 0.2058[0m
[32m  eval_mcc = 0.5462[0m
[32m  eval_precision = 0.2591[0m
[32m  eval_recall = 0.2014[0m
[32m  ********************[0m
[32m  Best f1:0.2058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5462[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00627:  14%|█▍        | 4/28 [00:23<02:47,  6.98s/it]epoch 1 loss 1.9655:  14%|█▍        | 4/28 [00:24<02:47,  6.98s/it] epoch 1 loss 1.9655:  18%|█▊        | 5/28 [00:24<01:46,  4.62s/it]epoch 1 loss 1.90453:  18%|█▊        | 5/28 [00:24<01:46,  4.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5899[0m
[32m  eval_f1 = 0.2187[0m
[32m  eval_mcc = 0.5649[0m
[32m  eval_precision = 0.2852[0m
[32m  eval_recall = 0.2137[0m
[32m  ********************[0m
[32m  Best f1:0.2187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5649[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.90453:  21%|██▏       | 6/28 [00:35<02:31,  6.86s/it]epoch 1 loss 1.87826:  21%|██▏       | 6/28 [00:36<02:31,  6.86s/it]epoch 1 loss 1.87826:  25%|██▌       | 7/28 [00:36<01:39,  4.76s/it]epoch 1 loss 1.83944:  25%|██▌       | 7/28 [00:36<01:39,  4.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.598[0m
[32m  eval_f1 = 0.2382[0m
[32m  eval_mcc = 0.5741[0m
[32m  eval_precision = 0.317[0m
[32m  eval_recall = 0.2277[0m
[32m  ********************[0m
[32m  Best f1:0.2382[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5741[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.83944:  29%|██▊       | 8/28 [00:47<02:14,  6.74s/it]epoch 1 loss 1.82083:  29%|██▊       | 8/28 [00:47<02:14,  6.74s/it]epoch 1 loss 1.82083:  32%|███▏      | 9/28 [00:47<01:30,  4.77s/it]epoch 1 loss 1.7821:  32%|███▏      | 9/28 [00:47<01:30,  4.77s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6056[0m
[32m  eval_f1 = 0.2522[0m
[32m  eval_mcc = 0.5827[0m
[32m  eval_precision = 0.3325[0m
[32m  eval_recall = 0.2378[0m
[32m  ********************[0m
[32m  Best f1:0.2522[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5827[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7821:  36%|███▌      | 10/28 [00:58<02:00,  6.71s/it]epoch 1 loss 1.76032:  36%|███▌      | 10/28 [00:58<02:00,  6.71s/it]epoch 1 loss 1.76032:  39%|███▉      | 11/28 [00:58<01:21,  4.78s/it]epoch 1 loss 1.73877:  39%|███▉      | 11/28 [00:59<01:21,  4.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6095[0m
[32m  eval_f1 = 0.2627[0m
[32m  eval_mcc = 0.5879[0m
[32m  eval_precision = 0.3531[0m
[32m  eval_recall = 0.2448[0m
[32m  ********************[0m
[32m  Best f1:0.2627[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5879[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.73877:  43%|████▎     | 12/28 [01:09<01:46,  6.69s/it]epoch 1 loss 1.71718:  43%|████▎     | 12/28 [01:10<01:46,  6.69s/it]epoch 1 loss 1.71718:  46%|████▋     | 13/28 [01:10<01:11,  4.79s/it]epoch 1 loss 1.70239:  46%|████▋     | 13/28 [01:10<01:11,  4.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.615[0m
[32m  eval_f1 = 0.2692[0m
[32m  eval_mcc = 0.5948[0m
[32m  eval_precision = 0.3619[0m
[32m  eval_recall = 0.2496[0m
[32m  ********************[0m
[32m  Best f1:0.2692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5948[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.70239:  50%|█████     | 14/28 [01:21<01:31,  6.56s/it]epoch 1 loss 1.68882:  50%|█████     | 14/28 [01:21<01:31,  6.56s/it]epoch 1 loss 1.68882:  54%|█████▎    | 15/28 [01:21<01:01,  4.71s/it]epoch 1 loss 1.67188:  54%|█████▎    | 15/28 [01:21<01:01,  4.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6206[0m
[32m  eval_f1 = 0.2902[0m
[32m  eval_mcc = 0.6008[0m
[32m  eval_precision = 0.4114[0m
[32m  eval_recall = 0.2676[0m
[32m  ********************[0m
[32m  Best f1:0.2902[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6008[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.67188:  57%|█████▋    | 16/28 [01:30<01:13,  6.13s/it]epoch 1 loss 1.65305:  57%|█████▋    | 16/28 [01:31<01:13,  6.13s/it]epoch 1 loss 1.65305:  61%|██████    | 17/28 [01:31<00:48,  4.41s/it]epoch 1 loss 1.64081:  61%|██████    | 17/28 [01:31<00:48,  4.41s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6254[0m
[32m  eval_f1 = 0.3013[0m
[32m  eval_mcc = 0.6063[0m
[32m  eval_precision = 0.4206[0m
[32m  eval_recall = 0.2769[0m
[32m  ********************[0m
[32m  Best f1:0.3013[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6063[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.64081:  64%|██████▍   | 18/28 [01:41<01:02,  6.26s/it]epoch 1 loss 1.6229:  64%|██████▍   | 18/28 [01:42<01:02,  6.26s/it] epoch 1 loss 1.6229:  68%|██████▊   | 19/28 [01:42<00:40,  4.51s/it]epoch 1 loss 1.6185:  68%|██████▊   | 19/28 [01:42<00:40,  4.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6309[0m
[32m  eval_f1 = 0.3084[0m
[32m  eval_mcc = 0.6118[0m
[32m  eval_precision = 0.4158[0m
[32m  eval_recall = 0.2858[0m
[32m  ********************[0m
[32m  Best f1:0.3084[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.6185:  71%|███████▏  | 20/28 [01:51<00:46,  5.81s/it]epoch 1 loss 1.61014:  71%|███████▏  | 20/28 [01:51<00:46,  5.81s/it]epoch 1 loss 1.61014:  75%|███████▌  | 21/28 [01:51<00:29,  4.20s/it]epoch 1 loss 1.60828:  75%|███████▌  | 21/28 [01:51<00:29,  4.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6392[0m
[32m  eval_f1 = 0.3169[0m
[32m  eval_mcc = 0.6198[0m
[32m  eval_precision = 0.4142[0m
[32m  eval_recall = 0.2959[0m
[32m  ********************[0m
[32m  Best f1:0.3169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6198[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.60828:  79%|███████▊  | 22/28 [02:02<00:36,  6.09s/it]epoch 1 loss 1.60342:  79%|███████▊  | 22/28 [02:02<00:36,  6.09s/it]epoch 1 loss 1.60342:  82%|████████▏ | 23/28 [02:02<00:21,  4.39s/it]epoch 1 loss 1.59751:  82%|████████▏ | 23/28 [02:02<00:21,  4.39s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6437[0m
[32m  eval_f1 = 0.3352[0m
[32m  eval_mcc = 0.6237[0m
[32m  eval_precision = 0.4421[0m
[32m  eval_recall = 0.3129[0m
[32m  ********************[0m
[32m  Best f1:0.3352[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6237[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.59751:  86%|████████▌ | 24/28 [02:09<00:20,  5.21s/it]epoch 1 loss 1.58756:  86%|████████▌ | 24/28 [02:10<00:20,  5.21s/it]epoch 1 loss 1.58756:  89%|████████▉ | 25/28 [02:10<00:11,  3.78s/it]epoch 1 loss 1.57232:  89%|████████▉ | 25/28 [02:10<00:11,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6439[0m
[32m  eval_f1 = 0.3394[0m
[32m  eval_mcc = 0.6235[0m
[32m  eval_precision = 0.4288[0m
[32m  eval_recall = 0.3183[0m
[32m  ********************[0m
[32m  Best f1:0.3394[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 1 loss 1.57232:  93%|█████████▎| 26/28 [02:16<00:09,  4.67s/it]epoch 1 loss 1.56134:  93%|█████████▎| 26/28 [02:17<00:09,  4.67s/it]epoch 1 loss 1.56134:  96%|█████████▋| 27/28 [02:17<00:03,  3.40s/it]epoch 1 loss 1.55119:  96%|█████████▋| 27/28 [02:17<00:03,  3.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6468[0m
[32m  eval_f1 = 0.3426[0m
[32m  eval_mcc = 0.6265[0m
[32m  eval_precision = 0.4252[0m
[32m  eval_recall = 0.3222[0m
[32m  ********************[0m
[32m  Best f1:0.3426[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6265[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.55119: 100%|██████████| 28/28 [02:26<00:00,  5.04s/it]epoch 1 loss 1.55119: 100%|██████████| 28/28 [02:26<00:00,  5.22s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.28868:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.28868:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 2 loss 1.24923:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6502[0m
[32m  eval_f1 = 0.3484[0m
[32m  eval_mcc = 0.63[0m
[32m  eval_precision = 0.4519[0m
[32m  eval_recall = 0.3247[0m
[32m  ********************[0m
[32m  Best f1:0.3484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.63[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24923:   7%|▋         | 2/28 [00:10<02:42,  6.24s/it]epoch 2 loss 1.2752:   7%|▋         | 2/28 [00:11<02:42,  6.24s/it] epoch 2 loss 1.2752:  11%|█         | 3/28 [00:11<01:29,  3.58s/it]epoch 2 loss 1.26189:  11%|█         | 3/28 [00:11<01:29,  3.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6545[0m
[32m  eval_f1 = 0.3504[0m
[32m  eval_mcc = 0.6348[0m
[32m  eval_precision = 0.4542[0m
[32m  eval_recall = 0.3263[0m
[32m  ********************[0m
[32m  Best f1:0.3504[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6348[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.26189:  14%|█▍        | 4/28 [00:19<02:08,  5.35s/it]epoch 2 loss 1.26607:  14%|█▍        | 4/28 [00:19<02:08,  5.35s/it]epoch 2 loss 1.26607:  18%|█▊        | 5/28 [00:19<01:22,  3.57s/it]epoch 2 loss 1.24981:  18%|█▊        | 5/28 [00:20<01:22,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6562[0m
[32m  eval_f1 = 0.354[0m
[32m  eval_mcc = 0.6368[0m
[32m  eval_precision = 0.4554[0m
[32m  eval_recall = 0.3286[0m
[32m  ********************[0m
[32m  Best f1:0.354[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6368[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24981:  21%|██▏       | 6/28 [00:26<01:44,  4.74s/it]epoch 2 loss 1.25028:  21%|██▏       | 6/28 [00:27<01:44,  4.74s/it]epoch 2 loss 1.25028:  25%|██▌       | 7/28 [00:27<01:09,  3.33s/it]epoch 2 loss 1.25895:  25%|██▌       | 7/28 [00:27<01:09,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6581[0m
[32m  eval_f1 = 0.3558[0m
[32m  eval_mcc = 0.6388[0m
[32m  eval_precision = 0.4579[0m
[32m  eval_recall = 0.3289[0m
[32m  ********************[0m
[32m  Best f1:0.3558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6388[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.25895:  29%|██▊       | 8/28 [00:34<01:30,  4.51s/it]epoch 2 loss 1.24711:  29%|██▊       | 8/28 [00:34<01:30,  4.51s/it]epoch 2 loss 1.24711:  32%|███▏      | 9/28 [00:34<01:01,  3.23s/it]epoch 2 loss 1.23509:  32%|███▏      | 9/28 [00:34<01:01,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.658[0m
[32m  eval_f1 = 0.3561[0m
[32m  eval_mcc = 0.6388[0m
[32m  eval_precision = 0.4577[0m
[32m  eval_recall = 0.3294[0m
[32m  ********************[0m
[32m  Best f1:0.3561[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.23509:  36%|███▌      | 10/28 [00:41<01:19,  4.41s/it]epoch 2 loss 1.23524:  36%|███▌      | 10/28 [00:41<01:19,  4.41s/it]epoch 2 loss 1.23524:  39%|███▉      | 11/28 [00:41<00:54,  3.19s/it]epoch 2 loss 1.23669:  39%|███▉      | 11/28 [00:42<00:54,  3.19s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6594[0m
[32m  eval_f1 = 0.3601[0m
[32m  eval_mcc = 0.6402[0m
[32m  eval_precision = 0.4617[0m
[32m  eval_recall = 0.3322[0m
[32m  ********************[0m
[32m  Best f1:0.3601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6402[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.23669:  43%|████▎     | 12/28 [00:48<01:04,  4.06s/it]epoch 2 loss 1.24199:  43%|████▎     | 12/28 [00:48<01:04,  4.06s/it]epoch 2 loss 1.24199:  46%|████▋     | 13/28 [00:48<00:44,  2.96s/it]epoch 2 loss 1.23191:  46%|████▋     | 13/28 [00:48<00:44,  2.96s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6615[0m
[32m  eval_f1 = 0.3615[0m
[32m  eval_mcc = 0.6421[0m
[32m  eval_precision = 0.4574[0m
[32m  eval_recall = 0.3345[0m
[32m  ********************[0m
[32m  Best f1:0.3615[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6421[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.23191:  50%|█████     | 14/28 [00:54<00:53,  3.86s/it]epoch 2 loss 1.22755:  50%|█████     | 14/28 [00:54<00:53,  3.86s/it]epoch 2 loss 1.22755:  54%|█████▎    | 15/28 [00:54<00:36,  2.82s/it]epoch 2 loss 1.22725:  54%|█████▎    | 15/28 [00:55<00:36,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6637[0m
[32m  eval_f1 = 0.3664[0m
[32m  eval_mcc = 0.6443[0m
[32m  eval_precision = 0.4695[0m
[32m  eval_recall = 0.3398[0m
[32m  ********************[0m
[32m  Best f1:0.3664[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6443[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.22725:  57%|█████▋    | 16/28 [01:00<00:45,  3.79s/it]epoch 2 loss 1.23391:  57%|█████▋    | 16/28 [01:01<00:45,  3.79s/it]epoch 2 loss 1.23391:  61%|██████    | 17/28 [01:01<00:30,  2.78s/it]epoch 2 loss 1.24005:  61%|██████    | 17/28 [01:01<00:30,  2.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6662[0m
[32m  eval_f1 = 0.3688[0m
[32m  eval_mcc = 0.647[0m
[32m  eval_precision = 0.467[0m
[32m  eval_recall = 0.3436[0m
[32m  ********************[0m
[32m  Best f1:0.3688[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.647[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.24005:  64%|██████▍   | 18/28 [01:07<00:36,  3.69s/it]epoch 2 loss 1.23661:  64%|██████▍   | 18/28 [01:07<00:36,  3.69s/it]epoch 2 loss 1.23661:  68%|██████▊   | 19/28 [01:07<00:24,  2.71s/it]epoch 2 loss 1.23694:  68%|██████▊   | 19/28 [01:07<00:24,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6684[0m
[32m  eval_f1 = 0.3737[0m
[32m  eval_mcc = 0.6495[0m
[32m  eval_precision = 0.4721[0m
[32m  eval_recall = 0.3493[0m
[32m  ********************[0m
[32m  Best f1:0.3737[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6495[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.23694:  71%|███████▏  | 20/28 [01:13<00:29,  3.72s/it]epoch 2 loss 1.23326:  71%|███████▏  | 20/28 [01:14<00:29,  3.72s/it]epoch 2 loss 1.23326:  75%|███████▌  | 21/28 [01:14<00:19,  2.73s/it]epoch 2 loss 1.2305:  75%|███████▌  | 21/28 [01:14<00:19,  2.73s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6697[0m
[32m  eval_f1 = 0.3732[0m
[32m  eval_mcc = 0.6512[0m
[32m  eval_precision = 0.4714[0m
[32m  eval_recall = 0.3488[0m
[32m  ********************[0m
[32m  Best MCC:0.6512[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.2305:  79%|███████▊  | 22/28 [01:22<00:26,  4.36s/it]epoch 2 loss 1.2285:  79%|███████▊  | 22/28 [01:22<00:26,  4.36s/it]epoch 2 loss 1.2285:  82%|████████▏ | 23/28 [01:22<00:15,  3.18s/it]epoch 2 loss 1.22813:  82%|████████▏ | 23/28 [01:23<00:15,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6712[0m
[32m  eval_f1 = 0.3752[0m
[32m  eval_mcc = 0.653[0m
[32m  eval_precision = 0.4888[0m
[32m  eval_recall = 0.3494[0m
[32m  ********************[0m
[32m  Best f1:0.3752[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.653[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.22813:  86%|████████▌ | 24/28 [01:33<00:22,  5.58s/it]epoch 2 loss 1.22806:  86%|████████▌ | 24/28 [01:34<00:22,  5.58s/it]epoch 2 loss 1.22806:  89%|████████▉ | 25/28 [01:34<00:12,  4.03s/it]epoch 2 loss 1.23242:  89%|████████▉ | 25/28 [01:34<00:12,  4.03s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6707[0m
[32m  eval_f1 = 0.3798[0m
[32m  eval_mcc = 0.6526[0m
[32m  eval_precision = 0.4876[0m
[32m  eval_recall = 0.3529[0m
[32m  ********************[0m
[32m  Best f1:0.3798[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 2 loss 1.23242:  93%|█████████▎| 26/28 [01:41<00:10,  5.08s/it]epoch 2 loss 1.23078:  93%|█████████▎| 26/28 [01:42<00:10,  5.08s/it]epoch 2 loss 1.23078:  96%|█████████▋| 27/28 [01:42<00:03,  3.68s/it]epoch 2 loss 1.225:  96%|█████████▋| 27/28 [01:42<00:03,  3.68s/it]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6735[0m
[32m  eval_f1 = 0.3889[0m
[32m  eval_mcc = 0.6558[0m
[32m  eval_precision = 0.5[0m
[32m  eval_recall = 0.3593[0m
[32m  ********************[0m
[32m  Best f1:0.3889[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.225: 100%|██████████| 28/28 [01:53<00:00,  5.97s/it]epoch 2 loss 1.225: 100%|██████████| 28/28 [01:53<00:00,  4.05s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.10093:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.10093:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s]epoch 3 loss 1.11331:   4%|▎         | 1/28 [00:00<00:11,  2.36it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6753[0m
[32m  eval_f1 = 0.3985[0m
[32m  eval_mcc = 0.6577[0m
[32m  eval_precision = 0.5111[0m
[32m  eval_recall = 0.3656[0m
[32m  ********************[0m
[32m  Best f1:0.3985[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6577[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.11331:   7%|▋         | 2/28 [00:10<02:39,  6.13s/it]epoch 3 loss 1.10086:   7%|▋         | 2/28 [00:10<02:39,  6.13s/it]epoch 3 loss 1.10086:  11%|█         | 3/28 [00:10<01:27,  3.52s/it]epoch 3 loss 1.09398:  11%|█         | 3/28 [00:11<01:27,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6757[0m
[32m  eval_f1 = 0.4004[0m
[32m  eval_mcc = 0.6579[0m
[32m  eval_precision = 0.5089[0m
[32m  eval_recall = 0.3679[0m
[32m  ********************[0m
[32m  Best f1:0.4004[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.09398:  14%|█▍        | 4/28 [00:21<02:35,  6.49s/it]epoch 3 loss 1.1039:  14%|█▍        | 4/28 [00:22<02:35,  6.49s/it] epoch 3 loss 1.1039:  18%|█▊        | 5/28 [00:22<01:38,  4.30s/it]epoch 3 loss 1.1289:  18%|█▊        | 5/28 [00:22<01:38,  4.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6756[0m
[32m  eval_f1 = 0.4009[0m
[32m  eval_mcc = 0.6577[0m
[32m  eval_precision = 0.505[0m
[32m  eval_recall = 0.3681[0m
[32m  ********************[0m
[32m  Best f1:0.4009[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.1289:  21%|██▏       | 6/28 [00:29<01:56,  5.30s/it]epoch 3 loss 1.15833:  21%|██▏       | 6/28 [00:30<01:56,  5.30s/it]epoch 3 loss 1.15833:  25%|██▌       | 7/28 [00:30<01:17,  3.70s/it]epoch 3 loss 1.15791:  25%|██▌       | 7/28 [00:30<01:17,  3.70s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6769[0m
[32m  eval_f1 = 0.4027[0m
[32m  eval_mcc = 0.6589[0m
[32m  eval_precision = 0.5056[0m
[32m  eval_recall = 0.3702[0m
[32m  ********************[0m
[32m  Best f1:0.4027[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6589[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.15791:  29%|██▊       | 8/28 [00:41<02:00,  6.04s/it]epoch 3 loss 1.15562:  29%|██▊       | 8/28 [00:41<02:00,  6.04s/it]epoch 3 loss 1.15562:  32%|███▏      | 9/28 [00:41<01:21,  4.29s/it]epoch 3 loss 1.14527:  32%|███▏      | 9/28 [00:41<01:21,  4.29s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6783[0m
[32m  eval_f1 = 0.4062[0m
[32m  eval_mcc = 0.6601[0m
[32m  eval_precision = 0.5055[0m
[32m  eval_recall = 0.3741[0m
[32m  ********************[0m
[32m  Best f1:0.4062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6601[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14527:  36%|███▌      | 10/28 [00:52<01:52,  6.25s/it]epoch 3 loss 1.15286:  36%|███▌      | 10/28 [00:52<01:52,  6.25s/it]epoch 3 loss 1.15286:  39%|███▉      | 11/28 [00:52<01:15,  4.47s/it]epoch 3 loss 1.16586:  39%|███▉      | 11/28 [00:53<01:15,  4.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6765[0m
[32m  eval_f1 = 0.408[0m
[32m  eval_mcc = 0.6581[0m
[32m  eval_precision = 0.503[0m
[32m  eval_recall = 0.3772[0m
[32m  ********************[0m
[32m  Best f1:0.408[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.16586:  43%|████▎     | 12/28 [00:57<01:14,  4.65s/it]epoch 3 loss 1.15946:  43%|████▎     | 12/28 [00:58<01:14,  4.65s/it]epoch 3 loss 1.15946:  46%|████▋     | 13/28 [00:58<00:50,  3.36s/it]epoch 3 loss 1.15146:  46%|████▋     | 13/28 [00:58<00:50,  3.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6769[0m
[32m  eval_f1 = 0.4106[0m
[32m  eval_mcc = 0.6586[0m
[32m  eval_precision = 0.5032[0m
[32m  eval_recall = 0.3799[0m
[32m  ********************[0m
[32m  Best f1:0.4106[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.15146:  50%|█████     | 14/28 [01:05<01:02,  4.48s/it]epoch 3 loss 1.15046:  50%|█████     | 14/28 [01:05<01:02,  4.48s/it]epoch 3 loss 1.15046:  54%|█████▎    | 15/28 [01:05<00:42,  3.26s/it]epoch 3 loss 1.1453:  54%|█████▎    | 15/28 [01:05<00:42,  3.26s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6768[0m
[32m  eval_f1 = 0.4115[0m
[32m  eval_mcc = 0.6586[0m
[32m  eval_precision = 0.5046[0m
[32m  eval_recall = 0.3805[0m
[32m  ********************[0m
[32m  Best f1:0.4115[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 3 loss 1.1453:  57%|█████▋    | 16/28 [01:12<00:52,  4.39s/it]epoch 3 loss 1.14355:  57%|█████▋    | 16/28 [01:13<00:52,  4.39s/it]epoch 3 loss 1.14355:  61%|██████    | 17/28 [01:13<00:35,  3.20s/it]epoch 3 loss 1.14504:  61%|██████    | 17/28 [01:13<00:35,  3.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6782[0m
[32m  eval_f1 = 0.4115[0m
[32m  eval_mcc = 0.6601[0m
[32m  eval_precision = 0.5052[0m
[32m  eval_recall = 0.3805[0m

epoch 3 loss 1.14504:  64%|██████▍   | 18/28 [01:16<00:33,  3.38s/it]epoch 3 loss 1.1441:  64%|██████▍   | 18/28 [01:17<00:33,  3.38s/it] epoch 3 loss 1.1441:  68%|██████▊   | 19/28 [01:17<00:22,  2.48s/it]epoch 3 loss 1.14127:  68%|██████▊   | 19/28 [01:17<00:22,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6788[0m
[32m  eval_f1 = 0.4125[0m
[32m  eval_mcc = 0.6609[0m
[32m  eval_precision = 0.5069[0m
[32m  eval_recall = 0.3808[0m
[32m  ********************[0m
[32m  Best f1:0.4125[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6609[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14127:  71%|███████▏  | 20/28 [01:27<00:38,  4.82s/it]epoch 3 loss 1.13867:  71%|███████▏  | 20/28 [01:27<00:38,  4.82s/it]epoch 3 loss 1.13867:  75%|███████▌  | 21/28 [01:27<00:24,  3.50s/it]epoch 3 loss 1.14428:  75%|███████▌  | 21/28 [01:28<00:24,  3.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6795[0m
[32m  eval_f1 = 0.4106[0m
[32m  eval_mcc = 0.6618[0m
[32m  eval_precision = 0.5069[0m
[32m  eval_recall = 0.3791[0m
[32m  ********************[0m
[32m  Best MCC:0.6618[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14428:  79%|███████▊  | 22/28 [01:33<00:24,  4.16s/it]epoch 3 loss 1.14567:  79%|███████▊  | 22/28 [01:34<00:24,  4.16s/it]epoch 3 loss 1.14567:  82%|████████▏ | 23/28 [01:34<00:15,  3.04s/it]epoch 3 loss 1.14712:  82%|████████▏ | 23/28 [01:34<00:15,  3.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6807[0m
[32m  eval_f1 = 0.4119[0m
[32m  eval_mcc = 0.6631[0m
[32m  eval_precision = 0.5064[0m
[32m  eval_recall = 0.3807[0m
[32m  ********************[0m
[32m  Best MCC:0.6631[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14712:  86%|████████▌ | 24/28 [01:39<00:15,  3.85s/it]epoch 3 loss 1.14669:  86%|████████▌ | 24/28 [01:40<00:15,  3.85s/it]epoch 3 loss 1.14669:  89%|████████▉ | 25/28 [01:40<00:08,  2.82s/it]epoch 3 loss 1.14842:  89%|████████▉ | 25/28 [01:40<00:08,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6824[0m
[32m  eval_f1 = 0.4145[0m
[32m  eval_mcc = 0.665[0m
[32m  eval_precision = 0.5096[0m
[32m  eval_recall = 0.3834[0m
[32m  ********************[0m
[32m  Best f1:0.4145[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.665[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.14842:  93%|█████████▎| 26/28 [01:47<00:08,  4.04s/it]epoch 3 loss 1.14568:  93%|█████████▎| 26/28 [01:47<00:08,  4.04s/it]epoch 3 loss 1.14568:  96%|█████████▋| 27/28 [01:47<00:02,  2.95s/it]epoch 3 loss 1.13947:  96%|█████████▋| 27/28 [01:47<00:02,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6838[0m
[32m  eval_f1 = 0.4151[0m
[32m  eval_mcc = 0.6664[0m
[32m  eval_precision = 0.5102[0m
[32m  eval_recall = 0.3841[0m
[32m  ********************[0m
[32m  Best f1:0.4151[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6664[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.13947: 100%|██████████| 28/28 [01:54<00:00,  4.08s/it]epoch 3 loss 1.13947: 100%|██████████| 28/28 [01:54<00:00,  4.08s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.21916:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.21916:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 4 loss 1.14804:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6846[0m
[32m  eval_f1 = 0.4161[0m
[32m  eval_mcc = 0.667[0m
[32m  eval_precision = 0.5097[0m
[32m  eval_recall = 0.3844[0m
[32m  ********************[0m
[32m  Best f1:0.4161[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.667[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.14804:   7%|▋         | 2/28 [00:07<01:51,  4.29s/it]epoch 4 loss 1.15454:   7%|▋         | 2/28 [00:07<01:51,  4.29s/it]epoch 4 loss 1.15454:  11%|█         | 3/28 [00:07<01:03,  2.53s/it]epoch 4 loss 1.15353:  11%|█         | 3/28 [00:08<01:03,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6844[0m
[32m  eval_f1 = 0.4159[0m
[32m  eval_mcc = 0.6668[0m
[32m  eval_precision = 0.5095[0m
[32m  eval_recall = 0.3841[0m

epoch 4 loss 1.15353:  14%|█▍        | 4/28 [00:11<01:12,  3.03s/it]epoch 4 loss 1.12159:  14%|█▍        | 4/28 [00:12<01:12,  3.03s/it]epoch 4 loss 1.12159:  18%|█▊        | 5/28 [00:12<00:47,  2.08s/it]epoch 4 loss 1.11238:  18%|█▊        | 5/28 [00:12<00:47,  2.08s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6846[0m
[32m  eval_f1 = 0.4163[0m
[32m  eval_mcc = 0.667[0m
[32m  eval_precision = 0.5125[0m
[32m  eval_recall = 0.3842[0m
[32m  ********************[0m
[32m  Best f1:0.4163[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.11238:  21%|██▏       | 6/28 [00:19<01:22,  3.74s/it]epoch 4 loss 1.128:  21%|██▏       | 6/28 [00:19<01:22,  3.74s/it]  epoch 4 loss 1.128:  25%|██▌       | 7/28 [00:19<00:55,  2.66s/it]epoch 4 loss 1.12238:  25%|██▌       | 7/28 [00:19<00:55,  2.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6845[0m
[32m  eval_f1 = 0.4153[0m
[32m  eval_mcc = 0.6669[0m
[32m  eval_precision = 0.5117[0m
[32m  eval_recall = 0.3837[0m

epoch 4 loss 1.12238:  29%|██▊       | 8/28 [00:23<01:00,  3.02s/it]epoch 4 loss 1.12181:  29%|██▊       | 8/28 [00:23<01:00,  3.02s/it]epoch 4 loss 1.12181:  32%|███▏      | 9/28 [00:23<00:41,  2.20s/it]epoch 4 loss 1.12323:  32%|███▏      | 9/28 [00:24<00:41,  2.20s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6839[0m
[32m  eval_f1 = 0.4161[0m
[32m  eval_mcc = 0.6663[0m
[32m  eval_precision = 0.5116[0m
[32m  eval_recall = 0.3842[0m

epoch 4 loss 1.12323:  36%|███▌      | 10/28 [00:27<00:48,  2.69s/it]epoch 4 loss 1.13157:  36%|███▌      | 10/28 [00:27<00:48,  2.69s/it]epoch 4 loss 1.13157:  39%|███▉      | 11/28 [00:27<00:33,  1.99s/it]epoch 4 loss 1.1285:  39%|███▉      | 11/28 [00:28<00:33,  1.99s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6838[0m
[32m  eval_f1 = 0.4161[0m
[32m  eval_mcc = 0.6662[0m
[32m  eval_precision = 0.5115[0m
[32m  eval_recall = 0.3842[0m

epoch 4 loss 1.1285:  43%|████▎     | 12/28 [00:31<00:40,  2.54s/it]epoch 4 loss 1.12738:  43%|████▎     | 12/28 [00:32<00:40,  2.54s/it]epoch 4 loss 1.12738:  46%|████▋     | 13/28 [00:32<00:28,  1.89s/it]epoch 4 loss 1.11974:  46%|████▋     | 13/28 [00:32<00:28,  1.89s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6835[0m
[32m  eval_f1 = 0.4161[0m
[32m  eval_mcc = 0.6657[0m
[32m  eval_precision = 0.5123[0m
[32m  eval_recall = 0.3844[0m

epoch 4 loss 1.11974:  50%|█████     | 14/28 [00:35<00:34,  2.47s/it]epoch 4 loss 1.11899:  50%|█████     | 14/28 [00:36<00:34,  2.47s/it]epoch 4 loss 1.11899:  54%|█████▎    | 15/28 [00:36<00:23,  1.85s/it]epoch 4 loss 1.1209:  54%|█████▎    | 15/28 [00:36<00:23,  1.85s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.684[0m
[32m  eval_f1 = 0.4165[0m
[32m  eval_mcc = 0.6663[0m
[32m  eval_precision = 0.5126[0m
[32m  eval_recall = 0.3848[0m
[32m  ********************[0m
[32m  Best f1:0.4165[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.1209:  57%|█████▋    | 16/28 [00:43<00:40,  3.34s/it]epoch 4 loss 1.11935:  57%|█████▋    | 16/28 [00:43<00:40,  3.34s/it]epoch 4 loss 1.11935:  61%|██████    | 17/28 [00:43<00:27,  2.46s/it]epoch 4 loss 1.11279:  61%|██████    | 17/28 [00:43<00:27,  2.46s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6842[0m
[32m  eval_f1 = 0.4212[0m
[32m  eval_mcc = 0.6665[0m
[32m  eval_precision = 0.5227[0m
[32m  eval_recall = 0.388[0m
[32m  ********************[0m
[32m  Best f1:0.4212[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.11279:  64%|██████▍   | 18/28 [00:48<00:31,  3.18s/it]epoch 4 loss 1.11117:  64%|██████▍   | 18/28 [00:48<00:31,  3.18s/it]epoch 4 loss 1.11117:  68%|██████▊   | 19/28 [00:48<00:21,  2.34s/it]epoch 4 loss 1.11444:  68%|██████▊   | 19/28 [00:49<00:21,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.684[0m
[32m  eval_f1 = 0.4209[0m
[32m  eval_mcc = 0.6662[0m
[32m  eval_precision = 0.5218[0m
[32m  eval_recall = 0.3878[0m

epoch 4 loss 1.11444:  71%|███████▏  | 20/28 [00:52<00:22,  2.78s/it]epoch 4 loss 1.11304:  71%|███████▏  | 20/28 [00:52<00:22,  2.78s/it]epoch 4 loss 1.11304:  75%|███████▌  | 21/28 [00:52<00:14,  2.07s/it]epoch 4 loss 1.11487:  75%|███████▌  | 21/28 [00:53<00:14,  2.07s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6843[0m
[32m  eval_f1 = 0.4211[0m
[32m  eval_mcc = 0.6665[0m
[32m  eval_precision = 0.5218[0m
[32m  eval_recall = 0.388[0m

epoch 4 loss 1.11487:  79%|███████▊  | 22/28 [00:56<00:15,  2.59s/it]epoch 4 loss 1.11356:  79%|███████▊  | 22/28 [00:57<00:15,  2.59s/it]epoch 4 loss 1.11356:  82%|████████▏ | 23/28 [00:57<00:09,  1.93s/it]epoch 4 loss 1.11524:  82%|████████▏ | 23/28 [00:57<00:09,  1.93s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6844[0m
[32m  eval_f1 = 0.4212[0m
[32m  eval_mcc = 0.6666[0m
[32m  eval_precision = 0.5217[0m
[32m  eval_recall = 0.3881[0m

epoch 4 loss 1.11524:  86%|████████▌ | 24/28 [01:00<00:09,  2.49s/it]epoch 4 loss 1.11349:  86%|████████▌ | 24/28 [01:01<00:09,  2.49s/it]epoch 4 loss 1.11349:  89%|████████▉ | 25/28 [01:01<00:05,  1.86s/it]epoch 4 loss 1.11385:  89%|████████▉ | 25/28 [01:01<00:05,  1.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.74it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6845[0m
[32m  eval_f1 = 0.4213[0m
[32m  eval_mcc = 0.6667[0m
[32m  eval_precision = 0.5217[0m
[32m  eval_recall = 0.3883[0m
[32m  ********************[0m
[32m  Best f1:0.4213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.11385:  93%|█████████▎| 26/28 [01:06<00:05,  2.72s/it]epoch 4 loss 1.11359:  93%|█████████▎| 26/28 [01:06<00:05,  2.72s/it]epoch 4 loss 1.11359:  96%|█████████▋| 27/28 [01:06<00:02,  2.02s/it]epoch 4 loss 1.10865:  96%|█████████▋| 27/28 [01:06<00:02,  2.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6844[0m
[32m  eval_f1 = 0.4213[0m
[32m  eval_mcc = 0.6667[0m
[32m  eval_precision = 0.5218[0m
[32m  eval_recall = 0.3883[0m
[32m  ********************[0m
[32m  Best f1:0.4213[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_0/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.10865: 100%|██████████| 28/28 [01:10<00:00,  2.76s/it]epoch 4 loss 1.10865: 100%|██████████| 28/28 [01:10<00:00,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6844[0m
[32m  eval_f1 = 0.4213[0m
[32m  eval_mcc = 0.6667[0m
[32m  eval_precision = 0.5218[0m
[32m  eval_recall = 0.3883[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.75it/s] 20%|██        | 2/10 [00:00<00:02,  2.74it/s] 30%|███       | 3/10 [00:01<00:02,  2.74it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.71it/s] 80%|████████  | 8/10 [00:02<00:00,  2.72it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s]100%|██████████| 10/10 [00:03<00:00,  2.95it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6677[0m
[32m  eval_f1 = 0.3664[0m
[32m  eval_mcc = 0.6502[0m
[32m  eval_precision = 0.4663[0m
[32m  eval_recall = 0.3392[0m

