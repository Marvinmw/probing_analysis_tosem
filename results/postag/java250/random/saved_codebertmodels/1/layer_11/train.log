[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=11, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/1/layer_11', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.21126:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 5.21126:   4%|▎         | 1/28 [00:00<00:20,  1.30it/s]epoch 0 loss 5.21404:   4%|▎         | 1/28 [00:01<00:20,  1.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0061[0m
[32m  eval_f1 = 0.0039[0m
[32m  eval_mcc = 0.002[0m
[32m  eval_precision = 0.008[0m
[32m  eval_recall = 0.0034[0m
[32m  ********************[0m
[32m  Best f1:0.0039[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.002[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.21404:   7%|▋         | 2/28 [00:05<01:24,  3.25s/it]epoch 0 loss 5.20232:   7%|▋         | 2/28 [00:06<01:24,  3.25s/it]epoch 0 loss 5.20232:  11%|█         | 3/28 [00:06<00:48,  1.95s/it]epoch 0 loss 5.18225:  11%|█         | 3/28 [00:06<00:48,  1.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0136[0m
[32m  eval_f1 = 0.0067[0m
[32m  eval_mcc = 0.0076[0m
[32m  eval_precision = 0.0109[0m
[32m  eval_recall = 0.0072[0m
[32m  ********************[0m
[32m  Best f1:0.0067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0076[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.18225:  14%|█▍        | 4/28 [00:12<01:29,  3.72s/it]epoch 0 loss 5.15909:  14%|█▍        | 4/28 [00:13<01:29,  3.72s/it]epoch 0 loss 5.15909:  18%|█▊        | 5/28 [00:13<00:58,  2.53s/it]epoch 0 loss 5.13156:  18%|█▊        | 5/28 [00:13<00:58,  2.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.027[0m
[32m  eval_f1 = 0.0073[0m
[32m  eval_mcc = 0.0152[0m
[32m  eval_precision = 0.0114[0m
[32m  eval_recall = 0.0127[0m
[32m  ********************[0m
[32m  Best f1:0.0073[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0152[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.13156:  21%|██▏       | 6/28 [00:19<01:24,  3.85s/it]epoch 0 loss 5.09486:  21%|██▏       | 6/28 [00:19<01:24,  3.85s/it]epoch 0 loss 5.09486:  25%|██▌       | 7/28 [00:19<00:57,  2.73s/it]epoch 0 loss 5.05464:  25%|██▌       | 7/28 [00:20<00:57,  2.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0421[0m
[32m  eval_f1 = 0.0086[0m
[32m  eval_mcc = 0.0224[0m
[32m  eval_precision = 0.0131[0m
[32m  eval_recall = 0.0186[0m
[32m  ********************[0m
[32m  Best f1:0.0086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0224[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 5.05464:  29%|██▊       | 8/28 [00:26<01:18,  3.91s/it]epoch 0 loss 5.00339:  29%|██▊       | 8/28 [00:26<01:18,  3.91s/it]epoch 0 loss 5.00339:  32%|███▏      | 9/28 [00:26<00:53,  2.82s/it]epoch 0 loss 4.94916:  32%|███▏      | 9/28 [00:27<00:53,  2.82s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0589[0m
[32m  eval_f1 = 0.0122[0m
[32m  eval_mcc = 0.034[0m
[32m  eval_precision = 0.0393[0m
[32m  eval_recall = 0.0239[0m
[32m  ********************[0m
[32m  Best f1:0.0122[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.034[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.94916:  36%|███▌      | 10/28 [00:32<01:06,  3.71s/it]epoch 0 loss 4.89609:  36%|███▌      | 10/28 [00:32<01:06,  3.71s/it]epoch 0 loss 4.89609:  39%|███▉      | 11/28 [00:32<00:46,  2.71s/it]epoch 0 loss 4.83376:  39%|███▉      | 11/28 [00:33<00:46,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0875[0m
[32m  eval_f1 = 0.0192[0m
[32m  eval_mcc = 0.058[0m
[32m  eval_precision = 0.0428[0m
[32m  eval_recall = 0.0297[0m
[32m  ********************[0m
[32m  Best f1:0.0192[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.058[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.83376:  43%|████▎     | 12/28 [00:39<01:01,  3.87s/it]epoch 0 loss 4.77195:  43%|████▎     | 12/28 [00:39<01:01,  3.87s/it]epoch 0 loss 4.77195:  46%|████▋     | 13/28 [00:39<00:42,  2.83s/it]epoch 0 loss 4.70788:  46%|████▋     | 13/28 [00:40<00:42,  2.83s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1296[0m
[32m  eval_f1 = 0.0284[0m
[32m  eval_mcc = 0.0907[0m
[32m  eval_precision = 0.0439[0m
[32m  eval_recall = 0.036[0m
[32m  ********************[0m
[32m  Best f1:0.0284[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.70788:  50%|█████     | 14/28 [00:46<00:55,  3.93s/it]epoch 0 loss 4.64739:  50%|█████     | 14/28 [00:46<00:55,  3.93s/it]epoch 0 loss 4.64739:  54%|█████▎    | 15/28 [00:46<00:37,  2.88s/it]epoch 0 loss 4.58475:  54%|█████▎    | 15/28 [00:47<00:37,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.177[0m
[32m  eval_f1 = 0.0321[0m
[32m  eval_mcc = 0.128[0m
[32m  eval_precision = 0.0502[0m
[32m  eval_recall = 0.0389[0m
[32m  ********************[0m
[32m  Best f1:0.0321[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.128[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.58475:  57%|█████▋    | 16/28 [00:53<00:47,  3.93s/it]epoch 0 loss 4.52316:  57%|█████▋    | 16/28 [00:53<00:47,  3.93s/it]epoch 0 loss 4.52316:  61%|██████    | 17/28 [00:53<00:31,  2.88s/it]epoch 0 loss 4.45934:  61%|██████    | 17/28 [00:53<00:31,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2212[0m
[32m  eval_f1 = 0.0346[0m
[32m  eval_mcc = 0.1714[0m
[32m  eval_precision = 0.0645[0m
[32m  eval_recall = 0.0414[0m
[32m  ********************[0m
[32m  Best f1:0.0346[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.45934:  64%|██████▍   | 18/28 [00:59<00:39,  3.94s/it]epoch 0 loss 4.39567:  64%|██████▍   | 18/28 [01:00<00:39,  3.94s/it]epoch 0 loss 4.39567:  68%|██████▊   | 19/28 [01:00<00:25,  2.88s/it]epoch 0 loss 4.33674:  68%|██████▊   | 19/28 [01:00<00:25,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2659[0m
[32m  eval_f1 = 0.0375[0m
[32m  eval_mcc = 0.2148[0m
[32m  eval_precision = 0.0653[0m
[32m  eval_recall = 0.0444[0m
[32m  ********************[0m
[32m  Best f1:0.0375[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.33674:  71%|███████▏  | 20/28 [01:06<00:31,  3.92s/it]epoch 0 loss 4.27728:  71%|███████▏  | 20/28 [01:07<00:31,  3.92s/it]epoch 0 loss 4.27728:  75%|███████▌  | 21/28 [01:07<00:20,  2.87s/it]epoch 0 loss 4.21994:  75%|███████▌  | 21/28 [01:07<00:20,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2944[0m
[32m  eval_f1 = 0.0357[0m
[32m  eval_mcc = 0.2369[0m
[32m  eval_precision = 0.0659[0m
[32m  eval_recall = 0.0422[0m
[32m  ********************[0m
[32m  Best MCC:0.2369[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.21994:  79%|███████▊  | 22/28 [01:11<00:20,  3.40s/it]epoch 0 loss 4.16445:  79%|███████▊  | 22/28 [01:12<00:20,  3.40s/it]epoch 0 loss 4.16445:  82%|████████▏ | 23/28 [01:12<00:12,  2.50s/it]epoch 0 loss 4.11529:  82%|████████▏ | 23/28 [01:12<00:12,  2.50s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3031[0m
[32m  eval_f1 = 0.0519[0m
[32m  eval_mcc = 0.2534[0m
[32m  eval_precision = 0.0949[0m
[32m  eval_recall = 0.0524[0m
[32m  ********************[0m
[32m  Best f1:0.0519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2534[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.11529:  86%|████████▌ | 24/28 [01:18<00:14,  3.69s/it]epoch 0 loss 4.0626:  86%|████████▌ | 24/28 [01:19<00:14,  3.69s/it] epoch 0 loss 4.0626:  89%|████████▉ | 25/28 [01:19<00:08,  2.71s/it]epoch 0 loss 4.01672:  89%|████████▉ | 25/28 [01:19<00:08,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3335[0m
[32m  eval_f1 = 0.0875[0m
[32m  eval_mcc = 0.2981[0m
[32m  eval_precision = 0.1607[0m
[32m  eval_recall = 0.0785[0m
[32m  ********************[0m
[32m  Best f1:0.0875[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2981[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.01672:  93%|█████████▎| 26/28 [01:25<00:07,  3.80s/it]epoch 0 loss 3.9676:  93%|█████████▎| 26/28 [01:25<00:07,  3.80s/it] epoch 0 loss 3.9676:  96%|█████████▋| 27/28 [01:25<00:02,  2.79s/it]epoch 0 loss 3.92078:  96%|█████████▋| 27/28 [01:26<00:02,  2.79s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4015[0m
[32m  eval_f1 = 0.1241[0m
[32m  eval_mcc = 0.3762[0m
[32m  eval_precision = 0.2031[0m
[32m  eval_recall = 0.1146[0m
[32m  ********************[0m
[32m  Best f1:0.1241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3762[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.92078: 100%|██████████| 28/28 [01:32<00:00,  3.83s/it]epoch 0 loss 3.92078: 100%|██████████| 28/28 [01:32<00:00,  3.29s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.73259:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.73259:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]epoch 1 loss 2.631:   4%|▎         | 1/28 [00:00<00:11,  2.35it/s]  [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4583[0m
[32m  eval_f1 = 0.1465[0m
[32m  eval_mcc = 0.4343[0m
[32m  eval_precision = 0.2155[0m
[32m  eval_recall = 0.1404[0m
[32m  ********************[0m
[32m  Best f1:0.1465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4343[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.631:   7%|▋         | 2/28 [00:06<01:41,  3.90s/it]epoch 1 loss 2.58358:   7%|▋         | 2/28 [00:07<01:41,  3.90s/it]epoch 1 loss 2.58358:  11%|█         | 3/28 [00:07<00:57,  2.31s/it]epoch 1 loss 2.54206:  11%|█         | 3/28 [00:07<00:57,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.74it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5101[0m
[32m  eval_f1 = 0.1706[0m
[32m  eval_mcc = 0.4828[0m
[32m  eval_precision = 0.224[0m
[32m  eval_recall = 0.1627[0m
[32m  ********************[0m
[32m  Best f1:0.1706[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.54206:  14%|█▍        | 4/28 [00:13<01:34,  3.95s/it]epoch 1 loss 2.49994:  14%|█▍        | 4/28 [00:14<01:34,  3.95s/it]epoch 1 loss 2.49994:  18%|█▊        | 5/28 [00:14<01:01,  2.68s/it]epoch 1 loss 2.44212:  18%|█▊        | 5/28 [00:14<01:01,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5457[0m
[32m  eval_f1 = 0.1845[0m
[32m  eval_mcc = 0.5169[0m
[32m  eval_precision = 0.2288[0m
[32m  eval_recall = 0.1786[0m
[32m  ********************[0m
[32m  Best f1:0.1845[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5169[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.44212:  21%|██▏       | 6/28 [00:19<01:23,  3.78s/it]epoch 1 loss 2.41053:  21%|██▏       | 6/28 [00:20<01:23,  3.78s/it]epoch 1 loss 2.41053:  25%|██▌       | 7/28 [00:20<00:56,  2.68s/it]epoch 1 loss 2.36814:  25%|██▌       | 7/28 [00:20<00:56,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5556[0m
[32m  eval_f1 = 0.1884[0m
[32m  eval_mcc = 0.5275[0m
[32m  eval_precision = 0.2378[0m
[32m  eval_recall = 0.1807[0m
[32m  ********************[0m
[32m  Best f1:0.1884[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5275[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.36814:  29%|██▊       | 8/28 [00:27<01:19,  3.96s/it]epoch 1 loss 2.343:  29%|██▊       | 8/28 [00:27<01:19,  3.96s/it]  epoch 1 loss 2.343:  32%|███▏      | 9/28 [00:27<00:54,  2.85s/it]epoch 1 loss 2.29723:  32%|███▏      | 9/28 [00:27<00:54,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5625[0m
[32m  eval_f1 = 0.1917[0m
[32m  eval_mcc = 0.5353[0m
[32m  eval_precision = 0.241[0m
[32m  eval_recall = 0.1816[0m
[32m  ********************[0m
[32m  Best f1:0.1917[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.29723:  36%|███▌      | 10/28 [00:33<01:11,  3.95s/it]epoch 1 loss 2.26995:  36%|███▌      | 10/28 [00:34<01:11,  3.95s/it]epoch 1 loss 2.26995:  39%|███▉      | 11/28 [00:34<00:48,  2.87s/it]epoch 1 loss 2.24077:  39%|███▉      | 11/28 [00:34<00:48,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5672[0m
[32m  eval_f1 = 0.1939[0m
[32m  eval_mcc = 0.542[0m
[32m  eval_precision = 0.2549[0m
[32m  eval_recall = 0.1828[0m
[32m  ********************[0m
[32m  Best f1:0.1939[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.542[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.24077:  43%|████▎     | 12/28 [00:46<01:29,  5.61s/it]epoch 1 loss 2.21461:  43%|████▎     | 12/28 [00:46<01:29,  5.61s/it]epoch 1 loss 2.21461:  46%|████▋     | 13/28 [00:46<01:00,  4.04s/it]epoch 1 loss 2.19445:  46%|████▋     | 13/28 [00:47<01:00,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.567[0m
[32m  eval_f1 = 0.1955[0m
[32m  eval_mcc = 0.5456[0m
[32m  eval_precision = 0.272[0m
[32m  eval_recall = 0.1853[0m
[32m  ********************[0m
[32m  Best f1:0.1955[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5456[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.19445:  50%|█████     | 14/28 [00:58<01:29,  6.37s/it]epoch 1 loss 2.17638:  50%|█████     | 14/28 [00:58<01:29,  6.37s/it]epoch 1 loss 2.17638:  54%|█████▎    | 15/28 [00:58<00:59,  4.58s/it]epoch 1 loss 2.15396:  54%|█████▎    | 15/28 [00:59<00:59,  4.58s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5722[0m
[32m  eval_f1 = 0.2029[0m
[32m  eval_mcc = 0.5519[0m
[32m  eval_precision = 0.2683[0m
[32m  eval_recall = 0.1922[0m
[32m  ********************[0m
[32m  Best f1:0.2029[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5519[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.15396:  57%|█████▋    | 16/28 [01:09<01:17,  6.43s/it]epoch 1 loss 2.12954:  57%|█████▋    | 16/28 [01:09<01:17,  6.43s/it]epoch 1 loss 2.12954:  61%|██████    | 17/28 [01:09<00:50,  4.62s/it]epoch 1 loss 2.11134:  61%|██████    | 17/28 [01:10<00:50,  4.62s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5765[0m
[32m  eval_f1 = 0.2091[0m
[32m  eval_mcc = 0.5558[0m
[32m  eval_precision = 0.2735[0m
[32m  eval_recall = 0.1986[0m
[32m  ********************[0m
[32m  Best f1:0.2091[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5558[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.11134:  64%|██████▍   | 18/28 [01:18<00:57,  5.76s/it]epoch 1 loss 2.0899:  64%|██████▍   | 18/28 [01:18<00:57,  5.76s/it] epoch 1 loss 2.0899:  68%|██████▊   | 19/28 [01:18<00:37,  4.16s/it]epoch 1 loss 2.08029:  68%|██████▊   | 19/28 [01:19<00:37,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5803[0m
[32m  eval_f1 = 0.2177[0m
[32m  eval_mcc = 0.5579[0m
[32m  eval_precision = 0.287[0m
[32m  eval_recall = 0.2079[0m
[32m  ********************[0m
[32m  Best f1:0.2177[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5579[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.08029:  71%|███████▏  | 20/28 [01:26<00:42,  5.31s/it]epoch 1 loss 2.06861:  71%|███████▏  | 20/28 [01:27<00:42,  5.31s/it]epoch 1 loss 2.06861:  75%|███████▌  | 21/28 [01:27<00:26,  3.84s/it]epoch 1 loss 2.06195:  75%|███████▌  | 21/28 [01:27<00:26,  3.84s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5874[0m
[32m  eval_f1 = 0.2252[0m
[32m  eval_mcc = 0.5637[0m
[32m  eval_precision = 0.3003[0m
[32m  eval_recall = 0.214[0m
[32m  ********************[0m
[32m  Best f1:0.2252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5637[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.06195:  79%|███████▊  | 22/28 [01:36<00:33,  5.58s/it]epoch 1 loss 2.0537:  79%|███████▊  | 22/28 [01:37<00:33,  5.58s/it] epoch 1 loss 2.0537:  82%|████████▏ | 23/28 [01:37<00:20,  4.04s/it]epoch 1 loss 2.04438:  82%|████████▏ | 23/28 [01:37<00:20,  4.04s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.592[0m
[32m  eval_f1 = 0.2434[0m
[32m  eval_mcc = 0.5673[0m
[32m  eval_precision = 0.3497[0m
[32m  eval_recall = 0.2273[0m
[32m  ********************[0m
[32m  Best f1:0.2434[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5673[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.04438:  86%|████████▌ | 24/28 [01:45<00:21,  5.32s/it]epoch 1 loss 2.02919:  86%|████████▌ | 24/28 [01:46<00:21,  5.32s/it]epoch 1 loss 2.02919:  89%|████████▉ | 25/28 [01:46<00:11,  3.85s/it]epoch 1 loss 2.00978:  89%|████████▉ | 25/28 [01:46<00:11,  3.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.64it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5938[0m
[32m  eval_f1 = 0.2475[0m
[32m  eval_mcc = 0.5692[0m
[32m  eval_precision = 0.3461[0m
[32m  eval_recall = 0.2313[0m
[32m  ********************[0m
[32m  Best f1:0.2475[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5692[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.00978:  93%|█████████▎| 26/28 [01:56<00:11,  5.84s/it]epoch 1 loss 1.9951:  93%|█████████▎| 26/28 [01:56<00:11,  5.84s/it] epoch 1 loss 1.9951:  96%|█████████▋| 27/28 [01:56<00:04,  4.22s/it]epoch 1 loss 1.9804:  96%|█████████▋| 27/28 [01:57<00:04,  4.22s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5981[0m
[32m  eval_f1 = 0.2567[0m
[32m  eval_mcc = 0.574[0m
[32m  eval_precision = 0.3647[0m
[32m  eval_recall = 0.237[0m
[32m  ********************[0m
[32m  Best f1:0.2567[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.574[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9804: 100%|██████████| 28/28 [02:04<00:00,  5.32s/it]epoch 1 loss 1.9804: 100%|██████████| 28/28 [02:04<00:00,  4.46s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.60544:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.60544:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 2 loss 1.57998:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.66it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6026[0m
[32m  eval_f1 = 0.2708[0m
[32m  eval_mcc = 0.5792[0m
[32m  eval_precision = 0.3805[0m
[32m  eval_recall = 0.25[0m
[32m  ********************[0m
[32m  Best f1:0.2708[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5792[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57998:   7%|▋         | 2/28 [00:07<01:49,  4.20s/it]epoch 2 loss 1.60912:   7%|▋         | 2/28 [00:07<01:49,  4.20s/it]epoch 2 loss 1.60912:  11%|█         | 3/28 [00:07<01:01,  2.48s/it]epoch 2 loss 1.59677:  11%|█         | 3/28 [00:08<01:01,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.605[0m
[32m  eval_f1 = 0.2738[0m
[32m  eval_mcc = 0.5828[0m
[32m  eval_precision = 0.3894[0m
[32m  eval_recall = 0.2528[0m
[32m  ********************[0m
[32m  Best f1:0.2738[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5828[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.59677:  14%|█▍        | 4/28 [00:14<01:41,  4.24s/it]epoch 2 loss 1.60002:  14%|█▍        | 4/28 [00:15<01:41,  4.24s/it]epoch 2 loss 1.60002:  18%|█▊        | 5/28 [00:15<01:06,  2.87s/it]epoch 2 loss 1.57705:  18%|█▊        | 5/28 [00:15<01:06,  2.87s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6076[0m
[32m  eval_f1 = 0.2764[0m
[32m  eval_mcc = 0.5864[0m
[32m  eval_precision = 0.3816[0m
[32m  eval_recall = 0.2549[0m
[32m  ********************[0m
[32m  Best f1:0.2764[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5864[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.57705:  21%|██▏       | 6/28 [00:22<01:33,  4.26s/it]epoch 2 loss 1.57454:  21%|██▏       | 6/28 [00:22<01:33,  4.26s/it]epoch 2 loss 1.57454:  25%|██▌       | 7/28 [00:22<01:03,  3.01s/it]epoch 2 loss 1.58063:  25%|██▌       | 7/28 [00:22<01:03,  3.01s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.64it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6119[0m
[32m  eval_f1 = 0.281[0m
[32m  eval_mcc = 0.5907[0m
[32m  eval_precision = 0.3841[0m
[32m  eval_recall = 0.2587[0m
[32m  ********************[0m
[32m  Best f1:0.281[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5907[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.58063:  29%|██▊       | 8/28 [00:32<01:44,  5.23s/it]epoch 2 loss 1.56734:  29%|██▊       | 8/28 [00:32<01:44,  5.23s/it]epoch 2 loss 1.56734:  32%|███▏      | 9/28 [00:32<01:10,  3.73s/it]epoch 2 loss 1.55311:  32%|███▏      | 9/28 [00:33<01:10,  3.73s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6139[0m
[32m  eval_f1 = 0.282[0m
[32m  eval_mcc = 0.5921[0m
[32m  eval_precision = 0.3872[0m
[32m  eval_recall = 0.2598[0m
[32m  ********************[0m
[32m  Best f1:0.282[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5921[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55311:  36%|███▌      | 10/28 [00:41<01:31,  5.09s/it]epoch 2 loss 1.55148:  36%|███▌      | 10/28 [00:41<01:31,  5.09s/it]epoch 2 loss 1.55148:  39%|███▉      | 11/28 [00:41<01:02,  3.66s/it]epoch 2 loss 1.55206:  39%|███▉      | 11/28 [00:41<01:02,  3.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.73it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6154[0m
[32m  eval_f1 = 0.2854[0m
[32m  eval_mcc = 0.5932[0m
[32m  eval_precision = 0.3961[0m
[32m  eval_recall = 0.2626[0m
[32m  ********************[0m
[32m  Best f1:0.2854[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5932[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55206:  43%|████▎     | 12/28 [00:49<01:21,  5.12s/it]epoch 2 loss 1.55456:  43%|████▎     | 12/28 [00:50<01:21,  5.12s/it]epoch 2 loss 1.55456:  46%|████▋     | 13/28 [00:50<00:55,  3.69s/it]epoch 2 loss 1.54528:  46%|████▋     | 13/28 [00:50<00:55,  3.69s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6168[0m
[32m  eval_f1 = 0.2906[0m
[32m  eval_mcc = 0.5941[0m
[32m  eval_precision = 0.3946[0m
[32m  eval_recall = 0.2717[0m
[32m  ********************[0m
[32m  Best f1:0.2906[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5941[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54528:  50%|█████     | 14/28 [01:00<01:19,  5.69s/it]epoch 2 loss 1.54221:  50%|█████     | 14/28 [01:01<01:19,  5.69s/it]epoch 2 loss 1.54221:  54%|█████▎    | 15/28 [01:01<00:53,  4.10s/it]epoch 2 loss 1.54203:  54%|█████▎    | 15/28 [01:01<00:53,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6199[0m
[32m  eval_f1 = 0.2954[0m
[32m  eval_mcc = 0.5975[0m
[32m  eval_precision = 0.4048[0m
[32m  eval_recall = 0.2772[0m
[32m  ********************[0m
[32m  Best f1:0.2954[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5975[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54203:  57%|█████▋    | 16/28 [01:07<00:57,  4.77s/it]epoch 2 loss 1.54716:  57%|█████▋    | 16/28 [01:07<00:57,  4.77s/it]epoch 2 loss 1.54716:  61%|██████    | 17/28 [01:07<00:38,  3.47s/it]epoch 2 loss 1.55426:  61%|██████    | 17/28 [01:08<00:38,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6218[0m
[32m  eval_f1 = 0.2996[0m
[32m  eval_mcc = 0.5999[0m
[32m  eval_precision = 0.3981[0m
[32m  eval_recall = 0.2814[0m
[32m  ********************[0m
[32m  Best f1:0.2996[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5999[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55426:  64%|██████▍   | 18/28 [01:13<00:40,  4.05s/it]epoch 2 loss 1.55098:  64%|██████▍   | 18/28 [01:13<00:40,  4.05s/it]epoch 2 loss 1.55098:  68%|██████▊   | 19/28 [01:13<00:26,  2.95s/it]epoch 2 loss 1.55176:  68%|██████▊   | 19/28 [01:13<00:26,  2.95s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6249[0m
[32m  eval_f1 = 0.3055[0m
[32m  eval_mcc = 0.6041[0m
[32m  eval_precision = 0.4021[0m
[32m  eval_recall = 0.2857[0m
[32m  ********************[0m
[32m  Best f1:0.3055[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6041[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.55176:  71%|███████▏  | 20/28 [01:19<00:31,  3.97s/it]epoch 2 loss 1.54755:  71%|███████▏  | 20/28 [01:20<00:31,  3.97s/it]epoch 2 loss 1.54755:  75%|███████▌  | 21/28 [01:20<00:20,  2.91s/it]epoch 2 loss 1.54399:  75%|███████▌  | 21/28 [01:20<00:20,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6262[0m
[32m  eval_f1 = 0.3079[0m
[32m  eval_mcc = 0.6067[0m
[32m  eval_precision = 0.4058[0m
[32m  eval_recall = 0.2866[0m
[32m  ********************[0m
[32m  Best f1:0.3079[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6067[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54399:  79%|███████▊  | 22/28 [01:26<00:23,  3.98s/it]epoch 2 loss 1.54022:  79%|███████▊  | 22/28 [01:27<00:23,  3.98s/it]epoch 2 loss 1.54022:  82%|████████▏ | 23/28 [01:27<00:14,  2.91s/it]epoch 2 loss 1.53836:  82%|████████▏ | 23/28 [01:27<00:14,  2.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6278[0m
[32m  eval_f1 = 0.3079[0m
[32m  eval_mcc = 0.6087[0m
[32m  eval_precision = 0.4144[0m
[32m  eval_recall = 0.2863[0m
[32m  ********************[0m
[32m  Best MCC:0.6087[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53836:  86%|████████▌ | 24/28 [01:32<00:14,  3.52s/it]epoch 2 loss 1.53786:  86%|████████▌ | 24/28 [01:32<00:14,  3.52s/it]epoch 2 loss 1.53786:  89%|████████▉ | 25/28 [01:32<00:07,  2.59s/it]epoch 2 loss 1.54238:  89%|████████▉ | 25/28 [01:33<00:07,  2.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6292[0m
[32m  eval_f1 = 0.3092[0m
[32m  eval_mcc = 0.6098[0m
[32m  eval_precision = 0.4075[0m
[32m  eval_recall = 0.2873[0m
[32m  ********************[0m
[32m  Best f1:0.3092[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6098[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.54238:  93%|█████████▎| 26/28 [01:39<00:07,  3.82s/it]epoch 2 loss 1.53996:  93%|█████████▎| 26/28 [01:39<00:07,  3.82s/it]epoch 2 loss 1.53996:  96%|█████████▋| 27/28 [01:39<00:02,  2.80s/it]epoch 2 loss 1.53327:  96%|█████████▋| 27/28 [01:39<00:02,  2.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6293[0m
[32m  eval_f1 = 0.3104[0m
[32m  eval_mcc = 0.6099[0m
[32m  eval_precision = 0.4126[0m
[32m  eval_recall = 0.288[0m
[32m  ********************[0m
[32m  Best f1:0.3104[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6099[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.53327: 100%|██████████| 28/28 [01:45<00:00,  3.76s/it]epoch 2 loss 1.53327: 100%|██████████| 28/28 [01:45<00:00,  3.78s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.38512:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.38512:   4%|▎         | 1/28 [00:00<00:11,  2.30it/s]epoch 3 loss 1.39822:   4%|▎         | 1/28 [00:00<00:11,  2.30it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6317[0m
[32m  eval_f1 = 0.3146[0m
[32m  eval_mcc = 0.6118[0m
[32m  eval_precision = 0.4236[0m
[32m  eval_recall = 0.2907[0m
[32m  ********************[0m
[32m  Best f1:0.3146[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6118[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.39822:   7%|▋         | 2/28 [00:06<01:42,  3.93s/it]epoch 3 loss 1.37789:   7%|▋         | 2/28 [00:07<01:42,  3.93s/it]epoch 3 loss 1.37789:  11%|█         | 3/28 [00:07<00:58,  2.33s/it]epoch 3 loss 1.37297:  11%|█         | 3/28 [00:07<00:58,  2.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6331[0m
[32m  eval_f1 = 0.3189[0m
[32m  eval_mcc = 0.6129[0m
[32m  eval_precision = 0.4214[0m
[32m  eval_recall = 0.2935[0m
[32m  ********************[0m
[32m  Best f1:0.3189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6129[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.37297:  14%|█▍        | 4/28 [00:15<01:54,  4.78s/it]epoch 3 loss 1.38362:  14%|█▍        | 4/28 [00:16<01:54,  4.78s/it]epoch 3 loss 1.38362:  18%|█▊        | 5/28 [00:16<01:13,  3.21s/it]epoch 3 loss 1.41023:  18%|█▊        | 5/28 [00:16<01:13,  3.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6341[0m
[32m  eval_f1 = 0.3216[0m
[32m  eval_mcc = 0.6136[0m
[32m  eval_precision = 0.4233[0m
[32m  eval_recall = 0.2961[0m
[32m  ********************[0m
[32m  Best f1:0.3216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6136[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.41023:  21%|██▏       | 6/28 [00:22<01:34,  4.29s/it]epoch 3 loss 1.44561:  21%|██▏       | 6/28 [00:23<01:34,  4.29s/it]epoch 3 loss 1.44561:  25%|██▌       | 7/28 [00:23<01:03,  3.02s/it]epoch 3 loss 1.44316:  25%|██▌       | 7/28 [00:23<01:03,  3.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6344[0m
[32m  eval_f1 = 0.3229[0m
[32m  eval_mcc = 0.6137[0m
[32m  eval_precision = 0.4319[0m
[32m  eval_recall = 0.2981[0m
[32m  ********************[0m
[32m  Best f1:0.3229[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6137[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44316:  29%|██▊       | 8/28 [00:29<01:19,  3.98s/it]epoch 3 loss 1.44035:  29%|██▊       | 8/28 [00:29<01:19,  3.98s/it]epoch 3 loss 1.44035:  32%|███▏      | 9/28 [00:29<00:54,  2.86s/it]epoch 3 loss 1.43133:  32%|███▏      | 9/28 [00:29<00:54,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6357[0m
[32m  eval_f1 = 0.3234[0m
[32m  eval_mcc = 0.6148[0m
[32m  eval_precision = 0.428[0m
[32m  eval_recall = 0.2993[0m
[32m  ********************[0m
[32m  Best f1:0.3234[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6148[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43133:  36%|███▌      | 10/28 [00:35<01:06,  3.72s/it]epoch 3 loss 1.43749:  36%|███▌      | 10/28 [00:35<01:06,  3.72s/it]epoch 3 loss 1.43749:  39%|███▉      | 11/28 [00:35<00:46,  2.71s/it]epoch 3 loss 1.44826:  39%|███▉      | 11/28 [00:35<00:46,  2.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6374[0m
[32m  eval_f1 = 0.3239[0m
[32m  eval_mcc = 0.6167[0m
[32m  eval_precision = 0.4357[0m
[32m  eval_recall = 0.3001[0m
[32m  ********************[0m
[32m  Best f1:0.3239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6167[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.44826:  43%|████▎     | 12/28 [00:42<01:02,  3.92s/it]epoch 3 loss 1.44307:  43%|████▎     | 12/28 [00:42<01:02,  3.92s/it]epoch 3 loss 1.44307:  46%|████▋     | 13/28 [00:42<00:42,  2.86s/it]epoch 3 loss 1.43441:  46%|████▋     | 13/28 [00:42<00:42,  2.86s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6378[0m
[32m  eval_f1 = 0.3239[0m
[32m  eval_mcc = 0.6176[0m
[32m  eval_precision = 0.4336[0m
[32m  eval_recall = 0.2995[0m
[32m  ********************[0m
[32m  Best f1:0.3239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6176[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43441:  50%|█████     | 14/28 [00:50<01:00,  4.35s/it]epoch 3 loss 1.4354:  50%|█████     | 14/28 [00:50<01:00,  4.35s/it] epoch 3 loss 1.4354:  54%|█████▎    | 15/28 [00:50<00:41,  3.17s/it]epoch 3 loss 1.42981:  54%|█████▎    | 15/28 [00:51<00:41,  3.17s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6378[0m
[32m  eval_f1 = 0.3234[0m
[32m  eval_mcc = 0.6182[0m
[32m  eval_precision = 0.4384[0m
[32m  eval_recall = 0.2982[0m
[32m  ********************[0m
[32m  Best MCC:0.6182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42981:  57%|█████▋    | 16/28 [00:55<00:43,  3.66s/it]epoch 3 loss 1.42788:  57%|█████▋    | 16/28 [00:56<00:43,  3.66s/it]epoch 3 loss 1.42788:  61%|██████    | 17/28 [00:56<00:29,  2.68s/it]epoch 3 loss 1.43014:  61%|██████    | 17/28 [00:56<00:29,  2.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6385[0m
[32m  eval_f1 = 0.3239[0m
[32m  eval_mcc = 0.6189[0m
[32m  eval_precision = 0.4389[0m
[32m  eval_recall = 0.2987[0m
[32m  ********************[0m
[32m  Best f1:0.3239[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6189[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43014:  64%|██████▍   | 18/28 [01:05<00:48,  4.81s/it]epoch 3 loss 1.42772:  64%|██████▍   | 18/28 [01:06<00:48,  4.81s/it]epoch 3 loss 1.42772:  68%|██████▊   | 19/28 [01:06<00:31,  3.49s/it]epoch 3 loss 1.42459:  68%|██████▊   | 19/28 [01:06<00:31,  3.49s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6391[0m
[32m  eval_f1 = 0.3245[0m
[32m  eval_mcc = 0.62[0m
[32m  eval_precision = 0.441[0m
[32m  eval_recall = 0.2995[0m
[32m  ********************[0m
[32m  Best f1:0.3245[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.62[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42459:  71%|███████▏  | 20/28 [01:12<00:34,  4.36s/it]epoch 3 loss 1.4211:  71%|███████▏  | 20/28 [01:13<00:34,  4.36s/it] epoch 3 loss 1.4211:  75%|███████▌  | 21/28 [01:13<00:22,  3.18s/it]epoch 3 loss 1.42748:  75%|███████▌  | 21/28 [01:13<00:22,  3.18s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6397[0m
[32m  eval_f1 = 0.3252[0m
[32m  eval_mcc = 0.621[0m
[32m  eval_precision = 0.4416[0m
[32m  eval_recall = 0.3002[0m
[32m  ********************[0m
[32m  Best f1:0.3252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42748:  79%|███████▊  | 22/28 [01:21<00:29,  4.87s/it]epoch 3 loss 1.42929:  79%|███████▊  | 22/28 [01:22<00:29,  4.87s/it]epoch 3 loss 1.42929:  82%|████████▏ | 23/28 [01:22<00:17,  3.54s/it]epoch 3 loss 1.43125:  82%|████████▏ | 23/28 [01:22<00:17,  3.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6411[0m
[32m  eval_f1 = 0.3263[0m
[32m  eval_mcc = 0.6225[0m
[32m  eval_precision = 0.4423[0m
[32m  eval_recall = 0.3016[0m
[32m  ********************[0m
[32m  Best f1:0.3263[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6225[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43125:  86%|████████▌ | 24/28 [01:30<00:19,  4.99s/it]epoch 3 loss 1.43076:  86%|████████▌ | 24/28 [01:31<00:19,  4.99s/it]epoch 3 loss 1.43076:  89%|████████▉ | 25/28 [01:31<00:10,  3.63s/it]epoch 3 loss 1.43237:  89%|████████▉ | 25/28 [01:31<00:10,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6428[0m
[32m  eval_f1 = 0.3273[0m
[32m  eval_mcc = 0.6241[0m
[32m  eval_precision = 0.4419[0m
[32m  eval_recall = 0.3027[0m
[32m  ********************[0m
[32m  Best f1:0.3273[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6241[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.43237:  93%|█████████▎| 26/28 [01:37<00:08,  4.47s/it]epoch 3 loss 1.42886:  93%|█████████▎| 26/28 [01:37<00:08,  4.47s/it]epoch 3 loss 1.42886:  96%|█████████▋| 27/28 [01:37<00:03,  3.25s/it]epoch 3 loss 1.42162:  96%|█████████▋| 27/28 [01:38<00:03,  3.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6435[0m
[32m  eval_f1 = 0.3289[0m
[32m  eval_mcc = 0.6243[0m
[32m  eval_precision = 0.44[0m
[32m  eval_recall = 0.3041[0m
[32m  ********************[0m
[32m  Best f1:0.3289[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.42162: 100%|██████████| 28/28 [01:46<00:00,  4.99s/it]epoch 3 loss 1.42162: 100%|██████████| 28/28 [01:46<00:00,  3.82s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.52372:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.52372:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s]epoch 4 loss 1.44324:   4%|▎         | 1/28 [00:00<00:11,  2.38it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6445[0m
[32m  eval_f1 = 0.3298[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.4404[0m
[32m  eval_recall = 0.3048[0m
[32m  ********************[0m
[32m  Best f1:0.3298[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.44324:   7%|▋         | 2/28 [00:07<01:49,  4.20s/it]epoch 4 loss 1.44845:   7%|▋         | 2/28 [00:07<01:49,  4.20s/it]epoch 4 loss 1.44845:  11%|█         | 3/28 [00:07<01:01,  2.48s/it]epoch 4 loss 1.44507:  11%|█         | 3/28 [00:08<01:01,  2.48s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6445[0m
[32m  eval_f1 = 0.3303[0m
[32m  eval_mcc = 0.6246[0m
[32m  eval_precision = 0.4403[0m
[32m  eval_recall = 0.3048[0m
[32m  ********************[0m
[32m  Best f1:0.3303[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.44507:  14%|█▍        | 4/28 [00:12<01:23,  3.46s/it]epoch 4 loss 1.40467:  14%|█▍        | 4/28 [00:13<01:23,  3.46s/it]epoch 4 loss 1.40467:  18%|█▊        | 5/28 [00:13<00:54,  2.36s/it]epoch 4 loss 1.39482:  18%|█▊        | 5/28 [00:13<00:54,  2.36s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6447[0m
[32m  eval_f1 = 0.33[0m
[32m  eval_mcc = 0.6248[0m
[32m  eval_precision = 0.4417[0m
[32m  eval_recall = 0.3044[0m
[32m  ********************[0m
[32m  Best MCC:0.6248[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39482:  21%|██▏       | 6/28 [00:17<01:10,  3.19s/it]epoch 4 loss 1.40911:  21%|██▏       | 6/28 [00:18<01:10,  3.19s/it]epoch 4 loss 1.40911:  25%|██▌       | 7/28 [00:18<00:47,  2.28s/it]epoch 4 loss 1.40186:  25%|██▌       | 7/28 [00:18<00:47,  2.28s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.74it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.645[0m
[32m  eval_f1 = 0.3308[0m
[32m  eval_mcc = 0.6252[0m
[32m  eval_precision = 0.4422[0m
[32m  eval_recall = 0.3049[0m
[32m  ********************[0m
[32m  Best f1:0.3308[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6252[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40186:  29%|██▊       | 8/28 [00:24<01:10,  3.54s/it]epoch 4 loss 1.39935:  29%|██▊       | 8/28 [00:24<01:10,  3.54s/it]epoch 4 loss 1.39935:  32%|███▏      | 9/28 [00:24<00:48,  2.57s/it]epoch 4 loss 1.40153:  32%|███▏      | 9/28 [00:25<00:48,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6454[0m
[32m  eval_f1 = 0.3314[0m
[32m  eval_mcc = 0.6256[0m
[32m  eval_precision = 0.4422[0m
[32m  eval_recall = 0.3055[0m
[32m  ********************[0m
[32m  Best f1:0.3314[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6256[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40153:  36%|███▌      | 10/28 [00:33<01:20,  4.46s/it]epoch 4 loss 1.41253:  36%|███▌      | 10/28 [00:34<01:20,  4.46s/it]epoch 4 loss 1.41253:  39%|███▉      | 11/28 [00:34<00:54,  3.23s/it]epoch 4 loss 1.40607:  39%|███▉      | 11/28 [00:34<00:54,  3.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6455[0m
[32m  eval_f1 = 0.3315[0m
[32m  eval_mcc = 0.6259[0m
[32m  eval_precision = 0.4423[0m
[32m  eval_recall = 0.3055[0m
[32m  ********************[0m
[32m  Best f1:0.3315[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.40607:  43%|████▎     | 12/28 [00:46<01:34,  5.91s/it]epoch 4 loss 1.40448:  43%|████▎     | 12/28 [00:46<01:34,  5.91s/it]epoch 4 loss 1.40448:  46%|████▋     | 13/28 [00:46<01:03,  4.25s/it]epoch 4 loss 1.39579:  46%|████▋     | 13/28 [00:46<01:03,  4.25s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6453[0m
[32m  eval_f1 = 0.3318[0m
[32m  eval_mcc = 0.6258[0m
[32m  eval_precision = 0.4421[0m
[32m  eval_recall = 0.3058[0m
[32m  ********************[0m
[32m  Best f1:0.3318[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.39579:  50%|█████     | 14/28 [00:51<01:02,  4.50s/it]epoch 4 loss 1.39508:  50%|█████     | 14/28 [00:52<01:02,  4.50s/it]epoch 4 loss 1.39508:  54%|█████▎    | 15/28 [00:52<00:42,  3.26s/it]epoch 4 loss 1.39764:  54%|█████▎    | 15/28 [00:52<00:42,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6455[0m
[32m  eval_f1 = 0.332[0m
[32m  eval_mcc = 0.626[0m
[32m  eval_precision = 0.4418[0m
[32m  eval_recall = 0.306[0m
[32m  ********************[0m
[32m  Best f1:0.332[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.626[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.39764:  57%|█████▋    | 16/28 [01:03<01:09,  5.77s/it]epoch 4 loss 1.39604:  57%|█████▋    | 16/28 [01:04<01:09,  5.77s/it]epoch 4 loss 1.39604:  61%|██████    | 17/28 [01:04<00:45,  4.16s/it]epoch 4 loss 1.38861:  61%|██████    | 17/28 [01:04<00:45,  4.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6462[0m
[32m  eval_f1 = 0.3325[0m
[32m  eval_mcc = 0.6267[0m
[32m  eval_precision = 0.4424[0m
[32m  eval_recall = 0.3066[0m
[32m  ********************[0m
[32m  Best f1:0.3325[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6267[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.38861:  64%|██████▍   | 18/28 [01:15<01:03,  6.38s/it]epoch 4 loss 1.38854:  64%|██████▍   | 18/28 [01:15<01:03,  6.38s/it]epoch 4 loss 1.38854:  68%|██████▊   | 19/28 [01:15<00:41,  4.59s/it]epoch 4 loss 1.39212:  68%|██████▊   | 19/28 [01:16<00:41,  4.59s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6455[0m
[32m  eval_f1 = 0.3325[0m
[32m  eval_mcc = 0.626[0m
[32m  eval_precision = 0.4422[0m
[32m  eval_recall = 0.3066[0m

epoch 4 loss 1.39212:  71%|███████▏  | 20/28 [01:19<00:34,  4.35s/it]epoch 4 loss 1.38886:  71%|███████▏  | 20/28 [01:20<00:34,  4.35s/it]epoch 4 loss 1.38886:  75%|███████▌  | 21/28 [01:20<00:22,  3.16s/it]epoch 4 loss 1.39074:  75%|███████▌  | 21/28 [01:20<00:22,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6458[0m
[32m  eval_f1 = 0.3326[0m
[32m  eval_mcc = 0.6263[0m
[32m  eval_precision = 0.4421[0m
[32m  eval_recall = 0.3067[0m
[32m  ********************[0m
[32m  Best f1:0.3326[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_11/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.39074:  79%|███████▊  | 22/28 [01:27<00:26,  4.47s/it]epoch 4 loss 1.38927:  79%|███████▊  | 22/28 [01:28<00:26,  4.47s/it]epoch 4 loss 1.38927:  82%|████████▏ | 23/28 [01:28<00:16,  3.26s/it]epoch 4 loss 1.39156:  82%|████████▏ | 23/28 [01:28<00:16,  3.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6458[0m
[32m  eval_f1 = 0.3325[0m
[32m  eval_mcc = 0.6263[0m
[32m  eval_precision = 0.4423[0m
[32m  eval_recall = 0.3067[0m

epoch 4 loss 1.39156:  86%|████████▌ | 24/28 [01:31<00:13,  3.42s/it]epoch 4 loss 1.38927:  86%|████████▌ | 24/28 [01:32<00:13,  3.42s/it]epoch 4 loss 1.38927:  89%|████████▉ | 25/28 [01:32<00:07,  2.51s/it]epoch 4 loss 1.38938:  89%|████████▉ | 25/28 [01:32<00:07,  2.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6457[0m
[32m  eval_f1 = 0.3324[0m
[32m  eval_mcc = 0.6262[0m
[32m  eval_precision = 0.4419[0m
[32m  eval_recall = 0.3066[0m

epoch 4 loss 1.38938:  93%|█████████▎| 26/28 [01:36<00:05,  2.89s/it]epoch 4 loss 1.38944:  93%|█████████▎| 26/28 [01:36<00:05,  2.89s/it]epoch 4 loss 1.38944:  96%|█████████▋| 27/28 [01:36<00:02,  2.15s/it]epoch 4 loss 1.38492:  96%|█████████▋| 27/28 [01:36<00:02,  2.15s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6459[0m
[32m  eval_f1 = 0.3324[0m
[32m  eval_mcc = 0.6264[0m
[32m  eval_precision = 0.4419[0m
[32m  eval_recall = 0.3066[0m

epoch 4 loss 1.38492: 100%|██████████| 28/28 [01:40<00:00,  2.58s/it]epoch 4 loss 1.38492: 100%|██████████| 28/28 [01:40<00:00,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.77it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.73it/s] 40%|████      | 4/10 [00:01<00:02,  2.74it/s] 50%|█████     | 5/10 [00:01<00:01,  2.74it/s] 60%|██████    | 6/10 [00:02<00:01,  2.75it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6458[0m
[32m  eval_f1 = 0.3326[0m
[32m  eval_mcc = 0.6263[0m
[32m  eval_precision = 0.4421[0m
[32m  eval_recall = 0.3067[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.75it/s] 30%|███       | 3/10 [00:01<00:02,  2.75it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.73it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.74it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6319[0m
[32m  eval_f1 = 0.2972[0m
[32m  eval_mcc = 0.6129[0m
[32m  eval_precision = 0.3879[0m
[32m  eval_recall = 0.2745[0m

