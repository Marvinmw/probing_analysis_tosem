[33mdevice: cuda, n_gpu: 1[0m
[32mLoad Dataset[0m
[32mNum of Class 145[0m
Token indices sequence length is longer than the specified maximum sequence length for this model (550 > 512). Running this sequence through the model will result in indexing errors
[32mFinishing loading Dataset[0m
[32mRandom Initialize the encoder[0m
[32mProbimg Model Parameters 111505[0m
[32mTraining/evaluation parameters Namespace(adam_epsilon=1e-08, config_name='microsoft/codebert-base', data_folder='../datasets/java250/postag/', dataset='postag', debug=False, device=device(type='cuda'), do_eval=True, do_random=True, do_test=True, do_train=True, epochs=5, eval_batch_size=32, evaluate_during_training=False, gradient_accumulation_steps=1, graph_type='ast', layer=4, learning_rate=0.001, max_code_length=512, max_grad_norm=1.0, max_steps=-1, model_name='codebert', model_name_or_path='microsoft/codebert-base', n_gpu=1, output_dir='./pos_res_java/random/saved_codebertmodels/1/layer_4', posratio=0.5, seed=353, token_config='microsoft/codebert-base', train_batch_size=32, warmup_steps=0, weight_decay=0.0)[0m
[32msave steps 2[0m
[32m***** Running training *****[0m
[32m  Num examples = 880[0m
[32m  Num Epochs = 5[0m
[32m  Instantaneous batch size per GPU = 32[0m
[32m  Total train batch size = 32[0m
[32m  Gradient Accumulation steps = 1[0m
[32m  Total optimization steps = 140[0m
  0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 4.96408:   0%|          | 0/28 [00:00<?, ?it/s]epoch 0 loss 4.96408:   4%|▎         | 1/28 [00:00<00:20,  1.33it/s]epoch 0 loss 4.96378:   4%|▎         | 1/28 [00:01<00:20,  1.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.77it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.77it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.77it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0094[0m
[32m  eval_f1 = 0.0023[0m
[32m  eval_mcc = 0.0007[0m
[32m  eval_precision = 0.0057[0m
[32m  eval_recall = 0.0064[0m
[32m  ********************[0m
[32m  Best f1:0.0023[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0007[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.96378:   7%|▋         | 2/28 [00:05<01:24,  3.24s/it]epoch 0 loss 4.95425:   7%|▋         | 2/28 [00:06<01:24,  3.24s/it]epoch 0 loss 4.95425:  11%|█         | 3/28 [00:06<00:48,  1.94s/it]epoch 0 loss 4.93935:  11%|█         | 3/28 [00:06<00:48,  1.94s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0206[0m
[32m  eval_f1 = 0.0044[0m
[32m  eval_mcc = 0.0059[0m
[32m  eval_precision = 0.0079[0m
[32m  eval_recall = 0.0084[0m
[32m  ********************[0m
[32m  Best f1:0.0044[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0059[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.93935:  14%|█▍        | 4/28 [00:15<01:59,  4.96s/it]epoch 0 loss 4.92271:  14%|█▍        | 4/28 [00:16<01:59,  4.96s/it]epoch 0 loss 4.92271:  18%|█▊        | 5/28 [00:16<01:16,  3.33s/it]epoch 0 loss 4.89774:  18%|█▊        | 5/28 [00:16<01:16,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0376[0m
[32m  eval_f1 = 0.0064[0m
[32m  eval_mcc = 0.01[0m
[32m  eval_precision = 0.0096[0m
[32m  eval_recall = 0.0113[0m
[32m  ********************[0m
[32m  Best f1:0.0064[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.01[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.89774:  21%|██▏       | 6/28 [00:27<02:09,  5.89s/it]epoch 0 loss 4.86273:  21%|██▏       | 6/28 [00:27<02:09,  5.89s/it]epoch 0 loss 4.86273:  25%|██▌       | 7/28 [00:27<01:26,  4.11s/it]epoch 0 loss 4.82589:  25%|██▌       | 7/28 [00:27<01:26,  4.11s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.0621[0m
[32m  eval_f1 = 0.0095[0m
[32m  eval_mcc = 0.0211[0m
[32m  eval_precision = 0.0129[0m
[32m  eval_recall = 0.0128[0m
[32m  ********************[0m
[32m  Best f1:0.0095[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0211[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.82589:  29%|██▊       | 8/28 [00:37<02:00,  6.02s/it]epoch 0 loss 4.77888:  29%|██▊       | 8/28 [00:37<02:00,  6.02s/it]epoch 0 loss 4.77888:  32%|███▏      | 9/28 [00:37<01:21,  4.27s/it]epoch 0 loss 4.7277:  32%|███▏      | 9/28 [00:38<01:21,  4.27s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.092[0m
[32m  eval_f1 = 0.0191[0m
[32m  eval_mcc = 0.0465[0m
[32m  eval_precision = 0.0248[0m
[32m  eval_recall = 0.0236[0m
[32m  ********************[0m
[32m  Best f1:0.0191[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.0465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.7277:  36%|███▌      | 10/28 [00:46<01:42,  5.67s/it]epoch 0 loss 4.67704:  36%|███▌      | 10/28 [00:47<01:42,  5.67s/it]epoch 0 loss 4.67704:  39%|███▉      | 11/28 [00:47<01:09,  4.06s/it]epoch 0 loss 4.61915:  39%|███▉      | 11/28 [00:47<01:09,  4.06s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.1213[0m
[32m  eval_f1 = 0.0255[0m
[32m  eval_mcc = 0.072[0m
[32m  eval_precision = 0.0346[0m
[32m  eval_recall = 0.0297[0m
[32m  ********************[0m
[32m  Best f1:0.0255[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.072[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.61915:  43%|████▎     | 12/28 [00:56<01:29,  5.58s/it]epoch 0 loss 4.56043:  43%|████▎     | 12/28 [00:56<01:29,  5.58s/it]epoch 0 loss 4.56043:  46%|████▋     | 13/28 [00:56<01:00,  4.02s/it]epoch 0 loss 4.50023:  46%|████▋     | 13/28 [00:57<01:00,  4.02s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.77it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.161[0m
[32m  eval_f1 = 0.0358[0m
[32m  eval_mcc = 0.1088[0m
[32m  eval_precision = 0.0526[0m
[32m  eval_recall = 0.0382[0m
[32m  ********************[0m
[32m  Best f1:0.0358[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1088[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.50023:  50%|█████     | 14/28 [01:04<01:12,  5.19s/it]epoch 0 loss 4.44262:  50%|█████     | 14/28 [01:04<01:12,  5.19s/it]epoch 0 loss 4.44262:  54%|█████▎    | 15/28 [01:04<00:48,  3.75s/it]epoch 0 loss 4.38352:  54%|█████▎    | 15/28 [01:05<00:48,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.2129[0m
[32m  eval_f1 = 0.0483[0m
[32m  eval_mcc = 0.1607[0m
[32m  eval_precision = 0.0599[0m
[32m  eval_recall = 0.0501[0m
[32m  ********************[0m
[32m  Best f1:0.0483[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.1607[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.38352:  57%|█████▋    | 16/28 [01:11<00:55,  4.60s/it]epoch 0 loss 4.32512:  57%|█████▋    | 16/28 [01:11<00:55,  4.60s/it]epoch 0 loss 4.32512:  61%|██████    | 17/28 [01:11<00:36,  3.34s/it]epoch 0 loss 4.26345:  61%|██████    | 17/28 [01:12<00:36,  3.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.256[0m
[32m  eval_f1 = 0.0544[0m
[32m  eval_mcc = 0.2045[0m
[32m  eval_precision = 0.0869[0m
[32m  eval_recall = 0.056[0m
[32m  ********************[0m
[32m  Best f1:0.0544[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2045[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.26345:  64%|██████▍   | 18/28 [01:18<00:43,  4.33s/it]epoch 0 loss 4.20211:  64%|██████▍   | 18/28 [01:19<00:43,  4.33s/it]epoch 0 loss 4.20211:  68%|██████▊   | 19/28 [01:19<00:28,  3.16s/it]epoch 0 loss 4.14387:  68%|██████▊   | 19/28 [01:19<00:28,  3.16s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.3267[0m
[32m  eval_f1 = 0.0668[0m
[32m  eval_mcc = 0.2784[0m
[32m  eval_precision = 0.108[0m
[32m  eval_recall = 0.0677[0m
[32m  ********************[0m
[32m  Best f1:0.0668[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.2784[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.14387:  71%|███████▏  | 20/28 [01:28<00:40,  5.01s/it]epoch 0 loss 4.08526:  71%|███████▏  | 20/28 [01:28<00:40,  5.01s/it]epoch 0 loss 4.08526:  75%|███████▌  | 21/28 [01:28<00:25,  3.63s/it]epoch 0 loss 4.02622:  75%|███████▌  | 21/28 [01:29<00:25,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.385[0m
[32m  eval_f1 = 0.08[0m
[32m  eval_mcc = 0.3403[0m
[32m  eval_precision = 0.1436[0m
[32m  eval_recall = 0.0815[0m
[32m  ********************[0m
[32m  Best f1:0.08[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3403[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 4.02622:  79%|███████▊  | 22/28 [01:36<00:30,  5.00s/it]epoch 0 loss 3.96893:  79%|███████▊  | 22/28 [01:37<00:30,  5.00s/it]epoch 0 loss 3.96893:  82%|████████▏ | 23/28 [01:37<00:18,  3.63s/it]epoch 0 loss 3.91683:  82%|████████▏ | 23/28 [01:37<00:18,  3.63s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.434[0m
[32m  eval_f1 = 0.1228[0m
[32m  eval_mcc = 0.3966[0m
[32m  eval_precision = 0.1995[0m
[32m  eval_recall = 0.1165[0m
[32m  ********************[0m
[32m  Best f1:0.1228[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.3966[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.91683:  86%|████████▌ | 24/28 [01:47<00:22,  5.52s/it]epoch 0 loss 3.86078:  86%|████████▌ | 24/28 [01:47<00:22,  5.52s/it]epoch 0 loss 3.86078:  89%|████████▉ | 25/28 [01:47<00:11,  3.99s/it]epoch 0 loss 3.81082:  89%|████████▉ | 25/28 [01:48<00:11,  3.99s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4584[0m
[32m  eval_f1 = 0.1385[0m
[32m  eval_mcc = 0.4271[0m
[32m  eval_precision = 0.1999[0m
[32m  eval_recall = 0.1291[0m
[32m  ********************[0m
[32m  Best f1:0.1385[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4271[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.81082:  93%|█████████▎| 26/28 [01:54<00:09,  4.85s/it]epoch 0 loss 3.75741:  93%|█████████▎| 26/28 [01:55<00:09,  4.85s/it]epoch 0 loss 3.75741:  96%|█████████▋| 27/28 [01:55<00:03,  3.52s/it]epoch 0 loss 3.70528:  96%|█████████▋| 27/28 [01:55<00:03,  3.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.4887[0m
[32m  eval_f1 = 0.1555[0m
[32m  eval_mcc = 0.4614[0m
[32m  eval_precision = 0.1977[0m
[32m  eval_recall = 0.1471[0m
[32m  ********************[0m
[32m  Best f1:0.1555[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4614[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 0 loss 3.70528: 100%|██████████| 28/28 [02:04<00:00,  5.39s/it]epoch 0 loss 3.70528: 100%|██████████| 28/28 [02:04<00:00,  4.46s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.39235:   0%|          | 0/28 [00:00<?, ?it/s]epoch 1 loss 2.39235:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s]epoch 1 loss 2.30308:   4%|▎         | 1/28 [00:00<00:11,  2.33it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5183[0m
[32m  eval_f1 = 0.1704[0m
[32m  eval_mcc = 0.4909[0m
[32m  eval_precision = 0.2248[0m
[32m  eval_recall = 0.1663[0m
[32m  ********************[0m
[32m  Best f1:0.1704[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.4909[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.30308:   7%|▋         | 2/28 [00:06<01:44,  4.02s/it]epoch 1 loss 2.25111:   7%|▋         | 2/28 [00:07<01:44,  4.02s/it]epoch 1 loss 2.25111:  11%|█         | 3/28 [00:07<00:59,  2.38s/it]epoch 1 loss 2.21126:  11%|█         | 3/28 [00:07<00:59,  2.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5573[0m
[32m  eval_f1 = 0.193[0m
[32m  eval_mcc = 0.5299[0m
[32m  eval_precision = 0.2423[0m
[32m  eval_recall = 0.1899[0m
[32m  ********************[0m
[32m  Best f1:0.193[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5299[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.21126:  14%|█▍        | 4/28 [00:13<01:31,  3.81s/it]epoch 1 loss 2.16944:  14%|█▍        | 4/28 [00:13<01:31,  3.81s/it]epoch 1 loss 2.16944:  18%|█▊        | 5/28 [00:13<00:59,  2.59s/it]epoch 1 loss 2.1083:  18%|█▊        | 5/28 [00:14<00:59,  2.59s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5776[0m
[32m  eval_f1 = 0.2086[0m
[32m  eval_mcc = 0.5515[0m
[32m  eval_precision = 0.2715[0m
[32m  eval_recall = 0.2043[0m
[32m  ********************[0m
[32m  Best f1:0.2086[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.1083:  21%|██▏       | 6/28 [00:20<01:25,  3.90s/it]epoch 1 loss 2.07777:  21%|██▏       | 6/28 [00:20<01:25,  3.90s/it]epoch 1 loss 2.07777:  25%|██▌       | 7/28 [00:20<00:58,  2.77s/it]epoch 1 loss 2.03618:  25%|██▌       | 7/28 [00:21<00:58,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5858[0m
[32m  eval_f1 = 0.214[0m
[32m  eval_mcc = 0.5619[0m
[32m  eval_precision = 0.279[0m
[32m  eval_recall = 0.2069[0m
[32m  ********************[0m
[32m  Best f1:0.214[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5619[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 2.03618:  29%|██▊       | 8/28 [00:26<01:16,  3.83s/it]epoch 1 loss 2.01371:  29%|██▊       | 8/28 [00:27<01:16,  3.83s/it]epoch 1 loss 2.01371:  32%|███▏      | 9/28 [00:27<00:52,  2.76s/it]epoch 1 loss 1.9712:  32%|███▏      | 9/28 [00:27<00:52,  2.76s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5876[0m
[32m  eval_f1 = 0.2187[0m
[32m  eval_mcc = 0.5643[0m
[32m  eval_precision = 0.2926[0m
[32m  eval_recall = 0.2085[0m
[32m  ********************[0m
[32m  Best f1:0.2187[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5643[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9712:  36%|███▌      | 10/28 [00:33<01:08,  3.80s/it]epoch 1 loss 1.946:  36%|███▌      | 10/28 [00:33<01:08,  3.80s/it] epoch 1 loss 1.946:  39%|███▉      | 11/28 [00:33<00:47,  2.77s/it]epoch 1 loss 1.9208:  39%|███▉      | 11/28 [00:34<00:47,  2.77s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.72it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5905[0m
[32m  eval_f1 = 0.2243[0m
[32m  eval_mcc = 0.568[0m
[32m  eval_precision = 0.3043[0m
[32m  eval_recall = 0.2113[0m
[32m  ********************[0m
[32m  Best f1:0.2243[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.568[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.9208:  43%|████▎     | 12/28 [00:40<01:02,  3.91s/it]epoch 1 loss 1.89746:  43%|████▎     | 12/28 [00:40<01:02,  3.91s/it]epoch 1 loss 1.89746:  46%|████▋     | 13/28 [00:40<00:42,  2.85s/it]epoch 1 loss 1.88087:  46%|████▋     | 13/28 [00:41<00:42,  2.85s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.5959[0m
[32m  eval_f1 = 0.2398[0m
[32m  eval_mcc = 0.5733[0m
[32m  eval_precision = 0.3461[0m
[32m  eval_recall = 0.2229[0m
[32m  ********************[0m
[32m  Best f1:0.2398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5733[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.88087:  50%|█████     | 14/28 [00:46<00:53,  3.84s/it]epoch 1 loss 1.86481:  50%|█████     | 14/28 [00:47<00:53,  3.84s/it]epoch 1 loss 1.86481:  54%|█████▎    | 15/28 [00:47<00:36,  2.81s/it]epoch 1 loss 1.84546:  54%|█████▎    | 15/28 [00:47<00:36,  2.81s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6013[0m
[32m  eval_f1 = 0.2472[0m
[32m  eval_mcc = 0.5783[0m
[32m  eval_precision = 0.3407[0m
[32m  eval_recall = 0.2299[0m
[32m  ********************[0m
[32m  Best f1:0.2472[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5783[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.84546:  57%|█████▋    | 16/28 [00:59<01:06,  5.54s/it]epoch 1 loss 1.82458:  57%|█████▋    | 16/28 [00:59<01:06,  5.54s/it]epoch 1 loss 1.82458:  61%|██████    | 17/28 [00:59<00:43,  4.00s/it]epoch 1 loss 1.80973:  61%|██████    | 17/28 [00:59<00:43,  4.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6084[0m
[32m  eval_f1 = 0.2563[0m
[32m  eval_mcc = 0.5863[0m
[32m  eval_precision = 0.3628[0m
[32m  eval_recall = 0.2397[0m
[32m  ********************[0m
[32m  Best f1:0.2563[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5863[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.80973:  64%|██████▍   | 18/28 [01:10<01:00,  6.08s/it]epoch 1 loss 1.79018:  64%|██████▍   | 18/28 [01:10<01:00,  6.08s/it]epoch 1 loss 1.79018:  68%|██████▊   | 19/28 [01:10<00:39,  4.38s/it]epoch 1 loss 1.78366:  68%|██████▊   | 19/28 [01:11<00:39,  4.38s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6129[0m
[32m  eval_f1 = 0.2724[0m
[32m  eval_mcc = 0.5915[0m
[32m  eval_precision = 0.3722[0m
[32m  eval_recall = 0.2568[0m
[32m  ********************[0m
[32m  Best f1:0.2724[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.5915[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.78366:  71%|███████▏  | 20/28 [01:22<00:51,  6.42s/it]epoch 1 loss 1.77416:  71%|███████▏  | 20/28 [01:22<00:51,  6.42s/it]epoch 1 loss 1.77416:  75%|███████▌  | 21/28 [01:22<00:32,  4.62s/it]epoch 1 loss 1.7701:  75%|███████▌  | 21/28 [01:22<00:32,  4.62s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6199[0m
[32m  eval_f1 = 0.2843[0m
[32m  eval_mcc = 0.599[0m
[32m  eval_precision = 0.3752[0m
[32m  eval_recall = 0.2671[0m
[32m  ********************[0m
[32m  Best f1:0.2843[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.599[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.7701:  79%|███████▊  | 22/28 [01:33<00:39,  6.50s/it]epoch 1 loss 1.76381:  79%|███████▊  | 22/28 [01:33<00:39,  6.50s/it]epoch 1 loss 1.76381:  82%|████████▏ | 23/28 [01:33<00:23,  4.68s/it]epoch 1 loss 1.75694:  82%|████████▏ | 23/28 [01:34<00:23,  4.68s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6271[0m
[32m  eval_f1 = 0.3085[0m
[32m  eval_mcc = 0.606[0m
[32m  eval_precision = 0.3943[0m
[32m  eval_recall = 0.2895[0m
[32m  ********************[0m
[32m  Best f1:0.3085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.606[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.75694:  86%|████████▌ | 24/28 [01:44<00:25,  6.48s/it]epoch 1 loss 1.74538:  86%|████████▌ | 24/28 [01:44<00:25,  6.48s/it]epoch 1 loss 1.74538:  89%|████████▉ | 25/28 [01:44<00:13,  4.66s/it]epoch 1 loss 1.72873:  89%|████████▉ | 25/28 [01:45<00:13,  4.66s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6274[0m
[32m  eval_f1 = 0.3102[0m
[32m  eval_mcc = 0.6062[0m
[32m  eval_precision = 0.3896[0m
[32m  eval_recall = 0.2916[0m
[32m  ********************[0m
[32m  Best f1:0.3102[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6062[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.72873:  93%|█████████▎| 26/28 [01:54<00:12,  6.28s/it]epoch 1 loss 1.71681:  93%|█████████▎| 26/28 [01:55<00:12,  6.28s/it]epoch 1 loss 1.71681:  96%|█████████▋| 27/28 [01:55<00:04,  4.52s/it]epoch 1 loss 1.70517:  96%|█████████▋| 27/28 [01:55<00:04,  4.52s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6298[0m
[32m  eval_f1 = 0.3154[0m
[32m  eval_mcc = 0.6085[0m
[32m  eval_precision = 0.3999[0m
[32m  eval_recall = 0.2958[0m
[32m  ********************[0m
[32m  Best f1:0.3154[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6085[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 1 loss 1.70517: 100%|██████████| 28/28 [02:05<00:00,  6.18s/it]epoch 1 loss 1.70517: 100%|██████████| 28/28 [02:05<00:00,  4.48s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.40623:   0%|          | 0/28 [00:00<?, ?it/s]epoch 2 loss 1.40623:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s]epoch 2 loss 1.37273:   4%|▎         | 1/28 [00:00<00:11,  2.42it/s][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6333[0m
[32m  eval_f1 = 0.3182[0m
[32m  eval_mcc = 0.612[0m
[32m  eval_precision = 0.4145[0m
[32m  eval_recall = 0.298[0m
[32m  ********************[0m
[32m  Best f1:0.3182[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.612[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37273:   7%|▋         | 2/28 [00:10<02:41,  6.21s/it]epoch 2 loss 1.39817:   7%|▋         | 2/28 [00:11<02:41,  6.21s/it]epoch 2 loss 1.39817:  11%|█         | 3/28 [00:11<01:29,  3.57s/it]epoch 2 loss 1.38339:  11%|█         | 3/28 [00:11<01:29,  3.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6371[0m
[32m  eval_f1 = 0.3244[0m
[32m  eval_mcc = 0.6162[0m
[32m  eval_precision = 0.4146[0m
[32m  eval_recall = 0.3025[0m
[32m  ********************[0m
[32m  Best f1:0.3244[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6162[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.38339:  14%|█▍        | 4/28 [00:21<02:28,  6.17s/it]epoch 2 loss 1.3883:  14%|█▍        | 4/28 [00:21<02:28,  6.17s/it] epoch 2 loss 1.3883:  18%|█▊        | 5/28 [00:21<01:34,  4.10s/it]epoch 2 loss 1.36871:  18%|█▊        | 5/28 [00:22<01:34,  4.10s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.641[0m
[32m  eval_f1 = 0.3279[0m
[32m  eval_mcc = 0.6205[0m
[32m  eval_precision = 0.4173[0m
[32m  eval_recall = 0.3058[0m
[32m  ********************[0m
[32m  Best f1:0.3279[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6205[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.36871:  21%|██▏       | 6/28 [00:31<02:14,  6.12s/it]epoch 2 loss 1.36917:  21%|██▏       | 6/28 [00:32<02:14,  6.12s/it]epoch 2 loss 1.36917:  25%|██▌       | 7/28 [00:32<01:29,  4.26s/it]epoch 2 loss 1.37784:  25%|██▌       | 7/28 [00:32<01:29,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.77it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.77it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6417[0m
[32m  eval_f1 = 0.329[0m
[32m  eval_mcc = 0.621[0m
[32m  eval_precision = 0.4164[0m
[32m  eval_recall = 0.3064[0m
[32m  ********************[0m
[32m  Best f1:0.329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.37784:  29%|██▊       | 8/28 [00:41<02:00,  6.01s/it]epoch 2 loss 1.36495:  29%|██▊       | 8/28 [00:42<02:00,  6.01s/it]epoch 2 loss 1.36495:  32%|███▏      | 9/28 [00:42<01:20,  4.26s/it]epoch 2 loss 1.35199:  32%|███▏      | 9/28 [00:42<01:20,  4.26s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6414[0m
[32m  eval_f1 = 0.3287[0m
[32m  eval_mcc = 0.6205[0m
[32m  eval_precision = 0.4148[0m
[32m  eval_recall = 0.3062[0m

epoch 2 loss 1.35199:  36%|███▌      | 10/28 [00:46<01:14,  4.12s/it]epoch 2 loss 1.35202:  36%|███▌      | 10/28 [00:46<01:14,  4.12s/it]epoch 2 loss 1.35202:  39%|███▉      | 11/28 [00:46<00:50,  2.98s/it]epoch 2 loss 1.35339:  39%|███▉      | 11/28 [00:46<00:50,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6424[0m
[32m  eval_f1 = 0.329[0m
[32m  eval_mcc = 0.6216[0m
[32m  eval_precision = 0.4254[0m
[32m  eval_recall = 0.3063[0m
[32m  ********************[0m
[32m  Best f1:0.329[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6216[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35339:  43%|████▎     | 12/28 [00:53<01:05,  4.09s/it]epoch 2 loss 1.35784:  43%|████▎     | 12/28 [00:53<01:05,  4.09s/it]epoch 2 loss 1.35784:  46%|████▋     | 13/28 [00:53<00:44,  2.98s/it]epoch 2 loss 1.34729:  46%|████▋     | 13/28 [00:54<00:44,  2.98s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6467[0m
[32m  eval_f1 = 0.3317[0m
[32m  eval_mcc = 0.6259[0m
[32m  eval_precision = 0.4251[0m
[32m  eval_recall = 0.3094[0m
[32m  ********************[0m
[32m  Best f1:0.3317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6259[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34729:  50%|█████     | 14/28 [01:02<01:08,  4.92s/it]epoch 2 loss 1.34388:  50%|█████     | 14/28 [01:03<01:08,  4.92s/it]epoch 2 loss 1.34388:  54%|█████▎    | 15/28 [01:03<00:46,  3.56s/it]epoch 2 loss 1.34393:  54%|█████▎    | 15/28 [01:03<00:46,  3.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6491[0m
[32m  eval_f1 = 0.3347[0m
[32m  eval_mcc = 0.6285[0m
[32m  eval_precision = 0.4292[0m
[32m  eval_recall = 0.3121[0m
[32m  ********************[0m
[32m  Best f1:0.3347[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6285[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34393:  57%|█████▋    | 16/28 [01:11<00:58,  4.84s/it]epoch 2 loss 1.35032:  57%|█████▋    | 16/28 [01:11<00:58,  4.84s/it]epoch 2 loss 1.35032:  61%|██████    | 17/28 [01:11<00:38,  3.51s/it]epoch 2 loss 1.35698:  61%|██████    | 17/28 [01:12<00:38,  3.51s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.652[0m
[32m  eval_f1 = 0.3353[0m
[32m  eval_mcc = 0.6317[0m
[32m  eval_precision = 0.4253[0m
[32m  eval_recall = 0.3148[0m
[32m  ********************[0m
[32m  Best f1:0.3353[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6317[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35698:  64%|██████▍   | 18/28 [01:21<00:54,  5.41s/it]epoch 2 loss 1.35326:  64%|██████▍   | 18/28 [01:21<00:54,  5.41s/it]epoch 2 loss 1.35326:  68%|██████▊   | 19/28 [01:21<00:35,  3.91s/it]epoch 2 loss 1.35348:  68%|██████▊   | 19/28 [01:22<00:35,  3.91s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.654[0m
[32m  eval_f1 = 0.3381[0m
[32m  eval_mcc = 0.6342[0m
[32m  eval_precision = 0.414[0m
[32m  eval_recall = 0.3176[0m
[32m  ********************[0m
[32m  Best f1:0.3381[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6342[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.35348:  71%|███████▏  | 20/28 [01:30<00:41,  5.18s/it]epoch 2 loss 1.34981:  71%|███████▏  | 20/28 [01:30<00:41,  5.18s/it]epoch 2 loss 1.34981:  75%|███████▌  | 21/28 [01:30<00:26,  3.75s/it]epoch 2 loss 1.34649:  75%|███████▌  | 21/28 [01:30<00:26,  3.75s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6541[0m
[32m  eval_f1 = 0.3398[0m
[32m  eval_mcc = 0.635[0m
[32m  eval_precision = 0.4163[0m
[32m  eval_recall = 0.3184[0m
[32m  ********************[0m
[32m  Best f1:0.3398[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.635[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34649:  79%|███████▊  | 22/28 [01:37<00:27,  4.63s/it]epoch 2 loss 1.34385:  79%|███████▊  | 22/28 [01:37<00:27,  4.63s/it]epoch 2 loss 1.34385:  82%|████████▏ | 23/28 [01:37<00:16,  3.37s/it]epoch 2 loss 1.34249:  82%|████████▏ | 23/28 [01:37<00:16,  3.37s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.77it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6544[0m
[32m  eval_f1 = 0.3445[0m
[32m  eval_mcc = 0.6356[0m
[32m  eval_precision = 0.4485[0m
[32m  eval_recall = 0.3207[0m
[32m  ********************[0m
[32m  Best f1:0.3445[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6356[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34249:  86%|████████▌ | 24/28 [01:47<00:21,  5.25s/it]epoch 2 loss 1.34193:  86%|████████▌ | 24/28 [01:47<00:21,  5.25s/it]epoch 2 loss 1.34193:  89%|████████▉ | 25/28 [01:47<00:11,  3.80s/it]epoch 2 loss 1.34626:  89%|████████▉ | 25/28 [01:48<00:11,  3.80s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.74it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.655[0m
[32m  eval_f1 = 0.3476[0m
[32m  eval_mcc = 0.6361[0m
[32m  eval_precision = 0.4604[0m
[32m  eval_recall = 0.3229[0m
[32m  ********************[0m
[32m  Best f1:0.3476[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6361[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.34626:  93%|█████████▎| 26/28 [01:56<00:10,  5.19s/it]epoch 2 loss 1.34445:  93%|█████████▎| 26/28 [01:56<00:10,  5.19s/it]epoch 2 loss 1.34445:  96%|█████████▋| 27/28 [01:56<00:03,  3.76s/it]epoch 2 loss 1.33791:  96%|█████████▋| 27/28 [01:56<00:03,  3.76s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.70it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6564[0m
[32m  eval_f1 = 0.3509[0m
[32m  eval_mcc = 0.6377[0m
[32m  eval_precision = 0.4664[0m
[32m  eval_recall = 0.3247[0m
[32m  ********************[0m
[32m  Best f1:0.3509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6377[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 2 loss 1.33791: 100%|██████████| 28/28 [02:03<00:00,  4.63s/it]epoch 2 loss 1.33791: 100%|██████████| 28/28 [02:03<00:00,  4.40s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.20327:   0%|          | 0/28 [00:00<?, ?it/s]epoch 3 loss 1.20327:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s]epoch 3 loss 1.2177:   4%|▎         | 1/28 [00:00<00:11,  2.39it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6582[0m
[32m  eval_f1 = 0.3545[0m
[32m  eval_mcc = 0.6393[0m
[32m  eval_precision = 0.4614[0m
[32m  eval_recall = 0.3286[0m
[32m  ********************[0m
[32m  Best f1:0.3545[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6393[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2177:   7%|▋         | 2/28 [00:06<01:37,  3.75s/it]epoch 3 loss 1.19994:   7%|▋         | 2/28 [00:06<01:37,  3.75s/it]epoch 3 loss 1.19994:  11%|█         | 3/28 [00:06<00:55,  2.23s/it]epoch 3 loss 1.19358:  11%|█         | 3/28 [00:07<00:55,  2.23s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6587[0m
[32m  eval_f1 = 0.3566[0m
[32m  eval_mcc = 0.6395[0m
[32m  eval_precision = 0.461[0m
[32m  eval_recall = 0.3299[0m
[32m  ********************[0m
[32m  Best f1:0.3566[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6395[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.19358:  14%|█▍        | 4/28 [00:13<01:30,  3.76s/it]epoch 3 loss 1.20403:  14%|█▍        | 4/28 [00:13<01:30,  3.76s/it]epoch 3 loss 1.20403:  18%|█▊        | 5/28 [00:13<00:58,  2.56s/it]epoch 3 loss 1.22904:  18%|█▊        | 5/28 [00:13<00:58,  2.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6602[0m
[32m  eval_f1 = 0.3605[0m
[32m  eval_mcc = 0.6409[0m
[32m  eval_precision = 0.4701[0m
[32m  eval_recall = 0.3332[0m
[32m  ********************[0m
[32m  Best f1:0.3605[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6409[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.22904:  21%|██▏       | 6/28 [00:21<01:38,  4.49s/it]epoch 3 loss 1.26063:  21%|██▏       | 6/28 [00:22<01:38,  4.49s/it]epoch 3 loss 1.26063:  25%|██▌       | 7/28 [00:22<01:06,  3.15s/it]epoch 3 loss 1.2602:  25%|██▌       | 7/28 [00:22<01:06,  3.15s/it] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6617[0m
[32m  eval_f1 = 0.3621[0m
[32m  eval_mcc = 0.6423[0m
[32m  eval_precision = 0.4741[0m
[32m  eval_recall = 0.3346[0m
[32m  ********************[0m
[32m  Best f1:0.3621[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6423[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.2602:  29%|██▊       | 8/28 [00:32<01:50,  5.51s/it]epoch 3 loss 1.25744:  29%|██▊       | 8/28 [00:33<01:50,  5.51s/it]epoch 3 loss 1.25744:  32%|███▏      | 9/28 [00:33<01:14,  3.92s/it]epoch 3 loss 1.24738:  32%|███▏      | 9/28 [00:33<01:14,  3.92s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6622[0m
[32m  eval_f1 = 0.3652[0m
[32m  eval_mcc = 0.6427[0m
[32m  eval_precision = 0.4801[0m
[32m  eval_recall = 0.3377[0m
[32m  ********************[0m
[32m  Best f1:0.3652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6427[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24738:  36%|███▌      | 10/28 [00:43<01:47,  5.97s/it]epoch 3 loss 1.25525:  36%|███▌      | 10/28 [00:44<01:47,  5.97s/it]epoch 3 loss 1.25525:  39%|███▉      | 11/28 [00:44<01:12,  4.27s/it]epoch 3 loss 1.26795:  39%|███▉      | 11/28 [00:44<01:12,  4.27s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.73it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6632[0m
[32m  eval_f1 = 0.3689[0m
[32m  eval_mcc = 0.6436[0m
[32m  eval_precision = 0.4863[0m
[32m  eval_recall = 0.3408[0m
[32m  ********************[0m
[32m  Best f1:0.3689[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6436[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.26795:  43%|████▎     | 12/28 [00:54<01:38,  6.17s/it]epoch 3 loss 1.26203:  43%|████▎     | 12/28 [00:54<01:38,  6.17s/it]epoch 3 loss 1.26203:  46%|████▋     | 13/28 [00:54<01:06,  4.43s/it]epoch 3 loss 1.25326:  46%|████▋     | 13/28 [00:55<01:06,  4.43s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6633[0m
[32m  eval_f1 = 0.3714[0m
[32m  eval_mcc = 0.6441[0m
[32m  eval_precision = 0.4858[0m
[32m  eval_recall = 0.3426[0m
[32m  ********************[0m
[32m  Best f1:0.3714[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6441[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25326:  50%|█████     | 14/28 [01:05<01:28,  6.35s/it]epoch 3 loss 1.2526:  50%|█████     | 14/28 [01:06<01:28,  6.35s/it] epoch 3 loss 1.2526:  54%|█████▎    | 15/28 [01:06<00:59,  4.56s/it]epoch 3 loss 1.24773:  54%|█████▎    | 15/28 [01:06<00:59,  4.56s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6638[0m
[32m  eval_f1 = 0.3721[0m
[32m  eval_mcc = 0.6448[0m
[32m  eval_precision = 0.491[0m
[32m  eval_recall = 0.3425[0m
[32m  ********************[0m
[32m  Best f1:0.3721[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6448[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24773:  57%|█████▋    | 16/28 [01:16<01:16,  6.39s/it]epoch 3 loss 1.24644:  57%|█████▋    | 16/28 [01:17<01:16,  6.39s/it]epoch 3 loss 1.24644:  61%|██████    | 17/28 [01:17<00:50,  4.60s/it]epoch 3 loss 1.24811:  61%|██████    | 17/28 [01:17<00:50,  4.60s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.69it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.74it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6647[0m
[32m  eval_f1 = 0.3725[0m
[32m  eval_mcc = 0.6459[0m
[32m  eval_precision = 0.4927[0m
[32m  eval_recall = 0.3429[0m
[32m  ********************[0m
[32m  Best f1:0.3725[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6459[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24811:  64%|██████▍   | 18/28 [01:27<01:01,  6.18s/it]epoch 3 loss 1.24701:  64%|██████▍   | 18/28 [01:27<01:01,  6.18s/it]epoch 3 loss 1.24701:  68%|██████▊   | 19/28 [01:27<00:40,  4.45s/it]epoch 3 loss 1.24434:  68%|██████▊   | 19/28 [01:27<00:40,  4.45s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6651[0m
[32m  eval_f1 = 0.3724[0m
[32m  eval_mcc = 0.6465[0m
[32m  eval_precision = 0.4923[0m
[32m  eval_recall = 0.3429[0m
[32m  ********************[0m
[32m  Best MCC:0.6465[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24434:  71%|███████▏  | 20/28 [01:34<00:41,  5.21s/it]epoch 3 loss 1.24137:  71%|███████▏  | 20/28 [01:34<00:41,  5.21s/it]epoch 3 loss 1.24137:  75%|███████▌  | 21/28 [01:34<00:26,  3.78s/it]epoch 3 loss 1.24737:  75%|███████▌  | 21/28 [01:35<00:26,  3.78s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.71it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.72it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.71it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.71it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.72it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.72it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.72it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.72it/s][A100%|██████████| 10/10 [00:03<00:00,  2.96it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6657[0m
[32m  eval_f1 = 0.3721[0m
[32m  eval_mcc = 0.6474[0m
[32m  eval_precision = 0.4924[0m
[32m  eval_recall = 0.3429[0m
[32m  ********************[0m
[32m  Best MCC:0.6474[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24737:  79%|███████▊  | 22/28 [01:41<00:28,  4.74s/it]epoch 3 loss 1.24871:  79%|███████▊  | 22/28 [01:42<00:28,  4.74s/it]epoch 3 loss 1.24871:  82%|████████▏ | 23/28 [01:42<00:17,  3.44s/it]epoch 3 loss 1.25065:  82%|████████▏ | 23/28 [01:42<00:17,  3.44s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.67it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.70it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.71it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.72it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.73it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.74it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6666[0m
[32m  eval_f1 = 0.3721[0m
[32m  eval_mcc = 0.6484[0m
[32m  eval_precision = 0.4911[0m
[32m  eval_recall = 0.3434[0m
[32m  ********************[0m
[32m  Best MCC:0.6484[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25065:  86%|████████▌ | 24/28 [01:49<00:18,  4.54s/it]epoch 3 loss 1.25037:  86%|████████▌ | 24/28 [01:49<00:18,  4.54s/it]epoch 3 loss 1.25037:  89%|████████▉ | 25/28 [01:49<00:09,  3.30s/it]epoch 3 loss 1.25226:  89%|████████▉ | 25/28 [01:50<00:09,  3.30s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6681[0m
[32m  eval_f1 = 0.373[0m
[32m  eval_mcc = 0.6498[0m
[32m  eval_precision = 0.4891[0m
[32m  eval_recall = 0.3449[0m
[32m  ********************[0m
[32m  Best f1:0.373[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6498[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.25226:  93%|█████████▎| 26/28 [01:59<00:10,  5.11s/it]epoch 3 loss 1.24915:  93%|█████████▎| 26/28 [01:59<00:10,  5.11s/it]epoch 3 loss 1.24915:  96%|█████████▋| 27/28 [01:59<00:03,  3.71s/it]epoch 3 loss 1.24244:  96%|█████████▋| 27/28 [01:59<00:03,  3.71s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.78it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.77it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.01it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6689[0m
[32m  eval_f1 = 0.374[0m
[32m  eval_mcc = 0.6503[0m
[32m  eval_precision = 0.4895[0m
[32m  eval_recall = 0.346[0m
[32m  ********************[0m
[32m  Best f1:0.374[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6503[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 3 loss 1.24244: 100%|██████████| 28/28 [02:09<00:00,  5.67s/it]epoch 3 loss 1.24244: 100%|██████████| 28/28 [02:09<00:00,  4.64s/it]
  0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.32313:   0%|          | 0/28 [00:00<?, ?it/s]epoch 4 loss 1.32313:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s]epoch 4 loss 1.2532:   4%|▎         | 1/28 [00:00<00:11,  2.32it/s] [32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.68it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.72it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6689[0m
[32m  eval_f1 = 0.3745[0m
[32m  eval_mcc = 0.6501[0m
[32m  eval_precision = 0.4913[0m
[32m  eval_recall = 0.3459[0m
[32m  ********************[0m
[32m  Best f1:0.3745[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.2532:   7%|▋         | 2/28 [00:06<01:41,  3.89s/it]epoch 4 loss 1.26278:   7%|▋         | 2/28 [00:07<01:41,  3.89s/it]epoch 4 loss 1.26278:  11%|█         | 3/28 [00:07<00:57,  2.31s/it]epoch 4 loss 1.26219:  11%|█         | 3/28 [00:07<00:57,  2.31s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.65it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.71it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.73it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.74it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6698[0m
[32m  eval_f1 = 0.3754[0m
[32m  eval_mcc = 0.6509[0m
[32m  eval_precision = 0.4938[0m
[32m  eval_recall = 0.3463[0m
[32m  ********************[0m
[32m  Best f1:0.3754[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6509[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.26219:  14%|█▍        | 4/28 [00:16<02:04,  5.20s/it]epoch 4 loss 1.22819:  14%|█▍        | 4/28 [00:17<02:04,  5.20s/it]epoch 4 loss 1.22819:  18%|█▊        | 5/28 [00:17<01:19,  3.47s/it]epoch 4 loss 1.21805:  18%|█▊        | 5/28 [00:17<01:19,  3.47s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.69it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.73it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.74it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  2.99it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6694[0m
[32m  eval_f1 = 0.3751[0m
[32m  eval_mcc = 0.6506[0m
[32m  eval_precision = 0.4922[0m
[32m  eval_recall = 0.3459[0m

epoch 4 loss 1.21805:  21%|██▏       | 6/28 [00:21<01:18,  3.58s/it]epoch 4 loss 1.23279:  21%|██▏       | 6/28 [00:21<01:18,  3.58s/it]epoch 4 loss 1.23279:  25%|██▌       | 7/28 [00:21<00:53,  2.54s/it]epoch 4 loss 1.22586:  25%|██▌       | 7/28 [00:21<00:53,  2.54s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6694[0m
[32m  eval_f1 = 0.3755[0m
[32m  eval_mcc = 0.6505[0m
[32m  eval_precision = 0.4929[0m
[32m  eval_recall = 0.346[0m
[32m  ********************[0m
[32m  Best f1:0.3755[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.22586:  29%|██▊       | 8/28 [00:26<01:06,  3.31s/it]epoch 4 loss 1.22399:  29%|██▊       | 8/28 [00:26<01:06,  3.31s/it]epoch 4 loss 1.22399:  32%|███▏      | 9/28 [00:26<00:45,  2.40s/it]epoch 4 loss 1.22507:  32%|███▏      | 9/28 [00:27<00:45,  2.40s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6696[0m
[32m  eval_f1 = 0.3768[0m
[32m  eval_mcc = 0.6507[0m
[32m  eval_precision = 0.4931[0m
[32m  eval_recall = 0.3469[0m
[32m  ********************[0m
[32m  Best f1:0.3768[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.22507:  36%|███▌      | 10/28 [00:31<00:57,  3.19s/it]epoch 4 loss 1.23471:  36%|███▌      | 10/28 [00:32<00:57,  3.19s/it]epoch 4 loss 1.23471:  39%|███▉      | 11/28 [00:32<00:39,  2.34s/it]epoch 4 loss 1.23057:  39%|███▉      | 11/28 [00:32<00:39,  2.34s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6702[0m
[32m  eval_f1 = 0.3777[0m
[32m  eval_mcc = 0.6515[0m
[32m  eval_precision = 0.4937[0m
[32m  eval_recall = 0.3476[0m
[32m  ********************[0m
[32m  Best f1:0.3777[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6515[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.23057:  43%|████▎     | 12/28 [00:38<00:55,  3.50s/it]epoch 4 loss 1.22883:  43%|████▎     | 12/28 [00:38<00:55,  3.50s/it]epoch 4 loss 1.22883:  46%|████▋     | 13/28 [00:38<00:38,  2.57s/it]epoch 4 loss 1.22115:  46%|████▋     | 13/28 [00:39<00:38,  2.57s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6701[0m
[32m  eval_f1 = 0.3778[0m
[32m  eval_mcc = 0.6515[0m
[32m  eval_precision = 0.4934[0m
[32m  eval_recall = 0.3477[0m
[32m  ********************[0m
[32m  Best f1:0.3778[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.22115:  50%|█████     | 14/28 [00:43<00:46,  3.29s/it]epoch 4 loss 1.2203:  50%|█████     | 14/28 [00:44<00:46,  3.29s/it] epoch 4 loss 1.2203:  54%|█████▎    | 15/28 [00:44<00:31,  2.42s/it]epoch 4 loss 1.2224:  54%|█████▎    | 15/28 [00:44<00:31,  2.42s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6705[0m
[32m  eval_f1 = 0.3779[0m
[32m  eval_mcc = 0.6518[0m
[32m  eval_precision = 0.4934[0m
[32m  eval_recall = 0.3479[0m
[32m  ********************[0m
[32m  Best f1:0.3779[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.6518[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.2224:  57%|█████▋    | 16/28 [00:51<00:47,  3.93s/it]epoch 4 loss 1.22084:  57%|█████▋    | 16/28 [00:51<00:47,  3.93s/it]epoch 4 loss 1.22084:  61%|██████    | 17/28 [00:51<00:31,  2.88s/it]epoch 4 loss 1.21399:  61%|██████    | 17/28 [00:52<00:31,  2.88s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6707[0m
[32m  eval_f1 = 0.3792[0m
[32m  eval_mcc = 0.652[0m
[32m  eval_precision = 0.4942[0m
[32m  eval_recall = 0.3492[0m
[32m  ********************[0m
[32m  Best f1:0.3792[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.21399:  64%|██████▍   | 18/28 [01:02<00:51,  5.13s/it]epoch 4 loss 1.21297:  64%|██████▍   | 18/28 [01:02<00:51,  5.13s/it]epoch 4 loss 1.21297:  68%|██████▊   | 19/28 [01:02<00:33,  3.72s/it]epoch 4 loss 1.21661:  68%|██████▊   | 19/28 [01:03<00:33,  3.72s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6704[0m
[32m  eval_f1 = 0.3794[0m
[32m  eval_mcc = 0.6516[0m
[32m  eval_precision = 0.4939[0m
[32m  eval_recall = 0.3495[0m
[32m  ********************[0m
[32m  Best f1:0.3794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m

epoch 4 loss 1.21661:  71%|███████▏  | 20/28 [01:10<00:38,  4.86s/it]epoch 4 loss 1.21393:  71%|███████▏  | 20/28 [01:10<00:38,  4.86s/it]epoch 4 loss 1.21393:  75%|███████▌  | 21/28 [01:10<00:24,  3.53s/it]epoch 4 loss 1.21551:  75%|███████▌  | 21/28 [01:11<00:24,  3.53s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6705[0m
[32m  eval_f1 = 0.3793[0m
[32m  eval_mcc = 0.6517[0m
[32m  eval_precision = 0.4934[0m
[32m  eval_recall = 0.3496[0m

epoch 4 loss 1.21551:  79%|███████▊  | 22/28 [01:14<00:21,  3.61s/it]epoch 4 loss 1.21422:  79%|███████▊  | 22/28 [01:14<00:21,  3.61s/it]epoch 4 loss 1.21422:  82%|████████▏ | 23/28 [01:14<00:13,  2.64s/it]epoch 4 loss 1.21611:  82%|████████▏ | 23/28 [01:15<00:13,  2.64s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.76it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6706[0m
[32m  eval_f1 = 0.3793[0m
[32m  eval_mcc = 0.6519[0m
[32m  eval_precision = 0.4919[0m
[32m  eval_recall = 0.3496[0m

epoch 4 loss 1.21611:  86%|████████▌ | 24/28 [01:18<00:11,  2.99s/it]epoch 4 loss 1.21448:  86%|████████▌ | 24/28 [01:19<00:11,  2.99s/it]epoch 4 loss 1.21448:  89%|████████▉ | 25/28 [01:19<00:06,  2.21s/it]epoch 4 loss 1.21477:  89%|████████▉ | 25/28 [01:19<00:06,  2.21s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.76it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.76it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.76it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.76it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.76it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.76it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.76it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.76it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6706[0m
[32m  eval_f1 = 0.3794[0m
[32m  eval_mcc = 0.6519[0m
[32m  eval_precision = 0.4918[0m
[32m  eval_recall = 0.3496[0m

epoch 4 loss 1.21477:  93%|█████████▎| 26/28 [01:22<00:05,  2.68s/it]epoch 4 loss 1.21452:  93%|█████████▎| 26/28 [01:23<00:05,  2.68s/it]epoch 4 loss 1.21452:  96%|█████████▋| 27/28 [01:23<00:01,  2.00s/it]epoch 4 loss 1.20971:  96%|█████████▋| 27/28 [01:23<00:01,  2.00s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s][A
 10%|█         | 1/10 [00:00<00:03,  2.75it/s][A
 20%|██        | 2/10 [00:00<00:02,  2.75it/s][A
 30%|███       | 3/10 [00:01<00:02,  2.75it/s][A
 40%|████      | 4/10 [00:01<00:02,  2.75it/s][A
 50%|█████     | 5/10 [00:01<00:01,  2.75it/s][A
 60%|██████    | 6/10 [00:02<00:01,  2.75it/s][A
 70%|███████   | 7/10 [00:02<00:01,  2.75it/s][A
 80%|████████  | 8/10 [00:02<00:00,  2.75it/s][A
 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s][A100%|██████████| 10/10 [00:03<00:00,  3.00it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6708[0m
[32m  eval_f1 = 0.3794[0m
[32m  eval_mcc = 0.652[0m
[32m  eval_precision = 0.4919[0m
[32m  eval_recall = 0.3497[0m
[32m  ********************[0m
[32m  Best f1:0.3794[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-f1/model.bin[0m
[32m  ********************[0m
[32m  Best MCC:0.652[0m
[32m  ********************[0m
[32mSaving model checkpoint to ./pos_res_java/random/saved_codebertmodels/1/layer_4/checkpoint-best-mcc/model.bin[0m

epoch 4 loss 1.20971: 100%|██████████| 28/28 [01:33<00:00,  4.38s/it]epoch 4 loss 1.20971: 100%|██████████| 28/28 [01:33<00:00,  3.33s/it][32m***** Running evaluation *****[0m
[32m  Num examples = 293[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.58it/s] 20%|██        | 2/10 [00:00<00:03,  2.64it/s] 30%|███       | 3/10 [00:01<00:02,  2.69it/s] 40%|████      | 4/10 [00:01<00:02,  2.72it/s] 50%|█████     | 5/10 [00:01<00:01,  2.73it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.75it/s] 80%|████████  | 8/10 [00:02<00:00,  2.75it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.97it/s][32m***** Eval results *****[0m
[32m  eval_acc = 0.6708[0m
[32m  eval_f1 = 0.3794[0m
[32m  eval_mcc = 0.652[0m
[32m  eval_precision = 0.4919[0m
[32m  eval_recall = 0.3497[0m
[32m***** Running Test *****[0m
[32m  Num examples = 295[0m
[32m  Batch size = 32[0m

  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:03,  2.76it/s] 20%|██        | 2/10 [00:00<00:02,  2.76it/s] 30%|███       | 3/10 [00:01<00:02,  2.76it/s] 40%|████      | 4/10 [00:01<00:02,  2.75it/s] 50%|█████     | 5/10 [00:01<00:01,  2.75it/s] 60%|██████    | 6/10 [00:02<00:01,  2.74it/s] 70%|███████   | 7/10 [00:02<00:01,  2.74it/s] 80%|████████  | 8/10 [00:02<00:00,  2.74it/s] 90%|█████████ | 9/10 [00:03<00:00,  2.75it/s]100%|██████████| 10/10 [00:03<00:00,  2.98it/s][32m***** Test results *****[0m
[32m  eval_acc = 0.6537[0m
[32m  eval_f1 = 0.3347[0m
[32m  eval_mcc = 0.6351[0m
[32m  eval_precision = 0.4321[0m
[32m  eval_recall = 0.3104[0m

